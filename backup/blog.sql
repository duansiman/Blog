-- MySQL dump 10.13  Distrib 5.7.19, for Linux (x86_64)
--
-- Host: localhost    Database: blog
-- ------------------------------------------------------
-- Server version	5.7.19-log

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `t_article`
--

DROP TABLE IF EXISTS `t_article`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `t_article` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `uid` bigint(20) DEFAULT NULL,
  `article_id` bigint(20) DEFAULT NULL,
  `title` varchar(256) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `category_id` tinyint(4) DEFAULT NULL,
  `label_id` varchar(256) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `digest` varchar(256) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `cover` varchar(256) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `content` varchar(64) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `comment_id` varchar(256) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `read_amount` int(11) DEFAULT NULL,
  `favour_amount` int(11) DEFAULT NULL,
  `comment_amount` int(11) DEFAULT NULL,
  `status` tinyint(4) DEFAULT NULL,
  `top_status` tinyint(4) DEFAULT NULL,
  `top_end_time` bigint(20) DEFAULT NULL,
  `create_time` bigint(20) DEFAULT NULL,
  `release_time` bigint(20) DEFAULT NULL,
  `update_time` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=100824 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `t_article`
--

LOCK TABLES `t_article` WRITE;
/*!40000 ALTER TABLE `t_article` DISABLE KEYS */;
INSERT INTO `t_article` VALUES (100031,0,2020,'MySQL之——表数据文件损坏导致数据库无法启动',3,'[7]','一、问题日志\n\n2017-08-31 14:18:05 4122 [Note] InnoDB: Database was not shutdown normally!\n2017-08-31 14:18...',NULL,'csdn/mysql/17_0_1_0_1504235155.096132.html',NULL,3,0,0,1,1,1509465600000,1504155619000,1504155619000,1504155619000),(100032,0,2019,'史上最简单的 MySQL 教程（三十二）「子查询（下）」',3,'[7,8,9,10,11]','子查询子查询：sub query，查询是在某个查询结果之上进行的，一条select语句内部包含了另外一条select语句。行子查询行子查询，返回的结果可以使一行多列或者多行多列。需求：查询学生表中，年...',NULL,'csdn/mysql/17_0_1_0_1504235138.68905.html',NULL,0,0,0,1,1,1509465600000,1503802800000,1503802800000,1503802800000),(100033,0,2273,'设计模式之单例',2,'[12]','单例模式的意义有些对象我们只需要一个：线程池、缓存、硬件设备等 \n如果多个实例会有造成冲突、结果的不一致性等问题 \n是否可以用静态变量方式来实现？ \n或者程序员之间协商个全局变量？ \n单例模式：确保一...',NULL,'csdn/java/1_2_1_7_1504264578.775785.html',NULL,0,0,0,1,1,1509465600000,1497628835000,1497628835000,1497628835000),(100034,0,2269,'设计模式之适配器模式',2,'[12]','现实生活中一些适配器例子例题：用火鸡冒充鸭子 \n适配器模式原理： \n适配器模式：将一个类的接口转换成另一种接口.让原本接口不兼容的类可以兼容. \n \n从用户的角度看不到被适配者，是解耦的 \n用户调用适...',NULL,'csdn/java/1_2_1_10_1504264574.475593.html',NULL,0,0,0,1,1,1509465600000,1497729617000,1497729617000,1497729617000),(100035,0,2279,'设计模式之策略',2,'[12]','例题：模拟鸭子 \n          各种颜色，各种不同动作，如飞，叫，游泳 \n    1）分析项目变化与不变部分，提取变化部分，抽象成接口+实现； \n    2）鸭子哪些功能是会根据新需求变化的？叫...',NULL,'csdn/java/1_2_1_5_1504264583.994671.html',NULL,0,0,0,1,0,NULL,1497600059000,1497600059000,1497600059000),(100036,0,2031,'内核源码阅读（二）进程复制',4,'[13,14]','进程复制\r\n1.三种常见进程复制API:\r\n\r\n\r\n\r\n1）fork()是一个重量级调用，因为它建立了一个父进程的完整副本，然后作为子进程执行。Linux后来采用了写时复制技术对其进行了优化。\r\n\r\n...',NULL,'csdn/linux/1_0_1_7_1504264383.654236.html',NULL,0,0,0,1,0,NULL,1502406008000,1502406008000,1502406008000),(100037,0,2277,'设计模式之装饰器',2,'[12]','案例： \n   咖啡馆订单： \n    1）、咖啡种类：Espresso、ShortBlack、LongBlack、Decaf \n    2）、调料：Milk、Soy、Chocolate \n    3...',NULL,'csdn/java/1_2_1_3_1504264581.926302.html',NULL,0,0,0,1,0,NULL,1497560445000,1497560445000,1497560445000),(100038,0,2275,'设计模式之命令模式',2,'[12]','例题：家电自动化遥控器API各家电API \n遥控器接口 \n要求自动化遥控器：扩展性好、维护性好 \n命令模式原理遥控器例题的类图code Address:http://download.csdn.net...',NULL,'csdn/java/1_2_1_9_1504264579.681577.html',NULL,0,0,0,1,0,NULL,1497722454000,1497722454000,1497722454000),(100039,0,2033,'内核源码阅读（一）进程',4,'[15,16,17]','1.进程分为实时进程和非实时进程。\n        硬实时进程有严格的时间限制，某些任务必须在指定的时限内完成。软实时进程是硬实时进程的一种弱化形式。大多数进程没有特定时间约束的普通进程。CPU时间分...',NULL,'csdn/linux/1_0_1_8_1504264384.727372.html',NULL,0,0,0,1,0,NULL,1502305251000,1502305251000,1502305251000),(100040,0,2271,'设计模式之迭代器模式',2,'[12]','例题：两个菜馆合并后的菜单问题蛋糕店与餐厅合并后，怎么统一管理菜单项目 \n问题：一个用ArrayList管理菜单，一个用数组管理迭代器模式的原理和设计关键代码：1. 实现迭代器额接口\npublic c...',NULL,'csdn/java/1_2_1_13_1504264576.612209.html',NULL,0,0,0,1,0,NULL,1497808804000,1497808804000,1497808804000),(100041,0,2274,'设计模式之工厂系列',2,'[12]','例题：披萨项目：要方便披萨品种的扩展、要便于维护、要能运行时扩展简单工厂模式 — 简单工厂模式的设计方案简单工厂模式的设计方案：定义一个实例化披萨对象的类，封装创建对象的代码 \n简单工厂模式：定义了一...',NULL,'csdn/java/1_2_1_8_1504264578.819403.html',NULL,0,0,0,1,0,NULL,1497711628000,1497711628000,1497711628000),(100042,0,2272,'设计模式之外观',2,'[12]','例题：一个家庭影院项目组建一个家庭影院： \nDVD播放器、投影仪、自动屏幕、环绕立体声、爆米花机外观模式的原理和设计外观模式：提供一个统一的接口，来访问子系统中一群功能相关接口 \n外观模式定义了一个高...',NULL,'csdn/java/1_2_1_11_1504264577.579647.html',NULL,0,0,0,1,0,NULL,1497787202000,1497787202000,1497787202000),(100043,0,2155,'Java设计模式之观察者模式',2,'[18,12]','观察者模式的简单定义:定义对象间的一种一对多的依赖关系,当一个对象的状态发生改变时,所以依赖于它的对象都得到通知并且被自动更新',NULL,'csdn/java/1_0_1_5_1504264479.380816.html',NULL,0,0,0,1,0,NULL,1490533238000,1490533238000,1490533238000),(100044,0,2400,'php,java实现建造者模式',2,'[19,18]','很容易将建造者模式和工厂方法模式混淆，他们的区别是工厂方法模式侧重生产出相同的对象实例，而建造者模式强调的是对同一个对象实例的生产，不同的生产工艺（方法的执行顺序和对属性的赋值）将产生不同效果的对象类...',NULL,'csdn/java/1_0_1_16_1504264712.97503.html',NULL,0,0,0,1,0,NULL,1490086854000,1490086854000,1490086854000),(100045,0,2404,'php，java实现抽象工厂模式',2,'[12]','概念理解抽象工厂模式：生产出不同业务品种的不同业务分类，强调的是每个不同品种下的分类，而他的生产类中是按照业务分类来区别的，就像《设计模式之禅》举的例子，有奔驰车和宝马车，这个车强调的就是业务品种，要...',NULL,'csdn/java/1_0_1_18_1504264715.849239.html',NULL,0,0,0,1,0,NULL,1489914048000,1489914048000,1489914048000),(100046,0,2268,'设计模式之观察者',2,'[12]','Internet气象站例题： \n    提供温度、气压和湿度的接口 \n    测量数据更新时需时时通知给第三方 \n    需要设计开放型API，便于其他第三方公司也能接入气象站获取数据观察者模式原理：...',NULL,'csdn/java/1_2_1_6_1504264573.534878.html',NULL,0,0,0,1,0,NULL,1497614436000,1497614436000,1497614436000),(100047,0,2399,'php,java实现代理模式',2,'[19]','普通代理模式类似于装饰者模式，将真实的实现逻辑的对象包装起来，外界通过访问其代理来调用真是的逻辑代码类图 \njava代码实现public interface Subject {    public v...',NULL,'csdn/java/1_0_1_15_1504264712.009188.html',NULL,0,0,0,1,0,NULL,1490266846000,1490266846000,1490266846000),(100048,0,2270,'设计模式之模板模式',2,'[12]','例题：泡咖啡和泡茶的步骤泡咖啡                                       泡茶 \n水烧开                                    水烧开...',NULL,'csdn/java/1_2_1_12_1504264575.460372.html',NULL,0,0,0,1,0,NULL,1497798026000,1497798026000,1497798026000),(100049,0,2160,'Java设计模式之工厂模式',2,'[18,12]','工厂模式的概念:实例化对象,用工厂方法代替new操作,工厂模式包括工厂方法模式和抽象工厂模式,抽象工厂模式是工厂方法模式的扩展',NULL,'csdn/java/1_0_1_4_1504264484.668021.html',NULL,0,0,0,1,0,NULL,1490356854000,1490356854000,1490356854000),(100050,0,2276,'设计模式之分析和需求的概念',2,'[12,20]','要实现怎样的功能？？怎样去实现我们所要的功能？？',NULL,'csdn/java/1_2_1_2_1504264580.744653.html',NULL,0,0,0,1,0,NULL,1455642055000,1455642055000,1455642055000),(100051,0,2413,'php,java实现原型模式',2,'[18,19]','当我们要使用或者批量使用一个对象，他们完全相同，并且该对象的初始化过程十分复杂，可以使用该模式克隆出对个对象。类图 \njava代码实现：public class Subject implements ...',NULL,'csdn/java/1_0_1_14_1504264721.048636.html',NULL,0,0,0,1,0,NULL,1490346047000,1490346047000,1490346047000),(100052,0,2529,'linux+tomcat配置域名访问指定项目，不用接项目名',2,'[21]','直接上码，tomcat/conf/server.xml配置如下：\n\n  \n  <Listener',NULL,'csdn/java/1_1_1_2_1504264886.195514.html',NULL,0,0,0,1,0,NULL,1482354010000,1482354010000,1482354010000),(100053,0,2523,'linux环境下配置tomcat HTTPS协议',2,'[22,23,21]','https简介    它是由Netscape开发并内置于其浏览器中，用于对数据进行压缩和解压操作，并返回网络上传送回的结果。HTTPS实际上应用了Netscape的安全套接字层（SSL）作为HTTP应...',NULL,'csdn/java/1_1_1_1_1504264879.495232.html',NULL,0,0,0,1,0,NULL,1481994026000,1481994026000,1481994026000),(100054,0,2158,'Java设计模式之责任链模式',2,'[18,12]','比如我们去奔驰4S店买车,一般4S店都会有销售人员,经理,总监,老板这样的层级,消费者肯定希望买车能给予一定的折扣,比如5%,20%甚至50%等,消费者提出不同比例的折扣,销售员不一定能直接同意,这时...',NULL,'csdn/java/1_0_1_2_1504264482.456185.html',NULL,0,0,0,1,0,NULL,1490781639000,1490781639000,1490781639000),(100055,0,2573,'web项目Log4j日志输出路径配置问题',2,'[24,25,26]','问题描述：一个web项目想在一个tomcat下运行多个实例（通过修改war包名称的实现），然后每个实例都将日志输出到tomcat的logs目录下实例名命名的文件夹下进行区分查看每个实例日志，要求通过尽...',NULL,'csdn/java/1_1_2_1_1504265008.421972.html',NULL,0,0,0,1,0,NULL,1501851650000,1501851650000,1501851650000),(100056,0,2572,'Maven Web项目解决跨域问题',2,'[27,28,26]','跨域问题目前笔者所用到的方案大致有三种:jsonp,SpringMVC 4以上注解方式和cros三方过滤器。JsonpJSONP(JSON with Padding)是一个非官方的协议，它允许在服务器...',NULL,'csdn/java/1_1_2_0_1504265007.453906.html',NULL,0,0,0,1,0,NULL,1501851611000,1501851611000,1501851611000),(100057,0,2088,'使用AJAX技术做一个无页面刷新的会员登录功能--解决中文乱码',2,'[29,18]','使用双重编码和双重解码。',NULL,'csdn/java/1_3_1_0_1504264424.851471.html',NULL,0,0,0,1,0,NULL,1479290444000,1479290444000,1479290444000),(100058,0,2530,'Java自定义注解解析',2,'[18,30]','什么是注解Annotation（注解）就是Java提供了一种元程序中的元素关联任何信息和着任何元数据（metadata）的途径和方法。Annotion(注解)是一个接口，程序可以通过反射来获取指定程序...',NULL,'csdn/java/1_1_1_14_1504264886.823559.html',NULL,0,0,0,1,0,NULL,1494518454000,1494518454000,1494518454000),(100059,0,2267,'设计模式之简单工厂模式',2,'[12,31]','Moveable.java:public interface Moveable\n{\n    void Run();\n}\nVehicleFactory.java:public abstract clas...',NULL,'csdn/java/1_2_1_1_1504264572.452242.html',NULL,0,0,0,1,0,NULL,1455642026000,1455642026000,1455642026000),(100060,0,2531,'线程中的乐观与悲观锁的区别',2,'[32,33,34]','线程中的锁可以分为乐观锁和悲观锁，这两个都是实现锁机制的两种办法。 \n悲观锁：根据字面意思，悲观，就是不是太好的。当一个线程访问这个数据的时候，悲观锁会把这个数据给锁住，不被其他线程所访问，直到这个线...',NULL,'csdn/java/1_1_1_7_1504264887.453092.html',NULL,0,0,0,1,0,NULL,1495015220000,1495015220000,1495015220000),(100061,0,2156,'Java设计模式之策略模式',2,'[18,12]','策略模式的简单定义和生活例子:策略模式将可变的部分从程序中抽象分离成算法接口,在该接口下分别封装一系列算法实现并使他们可以相互替换,从而导致客户端程序独立于算法的改变生活中例子:网上购物,当进行支付页...',NULL,'csdn/java/1_0_1_6_1504264480.383006.html',NULL,0,0,0,1,0,NULL,1490612407000,1490612407000,1490612407000),(100062,0,2157,'Java设计模式之适配器模式',2,'[18,12]','生活中适配的例子到处都是,比如说,国内居民用电是220伏,而给手机充电只需要5伏左右,那么将220伏转化为手机的5伏,就需要适配器进行降压处理,某某公司招聘Android开发,而作为应聘者需要制作一份...',NULL,'csdn/java/1_0_1_7_1504264481.325033.html',NULL,0,0,0,1,0,NULL,1490684456000,1490684456000,1490684456000),(100063,0,2090,'数据库基本sql语句',2,'[7]','mysql的基本语句，由于本人不是经常写，于是开个博客给自己记录，方便以后查看，也希望能给大家带来方便！',NULL,'csdn/java/1_3_1_1_1504264425.647223.html',NULL,0,0,0,1,0,NULL,1479294012000,1479294012000,1479294012000),(100064,0,2266,'设计模式之单例模式',2,'[12]','Car.java文件package com.bjsxt.dp.factory;public class Car\n{\n    *private static Car car=new Car();*   ...',NULL,'csdn/java/1_2_1_0_1504264571.316743.html',NULL,0,0,0,1,0,NULL,1455638413000,1455638413000,1455638413000),(100065,0,2027,'内核源码阅读（八）进程调度器的实现',4,'[35,36,21]','调度器的任务就是使程序之间共享CPU时间，创造并行执行的假象。其可分为两个方面：一是调度策略；二是上下文切换。 \n1.总览一般原理：按所能分配的计算能力，向系统中每个进程提供最大的公正性。 \n    ...',NULL,'csdn/linux/1_0_1_1_1504264381.617691.html',NULL,0,0,0,1,0,NULL,1503226826000,1503226826000,1503226826000),(100066,0,2625,'提交表单--get与post方式',2,'[37,38]','我们经常在网页上输入信息，然后通过按钮提交，有两种提交方式，get和post\r\nget方式效率高但安全性低，post是封装后进行提交安全性高。\r\nget方式经常用于搜索，查询   post常用与用户注...',NULL,'csdn/java/1_0_1_0_1504265131.510718.html',NULL,0,0,0,1,0,NULL,1485442849000,1485442849000,1485442849000),(100067,0,2026,'内核源码阅读（九）进程优先级处理',4,'[35,36]','1.进程优先级内核表示 \n进程的优先级的nice值在-20~+19之间。0~139表示内部优先级，0~99的范围专供实时进程使用。nice值在[-20,+19]映射到100~139之间。如下图所示。 ...',NULL,'csdn/linux/1_0_1_0_1504264380.637233.html',NULL,0,0,0,1,0,NULL,1503234014000,1503234014000,1503234014000),(100068,0,2159,'Java代理模式和动态代理',2,'[18,39,40]','代理模式和动态代理的简单介绍首先看看代理模式的概念及分类:代理模式就是为其他对象提供一种代理以控制对这个对象的访问,代理对象起到中介的作用,可以去掉功能服务或怎么额外的服务代理模式的分类:远程代理,智...',NULL,'csdn/java/1_0_1_3_1504264483.809119.html',NULL,0,0,0,1,0,NULL,1489856426000,1489856426000,1489856426000),(100069,0,2527,'SpringMVC项目中偶尔用到servlet，如何在servlet中注入service笔记',2,'[41,27]','仅此做个笔记，防止注入时而成功时而失败的问题。package com.zhy.spdb.sso;import java.io.IOException;import javax.servlet.Serv...',NULL,'csdn/java/1_1_1_18_1504264883.5146.html',NULL,0,0,0,1,0,NULL,1499180419000,1499180419000,1499180419000),(100070,0,2711,'Java8学习记录(一)-函数式接口',2,'[42,43,18]','实习前只是粗略的看了下Java8的一些基本语法,但是没有系统的学习过.在使用一段时间后决定系统的对其进行一次分析,加深对Java8函数式编程的理解,提高自己的编码技巧.另外kotlin崛起,感兴趣的朋...',NULL,'csdn/java/1_0_1_0_1504265315.624839.html',NULL,0,0,0,1,0,NULL,1502452806000,1502452806000,1502452806000),(100071,0,2574,'关于web项目log日志指定输出文件位置配置',2,'[26,24]','首先我们定义一个可以在运行时动态的找出项目的路径WebAppRootKey,这么做的原因是为了在后面配置log4j输出文件路径的时候能随心配置。\n         webAppRootKey\n    ...',NULL,'csdn/java/1_1_2_2_1504265009.444733.html',NULL,0,0,0,1,0,NULL,1502114434000,1502114434000,1502114434000),(100072,0,2536,'封装通用分页工具，通过反射指定具体的实现类',2,'[44,45]','分页具体实现类\nimport java.util.ArrayList;\nimport java.util.List;public class NavPageInfo {\n    private sta...',NULL,'csdn/java/1_1_1_11_1504264893.66129.html',NULL,0,0,0,1,0,NULL,1482573649000,1482573649000,1482573649000),(100073,0,2560,'mongo driver类加载导致的错误',2,'[18,46,47,48]','摘要一次类加载导致的错误，之所以要记录下来，是因为错误的发现不是在本地开发环境或者预部署环境，而是在生产环境。这应该是个易于重现的问题，但是不知道为什么直到生产环境部署时才报错。问题Unsatisfi...',NULL,'csdn/java/1_1_1_0_1504264958.186124.html',NULL,0,0,0,1,0,NULL,1500714040000,1500714040000,1500714040000),(100074,0,2039,'内核源码阅读（六）内核线程',4,'[36,49,35,32]','内核线程 \n内核线程是直接由内核本身启动的进程，也经常称之为守护进程。主要用于执行下列任务：\n周期性地将修改的内存页与页来源块设备同步；\n如果内存页很少使用，则写入交换区；\n管理延时操作；\n实现文件系...',NULL,'csdn/linux/1_0_1_3_1504264387.861542.html',NULL,0,0,0,1,0,NULL,1503010819000,1503010819000,1503010819000),(100075,0,2532,'浅谈对ActiveMQ的理解',2,'[50,51]','现如今项目开发过程中由于功能多，流程长，机制繁多且复杂，让一个线程去跑完一个业务的整个流程的话会显得非常繁琐且耦合性太强，代码量很大，这个时候我们就可以用到一款技术叫做消息队列，我们可以通过定义好发送...',NULL,'csdn/java/1_1_1_15_1504264888.550877.html',NULL,0,0,0,1,0,NULL,1495198857000,1495198857000,1495198857000),(100076,0,2712,'Java8学习记录(二)-Stream原理',2,'[18,43]','推荐一篇博文,很好的介绍了Stream的原理.本文对其进行一些补充更加详细的讲解.\n  作者: 李豪 \n  地址: https://github.com/CarpenterLee/JavaLambda...',NULL,'csdn/java/1_0_1_1_1504265316.419101.html',NULL,0,0,0,1,0,NULL,1502452806000,1502452806000,1502452806000),(100077,0,2037,'内核源码阅读（七）新程序的启动与进程的退出',4,'[35,36]','通过用新代码替换现存程序，即可启动新程序。在Linux下这是通过execve系统调用实现的。 \n该系统调用的入口点是sys_execve函数，然后委托给do_execve函数。其原型如下:kernel...',NULL,'csdn/linux/1_0_1_2_1504264386.81561.html',NULL,0,0,0,1,0,NULL,1503010848000,1503010848000,1503010848000),(100078,0,2526,'Java多线程wait,notify以及同步锁的运用实例',2,'[18,52,32]','一个开多线程打印10次ABC的小Demo,如何保证线程执行的有序性，以下面这个Demo来做说明：package com.lyt.usermanage.test;public class MyThrea...',NULL,'csdn/java/1_1_1_6_1504264882.327227.html',NULL,0,0,0,1,0,NULL,1494504035000,1494504035000,1494504035000),(100079,0,2035,'内核源码阅读（三）进程命名空间和用户命名的实现',4,'[36,21,35]','（1）进程的命名空间1.基本概念 \n        传统上Linux及其衍生版的UNIX变体中，许多资源都是全局管理的。例如进程PID和用户的UID等全局ID。为了节约成本并且能够保证用户之间的权限不...',NULL,'csdn/linux/1_0_1_6_1504264385.799985.html',NULL,0,0,0,1,0,NULL,1502751606000,1502751606000,1502751606000),(100080,0,2507,'Java设计模式13——迭代器模式',2,'[53,54]','一、场景对于学习了Java的同学来说，“迭代”这个词并不会陌生，我们经常使用Iterator接口对Collection下的集合类进行遍历，常见代码：Iterator iterator=list.ite...',NULL,'csdn/java/1_1_1_12_1504264859.056061.html',NULL,0,0,0,1,0,NULL,1478718015000,1478718015000,1478718015000),(100081,0,2154,'Java设计模式之模板方法模式',2,'[18,12]','模板方法概念的简单介绍:在抽象基类定义final修饰的方法封装算法骨架,并实现其中的共性的步骤,某些没有共性的步骤(可定义为protected或默认的abstract方法)延迟到子类实现,这样做可以在...',NULL,'csdn/java/1_0_1_1_1504264478.400955.html',NULL,0,0,0,1,0,NULL,1490871647000,1490871647000,1490871647000),(100082,0,2510,'Java设计模式10——外观模式',2,'[53,12,55]','外观模式是最简单的设计模式之一，所以我就不再去重写了，简单的总结转载看到的一篇文章，原文链接：http://blog.csdn.net/jason0539/article/details/227753...',NULL,'csdn/java/1_1_1_9_1504264862.165889.html',NULL,0,0,0,1,0,NULL,1478379609000,1478379609000,1478379609000),(100083,0,2029,'内核源码阅读（四）进程ID',4,'[56,35,36,57]','1）进程ID \n        进程ID，简称PID，是进程在命名空间的唯一表示。 \n        线程组ID：每个进程除了PID这个特征值外，还有线程组ID(TGID)，若没有使用线程，则PID和...',NULL,'csdn/linux/1_0_1_5_1504264382.642756.html',NULL,0,0,0,1,0,NULL,1502838049000,1502838049000,1502838049000),(100084,0,2728,'Spring Security学习记录(二) -- Spring Security的Filter',2,'[58,59]','上一篇学习了Spring Security是如何拦截请求,并把请求转向到Filter链的,该篇就主要学习下这些Filter链的节点的作用.下面是之前配置的内容,本文也是对这些内容 的执行分析.\n   ...',NULL,'csdn/java/1_0_1_3_1504265332.68888.html',NULL,0,0,0,1,0,NULL,1502226057000,1502226057000,1502226057000),(100085,0,2705,'抽象工厂模式',2,'[18,60,12,61,62]','抽象工厂模式根据实例讲述',NULL,'csdn/java/1_1_1_8_1504265305.285235.html',NULL,0,0,0,1,0,NULL,1471694427000,1471694427000,1471694427000),(100086,0,2410,'php,java实现责任链模式',2,'[19,18]','当我们的请求根据不同的情况需要不同的处理者处理的时候，可以使用该模式，将多个处理者和请求者隔离，只暴露一个处理者，当满足处理条件时处理，不满足时将请求传递，类似于Android的事件分发机制。类图： ...',NULL,'csdn/java/1_0_1_11_1504264719.067131.html',NULL,0,0,0,1,0,NULL,1490601629000,1490601629000,1490601629000),(100087,0,2418,'php,java实现访问者模式',2,'[18,19]','定义一个类，使用它对数据类进行访问，可以减少对数据类的污染，并且可以随意定制数据展示和计算等。类图 \njava实现： \n数据源抽象类public abstract class Element {   ...',NULL,'csdn/java/1_0_1_3_1504264727.480649.html',NULL,0,0,0,1,0,NULL,1491897659000,1491897659000,1491897659000),(100088,0,2725,'Spring Security学习记录(三) -- JSON Web Token实践(上)',2,'[58,59]','JWT实际上与Spring Security没多大关系,本文打算使用Spring Security配合JWT这种方式完成用户的认证和授权.JSON Web Token(JWT),是一个开放安全的行业标...',NULL,'csdn/java/1_0_1_4_1504265329.528519.html',NULL,0,0,0,1,0,NULL,1502226057000,1502226057000,1502226057000),(100089,0,2411,'php，java实现中介者模式',2,'[18,19]','当多个对象之间产生网状的关系时，适合中介者模式，把多对多的依赖转化为只对中介者的依赖类图 \njava实现中介者抽象类public abstract class AbsMediation {    pr...',NULL,'csdn/java/1_0_1_13_1504264720.089487.html',NULL,0,0,0,1,0,NULL,1490454047000,1490454047000,1490454047000),(100090,0,2724,'Spring Security学习记录(一) -- 初识Spring Security',2,'[59,58]','Spring Security是什么?Spring Security是一套认证授权框架,支持认证模式如HTTP BASIC 认证头 (基于 IETF RFC-based 标准),HTTP Digest...',NULL,'csdn/java/1_0_1_2_1504265328.541416.html',NULL,0,0,0,1,0,NULL,1502226056000,1502226056000,1502226056000),(100091,0,2706,'工厂方法模式',2,'[18,60,12,63,61]','工厂方法模式',NULL,'csdn/java/1_1_1_7_1504265306.311073.html',NULL,0,0,0,1,0,NULL,1471860027000,1471860027000,1471860027000),(100092,0,2597,'javaEE防盗版-class文件加密思路',2,'[64,65]','本文介绍class文件加密技术的思路。',NULL,'csdn/java/1_0_1_4_1504265072.782587.html',NULL,0,0,0,1,0,NULL,1487023239000,1487023239000,1487023239000),(100093,0,2709,'单例模式',2,'[18,60,12,66,67]','单例模式',NULL,'csdn/java/1_1_1_6_1504265309.220137.html',NULL,0,0,0,1,0,NULL,1471867221000,1471867221000,1471867221000),(100094,0,2537,'Java多线程Thread类和Runable接口的区别以及线程类详解',2,'[18,52,32,68]','在Java中可有两种方式实现多线程，一种是继承Thread类，一种是实现Runnable接口；Thread类是在java.lang包中定义的。一个类只要继承了Thread类同时覆写了本类中的run()...',NULL,'csdn/java/1_1_1_13_1504264894.60784.html',NULL,0,0,0,1,0,NULL,1494410452000,1494410452000,1494410452000),(100095,0,2551,'javascript设计模式－－工厂方法模式',2,'[69,12,70,71]','工厂方法模式将实际创建对象工作推迟到子类当中。 \n1.安全模式类，用new和不用new都能够得到预期的对象。    var Demo = function(){}\n    Demo.prototype...',NULL,'csdn/java/1_1_1_4_1504264928.482445.html',NULL,0,0,0,1,0,NULL,1461056451000,1461056451000,1461056451000),(100096,0,2421,'php，java实现备忘录模式',2,'[18,19]','适用于想要回复某个时间点的数据，类似于数据库的恢复。类图： \njava实现： \n原始类public class Originator {    private String status = \"\"; ...',NULL,'csdn/java/1_0_1_4_1504264730.608431.html',NULL,0,0,0,1,0,NULL,1491807656000,1491807656000,1491807656000),(100097,0,2595,'javaEE防盗版-前言',2,'[72,73,74]','本专栏主要是提供一个思路，用于设计javaWeb项目的防盗版技术（针对付费产品的防盗版）。研究背景在于没有一家公司愿意将自己的产品项目被目标客户破解使用，造成研发公司的重大产品损失。\n        ...',NULL,'csdn/java/1_0_1_0_1504265069.687502.html',NULL,0,0,0,1,0,NULL,1484910055000,1484910055000,1484910055000),(100098,0,2041,'内核源码阅读（五）进程ID',4,'[36,35,75]','接着上一节我们继续学习进程ID。 \n在上一节中我们提到了node是一个散列表元素，对于这个散列表并未做过多解释，在这里我们给出更加详细的描述。这个散列表是为了在给定的命名空间中查找对应与指定PID数值...',NULL,'csdn/linux/1_0_1_4_1504264388.683879.html',NULL,0,0,0,1,0,NULL,1502924445000,1502924445000,1502924445000),(100099,0,2103,'接口型设计模式（Interface patterns）之adapter（适配器）',2,'[76,77]','接口型设计模式（Interface patterns）之adapter（适配器）\n\n\nThe intent of\nADAPTER is to provide the interface that a ...',NULL,'csdn/java/1_0_1_1_1504264442.335647.html',NULL,0,0,0,1,0,NULL,1483894844000,1483894844000,1483894844000),(100100,0,2524,'List集合切割实现对已有数据的分页显示（LIST容器数据量不大的情况下推荐使用）',2,'[45,44,78]','package com.lyt.usermanage.utils;import java.util.ArrayList;\nimport java.util.LinkedList;\nimport jav...',NULL,'csdn/java/1_1_1_3_1504264880.244732.html',NULL,0,0,0,1,0,NULL,1491832806000,1491832806000,1491832806000),(100101,0,2561,'Warning maven relocated xml-apis to 1.0.b',2,'[79,80,81,82]','maven 依赖在ｍａｖｅｎ项目中，一些基础的ｊａｒ包被引用多次是很常见的事情。ｍａｖｅｎ选择ｊａｒ的版本是基于 \n－　依赖深度浅的　比如Ｃ项目依赖xml.jar。Ｃ依赖的Ｂ也引入了xml.jar。那...',NULL,'csdn/java/1_1_1_1_1504264959.303324.html',NULL,0,0,0,1,0,NULL,1498903229000,1498903229000,1498903229000),(100102,0,2726,'Spring Security学习记录(四) -- JSON Web Token实践(下)',2,'[58,59]','前提接着上篇的内容,了解了JWT Token后,发现这东西就是一个可信的用户信息存储方式,那么可信的话就可以省去验证这个步骤,只有当需要用户的详细信息时候才会去DB中查询用户的详细信息.那么现在的流程...',NULL,'csdn/java/1_0_1_5_1504265330.542141.html',NULL,0,0,0,1,0,NULL,1502226058000,1502226058000,1502226058000),(100103,0,2598,'javaEE防盗版-java之类加载',2,'[46]','前言\n        类加载技术是java运行的核心部分之一，虽然对于开发来说运用到此技术的地方不多，但是作为JAVAEE防盗版技术的组成部分之一，这一部分对于研发来说也需要着重了解。\n本文分析对象针...',NULL,'csdn/java/1_0_1_1_1504265073.71474.html',NULL,0,0,0,1,0,NULL,1484744453000,1484744453000,1484744453000),(100104,0,2704,'简单工厂模式',2,'[18,60,83,12]','简单工厂模式',NULL,'csdn/java/1_1_1_9_1504265304.142167.html',NULL,0,0,0,1,0,NULL,1471348849000,1471348849000,1471348849000),(100105,0,2419,'php,java实现门面（外观）模式',2,'[18,19]','外观模式，就是将负复杂的业务路基统一到一个类中，该类提供了一个简易的访问接口，只需要调用该接口，就可以完成复杂的逻辑。类图: \njava实现public class BusinessClass1 { ...',NULL,'csdn/java/1_0_1_5_1504264728.344539.html',NULL,0,0,0,1,0,NULL,1491552014000,1491552014000,1491552014000),(100106,0,2105,'接口型设计模式（Interface  patterns）',2,'[12]','接口型设计模式（Interface  patterns）\nInterface-oriented patterns address contexts in which you need to defin...',NULL,'csdn/java/1_0_1_2_1504264443.454268.html',NULL,0,0,0,1,0,NULL,1483887627000,1483887627000,1483887627000),(100107,0,2153,'Java设计模式之单例模式',2,'[12,84]','单例模式的概念:单例模式的意思就是只有一个实例,单例模式确保某一个类只有一个实例,而且自行实例化并向整个系统提供这个实例,这个类称为单例类懒汉模式(类加载时不初始化):public class Laz...',NULL,'csdn/java/1_0_1_0_1504264477.390083.html',NULL,0,0,0,1,0,NULL,1494594031000,1494594031000,1494594031000),(100108,0,2406,'php、java 实现享元模式',2,'[18,19]','避免无限制的创建对象，建立一个对象池，将可以共享的对象存起来复用。类图 \njava实现public abstract class Flyweight {    private String intri...',NULL,'csdn/java/1_0_1_1_1504264716.88968.html',NULL,0,0,0,1,0,NULL,1494417618000,1494417618000,1494417618000),(100109,0,2502,'Java设计模式14——中介者(Mediator)模式',2,'[53,85]','一、定义用一个中介对象封装一系列对象的交互，中介者是多个对象不需要显示的相互作用，而且可以独立的改变他们的交互。二、举例通过上述定义可能不好理解，下面举一个例子，假如在一个没有总经理的公司中，有三个部...',NULL,'csdn/java/1_1_1_13_1504264854.22654.html',NULL,0,0,0,1,0,NULL,1478898006000,1478898006000,1478898006000),(100110,0,2546,'一步步构建大型网站',2,'[86,87]','之前我简单向大家介绍了各个知名大型网站的架构，MySpace的五个里程碑、Flickr的架构、YouTube的架构、PlentyOfFish的架构、WikiPedia的架构。这几个都很典型，我们可以从...',NULL,'csdn/java/1_0_1_12_1504264915.092604.html',NULL,0,0,0,1,0,NULL,1417096813000,1417096813000,1417096813000),(100111,0,2416,'php、java实现状态模式',2,'[19,18]','个人理解：根据事物状态的不同，导致其行为的不同，切换状态，相应的行为也会发生变化类图 \nphp实现abstract class Status\n{\n    protected $context;    ...',NULL,'csdn/java/1_0_1_2_1504264726.190857.html',NULL,0,0,0,1,0,NULL,1493888401000,1493888401000,1493888401000),(100112,0,2504,'Java设计模式17——模板方法模式',2,'[53,88]','一、介绍模板方法模式是编程中经常用到的模式。它定义了一个操作中的算法骨架，将某些步骤延迟到子类中实现。这样，新的子类可以在不改变一个算法结构的前提下重新定义该算法的某些特定步骤。二、场景举例当一个客户...',NULL,'csdn/java/1_1_1_16_1504264856.125967.html',NULL,0,0,0,1,0,NULL,1479232820000,1479232820000,1479232820000),(100113,0,2398,'php、java实现桥接模式',2,'[89,18,19]','该模式主要目的在于解耦，将模块的粒度分隔的更细，便于需求的更改类图 \njava实现public interface Implementor {\n    public void doSomething(...',NULL,'csdn/java/1_0_1_0_1504264710.849243.html',NULL,0,0,0,1,0,NULL,1495180823000,1495180823000,1495180823000),(100114,0,2570,'introduction of velocity',2,'[90,18]','introduction of velocity一.velocity 简介基于java 的模板引擎，apache 旗下的开源软件项目。 \n目的在于隔离 表示层和业务逻辑层，当然现在做的不仅仅是这些。二...',NULL,'csdn/java/1_1_1_6_1504264968.296471.html',NULL,0,0,0,1,0,NULL,1451912455000,1451912455000,1451912455000),(100115,0,2420,'php,java实现观察者模式',2,'[18,19]','类图： \njava实现 \n被观察者public abstract class Observable extends java.util.Observable{    private ArrayList...',NULL,'csdn/java/1_0_1_6_1504264729.44845.html',NULL,0,0,0,1,0,NULL,1491379233000,1491379233000,1491379233000),(100116,0,2297,'HeadFirst 设计模式 笔记',2,'[12]','设计原则\r\n1. 找出应用中可能需要变化之处，把它们独立出来，不要和那些不需要变化的代码混在一起。\r\n2. 针对接口编程，而不是针对实现编程。\r\n       针对接口编程，实质上是指针对超类型(su...',NULL,'csdn/java/1_0_2_5_1504264612.047209.html',NULL,0,0,0,1,0,NULL,1473526800000,1473526800000,1473526800000),(100117,0,2713,'Docker学习记录(一)-基本概念',2,'[91,92]','Docker学习记录(一)-基本概念标签（空格分隔）： docker因为做的项目用到了docker,所以开始学习下这方面的知识.1.基本概念docker虚拟机:docker环境,docker的操作都要...',NULL,'csdn/java/1_0_1_8_1504265317.234873.html',NULL,0,0,0,1,0,NULL,1491120055000,1491120055000,1491120055000),(100118,0,2545,'大型网站的架构设计图',2,'[93]','近段时间以来，通过接触有关海量数据处理和搜索引擎的诸多技术，常常见识到不少精妙绝伦的架构图。除了每每感叹于每幅图表面上的绘制的精细之外，更为架构图背后所隐藏的设计思想所叹服。个人这两天一直在搜集各大型...',NULL,'csdn/java/1_0_1_13_1504264913.308992.html',NULL,0,0,0,1,0,NULL,1417096822000,1417096822000,1417096822000),(100119,0,2730,'Docker学习记录(三)-构建非跨平台项目编译环境',2,'[92]','Docker学习记录(三)-构建非跨平台项目编译环境标签（空格分隔）： docker\n  个人独立博客: http://mrdear.cn\n因为毕业设计的问题所以去学了docker,本文描述这个问题解...',NULL,'csdn/java/1_0_1_10_1504265334.472737.html',NULL,0,0,0,1,0,NULL,1491123614000,1491123614000,1491123614000),(100120,0,2566,'Anakia 转换xml文档为其他格式',2,'[94,95,96,97]','一.简介 \nAnakia 使用JDOM 和Velocity将XML文档转换为特定格式的文档二.解析xml文档方法1.DOMjava jdk,xml-api.jar \n需要加载整个xml文档来构建层次结...',NULL,'csdn/java/1_1_1_5_1504264964.259007.html',NULL,0,0,0,1,0,NULL,1452016823000,1452016823000,1452016823000),(100121,0,2719,'redis学习记录(三)-redis中的数据结构',2,'[98]','redis学习记录(三)-redis中的数据结构标签（空格分隔）： redis\n  个人独立博客:http://mrdear.cn\nRedis学习记录(一)–入门知识 \nRedis学习记录(二)–使用...',NULL,'csdn/java/1_0_1_6_1504265323.288971.html',NULL,0,0,0,1,0,NULL,1491123618000,1491123618000,1491123618000),(100122,0,2092,'java类反射读取项目内的文件',2,'[18,99]','文件加载的一点心得，希望能给大家带来帮助。',NULL,'csdn/java/1_3_1_2_1504264426.832455.html',NULL,0,0,0,1,0,NULL,1480676456000,1480676456000,1480676456000),(100123,0,2461,'一天一个设计模式---装饰者模式',2,'[12]','通过奶茶哥哥开奶茶店的例子来说说装饰者模式',NULL,'csdn/java/1_0_1_16_1504264769.980433.html',NULL,0,0,0,1,0,NULL,1473433218000,1473433218000,1473433218000),(100124,0,2710,'模板方法模式',2,'[18,60,12,88,61]','模板方法模式',NULL,'csdn/java/1_1_1_3_1504265310.346879.html',NULL,0,0,0,1,0,NULL,1472133649000,1472133649000,1472133649000),(100125,0,2381,'Linux内核工程导论——进程：用户进程间通信',4,'[100,21,35]','应用程序间通信\r\nwritev/readv\r\nSystem V IPC\r\n管道\r\nfifo\r\ndbus\r\nunix domain\r\n信号\r\nPOSIX IPC\r\nmailbox\r\n         模...',NULL,'csdn/linux/1_0_1_16_1504264687.947007.html',NULL,0,0,0,1,0,NULL,1444320032000,1444320032000,1444320032000),(100126,0,2137,'JavaEE框架类——全站压缩——对网站内容进行数据压缩（Filter和GzipOutputStream二合一）',2,'[101,72,102,103,104]','GZIP压缩：将压缩后的文本文件，发送给浏览器，减少流量。\n全站压缩：将一个项目（网站内）的所有响应（数据）进行gzip压缩，减少流量。\n压缩目的：减少流量，提高运行速度，贴吧是在手机客户端是，减少流...',NULL,'csdn/java/1_0_1_4_1504264466.130842.html',NULL,0,0,0,1,0,NULL,1471532428000,1471532428000,1471532428000),(100127,0,2319,'【Linux探索之旅】第一部分第六课：Linux如何安装在虚拟机中',4,'[21,91,105,106,107]','虽然我们带大家一起在电脑的硬盘上安装了Ubuntu这个Linux发行版，不过有的朋友也许电脑硬盘资源有限（莫不是贡献给了各种大型游戏和xxx，你们懂的。反正小编没有好嘛 :P ），所以要他们再划分一定...',NULL,'csdn/linux/1_1_2_2_1504264631.070954.html',NULL,0,0,0,1,0,NULL,1439924419000,1439924419000,1439924419000),(100128,0,2140,'Ajax的使用',2,'[69,108,97,109]','XmlHttp是什么？\n最通用的定义为：XmlHttp是一套可以在Javascript、VbScript、Jscript等脚本语言中通过http协议传送或从接收XML及其他数据的一套API。XmlHt...',NULL,'csdn/java/1_0_1_10_1504264468.16971.html',NULL,0,0,0,1,0,NULL,1471960825000,1471960825000,1471960825000),(100129,0,2150,'JavaEE——Java和DOS下收发邮件（SMTP和POP3协议）、E-Mail协议）',2,'[72,18,110,111,112]','E-Mail协议简介：\n邮件服务器，按照提供的服务类型，可以分为发送邮件的服务器我接收邮件的服务器。\n发送邮件的服务器使用发送协议，现在常用的是SMTP协议。所以，通常发邮件的服务器也称为SMTP服务...',NULL,'csdn/java/1_0_1_7_1504264473.6432.html',NULL,0,0,0,1,0,NULL,1471744804000,1471744804000,1471744804000),(100130,0,2247,'【3】JAVA---地址App小软件（AddPanel.class）（表现层）',2,'[113]','添加地址信息界面。年龄和地址必须是数字，否则会弹出窗口提示。 \n地址信息不能为空。 \n/*\n * AddPanel.java\n *\n * Created on __DATE__, __TIME__\n ...',NULL,'csdn/java/1_0_1_5_1504264540.935691.html',NULL,0,0,0,1,0,NULL,1459378807000,1459378807000,1459378807000),(100131,0,2142,'用Ant工具管理你的Web应用程序',2,'[96,18,114,115]','Ant是一种基于Java的build工具。理论上来说，它有些类似于（Unix）C中的make ，但没有make的缺陷。目前的最新版本为：Ant 1.8.1。 使用，创建一个build.xml放在项目的...',NULL,'csdn/java/1_0_1_11_1504264469.277065.html',NULL,0,0,0,1,0,NULL,1471993253000,1471993253000,1471993253000),(100132,0,2714,'Docker学习记录(二)-Dockerfile创建镜像',2,'[92]','Docker学习记录(二)-Dockerfile创建镜像标签（空格分隔）： docker\n  个人独立博客: http://mrdear.cn\n本文学习Dcokerfile的基本命令,并且创建一个支持...',NULL,'csdn/java/1_0_1_9_1504265318.328153.html',NULL,0,0,0,1,0,NULL,1491123611000,1491123611000,1491123611000),(100133,0,2583,'Java---设计模块(工厂方法)',2,'[18,116,117]','★ 场景和问题 \nJava程序开发讲究面向接口编程，隐藏具体的实现类，可是如何得到接口呢？工厂类的命名规范：***Factory \n单例工厂方法的命名规范：getInstance()工厂的本质是“选择...',NULL,'csdn/java/1_0_2_1_1504265034.674185.html',NULL,0,0,0,1,0,NULL,1459720807000,1459720807000,1459720807000),(100134,0,2549,'javascript设计模式--Builder',2,'[12]','Builder:将一个复杂对象的构建层与其表示层相互分离，同样的构件过程可采用不同的表示．    //创建一位人类\n    var Human = function(param){\n        /...',NULL,'csdn/java/1_1_1_2_1504264926.537561.html',NULL,0,0,0,1,0,NULL,1461409235000,1461409235000,1461409235000),(100135,0,2535,'mybatis级联查询',2,'[118,61]','关联有嵌套查询和嵌套结果两种方式，本文是按照 嵌套结果 这种方式来说明的上一章介绍了多对一的关系，用到了，这是一个复杂类型的关联。我们选择一个示例来回顾下,比如：一个博客有一个用户，关联映射就工作于这...',NULL,'csdn/java/1_1_1_8_1504264892.540249.html',NULL,0,0,0,1,0,NULL,1479830432000,1479830432000,1479830432000),(100136,0,2104,'Linux 新内核中主次设备号范围',4,'[119,120,121,122]','作者：李强,华清远见嵌入式学院讲师。\r\n\r\n     设备驱动中，设备号设一个很重要的概念和变量。不论是主设备号，还是次设备号，在设备驱动中都占据了很重要的地位。那么他在Kernel中是如何操作的？这...',NULL,'csdn/linux/1_0_1_5_1504264442.518723.html',NULL,0,0,0,1,0,NULL,1422457258000,1422457258000,1422457258000),(100137,0,2547,'javascript设计模式--单例模式',2,'[69,12]','单例模式：只允许实例化一次的对象类 \n这种在基本的编程中可能已经经常的用到，只是不知道是单例模式 \n比如config.js文件，service.js里都会经常用到：app.factory(\'payIn...',NULL,'csdn/java/1_1_1_0_1504264924.56747.html',NULL,0,0,0,1,0,NULL,1462615243000,1462615243000,1462615243000),(100138,0,2382,'Linux内核工程导论——进程：内核与用户空间的进程通信',4,'[21,100,35,123]','内核与用户程序通信\r\nnetlink\r\n用户端使用\r\n\r\n    netlink被纳入socket操作的框架中，确切的说是在socket框架中设计的netlink通信接口。用户态创建、销毁socket...',NULL,'csdn/linux/1_0_1_15_1504264689.022733.html',NULL,0,0,0,1,0,NULL,1444320030000,1444320030000,1444320030000),(100139,0,2278,'Linux内核工程导论——电源管理子系统',4,'[100,35]','电源管理子系统\nACPI\n温度监测与控制',NULL,'csdn/linux/1_0_2_0_1504264583.049149.html',NULL,0,0,0,1,0,NULL,1444330831000,1444330831000,1444330831000),(100140,0,2581,'设计模式之单例模式',2,'[12,66,18]','单例模式(Singleton Pattern)是最简单的一种设计模式。下面让我们开始学习单例模式。',NULL,'csdn/java/1_1_1_1_1504265018.57862.html',NULL,0,0,0,1,0,NULL,1481392810000,1481392810000,1481392810000),(100141,0,2390,'Linux内核工程导论——网络：服务质量与安全性',4,'[21,100,35,124,125]','TCP\n\nTCP希望达成数据按序的，无损失的传输。\n\n只要有TCP这个协议的需求，就有其带来的问题。其问题是，既然要保证按序到达和完全到达，如何保证？不但要保证，还要保证速度，又如何设计机制？最终TC...',NULL,'csdn/linux/1_0_1_14_1504264698.433545.html',NULL,0,0,0,1,0,NULL,1442512816000,1442512816000,1442512816000),(100142,0,2456,'一天一个设计模式---代理模式',2,'[12]','让我通过成龙大哥和经纪人的故事来讲解静态代理。通过JDK动态代理和CGLIB动态代理详细说明动态代理的实现方法。',NULL,'csdn/java/1_0_1_19_1504264764.951108.html',NULL,0,0,0,1,0,NULL,1472857253000,1472857253000,1472857253000),(100143,0,2129,'as汇编基础程序设计--基础知识点',4,'[119,126,127]','1、数据类型，as汇编和C语言类似，也有数据类型之分。数据类型为了区分数据存放所需要的空间（也就是字节数），浮点型操作没怎么了解，浮点型操作时对数据类型应该有特殊的限制。\n.section .data...',NULL,'csdn/linux/1_0_1_15_1504264460.383532.html',NULL,0,0,0,1,0,NULL,1421229629000,1421229629000,1421229629000),(100144,0,2408,'php,java实现组合模式',2,'[19,18,75,61]','组合模式强调整体与部分的关系，如数据结构中的树结构等类图： \njava实现public abstract class AbsPart {    public abstract void getInfo...',NULL,'csdn/java/1_0_1_7_1504264718.094249.html',NULL,0,0,0,1,0,NULL,1491296411000,1491296411000,1491296411000),(100145,0,2393,'Linux内核工程导论——网络：内核特性',4,'[100,35,21,124]','TCP/IP网络\nIP\n         TCP/IP是目前通用性最高的网络系统，本来各个硬件体系大都会定义自己的通信协议，并且以太网上也是曾经存在很多通信协议（例如IPX），但是随着产业的发展，所有...',NULL,'csdn/linux/1_0_1_10_1504264701.522136.html',NULL,0,0,0,1,0,NULL,1442005229000,1442005229000,1442005229000),(100146,0,2484,'struts2校验',2,'[128,129]','Struts2提供两种校验规则：字段校验器配置风格和非字段配置风格。\n字段校验器的格式：\n\n\n\n参数值\n-->\n校验失败时的提示信息\n\n\n下一个要校验的字段à\n\n字段校验器以元素为基本元素，该元素的n...',NULL,'csdn/java/1_0_1_4_1504264800.660985.html',NULL,0,0,0,1,0,NULL,1341288035000,1341288035000,1341288035000),(100147,0,2701,'状态模式',2,'[18,130,12,131]','状态模式',NULL,'csdn/java/1_1_1_1_1504265301.078278.html',NULL,0,0,0,1,0,NULL,1472320806000,1472320806000,1472320806000),(100148,0,2474,'泛型让代码安全简单',2,'[18,132]','合理的使用泛型，能让代码中的类型转换更加安全，而且在写代码的时候会更加简单。',NULL,'csdn/java/1_0_2_1_1504264784.082509.html',NULL,0,0,0,1,0,NULL,1472310050000,1472310050000,1472310050000),(100149,0,2562,'cassandra 堆外内存管理',2,'[133,18,134,135,136]','为什么需要堆外内存呢单有一些大内存对象的时候，JVM进行垃圾回收时需要收集所有的这些对象的内存也。增加了GC压力。因此需要使用堆外内存。java 分配堆外内存org.apache.cassandra....',NULL,'csdn/java/1_1_1_2_1504264960.115355.html',NULL,0,0,0,1,0,NULL,1491746411000,1491746411000,1491746411000),(100150,0,2563,'Spring Boot 中应用Spring data mongdb',2,'[137,138,139,140]','摘要本文主要简单介绍下如何在Spring Boot 项目中使用Spring data mongdb.没有深入探究，仅供入门参考。 \n文末有代码链接准备安装mongodb \n需要连接mongodb，所以...',NULL,'csdn/java/1_1_1_3_1504264961.317322.html',NULL,0,0,0,1,0,NULL,1473505248000,1473505248000,1473505248000),(100151,0,2455,'一天一个设计模式---享元模式',2,'[12,141]','这是在这么多种设计模式中极少的以提高程序性能为目的的模式。其主要思想为—如果系统中存在多个相同对象，那么只需要一份对象的拷贝，而不必在每次使用的时候去新建一个对象。',NULL,'csdn/java/1_0_1_18_1504264764.008791.html',NULL,0,0,0,1,0,NULL,1473249627000,1473249627000,1473249627000),(100152,0,2385,'Linux内核工程导论——网络：IP',4,'[21,100,35,124]','TCP/IP网络\nIP\n         TCP/IP是目前通用性最高的网络系统，本来各个硬件体系大都会定义自己的通信协议，并且以太网上也是曾经存在很多通信协议（例如IPX），但是随着产业的发展，所有...',NULL,'csdn/linux/1_0_1_13_1504264692.099775.html',NULL,0,0,0,1,0,NULL,1442512809000,1442512809000,1442512809000),(100153,0,2325,'5.6 外观模式(4.5)',2,'[18,12,55]','外观模式(façade pattern)是门面型委派方式，它将解决的问题是减少客户对服务细节的了解。',NULL,'csdn/java/1_1_1_14_1504264634.249026.html',NULL,0,0,0,1,0,NULL,1409569236000,1409569236000,1409569236000),(100154,0,2665,'java设计模式之享元模式（11）',2,'[18,53,12]','是结构型设计模式，其目的是为了减少大量的重复对象。\r\njava中String就是享元模式的。看下例子\r\n \r\npackage com.pattern.struct.flyweight;\n\npublic...',NULL,'csdn/java/1_0_1_0_1504265258.700019.html',NULL,0,0,0,1,0,NULL,1408536030000,1408536030000,1408536030000),(100155,0,2673,'java设计模式之代理模式（8）',2,'[18,53,12]','代理模式就是，不直接调用目标函数，而是通过一个代理类来调用。\r\n它的类继承关系和装饰模式很类似。但是它们的目的不一样。\r\n代理模式不会增加新的功能，只是在调用和被调用之间加入代理层。而装饰模式旨在增加...',NULL,'csdn/java/1_0_1_3_1504265265.799443.html',NULL,0,0,0,1,0,NULL,1406822452000,1406822452000,1406822452000),(100156,0,2460,'一天一个设计模式---适配器模式',2,'[12]','小明从香港买了港版的iphone7 puls，回家发现插头用不了，但是通过转换头我们就能解决这个问题。',NULL,'csdn/java/1_0_1_14_1504264768.983949.html',NULL,0,0,0,1,0,NULL,1473840040000,1473840040000,1473840040000),(100157,0,2467,'一天一个设计模式---解释器模式',2,'[12]','对于语法的解释，是十分复杂的，比如打造一款计算器，我们需要让程序知道加减乘除和数字的关系，这个时候就可以用到解释器模式',NULL,'csdn/java/1_0_1_3_1504264775.981779.html',NULL,0,0,0,1,0,NULL,1479294009000,1479294009000,1479294009000),(100158,0,2543,'构建高并发高可用的电商平台架构实践',2,'[93]','原文出自：http://blog.csdn.net/yangbutao/article/details/12242441\r\n\r\n\r\n一、 设计理念\r\n\r\n\r\n \r\n\r\n\r\n \r\n\r\n1.      空...',NULL,'csdn/java/1_0_1_16_1504264911.6188.html',NULL,0,0,0,1,0,NULL,1417096838000,1417096838000,1417096838000),(100159,0,2124,'JavaEE框架——hibernate框架的综合使用',2,'[142,72,143,102]','hibernate框架的综合使用——通过使用hibernate框架多数据库的单表和多表进行增删改查，下面是详细代码1.先通过蚂蚁搬家Ant建立数据库 \n createTables.sqlCREATE ...',NULL,'csdn/java/1_0_1_13_1504264457.873037.html',NULL,0,0,0,1,0,NULL,1472482858000,1472482858000,1472482858000),(100160,0,2362,'［授权发表］如何快速定位 Linux Panic 出错的代码行',4,'[21,144,145]','内核调试中最常见的一个问题是：内核 Panic 后，如何快速定位到出错的代码行？就是这样一个常见的问题，面试过的大部分同学都未能很好地回答，这里希望能够做很彻底地解答。',NULL,'csdn/linux/1_0_1_1_1504264663.11105.html',NULL,0,0,0,1,0,NULL,1430204425000,1430204425000,1430204425000),(100161,0,2473,'一天一个设计模式---单例模式',2,'[12]','介绍单利模式的主要思想、优点。使用基本的懒汉式和饿汉式的相关实例代码具体说明。',NULL,'csdn/java/1_0_2_0_1504264783.117375.html',NULL,0,0,0,1,0,NULL,1472673612000,1472673612000,1472673612000),(100162,0,2485,'Hibernate优化策略',2,'[142,146,56,147,148]','1、抓取策略：\n 当提取一个对象的关联对象时，所要求的策略。\n \n fetch=\"select\"\n \n \n  customer:  lazy=\"false\" 或者  session.get(Custo...',NULL,'csdn/java/1_0_1_13_1504264805.665798.html',NULL,0,0,0,1,0,NULL,1349539257000,1349539257000,1349539257000),(100163,0,2582,'Java---设计模块(值对象)',2,'[149,18,150]','★ 场景和问题 \n在Java开发时，需要来回交换大量的数据，比如要为方法传入参数，也要获取方法的返回值，该如何能更好的进行数据的交互？★ 基本的编写步骤 \n◎第1步：写一个类，实现可序列化（如果以后数...',NULL,'csdn/java/1_0_2_0_1504265033.605077.html',NULL,0,0,0,1,0,NULL,1459720832000,1459720832000,1459720832000),(100164,0,2472,'一天一个设计模式---责任链模式',2,'[12]','当时学习时，十分神秘的拦截器/过滤器，现在我也终于有思路去实现了！',NULL,'csdn/java/1_0_1_5_1504264781.274046.html',NULL,0,0,0,1,0,NULL,1478188800000,1478188800000,1478188800000),(100165,0,2469,'一天一个设计模式---桥接模式',2,'[89,12,151]','举个桥梁的例子来说明。首先，说下原来的业务，中国建筑师只会造中国桥，美国建筑师会造美国桥。但是中国建筑师牛逼啊，学会了美国桥的建造。如果没有使用桥接模式，可能代码上会有很多问题。',NULL,'csdn/java/1_0_1_8_1504264777.991631.html',NULL,0,0,0,1,0,NULL,1476453608000,1476453608000,1476453608000),(100166,0,2144,'Linux内核工程导论——数据结构：其他',4,'[100,21,35,75]','KFIFO\n缓冲区在文件系统中经常用到，通过缓冲区缓解cpu读写内存和读写磁盘的速度。例如一个进程A产生数据发给另外一个进程B，进程B需要对进程A传的数据进行处理并写入文件，如果B没有处理完，则A要延...',NULL,'csdn/linux/1_0_3_1_1504264470.272899.html',NULL,0,0,0,1,0,NULL,1444320011000,1444320011000,1444320011000),(100167,0,2675,'java设计模式之装饰模式（7）',2,'[18,53,12]','属于结构型模式，装饰模式就是动态的给一个对象增加一些功能。\r\n要求装饰对象和被装饰对象实现同一个接口，装饰对象持有被装饰对象的实例。\r\njava的IO流的实现就是装饰模式。可以轻松的把一种流装饰成为另...',NULL,'csdn/java/1_0_1_4_1504265267.534465.html',NULL,0,0,0,1,0,NULL,1406710836000,1406710836000,1406710836000),(100168,0,2568,'Java读取properties文件',2,'[18,152,153]','1.jsp页面展示代码\r\n\r\n{CSDN:CODE:594235}\r\n\r\n\r\n2. 代码结构图\r\n\r\n\r\n其中common中的Prop.java是读取properties文件\r\n3.代码实现\r\n一.初...',NULL,'csdn/java/1_1_1_10_1504264966.059801.html',NULL,0,0,0,1,0,NULL,1422727209000,1422727209000,1422727209000),(100169,0,2135,'JavaEE框架——Spring入门基础（控制反转Ioc和切面技术Aop）',2,'[59,72,115,102]','一.简介：\n     \nSpring在英语中含义是春天，对于JavaEE开发者来说，Spring框架出现确实带来了一股全新的春天的气息。早在2002年，Rod\n Johson在其编著的《Expert ...',NULL,'csdn/java/1_0_1_1_1504264465.014702.html',NULL,0,0,0,1,0,NULL,1472601626000,1472601626000,1472601626000),(100170,0,2674,'java设计模式之适配器模式（6）',2,'[18,53,12]','属于结构型模式。适配器这三个字在生活中很常见。举个最简单的例子，那就是变压器，它可以把几万伏的高压变成我们生活用电220伏。\r\n变压器就是一种适配器。适配器模式的作用就和生活中的适配器的作用是很相似的...',NULL,'csdn/java/1_0_1_5_1504265266.649672.html',NULL,0,0,0,1,0,NULL,1406635246000,1406635246000,1406635246000),(100171,0,2361,'［授权发表］Linux内核Section Mismatch详解',4,'[21,154,155]','Section Mismatch是非常严重的Bug，可能会导致无法预测的内存访问问题，建议谨慎对待，如果添加的驱动中有类似Warning，可能需要密切关注并解决掉。本文就该问题的检测、原因、解决思路以...',NULL,'csdn/linux/1_0_1_2_1504264662.113645.html',NULL,0,0,0,1,0,NULL,1430204412000,1430204412000,1430204412000),(100172,0,2148,'JavaEE——在线人管理系统（显示在线人数、在线人详细信息、管理员踢人）',2,'[41,101,114,25,72]','这篇博客是filter、listener和servlet技术的相关总结，实现了简单的显示在线人数、在线人详细信息、管理员踢人功能下面是详细代码web.xml\n<web-app version=\"3.0...',NULL,'csdn/java/1_0_1_6_1504264472.456188.html',NULL,0,0,0,1,0,NULL,1471701628000,1471701628000,1471701628000),(100173,0,2700,'中介者模式',2,'[18,130,12,85,156]','中介者模式',NULL,'csdn/java/1_1_1_0_1504265300.115889.html',NULL,0,0,0,1,0,NULL,1472392813000,1472392813000,1472392813000),(100174,0,2613,'java 实现外观(Facade)模式',2,'[12,157]','/**\n * 角色\n * @author stone\n *\n */\npublic class Actor {\n	public Actor(String name) {\n		System.out.pri...',NULL,'csdn/java/1_0_1_8_1504265098.970246.html',NULL,0,0,0,1,0,NULL,1412787621000,1412787621000,1412787621000),(100175,0,2564,'基于Struts+Hibernate开发过程中遇到的错误',2,'[158]','1.import  javax.servlet.http.HttpServletRequest 导入包出错\r\n\r\n导入包出错，通常是包未引入，HttpServletRequest包是浏览器通过http...',NULL,'csdn/java/1_1_1_11_1504264962.227282.html',NULL,0,0,0,1,0,NULL,1400414422000,1400414422000,1400414422000),(100176,0,2280,'Linux内核工程导论——硬件：音频子系统',4,'[100,21,35]','音频子系统\r\n音频框架\r\n音频设备是非常常用，但又最容易在linux下出现问题的设备之一。音频设备种类和芯片繁多，所以必须提供足够多的驱动，并且有内核有足够的驱动与设备的匹配能力。也正是由于多样性，内...',NULL,'csdn/linux/1_0_2_2_1504264584.039919.html',NULL,0,0,0,1,0,NULL,1444330837000,1444330837000,1444330837000),(100177,0,2127,'as汇编基础程序设计--函数设计及函数堆栈传参问题',4,'[119,126,127,159]','其实上面的重点是 .type print_fun, @function ，这是定义函数的方式，后面一般接着是函数入口地址标识符；\n函数传参问题：\n        在as汇编和C语言中函数调用时传参的标...',NULL,'csdn/linux/1_0_1_14_1504264459.220957.html',NULL,0,0,0,1,0,NULL,1421229657000,1421229657000,1421229657000),(100178,0,2084,'【Linux探索之旅】第二部分第八课：RTFM 阅读那该死的手册',4,'[21,119,107,160,161]','一般Windows的用户不太习惯看使用手册。有些Windows下的软件下载后是带有使用手册的，但是谁会花时间看呢？\n\n在Linux下，阅读手册应该成为一个反射动作，一个自然而然的反应。虽说一开始要我们...',NULL,'csdn/linux/1_1_1_13_1504264421.356451.html',NULL,0,0,0,1,0,NULL,1441339228000,1441339228000,1441339228000),(100179,0,2365,'协处理器简介',4,'[162,163,164,165,62]','原文出自：http://blog.csdn.net/liukun321/article/details/5548877协处理器 　　一种芯片，用于减轻系统微处理器的特定处理任务。例如，数学协处理器可以...',NULL,'csdn/linux/1_1_2_5_1504264667.181746.html',NULL,0,0,0,1,0,NULL,1371754856000,1371754856000,1371754856000),(100180,0,2466,'一天一个设计模式---原型模式',2,'[12]','小米买了PSP，如果小明买的PSP和小米的使用的是同个对象，那么小明对其操作会导致小米的PSP也造成同样的改变。为了改变这种局面，我们就应该在应用中使用原型模式。',NULL,'csdn/java/1_0_1_9_1504264774.898729.html',NULL,0,0,0,1,0,NULL,1475956834000,1475956834000,1475956834000),(100181,0,2108,'C程序代码中内嵌as汇编（二、占位符）',4,'[119,126,166]','本篇blog只给几个例题来进行快速学习内嵌as汇编。\n        第一、输入参数中包含输出参数\n #include\n \n int main(void)\n {\n     char string1[]...',NULL,'csdn/linux/1_0_1_12_1504264445.78145.html',NULL,0,0,0,1,0,NULL,1421251259000,1421251259000,1421251259000),(100182,0,2110,'as汇编基础程序设计--gdb调试汇编',4,'[119,126,127,167]','开始命令：gdb  test；\n        设置断点：break *_start  + 1（cpu运行到 _start+1 的地址上会停止，break可以简写b）\n        开始运行：run...',NULL,'csdn/linux/1_0_1_16_1504264447.632803.html',NULL,0,0,0,1,0,NULL,1420909208000,1420909208000,1420909208000),(100183,0,2722,'Linux下搭建JavaWEB环境',2,'[74,21]','Linux下搭建JavaWEB环境标签（空格分隔）： web1.安装JDK8首先使用wget下载jdk的安装包.这里下载tar.gz格式的.wget http://download.oracle.co...',NULL,'csdn/java/1_0_1_18_1504265326.645923.html',NULL,0,0,0,1,0,NULL,1476946823000,1476946823000,1476946823000),(100184,0,2065,'x86汇编--微内核设计',4,'[119,168,169,170]','微内核程序：微内核程序就稍微复杂点了，还是按步骤分析下：1、设计一个打印例程，就是把字符串打印到屏幕终端，用来显示一些提示信息；2、后面都是用来加载用户程序了，其实说到底微内核就是为各个用户程序提供环...',NULL,'csdn/linux/1_0_2_4_1504264411.003738.html',NULL,0,0,0,1,0,NULL,1419674403000,1419674403000,1419674403000),(100185,0,2152,'javaEE框架类——过滤器（Filter）',2,'[101,72,41,26,102]','1简介： - 过虑器能对客户的请求进行预先处理，然后再将请求转发给其他web组件。\n - 过虑器是在Servlet2.3规范中定义的，它可以对Web组件的,ServletRequest和Servlet...',NULL,'csdn/java/1_0_1_3_1504264475.363893.html',NULL,0,0,0,1,0,NULL,1471446035000,1471446035000,1471446035000),(100186,0,2462,'一天一个设计模式---观察者模式',2,'[12]','班里的同学在玩手机，聊天，而殊不知老师就在窗边观察着。',NULL,'csdn/java/1_0_1_15_1504264770.91447.html',NULL,0,0,0,1,0,NULL,1473627656000,1473627656000,1473627656000),(100187,0,2076,'【Linux探索之旅】第二部分第九课：查找文件，无所遁形',4,'[21,119,107,160,161]','之前的课程我们见识过了Linux下文件的组织形式是很特别的，跟Windows不一样。\n\n我们也用ls / 这个命令来列出根目录下的所有目录，有/bin，/etc，/var，/home，等等。而这些目录...',NULL,'csdn/linux/1_1_1_12_1504264417.343792.html',NULL,0,0,0,1,0,NULL,1441339249000,1441339249000,1441339249000),(100188,0,2609,'Java 实现模板方法(TemplateMethod)模式',2,'[12,171]','类图\r\n\r\n\r\n/**\n * 业务流程模板，提供基本框架\n * @author stone\n *\n */\npublic abstract class BaseTemplate {\n	\n	public ...',NULL,'csdn/java/1_0_1_13_1504265094.778933.html',NULL,0,0,0,1,0,NULL,1412949634000,1412949634000,1412949634000),(100189,0,2125,'AT&T风格的基础汇编程序--Hello word',4,'[119,159,126,172]','为了看懂Linux内核源代码，所以不得不重新学习下汇编语言。汇编语言大体可以分为两个风格，官方的intel风格和unix系列的AT&T风格。Intel风格汇编是比较常见的，一般大学时会学习点基础的（至...',NULL,'csdn/linux/1_0_1_18_1504264457.971087.html',NULL,0,0,0,1,0,NULL,1420736410000,1420736410000,1420736410000),(100190,0,2145,'JavaEE框架类——监听器（观察者模式）和Servlet技术的监听器session沌化与活化技术',2,'[41,72,18,102,51]','监听器\n监听器－就是一个实现待定接口的普通Java程序，此程序专门用于监听别一个类的方法调用。\n什么是观察者模式：\n定义对象间一对多的依赖关系，当一个对象的状态发生改变时，所有依赖于它的对象都得到通知...',NULL,'csdn/java/1_0_1_5_1504264471.166283.html',NULL,0,0,0,1,0,NULL,1471568419000,1471568419000,1471568419000),(100191,0,2095,'【Linux探索之旅】第三部分测验题',4,'[21,119,107,173,161]','第三部分测试题，共10题。如果做对5题以下请回炉重造。。。',NULL,'csdn/linux/1_1_1_5_1504264429.209585.html',NULL,0,0,0,1,0,NULL,1442800824000,1442800824000,1442800824000),(100192,0,2617,'Java 实现原型(Prototype)模式',2,'[12,174]','public class BaseSpoon implements Cloneable {//spoon 匙, 调羹 \n	String name;\n\n	public String getName() ...',NULL,'csdn/java/1_0_1_4_1504265103.047093.html',NULL,0,0,0,1,0,NULL,1412762435000,1412762435000,1412762435000),(100193,0,2621,'Java 实现备忘录(Memento)模式',2,'[12,175]','/**\n * 数据对象\n * @author stone\n *\n */\npublic class DataState {\n	private String action;\n\n	public void s...',NULL,'csdn/java/1_0_1_18_1504265107.188367.html',NULL,0,0,0,1,0,NULL,1413230438000,1413230438000,1413230438000),(100194,0,2463,'一天一个设计模式---状态模式',2,'[12]','有些生存类游戏，比如《饥荒》中树木生长就是一个非常复杂的过程。现在我们就来模拟树木生长过程。',NULL,'csdn/java/1_0_1_13_1504264771.998414.html',NULL,0,0,0,1,0,NULL,1474401639000,1474401639000,1474401639000),(100195,0,2580,'设计模式之建造者模式',2,'[18,176,12]','单例模式(Singleton Pattern)是最简单的一种设计模式。下面让我们开始学习单例模式。',NULL,'csdn/java/1_1_1_0_1504265017.644817.html',NULL,0,0,0,1,0,NULL,1481626837000,1481626837000,1481626837000),(100196,0,2087,'【Linux探索之旅】第二部分测试题',4,'[21,119,107,160,161]','10道测试题，测测掌握得如何。',NULL,'csdn/linux/1_1_1_11_1504264424.461559.html',NULL,0,0,0,1,0,NULL,1441339253000,1441339253000,1441339253000),(100197,0,2358,'［授权发表］用 kGDB 调试 Linux 内核',4,'[21,177,145]','本文记录了用 kGDB 调试 Linux 内核的全过程，都是在前人工作基础上的一些总结。以下操作都是基于特定板子来进行，但是大部分都能应用于其他平台。',NULL,'csdn/linux/1_0_1_0_1504264661.044641.html',NULL,0,0,0,1,0,NULL,1430204416000,1430204416000,1430204416000),(100198,0,2707,'适配器模式',2,'[18,60,12,61,77]','适配器模式',NULL,'csdn/java/1_1_1_4_1504265307.313251.html',NULL,0,0,0,1,0,NULL,1472115635000,1472115635000,1472115635000),(100199,0,2121,'as汇编基础程序设计--调用C库和内存访问',4,'[119,126,172]','as汇编中的内存访问：movl (%ebx), eax（把ebx寄存器指向的地址上的值传送给eax）；movl 4(%ebx), eax（把ebx指向的地址的位置往上偏移4字节的地址上的值传送给eax...',NULL,'csdn/linux/1_0_1_17_1504264456.360531.html',NULL,0,0,0,1,0,NULL,1420819213000,1420819213000,1420819213000),(100200,0,2074,'【Linux探索之旅】第三部分第三课：监视系统活动，滴水不漏',4,'[62,119,161,107,21]','放眼现在的操作系统，基本都是多任务操作系统了，Linux当然也不例外。因此，Linux可以管理多个同时运行的程序。\n\n通过之前的课程（《【Linux探索之旅】第二部分第五课：用户和权限，有权就任性》）...',NULL,'csdn/linux/1_1_1_8_1504264416.039383.html',NULL,0,0,0,1,0,NULL,1442332844000,1442332844000,1442332844000),(100201,0,2708,'策略模式',2,'[18,60,12,178,179]','策略模式',NULL,'csdn/java/1_1_1_2_1504265308.254673.html',NULL,0,0,0,1,0,NULL,1472212820000,1472212820000,1472212820000),(100202,0,2066,'x86汇编--保护模式下的冒泡排序',4,'[180,169,181]','其实这个代码本身（冒泡排序）没有什么意思，而有用的是怎么从实模式下进入保护模式，以及怎么 使用段选择子和段描述符。',NULL,'csdn/linux/1_0_2_3_1504264411.049416.html',NULL,0,0,0,1,0,NULL,1419001255000,1419001255000,1419001255000),(100203,0,2109,'C程序代码中内嵌as汇编（四、宏函数）',4,'[119,126,166]','先来回忆下C语言中宏是怎么定义的，最基本的是定义常量：#define MAX_LEN 1024  这是最简单的常数宏定义，其中宏名按规定是要大写的，宏名在预编译时会由后面的值替代掉（预编译四大步骤：1...',NULL,'csdn/linux/1_0_1_10_1504264446.797558.html',NULL,0,0,0,1,0,NULL,1421420415000,1421420415000,1421420415000),(100204,0,2294,'Java 实现解释器(Interpreter)模式',2,'[12,182]','/**\n * 声明一个抽象的解释操作\n * @author stone\n *\n */\npublic interface Interpreter {\n	\n	public void interpret(C...',NULL,'csdn/java/1_0_2_2_1504264609.004558.html',NULL,0,0,0,1,0,NULL,1413302430000,1413302430000,1413302430000),(100205,0,2086,'【Linux探索之旅】第三部分第一课：数据处理，慢条斯理',4,'[21,119,107,160,161]','哈哈，终于到了第三部分了。不知不觉两个部分已经学完了，可喜可贺，掌声给自己！\n\n此时读者内心独白：“我想静静，也不要问我小编是谁。”\n\n好了好了，小编重回淡定。咳咳，看到今天的标题应该会对这一课的内容...',NULL,'csdn/linux/1_1_1_10_1504264422.979924.html',NULL,0,0,0,1,0,NULL,1441767608000,1441767608000,1441767608000),(100206,0,2375,'实例分析exec函数',4,'[63,183,184,185,165]','fork()函数通过系统调用创建一个与原来进程(父进程)几乎完全相同的进程(子进程是父进程的副本，它将获得父进程数据空间、堆、栈等资源的副本。注意，子进程持有的是上述存储空间的“副本”，这意味着父子进...',NULL,'csdn/linux/1_1_2_8_1504264677.60306.html',NULL,0,0,0,1,0,NULL,1371909641000,1371909641000,1371909641000),(100207,0,2606,'Java 实现装饰者(Decorator)模式',2,'[12,186]','在Java中，io包下的很多类就是典型的装饰者模式的体现，如：\n\n\nnew BufferedOutputStream(OutputStream out)\n\nnew BufferedInputStrea...',NULL,'csdn/java/1_0_1_6_1504265091.696365.html',NULL,0,0,0,1,0,NULL,1412780442000,1412780442000,1412780442000),(100208,0,2611,'Java 实现命令(Command)模式',2,'[12,187]','类图\n\n\npublic interface ICommand {\n	void execute();\n}\npublic class ConcreteCommand implements ICommand...',NULL,'csdn/java/1_0_1_17_1504265096.898736.html',NULL,0,0,0,1,0,NULL,1413194428000,1413194428000,1413194428000),(100209,0,2388,'Linux内核工程导论——内存管理（三）',4,'[100,21]','用户端内核内存参数调整\r\n/proc/sys/vm/ （需要根据内核版本调整）\r\n交换相关\r\nswap_token_timeout\r\n Thisfile contains valid hold tim...',NULL,'csdn/linux/1_0_1_2_1504264695.205697.html',NULL,0,0,0,1,0,NULL,1440529253000,1440529253000,1440529253000),(100210,0,2470,'一天一个设计模式---组合模式',2,'[12,97,188]','我们平时常用的dom4j框架其实其中就使用了组合模式来实现各个节点。我们就大致模仿，制作一个简单的xml框架。',NULL,'csdn/java/1_0_1_7_1504264778.995822.html',NULL,0,0,0,1,0,NULL,1476712837000,1476712837000,1476712837000),(100211,0,2610,'Java 实现享元(Flyweight)模式',2,'[12,189]','/**\n * 字母\n * @author stone\n *\n */\npublic class Letter {\n\n	private String name;\n\n	public Letter(Strin...',NULL,'csdn/java/1_0_1_11_1504265095.991994.html',NULL,0,0,0,1,0,NULL,1412938813000,1412938813000,1412938813000),(100212,0,2131,'Struts1.3——Struts标签',2,'[128,190]','本文介绍了Struts1中的标签，有html标签、bean标签和logic标签',NULL,'csdn/java/1_0_1_2_1504264461.792532.html',NULL,0,0,0,1,0,NULL,1469289612000,1469289612000,1469289612000),(100213,0,2374,'Linux进程状态解析之R、S、D、T、Z、X',4,'[21,162,35,191,52]','文章转载自：http://hi.baidu.com/shining_pc/item/21abcb32a4d2d484c3cf2950Linux是一个多用户，多任务的系统，可以同时运行多个用户的多个程序...',NULL,'csdn/linux/1_1_2_9_1504264676.623031.html',NULL,0,0,0,1,0,NULL,1371542436000,1371542436000,1371542436000),(100214,0,2438,'Linux0.11启动过程',4,'[21,192,114,193,194]','从开机加电，到执行main函数之前的过程好吧，这里应该是有执行3个汇编的文件，但是我不太了解。囧从main函数，到启动OK（即可以响应用户操作了）这个步骤做了3件事情：创建进程0，使之具备在主机中进行...',NULL,'csdn/linux/1_1_1_12_1504264738.965395.html',NULL,0,0,0,1,0,NULL,1372593632000,1372593632000,1372593632000),(100215,0,2298,'Linux内核工程导论——存储：文件系统',4,'[100,21,35,188,165]','文件系统层\n文件系统的种类和选用\n         文件系统有很多种，linux内核是个大杂烩，同时满足企业和个人的需求，文件系统也是如此，发行版也是如此。其中原因自己分析。\n         我们最...',NULL,'csdn/linux/1_0_2_6_1504264613.337916.html',NULL,0,0,0,1,0,NULL,1444330839000,1444330839000,1444330839000),(100216,0,2378,'Linux内核工程导论——用户空间设备管理',4,'[100,35,21]','用户空间设备管理\n         用户空间所能见到的所有设备都放在/dev目录下（当然，只是一个目录，是可以变化的），文件系统所在的分区被当成一个单独的设备也放在该目录下。以前的2.4版本的曾经出现...',NULL,'csdn/linux/1_0_1_8_1504264684.151387.html',NULL,0,0,0,1,0,NULL,1440799202000,1440799202000,1440799202000),(100217,0,2528,'Java 判断一个时间段（YYYY-MM-DD）是否在一个区间',2,'[18]','/** \n    * @Title: isInDate \n    * @Description: 判断一个时间段（YYYY-MM-DD）是否在一个区间 \n    * @param @param dat...',NULL,'csdn/java/1_1_1_4_1504264884.25655.html',NULL,0,0,0,1,0,NULL,1491933603000,1491933603000,1491933603000),(100218,0,2766,'设计模式-策略模式',1,'[12,179,178,195,31]','介绍在项目开发中，经常会碰到需要根据不同的条件采用不同的算法，但是这些不同的算法又有些类似。例如商城下单中的打折功能（打八折、五折、一折），满减功能等等。 \n地图中根据采用不同的出行方式计算时间、金额...',NULL,'csdn/mode/37_1_1_0_1504396836.119458.html',NULL,0,0,0,1,0,NULL,1504371608000,1504371608000,1504371608000),(100219,0,2238,'Linux中printk()实例',4,'[21,196,197,198,63]','新建hello.c#include   \n#include   \n \n \nint init_module(void) \n{ \n    printk(KERN_INFO \"Welcome.....\\n\"...',NULL,'csdn/linux/1_0_3_3_1504264533.784398.html',NULL,0,0,0,1,0,NULL,1375732847000,1375732847000,1375732847000),(100220,0,2538,'JAVA SDK 极光推送后台DEMO',2,'[199,18]','pom导依赖 \n        1.1.1\n       \n       \n            cn.jpush.api\n            jpush-clien',NULL,'csdn/java/1_1_1_12_1504264895.589071.html',NULL,0,0,0,1,0,NULL,1488286843000,1488286843000,1488286843000),(100221,0,2366,'linux进程管理之进程创建',4,'[21,114,200,191,57]','所谓进程就是程序执行时的一个实例. 它是现代操作系统中一个很重要的抽象,我们从进程的生命周期:创建,执行,消亡来分析一下Linux上的进程管理实现.一:前言进程管理结构;在内核中,每一个进程对应一个t...',NULL,'csdn/linux/1_1_2_6_1504264668.363066.html',NULL,0,0,0,1,0,NULL,1371754821000,1371754821000,1371754821000),(100222,0,2176,'同一Page范围内多个相同自定义标签类实例化个数相关问题阐述',2,'[201,202]','我们都知道j2ee规范中自定义',NULL,'csdn/java/1_1_1_0_1504264500.386694.html',NULL,0,0,0,1,0,NULL,1417392004000,1417392004000,1417392004000),(100223,0,2339,'伪中介模式(5.5)',2,'[12,18,85]','总之，股票交易所、婚姻介绍所、聊天室的例子，都不是[GoF]的中介者模式。',NULL,'csdn/java/1_1_1_3_1504264643.518658.html',NULL,0,0,0,1,0,NULL,1411718400000,1411718400000,1411718400000),(100224,0,2107,'C程序代码中内嵌as汇编（三、跳转）',4,'[119,126,166]','在内联汇编中使用跳转语句是非常常见的，比如：比较两个数，返回较大数时，就会用到跳转；先看下汇编和运行结果，然后再一步步分析下：\n                      \n\n        运行结果...',NULL,'csdn/linux/1_0_1_11_1504264444.63901.html',NULL,0,0,0,1,0,NULL,1421258416000,1421258416000,1421258416000),(100225,0,2139,'JavaEE——账号注册模拟网站邮箱激活',2,'[72,143,203,74]','本项目是javaWeb和email结合的项目，模拟网站必须要激活邮箱账号才可以使用，创建数据库create table user(\nid varchar(32) primary key,\nname v...',NULL,'csdn/java/1_0_1_8_1504264467.039334.html',NULL,0,0,0,1,0,NULL,1471874431000,1471874431000,1471874431000),(100226,0,2370,'理解inode',4,'[192,119,113,165,193]','一、inode是什么？理解inode，要从文件储存说起。文件储存在硬盘上，硬盘的最小存储单位叫做\"扇区\"（Sector）。每个扇区储存512字节（相当于0.5KB）。操作系统读取硬盘的时候，不会一个个...',NULL,'csdn/linux/1_1_2_1_1504264672.333265.html',NULL,0,0,0,1,0,NULL,1372017616000,1372017616000,1372017616000),(100227,0,2727,'SpringDataJPA学习记录(一)--环境配置',2,'[204,59]','SpringDataJPA学习记录(一)–环境配置标签（空格分隔）： springJPA1.maven配置首先需要spring相关架包,其实spring-data-jpa里面已经依赖了,如果你想用自己...',NULL,'csdn/java/1_0_1_14_1504265331.497898.html',NULL,0,0,0,1,0,NULL,1479484809000,1479484809000,1479484809000),(100228,0,2206,'jplogic之GIS搜狗地图开发案例',2,'[205,206]','在项目开发过程中我们可能遇到各种各样的需求，而GIS在应用便是其中一个。特别是在web类型的项目中会经常用到。我们都知道 网络地图服务，以其实时性、大信息量、丰富的功能，成为传统地图的延伸，同时扩展出...',NULL,'csdn/java/1_1_1_3_1504264515.004601.html',NULL,0,0,0,1,0,NULL,1417392006000,1417392006000,1417392006000),(100229,0,2429,'进程内核栈、用户栈',4,'[207,35,183,162,191]','1.进程的堆栈     内核在创建进程的时候，在创建task_struct的同事，会为进程创建相应的堆栈。每个进程会有两个栈，一个用户栈，存在于用户空间，一个内核栈，存在于内核空间。当进程在用户空间运...',NULL,'csdn/linux/1_1_1_19_1504264734.79808.html',NULL,0,0,0,1,0,NULL,1372104043000,1372104043000,1372104043000),(100230,0,2369,'Linux系统的shell是什么',4,'[21,196,208,209,210]','shell是用户和Linux操作系统之间的接口。Linux中有多种shell，其中缺省使用的是Bash。本章讲述了shell的工作原理，shell的种类，shell的一般操作及Bash的特性。　什么是...',NULL,'csdn/linux/1_1_2_4_1504264671.327805.html',NULL,0,0,0,1,0,NULL,1371902437000,1371902437000,1371902437000),(100231,0,2345,'LINUX自旋锁详解2',4,'[35,113,21,100,211]','对于互斥, 旗标是一个有用的工具, 但是它们不是内核提供的唯一这样的工具. 相反, 大部分加锁是由一种称为自旋锁的机制来实现. 不象旗标, 自旋锁可用在不能睡眠的代码中, 例如中断处理. 当正确地使用...',NULL,'csdn/linux/1_0_1_12_1504264647.631238.html',NULL,0,0,0,1,0,NULL,1377100804000,1377100804000,1377100804000),(100232,0,2442,'两篇文章说中断和异常之一',4,'[212,213,35,191,162]','转载自：http://www.cnblogs.com/javawebsoa/archive/2013/05/05/3061787.html中断和异常的概念* 中断： 硬件通过中断来通知内核。中断是一种...',NULL,'csdn/linux/1_1_1_10_1504264741.30052.html',NULL,0,0,0,1,0,NULL,1372683646000,1372683646000,1372683646000),(100233,0,2177,'Linux内核线程',4,'[52,200,214,100,21]','内核线程是直接由内核本身启动的进程。内核线程实际上是将内核函数委托给独立的进程，与系统中其他进程“并行”执行（实际上，也并行于内核自身的执行），内核线程经常被称为内核“守护进程”。它们主要用于执行下列...',NULL,'csdn/linux/1_0_2_6_1504264500.452092.html',NULL,0,0,0,1,0,NULL,1376488815000,1376488815000,1376488815000),(100234,0,2185,'直接内存访问(DMA)',4,'[215,191,100,216,21]','1. 什么是DMA直接内存访问是一种硬件机制，它允许外围设备和主内存之间直接传输它们的I/O数据，而不需要系统处理器的参与。使用这种机制可以大大提高与设备通信的吞吐量。 2. DMA数据传输有两种方式...',NULL,'csdn/linux/1_0_2_11_1504264504.406581.html',NULL,0,0,0,1,0,NULL,1376312448000,1376312448000,1376312448000),(100235,0,2190,'jplogic v1.0 开发案例--知识库管理（视频资料上传、格式转化、视频截图、视频预览、视频信息索引检索）',2,'[217,218,219,220,221]','由于目前很多项目中应用到视频上传预览等功能，本文',NULL,'csdn/java/1_1_1_12_1504264507.649962.html',NULL,0,0,0,1,0,NULL,1402498842000,1402498842000,1402498842000),(100236,0,2063,'x86汇编--RTC中断（时间显示器）',4,'[180,222,119]','可以用前一篇操作系统内核加载器（x86汇编）的加载器来加载这个RTC中断程序，就可以显示时间了。',NULL,'csdn/linux/1_0_2_2_1504264409.90012.html',NULL,0,0,0,1,0,NULL,1418317203000,1418317203000,1418317203000),(100237,0,2364,'魔数',4,'[223,224,225,226,227]','魔数（magic number），即在编写程序时直接在程序中运用数字，而不是采用定义宏或是const变量的方式，图1是使用了魔数的一个示例程序。其中的64是指Msk的最大字节数。从这一程序中可以看出，...',NULL,'csdn/linux/1_1_2_3_1504264666.292326.html',NULL,0,0,0,1,0,NULL,1371931213000,1371931213000,1371931213000),(100238,0,2184,'jplogic开发案例之服务器状态信息监控（服务器端监控）',2,'[228,229]','在软件项目中我们时常需要时再',NULL,'csdn/java/1_1_1_16_1504264504.279262.html',NULL,0,0,0,1,0,NULL,1408147203000,1408147203000,1408147203000),(100239,0,2565,'JDK 源码学习——ByteBuffer',2,'[30,18,230,231]','ByteBuffer 在NIO的作用Java SE4 开始引入Java NIO,相比较于老的IO，更加依赖底层实现。引入通道(Channels)，选择器(selector)，缓冲(Buffers).都...',NULL,'csdn/java/1_1_1_4_1504264963.2659.html',NULL,0,0,0,1,0,NULL,1470571233000,1470571233000,1470571233000),(100240,0,2240,'Linux System Programming -- Appendix',4,'[21,214,192,232,233]','这本书附录的名字是 “GCC对C语言的扩展” ，一下的内容是对扩展的总结类型发现GCC 允许通过变量的引用识别类型。这种操作支持泛型编程。在 C++、Ada 和 Java™ 语言等许多现代编程语言中都...',NULL,'csdn/linux/1_1_1_0_1504264536.942217.html',NULL,0,0,0,1,0,NULL,1371538841000,1371538841000,1371538841000),(100241,0,2209,'linux内核cfs浅析',4,'[162,234,87,21,100]','linux调度器的一般原理请参阅《linux进程调度浅析》。之前的调度器cfs之前的linux调度器一般使用用户设定的静态优先级，加上对于进程交互性的判断来生成动态优先级，再根据动态优先级决定进程被调...',NULL,'csdn/linux/1_0_2_19_1504264515.907319.html',NULL,0,0,0,1,0,NULL,1375844428000,1375844428000,1375844428000),(100242,0,2542,'国内外大型SNS网站后台架构对比',2,'[86,93]','要问时下什么类型的站点人气最旺？答案当属SNS网站。短短几年的时间，SNS便迅速确立了Web 2.0核心的地位。用户的增长量之快更是让人咂舌，而Facebook访问量首次超越Google的消息也让人觉...',NULL,'csdn/java/1_0_1_14_1504264910.075052.html',NULL,0,0,0,1,0,NULL,1417096833000,1417096833000,1417096833000),(100243,0,2567,'gradle 入门介绍',2,'[235,236,237,238]','gradle ????Groovy??????????,?maven????????????xml?????script????gradle ???????build.gradle ????,buil...',NULL,'csdn/java/1_1_1_8_1504264965.187355.html',NULL,0,0,0,1,0,NULL,1469203240000,1469203240000,1469203240000),(100244,0,2486,'OA项目中环境准备',2,'[128,142,59,239,240]','1，新建工程，类型为Web Project，设置默认编码为UTF-8，并创建如下文件夹\n 1，Source Folder\n  1，src  项目源码\n  2，conf  配置文件\n  3，test  ...',NULL,'csdn/java/1_0_1_5_1504264808.630293.html',NULL,0,0,0,1,0,NULL,1344412819000,1344412819000,1344412819000),(100245,0,2192,'jplogic 之图形报表统计开发案例',2,'[241,242,243]','纵观目前各种系统项目中都运用到了报表统计，',NULL,'csdn/java/1_1_1_13_1504264508.577606.html',NULL,0,0,0,1,0,NULL,1403708429000,1403708429000,1403708429000),(100246,0,2342,'Java组合模式（4.3）',2,'[18,12]','组合模式的要点是：叶子对象和各种容器能够统一地处理。',NULL,'csdn/java/1_1_1_4_1504264644.66731.html',NULL,0,0,0,1,0,NULL,1411290019000,1411290019000,1411290019000),(100247,0,2464,'一天一个设计模式---模板方法模式',2,'[12]','对于多个业务，它们的业务中有很多功能是相似的，有部分功能需要独自实现。这样我们就可以使用模板方法模式，将功能打散，抽取出更小的功能块，并减少重复代码。',NULL,'csdn/java/1_0_1_11_1504264773.11834.html',NULL,0,0,0,1,0,NULL,1474902021000,1474902021000,1474902021000),(100248,0,2348,'linux内存屏障浅析',4,'[215,162,244,21,100]','内存屏障主要解决了两个问题：单处理器下的乱序问题和多处理器下的内存同步问题。为什么会乱序现在的CPU一般采用流水线来执行指令。一个指令的执行被分成：取指、译码、访存、执行、写回、等若干个阶段。然后，多...',NULL,'csdn/linux/1_0_1_11_1504264650.697342.html',NULL,0,0,0,1,0,NULL,1377158434000,1377158434000,1377158434000),(100249,0,2315,'命令模式之2 Invoker Vs. Client',2,'[12,18,245]','一个实用的例子',NULL,'csdn/java/1_1_1_1_1504264628.906706.html',NULL,0,0,0,1,0,NULL,1411988448000,1411988448000,1411988448000),(100250,0,2720,'redis学习记录(四)-SpringDataRedis分析',2,'[98]','redis学习记录(四)-SpringDataRedis分析标签（空格分隔）： redis\n  个人独立博客: http://mrdear.cn\nRedis学习记录(一)–入门知识 \nRedis学习记...',NULL,'csdn/java/1_0_1_7_1504265324.427872.html',NULL,0,0,0,1,0,NULL,1491123619000,1491123619000,1491123619000),(100251,0,2371,'linux中文件描述符fd和文件指针flip的理解',4,'[21,183,194,246,35]','简单归纳：fd只是一个整数，在open时产生。起到一个索引的作用，进程通过PCB中的文件描述符表找到该fd所指向的文件指针filp。文件描述符的操作(如: open)返回的是一个文件描述符,内核会在每...',NULL,'csdn/linux/1_1_2_2_1504264673.434668.html',NULL,0,0,0,1,0,NULL,1372010454000,1372010454000,1372010454000),(100252,0,2085,'【Linux探索之旅】第三部分第二课：流、管道、重定向，三管齐下',4,'[21,247,107,248,249]','这一课我们来学一些非常有用的内容，而且相当有意思，而且内容很多，而且有可能颠覆你的三《观》（毕竟三管齐下，不颠覆三观也难）。今天的标题中的三个名称，听上去就怪怪的。什么流，管道，重定向，都啥玩意啊。不...',NULL,'csdn/linux/1_1_1_9_1504264422.513841.html',NULL,0,0,0,1,0,NULL,1442196033000,1442196033000,1442196033000),(100253,0,2113,'Linux内核源码分析--系统时间初始化（kernel_mktime()函数）',4,'[119,159,250,126]','从boot文件中的几个汇编程序执行后跳转到init文件中的main.c程序开始继续执行，该main.c函数式为系统运行的环境进行初始化的。首先来看系统时间的初始化（因为系统时间的初始化开始程序就在in...',NULL,'csdn/linux/1_0_1_8_1504264450.684202.html',NULL,0,0,0,1,0,NULL,1421708414000,1421708414000,1421708414000),(100254,0,2447,'Linux0.11 创建进程的过程分析--fork函数的使用',4,'[251,21,210]','/*\n* linux/kernel/fork.c\n*\n* (C) 1991 Linus Torvalds\n*/\n/*\n注意：signal.c和fork.c文件的编译选项内不能有vc变量优化选项/Og，...',NULL,'csdn/linux/1_1_1_7_1504264745.333593.html',NULL,0,0,0,1,0,NULL,1373547652000,1373547652000,1373547652000),(100255,0,2444,'Linux 进程等待队列',4,'[21,191,75,223]','Linux内核的等待队列是以双循环链表为基础数据结构，与进程调度机制紧密结合，能够用于实现核心的异步事件通知机制。在这个链表中，有两种数据结构：等待队列头（wait_queue_head_t）和等待队...',NULL,'csdn/linux/1_1_1_11_1504264742.207041.html',NULL,0,0,0,1,0,NULL,1372669251000,1372669251000,1372669251000),(100256,0,2094,'【Linux探索之旅】第三部分第四课：后台运行及合并多个终端',4,'[21,252,119,107,160]','我们使用的终端让我们难免有一种感觉：我们每次只能在一个终端中运行一个进程。但其实这是大错特错的。\n\n终端还可以运行后台进程。要使进程一个在后台运行，有几种方法，我们都将学习。\n\n这一课的第三节还将学习...',NULL,'csdn/linux/1_1_1_7_1504264428.196223.html',NULL,0,0,0,1,0,NULL,1442552449000,1442552449000,1442552449000),(100257,0,2102,'Linux内核源码分析--文件系统（四、Bitmap.c）',4,'[253,119,188,254]','总结的来说其实Bitmap.c程序就是操作文件系统中的两个位图：i节点位图和逻辑块位图；拿逻辑块位图来说吧，申请一个新的逻辑块时，首先是在8块逻辑块位图中查找一个空闲的比特位，找到以后转换成逻辑块号，...',NULL,'csdn/linux/1_0_1_0_1504264441.510516.html',NULL,0,0,0,1,0,NULL,1424534417000,1424534417000,1424534417000),(100258,0,2218,'Linux内核2.6的进程调度',4,'[162,179,100,35,21]','Linux是多任务抢占操作系统，多任务就是指多个进程间通过分时切换来并发执行。非抢占的系统是对每个进程而言，除非时间片用完或主动放弃否则不会被剥夺CPU,主动放弃包括调用一些调度的系统调用（比如sch...',NULL,'csdn/linux/1_0_3_0_1504264523.352568.html',NULL,0,0,0,1,0,NULL,1375822808000,1375822808000,1375822808000),(100259,0,2115,'Linux内核源码分析--文件系统（三、buffer.c）',4,'[253,119,188,254]','前面已经大概的分析了下高速缓存区相关知识，这里再来分析下几个重要的函数；1、清缓存：把缓存区数据和设备进行同步；   2、缓存块插入到双链表/hash链表中，从双链表/hash链表中删除缓存块；   ...',NULL,'csdn/linux/1_0_1_2_1504264452.832813.html',NULL,0,0,0,1,0,NULL,1423576852000,1423576852000,1423576852000),(100260,0,2234,'printk的用法',4,'[255,256,35,145,223]','printk的用法内核通过 printk() 输出的信息具有日志级别，日志级别是通过在 printk() 输出的字符串前加一个带尖括号的整数来控制的，如 printk(\"Hello, world!\\n...',NULL,'csdn/linux/1_0_3_4_1504264531.935523.html',NULL,0,0,0,1,0,NULL,1375732845000,1375732845000,1375732845000),(100261,0,2256,'Linux System Programming --Chapter Nine',4,'[21,257,35,258,259]','这一章的标题是 “信号” ，所以本文将对信号的各个方面进行介绍，由于Linux中的信号机制远比想象的要复杂，所以，本文不会讲的很全面。。。信号机制是进程之间相互传递消息的一种方法，信号全称为软中断信号...',NULL,'csdn/linux/1_1_1_1_1504264547.52845.html',NULL,0,0,0,1,0,NULL,1371538841000,1371538841000,1371538841000),(100262,0,2490,'基于XML配置的Spring MVC（所需jar包，web.xml配置，处理器配置，视图解析器配置）',2,'[27]','1、添加jar\n\n2、web.xml配置\n\n\n xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\n xmlns:xsi=\"http://www.w3.org/200...',NULL,'csdn/java/1_0_2_8_1504264826.922156.html',NULL,0,0,0,1,0,NULL,1400450455000,1400450455000,1400450455000),(100263,0,2285,'Linux内核工程导论——进程社会学',4,'[21,260,119]','服务与进程	进程是满足用户需求的一系列任务，有的为了提供一个交互的界面，有的为了提供一个后台的演算，有的为了提供一个网络服务，有的为了利用磁盘资源做存储。归根到底，进程就是需求的承载体。PC本身就是通...',NULL,'csdn/linux/1_0_2_11_1504264595.653467.html',NULL,0,0,0,1,0,NULL,1446674443000,1446674443000,1446674443000),(100264,0,2232,'Linux上程序调试的基石(1)--ptrace',4,'[145,257,261,210,262]','引子: 1.在Linux系统中，进程状态除了我们所熟知的TASK_RUNNING，TASK_INTERRUPTIBLE，TASK_STOPPED等，还有一个TASK_TRACED。这表明这个进程处于什...',NULL,'csdn/linux/1_0_3_2_1504264530.996703.html',NULL,0,0,0,1,0,NULL,1375797620000,1375797620000,1375797620000),(100265,0,2061,'x86汇编--程序加载器',4,'[180,119,263]','加载器程序就是如何把一个程序从磁盘上加载到内存空间执行：\n步骤思考（实模式下的加载器）：\n        第一、确定从磁盘哪个扇区中加载，以及加载到内存中的什么地方；\n        第二、最基本的设...',NULL,'csdn/linux/1_0_2_1_1504264409.136242.html',NULL,0,0,0,1,0,NULL,1417795232000,1417795232000,1417795232000),(100266,0,2612,'Java 实现代理(Proxy)模式',2,'[12,264]','/**\n * 游戏者接口\n * @author stone\n * \n */\npublic interface IGamePlayer {\n\n	// 登录游戏\n	public void login(St...',NULL,'csdn/java/1_0_1_7_1504265097.923952.html',NULL,0,0,0,1,0,NULL,1412784015000,1412784015000,1412784015000),(100267,0,2423,'Linux0.11进程分配时间片的策略',4,'[21,57,265,266,267]','想知道内核什么时候给进程重新分配时间片，最好的办法就是阅读源代码（其中已经打了注释）/*********************************************************...',NULL,'csdn/linux/1_1_1_1_1504264731.676152.html',NULL,0,0,0,1,0,NULL,1373893246000,1373893246000,1373893246000),(100268,0,2541,'淘宝网采用什么技术架构来实现网站高负载的',2,'[86,93]','时间过得很快，来淘宝已经两个月了，在这两个月的时间里，自己也感受颇深。下面就结合淘宝目前的一些底层技术框架以及自己的一些感触来说说如何构建一个可 伸缩，高性能，高可用性的分布式互联网应用。\r\n\r\n相关...',NULL,'csdn/java/1_0_1_17_1504264906.934209.html',NULL,0,0,0,1,0,NULL,1417096853000,1417096853000,1417096853000),(100269,0,2257,'Linux System Programming --Chapter Eight',4,'[21,215,165,192,210]','内存管理一.分配动态内存的几个函数用户空间内存分配：malloc、calloc、realloc1、malloc原型如下：extern void *malloc(unsigned int num_byt...',NULL,'csdn/linux/1_1_1_2_1504264548.594319.html',NULL,0,0,0,1,0,NULL,1371538841000,1371538841000,1371538841000),(100270,0,2151,'JavaEE框架——struts2入门',2,'[72,128,268,115,102]','1.strust简介（发展）：\n大概的流行时间：2010前后各3年\n※有两个版本：Struts1，Struts2\n       Struts1: 采用servlet机制，JSP+Action(Serv...',NULL,'csdn/java/1_0_1_2_1504264474.623054.html',NULL,0,0,0,1,0,NULL,1472565600000,1472565600000,1472565600000),(100271,0,2330,'神奇的大内核锁',4,'[159,269,270,215,271]','Big Kernel Lock（BKL）（大内核锁），是linux内核中使用到的一种锁，它跟普通的锁原理上的一样的：lock_kernel();/* 临界区 */unlock_kernel();但是它...',NULL,'csdn/linux/1_0_1_0_1504264638.490547.html',NULL,0,0,0,1,0,NULL,1378285255000,1378285255000,1378285255000),(100272,0,2445,'两篇文章说异常和中断之二',4,'[212,21,207,272,35]','一、基本概念1. 产生的位置发生的时刻时序中断CPU外部随机异步异常CPU正在执行的程序一条指令终止执行后同步2.由中断或异常执行的代码不是一个进程，而是一个内核控制路径，代表中断发生时正在运行的进程...',NULL,'csdn/linux/1_1_1_9_1504264743.186532.html',NULL,0,0,0,1,0,NULL,1372683647000,1372683647000,1372683647000),(100273,0,2424,'Linux进程－进程的创建',4,'[21,251,57,170,273]','今天学习了Linux的进程创建的基本原理，是基于0.11版本核心的。下面对其作一下简单的总结。一、Linux进程在内存中的相关资源   很容易理解，Linux进程的创建过程就是内存中进程相关资源产生的...',NULL,'csdn/linux/1_1_1_5_1504264732.643633.html',NULL,0,0,0,1,0,NULL,1373644801000,1373644801000,1373644801000),(100274,0,2448,'深入解析Linux中的fork函数',4,'[21,257,165,211,274]','1、定义\n#include \n#include\npid_t fork( void );pid_t 是一个宏定义，其实质是int，被定义在#include中返回值：若成功调用一次则返回两个值，子进程返回...',NULL,'csdn/linux/1_1_1_14_1504264746.601816.html',NULL,0,0,0,1,0,NULL,1372420843000,1372420843000,1372420843000),(100275,0,2197,'国内O2O运营模式逐渐改变我们生活方式',2,'[275,276,277]','最近看了一篇关于O2O的文章，让我',NULL,'csdn/java/1_1_1_6_1504264510.614827.html',NULL,0,0,0,1,0,NULL,1412946021000,1412946021000,1412946021000),(100276,0,2290,'Linux内核工程导论——网络：Netfilter概览',4,'[21,35,101,278]','简介最早的内核包过滤机制是ipfwadm，后来是ipchains，再后来就是iptables/netfilter了。再往后，也就是现在是nftables。不过nftables与iptables还处于争...',NULL,'csdn/linux/1_0_2_14_1504264605.957549.html',NULL,0,0,0,1,0,NULL,1451934052000,1451934052000,1451934052000),(100277,0,2351,'Linux内核高端内存',4,'[35,279,280,21,100]','Linux内核地址映射模型x86 CPU采用了段页式地址映射模型。进程代码中的地址为逻辑地址，经过段页式地址映射后，才真正访问物理内存。段页式机制如下图。 Linux内核地址空间划分通常32位Linu...',NULL,'csdn/linux/1_0_1_10_1504264653.778166.html',NULL,0,0,0,1,0,NULL,1377176411000,1377176411000,1377176411000),(100278,0,2299,'Linux内核工程导论——存储：缓存层',4,'[153,188,100,21,35]','缓存层\nbdi：缓存设备\n         bdi是对块设备层的内存支持，相关代码页位于mm目录下。bdi的全称是backing device info，后备设备是非易失性存储器，但是这种存储器都比较...',NULL,'csdn/linux/1_0_2_5_1504264614.346526.html',NULL,0,0,0,1,0,NULL,1444330841000,1444330841000,1444330841000),(100279,0,2281,'Linux内核工程导论——硬件：无线子系统',4,'[21,35,100]','WiMax\nWifi\n内核中有一个rfkill子系统，使用这个可以关闭任何一个射频收发器。Linux中倾向于通用架构子系统，各个设备其实都是实现这个子系统规定的函数。这些子系统向上就提供操作同类函数的...',NULL,'csdn/linux/1_0_2_3_1504264585.010362.html',NULL,0,0,0,1,0,NULL,1444330837000,1444330837000,1444330837000),(100280,0,2182,'jplogic开发案例之应用皮肤界面管理',2,'[217,281,282,241,229]','本人陆续推出jplogic开发案例，',NULL,'csdn/java/1_1_1_14_1504264503.574168.html',NULL,0,0,0,1,0,NULL,1404939642000,1404939642000,1404939642000),(100281,0,2488,'OA中总结：s:select,关于使用modelDriven,项目分层，@Transactional，jspf,各个层上配置注解交给spring管理的方法，简单的OGNL表达式写法',2,'[59,283,129,56,284]','%\n\n list:需要进行迭代的list集合\n listKey:需要提交的值\n listValue:需要在页面上显示的值\n============================\n优化\n1.Actio...',NULL,'csdn/java/1_0_1_9_1504264811.699423.html',NULL,0,0,0,1,0,NULL,1344528052000,1344528052000,1344528052000),(100282,0,2422,'LINUX0.11 内核阅读笔记',4,'[21,35,215,285,286]','一．源码目录图1二．系统总体流程：系统从boot开始动作，把内核从启动盘装到正确的位置，进行一些基本的初始化，如检测内存，保护模式相关，建立页目录和内存页表，GDT表，IDT表。然后进入main进行初...',NULL,'csdn/linux/1_1_1_0_1504264730.655474.html',NULL,0,0,0,1,0,NULL,1374429607000,1374429607000,1374429607000),(100283,0,2376,'Linux内核工程导论——内存管理（一）',4,'[35,100]','Linux内存管理\n概要\n物理地址管理\n很多小型操作系统，例如eCos，vxworks等嵌入式系统，程序中所采用的地址就是实际的物理地址。这里所说的物理地址是CPU所能见到的地址，至于这个地址如何映射...',NULL,'csdn/linux/1_0_1_0_1504264681.929859.html',NULL,0,0,0,1,0,NULL,1440529243000,1440529243000,1440529243000),(100284,0,2295,'Android 建造者(Builder)模式',2,'[287,288]','关于 Builder 模式 详述：http://blog.csdn.net/jjwwmlp456/article/details/39890699\n\n\n先来张图\n  \n看到 Android  中 使用...',NULL,'csdn/java/1_0_2_3_1504264610.12015.html',NULL,0,0,0,1,0,NULL,1435917628000,1435917628000,1435917628000),(100285,0,2426,'Linux0.11小结',4,'[21,35,207,192,119]','第一部分 基础内容1.操作系统基础    操作系统是计算机硬件系统与用户程序间重要环节，理解操作系统的原理是编写优秀代码的基础。教课书中阐述的操作系统一般由5部分组成。一个最简单的操作系统，可以不需要...',NULL,'csdn/linux/1_1_1_13_1504264733.699226.html',NULL,0,0,0,1,0,NULL,1372593634000,1372593634000,1372593634000),(100286,0,2308,'为arm内核构建源码树----Linux内核剖析（四）',4,'[163,35,36,100,289]','前面说到要做linux底层开发或者编写Linux的驱动，必须建立内核源码树，之前我们提到过在本机上构建源码树—-Linux内核剖析（三），其建立的源码树是针对i686平台的，但是我么嵌入式系统用的是a...',NULL,'csdn/linux/1_0_1_8_1504264624.03277.html',NULL,0,0,0,1,0,NULL,1443715224000,1443715224000,1443715224000),(100287,0,2434,'Linux--缺页中断和交换技术',4,'[244,246,270,215,191]','1．请求调页中断：进程线性地址空间里的页面不必常驻内存，例如进程的分配请求被理解满足，空间仅仅保留vm_area_struct的空间，页面可能被交换到后援存储器，或者写一个只读页面(COW)。Linu...',NULL,'csdn/linux/1_1_1_16_1504264737.003872.html',NULL,0,0,0,1,0,NULL,1372154411000,1372154411000,1372154411000),(100288,0,2356,'菜鸟版JAVA设计模式-从抽象与实现说桥接模式',2,'[53,89,12,290]','桥接模式，初学的时候其实很不理解为什么要把这个模式命名为桥接模式，脑海里突然联想到。其实我学习是一件比较痛苦的事情，因为我必须要知道来龙去脉才能学的进去，所以，很快我就对这个命名产生了兴趣，桥接？\n嗯...',NULL,'csdn/java/1_0_1_0_1504264658.00462.html',NULL,0,0,0,1,0,NULL,1413986426000,1413986426000,1413986426000),(100289,0,2292,'Linux内核工程导论–网络：TCP连接',4,'[100,125]','Linux内核工程导论–网络：TCPTCP存在原因       TCP希望达成数据按序的，无损失的传输。 \n       只要有TCP这个协议的需求，就有其带来的问题。其问题是，既然要保证按序到达和完...',NULL,'csdn/linux/1_0_2_12_1504264607.027887.html',NULL,0,0,0,1,0,NULL,1447448441000,1447448441000,1447448441000),(100290,0,2607,'Java 实现组合(Composite)模式',2,'[12,291]','类图\n\n\n/**\n * 树	整体\n * \n * @author stone\n * \n */\npublic class Tree {\n	private TreeNode root; //根节点\n\n	pu...',NULL,'csdn/java/1_0_1_10_1504265092.741277.html',NULL,0,0,0,1,0,NULL,1412877630000,1412877630000,1412877630000),(100291,0,2383,'Linux内核工程导论——基础架构',4,'[100,35,21]','基础功能元素\nworkqueue\n         linux下的工作队列时一种将工作推后执行的方式，其可以被睡眠、调度，与内核线程表现基本一致，但又比内核线程使用简单，一般用来处理任务内容比较动态的...',NULL,'csdn/linux/1_0_1_6_1504264690.030737.html',NULL,0,0,0,1,0,NULL,1440795644000,1440795644000,1440795644000),(100292,0,2210,'jplogic之activiti整合案例（自定义流程引擎[非开源框架]待续）',2,'[292,293,294]','Activiti 作为一个遵从 Apache 许可的工作流和业务流程管理开源平台，其核心是基于 Java\r\n 的超快速、超稳定的 BPMN 2.0 流程引擎，强调流程服务的可嵌入性和可扩展性，同时更加...',NULL,'csdn/java/1_1_1_5_1504264516.815842.html',NULL,0,0,0,1,0,NULL,1414800015000,1414800015000,1414800015000),(100293,0,2200,'Linux内存映射--mmap函数',4,'[215,100,21,295,35]','Linux提供了内存映射函数mmap, 它把文件内容映射到一段内存上(准确说是虚拟内存上), 通过对这段内存的读取和修改, 实现对文件的读取和修改, 先来看一下mmap的函数声明:头文件:原型: vo...',NULL,'csdn/linux/1_0_2_5_1504264511.663361.html',NULL,0,0,0,1,0,NULL,1376496012000,1376496012000,1376496012000),(100294,0,2208,'jplogic之activiti modeler流程设计器集成案例（非spring集成）',2,'[229,294,296,297]','续《jplogic之activiti整合案例（自定义流程引擎[非开源框架]待续）》关于',NULL,'csdn/java/1_1_1_4_1504264515.848724.html',NULL,0,0,0,1,0,NULL,1415804456000,1415804456000,1415804456000),(100295,0,2203,'linux下字节对齐',4,'[194,165,298,210,100]','一，内存地址对齐的概念   计算机内存中排列、访问数据的一种方式，包含基本数据对齐和结构体数据对齐。   32位系统中，数据总线宽度为32，每次能够读取4字节数据。地址总线为32，最大寻址空间为4GB...',NULL,'csdn/linux/1_0_2_3_1504264512.917497.html',NULL,0,0,0,1,0,NULL,1376578811000,1376578811000,1376578811000),(100296,0,2489,'OA中SSH+JBPM项目整合',2,'[240,299,59,142,45]','一，集成 Spring 与 Hibernate\n 1，配置SessionFactory\n  1，配置\n   ---------------------- applicationContext.xml ...',NULL,'csdn/java/1_0_1_6_1504264813.032858.html',NULL,0,0,0,1,0,NULL,1344412821000,1344412821000,1344412821000),(100297,0,2340,'linux内核 asmlinkage宏',4,'[232,255,214,233,100]','asmlinkage是个宏，使用它是为了保持参数在stack中。看一下/usr/include/asm/linkage.h里面的定义：#define asmlinkage CPP_ASMLINKAGE...',NULL,'csdn/linux/1_0_1_19_1504264643.827725.html',NULL,0,0,0,1,0,NULL,1376924430000,1376924430000,1376924430000),(100298,0,2450,'什么是文件头',4,'[18,300,301,21]','要求每个文件均有特殊的、可识别的文件头。文件头偏移	代号	数据类型	字节数	默认值	名称	说明0	FUM	P-BCD	2	 文件统一标识	所有文件均含有此标识符2	FDT	P-BCD	1	 文件数据类...',NULL,'csdn/linux/1_1_1_6_1504264748.36518.html',NULL,0,0,0,1,0,NULL,1373565609000,1373565609000,1373565609000),(100299,0,2211,'机制与策略',4,'[119,102,52,21,100]','Unix/Linux的接口设计有一句通用的格言“提供机制而不是策略”。区别对待机制（mechanism）和策略（policy）是Unix设计中的一大亮点。大部分的编程问题都可以被切割成两个部分：“需要...',NULL,'csdn/linux/1_0_2_15_1504264516.99444.html',NULL,0,0,0,1,0,NULL,1375909251000,1375909251000,1375909251000),(100300,0,2146,'Linux内核工程导论——数据结构：树',4,'[100,35]','内核数据结构\n链表\n待补充\n链表\n待补充\n双向链表\n待补充\n无锁链表\n待补充\n树\n树作为一种很常用的数据结构，主要包括二叉搜索数（BST）、多路搜索树（B-树）、B树根据叶子节点树分为二叉树和多叉树。...',NULL,'csdn/linux/1_0_3_2_1504264471.319427.html',NULL,0,0,0,1,0,NULL,1440334853000,1440334853000,1440334853000),(100301,0,2759,'Jersey学习记录(一)--环境配置',2,'[302]','最近公司项目在用jersey做api接口,遂来学习一下,学习的第一步,先运行起来一个项目,也就是环境配置好.1.环境配置对于IDEA来说可以直接引用包方式建立,这样的话在新建项目的时候勾选上WEB A...',NULL,'csdn/java/1_0_2_8_1504265369.890049.html',NULL,0,0,0,1,0,NULL,1469703619000,1469703619000,1469703619000),(100302,0,2387,'Linux内核工程导论——存储：SCSI、ATA与SAS',4,'[100,35,21,303]','SCSI、ATA与T10的SAS\n         1981年SCSI产生。后一致与ATA并行竞争发展。例如串行的SATA的出现就导致了串行的SCSI：SAS的出现。SCSI目前的最新标准是T10，而...',NULL,'csdn/linux/1_0_1_11_1504264694.257685.html',NULL,0,0,0,1,0,NULL,1442350848000,1442350848000,1442350848000),(100303,0,2118,'JavaEE框架——Springmvc入门(注解URL核心类详解、文件上传和下载）、和Spring的整合',2,'[27,304,305,306,59]','一、简介：\n\nSpring MVC属于SpringFrameWork的后续产品，已经融合在Spring Web Flow里面。Spring 框架提供了构建 Web 应用程序的全功能 MVC 模块。使用...',NULL,'csdn/java/1_0_1_0_1504264454.950341.html',NULL,0,0,0,1,0,NULL,1472983233000,1472983233000,1472983233000),(100304,0,2622,'Java 实现状态(State)模式',2,'[12,307]','/**\n * @author stone\n */\npublic class WindowState {\n	private String stateValue;\n	\n	public WindowStat...',NULL,'csdn/java/1_0_1_19_1504265108.13314.html',NULL,0,0,0,1,0,NULL,1413237619000,1413237619000,1413237619000),(100305,0,2347,'LINUX自旋锁详解',4,'[35,210,100,21,211]','加锁（locking）是一种广泛应用的同步技术。当内核控制路径必须访问共享数据结构或进入临界区时，就需要为自己获取一把“锁”。由锁机制保护的资源非常类似于限制于房间内的资源，当某人进入房间时，就把门锁...',NULL,'csdn/linux/1_0_1_13_1504264649.728579.html',NULL,0,0,0,1,0,NULL,1377100802000,1377100802000,1377100802000),(100306,0,2307,'Linux内核的构建过程----Linux内核剖析（五）',4,'[163,100,308]','参考 \n  一次实验引发的故事 – kernel build system探索—vmlinux是如何炼成的– kernel makefile\n问题在前面的博文中，我们先是为自己的Ubuntu安装了一套...',NULL,'csdn/linux/1_0_1_7_1504264623.988499.html',NULL,0,0,0,1,0,NULL,1444312853000,1444312853000,1444312853000),(100307,0,2120,'JavaEE框架——hibernate的使用（关于hibernate事务的必须开启的问题）',2,'[72,142,102,114,143]','一、与数据库的交互（增删改查）\n注意：1.写hql语言是是对于对象操作，而不是表数据\n            2.注意hibernate中的缓存\n\n1.Hibernate 查询方式\n\n     Hib...',NULL,'csdn/java/1_0_1_12_1504264455.710939.html',NULL,0,0,0,1,0,NULL,1472320815000,1472320815000,1472320815000),(100308,0,2202,'jplogic v1.0案例开发之人员信息管理（一）',2,'[229,309,241]','个人技术交流、合作群：376447127，我分享了使用jplogic来进行企业基础模块项目的开发的相关方法，每一个模块都使用平台通用的UI控件，控件本身绑定了相应的校验功能、以及权限控制属性等，组件还...',NULL,'csdn/java/1_1_1_9_1504264512.680452.html',NULL,0,0,0,1,0,NULL,1396184431000,1396184431000,1396184431000),(100309,0,2288,'Linux内核工程导论——存储：通用块层',4,'[100,153,75,21,35]','通用块层抽象\r\n         通用块层位于scsi的上层，文件系统的下层，系统主要的内存管理和读写优化都是在这里完成的。DIRECT_IO是跳过这一层的。这一层不是驱动，而是一种机制。其代码位于l...',NULL,'csdn/linux/1_0_2_7_1504264598.68181.html',NULL,0,0,0,1,0,NULL,1444330843000,1444330843000,1444330843000),(100310,0,2432,'内存分配的原理__进程分配内存有两种方式，分别由两个系统调用完成：brk和mmap（不考虑共享内存）',4,'[215,310,311,210,192]','如何查看进程发生缺页中断的次数？         用ps -o majflt,minflt -C program命令查看。          majflt代表major fault，中文名叫大错误，m...',NULL,'csdn/linux/1_1_1_17_1504264735.958755.html',NULL,0,0,0,1,0,NULL,1372154409000,1372154409000,1372154409000),(100311,0,2760,'Jersey学习记录(二)--请求映射和页面传值',2,'[302]','jersey的webservice开发基本上都是使用注解,接下来学习常用注解.一.根资源类1.@PATH注解@Path(\"/hello\")\npublic class HelloWorldControl...',NULL,'csdn/java/1_0_2_7_1504265370.857547.html',NULL,0,0,0,1,0,NULL,1469703620000,1469703620000,1469703620000),(100312,0,2451,'进程的用户栈和内核栈',4,'[21,312,215]','进程是程序的一次执行过程。用剧本和演出来类比，程序相当于剧本，而进程则相当于剧本的一次演出，舞台、灯光则相当于进程的运行环境。进程的堆栈每个进程都有自己的堆栈，内核在创建一个新的进程时，在创建进程控制...',NULL,'csdn/linux/1_1_1_3_1504264749.460836.html',NULL,0,0,0,1,0,NULL,1373835611000,1373835611000,1373835611000),(100313,0,2186,'java web服务器监控（j2ee web 服务器各项参数监控）',2,'[228,313]','续 《jplogic开发案例之服务器状态信息监控（服务器端监控）》',NULL,'csdn/java/1_1_1_17_1504264505.444223.html',NULL,0,0,0,1,0,NULL,1409734828000,1409734828000,1409734828000),(100314,0,2229,'Java---设计模块(装饰模式)',2,'[314,116,71]','★ 场景和问题在不对原有对象类进行修改的基础上，如何给一个或多个已有的类对象提供增强额外的功能？★ 引例 \n写一个MyBufferedReader类，使它能够对字符流(如FileReader、Inpu...',NULL,'csdn/java/1_0_1_19_1504264530.578956.html',NULL,0,0,0,1,0,NULL,1459724458000,1459724458000,1459724458000),(100315,0,2181,'jplogicv1.0开发开发案例之知识库文档信息索引检索（类仿百度搜索、类google搜索）',2,'[315,316]','基于很多项目中都可以会使用针对海量',NULL,'csdn/java/1_1_1_11_1504264502.339877.html',NULL,0,0,0,1,0,NULL,1401872423000,1401872423000,1401872423000),(100316,0,2544,'各大网站架构总结笔记',2,'[93]','各大网站架构总结笔记\r\n\r\n\r\n记得在大学里不止一次关注网站架构方面的东西了，但每次都是泛泛了解，也没有着重记录，一段时间后对各种架构的思想也就模糊了。这几天不知怎么的又心血来潮（可能是快毕业了冲动了...',NULL,'csdn/java/1_0_1_15_1504264912.498851.html',NULL,0,0,0,1,0,NULL,1417096836000,1417096836000,1417096836000),(100317,0,2589,'设计模式(7)-结构型-桥接模式(Bridge)(个人笔记)',2,'[12,45,317]','概述:将抽象部分与它的实现部分分离，使它们都可以独立地变化。适用性    1.你不希望在抽象和它的实现部分之间有一个固定的绑定关系。      例如这种情况可能是因为，在程序运行时刻实现部分应可以被选...',NULL,'csdn/java/1_1_1_6_1504265048.810782.html',NULL,0,0,0,1,0,NULL,1341342052000,1341342052000,1341342052000),(100318,0,2189,'jplogic 开发案例(FMS流媒体服务集成) 之 视频会议管理 (多人互动呼叫-应答模式视频会议含共享白板)',2,'[217,318,319,229,320]','本人之前有做过类似视频语音',NULL,'csdn/java/1_1_1_15_1504264506.703636.html',NULL,0,0,0,1,0,NULL,1407542432000,1407542432000,1407542432000),(100319,0,2599,'javaEE防盗版-ProGuard 混淆技术',2,'[321,322,18,79]','这里介绍一些java的混淆技术。混淆主要是为了保护产权，增加代码反编译后的阅读难度。\n\n\n本文介绍的是ProGuard来进行代码混淆，集成在Maven环境中。常规环境的混淆技术以后再做介绍了\n\n\nPO...',NULL,'csdn/java/1_0_1_2_1504265074.009081.html',NULL,0,0,0,1,0,NULL,1475067603000,1475067603000,1475067603000),(100320,0,2762,'nginx学习记录--安装和转发到tomcat',2,'[323]','有一段时间没写博客了,因为接了几个项目,并且临近期末,还要准备考试,比较忙.最近项目上线,项目主要是微信智能硬件管理,所以需要两个服务器,一个用来处理微信上传的消息,一个用来处理智能设备上传的消息,所...',NULL,'csdn/java/1_0_2_13_1504265372.909351.html',NULL,0,0,0,1,0,NULL,1466510421000,1466510421000,1466510421000),(100321,0,2022,'进程间通信之-共享内存Shared Memory--linux内核剖析（十一）',4,'[70,324,35,215,311]','共享内存共享内存是进程间通信中最简单的方式之一。共享内存是系统出于多个进程之间通讯的考虑，而预留的的一块内存区。共享内存允许两个或更多进程访问同一块内存，就如同 malloc() 函数向不同进程返回了...',NULL,'csdn/linux/1_0_1_0_1504264159.265574.html',NULL,0,0,0,1,0,NULL,1459260011000,1459260011000,1459260011000),(100322,0,2301,'进程间通信之-共享内存Shared Memory--linux内核剖析（十一）',4,'[70,324,35,215,311]','共享内存共享内存是进程间通信中最简单的方式之一。共享内存是系统出于多个进程之间通讯的考虑，而预留的的一块内存区。共享内存允许两个或更多进程访问同一块内存，就如同 malloc() 函数向不同进程返回了...',NULL,'csdn/linux/1_0_1_0_1504264616.416295.html',NULL,0,0,0,1,0,NULL,1459260011000,1459260011000,1459260011000),(100323,0,2178,'jplogic v1.0案例开发之知识库管理（文档管理等）（二）',2,'[221,325,326,327,328]','jplogic v1.0开发陆续更新，意在和广大网友',NULL,'csdn/java/1_1_1_10_1504264501.21689.html',NULL,0,0,0,1,0,NULL,1399762850000,1399762850000,1399762850000),(100324,0,2106,'BCD码转换成二进制和ASCII码',4,'[119,126,329]','BCD码转换成二进制和ASCII码；用BCD码表示：十位上的十进制数为 2 == BCD码表示为 0010；个位上的十进制数9 === BCD码表示为 1001；所以总的来说 十进制数 29 用BCD...',NULL,'csdn/linux/1_0_1_9_1504264443.488212.html',NULL,0,0,0,1,0,NULL,1421510432000,1421510432000,1421510432000),(100325,0,2623,'Java 实现迭代器(Iterator)模式',2,'[12,330]','类图\n\n\n/**\n * 自定义集合接口, 类似java.util.Collection\n * 用于数据存储\n * @author stone\n *\n */\npublic interface IColl...',NULL,'csdn/java/1_0_1_15_1504265109.226014.html',NULL,0,0,0,1,0,NULL,1413025221000,1413025221000,1413025221000),(100326,0,2302,'进程间通信之-信号量semaphore--linux内核剖析（十）',4,'[324,32,197,35,259]','信号量什么是信号量信号量的使用主要是用来保护共享资源，使得资源在一个时刻只有一个进程（线程）所拥有。\n  信号量的值为正的时候，说明它空闲。所测试的线程可以锁定而使用它。若为0，说明它被占用，测试的线...',NULL,'csdn/linux/1_0_1_1_1504264617.428158.html',NULL,0,0,0,1,0,NULL,1459202437000,1459202437000,1459202437000),(100327,0,2341,'浅析linux内核中的idr机制',4,'[331,191,35,21,100]','idr在linux内核中指的就是整数ID管理机制，从本质上来说，这就是一种将整数ID号和特定指针关联在一起的机制。这个机制最早是在2003年2月加入内核的，当时是作为POSIX定时器的一个补丁。现在，...',NULL,'csdn/linux/1_0_1_17_1504264644.611963.html',NULL,0,0,0,1,0,NULL,1376996426000,1376996426000,1376996426000),(100328,0,2446,'Linux根文件系统介绍',4,'[332,21,333,334]','系统　　根文件系统首先是一种文件系统，但是相对于普通的文件系统，它的特殊之处在于，它是内核启动时所mount的第一个文件系统，内核代码映像文件保存在根文件系统中，而系统引导启动程序会在根文件系统挂载之...',NULL,'csdn/linux/1_1_1_8_1504264744.190514.html',NULL,0,0,0,1,0,NULL,1373439652000,1373439652000,1373439652000),(100329,0,2569,'ajax post请求request.getParameter(\"\")取值为null',2,'[108,335]','写一个简单的ajax 请求，发现通过request.getParamter(“”)取到的值为null \n前台代码：\n\n\n\n$(document).ready(function(){\n    $(\"#a...',NULL,'csdn/java/1_1_1_9_1504264966.988935.html',NULL,0,0,0,1,0,NULL,1427637634000,1427637634000,1427637634000),(100330,0,2228,'Java-单机版的书店管理系统(练习设计模块和思想_系列 二 )',2,'[245,114,18,336,337]','今天对前面的代码有了小小的修改，让代码更加完善了一点。 \n至于用户唯一标识码uuid，会在以后修改成程序内部生成的， \n现在的uuid还是由用户自己设置。今天对这个程序，添加了用户界面的表现层的一部分...',NULL,'csdn/java/1_0_1_16_1504264529.684558.html',NULL,0,0,0,1,0,NULL,1460059240000,1460059240000,1460059240000),(100331,0,2440,'Linux 句柄是什么 ？',4,'[21,338,339,340,341]','1.句柄就是一个标识符，只要获得对象的句柄，我们就可以对对象进行任意的操作。2.句柄不是指针，操作系统用句柄可以找到一块内存，这个句柄可能是标识符，map的key，也可能是指针，看操作系统怎么处理的了...',NULL,'csdn/linux/1_1_1_4_1504264740.23272.html',NULL,0,0,0,1,0,NULL,1373727655000,1373727655000,1373727655000),(100332,0,2254,'【5】JAVA---地址App小软件（DeletePanel.class）（表现层）',2,'[113,337,245,78,45]','删除地址的表现层类。 \n如果没有选中要删除的地址信息，会出现窗口提示： \n删除地址界面：（无法修改数据，只能看） \n/*\n * DeletePanel.java\n *\n */package cn.hn...',NULL,'csdn/java/1_0_1_3_1504264545.240339.html',NULL,0,0,0,1,0,NULL,1459378817000,1459378817000,1459378817000),(100333,0,2738,'SpringMVC学习记录(七)--拦截器的使用',2,'[27,342]','SpringMVC的请求如下面这种图所示: \n可以看出所有的请求都要通过Dispatherservlet来接收,然后通过Handlermapping来决定使用哪个控制器,再根据ViewResolver...',NULL,'csdn/java/1_0_3_8_1504265347.457533.html',NULL,0,0,0,1,0,NULL,1460152846000,1460152846000,1460152846000),(100334,0,2584,'Java---设计模块(单例的变形)(多例)',2,'[12,116,209,71,153]','设计模式1——单例变形(多例) \n★ 缓存在单例中的使用 \n缓存在编程中使用很频繁，有着非常重要的作用，它能够帮助程序实现以空间换取时间，通常被设计成整个应用程序所共享的一个空间，现要求实现一个用缓存...',NULL,'csdn/java/1_0_2_2_1504265035.78254.html',NULL,0,0,0,1,0,NULL,1459620021000,1459620021000,1459620021000),(100335,0,2585,'Java---设计模块（设计模块的简介及最简单的俩个单例代码加测试）',2,'[197,116,12,343]','设计模式学习概述： \n★ 为什么要学习设计模式 \n1、设计模式都是一些相对优秀的解决方案，很多问题都是典型的、有代表性的问题，学习设计模式，我们就不用自己从头来解决这些问题，相当于在巨人的肩膀上，复用...',NULL,'csdn/java/1_0_2_3_1504265036.665518.html',NULL,0,0,0,1,0,NULL,1459616442000,1459616442000,1459616442000),(100336,0,2303,'Linux内核绪论----Linux内核剖析（二）',4,'[35,21]','什么是内核内核是操作系统最基本的部分。它是为众多应用程序提供对计算机硬件的安全访问的一部分软件，这种访问是有限的，并且内核决定一个程序在什么时候对某部分硬件操作多长时间。内核的分类可分为单内核和双内核...',NULL,'csdn/linux/1_0_1_10_1504264618.6433.html',NULL,0,0,0,1,0,NULL,1428588048000,1428588048000,1428588048000),(100337,0,2656,'设计模式（一）— 什么是设计模式',2,'[12]','设计模式（Design Pattern）是一套被反复使用、多数人知晓的、经过分类的、代码设计经验的总结。',NULL,'csdn/java/1_1_1_0_1504265219.060817.html',NULL,0,0,0,1,0,NULL,1496995238000,1496995238000,1496995238000),(100338,0,2658,'设计模式（三）— 设计原则',2,'[12]','设计原则：\n1.逻辑代码独立到单独的方法中，注重封装性--易读，易复用。\n\n   不要在一个方法中，写下上百行的逻辑代码。把各小逻辑代码独立出来，写于其它方法中，易读其可重复调用。\n\n\n2.写类，写方...',NULL,'csdn/java/1_1_1_2_1504265221.133612.html',NULL,0,0,0,1,0,NULL,1497020415000,1497020415000,1497020415000),(100339,0,2534,'关于Spring项目配置多个数据源的实例演示',2,'[59,143,63]','一、多数据源动态切换原理项目中我们经常会遇到多数据源的问题，尤其是数据同步或定时任务等项目更是如此；又例如：读写分离数据库配置的系统。1、多数据源设置： \n1）静态数据源切换：一般情况下，我们可以配置...',NULL,'csdn/java/1_1_1_17_1504264891.550587.html',NULL,0,0,0,1,0,NULL,1498568434000,1498568434000,1498568434000),(100340,0,2657,'设计模式（二）— 为什么要用设计模式',2,'[12]','使用设计模式的目的：为了代码可重用性、让代码更容易被他人理解、保证代码可靠性。 设计模式使代码编写真正工程化；设计模式是软件工程的基石脉络，如同大厦的结构一样。',NULL,'csdn/java/1_1_1_1_1504265220.150674.html',NULL,0,0,0,1,0,NULL,1496995240000,1496995240000,1496995240000),(100341,0,2626,'JavaBean',2,'[37]','一,JavaBean是什么\nJavaBean 是一种JAVA语言写成的可重用组件。本质上是一组具有特殊规范的公共类。\n\n为写成JavaBean，类必须是具体的和公共的，并且具有无参数的构造器。Java...',NULL,'csdn/java/1_0_1_1_1504265132.494839.html',NULL,0,0,0,1,0,NULL,1485460804000,1485460804000,1485460804000),(100342,0,2499,'Java设计模式15——命令模式',2,'[53,344]','一、介绍命令模式：将一个请求封装为对象，从而使我们可用不同的请求对客户进行参数化；对请求排队或者记录请求日志，以及支持可撤销的操作。也称为：动作(Action)模式、事务(transaction)模式...',NULL,'csdn/java/1_1_1_14_1504264850.947705.html',NULL,0,0,0,1,0,NULL,1478984449000,1478984449000,1478984449000),(100343,0,2508,'Java设计模式12——责任链模式',2,'[53,345]','一、定义　　将能够处理同一类请求的对象连成一条链，所提交的请求将沿着这条链传递，链上的对象逐个判断是否有能力处理该请求，如果有则处理，如果没有则将请求传递给下一个对象处理。二、场景举例1.生活中场景 ...',NULL,'csdn/java/1_1_1_11_1504264860.123131.html',NULL,0,0,0,1,0,NULL,1478548807000,1478548807000,1478548807000),(100344,0,2501,'Java设计模式20-备忘录模式',2,'[53,346]','一、场景当我们使用文本编译器记录一些内容时，发现这一步写错了，往往可以使用Ctrl+Z的方式会退到上一个状态，其中运用到的知识就是备忘录模式。二、定义备忘录模式，即保存某个对象内部状态的拷贝，这样以后...',NULL,'csdn/java/1_1_1_19_1504264853.003265.html',NULL,0,0,0,1,0,NULL,1480672834000,1480672834000,1480672834000),(100345,0,2533,'Spring整合Quartz实现定时任务的时间更新，暂停和启用（不需要重启项目并且配置多数据源）',2,'[347,59,78,118]','这是一套独立的定时系统，暂时不涉及与外界三方系统的交互，如有需求可自己根据场景来修改。配置项目基于spring4+mybatis3+quartz2.2.1来构建的，pom文件如下：<project x...',NULL,'csdn/java/1_1_1_19_1504264889.419407.html',NULL,0,0,0,1,0,NULL,1501254052000,1501254052000,1501254052000),(100346,0,2627,'JavaWeb开发模式1：JSP+JavaBean',2,'[37,74,348]','看了几天web开发，说一下体会吧：\r\n开发分层：界面层（View）业务逻辑层，数据库层，但是单纯的JSP开发是将这个三层混在一起了，使得代码的维护性太差，如何解决？\r\n分层，JavaBean封装业务逻...',NULL,'csdn/java/1_0_1_2_1504265133.282985.html',NULL,0,0,0,1,0,NULL,1485460826000,1485460826000,1485460826000),(100347,0,2702,'外观模式',2,'[18,60,12,71,61]','外观模式',NULL,'csdn/java/1_1_1_5_1504265302.101505.html',NULL,0,0,0,1,0,NULL,1472025658000,1472025658000,1472025658000),(100348,0,2548,'javascript设计模式--原型模式',2,'[69,274,12]','Prototype:用原型实例指向创建对象的类，使用于创建新的对象的类共享原型对象的属性及方法．创建一个焦点图//图片轮播类\nvar LoopImages = function(imgArr,cont...',NULL,'csdn/java/1_1_1_1_1504264925.508514.html',NULL,0,0,0,1,0,NULL,1461574840000,1461574840000,1461574840000),(100349,0,2500,'Java设计模式19——观察者模式',2,'[53,349]','一、定义观察者模式定义了一个一对多的依赖关系，让多个观察者对象同时监听同一个主题对象。当这个主题状态发生改变时，会通知所有观察者对象，让它们自动更新自己。二、类似场景\n聊天室程序的创建。服务器创建好后...',NULL,'csdn/java/1_1_1_18_1504264851.909149.html',NULL,0,0,0,1,0,NULL,1479664837000,1479664837000,1479664837000),(100350,0,2661,'架构师入门笔记六 初识线程安全锁',2,'[350,351]','架构师入门笔记六 初识线程安全锁\r\n这章主要介绍Synchronized，ThreadLock，Lock，Concurrent.util等方法。\r\n\r\n\r\n1 Lock 锁\r\n在java多线程中，可以...',NULL,'csdn/java/1_0_1_5_1504265253.53683.html',NULL,0,0,0,1,0,NULL,1503734437000,1503734437000,1503734437000),(100351,0,2703,'如何学好设计模式？',2,'[18,60,12,352]','如何学好设计模式？',NULL,'csdn/java/1_1_1_10_1504265303.915875.html',NULL,0,0,0,1,0,NULL,1471348832000,1471348832000,1471348832000),(100352,0,2477,'java--多线程与juc',2,'[52]','刚刚研究多线程和juc发现一个写的比较不错的地址。多线程：http://www.cnblogs.com/skywang12345/p/java_threads_category.htmljuc:htt...',NULL,'csdn/java/1_0_2_3_1504264787.278852.html',NULL,0,0,0,1,0,NULL,1453280458000,1453280458000,1453280458000),(100353,0,2663,'架构师入门笔记五 初识线程池',2,'[350,353]','架构师入门笔记五 初识线程池\n\n\n线程池，顾名思义是线程的池子。当任务提交给线程池的时候，线程池会安排一个空闲的线程去执行任务，当任务执行结束后返回到线程池中。若没有空闲的线程去执行任务，则该任务就会...',NULL,'csdn/java/1_0_1_4_1504265255.543954.html',NULL,0,0,0,1,0,NULL,1503212444000,1503212444000,1503212444000),(100354,0,2476,'类和对象理解',2,'[18,290]','最近看了TIOBE排行，java居然已经超过了c语言，排在了第一位。心理莫名的激动了一下，不是想说java有多牛逼，只是感慨现在java程序员越来越多，竞争压力加大。java区别于c语言，很重要的一点...',NULL,'csdn/java/1_0_2_10_1504264786.360581.html',NULL,0,0,0,1,0,NULL,1450911659000,1450911659000,1450911659000),(100355,0,2482,'Socket编程(五)---NIO原理解读',2,'[123,62,354,355]','参考文章： \nhttp://www.cnblogs.com/flyoung2008/p/3251826.html \nhttp://weixiaolu.iteye.com/blog/14796561.I...',NULL,'csdn/java/1_0_2_5_1504264792.082337.html',NULL,0,0,0,1,0,NULL,1463997620000,1463997620000,1463997620000),(100356,0,2454,'一天一个设计模式---中介者模式',2,'[12]','我们去租房子时，每次价格变动的时候，房东通知下面的各个有意向的房客，而我们又需要对每个房东进行反馈。这样，一个房客和每个房东，以及一个房东和每个房客的关系都紧密相连。如果我们通过中介，中介会帮我们处理...',NULL,'csdn/java/1_0_1_1_1504264762.85544.html',NULL,0,0,0,1,0,NULL,1479852009000,1479852009000,1479852009000),(100357,0,2600,'给我一张名片——工厂方法模式',2,'[12,69,356]','工厂方法模式（Factory Method）:通过对产品类的抽象使其创建业务主要负责用于创建多类产品的实例。广告是一个公司主要的一个经济来源，这不，很多企业等着要来公司首页打广告呢。广告展现“小白, ...',NULL,'csdn/java/1_0_1_0_1504265076.062304.html',NULL,0,0,0,1,0,NULL,1485342039000,1485342039000,1485342039000),(100358,0,2458,'一天一个设计模式---迭代器模式',2,'[12,54]','使用Array、List、Map我们一般都会进行迭代操作，现在照着源码，来实现自定义的迭代器。',NULL,'csdn/java/1_0_1_2_1504264767.120785.html',NULL,0,0,0,1,0,NULL,1479852014000,1479852014000,1479852014000),(100359,0,2251,'【1】JAVA---地址App小软件（AddressApp.class）（初步接触项目开发的分层思想）（表现层）',2,'[113,337]','这个是表现层的main方法。 \n实现的地址信息有： \n姓名，性别，年龄，电话，地址。 \n实现的功能有： \n增加地址； \n删除地址； \n修改地址； \n查找地址：其中年龄的查找为年龄段的查找。数据存储的方...',NULL,'csdn/java/1_0_1_7_1504264543.184161.html',NULL,0,0,0,1,0,NULL,1459375245000,1459375245000,1459375245000),(100360,0,2478,'Socket编程(六)---TCP/NIO实例讲解',2,'[123,63,62,357]','本文将通过Channel(通道)、Buffer(缓冲区)以及Selector(选择器)来实现TCP下NIO的实例。',NULL,'csdn/java/1_0_2_4_1504264788.124652.html',NULL,0,0,0,1,0,NULL,1464012049000,1464012049000,1464012049000),(100361,0,2475,'你知道这Java类型转换问题么？',2,'[18]','一些我们忽视的类型转换问题，有你知道的，也有你不知道的。',NULL,'csdn/java/1_0_2_2_1504264785.118414.html',NULL,0,0,0,1,0,NULL,1472166045000,1472166045000,1472166045000),(100362,0,2664,'架构师入门笔记四 初识多线程设计模式',2,'[350,12]','架构师入门笔记四 初识多线程设计模式\n\n\n这章讲解常用的并行设计模式，为后续的多线程打基础。常用的并行设计模式有：Future 模式、Master-Worker模式 和 生产者-消费者模式。其中生产者...',NULL,'csdn/java/1_0_1_3_1504265256.639035.html',NULL,0,0,0,1,0,NULL,1502816452000,1502816452000,1502816452000),(100363,0,2676,'java设计模式（0）',2,'[53,12]','总体来说设计模式分为三大类：创建型模式、结构型模式和行为型模式。\r\n创建型模式：工厂方法模式、抽象工厂模式、单例模式、建造者模式、原型模式。\r\n结构型模式：适配器模式、装饰器模式、代理模式、外观模式、...',NULL,'csdn/java/1_0_1_11_1504265268.786537.html',NULL,0,0,0,1,0,NULL,1406124018000,1406124018000,1406124018000),(100364,0,2328,'【Linux探索之旅】第一部分第三课：测试并安装Ubuntu',4,'[21,119,107,105,161]','在正式开始Linux之旅前，我们要把操作系统安装好',NULL,'csdn/linux/1_1_2_5_1504264636.339172.html',NULL,0,0,0,1,0,NULL,1437577214000,1437577214000,1437577214000),(100365,0,2667,'java设计模式之外观模式（9）',2,'[18,53,12]','外观模式又叫门面模式。\r\n门面模式是对象的结构模式，外部与一个子系统的通信必须通过一个统一的门面对象进行。\r\n门面模式提供一个高层次的接口，使得子系统更易于使用。（注：这句话来自《java与模式》）。...',NULL,'csdn/java/1_0_1_2_1504265260.534216.html',NULL,0,0,0,1,0,NULL,1406894454000,1406894454000,1406894454000),(100366,0,2072,'【Linux探索之旅】第四部分第五课：源码编译，安装便利',4,'[358,107,160,62,161]','这一课相对轻松，毕竟刚跨年（2015-2016）么，新年怎么能让大家一个头两个大呢~ 小编怎么可能这么坏呢？小编是这样的人吗？（是啊 -_-#）。我们一步步来探究软件的编译。',NULL,'csdn/linux/1_1_1_0_1504264415.312715.html',NULL,0,0,0,1,0,NULL,1451790043000,1451790043000,1451790043000),(100367,0,2481,'Socket编程(二)---TCP简单实例',2,'[123,62,355,324,63]','从上篇文章我们已经对Socket有了初步的认识，现在我们就通过一个例子来实现TCP简单实例。',NULL,'csdn/java/1_0_2_8_1504264791.147888.html',NULL,0,0,0,1,0,NULL,1463749242000,1463749242000,1463749242000),(100368,0,2471,'一天一个设计模式---命令模式',2,'[12]','用命令模式来实现一个2D飞行射击游戏，能左右按钮躲避敌人的子弹，切换武器，射击。',NULL,'csdn/java/1_0_1_4_1504264780.053803.html',NULL,0,0,0,1,0,NULL,1478581250000,1478581250000,1478581250000),(100369,0,2662,'架构师入门笔记三 初识Queue队列',2,'[350,359]','架构师入门笔记三 初识Queue队列\n\n\n1. wait和notify模拟Queue\n1.1 wait / notify 基础知识\n线程通信概念：线程是操作系统中独立的个体，但这些个体如果不经过特殊的...',NULL,'csdn/java/1_0_1_2_1504265254.615425.html',NULL,0,0,0,1,0,NULL,1502370030000,1502370030000,1502370030000),(100370,0,2078,'【Linux探索之旅】第二部分第七课：软件安装，如虎添翼',4,'[21,119,107,160,161]','一般提到软件安装，有过Windows系统使用经验的朋友肯定会深有体会，那个麻烦啊，大致流程是这样的：\n\n在搜索引擎（比如百度或google）中搜索我们的软件名称。\n看到一个不错的结果，点击进入。如果是...',NULL,'csdn/linux/1_1_1_14_1504264418.08233.html',NULL,0,0,0,1,0,NULL,1441314014000,1441314014000,1441314014000),(100371,0,2119,'C程序代码中内嵌as汇编（一、基础知识）',4,'[119,126,360]','汇编代码是最接近机器码，所以也是执行效率最高的，在操作系统中有将近10%的关键性代码是由汇编编写的，而还有部分代码是由C代码嵌入汇编构成的。C代码中嵌入汇编可以提高程序的执行效率，同时这种程序还既有高...',NULL,'csdn/linux/1_0_1_13_1504264455.244668.html',NULL,0,0,0,1,0,NULL,1421215251000,1421215251000,1421215251000),(100372,0,2119,'C程序代码中内嵌as汇编（一、基础知识）',4,'[119,126,360]','汇编代码是最接近机器码，所以也是执行效率最高的，在操作系统中有将近10%的关键性代码是由汇编编写的，而还有部分代码是由C代码嵌入汇编构成的。C代码中嵌入汇编可以提高程序的执行效率，同时这种程序还既有高...',NULL,'csdn/linux/1_0_1_13_1504264455.244668.html',NULL,0,0,0,1,0,NULL,1421244051000,1421244051000,1421244051000),(100373,0,2215,'【总结】Effective java经验之谈，类与接口',2,'[18,298]','本章描述的是，自己在做系统重构的时候，阅读的章节，给自己在架构方面提供很大帮助。总结出一些干货分享一下啊啊啊~~主要应用场景是编写类与接口的时候需要注意的问题。每一章不一定按照顺序更新。欢迎拍砖补充。',NULL,'csdn/java/1_1_1_3_1504264520.942652.html',NULL,0,0,0,1,0,NULL,1428498045000,1428498045000,1428498045000),(100374,0,2457,'一天一个设计模式---抽象工厂模式',2,'[361,12]','继续上篇文章讲述Pizza供应商和工厂的故事。',NULL,'csdn/java/1_0_1_17_1504264765.932739.html',NULL,0,0,0,1,0,NULL,1473339655000,1473339655000,1473339655000),(100375,0,2616,'Java 实现抽象工厂模式',2,'[361]','抽象工厂模式\n里面有几个概念：抽象工厂、实体工厂、抽象产品、实体产品\n抽象工厂：定义创建产品的抽象方法\n实体工厂：具体的创建哪种产品\n抽象产品：一个接口或基类\n实体产品：实现具体功能，或派生\n\n\n...',NULL,'csdn/java/1_0_1_2_1504265102.217044.html',NULL,0,0,0,1,0,NULL,1411894841000,1411894841000,1411894841000),(100376,0,2082,'【Linux探索之旅】第二部分第二课：命令行，世界尽在掌握',4,'[362,21,160,107,161]','今天的标题是不是有点霸气侧漏呢？\n\n读者：“小编，你为什么每次都要起这么非主流的标题呢？不能愉快地玩耍么？”\n小编：“那我问你，老子他为什么要写《道德经》咧？”\n读者：“为什么咧？”\n小编：“因为老子...',NULL,'csdn/linux/1_1_1_19_1504264420.025231.html',NULL,0,0,0,1,0,NULL,1439859648000,1439859648000,1439859648000),(100377,0,2608,'Java 实现策略(Strategy)模式',2,'[12,363]','/**\n * 策略模式：针对同一命令(或行为),不同的策略做不同的动作\n *  商品促销\n *  本类为：收取现金的类\n *  \n *  @author stone\n */\npublic interf...',NULL,'csdn/java/1_0_1_12_1504265093.743721.html',NULL,0,0,0,1,0,NULL,1412924416000,1412924416000,1412924416000),(100378,0,2660,'架构师入门笔记二 初识java容器',2,'[350,364]','架构师入门笔记二 初识java容器\r\n上一章简单介绍了 线程的关键字 synchronized 和 volatile 的用法及其注意事项。这章来讲解一下同步类容器，并发类容器，COW容器的原理和优缺点...',NULL,'csdn/java/1_0_1_1_1504265252.589416.html',NULL,0,0,0,1,0,NULL,1502085607000,1502085607000,1502085607000),(100379,0,2216,'【总结】Effective java经验之谈，泛型',2,'[18,116,132,365,366]','对于泛型这一章，在起始写框架的时候，并没有注意细节，造成了很多方法或者类的错误设计。这本书在这点上弥补了我一个短板。大概的总结如下。',NULL,'csdn/java/1_1_1_4_1504264522.188482.html',NULL,0,0,0,1,0,NULL,1429099202000,1429099202000,1429099202000),(100380,0,2219,'【总结】Effective java经验之谈，通用方法',2,'[116,367,368,68,369]','对于通用方法，其实应用的场景是比较多的，我们在写一个类的时候，就要考虑是否要编写该方法的通用方法。这使得我们为以后该类的扩展性与使用方面提供很大的便利。',NULL,'csdn/java/1_1_1_2_1504264524.314889.html',NULL,0,0,0,1,0,NULL,1428937234000,1428937234000,1428937234000),(100381,0,2289,'Java 实现访问者(Visitor)模式',2,'[12,370]','interface Visitor {\n	void visit(Gladiolus g);\n\n	void visit(Chrysanthemum c);\n}// concrete visitor		名...',NULL,'csdn/java/1_0_2_0_1504264605.677381.html',NULL,0,0,0,1,0,NULL,1413259256000,1413259256000,1413259256000),(100382,0,2117,'memcopy()函数c语言实现和汇编实现比较',4,'[159,360,371,250,372]','首先来看汇编实现的memcpy函数，是利用宏函数来实现的，用汇编指令rep和movsb配合循环把数据以字节为单位从ds:esi传送到es:edi中，把循环次数放在ecx中。当然这样拷贝的才是真正的内存...',NULL,'csdn/linux/1_0_1_4_1504264454.252277.html',NULL,0,0,0,1,0,NULL,1423278006000,1423278006000,1423278006000),(100383,0,2291,'Java 实现中介者(Mediator)模式',2,'[12,373]','类图\r\n\r\n\r\npublic interface IMediator {\n\n	public void createMediator();\n\n	public void work();\n}\n\r\n/**\n ...',NULL,'csdn/java/1_0_2_1_1504264606.803499.html',NULL,0,0,0,1,0,NULL,1413270036000,1413270036000,1413270036000),(100384,0,2132,'JavaEE框架——hibernate入门',2,'[72,142,115,343,374]','一、hibernate入门\n\n1.hibernate简介：\n\n\nHibernate是一个开放源代码的对象关系映射框架，它对JDBC进行了非常轻量级的对象封装，它将POJO与数据库表建立映射关系，是一个...',NULL,'csdn/java/1_0_1_14_1504264462.859768.html',NULL,0,0,0,1,0,NULL,1472148009000,1472148009000,1472148009000),(100385,0,2101,'java设计模式之单例模式（Singleton pattern）',2,'[375,376]','java设计模式之单例模式（Singleton pattern）\n\n\n单例模式的定义：\nSingleton pattern restricts the instantiation of a class...',NULL,'csdn/java/1_0_1_0_1504264441.245252.html',NULL,0,0,0,1,0,NULL,1470049242000,1470049242000,1470049242000),(100386,0,2143,'JavaEE——使用log4j进行日志管理',2,'[24,114,72,377,143]','1、Log4j简介\r\n\r\n  作用：\r\n1、 跟踪代码的运行轨迹。\r\n2、 输出调试信息\r\n\r\n三大组成：\r\n\r\n1、 Logger类-生成日志。\r\n2、 Appender类-定义日志输出的目的地。\r...',NULL,'csdn/java/1_0_1_9_1504264470.231177.html',NULL,0,0,0,1,0,NULL,1471903253000,1471903253000,1471903253000),(100387,0,2624,'Java 实现责任链(Chain of Responsibility)模式',2,'[12,378]','类图\n\n\n/**\n * 抽象责任\n * @author stone\n *\n */\npublic abstract class IFilter {\n	private IFilter successor;...',NULL,'csdn/java/1_0_1_16_1504265110.229479.html',NULL,0,0,0,1,0,NULL,1413043226000,1413043226000,1413043226000),(100388,0,2164,'把握linux内核设计思想（三）：下半部机制之软中断',4,'[159,379,380,381]','【版权声明：尊重原创，转载请保留出处：blog.csdn.net/shallnet，文章仅供学习交流，请勿用于商业用途】\n        中断处理程序以异步方式执行，其会打断其他重要代码，其运行时该中...',NULL,'csdn/linux/1_2_1_11_1504264486.91509.html',NULL,0,0,0,1,0,NULL,1438120835000,1438120835000,1438120835000),(100389,0,2141,'Linux内核工程导论——总线：Linux PCI',4,'[100,35,21]','PCI\nPCI系列总线介绍\n         首先，PCI是一种总线，PCI-e是PCI的升级版，在linux的软件系统中是统一都是driver/pci下。既然是一种总线，物理上就包括总线部分和支持该...',NULL,'csdn/linux/1_0_3_8_1504264469.240642.html',NULL,0,0,0,1,0,NULL,1440957642000,1440957642000,1440957642000),(100390,0,2099,'【Linux探索之旅】第二部分第三课：文件和目录，组织不会亏待你',4,'[21,119,107,160,161]','上一次课我们讲了命令行，这将成为伴随我们接下来整个Linux课程的一个重要部分。\n\n大宝啊明天见，命令行啊天天见~\n\n今天的标题里的那句“组织不会亏待你”，不是说Linux社群是个非*法组织，不*良帮...',NULL,'csdn/linux/1_1_1_18_1504264433.66917.html',NULL,0,0,0,1,0,NULL,1439866851000,1439866851000,1439866851000),(100391,0,2093,'【Linux探索之旅】第三部分第五课：延时执行，唯慢不破',4,'[21,119,107,161,382]','到目前为止，我们所运行的命令都是立即执行，也就是我们按下回车键的那一刻，命令就开始执行了。\n其实Linux中命令还可以延时执行。这一课我们就来学习几个命令，可以帮助我们《稍后》执行程序。比如我们即将学...',NULL,'csdn/linux/1_1_1_6_1504264427.207673.html',NULL,0,0,0,1,0,NULL,1442800801000,1442800801000,1442800801000),(100392,0,2483,'Socket编程(四)---使用线程池优化服务端',2,'[123,134,353,146,62]','在服务端使用线程池，来优化服务端处理的能力。',NULL,'csdn/java/1_0_2_6_1504264793.311422.html',NULL,0,0,0,1,0,NULL,1463990419000,1463990419000,1463990419000),(100393,0,2096,'【Linux探索之旅】第四部分第三课：文件传输，潇洒同步',4,'[21,383,384,107,161]','我们继续探究Linux的奇幻网络世界。这个网络世界比较特别，也许你已经有所体会：前辈们做了大量努力，靠加密方法来保证网络间传输的数据的安全，以防我们私人的信息泄露，例如密码。\n\n\n这一课我们来学习文件...',NULL,'csdn/linux/1_1_1_2_1504264430.193949.html',NULL,0,0,0,1,0,NULL,1451494842000,1451494842000,1451494842000),(100394,0,2207,'Linux2.6内核--抢占',4,'[35,162,75,21,100]','【摘要】本文首先介绍非抢占式内核(Non-Preemptive Kernel)和可抢占式内核(Preemptive Kernel)的区别。接着分析Linux下有两种抢占：用户态抢占(User Pree...',NULL,'csdn/linux/1_0_2_18_1504264515.053555.html',NULL,0,0,0,1,0,NULL,1375884040000,1375884040000,1375884040000),(100395,0,2331,'简明 责任链模式（5.1）',2,'[18,12,270]','责任链模式可以称为“推卸”式的代理，多个对象能够处理客户发出的请求，即它们都具有相应的方法如handle()。',NULL,'csdn/java/1_1_1_5_1504264639.358123.html',NULL,0,0,0,1,0,NULL,1411153244000,1411153244000,1411153244000),(100396,0,2089,'【Linux探索之旅】第四部分第四课：分析网络，隔离防火',4,'[21,385,278,386,387]','俗语说得好：爱国爱家爱师妹!  防火防盗防师兄！\n\n\n虽然说，Linux本身很安全，至少比Windows安全多了。你看Linux发行版哪有安装杀毒软件的，同样基于修改的Unix系统的苹果的Mac OS...',NULL,'csdn/linux/1_1_1_1_1504264425.395543.html',NULL,0,0,0,1,0,NULL,1451707203000,1451707203000,1451707203000),(100397,0,2166,'把握linux内核设计思想（四）：下半部机制之tasklet',4,'[159,381,379,388]','【版权声明：尊重原创，转载请保留出处：blog.csdn.net/shallnet，文章仅供学习交流，请勿用于商业用途】\n       \ntasklet是利用软中断实现的一种下半部机制。tasklet...',NULL,'csdn/linux/1_2_1_10_1504264488.898274.html',NULL,0,0,0,1,0,NULL,1438120846000,1438120846000,1438120846000),(100398,0,2320,'2.1.2 工厂方法模式（3.3）',2,'[18,389]','工厂方法模式(factory method pattern)从2方面认识。\n编程技巧：这是对参数化工厂方法加以改进的经典技术，以多态来重构if-else、switch-case等分支结构。\n设计思路：...',NULL,'csdn/java/1_1_1_13_1504264631.098138.html',NULL,0,0,0,1,0,NULL,1410530427000,1410530427000,1410530427000),(100399,0,2603,'写的都是看到的——面向对象编程（二）',2,'[390,69,12,71]','传宗接代——继承“小白，看继承呢？”小铭忙完自己的事情走过来。“是呀，刚才学习类，发现每个类都有3个部分，第一部分是构造函数内的，这是供实例化对象复制用的，第二部分是构造函数外的，直接通过点语法添加的...',NULL,'csdn/java/1_0_1_2_1504265079.176344.html',NULL,0,0,0,1,0,NULL,1479322849000,1479322849000,1479322849000),(100400,0,2111,'Linux内核源码分析--内存管理（二、函数实现技巧）',4,'[159,120,391,250]','仔细的分析了一下各个内存管理函数的实现，发现里面涉及到了几个技巧，如果知道了这几个技巧，那么阅读内存管理源码将会事半功倍（主要是这几个技巧在几个函数中都出现过），当然也会选择性的分析几个比较重要的函数...',NULL,'csdn/linux/1_0_1_6_1504264448.635831.html',NULL,0,0,0,1,0,NULL,1422032433000,1422032433000,1422032433000),(100401,0,2258,'Linux System Programming --Chapter Six',4,'[21,162,35,392,266]','这一章的题目是--高级进程管理，这篇文章将以书中所叙的顺序进行讲解1、让出处理器Linux提供一个系统调用运行进程主动让出执行权：sched_yield。进程运行的好好的，为什么需要这个函数呢？有一种...',NULL,'csdn/linux/1_1_1_4_1504264549.616554.html',NULL,0,0,0,1,0,NULL,1371474008000,1371474008000,1371474008000),(100402,0,2605,'java 实现单例模式',2,'[18,12]','public class Singleton {\n\nprivate \nstatic Singleton intance;\n\nprivate Singleton() {}\n\n\n\npublic \nstat...',NULL,'csdn/java/1_0_1_0_1504265090.76142.html',NULL,0,0,0,1,0,NULL,1407348015000,1407348015000,1407348015000),(100403,0,2602,'神奇的魔术师——简单工厂模式',2,'[361,290,12,69]','简单工厂模式（Simple Factory）：又叫静态工厂方法：由一个工厂对象决定创建某一产品对象的实例。主要用来创建同一类对象。小白经过几天对团队代码的学习，终于对面向对象思想有所认识，自己跳动的小...',NULL,'csdn/java/1_0_1_1_1504265078.124825.html',NULL,0,0,0,1,0,NULL,1479553218000,1479553218000,1479553218000),(100404,0,2165,'把握linux内核设计思想（二）：硬中断及中断处理',4,'[159,116,393,394,395]','操作系统负责管理硬件设备，为了使系统和硬件设备的协同工作不降低机器性能，系统和硬件的通信使用中断的机制，也就是让硬件在需要的时候向内核发出信号，这样使得内核不用去轮询设备而导致做很多无用功。\n    ...',NULL,'csdn/linux/1_2_1_12_1504264487.92553.html',NULL,0,0,0,1,0,NULL,1438120825000,1438120825000,1438120825000),(100405,0,2199,'Linux/Unix--设备类型',4,'[298,124,211,100,21]','在Linux以及所有的Unix系统中，设备被分为以下三种类型：      块设备      字符设备      网络设备       块设备通常写为 blkdev ，它是可以寻址的，寻址以块为单位，块...',NULL,'csdn/linux/1_0_2_4_1504264510.912357.html',NULL,0,0,0,1,0,NULL,1376568022000,1376568022000,1376568022000),(100406,0,2260,'Linux System Programming --Chapter Seven',4,'[21,192,298,188,211]','文件和目录管理一.文件与其元数据我们首先看一下一个简单的文本文件是怎么保存的：打开vim，编辑一段文本：[root@localhost ~]# vim hello.txt编辑内容如下：opencfg....',NULL,'csdn/linux/1_1_1_3_1504264550.874244.html',NULL,0,0,0,1,0,NULL,1371474009000,1371474009000,1371474009000),(100407,0,2309,'访问者模式的意图',2,'[12,18]','访问者模式的访问者，是做专项检查的。',NULL,'csdn/java/1_1_1_0_1504264624.636924.html',NULL,0,0,0,1,0,NULL,1412089252000,1412089252000,1412089252000),(100408,0,2213,'【总结】Effective java经验之谈，并发编程',2,'[396,397,398,399]','内容包括，并发与并行，并发约束，并发下的集合类性能分析，并发相关包的概述，并发场景，并发总结集合包',NULL,'csdn/java/1_1_1_0_1504264518.810351.html',NULL,0,0,0,1,0,NULL,1429718449000,1429718449000,1429718449000),(100409,0,2080,'【Linux探索之旅】第二部分第六课：Nano，初学者的文本编辑器',4,'[21,119,107,400,161]','这一课比较简单，没有什么太难的概念。不过这一课会讲如何配置终端噢。\n\n大家可以泡个泡面，烤只烤鸡；剥个卤蛋，慢慢来看。\n\n之前的课程中，我们已经学会了在终端中用多种不同的方式来查看文件的内容，但是我们...',NULL,'csdn/linux/1_1_1_15_1504264419.247549.html',NULL,0,0,0,1,0,NULL,1440900026000,1440900026000,1440900026000),(100410,0,2327,'【Linux探索之旅】第一部分第四课：磁盘分区，并完成Ubuntu安装',4,'[21,161,105,119,107]','上一课我们正式开始安装Ubuntu了，但是到了分区的那一步，小编却戛然而止。这是什么情况呢？\n请读者们千万不要扁我；如果真的要扁，那就请“海扁”，让我一次挨（爱）个够（想到了庾澄庆的《让我一次爱个够》...',NULL,'csdn/linux/1_1_2_4_1504264635.29354.html',NULL,0,0,0,1,0,NULL,1437879630000,1437879630000,1437879630000),(100411,0,2126,'Struts1.3——DispatchAction、DynamicForm和全局跳转',2,'[128,102]','本文介绍了Struts1中的DispatchAction、DynamicForm和全局跳转的用法',NULL,'csdn/java/1_0_1_1_1504264458.838667.html',NULL,0,0,0,1,0,NULL,1469386833000,1469386833000,1469386833000),(100412,0,2394,'C语言中自动变量栈的分配',4,'[210,207,401,105,257]','大家都知道在c语言的运行过程中，局部变量都是存放在栈中的，且是从高位到低位进行进行空间分配。先看一个程序。很明显，地址从高到低分配，和预计的一样。稍微修改一下，再运行。很明显，从低位到高位！！！明确一...',NULL,'csdn/linux/1_1_2_0_1504264704.555163.html',NULL,0,0,0,1,0,NULL,1370437210000,1370437210000,1370437210000),(100413,0,2097,'【Linux探索之旅】第四部分第二课：SSH连接，安全快捷',4,'[21,299,402,107,161]','这一课的内容肯定会让你大呼过瘾，也许是《Linux探索之旅》中到目前为止最有意思的课之一。 我们会聊很多内容，会学习如何连接到远程的一台安装有Linux的机器。 我们不仅仅会学习如何远程连接到Linu...',NULL,'csdn/linux/1_1_1_3_1504264431.418579.html',NULL,0,0,0,1,0,NULL,1451325623000,1451325623000,1451325623000),(100414,0,2604,'写的都是看到的——面向对象编程（一）',2,'[390,70,290,12,69]','第一天的经历使小白深深认识到校园学到的知识与实际工作中的偏差，所以想见识见识公司团队里大家都是如何书写代码并完成需求的。早晨走进公司的时候恰巧遇见了项目经理。两种编程风格——面向过程与面向对象“早！小...',NULL,'csdn/java/1_0_1_3_1504265080.343787.html',NULL,0,0,0,1,0,NULL,1478966436000,1478966436000,1478966436000),(100415,0,2193,'Linux2.6中的Slab层',4,'[244,75,35,270,100]','还记得一个进程创建的时候是什么给它分配的“进程描述符”吗？没错，是slab分配器，那么，这个slab分配器是个什么东西呢？      分配和释放数据结构是所有内核中最普遍的操作之一。为了便于结构的频繁...',NULL,'csdn/linux/1_0_2_9_1504264508.622575.html',NULL,0,0,0,1,0,NULL,1376319623000,1376319623000,1376319623000),(100416,0,2284,'Linux内核工程导论——安全：概览',4,'[100,67]','linux从unix和posix那里继承了最基本的安全机制：用户、文件权限、进程capabilities。但是仅有这些是不够的，很多第三方实现了新的机制，通过补丁的形式提供。如安全增强Linux（SE...',NULL,'csdn/linux/1_0_2_13_1504264591.502612.html',NULL,0,0,0,1,0,NULL,1451638808000,1451638808000,1451638808000),(100417,0,2231,'Linux上程序调试的基石(2)--GDB',4,'[145,167,215,262,210]','3. GDB的实现 GDB是GNU发布的一个强大的程序调试工具，用以调试C/C++程序。可以使程序员在程序运行的时候观察程序在内存/寄存器中的使用情况。它的实现也是基于ptrace系统调用来完成的。 ...',NULL,'csdn/linux/1_0_3_1_1504264530.789566.html',NULL,0,0,0,1,0,NULL,1375797622000,1375797622000,1375797622000),(100418,0,2449,'Linux0.11中对文本文件进行修改的策略',4,'[21,403,404,405,70]','现在，假设 hello.txt 是硬盘上已有的一个文件，而且内容为 “hello, world” ，在文件的当前指针设置完毕后，我们来介绍 sys_read , sys_write , sys_lse...',NULL,'csdn/linux/1_1_1_2_1504264747.336688.html',NULL,0,0,0,1,0,NULL,1373893205000,1373893205000,1373893205000),(100419,0,2175,'Linux系统调用中的参数验证',4,'[215,183,21,100,165]','我们都知道，用户程序可以通过库函数来通知内核执行系统调用，由于是在内核空间中执行，所以，每一个步骤都需要非常小心，因为错误的操作随时可以导致系统崩溃。      系统调用必须仔细检查它们所有的参数是否...',NULL,'csdn/linux/1_0_2_0_1504264499.563199.html',NULL,0,0,0,1,0,NULL,1376913601000,1376913601000,1376913601000),(100420,0,2147,'Linux内核工程导论——数据结构：链表与哈希',4,'[100,35,21,75,270]','1 链表与哈希表\n链表可以把离散时间到达的数据结构串起来，使其可以被更容易的索引。Linux内核中全部使用双向链表。那为何链表要与哈希表放在一起介绍呢？因为哈希表室友链表群组成的，其每一个哈希桶都是一...',NULL,'csdn/linux/1_0_3_3_1504264472.30341.html',NULL,0,0,0,1,0,NULL,1442044856000,1442044856000,1442044856000),(100421,0,2311,'3.1  n次策略',2,'[18,389,406,407]','多次使用策略模式需要考虑两个问题：组合爆炸和无限可能。',NULL,'csdn/java/1_1_1_17_1504264625.867075.html',NULL,0,0,0,1,0,NULL,1410134405000,1410134405000,1410134405000),(100422,0,2693,'Java设计模式菜鸟系列(十六)原型模式建模与实现',2,'[53,408,12,343,409]','原型模式(Prototype)：该模式的思想就是将一个对象作为原型，对其进行复制、克隆，产生一个和原对象类似的新对象。而这里的复制有两种：浅复制、深复制。\n浅复制：将一个对象复制后，基本数据类型的变量...',NULL,'csdn/java/1_0_1_8_1504265291.925973.html',NULL,0,0,0,1,0,NULL,1413043245000,1413043245000,1413043245000),(100423,0,2259,'Linux System Programming --Chapter Five',4,'[21,51,35,75,410]','这一章中的内容出现在博主的多篇文章中，所以并不对这一章进行详细的说明解释，只是对几个比较重要的概念进行说明一.写时复制技术COW技术初窥：      在Linux程序中，fork（）会产生一个和父进程...',NULL,'csdn/linux/1_1_1_5_1504264550.826422.html',NULL,0,0,0,1,0,NULL,1371207620000,1371207620000,1371207620000),(100424,0,2191,'Linux2.6--虚拟文件系统',4,'[21,188,100,35,411]','虚拟文件系统(有时也称作虚拟文件交换,更常见的是简称做VFS)作为内核子系统,为用户空间程序提供了文件和文件系统相关的接口.系统中的所有文件系统不但依赖VFS共存,而且也依赖VFS系统协同工作.通过虚...',NULL,'csdn/linux/1_0_2_8_1504264507.918879.html',NULL,0,0,0,1,0,NULL,1376470810000,1376470810000,1376470810000),(100425,0,2480,'Socket编程(一)---图解Socket',2,'[123,62,125]','TCP/UDP基本概念介绍，socket相关行为的解释',NULL,'csdn/java/1_0_2_9_1504264790.099086.html',NULL,0,0,0,1,0,NULL,1463734846000,1463734846000,1463734846000),(100426,0,2682,'Java设计模式菜鸟系列(二十)解释器模式建模与实现',2,'[53,408,343,12,409]','解释器模式(Interpreter)：它定义了对象与对象之间进行某种操作之后会得到什么值。一般主要应用在OOP开发中的编译器\n\n的开发中，所以适用面比较窄。\n\n解释器模式用来做各种各样的解释器，如正则...',NULL,'csdn/java/1_0_1_4_1504265280.818141.html',NULL,0,0,0,1,0,NULL,1413129617000,1413129617000,1413129617000),(100427,0,2242,'Linux System Programming --Chapter Four',4,'[21,214,210,412,273]','这一章介绍的主题是--高级文件 I/O一. 分散--聚集I/O分散聚集I/O是一种进行输入和输出的方法。通过此方法，单一系统调用可以将缓冲区向量写入单一数据流，或者将单一数据流读取到缓冲区向量。这个类...',NULL,'csdn/linux/1_1_1_6_1504264537.922721.html',NULL,0,0,0,1,0,NULL,1371207620000,1371207620000,1371207620000),(100428,0,2695,'Java设计模式菜鸟系列(十八)责任链模式建模与实现',2,'[53,408,343,12,409]','责任链模式(ChainOfResponsibility)： 有多个对象，每个对象持有下一个对象的引用，形成一条链，请求在这条链上传递，直到某一对象决定处理该请求，但是发出者并不清楚最终哪个对象会处理该...',NULL,'csdn/java/1_0_1_6_1504265294.162423.html',NULL,0,0,0,1,0,NULL,1413122416000,1413122416000,1413122416000),(100429,0,2681,'Java设计模式菜鸟系列(二十一)享元模式建模与实现',2,'[53,408,343,12,409]','享元模式（Flyweight）：运用共享的技术有效地支持大量细粒度的对象。主要目的是实现对象的共享，即共享池，当系统中对象多的时候可以减少内存的开销。在某种程度上，你可以把单例看成是享元的一种特例。\n...',NULL,'csdn/java/1_0_1_3_1504265279.798814.html',NULL,0,0,0,1,0,NULL,1413147627000,1413147627000,1413147627000),(100430,0,2350,'Linux2.6内核--内存管理（1）--分页机制',4,'[35,120,44,21,100]','在内核里分配内存可不像在其他地方分配内存那么容易。造成这种局面的因素很多。从根本上讲，是因为内核本身不能像用户空间那样奢侈的使用内存。内核与用户空间不同，它不具备这种能力，它不支持简单便捷的内存分配方...',NULL,'csdn/linux/1_0_1_8_1504264652.827594.html',NULL,0,0,0,1,0,NULL,1377176451000,1377176451000,1377176451000),(100431,0,2261,'Linux 2.6 中的直接 I/O 技术',4,'[21,192,119,209,246]','Linux 2.6 中提供的几种文件访问方式所有的 I/O 操作都是通过读文件或者写文件来完成的。在这里，我们把所有的外围设备，包括键盘和显示器，都看成是文件系统中的文件。访问文件的方法多种多样，这里...',NULL,'csdn/linux/1_1_1_14_1504264551.747366.html',NULL,0,0,0,1,0,NULL,1370948416000,1370948416000,1370948416000),(100432,0,2188,'Linux2.6--Linus电梯',4,'[246,413,414,21,100]','内核为了处理来自IO层的请求，需要进行相应的优化，因为当请求很多时，且请求的块又都几种在一块，那么如果按照顺序处理这些请求无疑是很大的时间开销，所以，我们需要寻求方法来处理这种情况（当然，不只是这一种...',NULL,'csdn/linux/1_0_2_7_1504264506.66042.html',NULL,0,0,0,1,0,NULL,1376481631000,1376481631000,1376481631000),(100433,0,2698,'Java设计模式菜鸟系列(二十二)中介者模式建模与实现',2,'[53,408,343,12,409]','中介者模式(Mediator)：主要用来降低类与类之间的耦合的，因为如果类与类之间有依赖关系的话，不利于功能的拓展和维护，因为只要修改一个对象，其它关联的对象都得进行修改。\n中介者模式只需关心和Med...',NULL,'csdn/java/1_0_1_2_1504265297.113574.html',NULL,0,0,0,1,0,NULL,1413154802000,1413154802000,1413154802000),(100434,0,2168,'把握linux内核设计思想（七）：内核定时器和定时执行',4,'[159,415,379]','【版权声明：尊重原创，转载请保留出处：blog.csdn.net/shallnet，文章仅供学习交流，请勿用于商业用途】\n        前面章节说到了把工作推后到除现在以外的时间执行的机制是下半部机...',NULL,'csdn/linux/1_2_1_7_1504264490.999532.html',NULL,0,0,0,1,0,NULL,1438196418000,1438196418000,1438196418000),(100435,0,2334,'Linux2.6内核 -- 编码风格（3）',4,'[35,416,36,159,100]','9.typedef    内核开发者们强烈反对使用 typedef 语句。他们的理由是：    1> typedef 掩盖了数据的真实类型    2> 由于数据类型隐藏起来了，所以很容易因此而犯错误，...',NULL,'csdn/linux/1_0_1_2_1504264640.909459.html',NULL,0,0,0,1,0,NULL,1377432048000,1377432048000,1377432048000),(100436,0,2336,'Linux2.6内核 -- 编码风格（2）',4,'[35,416,100,21,285]','5.每行代码的长度      源代码中要尽可能的保证每行代码长度不超过80个字符，因为这样做可以使代码最适合在标准的 80 * 24 的终端上显示。事实上，并不存在一个广泛接受的标准--如果代码行超过...',NULL,'csdn/linux/1_0_1_3_1504264641.823117.html',NULL,0,0,0,1,0,NULL,1377421234000,1377421234000,1377421234000),(100437,0,2588,'设计模式(6)-结构型-适配器模式(Adapter)(个人笔记)',2,'[12,317,45,148,417]','概述    将一个类的接口转换成客户希望的另外一个接口。Adapter模式使得原本由于接口不兼容而不能一起工作的那些类可以一起工作。\n 适用性    1.你想使用一个已经存在的类，而它的接口不符合你的...',NULL,'csdn/java/1_1_1_5_1504265045.759409.html',NULL,0,0,0,1,0,NULL,1335607247000,1335607247000,1335607247000),(100438,0,2417,'Linux 下服务器设计（ 一 ）',4,'[28,21,123,355,191,418]','这里讲的仅仅是一个简单的server的模型！为了处理同时来到很多小的链接请求( 解释：就是请求很简单，持续时间很短，那么if  server在请求到来时在fork来处理它，有可能fork的时间比应答请...',NULL,'csdn/linux/1_1_1_1_1504264726.805796.html',NULL,0,0,0,1,0,NULL,1334833231000,1334833231000,1334833231000),(100439,0,2355,'Linux2.6内核--对块IO层操作的讨论',4,'[215,246,21,100,419]','当一个块被调入内存时（也就是说，在读入后或等待写出时），它要存储在缓冲区中。每个缓冲区与一个块对应，它相当于是磁盘块在内存中的表示。块包含一个或多个扇区，但大小不能超过一页，所以一页可以容纳一个或多个...',NULL,'csdn/linux/1_0_1_6_1504264656.961495.html',NULL,0,0,0,1,0,NULL,1377266444000,1377266444000,1377266444000),(100440,0,2620,'Java 实现观察者(Observer)模式',2,'[12,420]','1. Java自带的实现\r\n类图\r\n\r\n\r\n/**\n * 观察目标 继承自 java.util.Observable\n * @author stone\n *\n */\npublic class Upda...',NULL,'csdn/java/1_0_1_14_1504265106.039029.html',NULL,0,0,0,1,0,NULL,1412964011000,1412964011000,1412964011000),(100441,0,2591,'设计模式(4)-创建型-建造者(Builder)(个人笔记)',2,'[12,317,421,45,422,179]','概述：将一个复杂对象的构建与它的表示分离，使得同样的构建过程可以创建不同的表示。\n适用性    1.当创建复杂对象的算法应该独立于该对象的组成部分以及它们的装配方式时。\n\n    2.当构造过程必须允...',NULL,'csdn/java/1_1_1_3_1504265051.79732.html',NULL,0,0,0,1,0,NULL,1335420010000,1335420010000,1335420010000),(100442,0,2313,'进程间通信之-管道--linux内核剖析（八）',4,'[211,324,78,35,21]','管道管道是一种两个进程间进行单向通信的机制。因为管道传递数据的单向性，管道又称为半双工管道。管道的这一特点决定了器使用的局限性。管道是Linux支持的最初Unix IPC形式之一，具有以下特点：\n数据...',NULL,'csdn/linux/1_0_1_4_1504264626.85974.html',NULL,0,0,0,1,0,NULL,1458169230000,1458169230000,1458169230000),(100443,0,2684,'Java设计模式菜鸟系列(五)抽象工厂模式建模与实现',2,'[53,361,18,408]','抽象工厂模式（Abstract Factory）：抽象工厂--顾名思义，就是把工厂抽象出来，不同的工厂生产不同的产品。这样做有个好处：一旦需要增加新的功能，直接增加新的工厂类就可以了，不需要修改之前的...',NULL,'csdn/java/1_0_1_19_1504265282.836506.html',NULL,0,0,0,1,0,NULL,1412460025000,1412460025000,1412460025000),(100444,0,2343,'Linux2.6内核--中断线被关闭的情况',4,'[216,119,162,21,100]','中断系统是现代操作系统中不可获取的一个子系统，它由硬件主动触发并发送到CPU，最后由内核调用中断处理程序处理中断。      那么中断有时候需要关闭，这是为什么呢？      一般分为两种情况：1.内...',NULL,'csdn/linux/1_0_1_16_1504264645.965903.html',NULL,0,0,0,1,0,NULL,1377007205000,1377007205000,1377007205000),(100445,0,2169,'把握linux内核设计思想（六）：内核时钟中断',4,'[159,423,424,415]','【版权声明：尊重原创，转载请保留出处：blog.csdn.net/shallnet，文章仅供学习交流，请勿用于商业用途】\n        内核中很多函数是基于时间驱动的，其中有些函数需要周期或定期执行...',NULL,'csdn/linux/1_2_1_8_1504264492.120319.html',NULL,0,0,0,1,0,NULL,1438196403000,1438196403000,1438196403000),(100446,0,2689,'Java设计模式菜鸟系列(十)模板方法模式建模与实现',2,'[12,408,53,343,409]','模板方法模式(Template Method)：在一个方法中定义了一个算法的骨架，而将一些步骤延迟到子类中。模板方法使得子类可以再不改变算法结构的情况下，重新定义算法中的某些步骤。简而言之：模板方法定...',NULL,'csdn/java/1_0_1_14_1504265288.202563.html',NULL,0,0,0,1,0,NULL,1412539247000,1412539247000,1412539247000),(100447,0,2687,'Java设计模式菜鸟系列(八)适配器模式建模与实现',2,'[425,53,12,408,343]','适配器模式(Adapter)：将某个类的接口转换成客户端期望的另一个接口表示，目的是消除由于接口不匹配所造成的类的兼容性问题。\n主要分为三类：类的适配器模式、对象的适配器模式、接口的适配器模式。\n\n1...',NULL,'csdn/java/1_0_1_16_1504265286.199316.html',NULL,0,0,0,1,0,NULL,1412532052000,1412532052000,1412532052000),(100448,0,2349,'Linux2.6内核 -- 编码风格（1）',4,'[35,62,406,100,21]','像所有其他大型软件一样，Linux 制定了一套编码风格，对代码的格式，风格和布局做出了规定。下面我就对 2.6 内核中的代码约定进行介绍。      1.缩进      缩进风格是用制表位（Tab）每...',NULL,'csdn/linux/1_0_1_4_1504264651.718805.html',NULL,0,0,0,1,0,NULL,1377421210000,1377421210000,1377421210000),(100449,0,2352,'Linux2.6内核--VFS层中和进程相关的数据结构',4,'[188,426,21,100,153]','系统中的每一个进程都有自己的一组打开的文件，像根文件系统，当前工作目录，安装点等。有三个数据结构将 VFS 层和系统的进程紧密的联系在一起，它们分别是：file_struct，fs_struct 和 ...',NULL,'csdn/linux/1_0_1_7_1504264654.065728.html',NULL,0,0,0,1,0,NULL,1377262801000,1377262801000,1377262801000),(100450,0,2373,'C 语言内存区域分配（进程的各个段）详解',4,'[208,210,215,192,401]','C语言可执行代码结构 名称内容代码段 可执行代码、字符串常量数据段 已初始化全局变量、已初始化全局静态变量、局部静态变量、常量数据BSS段 未初始化全局变量，未初始化全局静态变量栈 局部变量、函数参数...',NULL,'csdn/linux/1_1_2_7_1504264675.521026.html',NULL,0,0,0,1,0,NULL,1371736814000,1371736814000,1371736814000),(100451,0,2697,'Java设计模式菜鸟系列(二十三)访问者模式建模与实现',2,'[53,408,343,409,12]','访问者模式(Visitor)：把数据结构和作用于结构上的操作解耦合，使得操作集合可相对自由地演化。访问者模式适用于数据结构相对稳定而算法又容易变化的系统。访问者模式的优点是增加操作很容易，因为增加操作...',NULL,'csdn/java/1_0_1_1_1504265296.129218.html',NULL,0,0,0,1,0,NULL,1413154836000,1413154836000,1413154836000),(100452,0,2652,'Java设计模式菜鸟系列(四)工厂方法模式建模与实现',2,'[53,361,408,18]','转载请注明出处：http://blog.csdn.net/lhy_ycu/article/details/39760895\n\n工厂方法模式（Factory Method）分为三种：\n一、普通工厂模式。...',NULL,'csdn/java/1_0_2_0_1504265200.743564.html',NULL,0,0,0,1,0,NULL,1412456429000,1412456429000,1412456429000),(100453,0,2130,'Struts1.3——登录案例的改进',2,'[128]','本文简要介绍了struts的scope属性、中文乱码处理以及struts-config.xml文件等几个知识点',NULL,'csdn/java/1_0_1_4_1504264460.871704.html',NULL,0,0,0,1,0,NULL,1466586049000,1466586049000,1466586049000),(100454,0,2263,'Linux 用户进程内存空间详解',4,'[21,215,311,246,427]','经常使用top命令了解进程信息，其中包括内存方面的信息。命令top帮助文档是这么解释各个字段的。VIRT	, Virtual Image (kb)RES, Resident size (kb)SHR,...',NULL,'csdn/linux/1_1_1_19_1504264553.743916.html',NULL,0,0,0,1,0,NULL,1370678419000,1370678419000,1370678419000),(100455,0,2763,'JSON工具学习记录--FastJSON循环引用问题',2,'[428]','JSON工具学习记录–FastJSON循环引用问题标签（空格分隔）： fastjson最近基于他人项目做二次开发,遇到了循环引用的问题,简单来说A引用了B,B引用了C,C引用了A,那么转换json就会...',NULL,'csdn/java/1_0_2_1_1504265374.034113.html',NULL,0,0,0,1,0,NULL,1471003233000,1471003233000,1471003233000),(100456,0,2183,'Linux内核--异常和中断的区别',4,'[162,35,216,100,21]','相信大家都知道非常著名的两个名词：异常和中断，不过，你真的理解这两个名词在说什么吗？它们之间有什么区别呢？      1.中断      大家都知道，当我们在敲击键盘的同时就会产生中断，当硬盘读写完数...',NULL,'csdn/linux/1_0_2_13_1504264503.653902.html',NULL,0,0,0,1,0,NULL,1376056838000,1376056838000,1376056838000),(100457,0,2252,'字符编码总结（UTF-8，UNICODE）',4,'[416,429,430,165,431]','UTF-8是Unicode的一种实现方式，也就是它的字节结构有特殊要求，所以我们说一个汉字的范围是0X4E00到0x9FA5，是指unicode值，至于放在utf-8的编码里去就是由三个字节来组织，所...',NULL,'csdn/linux/1_1_1_7_1504264544.274125.html',NULL,0,0,0,1,0,NULL,1371128418000,1371128418000,1371128418000),(100458,0,2222,'Linux2.6 内核进程调度分析',4,'[432,57,433,434,211]','Linux2.6 内核进程调度分析\r\n\r\n\r\n   进程的调度时机与引起进程调度的原因和进程调度的方式有关。在 2.6 中,除核心应用\r\n    主动调用调度器之外, 核心还在应用不完全感知的情况下在...',NULL,'csdn/linux/1_0_3_11_1504264526.411986.html',NULL,0,0,0,1,0,NULL,1363770037000,1363770037000,1363770037000),(100459,0,2305,'进程间通信之-信号signal--linux内核剖析（九）',4,'[211,324,162,35,113]','信号及信号来源什么是信号信号是UNIX和Linux系统响应某些条件而产生的一个事件，接收到该信号的进程会相应地采取一些行动。通常信号是由一个错误产生的。但它们还可以作为进程间通信或修改行为的一种方式，...',NULL,'csdn/linux/1_0_1_2_1504264621.664224.html',NULL,0,0,0,1,0,NULL,1459080022000,1459080022000,1459080022000),(100460,0,2453,'一天一个设计模式---分类与六大原则',2,'[12]','介绍23中设计模式的分类方式，结合《设计模式》一书的插图更加明显。详细说明设计模式中的六大原则，结合场景分析其解决方案。',NULL,'csdn/java/1_0_1_0_1504264761.935354.html',NULL,0,0,0,1,0,NULL,1472648437000,1472648437000,1472648437000),(100461,0,2367,'搭建Linux0.11系统环境',4,'[21,35,188,164,285]','学习Linux0.11内核源代码，我们需要搭建一个基于Linux0.11的操作平台：                    1） boch仿真器：可以从http://bochs.sourceforge...',NULL,'csdn/linux/1_1_2_12_1504264669.18624.html',NULL,0,0,0,1,0,NULL,1371150008000,1371150008000,1371150008000),(100462,0,2344,'Linux2.6--中断机制中的 ksoftirqd',4,'[35,52,21,100,211]','Linux中的中断机制被分为两个部分，回应硬件的中断请求的部分成为上半部（一般都是这样），而真正在做处理工作（耗时工作）的部分成为下半部，实现下半部在Linux2.6内核中存在三种方法：软中断，tas...',NULL,'csdn/linux/1_0_1_15_1504264646.622797.html',NULL,0,0,0,1,0,NULL,1377072050000,1377072050000,1377072050000),(100463,0,2755,'Maven学习记录(四)--多模块开发配置',2,'[79]','多模块的好处就是协同开发,对于大的项目这样分工可以提高效率,同时减轻代码耦合,看起来也一目了然,maven多模块还解决了不同人开发使用的架包版本冲突等问题一.创建项目1.创建父级容器不要使用模板,直接...',NULL,'csdn/java/1_0_2_14_1504265365.665069.html',NULL,0,0,0,1,0,NULL,1464901240000,1464901240000,1464901240000),(100464,0,2198,'Java web自定义标签按钮级别权限控制完美诠释（jplogic 快速开发平台）',2,'[190,435,436]','接下来跟大家聊聊JavaWeb中权限控制，往大的方向说可以聊聊整合应用系统中的权限控制。在聊权限控制之前先跟大家聊聊RBAC。那么什么是RBAC呢？RBAC（Role-Based\n Access Co...',NULL,'csdn/java/1_1_1_2_1504264510.661706.html',NULL,0,0,0,1,0,NULL,1417392006000,1417392006000,1417392006000),(100465,0,2741,'Mybatis学习记录(六)--开发中的小问题',2,'[118]','最近开始做项目,期间遇到一些小问题,开此贴记录一下1.关于order by今天写一个sql查询语句,用了order by但是一直没效果,后来才发现用了#{}取值,mybatis使用这个的话对于Stri...',NULL,'csdn/java/1_0_3_1_1504265350.723321.html',NULL,0,0,0,1,0,NULL,1461351626000,1461351626000,1461351626000),(100466,0,2571,'Eclipse中设置VM参数',2,'[437,438,439]','eclipse.ini\n-Xms256m //设置堆最小值\n-Xmx1024m //设置堆最大值\n\n\n\nEclipse\n做JVM 的分析时,需要动态设置JVM的参数来进行各种测试，\n可以在下图地方进行...',NULL,'csdn/java/1_1_1_7_1504264969.060317.html',NULL,0,0,0,1,0,NULL,1460581200000,1460581200000,1460581200000),(100467,0,2659,'架构师入门笔记一 初识线程关键字',2,'[350,32]','架构师入门笔记一 初识线程关键字\r\n本章主要介绍线程的关键字 synchronized，volatile  的含义，使用方法和使用场景，以及注意事项。下一章介绍线程的队列知识。\r\n首先要了解线程安全概...',NULL,'csdn/java/1_0_1_0_1504265251.594849.html',NULL,0,0,0,1,0,NULL,1501851608000,1501851608000,1501851608000),(100468,0,2235,'Java-单机版的书店管理系统(练习设计模块和思想_系列 四(1) )',2,'[116,245,113,440,114]','本系列四介绍说明：主要是添加了Uuid模块，现在的uuid并不是由用户输入，而是我们通过软件内部自动生成（通过唱票模式），uuid是不会产生重复的！还有把主界面改了下，以后会改成登录页面的（待完善）。...',NULL,'csdn/java/1_0_1_14_1504264532.720198.html',NULL,0,0,0,1,0,NULL,1460329211000,1460329211000,1460329211000),(100469,0,2241,'Java-单机版的书店管理系统(练习设计模块和思想_系列 七 )',2,'[441,116,114]','本系列前面博客的链接：Java-单机版的书店管理系统(练习设计模块和思想_系列 六 ) \nhttp://blog.csdn.net/qq_26525215/article/details/511692...',NULL,'csdn/java/1_0_1_10_1504264537.805061.html',NULL,0,0,0,1,0,NULL,1461074409000,1461074409000,1461074409000),(100470,0,2767,'设计模式-状态模式',1,'[12,71,164,442,131]','介绍状态模式和策略模式是一对双胞胎，他们都属于行为设计模式。状态模式和策略模式都是为具有多种可能情形设计的模式，把不同的处理情形抽象为一个相同的接口，符合对扩展开放，对修改封闭的原则。策略模式封装了一...',NULL,'csdn/mode/37_0_1_0_1504569660.601471.html',NULL,0,0,0,1,0,NULL,1504548008000,1504548008000,1504548008000),(100471,0,2768,'设计模式-享元模式',1,'[12,443,75,71]','介绍享元模式简单的来说就是把一些重复的抽取出来提供给其他类使用。它使用共享物件，用来尽可能减少内存使用量以及分享资讯给尽可能多的相似物件；它适合用于当大量物件只是重复因而导致无法令人接受的使用大量内存...',NULL,'csdn/mode/37_0_1_1_1504569661.633582.html',NULL,0,0,0,1,0,NULL,1504461623000,1504461623000,1504461623000),(100472,0,2769,'设计模式-原型模式',1,'[274,12,71]','介绍原型模式（Prototype Pattern）是用于创建重复的对象，同时又能保证性能。这种类型的设计模式属于创建型模式，它提供了一种创建对象的最佳方式。 \n原型模式多用于创建复杂的或者耗时的实例，...',NULL,'csdn/mode/37_0_1_2_1504569662.539871.html',NULL,0,0,0,1,0,NULL,1504450805000,1504450805000,1504450805000),(100473,0,2770,'史上最简单的 MySQL 教程（三十三）「视图（上）」',3,'[444,7,445,143]','视图视图：view，是一种有结构（有行有列），但没有结果（结构中不真实存放数据）的虚拟表，虚拟表的结构来源不是自己定义的，而是从对应的基表（视图的数据来源）中产生的。创建视图首先，给出创建视图的基本语...',NULL,'csdn/mysql/17_1_1_0_1504569767.51514.html',NULL,0,0,0,1,0,NULL,1504454443000,1504454443000,1504454443000),(100474,0,2225,'Java-单机版的书店管理系统(练习设计模块和思想_系列 四(2) )',2,'[116,114,441,45]','说明：本博客为补全上篇-Java-单机版的书店管理系统(练习设计模块和思想_系列 四(1) )的，所以如果不懂，请先看上一篇。 \n本系列都是我一步一步学习来的， \n所以，可能比较适合初学设计模块的人来...',NULL,'csdn/java/1_0_1_13_1504264528.61916.html',NULL,0,0,0,1,0,NULL,1460329236000,1460329236000,1460329236000),(100475,0,2745,'Mybatis学习记录(三)--Mybatis配置文件详解',2,'[118,446]','关于mybatis的配置文件,主要有两个,一个是SqlMapperConfig.xml文件一个是mapper.xml文件,分别对这两个进行深入全面学习.一.SqlMapperConfig.xml文件1...',NULL,'csdn/java/1_0_3_4_1504265354.740856.html',NULL,0,0,0,1,0,NULL,1460761227000,1460761227000,1460761227000),(100476,0,2246,'Java-单机版的书店管理系统(练习设计模块和思想_系列 八 )',2,'[150,18,447]','本系列前面博客的链接：Java-单机版的书店管理系统(练习设计模块和思想_系列 七 ) \nhttp://blog.csdn.net/qq_26525215/article/details/511906...',NULL,'csdn/java/1_0_1_9_1504264540.103925.html',NULL,0,0,0,1,0,NULL,1461106846000,1461106846000,1461106846000),(100477,0,2505,'Java设计模式学习08——组合模式',2,'[53,448]','一、组合模式适用场景把部分和整体的关系用树形结构来表示，从而使客户端可以使用统一的方式对部分对象和整体对象进行管理。二、组合模式结构\n抽象构件(Conponent)角色：所有类的共有接口，定义了叶子和...',NULL,'csdn/java/1_1_1_7_1504264857.111527.html',NULL,0,0,0,1,0,NULL,1478113244000,1478113244000,1478113244000),(100478,0,2628,'Java web Filter, Strurs2 Interceptor 和 SpringMVC Interceptor 三者之间的联系与区别',2,'[101,449,450,345,451]','无论是Filter、Strurs2 Interceptor还是SpringMVC Interceptor，它们都是AOP理念的实现，本文结合源码详细解剖了三者在具体实现上的异同。',NULL,'csdn/java/1_0_1_0_1504265174.375248.html',NULL,0,0,0,1,0,NULL,1499781658000,1499781658000,1499781658000),(100479,0,2498,'Java设计模式学习07——桥接模式',2,'[53,89]','一、场景商城系统中常见的商品分类，以电脑为例，如何良好的处理商品分类销售的问题？\n我们可以用多层继承实现下图的关系：\n实现代码如下：public interface Computer {\n    vo...',NULL,'csdn/java/1_1_1_6_1504264850.037878.html',NULL,0,0,0,1,0,NULL,1478030403000,1478030403000,1478030403000),(100480,0,2645,'理解RESTful架构',2,'[452,453,454,455,456]','越来越多的人开始意识到，网站即软件，而且是一种新型的软件。但是传统上，软件和网络是两个不同的领域，很少有交集；软件开发主要针对单机环境，网络则主要研究系统之间的通信。互联网的兴起，使得这两个领域开始融...',NULL,'csdn/java/1_0_1_4_1504265191.628746.html',NULL,0,0,0,1,0,NULL,1498201238000,1498201238000,1498201238000),(100481,0,2380,'Linux内核工程导论——网络：网络特性',4,'[21,100,124]','网络特性\n       QoS and/orfair queueing\nIP层以下\n802.1d以太网桥\n802.1Q/802.1ad VLAN Support\nANSI/IEEE 802.2 LLC...',NULL,'csdn/linux/1_0_1_17_1504264687.147456.html',NULL,0,0,0,1,0,NULL,1444330809000,1444330809000,1444330809000),(100482,0,2323,'【Linux探索之旅】第一部分第五课：Unity桌面，人生若只如初见',4,'[21,119,105,457,107]','不容易啊，经过了前几课的学习，我们认识了Linux是什么，以及如何安装Linux系统（我们以Ubuntu这个Linux发行版为以后的演示系统），我们也在上一课终于把Ubuntu安装好了。\n“很不错，掌...',NULL,'csdn/linux/1_1_2_3_1504264633.201825.html',NULL,0,0,0,1,0,NULL,1439924415000,1439924415000,1439924415000),(100483,0,2468,'一天一个设计模式---外观模式',2,'[12]','如果让我们来制作一个苹果手机，我们需要实现拍照、视频聊天、通话的功能。通过外观模式，相当于对外提供了几个接口，拍照、视频聊天、通话的接口，而具体的内部处理，用户并不需要关心。',NULL,'csdn/java/1_0_1_6_1504264777.154181.html',NULL,0,0,0,1,0,NULL,1477386000000,1477386000000,1477386000000),(100484,0,2729,'JavaWEB学习记录--Jenkins自动部署Maven项目',2,'[458]','JavaWEB学习记录–Jenkins自动部署Maven项目标签（空格分隔）： javaWEB最近在研究jenkins的自动部署方案,有一些心得,记录下来以帮助其他人.如果对你有帮助记得点下赞哈.1....',NULL,'csdn/java/1_0_1_12_1504265333.401332.html',NULL,0,0,0,1,0,NULL,1480600804000,1480600804000,1480600804000),(100485,0,2318,'【Linux探索之旅】第一部分测试题',4,'[21,119,173,107,161]','第一部分的测试题，忘了知识点请回去之前的课程复习噢。',NULL,'csdn/linux/1_1_2_1_1504264629.950918.html',NULL,0,0,0,1,0,NULL,1438300824000,1438300824000,1438300824000),(100486,0,2386,'Linux内核工程导论——网络：IP：隧道',4,'[21,100,35,124]','Linux中IP隧道\n为什么需要IP隧道？\n没有接触过这个概念的人自然提出这样的疑问。实际上概念最初的提出很简单，为了在TCP/IP网络中传输其他协议的数据包。设想IPX协议或 X.25封装的数据包如...',NULL,'csdn/linux/1_0_1_18_1504264693.149691.html',NULL,0,0,0,1,0,NULL,1444330815000,1444330815000,1444330815000),(100487,0,2539,'集成通用Mapper，单表操作从此轻松',2,'[79,204]','如果你使用的Maven开发，你只需在pom.xml文件中加入如下依赖：\n    com.github.abel533\n    mapper\n    2.3.4\n如果你想导入架包：下面是连接，由于Map...',NULL,'csdn/java/1_1_1_9_1504264896.509379.html',NULL,0,0,0,1,0,NULL,1479902400000,1479902400000,1479902400000),(100488,0,2415,'UNIX domain  (  UNIX  域协议  )  实例',4,'[211,459,123,191,460,418]','一般在我们自己的主机上通信的时候，前面也讲到过可以使用pipe，fifo，msg，共享内存之类，如果你想使用套接字的话，当然TCP/IP的套接字也是可以的，只要指定server的IP = 127.0....',NULL,'csdn/linux/1_1_1_4_1504264722.303373.html',NULL,0,0,0,1,0,NULL,1332396045000,1332396045000,1332396045000),(100489,0,2187,'Linux2.6 --系统调用处理程序',4,'[209,212,272,21,100]','用户空间的程序无法直接执行内核代码。它们不能直接调用内核空间中的函数，因为内核驻留在受保护的地址空间上。如果进程可以直接在内核的地址空间上读写的话，系统的安全性和稳定性将不复存在。      所以，应...',NULL,'csdn/linux/1_0_2_17_1504264505.488661.html',NULL,0,0,0,1,0,NULL,1375894857000,1375894857000,1375894857000),(100490,0,2134,'Linux内核工程导论——前言',4,'[100,35]','想要研究linux内核，使用linux内核，首先要知道linux内核能做到什么，提供了什么。我看过很多初学者一进入公司就开始使用linux内核开发内核模块，使用的无论是通信方式、内存接口还是设备接口仍...',NULL,'csdn/linux/1_0_3_0_1504264464.146568.html',NULL,0,0,0,1,0,NULL,1440334827000,1440334827000,1440334827000),(100491,0,2224,'Linux系统调用',4,'[21,273,35,57,119]','1       系统调用意义\r\n\r\nlinux内核中设置了一组用于实现系统功能的子程序，称为系统调用。系统调用和普通库函数调用非常相似，只是系统调用由操作系统核心提供，运行于核心态，而普通的函数调用由...',NULL,'csdn/linux/1_0_3_7_1504264527.436571.html',NULL,0,0,0,1,0,NULL,1363960819000,1363960819000,1363960819000),(100492,0,2746,'SpringBoot实战记录(一)--MarkdownViewTools',2,'[137]','SpringBoot实战记录(一)–MarkdownViewTools标签（空格分隔）： spring-boot在公司开发过程中,后端人员维护接口文档,前端妹子只看文档,两者通过SVN中转,一来一去每...',NULL,'csdn/java/1_0_2_0_1504265356.667764.html',NULL,0,0,0,1,0,NULL,1473199250000,1473199250000,1473199250000),(100493,0,2332,'Linux2.6内核 -- 结构的初始化',4,'[61,35,21,100,183]','Linux 内核中用到了大量的结构体，在编码规范中也给出了结构体初始化的规则，这篇文章中有对其的解释：http://blog.csdn.net/dlutbrucezhang/article/detai...',NULL,'csdn/linux/1_0_1_1_1504264639.611558.html',NULL,0,0,0,1,0,NULL,1377439206000,1377439206000,1377439206000),(100494,0,2116,'Linux内核源码分析--文件系统（二、高速缓存区）',4,'[253,119,188,254]','从块设备中读取数据是很慢的（I/O操作相对于内存操作来说是比较慢的），所以为了不让CPU浪费宝贵的时间来等待读取块设备上的数据，就在内存中开辟了一段内存地址用来预获取最近使用过的多块设备块上的数据。当...',NULL,'csdn/linux/1_0_1_3_1504264453.944361.html',NULL,0,0,0,1,0,NULL,1423519214000,1423519214000,1423519214000),(100495,0,2690,'Java设计模式菜鸟系列(十三)状态模式建模与实现',2,'[53,12,343,409,408]','转载请注明出处：http://blog.csdn.net/lhy_ycu/article/details/39828653\n\n状态模式(State)：允许对象在内部状态改变时改变它的行为，对象看起来好...',NULL,'csdn/java/1_0_1_11_1504265288.999633.html',NULL,0,0,0,1,0,NULL,1412611222000,1412611222000,1412611222000),(100496,0,2694,'Java设计模式菜鸟系列(十七)桥接模式建模与实现',2,'[53,408,343,12,409]','桥接模式(Bridge)： 把事物和其具体实现分开(抽象化与实现化解耦)，使他们可以各自独立的变化。\n假设你的电脑是双系统(WinXP、Win7)，而且都安装了mysql、oracle、sqlserv...',NULL,'csdn/java/1_0_1_7_1504265292.935912.html',NULL,0,0,0,1,0,NULL,1413072020000,1413072020000,1413072020000),(100497,0,2666,'java设计模式之桥梁模式（10）',2,'[18,53,12]','java设计模式之桥梁模式（10）\r\n又叫桥连模式。\r\n桥梁模式是对象的结构模式，桥梁模式的用意是:将抽象化与实现化脱耦，使得二者可以独立地变化。\r\n接口就是抽象化，实现类就是实现化，把接口和实现类分...',NULL,'csdn/java/1_0_1_1_1504265259.760147.html',NULL,0,0,0,1,0,NULL,1408366839000,1408366839000,1408366839000),(100498,0,2653,'Java设计模式菜鸟系列(三)装饰者模式建模与实现',2,'[12,408,116,18]','装饰者(Decorator)模式：动态地将责任附加到对象上，若要扩展功能，装饰者提供了比继承更具有弹性的替代方案。对于装饰者模式，它其实是一种包装，所以我更愿意称它为一种包装。像咱们以前经常使用的Ja...',NULL,'csdn/java/1_0_2_1_1504265201.777276.html',NULL,0,0,0,1,0,NULL,1412370023000,1412370023000,1412370023000),(100499,0,2479,'Socket编程(三)---仿QQ多人聊天实例',2,'[123,461,62,63]','这次的实例，目的是为了模仿QQ上和好友聊天的功能，也就是用户登录后，点击用户头像，发送信息，好友就会接受到信息。',NULL,'csdn/java/1_0_2_7_1504264789.165158.html',NULL,0,0,0,1,0,NULL,1463839247000,1463839247000,1463839247000),(100500,0,2699,'Java设计模式菜鸟系列(十九)备忘录模式建模与实现',2,'[53,408,343,12,409]','备忘录模式(Memento)： 主要目的是保存一个对象的某个状态，以便在适当的时候恢复对象。\n\nMemento设计模式用来备份一个对象的当前状态，当需要的时候，用这个备份来恢复这个对象在某一个时刻的状...',NULL,'csdn/java/1_0_1_5_1504265298.139207.html',NULL,0,0,0,1,0,NULL,1413126021000,1413126021000,1413126021000),(100501,0,2688,'Java设计模式菜鸟系列(九)外观模式建模与实现',2,'[425,53,12,408,343]','外观模式(Facade)：是为了解决类与类之间的依赖关系的，像spring一样，可以将类与类之间的关系配置到配置文件中，而外观模式就是将他们的\n关系放在一个Facade类中，降低了类与类之间的耦合度，...',NULL,'csdn/java/1_0_1_15_1504265286.593606.html',NULL,0,0,0,1,0,NULL,1412535646000,1412535646000,1412535646000),(100502,0,2248,'缓冲区',4,'[246,192,162,210,462]','什么是缓冲区缓冲区又称为缓存，它是内存空间的一部分。也就是说，在内存空间中预留了一定的存储空间，这些存储空间用来缓冲输入或输出的数据，这部分预留的空间就叫做缓冲区。缓冲区根据其对应的是输入设备还是输出...',NULL,'csdn/linux/1_1_1_13_1504264541.191946.html',NULL,0,0,0,1,0,NULL,1371024047000,1371024047000,1371024047000),(100503,0,2686,'Java设计模式菜鸟系列(七)命令模式建模与实现',2,'[12,53,408,343,409]','命令模式(Command)：将“请求”(命令/口令)封装成一个对象，以便使用不同的请求、队列或者日志来参数化其对象。命令模式也支持撤销操作。命令模式的目的就是达到命令的发出者和执行者之间解耦，实现请求...',NULL,'csdn/java/1_0_1_17_1504265284.844097.html',NULL,0,0,0,1,0,NULL,1412524808000,1412524808000,1412524808000),(100504,0,2360,'菜鸟版JAVA设计模式—从火锅底料到装饰器模式',2,'[18,53,290,12]','“老板，来份全辣锅底，不要给我用装饰器模式来配料！”我特地狠狠的强调了最后一句话。\n不到一会，老板给我端来了一个火锅和几个盘子，火锅里装了盐水，而盘子里放了辣椒，花椒，茴香，大蒜等佐料。。。。。。。。...',NULL,'csdn/java/1_0_1_4_1504264662.080399.html',NULL,0,0,0,1,0,NULL,1411657252000,1411657252000,1411657252000),(100505,0,2715,'Spring Boot学习记录(四)--问题记录',2,'[59]','记录spring boot出现的一些奇奇怪怪的问题解决方案.1.文件上传,临时文件夹无效问题异常信息:Caused by: java.io.IOException: The temporary upl...',NULL,'csdn/java/1_0_1_19_1504265319.165465.html',NULL,0,0,0,1,0,NULL,1476651632000,1476651632000,1476651632000),(100506,0,2691,'Java设计模式菜鸟系列(十五)建造者模式建模与实现',2,'[53,408,12,343,409]','建造者模式(Builder)：工厂类模式提供的是创建单个类的模式，而建造者模式则是将各种产品集中起来进行管理。简单起见，就拿之前的工厂方法模式进行修改一下就可以得到建造者模式。\n建造者模式将很多功能集...',NULL,'csdn/java/1_0_1_9_1504265289.93602.html',NULL,0,0,0,1,0,NULL,1412719232000,1412719232000,1412719232000),(100507,0,2312,'linux系统启动过程详解-开机加电后发生了什么 --linux内核剖析（零）',4,'[119,70,21,35,463]','http://www.mamicode.com/info-detail-243819.html总的来说在操作系统加电启动之后到main函数执行之前操作系统经历了以下3个大步骤 \n*   启动BIOS。...',NULL,'csdn/linux/1_0_1_3_1504264625.911022.html',NULL,0,0,0,1,0,NULL,1458230435000,1458230435000,1458230435000),(100508,0,2262,'Linux 内核详解以及内核缓冲区技术',4,'[21,35,246,194,462]','Linux 内核简介现在让我们从一个比较高的高度来审视一下 GNU/Linux 操作系统的体系结构。您可以从两个层次上来考虑操作系统，如图 2 所示。图 2. GNU/Linux 操作系统的基本体系结...',NULL,'csdn/linux/1_1_1_18_1504264552.836616.html',NULL,0,0,0,1,0,NULL,1370678425000,1370678425000,1370678425000),(100509,0,2618,'Java 实现适配器(Adapter)模式',2,'[464]','平时我们会经常碰到这样的情况，有了两个现成的类，它们之间没有什么联系，但是我们现在既想用其中一个类的方法，同时也想用另外一个类的方法。有一个解决方法是，修改它们各自的接口，但是这是我们最不愿意看到的。...',NULL,'csdn/java/1_0_1_5_1504265104.044177.html',NULL,0,0,0,1,0,NULL,1412776821000,1412776821000,1412776821000),(100510,0,2743,'Mybatis学习记录(二)--Mybatis开发DAO方式',2,'[118,465]','mybatis开发dao的方法通常用两种,一种是传统DAO的方法,一种是基于mapper代理的方法,下面学习这两种开发模式.写dao之前应该要对SqlSession有一个更加细致的了解一.mybati...',NULL,'csdn/java/1_0_3_5_1504265352.617573.html',NULL,0,0,0,1,0,NULL,1460671234000,1460671234000,1460671234000),(100511,0,2740,'Maven学习记录(一)--IDEA下环境配置',2,'[79,466]','一.什么是Maven?Maven 是一个项目管理和整合工具。Maven 为开发者提供了一套完整的构建生命周期框架。开发团队几乎不用花多少时间就能够自动完成工程的基础构建配置，因为 Maven 使用了一...',NULL,'csdn/java/1_0_3_7_1504265349.480813.html',NULL,0,0,0,1,0,NULL,1460412051000,1460412051000,1460412051000),(100512,0,2496,'Java设计模式学习04——原型模式',2,'[18,53,467]','原型模式　　当我们需要构建一个与已经存在对象相似时，再通过new去产生一个新对象需要非常繁琐的数据准备或访问权限，而这时就可以用到原型模式，原型模式实现就是Java中的克隆技术，以某个对象为原型，复制...',NULL,'csdn/java/1_1_1_3_1504264847.964694.html',NULL,0,0,0,1,0,NULL,1477472438000,1477472438000,1477472438000),(100513,0,2634,'领域驱动设计系列文章（1）——通过现实例子显示领域驱动设计的威力',2,'[468,469,470,93,471]','在本文中，将会拿出一个显示的例子，先用传统的面向过程方式，使用贫血模型进行设计，然后再逐步加入需求变更，让读者发现，随着系统的不断变更，基于贫血模型的设计将会让系统慢慢陷入泥潭，越来越难于维护，然后再...',NULL,'csdn/java/1_0_1_16_1504265180.370828.html',NULL,0,0,0,1,0,NULL,1477832407000,1477832407000,1477832407000),(100514,0,2492,'Java设计模式学习02——工厂模式',2,'[53,361,18]','工厂模式工厂模式主要是为创建对象提供接口，将创建对象的过程隔离起来，实现了创建者与调用者的分离，提高了程序的灵活性。 \n核心本质：\n实例化对象，用工厂方法代替new操作。\n将选择实现类、创建对象统一管...',NULL,'csdn/java/1_1_1_1_1504264843.98766.html',NULL,0,0,0,1,0,NULL,1477306839000,1477306839000,1477306839000),(100515,0,2754,'Maven学习记录(二)--Maven核心概念',2,'[79]','转载自 http://www.cnblogs.com/xdp-gacl/p/4051819.html   \n博主写的很好,所以直接转载过来了    一、Maven坐标\n1.1、什么是坐标？\n　　在平面...',NULL,'csdn/java/1_0_2_16_1504265364.802409.html',NULL,0,0,0,1,0,NULL,1464861614000,1464861614000,1464861614000),(100516,0,2100,'【Linux探索之旅】第二部分第四课：文件操纵，鼓掌之中',4,'[21,119,107,160,161]','既然上一课我们学习了Linux中的文件组织方式，那么现在就该是玩弄，啊不，是操纵它们的时候了。\n\n文件操作有哪些呢？一般就是显示文件内容啦，还有拷贝文件，移动文件，删除文件，等等。\n\n这一课我们还会学...',NULL,'csdn/linux/1_1_1_17_1504264434.418051.html',NULL,0,0,0,1,0,NULL,1439870411000,1439870411000,1439870411000),(100517,0,2236,'Linux内核基础',4,'[100,35,209,162,472]','Linux系统运行的应用程序通过系统调用来与内核通信。应用程序通常调用库函数（比如C库函数）再有库函数通过系统调用界面，让内核带其完成各种不同的任务。下面这张图显示的就是应用程序，内核和硬件之间的关系...',NULL,'csdn/linux/1_0_3_5_1504264532.766295.html',NULL,0,0,0,1,0,NULL,1375729242000,1375729242000,1375729242000),(100518,0,2639,'Struts1与Struts2的区别和对比（深度好文）',2,'[473,474,475,476,477]','本文介绍了Struts2的起源，详细对比了Struts2和Struts1.x的差异，并穿插概述了Struts2框架和请求流程。本文详细介绍了Struts1.x和Struts2两者之间在Action方面...',NULL,'csdn/java/1_0_1_10_1504265185.537105.html',NULL,0,0,0,1,0,NULL,1491426031000,1491426031000,1491426031000),(100519,0,2519,'设计模式——抽象工厂模式',2,'[18,12,478]','抽象工厂模式是所有形态的工厂模式中最为抽象和最具一般性的。抽象工厂模式可以向客户端提供一个接口，使得客户端在不必指定产品的具体类型的情况下，能够创建多个产品族的产品对象。\n\n\n\n\n（1）创建一个Fru...',NULL,'csdn/java/1_0_1_8_1504264872.398513.html',NULL,0,0,0,1,0,NULL,1376150433000,1376150433000,1376150433000),(100520,0,2731,'SpringMVC学习记录(八)--开发中的小问题',2,'[27]','最近在做项目,用此贴记录遇到的一些小问题1.关于json首先需要引入3个包,我看网上有人说只需要两个,但是我没成功,引入3个之后才没问题的 \n关于json的返回格式,如果想增加内容的话最好用一个map...',NULL,'csdn/java/1_0_3_0_1504265341.453147.html',NULL,0,0,0,1,0,NULL,1461351638000,1461351638000,1461351638000),(100521,0,2515,'设计模式——工厂模式在开发中的应用（简单计算器）',2,'[18,361,209,479]','下面以一个简单的计算器为例子来说明，怎么用工厂模式。\n如果你没有用任何设计模式，你可能会这样写：\npackage com.meritit;\n\nimport java.util.Scanner;\n\npu...',NULL,'csdn/java/1_0_1_6_1504264868.266653.html',NULL,0,0,0,1,0,NULL,1376168416000,1376168416000,1376168416000),(100522,0,2264,'Linux 开机启动过程分析',4,'[21,35,215,480,481]','开机过程指的是从打开计算机电源直到LINUX显示用户登录画面的全过程。分析LINUX开机过程也是深入了解LINUX核心工作原理的一个很好的途径。启动第一步－－加载BIOS当 你打开计算机电源，计算机会...',NULL,'csdn/linux/1_1_1_15_1504264554.806303.html',NULL,0,0,0,1,0,NULL,1370948408000,1370948408000,1370948408000),(100523,0,2227,'Linux进程休眠和唤醒',4,'[21,211,57,482,483]','当进程以阻塞的方式通信，在得到结果前进程会挂起休眠。\r\n为了将进程以一种安全的方式进入休眠，我们需要牢记两条规则：\r\n一、永远不要在原子上下文中进入休眠。\r\n二、进程休眠后，对环境一无所知。唤醒后，必...',NULL,'csdn/linux/1_0_3_9_1504264529.564963.html',NULL,0,0,0,1,0,NULL,1363773639000,1363773639000,1363773639000),(100524,0,2230,'Java---设计模式app小软件汇总应用',2,'[12,18,209,61]','写了一个app小软件，重点不在于软件，软件bug挺多，也没去修改。 \n这个小软件只是为了更好的说明和了解设计模块而做的。 \nJava 程序设计–包结构 \nJava程序设计的系统体系结构很大一部分都体现...',NULL,'csdn/java/1_0_1_18_1504264530.630782.html',NULL,0,0,0,1,0,NULL,1459904421000,1459904421000,1459904421000),(100525,0,2732,'Mybatis学习记录(五)--整合spring开发Dao',2,'[118,59]','mybatis和spring整合,也就是通过spring管理SqlSessionFactory、mapper接口。一.导入架包除了spring的包和mybatis的包,还需要导入两者的整合包,目前这个...',NULL,'csdn/java/1_0_3_2_1504265342.50696.html',NULL,0,0,0,1,0,NULL,1461013241000,1461013241000,1461013241000),(100526,0,2414,'linux 网络编程：epoll 的实例',4,'[21,62,124,123,191,355]','在前面已经经过了PPC、TPC、select之类( TPC就是使用进程处理data，TPC就是使用线程处理 ),前面两个的缺点大家应该都是知道的是吧，对于select( 其实poll和他差不多 )，缺...',NULL,'csdn/linux/1_1_1_3_1504264721.215339.html',NULL,0,0,0,1,0,NULL,1332428439000,1332428439000,1332428439000),(100527,0,2633,'Struts2 实战：从 登录Demo 看 Struts2 应用开发',2,'[484,485,426,486,487]','作为 Struts2 的首篇文章，本文首先以登录Demo为例介绍了创建一个简单的 Struts2 应用的一般步骤和流程，紧接着以该 Demo 为出发点概述了 Struts2 的运行机制，揭示了 Str...',NULL,'csdn/java/1_0_1_15_1504265179.676994.html',NULL,0,0,0,1,0,NULL,1486915219000,1486915219000,1486915219000),(100528,0,2412,'Linux 服务器设计( 二 )',4,'[28,21,191,488,123,489]','上一篇的介绍已经OK，那么此处就只贴上代码！\r\n   CODE_1 : 主线程accept，但是线程比进程有一个好处是，对于conn_fd资源来说是可以直接共享的，所以就可以不需要像在进程中那样需要传...',NULL,'csdn/linux/1_1_1_0_1504264720.243716.html',NULL,0,0,0,1,0,NULL,1334833239000,1334833239000,1334833239000),(100529,0,2321,'《编程导论(Java)·2.1.1里氏替换原则》什么是LSP',2,'[18,490,491,492]','你可以不知道继承、多态，但是必须知道里氏替换原则(Liskov SubstitutionPrinciple、LSP)。',NULL,'csdn/java/1_1_1_15_1504264631.842914.html',NULL,0,0,0,1,0,NULL,1410364830000,1410364830000,1410364830000),(100530,0,2517,'设计模式——装饰模式',2,'[18,12,493]','装饰（ Decorator）模式又叫做包装模式。通过一种对客户端透明的方式来扩展对象的功能，是继承关系的一个替换方案。\n假如现在要一个会跑的车，我们会这样做：\npackage com.meritit;...',NULL,'csdn/java/1_0_1_2_1504264870.352265.html',NULL,0,0,0,1,0,NULL,1376686859000,1376686859000,1376686859000),(100531,0,2744,'SpringMVC学习记录(三)--异常处理',2,'[27,272]','学习springMVC从大牛那借鉴了很多经验,感谢ITEYE的大牛springMVC提供的异常处理主要有两种方式，一种是直接实现自己的HandlerExceptionResolver，当然这也包括使用...',NULL,'csdn/java/1_0_3_12_1504265353.872469.html',NULL,0,0,0,1,0,NULL,1459792831000,1459792831000,1459792831000),(100532,0,2226,'Linux进程模型总结',4,'[21,211,57,494,251]','一个进程在CPU上运行可以有两种运行模式（进程状态）：用户模式和内核模式。如果当前运行的是用户程序（用户代码），那么对应进程就处于用户模式（用户态），如果出现系统调用或者发生中断，那么对应进程就处于内...',NULL,'csdn/linux/1_0_3_8_1504264528.702365.html',NULL,0,0,0,1,0,NULL,1363788026000,1363788026000,1363788026000),(100533,0,2518,'设计模式——简单工厂模式—工厂方法模式—抽象工厂模式（比较）',2,'[12,361,495]','一、简单工厂模式：\n       简单工厂模式是对对象创建的简单封装，可以通过一个工厂类来实现对象的实例化，但是这种方式如果要增加一个新的产品就要修改工厂方法，这样就产生了工厂方法模式。\n      ...',NULL,'csdn/java/1_0_1_7_1504264871.621547.html',NULL,0,0,0,1,0,NULL,1376154025000,1376154025000,1376154025000),(100534,0,2757,'JavaWEB小知识学习--Java Mail',2,'[74]','本文主要使用java mail和spring mail来发送邮件教程,比较啰嗦,因为除了发邮件还写了其他工具类,不过很详细.1.使用java mail发送邮件首先把相关账号密码信息保存到一个prope...',NULL,'csdn/java/1_0_2_9_1504265368.077865.html',NULL,0,0,0,1,0,NULL,1468706428000,1468706428000,1468706428000),(100535,0,2752,'Log4j使用学习记录',2,'[24]','这是一篇Log4j使用教程,并不是一篇配置文件详解教程,主要的使用是按照需求来使用,所以随着我的需求增加会不断更新使用方法的.1.环境配置直接导入JAR就可以了,这里使用maven导入 \n      ...',NULL,'csdn/java/1_0_2_17_1504265362.842853.html',NULL,0,0,0,1,0,NULL,1463608840000,1463608840000,1463608840000),(100536,0,2136,'Linux内核工程导论——网络：Filter（LSF、BPF、eBPF）',4,'[101,123,100,124,78]','概览    LSF(Linux socket filter)起源于BPF（Berkeley Packet Filter），基础从架构一致，但使用更简单。LSF内部的BPF最早是cBPF（classic...',NULL,'csdn/linux/1_0_3_5_1504264465.181855.html',NULL,0,0,0,1,0,NULL,1451674858000,1451674858000,1451674858000),(100537,0,2753,'Maven学习记录(三)--实战引入Spring支持',2,'[79]','一.创建项目maven项目在IDEA下创建是相当容易然后给定项目坐标,确定即可二.完善项目目录结构IDEA创建完项目结构和标准的maven项目有些差异,这个时候就需要我们手动调整一下更改前结构 \n更改...',NULL,'csdn/java/1_0_2_15_1504265364.75726.html',NULL,0,0,0,1,0,NULL,1464872449000,1464872449000,1464872449000),(100538,0,2244,'Linux 内存映射函数 mmap（）函数详解',4,'[21,215,496,35,192]','一、概述          内存映射，简而言之就是将用户空间的一段内存区域映射到内核空间，映射成功后，用户对这段内存区域的修改可以直接反映到内核空间，同样，内核空间对这段区域的修改也直接反映用户空间。...',NULL,'csdn/linux/1_1_1_10_1504264539.01748.html',NULL,0,0,0,1,0,NULL,1371060002000,1371060002000,1371060002000),(100539,0,2516,'设计模式——原形模式',2,'[18,12,467,497,498]','Prototype模式是一种对象创建模式，它采用取复制原型对象的方法来创建对象的实例。使用Prototype模式创建的实例，具有与原型一样的数据。\n先看以下代码：\npackage com.meriti...',NULL,'csdn/java/1_0_1_4_1504264869.368428.html',NULL,0,0,0,1,0,NULL,1376233245000,1376233245000,1376233245000),(100540,0,2521,'设计模式——简单工厂',2,'[18,12,83]','第一个小例子：\npublic class Apple {\n	/*\n	 * 采集\n	 */\n	public void get(){\n		System.out.println(\"采集苹果\");\n	}\n}\n...',NULL,'csdn/java/1_0_1_10_1504264874.341045.html',NULL,0,0,0,1,0,NULL,1376139653000,1376139653000,1376139653000),(100541,0,2650,'Java Web基础 --- Servlet 综述(实践篇)',2,'[499,500,501,502,503]','摘要：　　伴随 J2EE 6一起发布的Servlet 3.0规范是Servlet规范历史上最重要的变革之一，它的许多新的特性都极大的简化了 Java Web 应用的开发。本文从一个简单的 Servle...',NULL,'csdn/java/1_0_2_2_1504265197.751627.html',NULL,0,0,0,1,0,NULL,1489082400000,1489082400000,1489082400000),(100542,0,2514,'设计模式——单例模式',2,'[18,12,84,504,505]','单例模式\n一、什么是单例模式：\n单例模式是一种对象创建形模式，使用单例模式，可以保证为一个类只生成唯一的实例对象。也就是说，在整个程序空间中，该类只存在一个实例对象。\n其实，GoF对单例模式的定义是：...',NULL,'csdn/java/1_0_1_5_1504264867.311838.html',NULL,0,0,0,1,0,NULL,1376226055000,1376226055000,1376226055000),(100543,0,2648,'使用 URLDecoder 和 URLEncoder 对中文字符进行编码和解码',2,'[506,507,508,509,510]','URLDecoder 和 URLEncoder 用于完成普通字符串 和 application/x-www-form-urlencoded MIME 字符串之间的相互转换。在本文中，我们以使用URLD...',NULL,'csdn/java/1_0_2_0_1504265195.748848.html',NULL,0,0,0,1,0,NULL,1488063617000,1488063617000,1488063617000),(100544,0,2402,'Linux USB Gadget--软件结构',4,'[21,191,75,210,511,159]','USB Gadget是分层的软件结构，本文分析的是2.6.32.2版本的Gadget软件结构，这个软件结构与以前版本的变化很大。USB Gadget软件结构总共分为三层：\r\n一. UDC层\r\n    ...',NULL,'csdn/linux/1_1_1_1_1504264714.04979.html',NULL,0,0,0,1,0,NULL,1340643634000,1340643634000,1340643634000),(100545,0,2310,'Linux进程间通信的几种方式总结--linux内核剖析（七）',4,'[324,21,78,35,512]','进程间通信概述进程通信的目的\n数据传输 \n一个进程需要将它的数据发送给另一个进程，发送的数据量在一个字节到几M字节之间\n共享数据 \n多个进程想要操作共享数据，一个进程对共享数据\n通知事 \n一个进程需要...',NULL,'csdn/linux/1_0_1_5_1504264624.994248.html',NULL,0,0,0,1,0,NULL,1458165609000,1458165609000,1458165609000),(100546,0,2300,'Java设计模式-导航',2,'[513,12,514,515]','Java 设计模式++ 面向对象设计',NULL,'csdn/java/1_1_2_7_1504264616.204731.html',NULL,0,0,0,1,0,NULL,1361307637000,1361307637000,1361307637000),(100547,0,2555,'设计模式-行为型模式总结实例（四）',2,'[12,516,346,517]','解释器模式\r\n给定一个语言，定义他的文法的一个表示，并定义一个解释器，这个解释器使用该表示来解释语言中的句子。\r\n\r\npackage com.ruishenh.designPatter.action....',NULL,'csdn/java/1_0_1_3_1504264948.662676.html',NULL,0,0,0,1,0,NULL,1389643202000,1389643202000,1389643202000),(100548,0,2558,'设计模式-行为型模式总结实例（一）',2,'[518,12,53,519,349]','迭代器模式\r\n提供一个方法顺序访问一个聚合对象的各个元素，而又不需要暴露该对象的内部表示。\r\n \r\npackage com.ruishenh.designPatter.action.iterator;...',NULL,'csdn/java/1_0_1_6_1504264951.984428.html',NULL,0,0,0,1,0,NULL,1389290421000,1389290421000,1389290421000),(100549,0,2553,'设计模式-结构型模式总结实例（二）',2,'[12,53,39,520,77]','代理模式\r\n为其他对象提供一种代理以控制对这个对象的访问。在某些情况下，一个对象不适合或者不能直接引用另一个对象，而代理对象可以在客户端和目标对象之间起到中介的作用。\r\n \r\n抽象角色：声明真实对象和...',NULL,'csdn/java/1_0_1_1_1504264946.717355.html',NULL,0,0,0,1,0,NULL,1389805212000,1389805212000,1389805212000),(100550,0,2552,'设计模式-结构型模式总结实例（三）',2,'[12,443,521,89,53]','装饰模式\r\n动态地给一个对象增加一些额外的职责，就增加的功能来说，Decorator模式相比生成子类更加灵活。\r\n \r\n \r\nComponent（被装饰对象基类）： 定义对象的接口，可以给这些对象动态...',NULL,'csdn/java/1_0_1_0_1504264945.970071.html',NULL,0,0,0,1,0,NULL,1389812448000,1389812448000,1389812448000),(100551,0,2554,'设计模式-结构型模式总结实例（一）',2,'[53,12,448,55,522]','组合模式\r\n 将对象以树形结构组织起来,以达成“部分－整体”的层次结构，使得客户端对单个对象和组合对象的使用具有一致性.\r\n有时候又叫做部分-整体模式，它使我们树型结构的问题中，模糊了简单元素和复杂元...',NULL,'csdn/java/1_0_1_2_1504264947.824552.html',NULL,0,0,0,1,0,NULL,1389805209000,1389805209000,1389805209000),(100552,0,2556,'设计模式-行为型模式总结实例（三）',2,'[12,523,524,85,517]','职责链模式\r\n使多个对象都有机会处理请求，从而避免请求的发送者和接收者之间的耦合关系 \r\n package com.ruishenh.designPatter.action.chainOfResp;\n...',NULL,'csdn/java/1_0_1_4_1504264949.930243.html',NULL,0,0,0,1,0,NULL,1389610804000,1389610804000,1389610804000),(100553,0,2557,'设计模式-行为型模式总结实例（二）',2,'[12,344,131,178,53]','命令模式\r\n将一个请求封装为一个对象，从而使你可以用不同的请求对客户进行参数化，对请求排队和记录请求日志，以及支持可撤销的操作。\r\n \r\npackage com.ruishenh.designPatt...',NULL,'csdn/java/1_0_1_5_1504264950.980989.html',NULL,0,0,0,1,0,NULL,1389474015000,1389474015000,1389474015000),(100554,0,2392,'Linux内核工程导论——总线：Platform',4,'[100,21,35,525]','Platform总线\r\n         PCI总线只是一种USB挂载的总线选择。USB总线虽然是慢速总线，需要挂载在较快的总线上作为缓存，但也有例外的情况，例如CPU中直接集成USB控制模块，这在很...',NULL,'csdn/linux/1_0_1_12_1504264700.444713.html',NULL,0,0,0,1,0,NULL,1442350857000,1442350857000,1442350857000),(100555,0,2522,'tomcat配置默认显示页面',2,'[23,28]','所谓的修改tomcat的默认主页，就是在tomcat服务器开启时输入ip：port能直接进入你自己定义的主页而不是tomcat主页，具体有以下几个步骤：①首先进入tomcat 下的conf目录，修改s...',NULL,'csdn/java/1_1_1_0_1504264878.31873.html',NULL,0,0,0,1,0,NULL,1479294052000,1479294052000,1479294052000),(100556,0,2123,'x86架构保护模式下界限问题',4,'[119,180,170]','在保护模式下有很多界限问题，下面集中来看下：\n        若段界限是0xFFFFF，粒度是4KB，那么实际界限值是多少？若粒度G=0，那么段界限就是实际的界限值；但粒度为4KB，那么界限值就是：（...',NULL,'csdn/linux/1_0_1_19_1504264456.792565.html',NULL,0,0,0,1,0,NULL,1420390813000,1420390813000,1420390813000),(100557,0,2368,'Linux0.11 中对地址的管理',4,'[21,215,401,162,35]','逻辑地址（Logical Address） 是指由程序产生的与段相关的偏移地址部分。例如，你在进行C语言指针编程中，可以读取指针变量本身值(&操作)，实际上这个值就是逻辑地址，它是相对于你当前进程数据...',NULL,'csdn/linux/1_1_2_10_1504264670.323208.html',NULL,0,0,0,1,0,NULL,1371538843000,1371538843000,1371538843000),(100558,0,2205,'linux2.6内核链表',4,'[191,262,526,100,21]','一、        链表数据结构简介      链表是一种常用的组织有序数据的数据结构，它通过指针将一系列数据节点连接成一条数据链，是线性表的一种重要实现方式。相对于数组，链表具有更好的动态性，建立链...',NULL,'csdn/linux/1_0_2_14_1504264514.040282.html',NULL,0,0,0,1,0,NULL,1376049609000,1376049609000,1376049609000),(100559,0,2059,'x86架构中的保护模式',4,'[119,126,180]','在x86架构中所谓保护模式其实就是段的存储方式能够达到一种保护机制。也正因为有了保护模式（段的存储方式）所以才会有特权模式，以及后面的多任务之说；\n        在实模式下段的存储很简单，就是代表一...',NULL,'csdn/linux/1_0_2_0_1504264408.060921.html',NULL,0,0,0,1,0,NULL,1420362038000,1420362038000,1420362038000),(100560,0,2167,'把握linux内核设计思想（八）：进程管理分析',4,'[159,57,32,15]','【版权声明：尊重原创，转载请保留出处：blog.csdn.net/shallnet，文章仅供学习交流，请勿用于商业用途】\n        进程其实就是程序的执行时的实例，是处于执行期的程序。在linu...',NULL,'csdn/linux/1_2_1_6_1504264490.017262.html',NULL,0,0,0,1,0,NULL,1438196434000,1438196434000,1438196434000),(100561,0,2329,'乒乓球问题',2,'[18,12]','乒乓球问题，指方法的来回调用.',NULL,'csdn/java/1_1_1_2_1504264638.159867.html',NULL,0,0,0,1,0,NULL,1411772422000,1411772422000,1411772422000),(100562,0,2179,'内存管理单元--MMU',4,'[120,162,215,100,35]','现代操作系统普遍采用虚拟内存管理（Virtual Memory Management）机制，这需要处理器中的MMU（Memory Management Unit，内存管理单元）提供支持，本节简要介绍M...',NULL,'csdn/linux/1_0_2_10_1504264501.304567.html',NULL,0,0,0,1,0,NULL,1376316019000,1376316019000,1376316019000),(100563,0,2282,'Linux内核工程导论——内核种类',4,'[100]','内核概览linux内核并不是唯一的内核，也并不是唯一的一种内核。实际上linux内核属于Monolithic kernel的一个实现，这种内核还包括Unix系列（BSD、SunOS等），dos和win...',NULL,'csdn/linux/1_0_2_18_1504264587.061601.html',NULL,0,0,0,1,0,NULL,1458219621000,1458219621000,1458219621000),(100564,0,2436,'Linux0.11进程切换和TSS结构',4,'[21,191,267,266,265]','TSS 全称为task state segment，是指在操作系统进程管理的过程中，进程切换时的任务现场信息。 　　      X86体系从硬件上支持任务间的切换。为此目的，它增设了一个新段：任务状态...',NULL,'csdn/linux/1_1_1_15_1504264737.978957.html',NULL,0,0,0,1,0,NULL,1372194011000,1372194011000,1372194011000),(100565,0,2354,'mmap详解',4,'[165,78,183,100,21]','共享内存可以说是最有用的进程间通信方式，也是最快的IPC形式, 因为进程可以直接读写内存，而不需要任何数据的拷贝。对于像管道和消息队列等通信方式，则需要在内核和用户空间进行四次的数据拷贝，而共享内存则...',NULL,'csdn/linux/1_0_1_5_1504264655.931734.html',NULL,0,0,0,1,0,NULL,1377360037000,1377360037000,1377360037000),(100566,0,2590,'设计模式(3)-创建型-抽象工厂(Abstract Factory)(个人笔记)',2,'[12,422,45,527,317]','概述：提供一个创建一系列相关或相互依赖对象的接口，而无需指定它们具体的类。\n适用性：    1.一个系统要独立于它的产品的创建、组合和表示时。\n\n    2.一个系统要由多个产品系列中的一个来配置时。...',NULL,'csdn/java/1_1_1_2_1504265050.760118.html',NULL,0,0,0,1,0,NULL,1335420008000,1335420008000,1335420008000),(100567,0,2180,'对 jiffies 溢出、回绕及 time_after 宏的理解',4,'[223,298,165,210,100]','原文如下：关于jiffies变量：     全局变量jiffies用来记录自启动以来产生的节拍的总数。系统启动时会将该变量初始化为0，此后，每当时钟中断产生时就会增加该变量的值。jiffies和另外一...',NULL,'csdn/linux/1_0_2_12_1504264502.263801.html',NULL,0,0,0,1,0,NULL,1376301611000,1376301611000,1376301611000),(100568,0,2428,'Linux进程-命令行参数和环境列表',4,'[21,165,317,196,210]','命令行参数在C中，main函数有很多的变种，比如main(),\nint main(),\nint main(int argc, char *argv[]),\nint main(int argc, cha...',NULL,'csdn/linux/1_1_1_18_1504264734.760718.html',NULL,0,0,0,1,0,NULL,1372147243000,1372147243000,1372147243000),(100569,0,2212,'Linux系统调用的实现机制分析',4,'[35,209,192,210,100]','【摘要】本文介绍了系统调用的一些实现细节。首先分析了系统调用的意义，它们与库函数和应用程序接口有怎样的关系。然后，我们考察了内核如何实现系统调用，以及执行系统调用的连锁反应：陷入内核，传递系统调用号和...',NULL,'csdn/linux/1_0_2_16_1504264517.97748.html',NULL,0,0,0,1,0,NULL,1375898423000,1375898423000,1375898423000),(100570,0,2201,'jplogic v1.0 Java快速开发平台  Vs 目前市面上的快速开发平台',2,'[229,528,217,529]','平台登录界面（支持多系统登录或者单点登录）：\n\n\n系统主页面（demo）：\n\n\n主页页面的内容可以需要灵活定制\n本人往后会陆续更新平台使用案例，平台交流、技术交流或项目合作可以加群交流：3764471...',NULL,'csdn/java/1_1_1_8_1504264511.702687.html',NULL,0,0,0,1,0,NULL,1395795650000,1395795650000,1395795650000),(100571,0,2401,'linux input 子系统分析 一',4,'[530,21,191,531,75,532]','linux input子系统分析--概述与数据结构\r\n        Input子系统处理输入事务，任何输入设备的驱动程序都可以通过Input输入子系统提供的接口注册到内核，利用子系统提供的功能来与用...',NULL,'csdn/linux/1_1_1_7_1504264713.119264.html',NULL,0,0,0,1,0,NULL,1315846831000,1315846831000,1315846831000),(100572,0,2407,'linux MISC 驱动模型分析',4,'[21,45,532,191,159,489]','linux MISC 驱动模型分析\r\n\r\n\r\n        阅读led驱动程序的代码的时候，没有发现ldd3中提到的各种字符设备注册函数，而是发现了一个misc_register函数，这说明led设...',NULL,'csdn/linux/1_1_1_12_1504264717.279034.html',NULL,0,0,0,1,0,NULL,1315494018000,1315494018000,1315494018000),(100573,0,2487,'Hibernate开发中常见错误总结',2,'[142,148,143,533,56]','org.hibernate.MappingException: Unknown entity: cn.itcast.hibernate717.helloworld.Person\nhibernate框架...',NULL,'csdn/java/1_0_1_10_1504264810.672586.html',NULL,0,0,0,1,0,NULL,1349539254000,1349539254000,1349539254000),(100574,0,2494,'Java设计模式学习05——适配器模式',2,'[53,18,77]','之前讲的几种模式都是创建型模式，现在开始讲结构型模式。何为结构型模式？结构型模式的 核心作用， 是从程序结构上实现松耦合，从而可以扩大整体的类结构，用来解决更大的问题。一、适配器模式定义适配器模式，把...',NULL,'csdn/java/1_1_1_4_1504264845.942677.html',NULL,0,0,0,1,0,NULL,1477587655000,1477587655000,1477587655000),(100575,0,2491,'Java设计模式学习——前言与介绍',2,'[53,12]','前言　　在我平时的学习与项目工作中，经常会纠结于类的框架搭建，以及类间的关系梳理，而当我通过查看一些牛人的代码解释时总会有一种有一种豁然开朗之感，感觉别人写的代码层次清晰，易于理解。久而久之，我确实感...',NULL,'csdn/java/1_1_1_0_1504264842.918989.html',NULL,0,0,0,1,0,NULL,1477227604000,1477227604000,1477227604000),(100576,0,2668,'java设计模式之单例模式（1）',2,'[53,12]','单例模式：属于创建型模式。项目中只存在某个类的一个对象，而且只可能存在一个对象。那么我们说这个类是单例模式，也叫单态模式。\r\n单例模式分为两种 :懒汉式 和 饿汉式。\r\n饿汉式',NULL,'csdn/java/1_0_1_10_1504265261.544801.html',NULL,0,0,0,1,0,NULL,1406124030000,1406124030000,1406124030000),(100577,0,2670,'java设计模式之建造者模式（3）',2,'[18,53,12]','建造者模式：属于创建型模式，和之前的工厂模式很相似。两者相比的话，建造者模式创建的对象是复杂的对象，而工厂模式创建的都是简单的单一对象。\r\n    建造者模式就像一个 流水线，会把各种零件按照一定的顺...',NULL,'csdn/java/1_0_1_8_1504265263.725741.html',NULL,0,0,0,1,0,NULL,1406275244000,1406275244000,1406275244000),(100578,0,2669,'java设计模式之工厂模式（2）',2,'[18,53,12]','工厂模式：属于创建型模式。同我们生活中的厂家很相似。我们并不自己制造（new）产品，而是依靠厂家制造，我们只是拿来使用。简单的说就是让工厂\r\n  根据我们的需求给我们new一个对象。\r\n  \r\n工厂模...',NULL,'csdn/java/1_0_1_9_1504265262.610081.html',NULL,0,0,0,1,0,NULL,1406221221000,1406221221000,1406221221000),(100579,0,2316,'【Linux探索之旅】第二部分第一课：终端Terminal，好戏上场',4,'[21,119,107,161,198]','领略终端的奇妙世界，命令行就在眼前',NULL,'csdn/linux/1_1_2_0_1504264628.945806.html',NULL,0,0,0,1,0,NULL,1438300835000,1438300835000,1438300835000),(100580,0,2672,'java设计模式之原型模式（5）',2,'[18,53,12]','原型模式也是一种创建型模式，只不过他创建的对象不是通过new来创建的，而是通过克隆来实现。为什么要通过克隆而不是new呢？\r\n举个例子：比如一个对象的创建需要读取本地文件（Excel）中的信息，而且需...',NULL,'csdn/java/1_0_1_6_1504265264.767708.html',NULL,0,0,0,1,0,NULL,1406548856000,1406548856000,1406548856000),(100581,0,2173,'把握linux内核设计思想（十）：内核同步',4,'[159,534,535,536,537]','【版权声明：尊重原创，转载请保留出处：blog.csdn.net/shallnet，文章仅供学习交流，请勿用于商业用途】\n        如同linux应用一样，内核的共享资源也要防止并发，因为如果多...',NULL,'csdn/linux/1_2_1_4_1504264496.19872.html',NULL,0,0,0,1,0,NULL,1438376436000,1438376436000,1438376436000),(100582,0,2615,'Java 实现简单工厂模式',2,'[361]','工厂模式 属于创建型模式\n简单工厂模式\n通过一个厂类，以一个条件来创建对应的对象\n//业务功能\npublic interface ICalculation {\n	double getResult(d...',NULL,'csdn/java/1_0_1_1_1504265101.039539.html',NULL,0,0,0,1,0,NULL,1411765240000,1411765240000,1411765240000),(100583,0,2161,'把握linux内核设计思想系列',4,'[159,119,538,539]','【版权声明：尊重原创，转载请保留出处：blog.csdn.net/shallnet，文章仅供学习交流，请勿用于商业用途】\n把握linux内核设计思想（一）：系统调用\n把握linux内核设计思想（二）：...',NULL,'csdn/linux/1_2_1_0_1504264485.098723.html',NULL,0,0,0,1,0,NULL,1439848815000,1439848815000,1439848815000),(100584,0,2069,'组合模式',2,'[12,540,541,364,542]','组合模式标签 ： Java与设计模式\n  组合模式: 将对象组合成树形结构以表示‘部分-整体’的层次结构, 使得用户对单个对象和组合对象的使用具有一致性.解析 \n组合模式描述了如何将容器和叶子节点进行...',NULL,'csdn/java/1_0_1_10_1504264412.817709.html',NULL,0,0,0,1,0,NULL,1472792418000,1472792418000,1472792418000),(100585,0,2172,'把握linux内核设计思想（十一）：内存管理之页的分配与回收',4,'[159,120,543,544,545]','【版权声明：尊重原创，转载请保留出处：blog.csdn.net/shallnet，文章仅供学习交流，请勿用于商业用途】 \n\n        内存管理单元（MMU）负责将管理内存，在把虚拟地址转换为物...',NULL,'csdn/linux/1_2_1_3_1504264495.103247.html',NULL,0,0,0,1,0,NULL,1439647251000,1439647251000,1439647251000),(100586,0,2286,'Linux内核工程导论——网络：下半部分:core',4,'[21,100,546,123,124]','总览         最外层是3个文件:socket、compat；、sysctl_net。socket文件定义了操作系统暴漏给用户程序的接口，compat是兼容性考虑的特殊socket接口（主要服务...',NULL,'csdn/linux/1_0_2_10_1504264596.937889.html',NULL,0,0,0,1,0,NULL,1446505202000,1446505202000,1446505202000),(100587,0,2265,'How program works',4,'[207,119,198,215,162]','1.gdb常用调试命令要用gdb调试的话，编译命令需要添加-g参数，例如[plain] view plaincopygcc -g main.c -o main  b linenum          ...',NULL,'csdn/linux/1_1_1_16_1504264555.921151.html',NULL,0,0,0,1,0,NULL,1370678426000,1370678426000,1370678426000),(100588,0,2384,'Linux内核工程导论——进程',4,'[100,35,21]','进程\n进程调度\n概要\n         linux是个多进程的环境，不但用户空间可以有多个进程，而且内核内部也可以有内核进程。linux内核中线程与进程没有区别，因此叫线程和进程都是一样的。调度器调度...',NULL,'csdn/linux/1_0_1_7_1504264691.14261.html',NULL,0,0,0,1,0,NULL,1440795646000,1440795646000,1440795646000),(100589,0,2758,'JavaWEB小知识学习--原生AJAX',2,'[108]','AJAX的作用局部刷新,作为提升页面体验还是很重要的,不过大家都说对SEO不是很友好,一直使用jQuery封装的AJAX,没有了解过原生的是什么样子的,特此学习下,补充知识1.原生AJAX的Get方式...',NULL,'csdn/java/1_0_2_10_1504265368.857493.html',NULL,0,0,0,1,0,NULL,1468659623000,1468659623000,1468659623000),(100590,0,2253,'Linux System Programming --Chapter Three',4,'[21,547,210,411,548]','这一章的主题是--缓冲式I/O一，流与缓冲       流I/O是由C语言的标准函数提供的，这些I/O可以替代系统中提供的read和write函数。事实上流I/O的内部封装了这两个基本的文件读写系统调...',NULL,'csdn/linux/1_1_1_8_1504264545.195313.html',NULL,0,0,0,1,0,NULL,1371110448000,1371110448000,1371110448000),(100591,0,2353,'Linux2.6内核--内存管理（2）--区',4,'[120,216,21,100,549]','由于硬件的限制，内核不能对所有的页一视同仁。有些页位于内存中的特定物理地址上，所以，不能将其用于一些特别的任务。（关于内存分页机制可以查看：http://blog.csdn.net/dlutbruce...',NULL,'csdn/linux/1_0_1_9_1504264654.931242.html',NULL,0,0,0,1,0,NULL,1377180021000,1377180021000,1377180021000),(100592,0,2098,'【Linux探索之旅】第二部分第五课：用户和权限，有权就任性',4,'[21,550,119,161,107]','今天的标题也挺任性的啊，虽说小编是一个很本分的人（真的吗），起这种标题也是情非得已。\n\n第二部分的前几课我们讲解了终端，命令行，文件和目录，文件操作。都算是Linux的重要基础。\n\n这一课我们来讲一个...',NULL,'csdn/linux/1_1_1_16_1504264432.483683.html',NULL,0,0,0,1,0,NULL,1440295227000,1440295227000,1440295227000),(100593,0,2255,'Linux System Programming --Chapter Two',4,'[21,246,35,411,551]','首先，需要解释的东西是Linux系统调用一、 什么是系统调用     在Linux的世界里，我们经常会遇到系统调用这一术语，所谓系统调用，就是内核提供的、功能十分强大的一系列的函数。这些系统调用是在内...',NULL,'csdn/linux/1_1_1_9_1504264546.420429.html',NULL,0,0,0,1,0,NULL,1371110445000,1371110445000,1371110445000),(100594,0,2194,'浅谈各类RAD快速开发平台存在的意义',2,'[229,552]','今天和大伙谈论一个话题各类快速开发平台（jplogic）存在意义',NULL,'csdn/java/1_1_1_1_1504264509.715665.html',NULL,0,0,0,1,0,NULL,1417392007000,1417392007000,1417392007000),(100595,0,2195,'Linux2.6--进程抢占和上下文切换',4,'[162,553,21,100,211]','上下文切换，也就是从一个可执行进程切换到另一个可执行进程，由定义在kernel/sched.c中的context_switch()函数负责处理。每当一个新的进程被选出来准备投入运行的时候，schedu...',NULL,'csdn/linux/1_0_2_1_1504264509.838912.html',NULL,0,0,0,1,0,NULL,1376902807000,1376902807000,1376902807000),(100596,0,2250,'有限状态机',4,'[165,262,62,223,554]','有限状态机是一种数学概念，运用到程序中，可用于有限数量的状态的变化，每个子程序进行一些处理并选择下一种状态。基本的实现思路就是用一张表保存所有可能的状态，并列出进入每个状态时可能执行的所有动作，其中最...',NULL,'csdn/linux/1_1_1_17_1504264543.135604.html',NULL,0,0,0,1,0,NULL,1370678425000,1370678425000,1370678425000),(100597,0,2077,'命令模式',2,'[12,18,555,556,557]','在对象的结构和创建问题都解决了之后,就剩下对象的行为问题了: 如果对象的行为设计的好,那么对象的行为就会更清晰,它们之间的协作效率就会提高. \n  行为型模式共有11个可供研究,它们分别是:命令模式、...',NULL,'csdn/java/1_0_1_6_1504264417.688749.html',NULL,0,0,0,1,0,NULL,1476079228000,1476079228000,1476079228000),(100598,0,2751,'JSON工具学习记录--FastJSON',2,'[428]','最近做项目,总是与json打交道,在用了即可json工具后,个人认为fastJson最好用,很方便,API也清晰可见,所以记录下使用方法,给需要的人提供帮助.(部分摘抄自网络)一.API入口Fastj...',NULL,'csdn/java/1_0_2_18_1504265361.690523.html',NULL,0,0,0,1,0,NULL,1463212855000,1463212855000,1463212855000),(100599,0,2379,'Linux内核工程导论——网络：Socket',4,'[100,35,21,124,123]','网络架构\r\n         我们通常见到的网络是以太网络和无线网络，但是linux是个大而全的操作系统，其支持的无线网络很多。主要有：业余无线电、CAN网络、红外线（IrDA）、蓝牙（Bluetoo...',NULL,'csdn/linux/1_0_1_9_1504264685.005995.html',NULL,0,0,0,1,0,NULL,1442005226000,1442005226000,1442005226000),(100600,0,2452,'JAVA设计模式-代理模式',2,'[53]','代理模式代理模式使用代理对象完成用户请求，屏蔽用户对真实对象的访问。现实世界的代理人被授权执行当事人的一些事宜，无需当事人出面，从第三方的角度看，似乎当事人并不存在，因为他只和代理人通信。而事实上代理...',NULL,'csdn/java/1_0_1_0_1504264756.611221.html',NULL,0,0,0,1,0,NULL,1456941608000,1456941608000,1456941608000),(100601,0,2091,'【Linux探索之旅】第四部分第一课：压缩文件，解压无压力',4,'[21,119,107,558,104]','最近小编因为换工作，从南法搬到巴黎。折腾了很久。\n网络一直用的是公共的无线网，信号不行。无线上网的box盒子已经说通网了，但我觉得墙上的线有问题。反正就是用不了自己的告诉WiFI盒子。\n而且还要继续找...',NULL,'csdn/linux/1_1_1_4_1504264426.428432.html',NULL,0,0,0,1,0,NULL,1445439620000,1445439620000,1445439620000),(100602,0,2671,'java设计模式之三句话记住23种设计模式（4）',2,'[18,53,12]','1：创建型模式：弹弓原件（单例，工厂，原型，建造）\r\n2：结构型模式：外援组 佩戴桥石（外观，享元，组合，适配，代理，桥连，装饰）\r\n3：行为型模式：爹责令房中介装备观测板（迭代，责任链，命令，访问者...',NULL,'csdn/java/1_0_1_7_1504265263.872213.html',NULL,0,0,0,1,0,NULL,1406304028000,1406304028000,1406304028000),(100603,0,2170,'把握linux内核设计思想（十三）：内存管理之进程地址空间',4,'[159,120,559,560]','【版权声明：尊重原创，转载请保留出处：blog.csdn.net/shallnet，文章仅供学习交流，请勿用于商业用途】\n\n        进程地址空间由进程可寻址的虚拟内存组成，Linux 的虚拟地...',NULL,'csdn/linux/1_2_1_1_1504264493.088937.html',NULL,0,0,0,1,0,NULL,1439719252000,1439719252000,1439719252000),(100604,0,2174,'把握linux内核设计思想（一）：系统调用',4,'[159,273,561,562,563]','【版权声明：尊重原创，转载请保留出处：blog.csdn.net/shallnet，文章仅供学习交流，请勿用于商业用途】\n        一般情况下进程不能访问内核所占内存空间也不能调用内核函数。为了...',NULL,'csdn/linux/1_2_1_13_1504264497.211542.html',NULL,0,0,0,1,0,NULL,1438120807000,1438120807000,1438120807000),(100605,0,2283,'Linux内核工程导论——网络：路由：路由原理',4,'[124,100]','背景与概览\n\n路由表\n\nIP层通过路由将数据包送达该送达的目的地址，这就要求在整个网络中建立正确的路由表。路由表的内容是记录要到达哪里下一跳需要发到哪里（可以是端口可以是ip），如此整个网络在单个节点...',NULL,'csdn/linux/1_0_2_15_1504264590.334454.html',NULL,0,0,0,1,0,NULL,1453748450000,1453748450000,1453748450000),(100606,0,2685,'Java设计模式菜鸟系列(六)单例模式建模与实现',2,'[53,408,18,12,66]','单例模式保证了一个类只有一个实例，且提供一个访问全局点的方式，更加灵活的保证了实例的创建和访问约束。系统中只有一个实例，因此构造方法应该为私有 饿汉式：类加载时直接创建静态实例；懒汉式：第一次需要时才...',NULL,'csdn/java/1_0_1_18_1504265283.596996.html',NULL,0,0,0,1,0,NULL,1412463644000,1412463644000,1412463644000),(100607,0,2114,'全面解析C语言中可变参数列表',4,'[253,564,310,183]','全面解析c语言中可变参数列表问题：1、大众版：大家习惯的使用方式；2、真实版：真正的使用方式；3、实际原理：具体原理，本质；4、自己实现可变参数列表：理解本质后，自己用自己的方法来实现可变参数列表；5...',NULL,'csdn/linux/1_0_1_1_1504264451.726431.html',NULL,0,0,0,1,0,NULL,1423666827000,1423666827000,1423666827000),(100608,0,2749,'近期javaWEB项目总结',2,'[74]','找工作前把最近做的项目总结一下,面试的时候也好说说,虽然都不是什么很难得项目,但是对于最近学习的知识做到了一个很好的总结和巩固.1.微信后台开发这是学校老师接的一个项目,然后找我来做的,顺便吐槽下,老...',NULL,'csdn/java/1_0_2_12_1504265359.720861.html',NULL,0,0,0,1,0,NULL,1467500414000,1467500414000,1467500414000),(100609,0,2493,'Java设计模式学习03——建造者模式',2,'[53,176]','一、场景 \n        当需要生产一辆汽车时，我们需要为其装配发动机、轮胎、座椅等等部件，这个装配过程是比较复杂的而且也需要较高的组装技术。而建造者模式（Builder Pattern）就是为了将...',NULL,'csdn/java/1_1_1_2_1504264844.946896.html',NULL,0,0,0,1,0,NULL,1477407624000,1477407624000,1477407624000),(100610,0,2053,'迭代器模式',2,'[54,12,565,566,567]','迭代器模式: 提供一种方法顺序访问聚合对象(如List、Set)内的每个元素, 而又不暴露聚合对象的内部实现. \n   \n- 可复用面向对象软件的基础',NULL,'csdn/java/1_0_1_0_1504264402.417503.html',NULL,0,0,0,1,0,NULL,1487854820000,1487854820000,1487854820000),(100611,0,2495,'Java设计模式学习06——静态代理与动态代理',2,'[53,568]','一、代理模式为某个对象提供一个代理，从而控制这个代理的访问。代理类和委托类具有共同的父类或父接口，这样在任何使用委托类对象的地方都可以使用代理类对象替代。代理类负责请求的预处理、过滤、将请求分配给委托...',NULL,'csdn/java/1_1_1_5_1504264846.887893.html',NULL,0,0,0,1,0,NULL,1477818057000,1477818057000,1477818057000),(100612,0,2068,'桥接模式',2,'[89,18,12]','桥接模式标签： Java与设计模式场景在商城系统中商品是分类摆放的,以电脑为例我们有以下商品分类, 该如何良好的处理商品分类销售的问题: \n直观上我们会认为该商品分类以继承来实现:电脑作为根类,台式机...',NULL,'csdn/java/1_0_1_13_1504264411.836239.html',NULL,0,0,0,1,0,NULL,1452416448000,1452416448000,1452416448000),(100613,0,2735,'SpringMVC学习记录(一)--环境配置',2,'[27,569]','在IDEA下配置SpringMVC环境是相当简单的,这里强烈推荐Intellij IDEA开发javaWEB简直完爆eclipse.1.创建项目创建项目很简单,直接选择SpringMVC即可,并且ID...',NULL,'csdn/java/1_0_3_14_1504265344.553381.html',NULL,0,0,0,1,0,NULL,1459778404000,1459778404000,1459778404000),(100614,0,2050,'Spring Security安全框架入门篇',2,'[58,67,102]','一、Spring Security相关概念1.1.、Spring Security介绍：Spring Security是一个能够为基于Spring的企业应用系统提供声明式的安全访问控制解决方案的安全框...',NULL,'csdn/java/1_1_1_3_1504264397.420073.html',NULL,0,0,0,1,0,NULL,1454544002000,1454544002000,1454544002000),(100615,0,2718,'SpringDataJPA学习记录(二)--增删改查',2,'[59,204]','SpringDataJPA学习记录(二)–增删改查标签（空格分隔）： springJPA环境配置后,开始增删改查,查是用的最多的,放在最后.1.增加增加可以使用JpaRepository接口里面的sa...',NULL,'csdn/java/1_0_1_15_1504265322.639915.html',NULL,0,0,0,1,0,NULL,1479484811000,1479484811000,1479484811000),(100616,0,2081,'模板方法模式',2,'[88,570,571,572,41]','定义一个操作中的算法的骨架, 而将一些步骤延迟到子类中. 模板方法使得子类可以在不改变一个算法的结构的前提下重定义该算法的某些特定步骤. \n \n处理某个流程的骨架代码已经具备, 但其中某节点的具体实现...',NULL,'csdn/java/1_0_1_5_1504264419.681913.html',NULL,0,0,0,1,0,NULL,1476630018000,1476630018000,1476630018000),(100617,0,2149,'Linux内核工程导论——内核为何使用C语言',4,'[100,21,35,250]','C与C++的对比无数人说过，都说C效率高，但很多人做过实验如果C++不适用RTTI，C++的效率也不会低太多（25%左右）。还有人说C++强大的STL，但是对效率讲究点的话那个真的不能用，具体我后面说...',NULL,'csdn/linux/1_0_3_4_1504264473.38145.html',NULL,0,0,0,1,0,NULL,1444676453000,1444676453000,1444676453000),(100618,0,2249,'程序（进程）内存分布 解析',4,'[215,192,207,21,35]','在多任务操作系统中的每一个进程都运行在一个属于它自己的内存沙盘中。这个沙盘就是虚拟地址空间（virtual address space），在32位模式下它总是一个4GB的内存地址块。这些虚拟地址通过页...',NULL,'csdn/linux/1_1_1_11_1504264541.977617.html',NULL,0,0,0,1,0,NULL,1371056450000,1371056450000,1371056450000),(100619,0,2024,'Spring 实践 -AOP',2,'[59,12,18,450]','Spring 实践标签： Java与设计模式AOP引介AOP(Aspect Oriented Programing)面向切面编程采用横向抽取机制,以取代传统的纵向继承体系的重复性代码(如性能监控/事务...',NULL,'csdn/java/1_0_2_1_1504264379.277687.html',NULL,0,0,0,1,0,NULL,1457337632000,1457337632000,1457337632000),(100620,0,2638,'与MVC框架解耦的OGNL：前世今生及其基本用法',2,'[573,574,575,576,577]','虽然我们通过MVC框架而结缘OGNL，但它并未与MVC框架耦合在一起，而是一个以独立的库文件出现的功能强大的表达式语言，是字符串与Java对象之间沟通的桥梁。它通过简单一致的语法，可以存取Java对象...',NULL,'csdn/java/1_0_1_12_1504265184.350144.html',NULL,0,0,0,1,0,NULL,1491202811000,1491202811000,1491202811000),(100621,0,2764,'Spring Boot学习记录(三)--整合Mybatis',2,'[137]','Spring Boot学习记录(三)–整合Mybatis标签（空格分隔）： spring-boot控制器,视图解析器前面两篇都已弄好,这一篇学习持久层框架整合.1.数据源配置数据源使用druid,ma...',NULL,'csdn/java/1_0_2_2_1504265374.932814.html',NULL,0,0,0,1,0,NULL,1471086018000,1471086018000,1471086018000),(100622,0,2395,'Linux USB Gadget--各环节的整合',4,'[21,191,578,317,511,75]','Linux USB Gadget软件结构一文中分析Linux USB Gadget软件分为三层。这三层其中两层是与硬件无关的，分别是Gadget功能驱动层，USB设备层。一层是与硬件相关的是UDC层。...',NULL,'csdn/linux/1_1_1_0_1504264706.604644.html',NULL,0,0,0,1,0,NULL,1340809255000,1340809255000,1340809255000),(100623,0,2512,'设计模式——观察者模式',2,'[18,12,349]','观察者模式是对象的行为模式，又叫发布-订阅(Publish/Subscribe)模式、模型-视图(Model/View)模式、源-监听器(Source/Listener)模式或从属者(Dependen...',NULL,'csdn/java/1_0_1_1_1504264865.233129.html',NULL,0,0,0,1,0,NULL,1401976828000,1401976828000,1401976828000),(100624,0,2511,'设计模式——代理模式',2,'[12,39]','代理模式的作用是控制和管理访问先看一段代码：package com.test;\n/**\n * 抽象角色\n * @author Administrator\n *\n */\nabstract public ...',NULL,'csdn/java/1_0_1_0_1504264864.298592.html',NULL,0,0,0,1,0,NULL,1404244851000,1404244851000,1404244851000),(100625,0,2021,'RedisCluser(v-3.2.0)与Tomcat7的Session整合',7,'[579,580,56]','一般情况下,一个web系统的架构是类似这样的:\n一个或多个nginx做负载均衡,后面连多个tomcat(或别的类型的web服务器)。\nnginx做负载的时候,关于request的分流,至少就有两种策略...',NULL,'csdn/redis/1_0_1_0_1504263693.227526.html',NULL,0,0,0,1,0,NULL,1482879639000,1482879639000,1482879639000),(100626,0,2133,'Struts1.3——文件上传和下载',2,'[128,304,503]','本文介绍了Struts实现文件上传和下载的方法',NULL,'csdn/java/1_0_1_0_1504264463.805058.html',NULL,0,0,0,1,0,NULL,1469725216000,1469725216000,1469725216000),(100627,0,2614,'Java 实现桥接(Bridge)模式',2,'[12,581]','/**\n * 手机壳、套\n * @author stone\n *\n */\npublic abstract class BaseCellphoneShell {\n	public abstract voi...',NULL,'csdn/java/1_0_1_9_1504265099.954924.html',NULL,0,0,0,1,0,NULL,1412809249000,1412809249000,1412809249000),(100628,0,2540,'Spring集成HttpClient实现跨域请求',2,'[59]','在配置spring集成httpclient之前我们先说一下Jsonp，这是一种基于页面script标签的src属性实现的跨域请求，相比于httpclient，jsonp有两点很大的缺点，首先，它只能发...',NULL,'csdn/java/1_1_1_10_1504264897.74515.html',NULL,0,0,0,1,0,NULL,1479985225000,1479985225000,1479985225000),(100629,0,2372,'对Linux0.11 中 进程0 和 进程1分析',4,'[119,21,191,162,57]','1. 背景进程的创建过程无疑是最重要的操作系统处理过程之一，很多书和教材上说的最多的还是一些原理的部分，忽略了很多细节。比如，子进程复制父进程所拥有的资源，或者子进程和父进程共享相同的物理页面，拥有自...',NULL,'csdn/linux/1_1_2_11_1504264674.559105.html',NULL,0,0,0,1,0,NULL,1371538843000,1371538843000,1371538843000),(100630,0,2377,'Linux内核工程导论——内存管理（二）',4,'[35,100]','页面回收算法（PFRA）\r\n请求调页机制，只要用户态进程继续执行，他们就能获得页框，然而，请求调页没有办法强制进程释放不再使用的页框。因此，迟早所有空闲内存将被分配给进程和高速缓存，Linux内核的页...',NULL,'csdn/linux/1_0_1_1_1504264682.933388.html',NULL,0,0,0,1,0,NULL,1440529249000,1440529249000,1440529249000),(100631,0,2204,'java快速开发平台',2,'[582,241,326,583,584]','一直没有习惯写技术博客，看着诸多大牛分享自己的一些项目经验。本人也突然有想写博客的冲动，旨在结交有识之士（朋友），彼此分享经验。同时也希望中国的软件行业有更大突破性的发展。当然如果希望进行项目合作也可...',NULL,'csdn/java/1_1_1_7_1504264513.99425.html',NULL,0,0,0,1,0,NULL,1394557215000,1394557215000,1394557215000),(100632,0,2397,'mini2440驱动分析之LED',4,'[210,585,586,191,587,75]','mini2440驱动分析之LED\r\n        看LDD3有一段时间了，里面的例程也大部分实践了一下。现在进入真正的驱动程序学习。从友善之臂mini2440提供的驱动程序开始，把一些基本的驱动程序...',NULL,'csdn/linux/1_1_1_11_1504264709.82406.html',NULL,0,0,0,1,0,NULL,1315497643000,1315497643000,1315497643000),(100633,0,2717,'SpringDataJPA学习记录(三)--复杂查询的封装',2,'[59,204]','SpringDataJPA学习记录(三)–复杂查询的封装标签（空格分隔）： springJPA1.使用CriteriaBuilder构建JPQL在UserRepositoryImpl中使用Criter...',NULL,'csdn/java/1_0_1_16_1504265321.541024.html',NULL,0,0,0,1,0,NULL,1479484813000,1479484813000,1479484813000),(100634,0,2363,'Linux中link，unlink，close，fclose详解',4,'[21,257,196,588,589]','unlink系统调用】   \n    \n功能描述： \n从文件系统中删除一个名称。如果名称是文件的最后一个连接，并且没有其它进程将文件打开，名称对应的文件会实际被删除。 \n \n用法：  \n#includ...',NULL,'csdn/linux/1_1_2_0_1504264665.068039.html',NULL,0,0,0,1,0,NULL,1372064444000,1372064444000,1372064444000),(100635,0,2304,'Linux的历史----Linux内核剖析（一）',4,'[35,21,211]','Unix操作系统Unix的由来汤普逊和里奇最早是在贝尔实验室开发Unix的，此后的10年，Unix在学术机构和大型企业中得到了广泛的应用，当时的UNIX拥有者AT&T公司以低廉甚至免费的许可将Unix...',NULL,'csdn/linux/1_0_1_11_1504264619.509449.html',NULL,0,0,0,1,0,NULL,1428570051000,1428570051000,1428570051000),(100636,0,2435,'静态代理和动态代理的再学习',2,'[18,12,299,59]','学过设计模式的编友们，一定对代理模式很熟悉，最近在学习中发现Spring中更好的使用了动态带来来降低耦合，提高代码复用性，那么为什么要使用动态代理？动态代理和我们之前使用的普通代理有什么区别和好处？\n...',NULL,'csdn/java/1_1_1_4_1504264737.929776.html',NULL,0,0,0,1,0,NULL,1452013230000,1452013230000,1452013230000),(100637,0,2296,'Linux内核工程导论——存储：USB',4,'[546,590,100,21,35]','kernel USB驱动层\r\n         首先USB（UniversalSerial Bus）是一种传输协议，并不是一种数据协议，也没有任何语义上的指令意义。USB传输协议所传输的SCSI命令才...',NULL,'csdn/linux/1_0_2_8_1504264611.504934.html',NULL,0,0,0,1,0,NULL,1444330844000,1444330844000,1444330844000),(100638,0,2083,'策略模式',2,'[178,12,591,592]','Java与设计模式: 定义一系列的算法, 将其一个个封装起来, 并使它们可相互替换, 使得算法可独立于使用它的客户而变化.  \n \n  策略模式对应于解决某一问题的一个算法族, 允许用户从该算法族中任...',NULL,'csdn/java/1_0_1_3_1504264420.809085.html',NULL,0,0,0,1,0,NULL,1481306447000,1481306447000,1481306447000),(100639,0,2721,'Java学习记录--ThreadLocal使用案例',2,'[18]','java学习记录–ThreadLocal使用案例标签（空格分隔）： java最近整理公司项目,发现不少写的比较糟糕的地方,比如下面这个:public class DateUtil {    priva...',NULL,'csdn/java/1_0_1_13_1504265325.577254.html',NULL,0,0,0,1,0,NULL,1479571226000,1479571226000,1479571226000),(100640,0,2217,'【总结】Effective java经验之谈，创建和销毁对象',2,'[18,593,416]','关于Effective java 这本书，自己的一些总结性的思考。篇幅可能不按照目录来，因为自己喜欢先看哪一章就直接阅读了。不过能确定的是，每一章都会有总结。欢迎大家拍砖与补充。',NULL,'csdn/java/1_1_1_5_1504264523.145457.html',NULL,0,0,0,1,0,NULL,1428498038000,1428498038000,1428498038000),(100641,0,2322,'【Linux探索之旅】第一部分第二课：下载Linux，免费的噢',4,'[21,119,107,62,594]','1. Linux的多面性\n2. 下载Ubuntu，烧写之',NULL,'csdn/linux/1_1_2_6_1504264632.114533.html',NULL,0,0,0,1,0,NULL,1434726059000,1434726059000,1434726059000),(100642,0,2162,'把握linux内核设计思想（九）：进程调度',4,'[159,266,595,434,596]','【版权声明：尊重原创，转载请保留出处：blog.csdn.net/shallnet，文章仅供学习交流，请勿用于商业用途】\n\n       \nlinux为多任务系统，正常情况下都存在成百上千个任务。由于...',NULL,'csdn/linux/1_2_1_5_1504264485.270394.html',NULL,0,0,0,1,0,NULL,1438376418000,1438376418000,1438376418000),(100643,0,2459,'一天一个设计模式---生成器模式',2,'[12]','玩过《我的世界》这类沙盒游戏的玩家，很多都是冲着其开放式的制作功能去的。比如，我们要建造一个房子就需要很多东西。使得同样的构建过程可以创建不同的表示场景：我们在创建对象时可能会碰到过一个问题，比如，如...',NULL,'csdn/java/1_0_1_10_1504264768.147976.html',NULL,0,0,0,1,0,NULL,1475006433000,1475006433000,1475006433000),(100644,0,2601,'灵活的语言---JavaScript',2,'[70,597,12,69]','结束了4年的大学学习生活，小白信心满满地来到应聘的M公司。今天是入职的第一天，项目经理分下来一个验证表单功能的任务，内容不多，仅需要验证用户名、邮箱、密码等。入职第一天小白接到需求看了看，感觉很简单，...',NULL,'csdn/java/1_0_1_4_1504265077.135193.html',NULL,0,0,0,1,0,NULL,1478883653000,1478883653000,1478883653000),(100645,0,2592,'设计模式(5)-创建型-原型(Prototype)模式(个人笔记)',2,'[274,12,317,598,45,422]','概述    用原型实例指定创建对象的种类，并且通过拷贝这些原型创建新的对象。\n 适用性    1.当一个系统应该独立于它的产品创建、构成和表示时。\n\n    2.当要实例化的类是在运行时刻指定时，例如...',NULL,'csdn/java/1_1_1_4_1504265052.761093.html',NULL,0,0,0,1,0,NULL,1335607244000,1335607244000,1335607244000),(100646,0,2587,'设计模式(2)-创建型-工厂方法(Factory method)(个人笔记)',2,'[12,45,599,527,317]','概述：定义一个用于创建对象的接口，让子类决定实例化哪一个类。FactoryMethod使一个类的实例化延迟到其子类。\n适用性： 1.当一个类不知道它所必须创建的对象的类的时候。\n\n 2.当一个类希望由...',NULL,'csdn/java/1_1_1_1_1504265044.67208.html',NULL,0,0,0,1,0,NULL,1335420006000,1335420006000,1335420006000),(100647,0,2619,'Java 实现建造者(Builder)模式',2,'[12,600]','建造者(Builder)模式是创建型模式，创建了一个对外隐藏创建过程的产品，使用组合的方式，由指挥者(Director)来决定建造的流程\n\npublic interface Builder {\n	vo...',NULL,'csdn/java/1_0_1_3_1504265105.106889.html',NULL,0,0,0,1,0,NULL,1412758858000,1412758858000,1412758858000),(100648,0,2060,'外观模式',2,'[12,245,601,602,603]','外观模式标签 ： Java与设计模式\n  外观模式: 又称门面模式: 外观Facade为子系统的一组接口提供一个一致界面,使得这组子系统易于使用(通过引入一个新的外观角色降低原系统复杂度,同时降低客户...',NULL,'csdn/java/1_0_1_9_1504264408.638618.html',NULL,0,0,0,1,0,NULL,1472878853000,1472878853000,1472878853000),(100649,0,2692,'Java设计模式菜鸟系列(十四)代理模式建模与实现',2,'[53,12,343,39,408]','代理模式(Composite)：代理模式其实就是多一个代理类出来，替原对象进行一些操作。比如咱有的时候打官司需要请律师，因为律师在法律方面有专长，可以替咱进行操作表达咱的想法，这就是代理的意思。代理模...',NULL,'csdn/java/1_0_1_10_1504265290.97938.html',NULL,0,0,0,1,0,NULL,1412704841000,1412704841000,1412704841000),(100650,0,2237,'Java-单机版的书店管理系统(练习设计模块和思想_系列 三 )',2,'[116,18]','介绍今天对系列二的一个添加用户的输入小bug进行了解决， \n增加了用户模块的，删除用户，和修改用户模块。下面的代码是相对于系列二来说进行了修改或者是增加的类.先看AddPanel类的修改： \n在收集参...',NULL,'csdn/java/1_0_1_15_1504264533.700442.html',NULL,0,0,0,1,0,NULL,1460138453000,1460138453000,1460138453000),(100651,0,2314,'3.4  命令模式(5.2)',2,'[490,555,18]','命令模式(5.2)',NULL,'csdn/java/1_1_1_18_1504264626.986078.html',NULL,0,0,0,1,0,NULL,1409342424000,1409342424000,1409342424000),(100652,0,2594,'设计模式(001) 开启设计之旅',2,'[12,290,604,18,605]','“身体和灵魂，总有一个在路上”，有的人旅行，有的人看书，还有些人在旅行中写出启迪人心的好书来，身体在路上赋予了灵魂的力量。我的设计模式之旅，与你、与我，能带来什么呢？抛开遥远深邃的美丽传说，是为了感谢...',NULL,'csdn/java/1_0_1_1_1504265065.899645.html',NULL,0,0,0,1,0,NULL,1423645232000,1423645232000,1423645232000),(100653,0,2163,'把握linux内核设计思想（五）：下半部机制之工作队列及几种机制的选择',4,'[159,381,606,607]','【版权声明：尊重原创，转载请保留出处：blog.csdn.net/shallnet，文章仅供学习交流，请勿用于商业用途】\n        工作队列是下半部的另外一种将工作推后执行形式。和软中断、tas...',NULL,'csdn/linux/1_2_1_9_1504264485.889583.html',NULL,0,0,0,1,0,NULL,1438124400000,1438124400000,1438124400000),(100654,0,2067,'适配器模式',2,'[18,77,12,608]','适配器模式标签： Java与设计模式结构型模式\n  在解决了对象的创建问题之后，对象的组成以及对象之间的依赖关系就成了开发人员关注的焦点，因为如何设计对象的结构、继承和依赖关系会影响到后续程序的维护性...',NULL,'csdn/java/1_0_1_15_1504264411.680154.html',NULL,0,0,0,1,0,NULL,1451073607000,1451073607000,1451073607000),(100655,0,2696,'Java设计模式菜鸟系列(十一)迭代器模式建模与实现',2,'[12,408,53,343,409]','转载请注明出处：http://blog.csdn.net/lhy_ycu/article/details/39807741\n\n迭代器模式(Iterator)：提供了一种方法顺序访问一个聚合对象中的各个...',NULL,'csdn/java/1_0_1_13_1504265295.45347.html',NULL,0,0,0,1,0,NULL,1412600428000,1412600428000,1412600428000),(100656,0,2079,'享元模式',2,'[609,215,12,610,611]','享元模式标签 ： Java与设计模式\n  内存属于稀缺资源, 不能随便浪费. 如果有很多相同/相似的对象, 我们可以通过享元节省内存.\n内部状态 vs. 外部状态\n  享元模式(Flyweight):...',NULL,'csdn/java/1_0_1_7_1504264418.595442.html',NULL,0,0,0,1,0,NULL,1474351247000,1474351247000,1474351247000),(100657,0,2737,'SpringMVC学习记录(五)--表单标签',2,'[27,190]','在使用SpringMVC的时候我们可以使用Spring封装的一系列表单标签，这些标签都可以访问到ModelMap中的内容。下面将对这些标签一一介绍。1.引入标签头文件在正式介绍SpringMVC的表单...',NULL,'csdn/java/1_0_3_10_1504265346.536141.html',NULL,0,0,0,1,0,NULL,1459897232000,1459897232000,1459897232000),(100658,0,2733,'Mybatis学习记录(四)--高级查询和缓存',2,'[118,153]','这些都是连贯的学习笔记,所以有的地方因为之前都说过,所以也就没怎么写详细了,看不太明白的可以看看之前的笔记.一.高级查询高级查询主要是一对一查询,一对多查询,多对多查询1.一对一查询有用户和订单两个表...',NULL,'csdn/java/1_0_3_3_1504265343.018769.html',NULL,0,0,0,1,0,NULL,1460984431000,1460984431000,1460984431000),(100659,0,2646,'Spring 核心技术概览(一)',2,'[612,613,614,615,616]','Spring是一个分层的Java SE/EE应用一站式的轻量级开源框架，其从持久层、业务层到表现层都拥有相应的支持，几乎为企业应用提供了所需的一切。本文首先概述了Spring容器的IoC控制反转和DI...',NULL,'csdn/java/1_0_1_5_1504265192.862015.html',NULL,0,0,0,1,0,NULL,1497297614000,1497297614000,1497297614000),(100660,0,2465,'一天一个设计模式---策略模式',2,'[12]','一套好的VR设备是十分昂贵的，在初期设备的价格高于官方报价。过了一段时间，卖家会降价，再过段时间，VR的势头过去，堆积的商品会进行促销。这里就可以使用策略模式来解决价格变动的问题。',NULL,'csdn/java/1_0_1_12_1504264773.966487.html',NULL,0,0,0,1,0,NULL,1474473650000,1474473650000,1474473650000),(100661,0,2742,'Mybatis学习记录(一)--Mybatis入门',2,'[118,143]','一.传统数据库解决方案对于数据库的连接,在java中简单的就是直接使用JDBC来控制数据库.传统的jdbc方式按照以下几步来操作数据库.1.加载驱动 2. 创建并获取连接 3. 创建jdbc stat...',NULL,'csdn/java/1_0_3_6_1504265351.607775.html',NULL,0,0,0,1,0,NULL,1460584836000,1460584836000,1460584836000),(100662,0,2513,'设计模式——建造者模式',2,'[18,12,176]','什么是建造者模式\nBuilder模式也叫建造者模式或者生成器模式，是由GoF提出的23种设计模式中的一种。Builder模式是一种对象创建型模式之一，用来隐藏复合对象的创建过程，它把复合对象的创建过程...',NULL,'csdn/java/1_0_1_3_1504264866.385597.html',NULL,0,0,0,1,0,NULL,1376600414000,1376600414000,1376600414000),(100663,0,2306,'Linux系统调用详解（实现机制分析）--linux内核剖析（六）',4,'[70,365,21,100,209]','本文介绍了系统调用的一些实现细节。首先分析了系统调用的意义，它们与库函数和应用程序接口(API)有怎样的关系。然后，我们考察了Linux内核如何实现系统调用，以及执行系统调用的连锁反应：陷入内核，传递...',NULL,'csdn/linux/1_0_1_6_1504264622.743798.html',NULL,0,0,0,1,0,NULL,1456952458000,1456952458000,1456952458000),(100664,0,2739,'SpringMVC学习记录(六)--Validator验证',2,'[27,617]','SpringMVC服务器验证一种是有两种方式,一种是基于Validator接口,一种是使用Annotaion JSR-303标准的验证,下面主要是学习这两种,工作中推荐后者,方便很多一.基于Valid...',NULL,'csdn/java/1_0_3_9_1504265348.548521.html',NULL,0,0,0,1,0,NULL,1459980023000,1459980023000,1459980023000),(100665,0,2649,'JSP中文乱码问题终极解决方案(上)',2,'[618,619,620,510,621]','本文首先介绍了一个JSP的源文件执行过程，即需要经过三个阶段，两次编码，才能完成一次完整的输出。特别需要注意的是，在这个过程中，编码问题贯穿始终。在JSP/Servlet中，主要有以下四种方式可以设置...',NULL,'csdn/java/1_0_2_1_1504265196.738196.html',NULL,0,0,0,1,0,NULL,1488196803000,1488196803000,1488196803000),(100666,0,2324,'【Linux探索之旅】开宗明义+第一部分第一课：什么是Linux？',4,'[21,119,107,62,594]','1、什么是操作系统？\n2、天地霸气，爷们落地：Linux诞生\n3、不同的Linux发行版',NULL,'csdn/linux/1_1_2_7_1504264634.2024.html',NULL,0,0,0,1,0,NULL,1434585657000,1434585657000,1434585657000),(100667,0,2636,'Java Web 基础 --- Filter 综述',2,'[622,623,345,624,625]','伴随J2EE一起发布的Servlet规范中还包括一个重要的组件——过滤器，其主要用于对用户请求进的预处理以及对服务器响应的后处理，是个典型的处理链，并且Servlet规范使用了三个接口Filter，F...',NULL,'csdn/java/1_0_1_13_1504265182.327436.html',NULL,0,0,0,1,0,NULL,1490950809000,1490950809000,1490950809000),(100668,0,2062,'装饰者模式',2,'[12,164,68,71,18]','装饰者模式(Decorator): 又称包装器(Wrapper), 可以动态地为一个对象添加一些额外的职责. 就增加功能来说, 装饰者模式是一种用于替代继承的技术, 他无须通过增加子类继承就能扩展对象...',NULL,'csdn/java/1_0_1_12_1504264409.581979.html',NULL,0,0,0,1,0,NULL,1472367617000,1472367617000,1472367617000),(100669,0,2643,'计算机网络体系结构综述（下）',2,'[626,627,628,629,630]','我们知道TCP/IP与OSI最大的不同在于OSI是一个理论上的网络通信模型，而TCP/IP则是实际上的网络通信标准。在上篇[《高频笔试面试干货：计算机网络体系结构综述（上）》][1]的基础上，本文着重...',NULL,'csdn/java/1_0_1_8_1504265189.468613.html',NULL,0,0,0,1,0,NULL,1491584459000,1491584459000,1491584459000),(100670,0,2025,'Spring 实践 -IoC',2,'[59,631,12,117,18]','Spring 实践标签： Java与设计模式Spring简介\n  Spring是分层的JavaSE/EE Full-Stack轻量级开源框架.以IoC(Inverse of Control 控制反转)...',NULL,'csdn/java/1_0_2_2_1504264380.404581.html',NULL,0,0,0,1,0,NULL,1457506843000,1457506843000,1457506843000),(100671,0,2389,'spring入门实例详解',2,'[59,632,633]','spring框架在我们的开发中用到的很多,前面几篇博客也理解了一下spring的基本概念，现在准备写一个spring框架的入门实例，以一个登陆认证签到模块为例子；\n实例说明：\n登陆签到模块其实很简单，...',NULL,'csdn/java/1_2_1_17_1504264696.025961.html',NULL,0,0,0,1,0,NULL,1441555214000,1441555214000,1441555214000),(100672,0,2030,'VMware Tools （ubuntu系统）安装详细过程与使用',2,'[105,634,635,91]','前一段时间博主在VMware虚拟机上安装了Ubuntu系统，如果还没有安装的同学可以参考博主上一篇文章：VMware Ubuntu安装详细过程。猿友们都知道linux不太好用，如果你想将你主机Wind...',NULL,'csdn/java/1_1_1_6_1504264383.275762.html',NULL,0,0,0,1,0,NULL,1453154426000,1453154426000,1453154426000),(100673,0,2559,'设计模式-创建型总结实例',2,'[18,12,636]','创建型\n \n单例模式\nSingleton，单例模式：保证一个类只有一个实例，并提供一个访问它的全局访问点 \njava中单例模式是一种常见的设计模式，单例模式分三种：懒汉式单例、饿汉式单例、登记式单例三...',NULL,'csdn/java/1_0_1_7_1504264953.104042.html',NULL,0,0,0,1,0,NULL,1388768446000,1388768446000,1388768446000),(100674,0,2550,'javascript设计模式--抽象工厂模式',2,'[361,69,12]','抽象工厂模式（abstract Fctory）:通过对类的工厂抽象使其业务用于对产品类鏃的创建，而不负责创建某一类产品的实例．    //汽车抽象类，当使用其实例对象的方法时会抛出错误\n    var...',NULL,'csdn/java/1_1_1_3_1504264927.538513.html',NULL,0,0,0,1,0,NULL,1461315646000,1461315646000,1461315646000),(100675,0,2326,'5.3解释器模式(5.3)',2,'[18,12,516]','解释器模式(Interpreter Pattern)',NULL,'csdn/java/1_1_1_10_1504264635.001592.html',NULL,0,0,0,1,0,NULL,1410822053000,1410822053000,1410822053000),(100676,0,2075,'状态模式',2,'[12,131,637,638,639]','允许一个对象在其内部状态改变时改变其行为, 其对象看起来像是改变了其类. \n 解决系统中复杂对象的状态流转以及不同状态下的行为封装问题.\n(来源: 设计模式:可复用面向对象软件的基础)',NULL,'csdn/java/1_0_1_4_1504264416.857213.html',NULL,0,0,0,1,0,NULL,1480100408000,1480100408000,1480100408000),(100677,0,2506,'Java设计模式11——享元模式',2,'[53,443]','一、适用场景　　内存属于稀缺资源，不能随意浪费。如果在一个系统中有很多个完全相同或相似的对象，我们就可以使用享元模式，让他们共享一份内存即可，不必每个都去实例化对象，从而节省内存空间。二、模式核心\n享...',NULL,'csdn/java/1_1_1_10_1504264858.090727.html',NULL,0,0,0,1,0,NULL,1478440858000,1478440858000,1478440858000),(100678,0,2171,'把握linux内核设计思想（十二）：内存管理之slab分配器',4,'[159,120,640]','【版权声明：尊重原创，转载请保留出处：blog.csdn.net/shallnet，文章仅供学习交流，请勿用于商业用途】\n\n       \n上一节最后说到对于小内存区的请求，如果采用伙伴系统来进行分配...',NULL,'csdn/linux/1_2_1_2_1504264494.061319.html',NULL,0,0,0,1,0,NULL,1439650809000,1439650809000,1439650809000),(100679,0,2654,'Java设计模式菜鸟系列(一)策略模式建模与实现',2,'[18,12,343,409]','今天开始咱们来谈谈Java设计模式。这里会结合uml图形来讲解，有对uml建模不熟的可以参考我的另一篇博文uml建模。\n首先，个人觉得模式的设计就是一个将变化的东西和不变(稳定)的东西分离的过程。咱们...',NULL,'csdn/java/1_0_2_3_1504265202.783822.html',NULL,0,0,0,1,0,NULL,1412200847000,1412200847000,1412200847000),(100680,0,2056,'原型模式',2,'[12,18,467,63,641]','原型模式标签： Java与设计模式\n  原型模式 \n  用原型实例指定创建对象的种类, 并通过拷贝这些原型创建新的对象.\n原型模式就是通过一个对象再创建另一个可定制的对象, 而且不需要知道任何创建的细...',NULL,'csdn/java/1_0_1_17_1504264405.610795.html',NULL,0,0,0,1,0,NULL,1450630838000,1450630838000,1450630838000),(100681,0,2221,'Linux进程状态',4,'[21,211,259,57,642]','进程状态\r\n\r\n在linux下，通过ps命令我们能够查看到系统中存在的进程，以及它们的状态：\r\n\r\nR (TASK_RUNNING)，可执行状态。\r\n\r\n只有在该状态的进程才可能在CPU上运行。而同一...',NULL,'csdn/linux/1_0_3_10_1504264525.558145.html',NULL,0,0,0,1,0,NULL,1363773604000,1363773604000,1363773604000),(100682,0,2683,'Java设计模式菜鸟系列(十二)组合模式建模与实现',2,'[12,53,409,408,343]','转载请注明出处：http://blog.csdn.net/lhy_ycu/article/details/39828653\n\n组合模式(Composite)：组合模式有时又叫部分-整体模式，将对象组合...',NULL,'csdn/java/1_0_1_12_1504265281.772597.html',NULL,0,0,0,1,0,NULL,1412607611000,1412607611000,1412607611000),(100683,0,2359,'菜鸟版JAVA设计模式—从买房子看代理模式',2,'[18,53,39]','相对于适配器模式，或者说装饰器模式，代理模式理解起来更加简单。\n代理这个词应该比较好理解，代替去做就是代理。\n比如，我们买卖房子，那么我们会找中介，我要卖房子，但是我们没有时间去卖，我主动交给中介，中...',NULL,'csdn/java/1_0_1_3_1504264661.272887.html',NULL,0,0,0,1,0,NULL,1411912834000,1411912834000,1411912834000),(100684,0,2023,'Spring 实践 -拾遗',2,'[59,12,18,643]','Spring 实践标签： Java与设计模式Junit集成前面多次用到@RunWith与@ContextConfiguration,在测试类添加这两个注解,程序就会自动加载Spring配置并初始化Sp...',NULL,'csdn/java/1_0_2_0_1504264378.229469.html',NULL,0,0,0,1,0,NULL,1457769652000,1457769652000,1457769652000),(100685,0,2245,'Linux 虚拟内存和物理内存的理解',4,'[215,21,35,246,644]','首先，让我们看下虚拟内存：第一层理解1.         每个进程都有自己独立的4G内存空间，各个进程的内存空间具有类似的结构2.       一个新进程建立的时候，将会建立起自己的内存空间，此进程的...',NULL,'csdn/linux/1_1_1_12_1504264540.003742.html',NULL,0,0,0,1,0,NULL,1371024048000,1371024048000,1371024048000),(100686,0,2509,'Java设计模式学习09——装饰模式',2,'[53,493]','一、定义装饰(Decorate)模式又称为包装(Wrapper)模式。装饰模式是以对客户端透明的方式扩展对象的功能，是继承关系的一个替代方案。二、职责\n动态的为一个对象增加新的功能。\n装饰模式是一种用...',NULL,'csdn/java/1_1_1_8_1504264861.092748.html',NULL,0,0,0,1,0,NULL,1478199611000,1478199611000,1478199611000),(100687,0,2044,'mybaits入门（含实例教程和源码）',2,'[118,645,646,165,647]','前言：mybatis是一个非常优秀的存储过程和高级映射的优秀持久层框架。大大简化了，数据库操作中的常用操作。下面将介绍mybatis的一些概念和在eclipse上的实际项目搭建使用。一、mybatis...',NULL,'csdn/java/1_1_1_13_1504264391.362608.html',NULL,0,0,0,1,0,NULL,1450886447000,1450886447000,1450886447000),(100688,0,2048,'到底什么是集群&分布式',2,'[648,649]','对于楼主这样工作一年的菜鸟，是不是会看到一些文章标题带有“分布式”“集群”关键字，然后就觉得自己应该看不懂（如下图）。最近对这些概念进行了一定的了解，整理了一下思路，在这里分享给各位猿友。不足之处还望...',NULL,'csdn/java/1_1_1_1_1504264395.253414.html',NULL,0,0,0,1,0,NULL,1462298449000,1462298449000,1462298449000),(100689,0,2034,'Spring中@Transactional事务回滚（含实例详细讲解，附源码）',2,'[59,650,63,36,212]','一、使用场景举例在了解@Transactional怎么用之前我们必须要先知道@Transactional有什么用。下面举个栗子：比如一个部门里面有很多成员，这两者分别保存在部门表和成员表里面，在删除某...',NULL,'csdn/java/1_1_1_15_1504264385.270197.html',NULL,0,0,0,1,0,NULL,1451340017000,1451340017000,1451340017000),(100690,0,2049,'Java Web前端到后台常用框架介绍',2,'[102,18,74]','一、SpringMVChttp://blog.csdn.net/evankaka/article/details/45501811Spring Web MVC是一种基于Java的实现了Web MVC设...',NULL,'csdn/java/1_1_1_2_1504264396.341853.html',NULL,0,0,0,1,0,NULL,1458298844000,1458298844000,1458298844000),(100691,0,2335,'简明 抽象工厂模式（3.1）',2,'[18,12]','一个工厂能够创建多个配套的产品',NULL,'csdn/java/1_1_1_8_1504264641.496853.html',NULL,0,0,0,1,0,NULL,1410962446000,1410962446000,1410962446000),(100692,0,2723,'SpringMVC学习记录(九)--RequestContextHolder分析',2,'[27]','SpringMVC学习记录(九)–RequestContextHolder分析标签（空格分隔）： javaWEB最近遇到的问题是在service获取request和response,正常来说在serv...',NULL,'csdn/java/1_0_1_11_1504265327.428434.html',NULL,0,0,0,1,0,NULL,1480672818000,1480672818000,1480672818000),(100693,0,2593,'设计模式(20)-行为型-状态模式(State)',2,'[651]','概述    定义对象间的一种一对多的依赖关系,当一个对象的状态发生改变时,所有依赖于它的对象都得到通知并被自动更新。\n适用性    1.一个对象的行为取决于它的状态,并且它必须在运行时刻根据状态改变它...',NULL,'csdn/java/1_1_1_19_1504265056.733126.html',NULL,0,0,0,1,0,NULL,1353736816000,1353736816000,1353736816000),(100694,0,2403,'linux input 子系统分析 二',4,'[530,21,191,532,585,75]','linux input子系统分析--主要函数\r\n 一. 各种注册函数\r\n    因为分析一所讲的每种数据结构都代表一类对象，所以每种数据结构都会对应一个注册函数，他们都定义在子系统核心的input.c...',NULL,'csdn/linux/1_1_1_6_1504264715.208629.html',NULL,0,0,0,1,0,NULL,1315846857000,1315846857000,1315846857000),(100695,0,2317,'简明解释器模式-2',2,'[18,516]','用户输入代数表达式，如\"(a*a+b)*(c-d)\"，程序按照优先级和括号的使用情况计算正确的结果。',NULL,'csdn/java/1_1_1_9_1504264629.834187.html',NULL,0,0,0,1,0,NULL,1410883221000,1410883221000,1410883221000),(100696,0,2071,'备忘录模式',2,'[12,290,652,653,654]','备忘录模式标签 ： Java与设计模式\n  备忘录模式: 在不破坏封装性的前提下, 捕获一个对象的内部状态( or 拷贝), 并在该对象之外保存这个状态, 这样以后就可 将该对象恢复到原先保存的状态....',NULL,'csdn/java/1_0_1_1_1504264414.643844.html',NULL,0,0,0,1,0,NULL,1487340034000,1487340034000,1487340034000),(100697,0,2333,'简明 状态模式（5.8）',2,'[18,12]','屁股决定脑袋，状态决定行为',NULL,'csdn/java/1_1_1_7_1504264640.618878.html',NULL,0,0,0,1,0,NULL,1410976800000,1410976800000,1410976800000),(100698,0,2112,'Linux内核源码分析--内存管理（一、分页机制）',4,'[159,119,120,391]','最开始的地方是在head汇编中，如果看boot中那三个汇编的应该记得（那三个汇编还是比较重要的）。首先是分页机制，在CR0的第31位(PG位)置1表示开启分页机制，顺便也介绍下其他几个控制寄存器：CR...',NULL,'csdn/linux/1_0_1_7_1504264449.53965.html',NULL,0,0,0,1,0,NULL,1421942430000,1421942430000,1421942430000),(100699,0,2338,'Linux2.6内核中链表的实现',4,'[75,270,191,21,100]','对于一个计算机专业的学生，链表这种数据结构对我们来说再熟悉不过了，毕竟在大学的《数据结构》中就讲解过，相信你也自己实现过，它实现起来可能是这个样子：（这里的例子都来自《Linux内核设计与实现》第三版...',NULL,'csdn/linux/1_0_1_18_1504264642.771811.html',NULL,0,0,0,1,0,NULL,1376989249000,1376989249000,1376989249000),(100700,0,2655,'Java设计模式菜鸟系列(二)观察者模式建模与实现',2,'[18,655,12,409]','观察者(Observer)模式定义：在对象之间定义了一对多的依赖关系，这样一来，当一个对象改变状态时，依赖它的对象都会收到通知并自动跟新。Java已经提供了对观察者Observer模式的默认实现， J...',NULL,'csdn/java/1_0_2_2_1504265203.749957.html',NULL,0,0,0,1,0,NULL,1412359203000,1412359203000,1412359203000),(100701,0,2070,'中介者模式',2,'[656,566,12,657,658]','中介者模式标签 ： Java与设计模式面向对象设计鼓励将行为分布到各个对象中, 这种分布可能会导致对象间有许多连接. 在最坏的情况下, 每一个对象都需要知道其他所有对象. \n虽然将一个系统分割成许多对...',NULL,'csdn/java/1_0_1_11_1504264413.581088.html',NULL,0,0,0,1,0,NULL,1472457607000,1472457607000,1472457607000),(100702,0,2635,'再述 OGNL：在Struts2中的应用',2,'[659,660,661,577,662]','MVC框架的分层结构提高了程序的可维护性、可移植性、可扩展性与可重用性，降低了程序的开发难度，但是也引来了一些新的问题，比如不同层次间的数据流转问题。OGNL的出现填平了这条沟壑，成为字符串与Java...',NULL,'csdn/java/1_0_1_11_1504265181.331975.html',NULL,0,0,0,1,0,NULL,1491231619000,1491231619000,1491231619000),(100703,0,2054,'观察者模式',2,'[663,664,665,666,667]','观察者模式标签 ： Java与设计模式\n  观察者模式: 又称‘发布-订阅’模式, 定义一种对象间的一对多依赖关系(多个观察者Observer监听某一主题Subject). 当主题状态发生改变时,所有...',NULL,'csdn/java/1_0_1_8_1504264403.443837.html',NULL,0,0,0,1,0,NULL,1473408048000,1473408048000,1473408048000),(100704,0,2748,'Spring Boot学习记录(一)--环境搭建',2,'[137]','Spring Boot学习记录(一)–环境搭建标签（空格分隔）： spring-boot最近趁着下班闲时间学习spring-boot,记录下学习历程,最后打算实战一个API管理平台,下面开始环境配置....',NULL,'csdn/java/1_0_2_4_1504265358.69176.html',NULL,0,0,0,1,0,NULL,1470816028000,1470816028000,1470816028000),(100705,0,2239,'Java-单机版的书店管理系统(练习设计模块和思想_系列汇总)',2,'[18,116,114,390,209]','介绍：本软件系列到此，我已经全部写完了。项目练习目标 ：1、Java应用程序基本分析  \n2、培养面向对象编程的基本思想  \n3、Java基本设计模式综合应用  \n4、掌握分层和接口的基本设计  \n5...',NULL,'csdn/java/1_0_1_8_1504264536.851537.html',NULL,0,0,0,1,0,NULL,1461168026000,1461168026000,1461168026000),(100706,0,2632,'JSP中文乱码问题终极解决方案(下)',2,'[668,669,670,671,672]','本文首先从四个方面给出了在使用JSP过程中可能出现中文乱码的情形，具体包括JSP页面中文乱码、JSP源文件中文乱码、GET 请求的请求参数为中文乱码 和 POST 请求的请求参数为中文乱码四种情形，并...',NULL,'csdn/java/1_0_1_18_1504265178.349719.html',NULL,0,0,0,1,0,NULL,1487541642000,1487541642000,1487541642000),(100707,0,2586,'设计模式(1)-创建型-单件(Singleton)模式 (个人笔记)',2,'[12,45,52,317,489,210]','提起设计模式，确实有不少著作讨论它，>一书理论化很强，我这里干脆整理出一些用代码来体现的实例来说明。第一个就是Singleton模式，意指始终保证只创建或得到一个唯一的实例。其代码如下：提起设计模式，...',NULL,'csdn/java/1_1_1_0_1504265043.615652.html',NULL,0,0,0,1,0,NULL,1335420004000,1335420004000,1335420004000),(100708,0,2680,'Java设计模式博客全目录',2,'[53,343,408,409,12]','今天来对这23种设计模式做个总结。咱使用设计模式的目的是为了可重用代码、让代码更容易被他人理解、保证代码可靠性，当然设计模式并不是万能的，项目中的实际问题还有具体分析。咱不能为了使用设计模式而使用，而...',NULL,'csdn/java/1_0_1_0_1504265278.74955.html',NULL,0,0,0,1,0,NULL,1413162004000,1413162004000,1413162004000),(100709,0,2220,'Linux中的中断处理',4,'[21,211,393,673,674]','与Linux设备驱动中中断处理相关的首先是申请与释放IRQ的API request_irq()和free_irq()，\r\nrequest_irq()的原型为：\r\nint request_irq(uns...',NULL,'csdn/linux/1_0_3_6_1504264524.363123.html',NULL,0,0,0,1,0,NULL,1363960819000,1363960819000,1363960819000),(100710,0,2774,'mysql悲观锁总结和实践',3,'[7,143,34,33,675]','最近学习了一下数据库的悲观锁和乐观锁，根据自己的理解和网上参考资料总结如下： 悲观锁介绍（百科）：悲观锁，正如其名，它指的是对数据被外界（包括本系统当前的其他事务，以及来自外部系统的事务处理）修改持保...',NULL,'csdn/mysql/17_2_1_3_1504742556.145474.html',NULL,0,0,0,1,0,NULL,1504630805000,1504630805000,1504630805000),(100711,0,2776,'mysql乐观锁总结和实践',3,'[7,143,33,34,650]','上一篇文章《MySQL悲观锁总结和实践》谈到了MySQL悲观锁，但是悲观锁并不是适用于任何场景，它也有它存在的一些不足，因为悲观锁大多数情况下依靠数据库的锁机制实现，以保证操作最大程度的独占性。如果加...',NULL,'csdn/mysql/17_2_1_2_1504742558.153256.html',NULL,0,0,0,1,0,NULL,1504630806000,1504630806000,1504630806000),(100712,0,2772,'设计模式-装饰模式',1,'[12,68,61,493]','介绍装饰器模式（Decorator Pattern）允许向一个现有的对象添加新的功能，同时又不改变其结构。 \n继承机制同样可以给现有类增加功能，通过继承一个现有类可以使得子类在拥有自身方法的同时还拥有...',NULL,'csdn/mode/37_7_1_0_1504742538.707862.html',NULL,0,0,0,1,0,NULL,1504623628000,1504623628000,1504623628000),(100713,0,2775,'SQL语句优化技巧',3,'[146,147,676,677,678]','1、应尽量避免在 where 子句中使用!=或2、对查询进行优化，应尽量避免全表扫描，首先应考虑在 where 及 order by 涉及的列上建立索引。3、应尽量避免在 where 子句中对字段进行...',NULL,'csdn/mysql/17_2_1_1_1504742557.120616.html',NULL,0,0,0,1,0,NULL,1504648805000,1504648805000,1504648805000),(100714,0,2773,'Union和Union All的区别',3,'[7,143,679,680,681]','假设我们有一个表Student，包括以下字段与数据： [c-sharp] view plain copy drop table student;    create table student  ( ...',NULL,'csdn/mysql/17_2_1_0_1504742555.28375.html',NULL,0,0,0,1,0,NULL,1504713625000,1504713625000,1504713625000),(100715,0,2122,'Struts1.3——Struts入门',2,'[128,306,682]','本文介绍了struts的入门知识，通过手工配置实现一个struts项目介绍了struts的工作原理和流程',NULL,'csdn/java/1_0_1_5_1504264456.703628.html',NULL,0,0,0,1,0,NULL,1466535648000,1466535648000,1466535648000),(100716,0,2036,'Maven+Mybatis+Spring+SpringMVC实现分页查询（附源码）',2,'[59,7,27,118,79]','下面小宝鸽将分享一篇Mybatis分页功能的博文,下面将给出详细的步骤，跟着博主的节奏肯定能实现。另外最后还会附上整个工程的源码。如果是没有使用过maven的猿友可自行下载相关的jar包即可。一、项目...',NULL,'csdn/java/1_1_1_16_1504264386.259112.html',NULL,0,0,0,1,0,NULL,1451163618000,1451163618000,1451163618000),(100717,0,2651,'Java Web基础 --- Servlet 综述(理论篇)',2,'[683,684,685,686,306]','Web 技术成为当今主流的互联网Web应用技术之一，而Servlet是Java Web技术的核心基础。本文首先从请求/响应架构应用的大背景谈起Servlet的由来，明确Servlet的产生动机，揭示了...',NULL,'csdn/java/1_0_2_3_1504265198.755073.html',NULL,0,0,0,1,0,NULL,1489082409000,1489082409000,1489082409000),(100718,0,2765,'SSM实战记录(二)--在线OJ系统',2,'[74]','简介: \n学习SSM框架后,做出来的一个比较系统的项目,前端,数据库,后台全部自己完成,借鉴了很多前辈的经验,完成后颇有成就感,当然也学到了很多东西,至于能不能上线给学校用,还要看领导了…项目主要是类...',NULL,'csdn/java/1_0_2_5_1504265375.974983.html',NULL,0,0,0,1,0,NULL,1470578426000,1470578426000,1470578426000),(100719,0,2640,'Spring 事务管理机制概述',2,'[687,688,689,690,691]','用户的每次请求都对应一个业务逻辑方法，而一个业务逻辑方法往往包括一系列数据库原子访问操作，并且这些操作应绑定成一个事务来执行。使用传统事务编程策略时，程序代码必然和具体的事务操作代码耦合，而Sprin...',NULL,'csdn/java/1_0_1_3_1504265186.429273.html',NULL,0,0,0,1,0,NULL,1498467655000,1498467655000,1498467655000),(100720,0,2396,'linux RTC 驱动模型分析',4,'[21,191,159,45,460,692]','linux RTC 驱动模型分析\r\n        RTC(real time clock)实时时钟，主要作用是给Linux系统提供时间。RTC因为是电池供电的，所以掉电后时间不丢失。Linux内核把...',NULL,'csdn/linux/1_1_1_3_1504264708.794233.html',NULL,0,0,0,1,0,NULL,1317114028000,1317114028000,1317114028000),(100721,0,2045,'Zookeeper注册中心的搭建',2,'[693,694,648,695]','Zookeeper是一个分布式的，开放源码的分布式应用程序协调服务，是Google的Chubby一个开源的实现，是Hadoop和Hbase的重要组件。它是一个为分布式应用提供一致性服务的软件，提供的功...',NULL,'csdn/java/1_1_1_11_1504264392.448564.html',NULL,0,0,0,1,0,NULL,1450976404000,1450976404000,1450976404000),(100722,0,2503,'Java设计模式16——策略模式',2,'[53,178]','一、定义　　策略(strategy)模式属于对象的行为模式。其用途是针对一组算法，将每个不同算法封装到具有共同接口的独立类中，从而使他们可以相互替换。即使 算法和对象分开来，使得算法可以独立于使用它的...',NULL,'csdn/java/1_1_1_15_1504264855.032455.html',NULL,0,0,0,1,0,NULL,1479110430000,1479110430000,1479110430000),(100723,0,2409,'mini2440驱动分析之LCD',4,'[191,210,696,75,357,489]','mini2440驱动分析之LCD\r\n        mini2440集成了lcd控制器的接口，板子上接的lcd硬件是统宝240*320，TFT型lcd。lcd驱动对应的文件为s3c2410fb.c。要...',NULL,'csdn/linux/1_1_1_4_1504264718.259735.html',NULL,0,0,0,1,0,NULL,1316703656000,1316703656000,1316703656000),(100724,0,2596,'javaEE防盗版-License开发',2,'[697,64]','介绍java license的基本使用',NULL,'csdn/java/1_0_1_3_1504265070.943946.html',NULL,0,0,0,1,0,NULL,1487023222000,1487023222000,1487023222000),(100725,0,2214,'【总结】Effective java经验之谈，枚举，注解，方法，通用设计，异常',2,'[698,699,62,212,116]','这几章看的比较快，内容就如同标题一样比较容易理解，所以只有部分内容会在[]中解释，其他的就直接理解标题，并不影响阅读质量。不过如果时间充足的话，还是仔细读一读原书的内容，相信还是有所收获的。主要最近自...',NULL,'csdn/java/1_1_1_1_1504264520.021046.html',NULL,0,0,0,1,0,NULL,1429560027000,1429560027000,1429560027000),(100726,0,2346,'Linux2.6内核--中断下半部实现方法 工作队列',4,'[35,21,100,606,393]','工作队列子系统是一个用于创建内核线程的接口，通过它创建的进程负责执行由内核其他部分排到队列里的任务。它创建的这些内核线程称作工作者线程。工作队列可以让你的驱动程序创建一个专门的工作者线程来处理需要退后...',NULL,'csdn/linux/1_0_1_14_1504264648.667129.html',NULL,0,0,0,1,0,NULL,1377086415000,1377086415000,1377086415000),(100727,0,2497,'Java设计模式18——状态模式',2,'[53,131]','一、定义状态(State)模式又称为状态对象模式(Pattern of Objects for State),状态模式是对象的行为模式。状态模式允许一个对象在其内部状态改变时改变其行为，用于解决系统中...',NULL,'csdn/java/1_1_1_17_1504264848.931682.html',NULL,0,0,0,1,0,NULL,1479322846000,1479322846000,1479322846000),(100728,0,2736,'SpringMVC学习记录(二)--controller和view的联系',2,'[27,102]','对于SpringMVC来说,controller由两个部分构成,分别是分发器和控制器,分发器DispatcherServlet决定着请求使用哪个控制器,并且决定着控制器返回哪个视图,整体结构如下. \n...',NULL,'csdn/java/1_0_3_13_1504265345.493061.html',NULL,0,0,0,1,0,NULL,1459782051000,1459782051000,1459782051000),(100729,0,2716,'JavaWEB后端支付银联,支付宝,微信对接',2,'[18,700]','JavaWEB后端支付银联,支付宝,微信对接标签（空格分隔）： java项目概述最近项目需要后端打通支付,所以对接部分做成了一个小模块. \n先说下项目要求: \n后端要对接银联无跳转Token支付,支付...',NULL,'csdn/java/1_0_1_17_1504265320.234071.html',NULL,0,0,0,1,0,NULL,1477954832000,1477954832000,1477954832000),(100730,0,2520,'设计模式——工厂方法模式',2,'[18,12,356]','工厂方法模式同样属于类的创建模式又被称为多态工厂模式。工厂方法模式的意义是定义一个创建产品对象的工厂接口，将实际创建工作推迟到子类当中。核心工厂类不再负责产品的创建，这样核心类成为一个抽象的工厂角色，...',NULL,'csdn/java/1_0_1_9_1504264873.440141.html',NULL,0,0,0,1,0,NULL,1376143251000,1376143251000,1376143251000),(100731,0,2128,'Struts1.3——使用MyEclipse集成工具开发Struts',2,'[128,239]','本文介绍了通过MyEclipse集成工具开发Struts的一般流程',NULL,'csdn/java/1_0_1_3_1504264459.786712.html',NULL,0,0,0,1,0,NULL,1466683209000,1466683209000,1466683209000),(100732,0,2630,'REST风格框架实战：从MVC到前后端分离(附完整Demo)',2,'[701,702,703,451,704]','本人在前辈《从MVC到前后端分离（REST-个人也认为是目前比较流行和比较好的方式）》一文的基础上，实现了一个基于Spring的符合REST风格的完整Demo，具有MVC分层结构并实现前后端分离，该项...',NULL,'csdn/java/1_0_1_2_1504265176.371813.html',NULL,0,0,0,1,0,NULL,1499245204000,1499245204000,1499245204000),(100733,0,2391,'SSM整合+Dubbo+zookeeper-3.4.6',2,'[695,7,304,18]','最近刚好有点时间，特意来整合一下项目，以后会陆续把前端框架和一些组件也给整合进去，今天就先来整合一下SSM+mysql+dubbo+zookeeper来做一个用户列表功能。关于理论性的知识，大家可以自...',NULL,'csdn/java/1_2_1_10_1504264699.23045.html',NULL,0,0,0,1,0,NULL,1474642807000,1474642807000,1474642807000),(100734,0,2047,'Spring+EhCache缓存实例（详细讲解+源码下载）',2,'[59,705,18]','一、ehcahe的介绍EhCache 是一个纯Java的进程内缓存框架，具有快速、精干等特点，是Hibernate中默认的CacheProvider。Ehcache是一种广泛使用的开源Java分布式缓...',NULL,'csdn/java/1_1_1_9_1504264394.387904.html',NULL,0,0,0,1,0,NULL,1452639656000,1452639656000,1452639656000),(100735,0,2734,'SpringMVC学习记录(四)--文件上传与下载',2,'[27,503,706]','学习一个框架少不了学习文件上传和下载,原理来说上传和下载都是基本二进制流的转换,所以搞清楚了这一点就很容易理解上传和下载了在使用springMVC进行系统实现时，springMVC默认的解析器里面是没...',NULL,'csdn/java/1_0_3_11_1504265343.564121.html',NULL,0,0,0,1,0,NULL,1459807217000,1459807217000,1459807217000),(100736,0,2058,'单例模式',2,'[18,12,707,708]','static, enum, 内部类与单例模式标签： Java与设计模式Java static与初始化块拾忆\n  static关键字的作用是把类的成员变成类相关,而不是实例相关.普通初始化块\n  当Ja...',NULL,'csdn/java/1_0_1_19_1504264407.594785.html',NULL,0,0,0,1,0,NULL,1449669626000,1449669626000,1449669626000),(100737,0,2287,'Linux内核工程导论——内核架构概览',4,'[100,21,35]','Linux内核通用技术\r\nlinux内核技巧与手段\r\nlinux内核上下层通信方式\r\n         定义一个接口体，包含各种函数指针，并且管理其列表。下层通过生成一个这样的结构体，将自己的操作函数...',NULL,'csdn/linux/1_0_2_9_1504264597.39283.html',NULL,0,0,0,1,0,NULL,1444330845000,1444330845000,1444330845000),(100738,0,2405,'linux input 子系统分析 三',4,'[530,21,191,357,532,585]','linux input子系统分析--子系统核心.事件处理层.事件传递过程\r\n\r\n一.  输入子系统核心分析。\r\n    1.输入子系统核心对应与/drivers/input/input.c文件,这个也...',NULL,'csdn/linux/1_1_1_5_1504264716.092698.html',NULL,0,0,0,1,0,NULL,1316023248000,1316023248000,1316023248000),(100739,0,2243,'Java-单机版的书店管理系统(练习设计模块和思想_系列 六 )',2,'[116,441,114,709,710]','本系列前面博客的链接：Java-单机版的书店管理系统(练习设计模块和思想_系列 五 ) \nhttp://blog.csdn.net/qq_26525215/article/details/511368...',NULL,'csdn/java/1_0_1_11_1504264538.972116.html',NULL,0,0,0,1,0,NULL,1460822448000,1460822448000,1460822448000),(100740,0,2337,'有限状态机(FSM)的Java 演示',2,'[18,12,639]','本文从简单的例子入手，逐步演变成非常复杂的程序。\n在简明 状态模式（5.8）中，状态之间的变换由外界控制，或者说，多种状态是分割的、无关的。状态模式最有趣的地方正是讨论其状态的变迁。',NULL,'csdn/java/1_1_1_6_1504264642.427853.html',NULL,0,0,0,1,0,NULL,1411045251000,1411045251000,1411045251000),(100741,0,2073,'责任链模式',2,'[12,711,712,713]','责任链模式\n将能够处理某一类请求的对象串成一条链, 请求沿链传递, 链上的对象逐个判断是否有能力处理该请求. 使多个对象都有机会处理请求, 从而避免请求发送者和接收者之间的耦合关系.  \n\n  优势:...',NULL,'csdn/java/1_0_1_2_1504264415.743141.html',NULL,0,0,0,1,0,NULL,1482526857000,1482526857000,1482526857000),(100742,0,2750,'SSM实战记录(一)--一个大体的分页流程',2,'[714,44,27]','这是一个使用springMVC+spring+mybatis+bootstrap table做的分页流程,网上之前搜到的类似的教程实在太少了,所以就想着写一个大体的过程(没写的很详细),能帮助到一些人...',NULL,'csdn/java/1_0_2_19_1504265360.730294.html',NULL,0,0,0,1,0,NULL,1461614429000,1461614429000,1461614429000),(100743,0,2641,'简述数据库事务并发机制',2,'[715,716,717,718,719]','事务是最小的逻辑执行单元，也是数据库并发控制的基本单位，其执行的结果必须使数据库从一种一致性状态变到另一种一致性状态。事务具有四个重要特征，即原子性、一致性、隔离性和持久性。本文首先叙述了数据库中事务...',NULL,'csdn/java/1_0_1_7_1504265187.462082.html',NULL,0,0,0,1,0,NULL,1492768817000,1492768817000,1492768817000),(100744,0,2771,'Redis源码分析（三十六）--- Redis中的11大优秀设计',7,'[720,36,98,102,116]','坚持了一个月左右的时间，从最开始的对Redis的代码做分类，从struct结构体分析开始，到最后分析main主程序结束，中间，各大模块的代码逐个击破，学习，总之，收获了非常多，好久没有这么久的耐心把一...',NULL,'csdn/redis/1_0_1_0_1504578435.591825.html',NULL,0,0,0,1,0,NULL,1415440816000,1415440816000,1415440816000),(100745,0,2631,'Java Web基础 --- Jsp 综述(上)',2,'[721,722,723,724,725]','Servlet/Jsp是J2EE规范的一部分，是Tomcat的主要实现部分。当用户发送请求时，Servlet利用输出流动态生成HTML，这导致其开发效率极为低下。JSP技术通过实现普通静态HTML和动...',NULL,'csdn/java/1_0_1_17_1504265177.400789.html',NULL,0,0,0,1,0,NULL,1487541614000,1487541614000,1487541614000),(100746,0,2233,'Java-单机版的书店管理系统(练习设计模块和思想_系列 一 )',2,'[18,390,12,114]','书店管理系统：项目练习目标 ： \n1、Java应用程序基本分析 \n2、培养面向对象编程的基本思想 \n3、Java基本设计模式综合应用 \n4、掌握分层和接口的基本设计 \n5、构建合理的Java应用程序包...',NULL,'csdn/java/1_0_1_17_1504264531.657311.html',NULL,0,0,0,1,0,NULL,1459947605000,1459947605000,1459947605000),(100747,0,2028,'Java项目框架搭建系列（Java学习路线）-博客提纲',2,'[18,102,305,441]','前言：已经毕业两年，真是时间飞逝。其实当你在一间公司工作一两年之后，公司用到的开发框架的基本使用你应该都会了。你会根据一个现有项目A复制一下搭建出另外一个类似框架的项目B，然后在项目B上进行业务逻辑开...',NULL,'csdn/java/1_1_1_0_1504264382.322517.html',NULL,0,0,0,1,0,NULL,1500645641000,1500645641000,1500645641000),(100748,0,2443,'数字溢出的那点事儿',2,'[726,18,727]','近期的工作中，使用报表的频度越来越高，虽然展示数据更加方便了，但是报表加载数据时的各种问题也就迎之而来，最典型的问题：数字溢出；\n      先来看一下运行的错误日志：   \n    ❦故事背景：\n ...',NULL,'csdn/java/1_1_1_3_1504264741.909615.html',NULL,0,0,0,1,0,NULL,1451296812000,1451296812000,1451296812000),(100749,0,2223,'Java-单机版的书店管理系统(练习设计模块和思想_系列 五 )',2,'[116,114,78,18,336]','经过前几次的发博客。。 \n我发现这样发代码太费劲了。。所以我把目前我完成的源代码上传到百度云里面去了。 \n百度云链接： \nhttp://pan.baidu.com/s/1o7X1Kk6 \n链接如果失效...',NULL,'csdn/java/1_0_1_12_1504264527.374729.html',NULL,0,0,0,1,0,NULL,1460487654000,1460487654000,1460487654000),(100750,0,2055,'建造者模式',2,'[12,728,18,729,730]','建造者模式: 又称生成器模式, 可以将一个产品的内部表象与产品的生成过程分割开来, 从而可以使一个建造过程生成具有不同的内部表象的产品(将一个复杂对象的构建与它的表示分离, 使得同样的构建过程可以创建...',NULL,'csdn/java/1_0_1_16_1504264404.533823.html',NULL,0,0,0,1,0,NULL,1450630843000,1450630843000,1450630843000),(100751,0,2138,'Linux内核工程导论——linux学习和职业曲线（初学者，中级，高级都可参考）',4,'[119,100,21]','Linux世界介绍\n\n\n\n给自己定级\n\n门外汉：不会安装操作系统、不会用虚拟机（安装和使用）、没有自己选择并安装的linux发行版，只是听人说linux很牛逼，但觉得linux打不了游戏开不了offi...',NULL,'csdn/linux/1_0_3_9_1504264466.40902.html',NULL,0,0,0,1,0,NULL,1456923649000,1456923649000,1456923649000),(100752,0,2032,'Maven入门（含实例教程）',2,'[438,79,608,466,731]','Maven这个个项目管理和构建自动化工具，越来越多的开发人员使用它来管理项目中的jar包。接下来小宝鸽，将从下面几个方向介绍maven：（1）Maven简单介绍 \n（2）Maven安装与配置 \n（3）...',NULL,'csdn/java/1_1_1_14_1504264384.185583.html',NULL,0,0,0,1,0,NULL,1450191641000,1450191641000,1450191641000),(100753,0,2293,'Android 使用Java8新特性之Lambda expression (附命令者模式简化)',2,'[287,732,733]','前言Lambda expression，java8的新特性。使用Lambda expression，可以替代只有一个函数的接口实现，告别匿名内部类，代码看起来更简洁易懂。 \njava8还有其它一些新特...',NULL,'csdn/java/1_0_2_6_1504264607.985195.html',NULL,0,0,0,1,0,NULL,1488988855000,1488988855000,1488988855000),(100754,0,2525,'Java中如何优雅正确的终止线程',2,'[18,32]','Java中终止线程的方式主要有三种：1、使用stop()方法，已被弃用。原因是：stop()是立即终止，会导致一些数据被到处理一部分就会被终止，而用户并不知道哪些数据被处理，哪些没有被处理，产生了不完...',NULL,'csdn/java/1_1_1_5_1504264881.342659.html',NULL,0,0,0,1,0,NULL,1494428453000,1494428453000,1494428453000),(100755,0,2357,'菜鸟版JAVA设计模式—适配器模式，装饰模式，代理模式异同',2,'[18,12,77,493,39]','节前把3个设计模式的学习心得分享了一下，分别是适配器模式，装饰模式，代理模式。\n但是似乎越写越有些迷糊，这三种模式都有着一些大同小异的地方，总是有些搞不清。\n今天再重新学习下，把学习心得分享给大家一下...',NULL,'csdn/java/1_0_1_2_1504264659.896492.html',NULL,0,0,0,1,0,NULL,1413277255000,1413277255000,1413277255000),(100756,0,2057,'工厂模式',2,'[361,18,12,734]','工厂模式标签： Java与设计模式\n  工厂模式 \n  用工厂方法代替了new操作, 将选择实现类, 创建对象统一管理和控制.从而将调用者(Client)与实现类进行解耦.实现了创建者与调用者分离;使...',NULL,'csdn/java/1_0_1_18_1504264406.537905.html',NULL,0,0,0,1,0,NULL,1450015215000,1450015215000,1450015215000),(100757,0,2042,'RabbitMQ消息队列入门篇（环境配置+Java实例+基础概念）',2,'[18,735,736,737,738]','一、消息队列使用场景或者其好处消息队列一般是在项目中，将一些无需即时返回且耗时的操作提取出来，进行了异步处理，而这种异步处理的方式大大的节省了服务器的请求响应时间，从而提高了系统的吞吐量。在项目启动之...',NULL,'csdn/java/1_1_1_10_1504264389.339141.html',NULL,0,0,0,1,0,NULL,1452333623000,1452333623000,1452333623000),(100758,0,2439,'严重：StandardServer.await:create[localhost 8005]:java.net.BindException',2,'[739,123,239,23]','在使用tomcat服务器运行程序时，我们可能会遇到这样的问题：\r\n \r\n       由上面的信息可以发现，该问题是由于8005端口号已经被占用，所以我们需要对这样的端口号进行设置，因而找到tomca...',NULL,'csdn/java/1_1_1_7_1504264739.807179.html',NULL,0,0,0,1,0,NULL,1430510407000,1430510407000,1430510407000),(100759,0,2678,'java架构解密——深入再造AOP',2,'[740,343,146,741,450]','随着AOP研究的深入，我们发现，核心概念变得极其重要，这些概念就是一幅图，指引我们在优化之路上越走越远！',NULL,'csdn/java/1_0_1_1_1504265274.754792.html',NULL,0,0,0,1,0,NULL,1433080808000,1433080808000,1433080808000),(100760,0,2761,'Jersey学习记录(三)--过滤拦截器与异常处理',2,'[302]','本文记录全局异常返回,过滤器,拦截器.一.全局异常处理器webservice定义全局返回错误码是很重要的一个功能,jersey正好就能实现这一功能.整个流程就是当jersey托管的类发现了异常,抛出给...',NULL,'csdn/java/1_0_2_6_1504265371.854454.html',NULL,0,0,0,1,0,NULL,1469703620000,1469703620000,1469703620000),(100761,0,2637,'责任链模式进阶：与AOP思想的融合与应用',2,'[623,345,742,449,743]','AOP的理念可以很容易抽象出横切关注点，基于AOP理念我们可以将责任链模式中各具体处理角色中共同逻辑抽象出来并将其模块化以便提高代码复用率和系统可维护性。Java Web中的过滤器和Struts2中的...',NULL,'csdn/java/1_0_1_14_1504265183.415267.html',NULL,0,0,0,1,0,NULL,1490893215000,1490893215000,1490893215000),(100762,0,2647,'Java Web基础 --- Jsp 综述(下)',2,'[744,745,247,746,747]','JSP脚本中包含九个内置对象，它们都是Servlet-API接口的实例，并且JSP规范对它们进行了默认初始化。本文首先通过一个JSP实例来认识JSP内置对象的实质，紧接着以基于请求/响应架构应用的运行...',NULL,'csdn/java/1_0_1_19_1504265193.763499.html',NULL,0,0,0,1,0,NULL,1488063613000,1488063613000,1488063613000),(100763,0,2642,'计算机网络体系结构综述（上）',2,'[748,626,627,749,750]','计算机网络体系结构标准的制定使得两台计算机能够像两个知心朋友那样能够互相准确理解对方的意思并做出优雅的回应。本文首先概述了计算机网络体系结构的提出动机，并结合日常生活中的邮政系统介绍了设计的理念，并给...',NULL,'csdn/java/1_0_1_9_1504265188.466111.html',NULL,0,0,0,1,0,NULL,1491584454000,1491584454000,1491584454000),(100764,0,2644,'Spring MVC 简述：从MVC框架普遍关注的问题说起',2,'[451,751,752,753,754]','任何一个完备的MVC框架都需要解决Web开发过程中的一些共性的问题，比如请求的收集与分发、数据前后台流转与转换，当前最流行的SpringMVC和Struts2也不例外。本文首先概述MVC模式的分层思想...',NULL,'csdn/java/1_0_1_6_1504265190.747879.html',NULL,0,0,0,1,0,NULL,1496350819000,1496350819000,1496350819000),(100765,0,2046,'Redis+Spring缓存实例（windows环境，附实例源码及详解）',2,'[59,98,755]','一、Redis了解1.1、Redis介绍：redis是一个key-value存储系统。和Memcached类似，它支持存储的value类型相对更多，包括string(字符串)、list(链表)、set...',NULL,'csdn/java/1_1_1_8_1504264393.335841.html',NULL,0,0,0,1,0,NULL,1452765612000,1452765612000,1452765612000),(100766,0,2064,'代理模式',2,'[12,39,18,650]','代理模式标签： Java与设计模式代理模式\n  为其他对象提供一种代理以控制对这个对象的访问(可以详细控制访问某个对象的方法, 在调用这个方法[前/后]做[前/后]置处理, 从而实现将统一流程放到代理...',NULL,'csdn/java/1_0_1_14_1504264410.542722.html',NULL,0,0,0,1,0,NULL,1451214027000,1451214027000,1451214027000),(100767,0,2430,'教你Servlet入门',2,'[739]','Web 技术成为当今主流的互联网 Web 应用技术之一，而 Servlet 是 Java Web 技术的核心基础。这篇博客主要帮助大家了解一个 Web 工程在 Servlet 容器中是如何启动的？ S...',NULL,'csdn/java/1_1_1_8_1504264734.863159.html',NULL,0,0,0,1,0,NULL,1427205644000,1427205644000,1427205644000),(100768,0,2629,'简述Spring容器与SpringMVC的容器的联系与区别',2,'[59,27,756,757,758]','在Spring整体框架的核心概念中，容器的核心思想是管理Bean的整个生命周期。但在一个项目中，Spring容器往往不止一个，最常见的场景就是在一个项目中引入Spring和SpringMVC这两个框架...',NULL,'csdn/java/1_0_1_1_1504265175.316187.html',NULL,0,0,0,1,0,NULL,1499158855000,1499158855000,1499158855000),(100769,0,2433,'Oracle语句的再深化--转码',2,'[726,759,417,147]','当我们面对一个数据表，且表结构为：\ncreate table R_ExtSubFina_Month\n(\n        rptdate date not null,\n        rptname v...',NULL,'csdn/java/1_1_1_2_1504264736.722254.html',NULL,0,0,0,1,0,NULL,1448578811000,1448578811000,1448578811000),(100770,0,2677,'java架构解密——AOP之动态代理实现',2,'[343,450,59,102,116]','深入spring aop 的核心，看看这个神秘的东西是怎么样的一幅面孔，看他是如何由简入难，化难为简！',NULL,'csdn/java/1_0_1_2_1504265271.8805.html',NULL,0,0,0,1,0,NULL,1433073634000,1433073634000,1433073634000),(100771,0,2051,'Shiro安全框架入门篇（登录验证实例详解与源码）',2,'[760,102,67,18]','一、Shiro框架简单介绍Apache Shiro是Java的一个安全框架，旨在简化身份验证和授权。Shiro在JavaSE和JavaEE项目中都可以使用。它主要用来处理身份认证，授权，企业会话管理和...',NULL,'csdn/java/1_1_1_4_1504264398.304014.html',NULL,0,0,0,1,0,NULL,1454511623000,1454511623000,1454511623000),(100772,0,2747,'Spring Boot学习记录(二)--thymeleaf模板',2,'[137]','Spring Boot学习记录(二)–thymeleaf模板标签（空格分隔）： spring-boot自从来公司后都没用过jsp当界面渲染了,因为前后端分离不是很好,反而模板引擎用的比较多,thyme...',NULL,'csdn/java/1_0_2_3_1504265357.661839.html',NULL,0,0,0,1,0,NULL,1470934820000,1470934820000,1470934820000),(100773,0,2431,'jsp、servlet一家亲',2,'[739,37,41]','上个月写了《教你servlet入门》，今天来探究一下关于jsp的那些故事。\r\n§ 回顾\r\n\r\n    1． 什么是Web应用程序？\r\n    2． 什么是Servlet，和一般Java程序有什么区别？...',NULL,'csdn/java/1_1_1_9_1504264735.616165.html',NULL,0,0,0,1,0,NULL,1428415227000,1428415227000,1428415227000),(100774,0,2679,'springMvc+Spring4+hibernate4整合常见错误',2,'[18,451]','最近一直在做springMvc+Spring4+hibernate4的整合，出了不少错误，这都是我们宝贵的经验啊，在整合的过程中，最大的问题就是版本升级的问题，之前做过jdk1.6的例子，很顺利，但是...',NULL,'csdn/java/1_0_1_6_1504265275.729173.html',NULL,0,0,0,1,0,NULL,1420498833000,1420498833000,1420498833000),(100775,0,2756,'JavaWEB小知识学习--验证码生成',2,'[74,27]','验证码是现在必不可少的一个小功能,可以放爆破,防垃圾请求,总之还是有一定约束力的SpringMVC实现验证码功能主要是提供一个URL请求,该请求对应的方法可以生成一张验证码图片,然后把该验证码数值存入...',NULL,'csdn/java/1_0_2_11_1504265366.809937.html',NULL,0,0,0,1,0,NULL,1468522810000,1468522810000,1468522810000),(100776,0,2043,'Dubbo分布式服务框架入门（附工程）',2,'[695,102,648]','本文介绍了dubbo的一些概念，并对zookeeper、dubbo-admin、提供者、消费者的搭建进行了详细的讲解，且附有工程源码',NULL,'csdn/java/1_1_1_12_1504264390.329236.html',NULL,0,0,0,1,0,NULL,1450882849000,1450882849000,1450882849000),(100777,0,2040,'VMware Ubuntu安装详细过程',2,'[105,634,761]','不是每一个程序员都必须玩过linux，只是博主觉得现在的很多服务器都是linux系统的，而自己属于那种前端也搞，后台也搞，对框架搭建也感兴趣，但是很多生产上的框架和工具都是安装在服务器上的，而且有不少...',NULL,'csdn/java/1_1_1_7_1504264388.317387.html',NULL,0,0,0,1,0,NULL,1452963647000,1452963647000,1452963647000),(100778,0,2052,'程序员一年工作经验之谈',2,'[18,417,762,160]','将本篇文章放到专栏 Java后台框架系列 里面也是实属无奈，只是为了能分享给更多的猿友，望谅解。今晚本来想写一篇技术博客，由于素材还没有准备好，又刚好写完公司年终总结，博主是15届本科毕业生，加上实习...',NULL,'csdn/java/1_1_1_5_1504264399.473761.html',NULL,0,0,0,1,0,NULL,1453244418000,1453244418000,1453244418000),(100779,0,2425,'润乾报表实用教程',2,'[18,727,726]','我们都知道在Java领域的开发中，有一个常用的报表--润乾报表。但是对于新手来讲，我们究竟如何在一个较短的时间内最高效的使用它呢？下面一起来看：\r\n☁ 报表设计步骤\r\n                ...',NULL,'csdn/java/1_1_1_0_1504264733.399085.html',NULL,0,0,0,1,0,NULL,1448812859000,1448812859000,1448812859000),(100780,0,2427,'小荷才露尖尖角之struts的秘密',2,'[299,18,268]','我们都知道SSH是目前比较流行的一个Web应用程序开源框架，而struts又是之中的领头框架，究竟它有怎样的力量竟然可以博客IT界的眼球，下面请听我一一道来：\n 一、MVC\n要了解struts必须先来...',NULL,'csdn/java/1_1_1_1_1504264734.670927.html',NULL,0,0,0,1,0,NULL,1442343600000,1442343600000,1442343600000),(100781,0,2441,'笨鸟先飞之Java---缠缠绵绵的注解和注释',2,'[18,763]','在平时的编程中注释一直与我们为伴，但是在Java编程中我们会经常性的使用注解。一字之差，也不知是否会有“失之毫厘差以千里”之说？？一起来看：',NULL,'csdn/java/1_1_1_5_1504264740.836072.html',NULL,0,0,0,1,0,NULL,1440439229000,1440439229000,1440439229000),(100782,0,2578,'J2EE---Servlet',2,'[764]','Servlet\n\n\n是一种独立于操作系统平台和网络传输协议的服务器端的Java应用程序，它用来扩展服务器的功能，可以生成动态的Web页面。最大的用途是通过动态响应客户机请求来扩展服务器功能。Servl...',NULL,'csdn/java/1_1_1_4_1504265014.590389.html',NULL,0,0,0,1,0,NULL,1396206039000,1396206039000,1396206039000),(100783,0,2437,'笨鸟先飞之Java--MySql中文数据乱码为哪般？？？',2,'[510,18]','看问题要全面，在解决问题的过程中要学者全面分析和思考问题，不要犯”头痛医头脚痛医脚“的错误！！',NULL,'csdn/java/1_1_1_6_1504264738.898466.html',NULL,0,0,0,1,0,NULL,1440702012000,1440702012000,1440702012000),(100784,0,2038,'Spirng+SpringMVC+Maven+Mybatis+MySQL项目搭建',2,'[7,27,118,79,59]','这篇文章主要讲解使用eclipse对Spirng+SpringMVC+Maven+Mybatis+MySQL项目搭建过程，包括里面步骤和里面的配置文件如何配置等等都会详细说明。如果还没有搭建好环境（主...',NULL,'csdn/java/1_1_1_17_1504264387.248106.html',NULL,0,0,0,1,0,NULL,1450800044000,1450800044000,1450800044000),(100785,0,2579,'J2EE规范--Weblogic',2,'[18,764]','什么是weblogic\n  是美国Oracl公司出品的一个应用服务器。\n \nWeblogic可以做什么\n \n      是用于开发，继承，部署和管理分布式web应用，网络和数据库应用的java应用服务...',NULL,'csdn/java/1_1_1_2_1504265015.679375.html',NULL,0,0,0,1,0,NULL,1394636451000,1394636451000,1394636451000),(100786,0,2196,'读《Linux内核设计与实现》我想到了这些书',4,'[35,75,21,100,211]','从题目中可以看到，这篇文章是以我读《Linux内核设计与实现》而想到的其他我读过的书，所以，这篇文章的主要支撑点是《Linux内核》。      开始读这本书已经是很久以前的事了，不过，由于时间和精力...',NULL,'csdn/linux/1_0_2_2_1504264509.885008.html',NULL,0,0,0,1,0,NULL,1376895659000,1376895659000,1376895659000),(100787,0,2575,'java--IO流',2,'[18]','java中的流按照不同的方式，可以有不同的分类标准 。\r\n但还是有基本的公有方法，读，写，关闭，缓冲等。\r\n\r\n\r\n \r\n \r\n不同的标准有不同的类型。\r\n \r\n按照功能分配，有节点和处理。节点和处理...',NULL,'csdn/java/1_1_1_0_1504265011.473885.html',NULL,0,0,0,1,0,NULL,1393340447000,1393340447000,1393340447000),(100788,0,2577,'J2EE--JDBC',2,'[764]','JDBC\r\n\r\n\r\n（java Data Base Connectivity Java数据库链接）是一种用于执行SQL语句的JavaAPI，可以为多种关系数据库提\r\n供统一访问，它由一组用Java语言...',NULL,'csdn/java/1_1_1_3_1504265013.516284.html',NULL,0,0,0,1,0,NULL,1395259220000,1395259220000,1395259220000),(100789,0,2576,'java多线程',2,'[18,52]','说道多线程\n \n就得来认识下咱们经常说道的几个概念。\n进程：\n是一个静态的概念，它本身是不能动的，每个进程都是有一个主方法的执行路径，这个路径就是一个具体的线程。\n \n线程：不同的程序执行路径。\n \n...',NULL,'csdn/java/1_1_1_1_1504265012.493952.html',NULL,0,0,0,1,0,NULL,1393945255000,1393945255000,1393945255000),(100790,0,2786,'mysql最大值，最小值，总和查询与计数查询',3,'[7,765,766,767,768]','我们可以看到尽管SNAME有很多记录，但是如果用SUM去查询它的总和，虽然语法上，并没有错误，但是结果显然是\"错误的\"。\n而换用count来对SNAME来进行计数则没有问题。当然，NULL记录是不会被...',NULL,'csdn/mysql/17_4_1_5_1505001645.585119.html',NULL,0,0,0,1,0,NULL,1504735226000,1504735226000,1504735226000),(100791,0,2784,'mysql中insert into语句详解（上）',3,'[7,769,770,771,772]','insert into是mysql中最常用的插入语句，它有5种写法。下面让我们一起来看一看吧：\n1向原表中某些字段中插入一条记录。\n语法：insert into +表名（表中的字段，，）value（字...',NULL,'csdn/mysql/17_4_1_12_1505001644.163164.html',NULL,0,0,0,1,0,NULL,1504551635000,1504551635000,1504551635000),(100792,0,2781,'mysql的4种复制操作详解（下篇）',3,'[7,773,774,775,776]','3.复制旧表的数据到新表（假设两个表的结构一样）：\n4.复制旧表的数据到新表（假设两个表的结构不一样）：',NULL,'csdn/mysql/17_4_1_13_1505001640.150769.html',NULL,0,0,0,1,0,NULL,1504519232000,1504519232000,1504519232000),(100793,0,2787,'mysql删除语句大全（上）',3,'[7,777,533,778,779]','1.drop语句。可以用来删除数据库和表。2.delete语句。用来删除表中的字段：\nA通过where子句来指定删除表中的某个记录：注意：如果delete语句中没有加入where就会把表中的所有记录全...',NULL,'csdn/mysql/17_4_1_7_1505001646.441938.html',NULL,0,0,0,1,0,NULL,1504684858000,1504684858000,1504684858000),(100794,0,2782,'mysql的4种复制操作详解（上篇）',3,'[7,776,780,781,61]','1.只复制表结构到新表\n \n 2.复制表结构及数据到新表\n \n \n \n \n \n \n \n \n \n \n \n \n\n\n\n1 CREATE TABLE 新表 LIKE 旧表 ;\n \n \n \n \n \n \n \n \n...',NULL,'csdn/mysql/17_4_1_14_1505001641.068557.html',NULL,0,0,0,1,0,NULL,1504519202000,1504519202000,1504519202000),(100795,0,2783,'mysql中几个不用结尾符号也能够执行的语句',3,'[7,782,783,784,785]','众所周知mysql执行每一个可执行语句都是以分号结尾的,也就是说mysql识别语句是否结束，是根据分号决定的。\r\n当然，你也可以用DELIMITER自定义一个语句的结束符号。\r\n不知道大家有没有发现，...',NULL,'csdn/mysql/17_4_1_10_1505001642.031782.html',NULL,0,0,0,1,0,NULL,1504515626000,1504515626000,1504515626000),(100796,0,2779,'MYSQL 中group by，order by用法详解及其特殊用法',3,'[7,786,787,788,789]','我们可以看到GROUP BY 是优先对跟在他后面的第一个字段进行排序的并且也只对这一个字段进行排序，而且如果GROUP BY 后面跟的字段不只一个的话，那么GROUP BY就不会再对排序后的结果进行去...',NULL,'csdn/mysql/17_4_1_9_1505001638.053811.html',NULL,0,0,0,1,0,NULL,1504346414000,1504346414000,1504346414000),(100797,0,2780,'mysql更新，修改语句汇总--update set,alter',3,'[7,790,791,792,793]','update set 语句是mysql最常用的修改和更新语句。\n其语法为：\nupdate +表名 +set+ 变更后的信息 +where子句；\nalter语句也具有修改的功能。而且alter的功能远远...',NULL,'csdn/mysql/17_4_1_15_1505001640.079859.html',NULL,0,0,0,1,0,NULL,1504540824000,1504540824000,1504540824000),(100798,0,2788,'mysql中char与varchar的区别分析',3,'[7,794,795,796,797]','char是一种固定长度的类型，varchar则是一种可变长度的类型 \n　　char(M)类型的数据列里，每个值都占用M个字节，如果某个长度小于M，MySQL就会在它的右边用空格字符补足．（在检索操作中...',NULL,'csdn/mysql/17_4_1_8_1505001647.319842.html',NULL,0,0,0,1,0,NULL,1504281619000,1504281619000,1504281619000),(100799,0,2791,'mysql加减乘除，求余，求平均值,查询不等于某数值',3,'[7,798,799,800,801]','1.mysql加减乘除操作：\r\nmysql> select score,score+5,score-5,score*5,score/5 from 4a;\r\n+-------+---------+---...',NULL,'csdn/mysql/17_4_1_4_1505001650.292154.html',NULL,0,0,0,1,0,NULL,1504774825000,1504774825000,1504774825000),(100800,0,2790,'mysql中条件限制语句（一）',3,'[7,802,803,804,805]','显然where的功能要比in强大得多，因此where的命令优先级也比高一些。而相同条件下where的搜寻范围也比in要大一点---毕竟功能多了，要搜寻的东西就多了。所以，相同的查询条件下where的效...',NULL,'csdn/mysql/17_4_1_3_1505001649.911091.html',NULL,0,0,0,1,0,NULL,1504778401000,1504778401000,1504778401000),(100801,0,2789,'mysql删除语句大全（下）',3,'[7,792,806,807,779]','4.update set 语句是mysql最常用的修改和更新语句，它更新信息时也会覆盖（删除）旧的信息。\n注意：如果变更信息后面没有加where子句指定其变更的内容，那么update set语句就会把...',NULL,'csdn/mysql/17_4_1_6_1505001648.643907.html',NULL,0,0,0,1,0,NULL,1504702848000,1504702848000,1504702848000),(100802,0,2792,'设计模式-观察者模式',1,'[12,349,18]','在我们日常生活中，有些人会有订阅报纸的经历，当我们订阅时，都能定时的收到报纸，当我么取消订阅时，就不会再收到报纸。 \n当然，互联网普及之后，报纸逐渐减少。但是类似的也有许多，例如微信的公众号，当我们订...',NULL,'csdn/mode/37_5_1_0_1505001777.996892.html',NULL,0,0,0,1,0,NULL,1504958415000,1504958415000,1504958415000),(100803,0,2785,'mysql中条件限制语句（二）',3,'[7,808,809,810,811]','可以看出双百分号%%是全匹配，可以匹配表中的所有记录。那么，即便是NULL值也能够匹配吗？\n可以看出当作用于多列的时候distinct就不再返回唯一记录了。\n另外distinct还可以和一些数学运算的...',NULL,'csdn/mysql/17_4_1_2_1505001645.161407.html',NULL,0,0,0,1,0,NULL,1504796442000,1504796442000,1504796442000),(100804,0,2777,'mysql七表查询实例（二）',3,'[7,812,813,814,815]','而这个语句，这个结果的出现令我彻底蒙圈了。最后想了一个以毒攻毒的办法终于将之拿下。\n然而并没有什么卵用......当然还是有正解的：出于科学严谨的态度（呃，好吧，是偶搞错太多次了，怕了），让我们一起来...',NULL,'csdn/mysql/17_4_1_0_1505001635.936508.html',NULL,0,0,0,1,0,NULL,1504893659000,1504893659000,1504893659000),(100805,0,2778,'mysql七表查询实例（一）',3,'[7,63,816,679,817]','开始之前先说点有趣的事：经常听说没有主键就无法进行多表查询，其实这太过于片面了。实际上有些情况没有主键也是可以进行多表查询的（例一，所用到的表格也都是下面的表格，先来个4表查询热热身）。\nmysql>...',NULL,'csdn/mysql/17_4_1_1_1505001637.016838.html',NULL,0,0,0,1,0,NULL,1504890035000,1504890035000,1504890035000),(100806,0,2793,'设计模式-中介者模式',1,'[12,85,53,818]','在我们的日常生活中经常需要购买各种各样的东西，房子、车子、生活用品等等。那么我们并不会对各个产品都了解，所以销售人员应运而生，他们了解产品，然后他们根据你的需求在向你们推荐符合你们要求的产品。这些销售...',NULL,'csdn/mode/37_4_1_0_1505174526.090284.html',NULL,0,0,0,1,0,NULL,1505073609000,1505073609000,1505073609000),(100807,0,2794,'史上最简单的 MySQL 教程（三十四）「视图（下）」',3,'[7,444,445,143]','视图操作视图操作：视图是可以进行数据写操作的，只不过有很多限制。',NULL,'csdn/mysql/17_3_1_0_1505174540.535324.html',NULL,0,0,0,1,0,NULL,1504954852000,1504954852000,1504954852000),(100808,0,2795,'架构师入门笔记八 并发框架Disruptor场景应用',2,'[350,665]','架构师入门笔记八 并发框架Disruptor场景应用\r\n今天用一个停车场问题来加深对Disruptor的理解。一个有关汽车进入停车场的问题。当汽车进入停车场时，系统首先会记录汽车信息。同时也会发送消息...',NULL,'csdn/java/37_1_1_0_1505260887.14977.html',NULL,0,0,0,1,0,NULL,1504969231000,1504969231000,1504969231000),(100809,0,2796,'架构师入门笔记七 并发框架Disruptor快速入门',2,'[350,665]','架构师入门笔记七 并发框架Disruptor快速入门\r\n1. 什么是Disruptor\r\nDisruptor它是一个高性能的异步处理的开源并发框架，能够在无锁的情况下实现网络的Queue并发操作。可以...',NULL,'csdn/java/37_1_1_1_1505260888.359308.html',NULL,0,0,0,1,0,NULL,1504296046000,1504296046000,1504296046000),(100810,0,2797,'Java设计模式_(结构型)_适配器模式',1,'[53,12,77]','引用百科	在计算机编程中，适配器模式（有时候也称包装样式或者包装）将一个类的接口适配成用户所期待的。一个适配允许通常因为接口不兼容而不能在一起工作的类工作在一起，做法是将类自己的接口包裹在一个已存在的...',NULL,'csdn/mode/37_2_1_0_1506038455.68991.html',NULL,0,0,0,1,0,NULL,1506002454000,1506002454000,1506002454000),(100811,0,2798,'Java设计模式_(创建型)_建造者模式',1,'[12,53,176]','引用百科   建造者模式是设计模式的一种，将一个复杂对象的构建与它的表示分离，使得同样的构建过程可以创建不同的表示。实用范围1 当创建复杂对象的算法应该独立于该对象的组成部分以及它们的装配方式时。2 ...',NULL,'csdn/mode/37_2_1_1_1506038456.749904.html',NULL,0,0,0,1,0,NULL,1505919640000,1505919640000,1505919640000),(100812,0,2802,'Java设计模式_(创建型)_工厂模式',1,'[18,53,361]','引用百科：  	工厂模式是我们最常用的实例化对象模式了，是用工厂方法代替new操作的一种模式。著名的Jive论坛 ,就大量使用了工厂模式，工厂模式在Java程序系统可以说是随处可见。因为工厂模式就相当...',NULL,'csdn/mode/37_2_1_5_1506038460.410604.html',NULL,0,0,0,1,0,NULL,1505322009000,1505322009000,1505322009000),(100813,0,2803,'Java设计模式_描述',1,'[12,null,null]','概述：设计模式（Design Pattern）是一套被反复使用、多数人知晓的、经过分类的、代码设计经验的总结。使用设计模式的目的：为了代码可重用性、让代码更容易被他人理解、保证代码可靠性。 设计模式使...',NULL,'csdn/mode/37_2_1_3_1506038461.703039.html',NULL,0,0,0,1,0,NULL,1504620050000,1504620050000,1504620050000),(100814,0,2801,'Java设计模式_(创建型)_抽象工厂模式',1,'[478,12,null]','引用百科：	抽象工厂模式是所有形态的工厂模式中最为抽象和最具一般性的一种形态。抽象工厂模式是指当有多个抽象角色时，使用的一种工厂模式。抽象工厂模式可以向客户端提供一个接口，使客户端在不必指定产品的具体...',NULL,'csdn/mode/37_2_1_6_1506038459.745736.html',NULL,0,0,0,1,0,NULL,1505768420000,1505768420000,1505768420000),(100815,0,2800,'Java设计模式_(创建型)_单例模式',1,'[12,null,84]','1  概述单例模式，是一种常用的软件设计模式。在它的核心结构中只包含一个被称为单例的特殊类。通过单例模式可以保证系统中一个类只有一个实例。即一个类只有一个对象实例.数学与逻辑学中，singleton定...',NULL,'csdn/mode/37_2_1_4_1506038458.703667.html',NULL,0,0,0,1,0,NULL,1504620057000,1504620057000,1504620057000),(100816,0,2799,'Java设计模式_(创建型)_原型模式',1,'[18,53,467]','引用百科：用原型实例指定创建对象的种类，并且通过拷贝这些原型创建新的对象。Prototype原型模式是一种创建型设计模式，Prototype模式允许一个对象再创建另外一个可定制的对象，根本无需知道任何...',NULL,'csdn/mode/37_2_1_2_1506038457.690015.html',NULL,0,0,0,1,0,NULL,1505836819000,1505836819000,1505836819000),(100817,0,2804,'架构师入门笔记十 Netty5快速入门',2,'[350,null]','架构师入门笔记十 Netty5快速入门\n\n\n在了解IO，NIO，AIO知识后，学习Netty5便会轻松很多，本章节主要介绍Netty是如何接收，反馈数据和拆包粘包的问题。\n\n\n\n1 Netty基础知识...',NULL,'csdn/java/37_3_1_0_1506094316.615497.html',NULL,0,0,0,1,0,NULL,1506088840000,1506088840000,1506088840000),(100818,0,2805,'Java设计模式_(结构型)_组合模式',1,'[null,null,448,null]','引用百科组合模式，将对象组合成树形结构以表示“部分-整体”的层次结构，组合模式使得用户对单个对象和组合对象的使用具有一致性。掌握组合模式的重点是要理解清楚 “部分/整体” 还有 ”单个对象“ 与 \"组...',NULL,'csdn/mode/37_0_1_0_1506211257.721213.html',NULL,0,0,0,1,0,NULL,1506088837000,1506088837000,1506088837000),(100819,0,2806,'Java设计模式_(结构型)_外观模式',1,'[null,18,53,55,522]','引用百科外观模式（Facade），为子系统中的一组接口提供一个一致的界面，定义一个高层接口，这个接口使得这一子系统更加容易使用。Facade这个外观类为子系统提供一个共同的对外接口Clients客户对...',NULL,'csdn/mode/37_5_1_0_1506384042.670113.html',NULL,0,0,0,1,0,NULL,1506344454000,1506344454000,1506344454000),(100820,0,2808,'Java设计模式_(结构型)_桥接模式',1,'[null,12,53,89]','引用百科	桥接模式是将抽象部分与它的实现部分分离，使它们都可以独立地变化。它是一种对象结构型模式，又称为柄体(Handle and Body)模式或接口(Interface)模式。在软件系统中，某些类...',NULL,'csdn/mode/37_2_1_1_1506556849.585141.html',NULL,0,0,0,1,0,NULL,1506412844000,1506412844000,1506412844000),(100821,0,2807,'Java设计模式_(结构型)_代理模式',1,'[53,null,39]','引用百科即Proxy Pattern，23种常用的面向对象软件的设计模式之一。代理模式的定义：为其他对象提供一种代理以控制对这个对象的访问。在某些情况下，一个对象不适合或者不能直接引用另一个对象，而代...',NULL,'csdn/mode/37_2_1_0_1506556848.581732.html',NULL,0,0,0,1,0,NULL,1506459644000,1506459644000,1506459644000),(100822,0,2809,'Java设计模式_(结构型)_装饰模式',1,'[null,53,493]','引用百科	装饰模式指的是在不必改变原类文件和使用继承的情况下，动态地扩展一个对象的功能。它是通过创建一个包装对象，也就是装饰来包裹真实的对象。特点（1） 装饰对象和真实对象有相同的接口。这样客户端对象...',NULL,'csdn/mode/37_4_1_0_1506729620.506558.html',NULL,0,0,0,1,0,NULL,1506693638000,1506693638000,1506693638000),(100823,0,2810,'MySQL之——集群的那些事',3,'[7]','1   数据复制技术简介\n数据库复制是指频繁的将数据从一个节点（服务器上的一个数据库）复制到另一个节点，可以将数据库复制系统看作一个分布式数据库，但是其中所有节点共享相同的信息。这类系统也称为数据库集...',NULL,'csdn/mysql/17_5_1_0_1506729669.112.html',NULL,0,0,0,1,0,NULL,1504645239000,1504645239000,1504645239000);
/*!40000 ALTER TABLE `t_article` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `t_article_category`
--

DROP TABLE IF EXISTS `t_article_category`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `t_article_category` (
  `id` tinyint(4) NOT NULL AUTO_INCREMENT,
  `name` varchar(20) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=8 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `t_article_category`
--

LOCK TABLES `t_article_category` WRITE;
/*!40000 ALTER TABLE `t_article_category` DISABLE KEYS */;
INSERT INTO `t_article_category` VALUES (1,'设计模式'),(2,'Java'),(3,'MySQL'),(4,'Linux'),(5,'Nginx'),(6,'UML'),(7,'redis');
/*!40000 ALTER TABLE `t_article_category` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `t_article_comment`
--

DROP TABLE IF EXISTS `t_article_comment`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `t_article_comment` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `name` varchar(20) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `email` varchar(256) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `content` varchar(256) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `child_id` bigint(20) DEFAULT NULL,
  `father_id` bigint(20) DEFAULT NULL,
  `favour_amount` int(11) DEFAULT NULL,
  `status` tinyint(4) DEFAULT NULL,
  `create_time` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `t_article_comment`
--

LOCK TABLES `t_article_comment` WRITE;
/*!40000 ALTER TABLE `t_article_comment` DISABLE KEYS */;
/*!40000 ALTER TABLE `t_article_comment` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `t_article_label`
--

DROP TABLE IF EXISTS `t_article_label`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `t_article_label` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `name` varchar(20) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `count` bigint(20) NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=819 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `t_article_label`
--

LOCK TABLES `t_article_label` WRITE;
/*!40000 ALTER TABLE `t_article_label` DISABLE KEYS */;
INSERT INTO `t_article_label` VALUES (7,'mysql',324),(8,'select',360),(9,'子查询',344),(10,'行子查询',160),(11,'表子查询',132),(12,'设计模式',275),(13,'Linux源码',32),(14,'复制进程',54),(15,'task_struct',73),(16,'资源限制机制',99),(17,'进程优先级',45),(18,'Java',199),(19,'php',124),(20,'需求',44),(21,'linux',198),(22,'ssl',27),(23,'tomcat',37),(24,'log4j',54),(25,'web.xml',35),(26,'web',43),(27,'spring mvc',52),(28,'服务器',32),(29,'ajax+servlet解决中文乱码',35),(30,'jdk',27),(31,'简单工厂',34),(32,'线程',34),(33,'乐观锁',22),(34,'悲观锁',54),(35,'内核',116),(36,'源码',42),(37,'jsp',29),(38,'表单',19),(39,'代理模式',32),(40,'动态代理',43),(41,'servlet',39),(42,'函数式',29),(43,'函数式编程',52),(44,'分页',32),(45,'class',44),(46,'类加载',37),(47,'mongo',17),(48,'spring-dat',22),(49,'阅读',25),(50,'activemq',31),(51,'技术',28),(52,'多线程',27),(53,'java设计模式',97),(54,'迭代器',20),(55,'外观模式',25),(56,'session',21),(57,'进程',31),(58,'spring security',21),(59,'spring',71),(60,'pattern',39),(61,'结构',53),(62,'编程',49),(63,'实例',29),(64,'防盗版',26),(65,'class文件加密',35),(66,'singleton',23),(67,'安全',23),(68,'继承',17),(69,'javascript',28),(70,'函数',30),(71,'对象',22),(72,'java ee',31),(73,'盗版',22),(74,'java web',25),(75,'数据结构',32),(76,'adapter pattern',22),(77,'适配器模式',21),(78,'数据',25),(79,'maven',29),(80,'jar',18),(81,'dependency',16),(82,'xml-apis',10),(83,'简单工厂模式',17),(84,'单例模式',12),(85,'中介者模式',18),(86,'系统架构',12),(87,'负载均衡',12),(88,'模板方法模式',21),(89,'桥接模式',20),(90,'velocity-j',21),(91,'虚拟机',37),(92,'docker',25),(93,'架构设计',21),(94,'Anakia',15),(95,'Velocity',12),(96,'Ant',14),(97,'Xml',14),(98,'redis',19),(99,'文件加载',13),(100,'linux kernel',83),(101,'filter',8),(102,'框架',19),(103,'数据压缩',3),(104,'压缩',4),(105,'Ubuntu',9),(106,'VirtualBox',3),(107,'程序员联盟',29),(108,'ajax',5),(109,'异步',3),(110,'dos',3),(111,'pop',3),(112,'邮件',3),(113,'软件',9),(114,'管理',16),(115,'web应用',6),(116,'设计',20),(117,'工厂',4),(118,'mybatis',13),(119,'操作系统',57),(120,'内存管理',11),(121,'驱动',3),(122,'设备号',3),(123,'socket',17),(124,'网络',13),(125,'tcp',5),(126,'汇编语言',15),(127,'ATT汇编',5),(128,'struts',11),(129,'action',4),(130,'design pattern',4),(131,'状态模式',7),(132,'泛型',4),(133,'cassandra',3),(134,'jvm',4),(135,'offheap',3),(136,'ohc',3),(137,'springboot',7),(138,'spr-mongo',3),(139,'repository',3),(140,'mongodb',3),(141,'性能',3),(142,'hibernate',9),(143,'数据库',14),(144,'Panic',3),(145,'调试',7),(146,'优化',6),(147,'sql',5),(148,'object',5),(149,'值对象',3),(150,'设计模块',4),(151,'多态',3),(152,'读取properties',3),(153,'缓存',8),(154,'Mismatch',3),(155,'Section',3),(156,'框架设计',3),(157,'外观Facade模式',3),(158,'Struts hibernate 调试',3),(159,'Linux内核',27),(160,'程序员',13),(161,'ProgrammerLeague',22),(162,'处理器',21),(163,'ARM',5),(164,'扩展',6),(165,'存储',16),(166,'C代码内嵌汇编',5),(167,'gdb',4),(168,'微内核',3),(169,'32位保护模式',4),(170,'汇编',5),(171,'模板方法TemplateMethod模式',3),(172,'ATT',4),(173,'测试题',4),(174,'原型Prototype模式',3),(175,'备忘录Memento模式',3),(176,'建造者模式',6),(177,'KGDB',3),(178,'策略模式',7),(179,'算法',6),(180,'x86汇编',7),(181,'冒泡排序',3),(182,'解释器Interpreter模式',3),(183,'指针',9),(184,'Path',3),(185,'Makefile',3),(186,'装饰者Decorator模式',3),(187,'命令Command模式',3),(188,'文件系统',12),(189,'享元Flyweight模式',3),(190,'标签',5),(191,'struct',27),(192,'行业数据',15),(193,'硬盘',4),(194,'Structure',6),(195,'反射',3),(196,'shell',6),(197,'测试',5),(198,'终端',5),(199,'sdk',3),(200,'MM',4),(201,'自定义标签应用',3),(202,'自定义标签按钮级别权限控制设计',3),(203,'邮箱',3),(204,'jpa',6),(205,'GIS开发实例',3),(206,'搜狗地图',3),(207,'栈',8),(208,'编程语言',4),(209,'应用',12),(210,'C',22),(211,'Unix',19),(212,'异常',7),(213,'职场',3),(214,'性能优化',6),(215,'内存',26),(216,'硬件',6),(217,'Java快速开发平台',6),(218,'视频上传',3),(219,'视频格式转化视频截图',3),(220,'视频检索',3),(221,'jplogic 极速商业逻辑',4),(222,'RTC中断',3),(223,'宏',7),(224,'注释',3),(225,'命名空间',3),(226,'iostream',3),(227,'魔数',3),(228,'服务器监控',4),(229,'jplogic  极速商业逻辑',9),(230,'ByteBuffer',3),(231,'缓冲器-NIO',3),(232,'编译器',4),(233,'GCC',4),(234,'迁移',3),(235,'groovy',3),(236,'gradle',3),(237,'plugin',3),(238,'custom',3),(239,'myeclipse',5),(240,'jbpm',4),(241,'jplogic快速开发平台',6),(242,'highcharts开发实例',3),(243,'图形报表统计',3),(244,'Cache',5),(245,'界面',7),(246,'磁盘',12),(247,'重定向',4),(248,'流',3),(249,'管道',3),(250,'c语言',6),(251,'fork',5),(252,'后台运行',3),(253,'Linux内核源码',6),(254,'高速缓存',5),(255,'IT',4),(256,'控制台',3),(257,'printf',7),(258,'Linux kill',3),(259,'信号',5),(260,'cpu',3),(261,'helloworld',3),(262,'C++',6),(263,'加载器',3),(264,'代理Proxy模式',3),(265,'时间片',4),(266,'进程调度',6),(267,'进程切换',4),(268,'struts2.0',4),(269,'全局变量',3),(270,'链表',8),(271,'递归',3),(272,'异常处理',5),(273,'系统调用',6),(274,'Prototype',6),(275,'商业模式',3),(276,'运营',3),(277,'o2o',3),(278,'iptables',4),(279,'X86',3),(280,'64位',3),(281,'web皮肤更换',3),(282,'UI组件',3),(283,'service',3),(284,'include',3),(285,'源代码',5),(286,'Linux0.11',3),(287,'Android',4),(288,'Builder',3),(289,'嵌入式系统',3),(290,'面向对象',9),(291,'组合Composite模式',3),(292,'工作流引擎',3),(293,'activiti实例',3),(294,'工作流',4),(295,'DST',3),(296,'activiti modeler',3),(297,'在线流程设计器',3),(298,'类',7),(299,'ssh',6),(300,'文件头',3),(301,'文件类型',3),(302,'jersey',5),(303,'sas',3),(304,'web开发',5),(305,'开发框架',4),(306,'mvc',5),(307,'状态State模式',3),(308,'make',3),(309,'快速开发案例',3),(310,'内存分配',4),(311,'malloc',6),(312,'进程管理',3),(313,'java web服务器监控',3),(314,'字符流',3),(315,'jplogic 快速开发平台 仿百度搜索',3),(316,'仿google搜索',3),(317,'string',11),(318,'Flex视频会议多人聊天',3),(319,'共享白板',3),(320,'Flex+java+FMS流媒体应用',3),(321,'ProGuard',3),(322,'混淆',3),(323,'nginx',3),(324,'通信',9),(325,'知识库管理开发实例',3),(326,'web快速开发平台',4),(327,'全文检索',3),(328,'文档',3),(329,'进制转换',3),(330,'迭代器Iterator模式',3),(331,'AMP',3),(332,'根文件系统',3),(333,'Root',3),(334,'多用户',3),(335,'post请求-re',3),(336,'模块设计',4),(337,'app',5),(338,'文件',3),(339,'句柄',3),(340,'打开',3),(341,'读取',3),(342,'拦截器',3),(343,'架构',25),(344,'命令模式',4),(345,'责任链模式',6),(346,'备忘录模式',4),(347,'quartz',3),(348,'javabean',3),(349,'观察者模式',6),(350,'架构师',11),(351,'锁',3),(352,'思路',3),(353,'线程池',4),(354,'clientserver',3),(355,'server',6),(356,'工厂方法模式',4),(357,'buffer',5),(358,'编译',3),(359,'Queue',3),(360,'C中内嵌汇编',5),(361,'工厂模式',14),(362,'命令行',3),(363,'策略Strategy模式',3),(364,'容器',4),(365,'api',4),(366,'arraylist',3),(367,'hashcode',3),(368,'equals',3),(369,'boolean',3),(370,'访问者Visitor模式',3),(371,'内存拷贝',3),(372,'面试',3),(373,'中介者Mediator模式',3),(374,'orm',3),(375,'java单例',3),(376,'Singleton pattern',3),(377,'apache',3),(378,'责任链Chain of Responsi',3),(379,'软中断',5),(380,'do_softirq',3),(381,'下半部',5),(382,'延时执行',3),(383,'rsync',3),(384,'ftp',3),(385,'防火墙',3),(386,'netstat',3),(387,'ifconfig',3),(388,'tasklet',3),(389,'designpattern',4),(390,'面向对象编程',6),(391,'分页机制',4),(392,'优先级',3),(393,'中断',5),(394,'中断处理函数',3),(395,'IRQ',3),(396,'接口',3),(397,'并发',3),(398,'set',3),(399,'集合',3),(400,'Nano',3),(401,'X',5),(402,'putty',3),(403,'文件修改',3),(404,'文件指针',3),(405,'文件偏移',3),(406,'重构',4),(407,'方法类型化',3),(408,'uml',24),(409,'模式',19),(410,'守护进程',3),(411,'标准',5),(412,'高级IO',3),(413,'Linus Torvalds',3),(414,'移动开发',3),(415,'定时器',4),(416,'编码',6),(417,'工作',5),(418,'stream',4),(419,'io',3),(420,'观察者Observer模式',3),(421,'制造',3),(422,'产品',5),(423,'时钟中断',3),(424,'jiffies',3),(425,'软件开发',4),(426,'namespace',4),(427,'页存储',3),(428,'json',4),(429,'Unicode',3),(430,'UTF-8',3),(431,'ASC',3),(432,'Linux2.6',3),(433,'调度',3),(434,'schedule',4),(435,'自定义标签按钮级别权限控制',3),(436,'可视化',3),(437,'jvm参数',3),(438,'eclipse',4),(439,'堆大小',3),(440,'图书',3),(441,'博客',6),(442,'开放',3),(443,'享元模式',5),(444,'view',4),(445,'视图',4),(446,'配置',3),(447,'项目',3),(448,'组合模式',5),(449,'struts2拦截器',4),(450,'AOP',6),(451,'springmvc',6),(452,'RESTful架构',3),(453,'表现层状态转移',3),(454,'软件与网络',3),(455,'资源与表现层',3),(456,'状态转化',3),(457,'Unity',3),(458,'jenkins',3),(459,'domain',3),(460,'file',4),(461,'聊天',3),(462,'缓冲区',4),(463,'bios',3),(464,'适配器Adapter模式',3),(465,'mapper',3),(466,'项目管理',4),(467,'原型模式',6),(468,'领域驱动',3),(469,'贫血模型',3),(470,'充血模型',3),(471,'模块化',3),(472,'库',3),(473,'Struts与IOC',3),(474,'Struts拦截器',3),(475,'Struts框架对比',3),(476,'Struts起源',3),(477,'Pull-MVC',3),(478,'抽象工厂模式',4),(479,'计算器',3),(480,'init',3),(481,'启动过程',3),(482,'休眠',3),(483,'唤醒',3),(484,'Struts运行机制',3),(485,'请求路由规则',3),(486,'核心控制器',3),(487,'业务控制器',3),(488,'thread',3),(489,'null',6),(490,'编程导论',4),(491,'design',3),(492,'LSP',3),(493,'装饰模式',7),(494,'模型',3),(495,'比较',3),(496,'地图',3),(497,'浅克隆',3),(498,'深度克隆',3),(499,'Servlet配置',3),(500,'Servlet新特性',3),(501,'异步处理',3),(502,'非阻塞IO',3),(503,'文件上传',5),(504,'饿汉式',3),(505,'懒汉式',3),(506,'URLDecoder',3),(507,'URLEncoder',3),(508,'字符串编码',3),(509,'字符串解码',3),(510,'乱码',5),(511,'descriptor',4),(512,'IPC',3),(513,'Java 编程导论',3),(514,'面向对象设计',3),(515,'导航',3),(516,'解释器模式',5),(517,'java设计',4),(518,'行为模式',3),(519,'迭代器模式',3),(520,'动态代理模式',3),(521,'装饰者模式',3),(522,'门面模式',4),(523,'访问者模式',3),(524,'职责链模式',3),(525,'总线',3),(526,'单链表',3),(527,'interface',4),(528,'平台',3),(529,'云服务',3),(530,'input',5),(531,'硬件驱动',3),(532,'list',6),(533,'delete',4),(534,'互斥体',3),(535,'自旋锁',3),(536,'信号量',3),(537,'禁止抢占',3),(538,'内核分析',3),(539,'内核源码',3),(540,'树形结构',3),(541,'Composite',3),(542,'Leaf',3),(543,'page',3),(544,'kmalloc',3),(545,'页',3),(546,'kernel',4),(547,'二进制',3),(548,'缓冲IO',3),(549,'高端内存',3),(550,'权限',3),(551,'文件IO',3),(552,'各类快速开发平台存在意义',3),(553,'switch',3),(554,'有限状态机',3),(555,'Command',4),(556,'Receiver',3),(557,'Invoker',3),(558,'tar',3),(559,'进程虚拟地址',3),(560,'VMA',3),(561,'实现',3),(562,'getpid',3),(563,'sys_call_table',3),(564,'可变参数列表',3),(565,'封装',3),(566,'聚合',4),(567,'访问',3),(568,'静态代理与动态代理',3),(569,'intellij idea',3),(570,'算法骨架',3),(571,'代码复用',3),(572,'统一定时调度',3),(573,'OGNL的前世今生',3),(574,'数据流转与映射',3),(575,'Java对象树',3),(576,'OGNL三要素',3),(577,'表现层技术与模板语言',4),(578,'function',3),(579,'RedisCluster',3),(580,'Tomcat7',3),(581,'桥接Bridge模式',3),(582,'dhtmlxscheduler',3),(583,'日程安排',3),(584,'权限管理',3),(585,'table',5),(586,'output',3),(587,'cmd',3),(588,'链接',3),(589,'文件操作',3),(590,'usb',3),(591,'算法族',3),(592,'解决问题',3),(593,'开发经验',3),(594,'教程',4),(595,'红黑二叉树',3),(596,'上下文切换',3),(597,'语言',3),(598,'exception',3),(599,'任务',3),(600,'建造者Builder模式',3),(601,'外观',3),(602,'Facade',3),(603,'门面',3),(604,'OOD',3),(605,'互联网架构',3),(606,'工作队列',4),(607,'工作者线程',3),(608,'开发人员',4),(609,'享元',3),(610,'共享',3),(611,'外部状态',3),(612,'IoC控制反转',3),(613,'DI依赖注入',3),(614,'Spring容器',3),(615,'Bean的声明周期',3),(616,'Resource接口',3),(617,'validator',3),(618,'JSP执行过程',3),(619,'JSP编码方式',3),(620,'JSP编码解决方案',3),(621,'编码作用优先级',3),(622,'Filter-机制',3),(623,'AOP理念',4),(624,'中文解码过滤器',3),(625,'典型的过滤链',3),(626,'OSI',4),(627,'TCP-IP',4),(628,'网络层与传输层的区别',3),(629,'链路层与网络层的区别',3),(630,'五层网络体系结构',3),(631,'IoC',3),(632,'springjdbc',3),(633,'登陆',3),(634,'vmware',4),(635,'vmwaretool',3),(636,'所有的创建型模式',3),(637,'状态推动',3),(638,'阿里Kelude',3),(639,'状态机',4),(640,'slab',3),(641,'创建型',3),(642,'状态',3),(643,'junit',3),(644,'物理虚拟内存',3),(645,'ibatis',3),(646,'持久层框架',3),(647,'jdbc',3),(648,'分布式',5),(649,'集群',3),(650,'事务',5),(651,'设计模式 架构',3),(652,'状态恢复',3),(653,'游戏进度保存',3),(654,'属性序列化',3),(655,'uml建模',3),(656,'中介者',3),(657,'对象群',3),(658,'Mediator',3),(659,'MVC数据流转问题',3),(660,'Action上下文',3),(661,'ValueStack',3),(662,'Struts2标签',3),(663,'观察者',3),(664,'EventBus',3),(665,'Disruptor',5),(666,'Observer',3),(667,'触发联动',3),(668,'JSP源文件乱码',3),(669,'JSP页面乱码',3),(670,'GET请求参数乱码',3),(671,'POST请求参数乱码',3),(672,'转码与解码',3),(673,'中断处理程序',3),(674,'注册中断中断函数',3),(675,'锁机制',3),(676,'数据库性能优化',3),(677,'SQL语句优化',3),(678,'索引优化',3),(679,'联合查询',4),(680,'union',3),(681,'union all',3),(682,'web框架',3),(683,'Servlet动机',3),(684,'Servlet本质',3),(685,'生命周期与执行流程',3),(686,'Servlet与并发',3),(687,'编程式事务管理',3),(688,'声明式事务管理',3),(689,'spring事务管理',3),(690,'事务隔离级别',3),(691,'事务的传播行为',3),(692,'module',3),(693,'zookeeper',3),(694,'分布式应用',3),(695,'dubbo',5),(696,'video',3),(697,'java license',3),(698,'注解',3),(699,'方法',3),(700,'支付',3),(701,'MVC分层架构',3),(702,'REST架构风格',3),(703,'REST框架实现',3),(704,'前后端分离',3),(705,'ehcache',3),(706,'文件下载',3),(707,'enum',3),(708,'单例',3),(709,'分层',3),(710,'模块',3),(711,'责任流转',3),(712,'升职加薪的流转流程',3),(713,'动态担责',3),(714,'bootstrap',3),(715,'事务的隔离性',3),(716,'乐观锁-悲观锁',3),(717,'数据库事务隔离级别',3),(718,'事务并发安全性',3),(719,'事务四大特性ACID',3),(720,'nosql数据库',3),(721,'JSP的原理与本质',3),(722,'转译时期',3),(723,'请求时期',3),(724,'JSP的编译指令',3),(725,'JSP的动作指令',3),(726,'北京',5),(727,'报表',4),(728,'建造者',3),(729,'复杂对象',3),(730,'过程稳定',3),(731,'自动化',3),(732,'lambda',3),(733,'java8',3),(734,'创建模式',3),(735,'rabbitmq',3),(736,'消息队列',3),(737,'AMQP',3),(738,'Erlang',3),(739,'drp',5),(740,'大数据',3),(741,'解密',3),(742,'Filter过滤器',3),(743,'横切关注点',3),(744,'九大内置对象',3),(745,'请求-响应架构',3),(746,'Cookie',3),(747,'请求周期-当前会话',3),(748,'层次化网络体系结构',3),(749,'通信协议的实质',3),(750,'分层思想',3),(751,'struts2与springmvc的区别',3),(752,'消息转换机制',3),(753,'数据绑定机制',3),(754,'MVC模式与框架',3),(755,'windows',3),(756,'Spring容器创建',3),(757,'容器的配置',3),(758,'不同容器的关系',3),(759,'oracle',3),(760,'shiro',3),(761,'安装教程',3),(762,'经验',3),(763,'笨鸟先飞',3),(764,'J2EE',5),(765,'最大值',3),(766,'最小值',3),(767,'总和',3),(768,'计数',3),(769,'insert into',3),(770,'插入',3),(771,'数字',3),(772,'原表',3),(773,'插入数据',3),(774,'表结构',3),(775,'新表',3),(776,'复制',4),(777,'drop',3),(778,'truncate',3),(779,'删除',4),(780,'操作',3),(781,'语句',3),(782,'分号',3),(783,'delimiter',3),(784,'use',3),(785,'exit',3),(786,'order by',3),(787,'group by',3),(788,'详解',3),(789,'用法',3),(790,'更新',3),(791,'alter',3),(792,'update set',4),(793,'修改',3),(794,'char',3),(795,'varchar',3),(796,'区别',3),(797,'分析',3),(798,'加减乘除',3),(799,'求余',3),(800,'求平均值',3),(801,'求不等于某数值',3),(802,'between and',3),(803,'and',3),(804,'or',3),(805,'in',3),(806,'alter drop',3),(807,'索引',3),(808,'like',3),(809,'全匹配',3),(810,'distinct',3),(811,'limit',3),(812,'嵌套查询',3),(813,'求平均值导致的数值类型转变',3),(814,'奇葩',3),(815,'七表',3),(816,'多表',3),(817,'主键',3),(818,'解耦',3);
/*!40000 ALTER TABLE `t_article_label` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `t_comment`
--

DROP TABLE IF EXISTS `t_comment`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `t_comment` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `name` varchar(20) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `email` varchar(256) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `content` varchar(256) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `child_id` bigint(20) DEFAULT NULL,
  `father_id` bigint(20) DEFAULT NULL,
  `favour_amount` int(11) DEFAULT NULL,
  `status` tinyint(4) DEFAULT NULL,
  `create_time` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `t_comment`
--

LOCK TABLES `t_comment` WRITE;
/*!40000 ALTER TABLE `t_comment` DISABLE KEYS */;
/*!40000 ALTER TABLE `t_comment` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `t_csdn_article`
--

DROP TABLE IF EXISTS `t_csdn_article`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `t_csdn_article` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `categroy_id` tinyint(4) DEFAULT NULL,
  `url` varchar(1024) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `title` varchar(256) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `desc` varchar(1024) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `read_count` bigint(20) DEFAULT NULL,
  `article_content` varchar(64) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `date` varchar(64) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `author` varchar(64) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `comment_count` bigint(20) DEFAULT NULL,
  `label_list` varchar(1024) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `like_count` bigint(20) DEFAULT NULL,
  `author_link` varchar(1024) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `status` tinyint(4) DEFAULT '0',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=2811 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `t_csdn_article`
--

LOCK TABLES `t_csdn_article` WRITE;
/*!40000 ALTER TABLE `t_csdn_article` DISABLE KEYS */;
INSERT INTO `t_csdn_article` VALUES (2019,3,'http://blog.csdn.net/qq_35246620/article/details/77619106','史上最简单的 MySQL 教程（三十二）「子查询（下）」','子查询子查询：sub query，查询是在某个查询结果之上进行的，一条select语句内部包含了另外一条select语句。行子查询行子查询，返回的结果可以使一行多列或者多行多列。需求：查询学生表中，年...',135,'csdn/mysql/17_0_1_0_1504235138.68905.html','2017-08-27 11:00','qq_35246620',0,'mysql,select,子查询,行子查询,表子查询,',1,'http://my.csdn.net/qq_35246620',1),(2020,3,'http://blog.csdn.net/l1028386804/article/details/77745277','MySQL之——表数据文件损坏导致数据库无法启动','一、问题日志\n\n2017-08-31 14:18:05 4122 [Note] InnoDB: Database was not shutdown normally!\n2017-08-31 14:18...',41,'csdn/mysql/17_0_1_0_1504235155.096132.html','2017-08-31 13:19','l1028386804',0,'mysql,',1,'http://my.csdn.net/l1028386804',1),(2021,7,'http://blog.csdn.net/dlf123321/article/details/53900378','RedisCluser(v-3.2.0)与Tomcat7的Session整合','一般情况下,一个web系统的架构是类似这样的:\n一个或多个nginx做负载均衡,后面连多个tomcat(或别的类型的web服务器)。\nnginx做负载的时候,关于request的分流,至少就有两种策略...',716,'csdn/redis/1_0_1_0_1504263693.227526.html','2016-12-27 23:39','dlf123321',2,'RedisCluster,Tomcat7,Session,',0,'http://my.csdn.net/dlf123321',1),(2022,4,'http://blog.csdn.net/gatieme/article/details/51005811','进程间通信之-共享内存Shared Memory--linux内核剖析（十一）','共享内存共享内存是进程间通信中最简单的方式之一。共享内存是系统出于多个进程之间通讯的考虑，而预留的的一块内存区。共享内存允许两个或更多进程访问同一块内存，就如同 malloc() 函数向不同进程返回了...',3937,'csdn/linux/1_0_1_0_1504264159.265574.html','2016-03-29 15:11','gatieme',0,'函数,通信,内核,内存,malloc,',0,'http://my.csdn.net/gatieme',1),(2023,2,'http://blog.csdn.net/zjf280441589/article/details/50863787','Spring 实践 -拾遗','Spring 实践标签： Java与设计模式Junit集成前面多次用到@RunWith与@ContextConfiguration,在测试类添加这两个注解,程序就会自动加载Spring配置并初始化Sp...',3946,'csdn/java/1_0_2_0_1504264378.229469.html','2016-03-12 08:52','hanqing280441589',3,'spring,设计模式,java,junit,',3,'http://my.csdn.net/hanqing280441589',1),(2024,2,'http://blog.csdn.net/zjf280441589/article/details/50816802','Spring 实践 -AOP','Spring 实践标签： Java与设计模式AOP引介AOP(Aspect Oriented Programing)面向切面编程采用横向抽取机制,以取代传统的纵向继承体系的重复性代码(如性能监控/事务...',4239,'csdn/java/1_0_2_1_1504264379.277687.html','2016-03-07 08:32','hanqing280441589',1,'spring,设计模式,java,aop,',6,'http://my.csdn.net/hanqing280441589',1),(2025,2,'http://blog.csdn.net/zjf280441589/article/details/50832416','Spring 实践 -IoC','Spring 实践标签： Java与设计模式Spring简介\n  Spring是分层的JavaSE/EE Full-Stack轻量级开源框架.以IoC(Inverse of Control 控制反转)...',3794,'csdn/java/1_0_2_2_1504264380.404581.html','2016-03-09 07:43','hanqing280441589',2,'spring,IoC,设计模式,工厂,java,',9,'http://my.csdn.net/hanqing280441589',1),(2026,4,'http://blog.csdn.net/qq_21127151/article/details/77428631','内核源码阅读（九）进程优先级处理','1.进程优先级内核表示 \n进程的优先级的nice值在-20~+19之间。0~139表示内部优先级，0~99的范围专供实时进程使用。nice值在[-20,+19]映射到100~139之间。如下图所示。 ...',169,'csdn/linux/1_0_1_0_1504264380.637233.html','2017-08-20 14:14','qq_21127151',0,'内核,源码,',0,'http://my.csdn.net/qq_21127151',1),(2027,4,'http://blog.csdn.net/qq_21127151/article/details/77427839','内核源码阅读（八）进程调度器的实现','调度器的任务就是使程序之间共享CPU时间，创造并行执行的假象。其可分为两个方面：一是调度策略；二是上下文切换。 \n1.总览一般原理：按所能分配的计算能力，向系统中每个进程提供最大的公正性。 \n    ...',165,'csdn/linux/1_0_1_1_1504264381.617691.html','2017-08-20 12:26','qq_21127151',0,'内核,源码,linux,',0,'http://my.csdn.net/qq_21127151',1),(2028,2,'http://blog.csdn.net/u013142781/article/details/75647501','Java项目框架搭建系列（Java学习路线）-博客提纲','前言：已经毕业两年，真是时间飞逝。其实当你在一间公司工作一两年之后，公司用到的开发框架的基本使用你应该都会了。你会根据一个现有项目A复制一下搭建出另外一个类似框架的项目B，然后在项目B上进行业务逻辑开...',1230,'csdn/java/1_1_1_0_1504264382.322517.html','2017-07-21 15:41','u013142781',7,'java,框架,开发框架,博客,',8,'http://my.csdn.net/u013142781',1),(2029,4,'http://blog.csdn.net/qq_21127151/article/details/77206118','内核源码阅读（四）进程ID','1）进程ID \n        进程ID，简称PID，是进程在命名空间的唯一表示。 \n        线程组ID：每个进程除了PID这个特征值外，还有线程组ID(TGID)，若没有使用线程，则PID和...',263,'csdn/linux/1_0_1_5_1504264382.642756.html','2017-08-16 00:49','qq_21127151',0,'session,内核,源码,进程,',0,'http://my.csdn.net/qq_21127151',1),(2030,2,'http://blog.csdn.net/u013142781/article/details/50539574','VMware Tools （ubuntu系统）安装详细过程与使用','前一段时间博主在VMware虚拟机上安装了Ubuntu系统，如果还没有安装的同学可以参考博主上一篇文章：VMware Ubuntu安装详细过程。猿友们都知道linux不太好用，如果你想将你主机Wind...',19620,'csdn/java/1_1_1_6_1504264383.275762.html','2016-01-18 22:26','u013142781',2,'ubuntu,vmware,vmwaretool,虚拟机,',13,'http://my.csdn.net/u013142781',1),(2031,4,'http://blog.csdn.net/qq_21127151/article/details/77075312','内核源码阅读（二）进程复制','进程复制\r\n1.三种常见进程复制API:\r\n\r\n\r\n\r\n1）fork()是一个重量级调用，因为它建立了一个父进程的完整副本，然后作为子进程执行。Linux后来采用了写时复制技术对其进行了优化。\r\n\r\n...',64,'csdn/linux/1_0_1_7_1504264383.654236.html','2017-08-11 00:08','qq_21127151',0,'Linux源码,复制进程,',0,'http://my.csdn.net/qq_21127151',1),(2032,2,'http://blog.csdn.net/u013142781/article/details/50316383','Maven入门（含实例教程）','Maven这个个项目管理和构建自动化工具，越来越多的开发人员使用它来管理项目中的jar包。接下来小宝鸽，将从下面几个方向介绍maven：（1）Maven简单介绍 \n（2）Maven安装与配置 \n（3）...',36163,'csdn/java/1_1_1_14_1504264384.185583.html','2015-12-15 15:41','u013142781',8,'eclipse,maven,开发人员,项目管理,自动化,',41,'http://my.csdn.net/u013142781',1),(2033,4,'http://blog.csdn.net/qq_21127151/article/details/77016503','内核源码阅读（一）进程','1.进程分为实时进程和非实时进程。\n        硬实时进程有严格的时间限制，某些任务必须在指定的时限内完成。软实时进程是硬实时进程的一种弱化形式。大多数进程没有特定时间约束的普通进程。CPU时间分...',80,'csdn/linux/1_0_1_8_1504264384.727372.html','2017-08-09 20:51','qq_21127151',0,'task_struct,资源限制机制,进程优先级,',0,'http://my.csdn.net/qq_21127151',1),(2034,2,'http://blog.csdn.net/u013142781/article/details/50421904','Spring中@Transactional事务回滚（含实例详细讲解，附源码）','一、使用场景举例在了解@Transactional怎么用之前我们必须要先知道@Transactional有什么用。下面举个栗子：比如一个部门里面有很多成员，这两者分别保存在部门表和成员表里面，在删除某...',21990,'csdn/java/1_1_1_15_1504264385.270197.html','2015-12-28 22:17','u013142781',3,'spring,事务,实例,源码,异常,',11,'http://my.csdn.net/u013142781',1),(2035,4,'http://blog.csdn.net/qq_21127151/article/details/77172955','内核源码阅读（三）进程命名空间和用户命名的实现','（1）进程的命名空间1.基本概念 \n        传统上Linux及其衍生版的UNIX变体中，许多资源都是全局管理的。例如进程PID和用户的UID等全局ID。为了节约成本并且能够保证用户之间的权限不...',252,'csdn/linux/1_0_1_6_1504264385.799985.html','2017-08-15 00:06','qq_21127151',0,'源码,linux,内核,',0,'http://my.csdn.net/qq_21127151',1),(2036,2,'http://blog.csdn.net/u013142781/article/details/50410243','Maven+Mybatis+Spring+SpringMVC实现分页查询（附源码）','下面小宝鸽将分享一篇Mybatis分页功能的博文,下面将给出详细的步骤，跟着博主的节奏肯定能实现。另外最后还会附上整个工程的源码。如果是没有使用过maven的猿友可自行下载相关的jar包即可。一、项目...',11144,'csdn/java/1_1_1_16_1504264386.259112.html','2015-12-26 21:18','u013142781',4,'spring,mysql,spring mvc,mybatis,maven,',5,'http://my.csdn.net/u013142781',1),(2037,4,'http://blog.csdn.net/qq_21127151/article/details/77348840','内核源码阅读（七）新程序的启动与进程的退出','通过用新代码替换现存程序，即可启动新程序。在Linux下这是通过execve系统调用实现的。 \n该系统调用的入口点是sys_execve函数，然后委托给do_execve函数。其原型如下:kernel...',248,'csdn/linux/1_0_1_2_1504264386.81561.html','2017-08-18 00:48','qq_21127151',0,'内核,源码,',0,'http://my.csdn.net/qq_21127151',1),(2038,2,'http://blog.csdn.net/u013142781/article/details/50380920','Spirng+SpringMVC+Maven+Mybatis+MySQL项目搭建','这篇文章主要讲解使用eclipse对Spirng+SpringMVC+Maven+Mybatis+MySQL项目搭建过程，包括里面步骤和里面的配置文件如何配置等等都会详细说明。如果还没有搭建好环境（主...',17660,'csdn/java/1_1_1_17_1504264387.248106.html','2015-12-22 16:44','u013142781',36,'mysql,spring mvc,mybatis,maven,spring,',44,'http://my.csdn.net/u013142781',1),(2039,4,'http://blog.csdn.net/qq_21127151/article/details/77347158','内核源码阅读（六）内核线程','内核线程 \n内核线程是直接由内核本身启动的进程，也经常称之为守护进程。主要用于执行下列任务：\n周期性地将修改的内存页与页来源块设备同步；\n如果内存页很少使用，则写入交换区；\n管理延时操作；\n实现文件系...',216,'csdn/linux/1_0_1_3_1504264387.861542.html','2017-08-18 00:19','qq_21127151',0,'源码,阅读,内核,线程,',0,'http://my.csdn.net/qq_21127151',1),(2040,2,'http://blog.csdn.net/u013142781/article/details/50529030','VMware Ubuntu安装详细过程','不是每一个程序员都必须玩过linux，只是博主觉得现在的很多服务器都是linux系统的，而自己属于那种前端也搞，后台也搞，对框架搭建也感兴趣，但是很多生产上的框架和工具都是安装在服务器上的，而且有不少...',62530,'csdn/java/1_1_1_7_1504264388.317387.html','2016-01-16 17:47','u013142781',21,'ubuntu,vmware,安装教程,',43,'http://my.csdn.net/u013142781',1),(2041,4,'http://blog.csdn.net/qq_21127151/article/details/77284683','内核源码阅读（五）进程ID','接着上一节我们继续学习进程ID。 \n在上一节中我们提到了node是一个散列表元素，对于这个散列表并未做过多解释，在这里我们给出更加详细的描述。这个散列表是为了在给定的命名空间中查找对应与指定PID数值...',318,'csdn/linux/1_0_1_4_1504264388.683879.html','2017-08-17 00:45','qq_21127151',0,'源码,内核,数据结构,',0,'http://my.csdn.net/qq_21127151',1),(2042,2,'http://blog.csdn.net/u013142781/article/details/50487028','RabbitMQ消息队列入门篇（环境配置+Java实例+基础概念）','一、消息队列使用场景或者其好处消息队列一般是在项目中，将一些无需即时返回且耗时的操作提取出来，进行了异步处理，而这种异步处理的方式大大的节省了服务器的请求响应时间，从而提高了系统的吞吐量。在项目启动之...',13748,'csdn/java/1_1_1_10_1504264389.339141.html','2016-01-09 10:23','u013142781',9,'java,rabbitmq,消息队列,AMQP,Erlang,',26,'http://my.csdn.net/u013142781',1),(2043,2,'http://blog.csdn.net/u013142781/article/details/50387583','Dubbo分布式服务框架入门（附工程）','本文介绍了dubbo的一些概念，并对zookeeper、dubbo-admin、提供者、消费者的搭建进行了详细的讲解，且附有工程源码',18404,'csdn/java/1_1_1_12_1504264390.329236.html','2015-12-23 15:49','u013142781',19,'dubbo,框架,分布式,',10,'http://my.csdn.net/u013142781',1),(2044,2,'http://blog.csdn.net/u013142781/article/details/50388204','mybaits入门（含实例教程和源码）','前言：mybatis是一个非常优秀的存储过程和高级映射的优秀持久层框架。大大简化了，数据库操作中的常用操作。下面将介绍mybatis的一些概念和在eclipse上的实际项目搭建使用。一、mybatis...',11718,'csdn/java/1_1_1_13_1504264391.362608.html','2015-12-23 16:47','u013142781',3,'mybatis,ibatis,持久层框架,存储,jdbc,',7,'http://my.csdn.net/u013142781',1),(2045,2,'http://blog.csdn.net/u013142781/article/details/50395650','Zookeeper注册中心的搭建','Zookeeper是一个分布式的，开放源码的分布式应用程序协调服务，是Google的Chubby一个开源的实现，是Hadoop和Hbase的重要组件。它是一个为分布式应用提供一致性服务的软件，提供的功...',16556,'csdn/java/1_1_1_11_1504264392.448564.html','2015-12-24 17:04','u013142781',4,'zookeeper,分布式应用,分布式,dubbo,',18,'http://my.csdn.net/u013142781',1),(2046,2,'http://blog.csdn.net/u013142781/article/details/50515320','Redis+Spring缓存实例（windows环境，附实例源码及详解）','一、Redis了解1.1、Redis介绍：redis是一个key-value存储系统。和Memcached类似，它支持存储的value类型相对更多，包括string(字符串)、list(链表)、set...',7364,'csdn/java/1_1_1_8_1504264393.335841.html','2016-01-14 10:12','u013142781',10,'spring,redis,windows,',13,'http://my.csdn.net/u013142781',1),(2047,2,'http://blog.csdn.net/u013142781/article/details/50507607','Spring+EhCache缓存实例（详细讲解+源码下载）','一、ehcahe的介绍EhCache 是一个纯Java的进程内缓存框架，具有快速、精干等特点，是Hibernate中默认的CacheProvider。Ehcache是一种广泛使用的开源Java分布式缓...',5172,'csdn/java/1_1_1_9_1504264394.387904.html','2016-01-12 23:56','u013142781',5,'spring,ehcache,java,',7,'http://my.csdn.net/u013142781',1),(2048,2,'http://blog.csdn.net/u013142781/article/details/51307229','到底什么是集群&分布式','对于楼主这样工作一年的菜鸟，是不是会看到一些文章标题带有“分布式”“集群”关键字，然后就觉得自己应该看不懂（如下图）。最近对这些概念进行了一定的了解，整理了一下思路，在这里分享给各位猿友。不足之处还望...',14183,'csdn/java/1_1_1_1_1504264395.253414.html','2016-05-03 19:49','u013142781',3,'分布式,集群,',8,'http://my.csdn.net/u013142781',1),(2049,2,'http://blog.csdn.net/u013142781/article/details/50922010','Java Web前端到后台常用框架介绍','一、SpringMVChttp://blog.csdn.net/evankaka/article/details/45501811Spring Web MVC是一种基于Java的实现了Web MVC设...',15083,'csdn/java/1_1_1_2_1504264396.341853.html','2016-03-18 11:44','u013142781',3,'框架,java,java web,',26,'http://my.csdn.net/u013142781',1),(2050,2,'http://blog.csdn.net/u013142781/article/details/50631663','Spring Security安全框架入门篇','一、Spring Security相关概念1.1.、Spring Security介绍：Spring Security是一个能够为基于Spring的企业应用系统提供声明式的安全访问控制解决方案的安全框...',4681,'csdn/java/1_1_1_3_1504264397.420073.html','2016-02-04 00:02','u013142781',1,'spring security,安全,框架,',4,'http://my.csdn.net/u013142781',1),(2051,2,'http://blog.csdn.net/u013142781/article/details/50629708','Shiro安全框架入门篇（登录验证实例详解与源码）','一、Shiro框架简单介绍Apache Shiro是Java的一个安全框架，旨在简化身份验证和授权。Shiro在JavaSE和JavaEE项目中都可以使用。它主要用来处理身份认证，授权，企业会话管理和...',38034,'csdn/java/1_1_1_4_1504264398.304014.html','2016-02-03 15:23','u013142781',15,'shiro,框架,安全,java,',13,'http://my.csdn.net/u013142781',1),(2052,2,'http://blog.csdn.net/u013142781/article/details/50545522','程序员一年工作经验之谈','将本篇文章放到专栏 Java后台框架系列 里面也是实属无奈，只是为了能分享给更多的猿友，望谅解。今晚本来想写一篇技术博客，由于素材还没有准备好，又刚好写完公司年终总结，博主是15届本科毕业生，加上实习...',6944,'csdn/java/1_1_1_5_1504264399.473761.html','2016-01-19 23:18','u013142781',23,'java,工作,经验,程序员,',43,'http://my.csdn.net/u013142781',1),(2053,2,'http://blog.csdn.net/zjf280441589/article/details/56669806','迭代器模式','迭代器模式: 提供一种方法顺序访问聚合对象(如List、Set)内的每个元素, 而又不暴露聚合对象的内部实现. \n   \n- 可复用面向对象软件的基础',2325,'csdn/java/1_0_1_0_1504264402.417503.html','2017-02-23 13:20','hanqing280441589',1,'迭代器,设计模式,封装,聚合,访问,',3,'http://my.csdn.net/hanqing280441589',1),(2054,2,'http://blog.csdn.net/zjf280441589/article/details/52484327','观察者模式','观察者模式标签 ： Java与设计模式\n  观察者模式: 又称‘发布-订阅’模式, 定义一种对象间的一对多依赖关系(多个观察者Observer监听某一主题Subject). 当主题状态发生改变时,所有...',2949,'csdn/java/1_0_1_8_1504264403.443837.html','2016-09-09 09:48','hanqing280441589',4,'观察者,EventBus,Disruptor,Observer,触发联动,',3,'http://my.csdn.net/hanqing280441589',1),(2055,2,'http://blog.csdn.net/zjf280441589/article/details/50364975','建造者模式','建造者模式: 又称生成器模式, 可以将一个产品的内部表象与产品的生成过程分割开来, 从而可以使一个建造过程生成具有不同的内部表象的产品(将一个复杂对象的构建与它的表示分离, 使得同样的构建过程可以创建...',1770,'csdn/java/1_0_1_16_1504264404.533823.html','2015-12-20 17:43','hanqing280441589',8,'设计模式,建造者,Java,复杂对象,过程稳定,',4,'http://my.csdn.net/hanqing280441589',1),(2056,2,'http://blog.csdn.net/zjf280441589/article/details/50364943','原型模式','原型模式标签： Java与设计模式\n  原型模式 \n  用原型实例指定创建对象的种类, 并通过拷贝这些原型创建新的对象.\n原型模式就是通过一个对象再创建另一个可定制的对象, 而且不需要知道任何创建的细...',1569,'csdn/java/1_0_1_17_1504264405.610795.html','2015-12-20 17:38','hanqing280441589',3,'设计模式,java,原型模式,实例,创建型,',2,'http://my.csdn.net/hanqing280441589',1),(2057,2,'http://blog.csdn.net/zjf280441589/article/details/50282773','工厂模式','工厂模式标签： Java与设计模式\n  工厂模式 \n  用工厂方法代替了new操作, 将选择实现类, 创建对象统一管理和控制.从而将调用者(Client)与实现类进行解耦.实现了创建者与调用者分离;使...',2796,'csdn/java/1_0_1_18_1504264406.537905.html','2015-12-13 14:15','hanqing280441589',9,'工厂模式,java,设计模式,创建模式,',9,'http://my.csdn.net/hanqing280441589',1),(2058,2,'http://blog.csdn.net/zjf280441589/article/details/50235937','单例模式','static, enum, 内部类与单例模式标签： Java与设计模式Java static与初始化块拾忆\n  static关键字的作用是把类的成员变成类相关,而不是实例相关.普通初始化块\n  当Ja...',3519,'csdn/java/1_0_1_19_1504264407.594785.html','2015-12-09 14:26','hanqing280441589',5,'java,设计模式,enum,单例,',12,'http://my.csdn.net/hanqing280441589',1),(2059,4,'http://blog.csdn.net/yuzhihui_no1/article/details/42386915','x86架构中的保护模式','在x86架构中所谓保护模式其实就是段的存储方式能够达到一种保护机制。也正因为有了保护模式（段的存储方式）所以才会有特权模式，以及后面的多任务之说；\n        在实模式下段的存储很简单，就是代表一...',1303,'csdn/linux/1_0_2_0_1504264408.060921.html','2015-01-04 09:38','YuZhiHui_No1',1,'操作系统,汇编语言,x86汇编,',0,'http://my.csdn.net/YuZhiHui_No1',1),(2060,2,'http://blog.csdn.net/zjf280441589/article/details/52420929','外观模式','外观模式标签 ： Java与设计模式\n  外观模式: 又称门面模式: 外观Facade为子系统的一组接口提供一个一致界面,使得这组子系统易于使用(通过引入一个新的外观角色降低原系统复杂度,同时降低客户...',2590,'csdn/java/1_0_1_9_1504264408.638618.html','2016-09-03 06:53','hanqing280441589',2,'设计模式,界面,外观,Facade,门面,',1,'http://my.csdn.net/hanqing280441589',1),(2061,4,'http://blog.csdn.net/yuzhihui_no1/article/details/41749443','x86汇编--程序加载器','加载器程序就是如何把一个程序从磁盘上加载到内存空间执行：\n步骤思考（实模式下的加载器）：\n        第一、确定从磁盘哪个扇区中加载，以及加载到内存中的什么地方；\n        第二、最基本的设...',1509,'csdn/linux/1_0_2_1_1504264409.136242.html','2014-12-05 16:32','YuZhiHui_No1',0,'x86汇编,操作系统,加载器,',0,'http://my.csdn.net/YuZhiHui_No1',1),(2062,2,'http://blog.csdn.net/zjf280441589/article/details/52343557','装饰者模式','装饰者模式(Decorator): 又称包装器(Wrapper), 可以动态地为一个对象添加一些额外的职责. 就增加功能来说, 装饰者模式是一种用于替代继承的技术, 他无须通过增加子类继承就能扩展对象...',2092,'csdn/java/1_0_1_12_1504264409.581979.html','2016-08-28 08:17','hanqing280441589',2,'设计模式,扩展,继承,对象,java,',6,'http://my.csdn.net/hanqing280441589',1),(2063,4,'http://blog.csdn.net/yuzhihui_no1/article/details/41869291','x86汇编--RTC中断（时间显示器）','可以用前一篇操作系统内核加载器（x86汇编）的加载器来加载这个RTC中断程序，就可以显示时间了。',1238,'csdn/linux/1_0_2_2_1504264409.90012.html','2014-12-11 17:03','YuZhiHui_No1',0,'x86汇编,RTC中断,操作系统,',0,'http://my.csdn.net/YuZhiHui_No1',1),(2064,2,'http://blog.csdn.net/zjf280441589/article/details/50411737','代理模式','代理模式标签： Java与设计模式代理模式\n  为其他对象提供一种代理以控制对这个对象的访问(可以详细控制访问某个对象的方法, 在调用这个方法[前/后]做[前/后]置处理, 从而实现将统一流程放到代理...',2603,'csdn/java/1_0_1_14_1504264410.542722.html','2015-12-27 11:27','hanqing280441589',11,'设计模式,代理模式,java,事务,',7,'http://my.csdn.net/hanqing280441589',1),(2065,4,'http://blog.csdn.net/yuzhihui_no1/article/details/42191087','x86汇编--微内核设计','微内核程序：微内核程序就稍微复杂点了，还是按步骤分析下：1、设计一个打印例程，就是把字符串打印到屏幕终端，用来显示一些提示信息；2、后面都是用来加载用户程序了，其实说到底微内核就是为各个用户程序提供环...',931,'csdn/linux/1_0_2_4_1504264411.003738.html','2014-12-27 10:03','YuZhiHui_No1',0,'操作系统,微内核,32位保护模式,汇编,',0,'http://my.csdn.net/YuZhiHui_No1',1),(2066,4,'http://blog.csdn.net/yuzhihui_no1/article/details/42028965','x86汇编--保护模式下的冒泡排序','其实这个代码本身（冒泡排序）没有什么意思，而有用的是怎么从实模式下进入保护模式，以及怎么 使用段选择子和段描述符。',1022,'csdn/linux/1_0_2_3_1504264411.049416.html','2014-12-19 15:55','YuZhiHui_No1',0,'x86汇编,32位保护模式,冒泡排序,',0,'http://my.csdn.net/YuZhiHui_No1',1),(2067,2,'http://blog.csdn.net/zjf280441589/article/details/50405070','适配器模式','适配器模式标签： Java与设计模式结构型模式\n  在解决了对象的创建问题之后，对象的组成以及对象之间的依赖关系就成了开发人员关注的焦点，因为如何设计对象的结构、继承和依赖关系会影响到后续程序的维护性...',1851,'csdn/java/1_0_1_15_1504264411.680154.html','2015-12-25 20:07','hanqing280441589',2,'java,适配器模式,设计模式,开发人员,',2,'http://my.csdn.net/hanqing280441589',1),(2068,2,'http://blog.csdn.net/zjf280441589/article/details/50491260','桥接模式','桥接模式标签： Java与设计模式场景在商城系统中商品是分类摆放的,以电脑为例我们有以下商品分类, 该如何良好的处理商品分类销售的问题: \n直观上我们会认为该商品分类以继承来实现:电脑作为根类,台式机...',1492,'csdn/java/1_0_1_13_1504264411.836239.html','2016-01-10 09:48','hanqing280441589',1,'桥接模式,java,设计模式,',4,'http://my.csdn.net/hanqing280441589',1),(2069,2,'http://blog.csdn.net/zjf280441589/article/details/52410509','组合模式','组合模式标签 ： Java与设计模式\n  组合模式: 将对象组合成树形结构以表示‘部分-整体’的层次结构, 使得用户对单个对象和组合对象的使用具有一致性.解析 \n组合模式描述了如何将容器和叶子节点进行...',1194,'csdn/java/1_0_1_10_1504264412.817709.html','2016-09-02 06:18','hanqing280441589',1,'设计模式,树形结构,Composite,容器,Leaf,',1,'http://my.csdn.net/hanqing280441589',1),(2070,2,'http://blog.csdn.net/zjf280441589/article/details/52350085','中介者模式','中介者模式标签 ： Java与设计模式面向对象设计鼓励将行为分布到各个对象中, 这种分布可能会导致对象间有许多连接. 在最坏的情况下, 每一个对象都需要知道其他所有对象. \n虽然将一个系统分割成许多对...',2069,'csdn/java/1_0_1_11_1504264413.581088.html','2016-08-29 09:07','hanqing280441589',4,'中介者,聚合,设计模式,对象群,Mediator,',3,'http://my.csdn.net/hanqing280441589',1),(2071,2,'http://blog.csdn.net/zjf280441589/article/details/55509942','备忘录模式','备忘录模式标签 ： Java与设计模式\n  备忘录模式: 在不破坏封装性的前提下, 捕获一个对象的内部状态( or 拷贝), 并在该对象之外保存这个状态, 这样以后就可 将该对象恢复到原先保存的状态....',1260,'csdn/java/1_0_1_1_1504264414.643844.html','2017-02-17 14:34','hanqing280441589',4,'设计模式,面向对象,状态恢复,游戏进度保存,属性序列化,',1,'http://my.csdn.net/hanqing280441589',1),(2072,4,'http://blog.csdn.net/frogoscar/article/details/50450135','【Linux探索之旅】第四部分第五课：源码编译，安装便利','这一课相对轻松，毕竟刚跨年（2015-2016）么，新年怎么能让大家一个头两个大呢~ 小编怎么可能这么坏呢？小编是这样的人吗？（是啊 -_-#）。我们一步步来探究软件的编译。',782,'csdn/linux/1_1_1_0_1504264415.312715.html','2016-01-03 03:43','frogoscar',0,'编译,程序员联盟,程序员,编程,programmerleague,',1,'http://my.csdn.net/frogoscar',1),(2073,2,'http://blog.csdn.net/zjf280441589/article/details/53844305','责任链模式','责任链模式\n将能够处理某一类请求的对象串成一条链, 请求沿链传递, 链上的对象逐个判断是否有能力处理该请求. 使多个对象都有机会处理请求, 从而避免请求发送者和接收者之间的耦合关系.  \n\n  优势:...',1292,'csdn/java/1_0_1_2_1504264415.743141.html','2016-12-23 21:57','hanqing280441589',6,'设计模式,责任流转,升职加薪的流转流程,动态担责,',3,'http://my.csdn.net/hanqing280441589',1),(2074,4,'http://blog.csdn.net/frogoscar/article/details/48470871','【Linux探索之旅】第三部分第三课：监视系统活动，滴水不漏','放眼现在的操作系统，基本都是多任务操作系统了，Linux当然也不例外。因此，Linux可以管理多个同时运行的程序。\n\n通过之前的课程（《【Linux探索之旅】第二部分第五课：用户和权限，有权就任性》）...',995,'csdn/linux/1_1_1_8_1504264416.039383.html','2015-09-15 17:44','frogoscar',0,'编程,操作系统,ProgrammerLeague,程序员联盟,Linux,',0,'http://my.csdn.net/frogoscar',1),(2075,2,'http://blog.csdn.net/zjf280441589/article/details/53339028','状态模式','允许一个对象在其内部状态改变时改变其行为, 其对象看起来像是改变了其类. \n 解决系统中复杂对象的状态流转以及不同状态下的行为封装问题.\n(来源: 设计模式:可复用面向对象软件的基础)',2427,'csdn/java/1_0_1_4_1504264416.857213.html','2016-11-25 19:08','hanqing280441589',3,'设计模式,状态模式,状态推动,阿里Kelude,状态机,',0,'http://my.csdn.net/hanqing280441589',1),(2076,4,'http://blog.csdn.net/frogoscar/article/details/48205689','【Linux探索之旅】第二部分第九课：查找文件，无所遁形','之前的课程我们见识过了Linux下文件的组织形式是很特别的，跟Windows不一样。\n\n我们也用ls / 这个命令来列出根目录下的所有目录，有/bin，/etc，/var，/home，等等。而这些目录...',936,'csdn/linux/1_1_1_12_1504264417.343792.html','2015-09-04 05:49','frogoscar',0,'Linux,操作系统,程序员联盟,程序员,ProgrammerLeague,',0,'http://my.csdn.net/frogoscar',1),(2077,2,'http://blog.csdn.net/zjf280441589/article/details/52774153','命令模式','在对象的结构和创建问题都解决了之后,就剩下对象的行为问题了: 如果对象的行为设计的好,那么对象的行为就会更清晰,它们之间的协作效率就会提高. \n  行为型模式共有11个可供研究,它们分别是:命令模式、...',3114,'csdn/java/1_0_1_6_1504264417.688749.html','2016-10-10 07:28','hanqing280441589',1,'设计模式,java,Command,Receiver,Invoker,',1,'http://my.csdn.net/hanqing280441589',1),(2078,4,'http://blog.csdn.net/frogoscar/article/details/48205575','【Linux探索之旅】第二部分第七课：软件安装，如虎添翼','一般提到软件安装，有过Windows系统使用经验的朋友肯定会深有体会，那个麻烦啊，大致流程是这样的：\n\n在搜索引擎（比如百度或google）中搜索我们的软件名称。\n看到一个不错的结果，点击进入。如果是...',902,'csdn/linux/1_1_1_14_1504264418.08233.html','2015-09-04 05:14','frogoscar',0,'Linux,操作系统,程序员联盟,程序员,ProgrammerLeague,',1,'http://my.csdn.net/frogoscar',1),(2079,2,'http://blog.csdn.net/zjf280441589/article/details/52592421','享元模式','享元模式标签 ： Java与设计模式\n  内存属于稀缺资源, 不能随便浪费. 如果有很多相同/相似的对象, 我们可以通过享元节省内存.\n内部状态 vs. 外部状态\n  享元模式(Flyweight):...',3028,'csdn/java/1_0_1_7_1504264418.595442.html','2016-09-20 07:47','hanqing280441589',2,'享元,内存,设计模式,共享,外部状态,',2,'http://my.csdn.net/hanqing280441589',1),(2080,4,'http://blog.csdn.net/frogoscar/article/details/48099491','【Linux探索之旅】第二部分第六课：Nano，初学者的文本编辑器','这一课比较简单，没有什么太难的概念。不过这一课会讲如何配置终端噢。\n\n大家可以泡个泡面，烤只烤鸡；剥个卤蛋，慢慢来看。\n\n之前的课程中，我们已经学会了在终端中用多种不同的方式来查看文件的内容，但是我们...',1371,'csdn/linux/1_1_1_15_1504264419.247549.html','2015-08-30 03:26','frogoscar',0,'Linux,操作系统,程序员联盟,Nano,ProgrammerLeague,',1,'http://my.csdn.net/frogoscar',1),(2081,2,'http://blog.csdn.net/zjf280441589/article/details/52831029','模板方法模式','定义一个操作中的算法的骨架, 而将一些步骤延迟到子类中. 模板方法使得子类可以在不改变一个算法的结构的前提下重定义该算法的某些特定步骤. \n \n处理某个流程的骨架代码已经具备, 但其中某节点的具体实现...',2926,'csdn/java/1_0_1_5_1504264419.681913.html','2016-10-16 16:18','hanqing280441589',1,'模板方法模式,算法骨架,代码复用,统一定时调度,Servlet,',5,'http://my.csdn.net/hanqing280441589',1),(2082,4,'http://blog.csdn.net/frogoscar/article/details/47742147','【Linux探索之旅】第二部分第二课：命令行，世界尽在掌握','今天的标题是不是有点霸气侧漏呢？\n\n读者：“小编，你为什么每次都要起这么非主流的标题呢？不能愉快地玩耍么？”\n小编：“那我问你，老子他为什么要写《道德经》咧？”\n读者：“为什么咧？”\n小编：“因为老子...',994,'csdn/linux/1_1_1_19_1504264420.025231.html','2015-08-18 02:48','frogoscar',0,'命令行,Linux,程序员,程序员联盟,ProgrammerLeague,',1,'http://my.csdn.net/frogoscar',1),(2083,2,'http://blog.csdn.net/zjf280441589/article/details/53543049','策略模式','Java与设计模式: 定义一系列的算法, 将其一个个封装起来, 并使它们可相互替换, 使得算法可独立于使用它的客户而变化.  \n \n  策略模式对应于解决某一问题的一个算法族, 允许用户从该算法族中任...',940,'csdn/java/1_0_1_3_1504264420.809085.html','2016-12-09 18:47','hanqing280441589',2,'策略模式,设计模式,算法族,解决问题,',1,'http://my.csdn.net/hanqing280441589',1),(2084,4,'http://blog.csdn.net/frogoscar/article/details/48205603','【Linux探索之旅】第二部分第八课：RTFM 阅读那该死的手册','一般Windows的用户不太习惯看使用手册。有些Windows下的软件下载后是带有使用手册的，但是谁会花时间看呢？\n\n在Linux下，阅读手册应该成为一个反射动作，一个自然而然的反应。虽说一开始要我们...',908,'csdn/linux/1_1_1_13_1504264421.356451.html','2015-09-04 05:28','frogoscar',0,'Linux,操作系统,程序员联盟,程序员,ProgrammerLeague,',0,'http://my.csdn.net/frogoscar',1),(2085,4,'http://blog.csdn.net/frogoscar/article/details/48432381','【Linux探索之旅】第三部分第二课：流、管道、重定向，三管齐下','这一课我们来学一些非常有用的内容，而且相当有意思，而且内容很多，而且有可能颠覆你的三《观》（毕竟三管齐下，不颠覆三观也难）。今天的标题中的三个名称，听上去就怪怪的。什么流，管道，重定向，都啥玩意啊。不...',1347,'csdn/linux/1_1_1_9_1504264422.513841.html','2015-09-14 03:33','frogoscar',0,'Linux,重定向,程序员联盟,流,管道,',0,'http://my.csdn.net/frogoscar',1),(2086,4,'http://blog.csdn.net/frogoscar/article/details/48308013','【Linux探索之旅】第三部分第一课：数据处理，慢条斯理','哈哈，终于到了第三部分了。不知不觉两个部分已经学完了，可喜可贺，掌声给自己！\n\n此时读者内心独白：“我想静静，也不要问我小编是谁。”\n\n好了好了，小编重回淡定。咳咳，看到今天的标题应该会对这一课的内容...',1032,'csdn/linux/1_1_1_10_1504264422.979924.html','2015-09-09 04:08','frogoscar',0,'Linux,操作系统,程序员联盟,程序员,ProgrammerLeague,',0,'http://my.csdn.net/frogoscar',1),(2087,4,'http://blog.csdn.net/frogoscar/article/details/48205707','【Linux探索之旅】第二部分测试题','10道测试题，测测掌握得如何。',979,'csdn/linux/1_1_1_11_1504264424.461559.html','2015-09-04 05:53','frogoscar',0,'Linux,操作系统,程序员联盟,程序员,ProgrammerLeague,',0,'http://my.csdn.net/frogoscar',1),(2088,2,'http://blog.csdn.net/hncu1306602liuqiang/article/details/53184109','使用AJAX技术做一个无页面刷新的会员登录功能--解决中文乱码','使用双重编码和双重解码。',146,'csdn/java/1_3_1_0_1504264424.851471.html','2016-11-16 10:44','hncu1306602liuqiang',0,'ajax+servlet解决中文乱码,java,',0,'http://my.csdn.net/hncu1306602liuqiang',1),(2089,4,'http://blog.csdn.net/frogoscar/article/details/50446586','【Linux探索之旅】第四部分第四课：分析网络，隔离防火','俗语说得好：爱国爱家爱师妹!  防火防盗防师兄！\n\n\n虽然说，Linux本身很安全，至少比Windows安全多了。你看Linux发行版哪有安装杀毒软件的，同样基于修改的Unix系统的苹果的Mac OS...',1243,'csdn/linux/1_1_1_1_1504264425.395543.html','2016-01-02 04:03','frogoscar',0,'linux,防火墙,iptables,netstat,ifconfig,',1,'http://my.csdn.net/frogoscar',1),(2090,2,'http://blog.csdn.net/hncu1306602liuqiang/article/details/53184405','数据库基本sql语句','mysql的基本语句，由于本人不是经常写，于是开个博客给自己记录，方便以后查看，也希望能给大家带来方便！',163,'csdn/java/1_3_1_1_1504264425.647223.html','2016-11-16 11:12','hncu1306602liuqiang',0,'mysql,',0,'http://my.csdn.net/hncu1306602liuqiang',1),(2091,4,'http://blog.csdn.net/frogoscar/article/details/49305983','【Linux探索之旅】第四部分第一课：压缩文件，解压无压力','最近小编因为换工作，从南法搬到巴黎。折腾了很久。\n网络一直用的是公共的无线网，信号不行。无线上网的box盒子已经说通网了，但我觉得墙上的线有问题。反正就是用不了自己的告诉WiFI盒子。\n而且还要继续找...',1023,'csdn/linux/1_1_1_4_1504264426.428432.html','2015-10-21 16:20','frogoscar',1,'Linux,操作系统,程序员联盟,tar,压缩,',2,'http://my.csdn.net/frogoscar',1),(2092,2,'http://blog.csdn.net/hncu1306602liuqiang/article/details/53432918','java类反射读取项目内的文件','文件加载的一点心得，希望能给大家带来帮助。',527,'csdn/java/1_3_1_2_1504264426.832455.html','2016-12-02 11:56','hncu1306602liuqiang',0,'java,文件加载,',0,'http://my.csdn.net/hncu1306602liuqiang',1),(2093,4,'http://blog.csdn.net/frogoscar/article/details/48617837','【Linux探索之旅】第三部分第五课：延时执行，唯慢不破','到目前为止，我们所运行的命令都是立即执行，也就是我们按下回车键的那一刻，命令就开始执行了。\n其实Linux中命令还可以延时执行。这一课我们就来学习几个命令，可以帮助我们《稍后》执行程序。比如我们即将学...',1182,'csdn/linux/1_1_1_6_1504264427.207673.html','2015-09-21 03:01','frogoscar',0,'Linux,操作系统,程序员联盟,ProgrammerLeague,延时执行,',1,'http://my.csdn.net/frogoscar',1),(2094,4,'http://blog.csdn.net/frogoscar/article/details/48540245','【Linux探索之旅】第三部分第四课：后台运行及合并多个终端','我们使用的终端让我们难免有一种感觉：我们每次只能在一个终端中运行一个进程。但其实这是大错特错的。\n\n终端还可以运行后台进程。要使进程一个在后台运行，有几种方法，我们都将学习。\n\n这一课的第三节还将学习...',1372,'csdn/linux/1_1_1_7_1504264428.196223.html','2015-09-18 06:49','frogoscar',0,'Linux,后台运行,操作系统,程序员联盟,程序员,',0,'http://my.csdn.net/frogoscar',1),(2095,4,'http://blog.csdn.net/frogoscar/article/details/48618691','【Linux探索之旅】第三部分测验题','第三部分测试题，共10题。如果做对5题以下请回炉重造。。。',942,'csdn/linux/1_1_1_5_1504264429.209585.html','2015-09-21 03:24','frogoscar',0,'Linux,操作系统,程序员联盟,测试题,ProgrammerLeague,',0,'http://my.csdn.net/frogoscar',1),(2096,4,'http://blog.csdn.net/frogoscar/article/details/50436203','【Linux探索之旅】第四部分第三课：文件传输，潇洒同步','我们继续探究Linux的奇幻网络世界。这个网络世界比较特别，也许你已经有所体会：前辈们做了大量努力，靠加密方法来保证网络间传输的数据的安全，以防我们私人的信息泄露，例如密码。\n\n\n这一课我们来学习文件...',1208,'csdn/linux/1_1_1_2_1504264430.193949.html','2015-12-30 17:42','frogoscar',0,'Linux,rsync,ftp,程序员联盟,programmerleague,',1,'http://my.csdn.net/frogoscar',1),(2097,4,'http://blog.csdn.net/frogoscar/article/details/50420568','【Linux探索之旅】第四部分第二课：SSH连接，安全快捷','这一课的内容肯定会让你大呼过瘾，也许是《Linux探索之旅》中到目前为止最有意思的课之一。 我们会聊很多内容，会学习如何连接到远程的一台安装有Linux的机器。 我们不仅仅会学习如何远程连接到Linu...',1486,'csdn/linux/1_1_1_3_1504264431.418579.html','2015-12-28 18:23','frogoscar',0,'Linux,SSH,putty,程序员联盟,programmerleague,',1,'http://my.csdn.net/frogoscar',1),(2098,4,'http://blog.csdn.net/frogoscar/article/details/47882761','【Linux探索之旅】第二部分第五课：用户和权限，有权就任性','今天的标题也挺任性的啊，虽说小编是一个很本分的人（真的吗），起这种标题也是情非得已。\n\n第二部分的前几课我们讲解了终端，命令行，文件和目录，文件操作。都算是Linux的重要基础。\n\n这一课我们来讲一个...',1841,'csdn/linux/1_1_1_16_1504264432.483683.html','2015-08-23 03:27','frogoscar',1,'linux,权限,操作系统,ProgrammerLeague,程序员联盟,',1,'http://my.csdn.net/frogoscar',1),(2099,4,'http://blog.csdn.net/frogoscar/article/details/47744335','【Linux探索之旅】第二部分第三课：文件和目录，组织不会亏待你','上一次课我们讲了命令行，这将成为伴随我们接下来整个Linux课程的一个重要部分。\n\n大宝啊明天见，命令行啊天天见~\n\n今天的标题里的那句“组织不会亏待你”，不是说Linux社群是个非*法组织，不*良帮...',1151,'csdn/linux/1_1_1_18_1504264433.66917.html','2015-08-18 04:51','frogoscar',0,'Linux,操作系统,程序员联盟,程序员,ProgrammerLeague,',1,'http://my.csdn.net/frogoscar',1),(2100,4,'http://blog.csdn.net/frogoscar/article/details/47744777','【Linux探索之旅】第二部分第四课：文件操纵，鼓掌之中','既然上一课我们学习了Linux中的文件组织方式，那么现在就该是玩弄，啊不，是操纵它们的时候了。\n\n文件操作有哪些呢？一般就是显示文件内容啦，还有拷贝文件，移动文件，删除文件，等等。\n\n这一课我们还会学...',1189,'csdn/linux/1_1_1_17_1504264434.418051.html','2015-08-18 05:11','frogoscar',0,'Linux,操作系统,程序员联盟,程序员,ProgrammerLeague,',3,'http://my.csdn.net/frogoscar',1),(2101,2,'http://blog.csdn.net/doctor_who2004/article/details/52081308','java设计模式之单例模式（Singleton pattern）','java设计模式之单例模式（Singleton pattern）\n\n\n单例模式的定义：\nSingleton pattern restricts the instantiation of a class...',1082,'csdn/java/1_0_1_0_1504264441.245252.html','2016-08-01 12:42','doctor_who2004',0,'java单例,Singleton pattern,',1,'http://my.csdn.net/doctor_who2004',1),(2102,4,'http://blog.csdn.net/yuzhihui_no1/article/details/43898651','Linux内核源码分析--文件系统（四、Bitmap.c）','总结的来说其实Bitmap.c程序就是操作文件系统中的两个位图：i节点位图和逻辑块位图；拿逻辑块位图来说吧，申请一个新的逻辑块时，首先是在8块逻辑块位图中查找一个空闲的比特位，找到以后转换成逻辑块号，...',1372,'csdn/linux/1_0_1_0_1504264441.510516.html','2015-02-21 16:17','YuZhiHui_No1',0,'Linux内核源码,操作系统,文件系统,高速缓存,',0,'http://my.csdn.net/YuZhiHui_No1',1),(2103,2,'http://blog.csdn.net/doctor_who2004/article/details/54234127','接口型设计模式（Interface patterns）之adapter（适配器）','接口型设计模式（Interface patterns）之adapter（适配器）\n\n\nThe intent of\nADAPTER is to provide the interface that a ...',320,'csdn/java/1_0_1_1_1504264442.335647.html','2017-01-08 17:44','doctor_who2004',0,'adapter pattern,适配器模式,',0,'http://my.csdn.net/doctor_who2004',1),(2104,4,'http://blog.csdn.net/yuzhihui_no1/article/details/43231869','Linux 新内核中主次设备号范围','作者：李强,华清远见嵌入式学院讲师。\r\n\r\n     设备驱动中，设备号设一个很重要的概念和变量。不论是主设备号，还是次设备号，在设备驱动中都占据了很重要的地位。那么他在Kernel中是如何操作的？这...',631,'csdn/linux/1_0_1_5_1504264442.518723.html','2015-01-28 15:58','YuZhiHui_No1',0,'操作系统,内存管理,驱动,设备号,',0,'http://my.csdn.net/YuZhiHui_No1',1),(2105,2,'http://blog.csdn.net/doctor_who2004/article/details/54233834','接口型设计模式（Interface  patterns）','接口型设计模式（Interface  patterns）\nInterface-oriented patterns address contexts in which you need to defin...',359,'csdn/java/1_0_1_2_1504264443.454268.html','2017-01-08 15:27','doctor_who2004',0,'设计模式,',0,'http://my.csdn.net/doctor_who2004',1),(2106,4,'http://blog.csdn.net/yuzhihui_no1/article/details/42806245','BCD码转换成二进制和ASCII码','BCD码转换成二进制和ASCII码；用BCD码表示：十位上的十进制数为 2 == BCD码表示为 0010；个位上的十进制数9 === BCD码表示为 1001；所以总的来说 十进制数 29 用BCD...',3980,'csdn/linux/1_0_1_9_1504264443.488212.html','2015-01-17 16:32','YuZhiHui_No1',0,'操作系统,汇编语言,进制转换,',0,'http://my.csdn.net/YuZhiHui_No1',1),(2107,4,'http://blog.csdn.net/yuzhihui_no1/article/details/42713439','C程序代码中内嵌as汇编（三、跳转）','在内联汇编中使用跳转语句是非常常见的，比如：比较两个数，返回较大数时，就会用到跳转；先看下汇编和运行结果，然后再一步步分析下：\n                      \n\n        运行结果...',1139,'csdn/linux/1_0_1_11_1504264444.63901.html','2015-01-14 18:16','YuZhiHui_No1',0,'操作系统,汇编语言,C代码内嵌汇编,',0,'http://my.csdn.net/YuZhiHui_No1',1),(2108,4,'http://blog.csdn.net/yuzhihui_no1/article/details/42712297','C程序代码中内嵌as汇编（二、占位符）','本篇blog只给几个例题来进行快速学习内嵌as汇编。\n        第一、输入参数中包含输出参数\n #include\n \n int main(void)\n {\n     char string1[]...',915,'csdn/linux/1_0_1_12_1504264445.78145.html','2015-01-14 16:59','YuZhiHui_No1',0,'操作系统,汇编语言,C代码内嵌汇编,',0,'http://my.csdn.net/YuZhiHui_No1',1),(2109,4,'http://blog.csdn.net/yuzhihui_no1/article/details/42744151','C程序代码中内嵌as汇编（四、宏函数）','先来回忆下C语言中宏是怎么定义的，最基本的是定义常量：#define MAX_LEN 1024  这是最简单的常数宏定义，其中宏名按规定是要大写的，宏名在预编译时会由后面的值替代掉（预编译四大步骤：1...',1029,'csdn/linux/1_0_1_10_1504264446.797558.html','2015-01-16 15:15','YuZhiHui_No1',0,'操作系统,汇编语言,C代码内嵌汇编,',0,'http://my.csdn.net/YuZhiHui_No1',1),(2110,4,'http://blog.csdn.net/yuzhihui_no1/article/details/42584283','as汇编基础程序设计--gdb调试汇编','开始命令：gdb  test；\n        设置断点：break *_start  + 1（cpu运行到 _start+1 的地址上会停止，break可以简写b）\n        开始运行：run...',924,'csdn/linux/1_0_1_16_1504264447.632803.html','2015-01-10 17:08','YuZhiHui_No1',0,'操作系统,汇编语言,ATT汇编,gdb,',0,'http://my.csdn.net/YuZhiHui_No1',1),(2111,4,'http://blog.csdn.net/yuzhihui_no1/article/details/43058405','Linux内核源码分析--内存管理（二、函数实现技巧）','仔细的分析了一下各个内存管理函数的实现，发现里面涉及到了几个技巧，如果知道了这几个技巧，那么阅读内存管理源码将会事半功倍（主要是这几个技巧在几个函数中都出现过），当然也会选择性的分析几个比较重要的函数...',1269,'csdn/linux/1_0_1_6_1504264448.635831.html','2015-01-23 17:33','YuZhiHui_No1',0,'Linux内核,内存管理,分页机制,c语言,',1,'http://my.csdn.net/YuZhiHui_No1',1),(2112,4,'http://blog.csdn.net/yuzhihui_no1/article/details/43021405','Linux内核源码分析--内存管理（一、分页机制）','最开始的地方是在head汇编中，如果看boot中那三个汇编的应该记得（那三个汇编还是比较重要的）。首先是分页机制，在CR0的第31位(PG位)置1表示开启分页机制，顺便也介绍下其他几个控制寄存器：CR...',1676,'csdn/linux/1_0_1_7_1504264449.53965.html','2015-01-22 16:30','YuZhiHui_No1',4,'Linux内核,操作系统,内存管理,分页机制,',2,'http://my.csdn.net/YuZhiHui_No1',1),(2113,4,'http://blog.csdn.net/yuzhihui_no1/article/details/42888237','Linux内核源码分析--系统时间初始化（kernel_mktime()函数）','从boot文件中的几个汇编程序执行后跳转到init文件中的main.c程序开始继续执行，该main.c函数式为系统运行的环境进行初始化的。首先来看系统时间的初始化（因为系统时间的初始化开始程序就在in...',1347,'csdn/linux/1_0_1_8_1504264450.684202.html','2015-01-19 23:14','YuZhiHui_No1',0,'操作系统,Linux内核,c语言,汇编语言,',0,'http://my.csdn.net/YuZhiHui_No1',1),(2114,4,'http://blog.csdn.net/yuzhihui_no1/article/details/43734663','全面解析C语言中可变参数列表','全面解析c语言中可变参数列表问题：1、大众版：大家习惯的使用方式；2、真实版：真正的使用方式；3、实际原理：具体原理，本质；4、自己实现可变参数列表：理解本质后，自己用自己的方法来实现可变参数列表；5...',3139,'csdn/linux/1_0_1_1_1504264451.726431.html','2015-02-11 15:27','YuZhiHui_No1',1,'Linux内核源码,可变参数列表,内存分配,指针,',2,'http://my.csdn.net/YuZhiHui_No1',1),(2115,4,'http://blog.csdn.net/yuzhihui_no1/article/details/43703153','Linux内核源码分析--文件系统（三、buffer.c）','前面已经大概的分析了下高速缓存区相关知识，这里再来分析下几个重要的函数；1、清缓存：把缓存区数据和设备进行同步；   2、缓存块插入到双链表/hash链表中，从双链表/hash链表中删除缓存块；   ...',1425,'csdn/linux/1_0_1_2_1504264452.832813.html','2015-02-10 14:52','YuZhiHui_No1',0,'Linux内核源码,操作系统,文件系统,高速缓存,',0,'http://my.csdn.net/YuZhiHui_No1',1),(2116,4,'http://blog.csdn.net/yuzhihui_no1/article/details/43677663','Linux内核源码分析--文件系统（二、高速缓存区）','从块设备中读取数据是很慢的（I/O操作相对于内存操作来说是比较慢的），所以为了不让CPU浪费宝贵的时间来等待读取块设备上的数据，就在内存中开辟了一段内存地址用来预获取最近使用过的多块设备块上的数据。当...',1759,'csdn/linux/1_0_1_3_1504264453.944361.html','2015-02-09 22:14','YuZhiHui_No1',0,'Linux内核源码,操作系统,文件系统,高速缓存,',2,'http://my.csdn.net/YuZhiHui_No1',1),(2117,4,'http://blog.csdn.net/yuzhihui_no1/article/details/43601757','memcopy()函数c语言实现和汇编实现比较','首先来看汇编实现的memcpy函数，是利用宏函数来实现的，用汇编指令rep和movsb配合循环把数据以字节为单位从ds:esi传送到es:edi中，把循环次数放在ecx中。当然这样拷贝的才是真正的内存...',1035,'csdn/linux/1_0_1_4_1504264454.252277.html','2015-02-07 11:06','YuZhiHui_No1',0,'Linux内核,C中内嵌汇编,内存拷贝,c语言,面试,',1,'http://my.csdn.net/YuZhiHui_No1',1),(2118,2,'http://blog.csdn.net/wangjian_an/article/details/52431185','JavaEE框架——Springmvc入门(注解URL核心类详解、文件上传和下载）、和Spring的整合','一、简介：\n\nSpring MVC属于SpringFrameWork的后续产品，已经融合在Spring Web Flow里面。Spring 框架提供了构建 Web 应用程序的全功能 MVC 模块。使用...',2302,'csdn/java/1_0_1_0_1504264454.950341.html','2016-09-04 11:33','wangjian_an',0,'spring mvc,web开发,开发框架,mvc,spring,',0,'http://my.csdn.net/wangjian_an',1),(2119,4,'http://blog.csdn.net/yuzhihui_no1/article/details/42709871','C程序代码中内嵌as汇编（一、基础知识）','汇编代码是最接近机器码，所以也是执行效率最高的，在操作系统中有将近10%的关键性代码是由汇编编写的，而还有部分代码是由C代码嵌入汇编构成的。C代码中嵌入汇编可以提高程序的执行效率，同时这种程序还既有高...',917,'csdn/linux/1_0_1_13_1504264455.244668.html','2015-01-14 14:51','YuZhiHui_No1',0,'操作系统,汇编语言,C中内嵌汇编,',1,'http://my.csdn.net/YuZhiHui_No1',1),(2120,2,'http://blog.csdn.net/wangjian_an/article/details/52336427','JavaEE框架——hibernate的使用（关于hibernate事务的必须开启的问题）','一、与数据库的交互（增删改查）\n注意：1.写hql语言是是对于对象操作，而不是表数据\n            2.注意hibernate中的缓存\n\n1.Hibernate 查询方式\n\n     Hib...',2490,'csdn/java/1_0_1_12_1504264455.710939.html','2016-08-27 19:15','wangjian_an',0,'java ee,hibernate,框架,管理,数据库,',0,'http://my.csdn.net/wangjian_an',1),(2121,4,'http://blog.csdn.net/yuzhihui_no1/article/details/42556233','as汇编基础程序设计--调用C库和内存访问','as汇编中的内存访问：movl (%ebx), eax（把ebx寄存器指向的地址上的值传送给eax）；movl 4(%ebx), eax（把ebx指向的地址的位置往上偏移4字节的地址上的值传送给eax...',984,'csdn/linux/1_0_1_17_1504264456.360531.html','2015-01-09 16:13','YuZhiHui_No1',0,'操作系统,汇编语言,ATT,',0,'http://my.csdn.net/YuZhiHui_No1',1),(2122,2,'http://blog.csdn.net/gavin_john/article/details/51730093','Struts1.3——Struts入门','本文介绍了struts的入门知识，通过手工配置实现一个struts项目介绍了struts的工作原理和流程',5133,'csdn/java/1_0_1_5_1504264456.703628.html','2016-06-21 20:48','ggGavin',4,'struts,mvc,web框架,',5,'http://my.csdn.net/ggGavin',1),(2123,4,'http://blog.csdn.net/yuzhihui_no1/article/details/42394763','x86架构保护模式下界限问题','在保护模式下有很多界限问题，下面集中来看下：\n        若段界限是0xFFFFF，粒度是4KB，那么实际界限值是多少？若粒度G=0，那么段界限就是实际的界限值；但粒度为4KB，那么界限值就是：（...',821,'csdn/linux/1_0_1_19_1504264456.792565.html','2015-01-04 17:13','YuZhiHui_No1',1,'操作系统,x86汇编,汇编,',0,'http://my.csdn.net/YuZhiHui_No1',1),(2124,2,'http://blog.csdn.net/wangjian_an/article/details/52354751','JavaEE框架——hibernate框架的综合使用','hibernate框架的综合使用——通过使用hibernate框架多数据库的单表和多表进行增删改查，下面是详细代码1.先通过蚂蚁搬家Ant建立数据库 \n createTables.sqlCREATE ...',775,'csdn/java/1_0_1_13_1504264457.873037.html','2016-08-29 16:58','wangjian_an',0,'hibernate,java ee,数据库,框架,',0,'http://my.csdn.net/wangjian_an',1),(2125,4,'http://blog.csdn.net/yuzhihui_no1/article/details/42527189','AT&T风格的基础汇编程序--Hello word','为了看懂Linux内核源代码，所以不得不重新学习下汇编语言。汇编语言大体可以分为两个风格，官方的intel风格和unix系列的AT&T风格。Intel风格汇编是比较常见的，一般大学时会学习点基础的（至...',941,'csdn/linux/1_0_1_18_1504264457.971087.html','2015-01-08 17:10','YuZhiHui_No1',0,'操作系统,linux内核,汇编语言,ATT,',0,'http://my.csdn.net/YuZhiHui_No1',1),(2126,2,'http://blog.csdn.net/gavin_john/article/details/52016035','Struts1.3——DispatchAction、DynamicForm和全局跳转','本文介绍了Struts1中的DispatchAction、DynamicForm和全局跳转的用法',1397,'csdn/java/1_0_1_1_1504264458.838667.html','2016-07-24 20:33','ggGavin',0,'struts,框架,',1,'http://my.csdn.net/ggGavin',1),(2127,4,'http://blog.csdn.net/yuzhihui_no1/article/details/42706871','as汇编基础程序设计--函数设计及函数堆栈传参问题','其实上面的重点是 .type print_fun, @function ，这是定义函数的方式，后面一般接着是函数入口地址标识符；\n函数传参问题：\n        在as汇编和C语言中函数调用时传参的标...',903,'csdn/linux/1_0_1_14_1504264459.220957.html','2015-01-14 10:57','YuZhiHui_No1',0,'操作系统,汇编语言,ATT汇编,Linux内核,',0,'http://my.csdn.net/YuZhiHui_No1',1),(2128,2,'http://blog.csdn.net/gavin_john/article/details/51742646','Struts1.3——使用MyEclipse集成工具开发Struts','本文介绍了通过MyEclipse集成工具开发Struts的一般流程',3176,'csdn/java/1_0_1_3_1504264459.786712.html','2016-06-23 13:09','ggGavin',5,'struts,myeclipse,',3,'http://my.csdn.net/ggGavin',1),(2129,4,'http://blog.csdn.net/yuzhihui_no1/article/details/42706371','as汇编基础程序设计--基础知识点','1、数据类型，as汇编和C语言类似，也有数据类型之分。数据类型为了区分数据存放所需要的空间（也就是字节数），浮点型操作没怎么了解，浮点型操作时对数据类型应该有特殊的限制。\n.section .data...',662,'csdn/linux/1_0_1_15_1504264460.383532.html','2015-01-14 10:29','YuZhiHui_No1',0,'操作系统,汇编语言,ATT汇编,',0,'http://my.csdn.net/YuZhiHui_No1',1),(2130,2,'http://blog.csdn.net/gavin_john/article/details/51732615','Struts1.3——登录案例的改进','本文简要介绍了struts的scope属性、中文乱码处理以及struts-config.xml文件等几个知识点',2126,'csdn/java/1_0_1_4_1504264460.871704.html','2016-06-22 10:49','ggGavin',0,'struts,',1,'http://my.csdn.net/ggGavin',1),(2131,2,'http://blog.csdn.net/gavin_john/article/details/52005476','Struts1.3——Struts标签','本文介绍了Struts1中的标签，有html标签、bean标签和logic标签',1073,'csdn/java/1_0_1_2_1504264461.792532.html','2016-07-23 17:12','ggGavin',0,'struts,标签,',0,'http://my.csdn.net/ggGavin',1),(2132,2,'http://blog.csdn.net/wangjian_an/article/details/52321832','JavaEE框架——hibernate入门','一、hibernate入门\n\n1.hibernate简介：\n\n\nHibernate是一个开放源代码的对象关系映射框架，它对JDBC进行了非常轻量级的对象封装，它将POJO与数据库表建立映射关系，是一个...',1065,'csdn/java/1_0_1_14_1504264462.859768.html','2016-08-26 02:09','wangjian_an',0,'java ee,hibernate,web应用,架构,orm,',1,'http://my.csdn.net/wangjian_an',1),(2133,2,'http://blog.csdn.net/gavin_john/article/details/52057784','Struts1.3——文件上传和下载','本文介绍了Struts实现文件上传和下载的方法',1151,'csdn/java/1_0_1_0_1504264463.805058.html','2016-07-28 18:16','ggGavin',2,'struts,web开发,文件上传,',0,'http://my.csdn.net/ggGavin',1),(2134,4,'http://blog.csdn.net/ljy1988123/article/details/47905411','Linux内核工程导论——前言','想要研究linux内核，使用linux内核，首先要知道linux内核能做到什么，提供了什么。我看过很多初学者一进入公司就开始使用linux内核开发内核模块，使用的无论是通信方式、内存接口还是设备接口仍...',1402,'csdn/linux/1_0_3_0_1504264464.146568.html','2015-08-23 14:27','ljy1988123',0,'linux kernel,内核,',2,'http://my.csdn.net/ljy1988123',1),(2135,2,'http://blog.csdn.net/wangjian_an/article/details/52377168','JavaEE框架——Spring入门基础（控制反转Ioc和切面技术Aop）','一.简介：\n     \nSpring在英语中含义是春天，对于JavaEE开发者来说，Spring框架出现确实带来了一股全新的春天的气息。早在2002年，Rod\n Johson在其编著的《Expert ...',851,'csdn/java/1_0_1_1_1504264465.014702.html','2016-08-31 01:26','wangjian_an',0,'spring,java ee,web应用,框架,',0,'http://my.csdn.net/wangjian_an',1),(2136,4,'http://blog.csdn.net/ljy1988123/article/details/50444693','Linux内核工程导论——网络：Filter（LSF、BPF、eBPF）','概览    LSF(Linux socket filter)起源于BPF（Berkeley Packet Filter），基础从架构一致，但使用更简单。LSF内部的BPF最早是cBPF（classic...',5569,'csdn/linux/1_0_3_5_1504264465.181855.html','2016-01-01 19:58','ljy1988123',0,'filter,socket,linux kernel,网络,数据,',4,'http://my.csdn.net/ljy1988123',1),(2137,2,'http://blog.csdn.net/wangjian_an/article/details/52242270','JavaEE框架类——全站压缩——对网站内容进行数据压缩（Filter和GzipOutputStream二合一）','GZIP压缩：将压缩后的文本文件，发送给浏览器，减少流量。\n全站压缩：将一个项目（网站内）的所有响应（数据）进行gzip压缩，减少流量。\n压缩目的：减少流量，提高运行速度，贴吧是在手机客户端是，减少流...',554,'csdn/java/1_0_1_4_1504264466.130842.html','2016-08-18 16:28','wangjian_an',0,'filter,java ee,框架,数据压缩,压缩,',0,'http://my.csdn.net/wangjian_an',1),(2138,4,'http://blog.csdn.net/ljy1988123/article/details/50682953','Linux内核工程导论——linux学习和职业曲线（初学者，中级，高级都可参考）','Linux世界介绍\n\n\n\n给自己定级\n\n门外汉：不会安装操作系统、不会用虚拟机（安装和使用）、没有自己选择并安装的linux发行版，只是听人说linux很牛逼，但觉得linux打不了游戏开不了offi...',2305,'csdn/linux/1_0_3_9_1504264466.40902.html','2016-03-02 13:49','ljy1988123',8,'操作系统,linux kernel,linux,',9,'http://my.csdn.net/ljy1988123',1),(2139,2,'http://blog.csdn.net/wangjian_an/article/details/52277292','JavaEE——账号注册模拟网站邮箱激活','本项目是javaWeb和email结合的项目，模拟网站必须要激活邮箱账号才可以使用，创建数据库create table user(\nid varchar(32) primary key,\nname v...',1142,'csdn/java/1_0_1_8_1504264467.039334.html','2016-08-22 15:31','wangjian_an',0,'java ee,数据库,邮箱,java web,',0,'http://my.csdn.net/wangjian_an',1),(2140,2,'http://blog.csdn.net/wangjian_an/article/details/52291282','Ajax的使用','XmlHttp是什么？\n最通用的定义为：XmlHttp是一套可以在Javascript、VbScript、Jscript等脚本语言中通过http协议传送或从接收XML及其他数据的一套API。XmlHt...',561,'csdn/java/1_0_1_10_1504264468.16971.html','2016-08-23 15:25','wangjian_an',0,'javascript,ajax,xml,异步,',0,'http://my.csdn.net/wangjian_an',1),(2141,4,'http://blog.csdn.net/ljy1988123/article/details/48108271','Linux内核工程导论——总线：Linux PCI','PCI\nPCI系列总线介绍\n         首先，PCI是一种总线，PCI-e是PCI的升级版，在linux的软件系统中是统一都是driver/pci下。既然是一种总线，物理上就包括总线部分和支持该...',1150,'csdn/linux/1_0_3_8_1504264469.240642.html','2015-08-30 19:42','ljy1988123',0,'linux kernel,内核,Linux,',1,'http://my.csdn.net/ljy1988123',1),(2142,2,'http://blog.csdn.net/wangjian_an/article/details/52296061','用Ant工具管理你的Web应用程序','Ant是一种基于Java的build工具。理论上来说，它有些类似于（Unix）C中的make ，但没有make的缺陷。目前的最新版本为：Ant 1.8.1。 使用，创建一个build.xml放在项目的...',588,'csdn/java/1_0_1_11_1504264469.277065.html','2016-08-24 00:53','wangjian_an',0,'ant,java,管理,web应用,',0,'http://my.csdn.net/wangjian_an',1),(2143,2,'http://blog.csdn.net/wangjian_an/article/details/52281777','JavaEE——使用log4j进行日志管理','1、Log4j简介\r\n\r\n  作用：\r\n1、 跟踪代码的运行轨迹。\r\n2、 输出调试信息\r\n\r\n三大组成：\r\n\r\n1、 Logger类-生成日志。\r\n2、 Appender类-定义日志输出的目的地。\r...',1118,'csdn/java/1_0_1_9_1504264470.231177.html','2016-08-22 23:53','wangjian_an',0,'log4j,管理,java ee,apache,数据库,',1,'http://my.csdn.net/wangjian_an',1),(2144,4,'http://blog.csdn.net/ljy1988123/article/details/48975109','Linux内核工程导论——数据结构：其他','KFIFO\n缓冲区在文件系统中经常用到，通过缓冲区缓解cpu读写内存和读写磁盘的速度。例如一个进程A产生数据发给另外一个进程B，进程B需要对进程A传的数据进行处理并写入文件，如果B没有处理完，则A要延...',837,'csdn/linux/1_0_3_1_1504264470.272899.html','2015-10-08 17:11','ljy1988123',0,'linux kernel,Linux,内核,数据结构,',0,'http://my.csdn.net/ljy1988123',1),(2145,2,'http://blog.csdn.net/wangjian_an/article/details/52246856','JavaEE框架类——监听器（观察者模式）和Servlet技术的监听器session沌化与活化技术','监听器\n监听器－就是一个实现待定接口的普通Java程序，此程序专门用于监听别一个类的方法调用。\n什么是观察者模式：\n定义对象间一对多的依赖关系，当一个对象的状态发生改变时，所有依赖于它的对象都得到通知...',941,'csdn/java/1_0_1_5_1504264471.166283.html','2016-08-19 02:19','wangjian_an',0,'servlet,java ee,java,框架,技术,',0,'http://my.csdn.net/wangjian_an',1),(2146,4,'http://blog.csdn.net/ljy1988123/article/details/47905473','Linux内核工程导论——数据结构：树','内核数据结构\n链表\n待补充\n链表\n待补充\n双向链表\n待补充\n无锁链表\n待补充\n树\n树作为一种很常用的数据结构，主要包括二叉搜索数（BST）、多路搜索树（B-树）、B树根据叶子节点树分为二叉树和多叉树。...',2255,'csdn/linux/1_0_3_2_1504264471.319427.html','2015-08-23 14:53','ljy1988123',0,'linux kernel,内核,',0,'http://my.csdn.net/ljy1988123',1),(2147,4,'http://blog.csdn.net/ljy1988123/article/details/48391745','Linux内核工程导论——数据结构：链表与哈希','1 链表与哈希表\n链表可以把离散时间到达的数据结构串起来，使其可以被更容易的索引。Linux内核中全部使用双向链表。那为何链表要与哈希表放在一起介绍呢？因为哈希表室友链表群组成的，其每一个哈希桶都是一...',1563,'csdn/linux/1_0_3_3_1504264472.30341.html','2015-09-12 09:56','ljy1988123',0,'linux kernel,内核,Linux,数据结构,链表,',1,'http://my.csdn.net/ljy1988123',1),(2148,2,'http://blog.csdn.net/wangjian_an/article/details/52261661','JavaEE——在线人管理系统（显示在线人数、在线人详细信息、管理员踢人）','这篇博客是filter、listener和servlet技术的相关总结，实现了简单的显示在线人数、在线人详细信息、管理员踢人功能下面是详细代码web.xml\n<web-app version=\"3.0...',859,'csdn/java/1_0_1_6_1504264472.456188.html','2016-08-20 15:28','wangjian_an',0,'servlet,filter,管理,web.xml,java ee,',0,'http://my.csdn.net/wangjian_an',1),(2149,4,'http://blog.csdn.net/ljy1988123/article/details/49054501','Linux内核工程导论——内核为何使用C语言','C与C++的对比无数人说过，都说C效率高，但很多人做过实验如果C++不适用RTTI，C++的效率也不会低太多（25%左右）。还有人说C++强大的STL，但是对效率讲究点的话那个真的不能用，具体我后面说...',2369,'csdn/linux/1_0_3_4_1504264473.38145.html','2015-10-12 20:53','ljy1988123',1,'linux kernel,Linux,内核,c语言,',6,'http://my.csdn.net/ljy1988123',1),(2150,2,'http://blog.csdn.net/wangjian_an/article/details/52264956','JavaEE——Java和DOS下收发邮件（SMTP和POP3协议）、E-Mail协议）','E-Mail协议简介：\n邮件服务器，按照提供的服务类型，可以分为发送邮件的服务器我接收邮件的服务器。\n发送邮件的服务器使用发送协议，现在常用的是SMTP协议。所以，通常发邮件的服务器也称为SMTP服务...',565,'csdn/java/1_0_1_7_1504264473.6432.html','2016-08-21 03:04','wangjian_an',0,'java ee,java,dos,pop,邮件,',0,'http://my.csdn.net/wangjian_an',1),(2151,2,'http://blog.csdn.net/wangjian_an/article/details/52368524','JavaEE框架——struts2入门','1.strust简介（发展）：\n大概的流行时间：2010前后各3年\n※有两个版本：Struts1，Struts2\n       Struts1: 采用servlet机制，JSP+Action(Serv...',1568,'csdn/java/1_0_1_2_1504264474.623054.html','2016-08-30 15:00','wangjian_an',0,'java ee,struts,struts2.0,web应用,框架,',0,'http://my.csdn.net/wangjian_an',1),(2152,2,'http://blog.csdn.net/wangjian_an/article/details/52232210','javaEE框架类——过滤器（Filter）','1简介： - 过虑器能对客户的请求进行预先处理，然后再将请求转发给其他web组件。\n - 过虑器是在Servlet2.3规范中定义的，它可以对Web组件的,ServletRequest和Servlet...',931,'csdn/java/1_0_1_3_1504264475.363893.html','2016-08-17 16:35','wangjian_an',0,'filter,java ee,servlet,web,框架,',0,'http://my.csdn.net/wangjian_an',1),(2153,2,'http://blog.csdn.net/qq_35508033/article/details/71726450','Java设计模式之单例模式','单例模式的概念:单例模式的意思就是只有一个实例,单例模式确保某一个类只有一个实例,而且自行实例化并向整个系统提供这个实例,这个类称为单例类懒汉模式(类加载时不初始化):public class Laz...',365,'csdn/java/1_0_1_0_1504264477.390083.html','2017-05-12 14:31','qq_35508033',0,'设计模式,单例模式,',0,'http://my.csdn.net/qq_35508033',1),(2154,2,'http://blog.csdn.net/qq_35508033/article/details/68485593','Java设计模式之模板方法模式','模板方法概念的简单介绍:在抽象基类定义final修饰的方法封装算法骨架,并实现其中的共性的步骤,某些没有共性的步骤(可定义为protected或默认的abstract方法)延迟到子类实现,这样做可以在...',254,'csdn/java/1_0_1_1_1504264478.400955.html','2017-03-30 12:47','qq_35508033',0,'Java,设计模式,',0,'http://my.csdn.net/qq_35508033',1),(2155,2,'http://blog.csdn.net/qq_35508033/article/details/66475445','Java设计模式之观察者模式','观察者模式的简单定义:定义对象间的一种一对多的依赖关系,当一个对象的状态发生改变时,所以依赖于它的对象都得到通知并且被自动更新',91,'csdn/java/1_0_1_5_1504264479.380816.html','2017-03-26 14:38','qq_35508033',0,'Java,设计模式,',0,'http://my.csdn.net/qq_35508033',1),(2156,2,'http://blog.csdn.net/qq_35508033/article/details/66970276','Java设计模式之策略模式','策略模式的简单定义和生活例子:策略模式将可变的部分从程序中抽象分离成算法接口,在该接口下分别封装一系列算法实现并使他们可以相互替换,从而导致客户端程序独立于算法的改变生活中例子:网上购物,当进行支付页...',159,'csdn/java/1_0_1_6_1504264480.383006.html','2017-03-27 12:07','qq_35508033',0,'Java,设计模式,',0,'http://my.csdn.net/qq_35508033',1),(2157,2,'http://blog.csdn.net/qq_35508033/article/details/67631625','Java设计模式之适配器模式','生活中适配的例子到处都是,比如说,国内居民用电是220伏,而给手机充电只需要5伏左右,那么将220伏转化为手机的5伏,就需要适配器进行降压处理,某某公司招聘Android开发,而作为应聘者需要制作一份...',162,'csdn/java/1_0_1_7_1504264481.325033.html','2017-03-28 08:56','qq_35508033',0,'Java,设计模式,',0,'http://my.csdn.net/qq_35508033',1),(2158,2,'http://blog.csdn.net/qq_35508033/article/details/68062516','Java设计模式之责任链模式','比如我们去奔驰4S店买车,一般4S店都会有销售人员,经理,总监,老板这样的层级,消费者肯定希望买车能给予一定的折扣,比如5%,20%甚至50%等,消费者提出不同比例的折扣,销售员不一定能直接同意,这时...',130,'csdn/java/1_0_1_2_1504264482.456185.html','2017-03-29 11:39','qq_35508033',0,'Java,设计模式,',0,'http://my.csdn.net/qq_35508033',1),(2159,2,'http://blog.csdn.net/qq_35508033/article/details/63262539','Java代理模式和动态代理','代理模式和动态代理的简单介绍首先看看代理模式的概念及分类:代理模式就是为其他对象提供一种代理以控制对这个对象的访问,代理对象起到中介的作用,可以去掉功能服务或怎么额外的服务代理模式的分类:远程代理,智...',186,'csdn/java/1_0_1_3_1504264483.809119.html','2017-03-18 17:26','qq_35508033',0,'Java,代理模式,动态代理,',0,'http://my.csdn.net/qq_35508033',1),(2160,2,'http://blog.csdn.net/qq_35508033/article/details/65629516','Java设计模式之工厂模式','工厂模式的概念:实例化对象,用工厂方法代替new操作,工厂模式包括工厂方法模式和抽象工厂模式,抽象工厂模式是工厂方法模式的扩展',106,'csdn/java/1_0_1_4_1504264484.668021.html','2017-03-24 12:54','qq_35508033',0,'Java,设计模式,',0,'http://my.csdn.net/qq_35508033',1),(2161,4,'http://blog.csdn.net/shallnet/article/details/47734053','把握linux内核设计思想系列','【版权声明：尊重原创，转载请保留出处：blog.csdn.net/shallnet，文章仅供学习交流，请勿用于商业用途】\n把握linux内核设计思想（一）：系统调用\n把握linux内核设计思想（二）：...',1159,'csdn/linux/1_2_1_0_1504264485.098723.html','2015-08-17 23:15','gentleliu',1,'linux内核,操作系统,内核分析,内核源码,',1,'http://my.csdn.net/gentleliu',1),(2162,4,'http://blog.csdn.net/shallnet/article/details/47176167','把握linux内核设计思想（九）：进程调度','【版权声明：尊重原创，转载请保留出处：blog.csdn.net/shallnet，文章仅供学习交流，请勿用于商业用途】\n\n       \nlinux为多任务系统，正常情况下都存在成百上千个任务。由于...',1321,'csdn/linux/1_2_1_5_1504264485.270394.html','2015-07-31 22:18','gentleliu',2,'linux内核,进程调度,红黑二叉树,schedule,上下文切换,',1,'http://my.csdn.net/gentleliu',1),(2163,4,'http://blog.csdn.net/shallnet/article/details/47115055','把握linux内核设计思想（五）：下半部机制之工作队列及几种机制的选择','【版权声明：尊重原创，转载请保留出处：blog.csdn.net/shallnet，文章仅供学习交流，请勿用于商业用途】\n        工作队列是下半部的另外一种将工作推后执行形式。和软中断、tas...',1583,'csdn/linux/1_2_1_9_1504264485.889583.html','2015-07-29 00:00','gentleliu',2,'linux内核,下半部,工作队列,工作者线程,',2,'http://my.csdn.net/gentleliu',1),(2164,4,'http://blog.csdn.net/shallnet/article/details/47114737','把握linux内核设计思想（三）：下半部机制之软中断','【版权声明：尊重原创，转载请保留出处：blog.csdn.net/shallnet，文章仅供学习交流，请勿用于商业用途】\n        中断处理程序以异步方式执行，其会打断其他重要代码，其运行时该中...',1132,'csdn/linux/1_2_1_11_1504264486.91509.html','2015-07-28 23:35','gentleliu',0,'linux内核,软中断,do_softirq,下半部,',1,'http://my.csdn.net/gentleliu',1),(2165,4,'http://blog.csdn.net/shallnet/article/details/47114505','把握linux内核设计思想（二）：硬中断及中断处理','操作系统负责管理硬件设备，为了使系统和硬件设备的协同工作不降低机器性能，系统和硬件的通信使用中断的机制，也就是让硬件在需要的时候向内核发出信号，这样使得内核不用去轮询设备而导致做很多无用功。\n    ...',1315,'csdn/linux/1_2_1_12_1504264487.92553.html','2015-07-28 23:25','gentleliu',0,'linux内核,设计,中断,中断处理函数,IRQ,',1,'http://my.csdn.net/gentleliu',1),(2166,4,'http://blog.csdn.net/shallnet/article/details/47114871','把握linux内核设计思想（四）：下半部机制之tasklet','【版权声明：尊重原创，转载请保留出处：blog.csdn.net/shallnet，文章仅供学习交流，请勿用于商业用途】\n       \ntasklet是利用软中断实现的一种下半部机制。tasklet...',1256,'csdn/linux/1_2_1_10_1504264488.898274.html','2015-07-28 23:46','gentleliu',0,'linux内核,下半部,软中断,tasklet,',1,'http://my.csdn.net/gentleliu',1),(2167,4,'http://blog.csdn.net/shallnet/article/details/47133263','把握linux内核设计思想（八）：进程管理分析','【版权声明：尊重原创，转载请保留出处：blog.csdn.net/shallnet，文章仅供学习交流，请勿用于商业用途】\n        进程其实就是程序的执行时的实例，是处于执行期的程序。在linu...',1339,'csdn/linux/1_2_1_6_1504264490.017262.html','2015-07-29 20:34','gentleliu',1,'linux内核,进程,线程,task_struct,',0,'http://my.csdn.net/gentleliu',1),(2168,4,'http://blog.csdn.net/shallnet/article/details/47133031','把握linux内核设计思想（七）：内核定时器和定时执行','【版权声明：尊重原创，转载请保留出处：blog.csdn.net/shallnet，文章仅供学习交流，请勿用于商业用途】\n        前面章节说到了把工作推后到除现在以外的时间执行的机制是下半部机...',1780,'csdn/linux/1_2_1_7_1504264490.999532.html','2015-07-29 20:18','gentleliu',0,'linux内核,定时器,软中断,',1,'http://my.csdn.net/gentleliu',1),(2169,4,'http://blog.csdn.net/shallnet/article/details/47132861','把握linux内核设计思想（六）：内核时钟中断','【版权声明：尊重原创，转载请保留出处：blog.csdn.net/shallnet，文章仅供学习交流，请勿用于商业用途】\n        内核中很多函数是基于时间驱动的，其中有些函数需要周期或定期执行...',1990,'csdn/linux/1_2_1_8_1504264492.120319.html','2015-07-29 20:03','gentleliu',0,'linux内核,时钟中断,jiffies,定时器,',1,'http://my.csdn.net/gentleliu',1),(2170,4,'http://blog.csdn.net/shallnet/article/details/47701225','把握linux内核设计思想（十三）：内存管理之进程地址空间','【版权声明：尊重原创，转载请保留出处：blog.csdn.net/shallnet，文章仅供学习交流，请勿用于商业用途】\n\n        进程地址空间由进程可寻址的虚拟内存组成，Linux 的虚拟地...',1365,'csdn/linux/1_2_1_1_1504264493.088937.html','2015-08-16 11:52','gentleliu',1,'linux内核,内存管理,进程虚拟地址,VMA,',2,'http://my.csdn.net/gentleliu',1),(2171,4,'http://blog.csdn.net/shallnet/article/details/47682593','把握linux内核设计思想（十二）：内存管理之slab分配器','【版权声明：尊重原创，转载请保留出处：blog.csdn.net/shallnet，文章仅供学习交流，请勿用于商业用途】\n\n       \n上一节最后说到对于小内存区的请求，如果采用伙伴系统来进行分配...',2343,'csdn/linux/1_2_1_2_1504264494.061319.html','2015-08-15 16:09','gentleliu',3,'linux内核,内存管理,slab,',1,'http://my.csdn.net/gentleliu',1),(2172,4,'http://blog.csdn.net/shallnet/article/details/47682383','把握linux内核设计思想（十一）：内存管理之页的分配与回收','【版权声明：尊重原创，转载请保留出处：blog.csdn.net/shallnet，文章仅供学习交流，请勿用于商业用途】 \n\n        内存管理单元（MMU）负责将管理内存，在把虚拟地址转换为物...',1278,'csdn/linux/1_2_1_3_1504264495.103247.html','2015-08-15 15:51','gentleliu',1,'linux内核,内存管理,page,kmalloc,页,',1,'http://my.csdn.net/gentleliu',1),(2173,4,'http://blog.csdn.net/shallnet/article/details/47176683','把握linux内核设计思想（十）：内核同步','【版权声明：尊重原创，转载请保留出处：blog.csdn.net/shallnet，文章仅供学习交流，请勿用于商业用途】\n        如同linux应用一样，内核的共享资源也要防止并发，因为如果多...',1012,'csdn/linux/1_2_1_4_1504264496.19872.html','2015-07-31 22:36','gentleliu',1,'linux内核,互斥体,自旋锁,信号量,禁止抢占,',1,'http://my.csdn.net/gentleliu',1),(2174,4,'http://blog.csdn.net/shallnet/article/details/47113753','把握linux内核设计思想（一）：系统调用','【版权声明：尊重原创，转载请保留出处：blog.csdn.net/shallnet，文章仅供学习交流，请勿用于商业用途】\n        一般情况下进程不能访问内核所占内存空间也不能调用内核函数。为了...',1543,'csdn/linux/1_2_1_13_1504264497.211542.html','2015-07-28 23:07','gentleliu',1,'linux内核,系统调用,实现,getpid,sys_call_table,',2,'http://my.csdn.net/gentleliu',1),(2175,4,'http://blog.csdn.net/dlutbrucezhang/article/details/10066751','Linux系统调用中的参数验证','我们都知道，用户程序可以通过库函数来通知内核执行系统调用，由于是在内核空间中执行，所以，每一个步骤都需要非常小心，因为错误的操作随时可以导致系统崩溃。      系统调用必须仔细检查它们所有的参数是否...',1557,'csdn/linux/1_0_2_0_1504264499.563199.html','2013-08-19 13:01','DLUTBruceZhang',0,'内存,指针,Linux,Linux Kernel,存储,',1,'http://my.csdn.net/DLUTBruceZhang',1),(2176,2,'http://blog.csdn.net/romantichjwhjwhjw/article/details/41445311','同一Page范围内多个相同自定义标签类实例化个数相关问题阐述','我们都知道j2ee规范中自定义',1127,'csdn/java/1_1_1_0_1504264500.386694.html','2014-12-01 00:04','romantichjwhjwhjw',0,'自定义标签应用,自定义标签按钮级别权限控制设计,',0,'http://my.csdn.net/romantichjwhjwhjw',1),(2177,4,'http://blog.csdn.net/dlutbrucezhang/article/details/9965117','Linux内核线程','内核线程是直接由内核本身启动的进程。内核线程实际上是将内核函数委托给独立的进程，与系统中其他进程“并行”执行（实际上，也并行于内核自身的执行），内核线程经常被称为内核“守护进程”。它们主要用于执行下列...',1234,'csdn/linux/1_0_2_6_1504264500.452092.html','2013-08-14 15:15','DLUTBruceZhang',0,'多线程,MM,性能优化,Linux Kernel,Linux,',0,'http://my.csdn.net/DLUTBruceZhang',1),(2178,2,'http://blog.csdn.net/romantichjwhjwhjw/article/details/25515115','jplogic v1.0案例开发之知识库管理（文档管理等）（二）','jplogic v1.0开发陆续更新，意在和广大网友',3940,'csdn/java/1_1_1_10_1504264501.21689.html','2014-05-11 00:50','romantichjwhjwhjw',0,'jplogic 极速商业逻辑,知识库管理开发实例,web快速开发平台,全文检索,文档,',0,'http://my.csdn.net/romantichjwhjwhjw',1),(2179,4,'http://blog.csdn.net/dlutbrucezhang/article/details/9926719','内存管理单元--MMU','现代操作系统普遍采用虚拟内存管理（Virtual Memory Management）机制，这需要处理器中的MMU（Memory Management Unit，内存管理单元）提供支持，本节简要介绍M...',1431,'csdn/linux/1_0_2_10_1504264501.304567.html','2013-08-12 15:19','DLUTBruceZhang',1,'内存管理,处理器,内存,Linux Kernel,内核,',0,'http://my.csdn.net/DLUTBruceZhang',1),(2180,4,'http://blog.csdn.net/dlutbrucezhang/article/details/9919453','对 jiffies 溢出、回绕及 time_after 宏的理解','原文如下：关于jiffies变量：     全局变量jiffies用来记录自启动以来产生的节拍的总数。系统启动时会将该变量初始化为0，此后，每当时钟中断产生时就会增加该变量的值。jiffies和另外一...',1960,'csdn/linux/1_0_2_12_1504264502.263801.html','2013-08-12 11:11','DLUTBruceZhang',1,'宏,类,存储,C,Linux Kernel,',0,'http://my.csdn.net/DLUTBruceZhang',1),(2181,2,'http://blog.csdn.net/romantichjwhjwhjw/article/details/28350607','jplogicv1.0开发开发案例之知识库文档信息索引检索（类仿百度搜索、类google搜索）','基于很多项目中都可以会使用针对海量',3373,'csdn/java/1_1_1_11_1504264502.339877.html','2014-06-04 10:23','romantichjwhjwhjw',0,'jplogic 快速开发平台 仿百度搜索,仿google搜索,',0,'http://my.csdn.net/romantichjwhjwhjw',1),(2182,2,'http://blog.csdn.net/romantichjwhjwhjw/article/details/37584273','jplogic开发案例之应用皮肤界面管理','本人陆续推出jplogic开发案例，',1703,'csdn/java/1_1_1_14_1504264503.574168.html','2014-07-09 22:42','romantichjwhjwhjw',0,'Java快速开发平台,web皮肤更换,UI组件,jplogic快速开发平台,jplogic  极速商业逻辑,',0,'http://my.csdn.net/romantichjwhjwhjw',1),(2183,4,'http://blog.csdn.net/dlutbrucezhang/article/details/9856383','Linux内核--异常和中断的区别','相信大家都知道非常著名的两个名词：异常和中断，不过，你真的理解这两个名词在说什么吗？它们之间有什么区别呢？      1.中断      大家都知道，当我们在敲击键盘的同时就会产生中断，当硬盘读写完数...',2320,'csdn/linux/1_0_2_13_1504264503.653902.html','2013-08-09 15:38','DLUTBruceZhang',0,'处理器,内核,硬件,Linux Kernel,Linux,',1,'http://my.csdn.net/DLUTBruceZhang',1),(2184,2,'http://blog.csdn.net/romantichjwhjwhjw/article/details/38601469','jplogic开发案例之服务器状态信息监控（服务器端监控）','在软件项目中我们时常需要时再',1248,'csdn/java/1_1_1_16_1504264504.279262.html','2014-08-16 01:03','romantichjwhjwhjw',0,'服务器监控,jplogic  极速商业逻辑,',0,'http://my.csdn.net/romantichjwhjwhjw',1),(2185,4,'http://blog.csdn.net/dlutbrucezhang/article/details/9925651','直接内存访问(DMA)','1. 什么是DMA直接内存访问是一种硬件机制，它允许外围设备和主内存之间直接传输它们的I/O数据，而不需要系统处理器的参与。使用这种机制可以大大提高与设备通信的吞吐量。 2. DMA数据传输有两种方式...',1236,'csdn/linux/1_0_2_11_1504264504.406581.html','2013-08-12 14:48','DLUTBruceZhang',0,'内存,struct,Linux Kernel,硬件,Linux,',0,'http://my.csdn.net/DLUTBruceZhang',1),(2186,2,'http://blog.csdn.net/romantichjwhjwhjw/article/details/39024051','java web服务器监控（j2ee web 服务器各项参数监控）','续 《jplogic开发案例之服务器状态信息监控（服务器端监控）》',2893,'csdn/java/1_1_1_17_1504264505.444223.html','2014-09-03 10:28','romantichjwhjwhjw',0,'服务器监控,java web服务器监控,',0,'http://my.csdn.net/romantichjwhjwhjw',1),(2187,4,'http://blog.csdn.net/dlutbrucezhang/article/details/9821187','Linux2.6 --系统调用处理程序','用户空间的程序无法直接执行内核代码。它们不能直接调用内核空间中的函数，因为内核驻留在受保护的地址空间上。如果进程可以直接在内核的地址空间上读写的话，系统的安全性和稳定性将不复存在。      所以，应...',1354,'csdn/linux/1_0_2_17_1504264505.488661.html','2013-08-07 18:57','DLUTBruceZhang',0,'应用,异常,异常处理,Linux,Linux Kernel,',2,'http://my.csdn.net/DLUTBruceZhang',1),(2188,4,'http://blog.csdn.net/dlutbrucezhang/article/details/9962637','Linux2.6--Linus电梯','内核为了处理来自IO层的请求，需要进行相应的优化，因为当请求很多时，且请求的块又都几种在一块，那么如果按照顺序处理这些请求无疑是很大的时间开销，所以，我们需要寻求方法来处理这种情况（当然，不只是这一种...',1766,'csdn/linux/1_0_2_7_1504264506.66042.html','2013-08-14 13:31','DLUTBruceZhang',0,'磁盘,Linus Torvalds,移动开发,Linux,Linux Kernel,',1,'http://my.csdn.net/DLUTBruceZhang',1),(2189,2,'http://blog.csdn.net/romantichjwhjwhjw/article/details/38450711','jplogic 开发案例(FMS流媒体服务集成) 之 视频会议管理 (多人互动呼叫-应答模式视频会议含共享白板)','本人之前有做过类似视频语音',3554,'csdn/java/1_1_1_15_1504264506.703636.html','2014-08-09 01:32','romantichjwhjwhjw',0,'Java快速开发平台,Flex视频会议多人聊天,共享白板,jplogic  极速商业逻辑,Flex+java+FMS流媒体应用,',0,'http://my.csdn.net/romantichjwhjwhjw',1),(2190,2,'http://blog.csdn.net/romantichjwhjwhjw/article/details/30063783','jplogic v1.0 开发案例--知识库管理（视频资料上传、格式转化、视频截图、视频预览、视频信息索引检索）','由于目前很多项目中应用到视频上传预览等功能，本文',1236,'csdn/java/1_1_1_12_1504264507.649962.html','2014-06-11 16:42','romantichjwhjwhjw',0,'Java快速开发平台,视频上传,视频格式转化视频截图,视频检索,jplogic 极速商业逻辑,',0,'http://my.csdn.net/romantichjwhjwhjw',1),(2191,4,'http://blog.csdn.net/dlutbrucezhang/article/details/9959419','Linux2.6--虚拟文件系统','虚拟文件系统(有时也称作虚拟文件交换,更常见的是简称做VFS)作为内核子系统,为用户空间程序提供了文件和文件系统相关的接口.系统中的所有文件系统不但依赖VFS共存,而且也依赖VFS系统协同工作.通过虚...',1612,'csdn/linux/1_0_2_8_1504264507.918879.html','2013-08-14 10:10','DLUTBruceZhang',0,'Linux,文件系统,Linux Kernel,内核,标准,',1,'http://my.csdn.net/DLUTBruceZhang',1),(2192,2,'http://blog.csdn.net/romantichjwhjwhjw/article/details/34445253','jplogic 之图形报表统计开发案例','纵观目前各种系统项目中都运用到了报表统计，',1271,'csdn/java/1_1_1_13_1504264508.577606.html','2014-06-25 16:29','romantichjwhjwhjw',0,'jplogic快速开发平台,highcharts开发实例,图形报表统计,',0,'http://my.csdn.net/romantichjwhjwhjw',1),(2193,4,'http://blog.csdn.net/dlutbrucezhang/article/details/9928209','Linux2.6中的Slab层','还记得一个进程创建的时候是什么给它分配的“进程描述符”吗？没错，是slab分配器，那么，这个slab分配器是个什么东西呢？      分配和释放数据结构是所有内核中最普遍的操作之一。为了便于结构的频繁...',1503,'csdn/linux/1_0_2_9_1504264508.622575.html','2013-08-12 16:23','DLUTBruceZhang',0,'Cache,数据结构,内核,链表,Linux Kernel,',1,'http://my.csdn.net/DLUTBruceZhang',1),(2194,2,'http://blog.csdn.net/romantichjwhjwhjw/article/details/41399123','浅谈各类RAD快速开发平台存在的意义','今天和大伙谈论一个话题各类快速开发平台（jplogic）存在意义',2087,'csdn/java/1_1_1_1_1504264509.715665.html','2014-12-01 00:07','romantichjwhjwhjw',1,'jplogic  极速商业逻辑,各类快速开发平台存在意义,',1,'http://my.csdn.net/romantichjwhjwhjw',1),(2195,4,'http://blog.csdn.net/dlutbrucezhang/article/details/10062105','Linux2.6--进程抢占和上下文切换','上下文切换，也就是从一个可执行进程切换到另一个可执行进程，由定义在kernel/sched.c中的context_switch()函数负责处理。每当一个新的进程被选出来准备投入运行的时候，schedu...',2371,'csdn/linux/1_0_2_1_1504264509.838912.html','2013-08-19 10:07','DLUTBruceZhang',1,'处理器,switch,Linux,Linux Kernel,Unix,',1,'http://my.csdn.net/DLUTBruceZhang',1),(2196,4,'http://blog.csdn.net/dlutbrucezhang/article/details/9998781','读《Linux内核设计与实现》我想到了这些书','从题目中可以看到，这篇文章是以我读《Linux内核设计与实现》而想到的其他我读过的书，所以，这篇文章的主要支撑点是《Linux内核》。      开始读这本书已经是很久以前的事了，不过，由于时间和精力...',9210,'csdn/linux/1_0_2_2_1504264509.885008.html','2013-08-19 08:59','DLUTBruceZhang',37,'内核,数据结构,Linux,Linux Kernel,Unix,',17,'http://my.csdn.net/DLUTBruceZhang',1),(2197,2,'http://blog.csdn.net/romantichjwhjwhjw/article/details/39960083','国内O2O运营模式逐渐改变我们生活方式','最近看了一篇关于O2O的文章，让我',1650,'csdn/java/1_1_1_6_1504264510.614827.html','2014-10-10 14:21','romantichjwhjwhjw',0,'商业模式,运营,o2o,',0,'http://my.csdn.net/romantichjwhjwhjw',1),(2198,2,'http://blog.csdn.net/romantichjwhjwhjw/article/details/41514403','Java web自定义标签按钮级别权限控制完美诠释（jplogic 快速开发平台）','接下来跟大家聊聊JavaWeb中权限控制，往大的方向说可以聊聊整合应用系统中的权限控制。在聊权限控制之前先跟大家聊聊RBAC。那么什么是RBAC呢？RBAC（Role-Based\n Access Co...',3717,'csdn/java/1_1_1_2_1504264510.661706.html','2014-12-01 00:06','romantichjwhjwhjw',0,'标签,自定义标签按钮级别权限控制,可视化,',1,'http://my.csdn.net/romantichjwhjwhjw',1),(2199,4,'http://blog.csdn.net/dlutbrucezhang/article/details/9981643','Linux/Unix--设备类型','在Linux以及所有的Unix系统中，设备被分为以下三种类型：      块设备      字符设备      网络设备       块设备通常写为 blkdev ，它是可以寻址的，寻址以块为单位，块...',1330,'csdn/linux/1_0_2_4_1504264510.912357.html','2013-08-15 13:22','DLUTBruceZhang',0,'类,网络,Unix,Linux Kernel,Linux,',1,'http://my.csdn.net/DLUTBruceZhang',1),(2200,4,'http://blog.csdn.net/dlutbrucezhang/article/details/9967849','Linux内存映射--mmap函数','Linux提供了内存映射函数mmap, 它把文件内容映射到一段内存上(准确说是虚拟内存上), 通过对这段内存的读取和修改, 实现对文件的读取和修改, 先来看一下mmap的函数声明:头文件:原型: vo...',2095,'csdn/linux/1_0_2_5_1504264511.663361.html','2013-08-14 17:12','DLUTBruceZhang',0,'内存,Linux Kernel,Linux,DST,内核,',0,'http://my.csdn.net/DLUTBruceZhang',1),(2201,2,'http://blog.csdn.net/romantichjwhjwhjw/article/details/22123527','jplogic v1.0 Java快速开发平台  Vs 目前市面上的快速开发平台','平台登录界面（支持多系统登录或者单点登录）：\n\n\n系统主页面（demo）：\n\n\n主页页面的内容可以需要灵活定制\n本人往后会陆续更新平台使用案例，平台交流、技术交流或项目合作可以加群交流：3764471...',3651,'csdn/java/1_1_1_8_1504264511.702687.html','2014-03-26 01:50','romantichjwhjwhjw',1,'jplogic  极速商业逻辑,平台,Java快速开发平台,云服务,',0,'http://my.csdn.net/romantichjwhjwhjw',1),(2202,2,'http://blog.csdn.net/romantichjwhjwhjw/article/details/22582471','jplogic v1.0案例开发之人员信息管理（一）','个人技术交流、合作群：376447127，我分享了使用jplogic来进行企业基础模块项目的开发的相关方法，每一个模块都使用平台通用的UI控件，控件本身绑定了相应的校验功能、以及权限控制属性等，组件还...',2603,'csdn/java/1_1_1_9_1504264512.680452.html','2014-03-30 14:31','romantichjwhjwhjw',0,'jplogic  极速商业逻辑,快速开发案例,jplogic快速开发平台,',0,'http://my.csdn.net/romantichjwhjwhjw',1),(2203,4,'http://blog.csdn.net/dlutbrucezhang/article/details/9985371','linux下字节对齐','一，内存地址对齐的概念   计算机内存中排列、访问数据的一种方式，包含基本数据对齐和结构体数据对齐。   32位系统中，数据总线宽度为32，每次能够读取4字节数据。地址总线为32，最大寻址空间为4GB...',2148,'csdn/linux/1_0_2_3_1504264512.917497.html','2013-08-15 16:11','DLUTBruceZhang',0,'Structure,存储,类,C,Linux Kernel,',0,'http://my.csdn.net/DLUTBruceZhang',1),(2204,2,'http://blog.csdn.net/romantichjwhjwhjw/article/details/21025737','java快速开发平台','一直没有习惯写技术博客，看着诸多大牛分享自己的一些项目经验。本人也突然有想写博客的冲动，旨在结交有识之士（朋友），彼此分享经验。同时也希望中国的软件行业有更大突破性的发展。当然如果希望进行项目合作也可...',2461,'csdn/java/1_1_1_7_1504264513.99425.html','2014-03-11 17:15','romantichjwhjwhjw',2,'dhtmlxscheduler,jplogic快速开发平台,web快速开发平台,日程安排,权限管理,',0,'http://my.csdn.net/romantichjwhjwhjw',1),(2205,4,'http://blog.csdn.net/dlutbrucezhang/article/details/9853463','linux2.6内核链表','一、        链表数据结构简介      链表是一种常用的组织有序数据的数据结构，它通过指针将一系列数据节点连接成一条数据链，是线性表的一种重要实现方式。相对于数组，链表具有更好的动态性，建立链...',1142,'csdn/linux/1_0_2_14_1504264514.040282.html','2013-08-09 13:09','DLUTBruceZhang',1,'struct,C++,单链表,Linux Kernel,Linux,',0,'http://my.csdn.net/DLUTBruceZhang',1),(2206,2,'http://blog.csdn.net/romantichjwhjwhjw/article/details/41562039','jplogic之GIS搜狗地图开发案例','在项目开发过程中我们可能遇到各种各样的需求，而GIS在应用便是其中一个。特别是在web类型的项目中会经常用到。我们都知道 网络地图服务，以其实时性、大信息量、丰富的功能，成为传统地图的延伸，同时扩展出...',1181,'csdn/java/1_1_1_3_1504264515.004601.html','2014-12-01 00:06','romantichjwhjwhjw',0,'GIS开发实例,搜狗地图,',0,'http://my.csdn.net/romantichjwhjwhjw',1),(2207,4,'http://blog.csdn.net/dlutbrucezhang/article/details/9817951','Linux2.6内核--抢占','【摘要】本文首先介绍非抢占式内核(Non-Preemptive Kernel)和可抢占式内核(Preemptive Kernel)的区别。接着分析Linux下有两种抢占：用户态抢占(User Pree...',1218,'csdn/linux/1_0_2_18_1504264515.053555.html','2013-08-07 15:40','DLUTBruceZhang',0,'内核,处理器,数据结构,Linux,Linux Kernel,',1,'http://my.csdn.net/DLUTBruceZhang',1),(2208,2,'http://blog.csdn.net/romantichjwhjwhjw/article/details/41043809','jplogic之activiti modeler流程设计器集成案例（非spring集成）','续《jplogic之activiti整合案例（自定义流程引擎[非开源框架]待续）》关于',2130,'csdn/java/1_1_1_4_1504264515.848724.html','2014-11-12 15:56','romantichjwhjwhjw',0,'jplogic  极速商业逻辑,工作流,activiti modeler,在线流程设计器,',0,'http://my.csdn.net/romantichjwhjwhjw',1),(2209,4,'http://blog.csdn.net/dlutbrucezhang/article/details/9807939','linux内核cfs浅析','linux调度器的一般原理请参阅《linux进程调度浅析》。之前的调度器cfs之前的linux调度器一般使用用户设定的静态优先级，加上对于进程交互性的判断来生成动态优先级，再根据动态优先级决定进程被调...',1259,'csdn/linux/1_0_2_19_1504264515.907319.html','2013-08-07 04:28','DLUTBruceZhang',0,'处理器,迁移,负载均衡,Linux,Linux Kernel,',0,'http://my.csdn.net/DLUTBruceZhang',1),(2210,2,'http://blog.csdn.net/romantichjwhjwhjw/article/details/40624413','jplogic之activiti整合案例（自定义流程引擎[非开源框架]待续）','Activiti 作为一个遵从 Apache 许可的工作流和业务流程管理开源平台，其核心是基于 Java\r\n 的超快速、超稳定的 BPMN 2.0 流程引擎，强调流程服务的可嵌入性和可扩展性，同时更加...',2061,'csdn/java/1_1_1_5_1504264516.815842.html','2014-11-01 00:15','romantichjwhjwhjw',0,'工作流引擎,activiti实例,工作流,',0,'http://my.csdn.net/romantichjwhjwhjw',1),(2211,4,'http://blog.csdn.net/dlutbrucezhang/article/details/9824407','机制与策略','Unix/Linux的接口设计有一句通用的格言“提供机制而不是策略”。区别对待机制（mechanism）和策略（policy）是Unix设计中的一大亮点。大部分的编程问题都可以被切割成两个部分：“需要...',2186,'csdn/linux/1_0_2_15_1504264516.99444.html','2013-08-07 22:51','DLUTBruceZhang',0,'操作系统,框架,多线程,Linux,Linux Kernel,',0,'http://my.csdn.net/DLUTBruceZhang',1),(2212,4,'http://blog.csdn.net/dlutbrucezhang/article/details/9821527','Linux系统调用的实现机制分析','【摘要】本文介绍了系统调用的一些实现细节。首先分析了系统调用的意义，它们与库函数和应用程序接口有怎样的关系。然后，我们考察了内核如何实现系统调用，以及执行系统调用的连锁反应：陷入内核，传递系统调用号和...',3197,'csdn/linux/1_0_2_16_1504264517.97748.html','2013-08-07 19:23','DLUTBruceZhang',1,'内核,应用,行业数据,C,Linux Kernel,',0,'http://my.csdn.net/DLUTBruceZhang',1),(2213,2,'http://blog.csdn.net/supera_li/article/details/45198341','【总结】Effective java经验之谈，并发编程','内容包括，并发与并行，并发约束，并发下的集合类性能分析，并发相关包的概述，并发场景，并发总结集合包',1360,'csdn/java/1_1_1_0_1504264518.810351.html','2015-04-22 17:49','superMarss',0,'接口,并发,set,集合,',1,'http://my.csdn.net/superMarss',1),(2214,2,'http://blog.csdn.net/supera_li/article/details/45155857','【总结】Effective java经验之谈，枚举，注解，方法，通用设计，异常','这几章看的比较快，内容就如同标题一样比较容易理解，所以只有部分内容会在[]中解释，其他的就直接理解标题，并不影响阅读质量。不过如果时间充足的话，还是仔细读一读原书的内容，相信还是有所收获的。主要最近自...',1315,'csdn/java/1_1_1_1_1504264520.021046.html','2015-04-20 21:27','superMarss',5,'注解,方法,编程,异常,设计,',1,'http://my.csdn.net/superMarss',1),(2215,2,'http://blog.csdn.net/supera_li/article/details/44940563','【总结】Effective java经验之谈，类与接口','本章描述的是，自己在做系统重构的时候，阅读的章节，给自己在架构方面提供很大帮助。总结出一些干货分享一下啊啊啊~~主要应用场景是编写类与接口的时候需要注意的问题。每一章不一定按照顺序更新。欢迎拍砖补充。',953,'csdn/java/1_1_1_3_1504264520.942652.html','2015-04-08 14:45','superMarss',0,'java,类,',1,'http://my.csdn.net/superMarss',1),(2216,2,'http://blog.csdn.net/supera_li/article/details/45064081','【总结】Effective java经验之谈，泛型','对于泛型这一章，在起始写框架的时候，并没有注意细节，造成了很多方法或者类的错误设计。这本书在这点上弥补了我一个短板。大概的总结如下。',1017,'csdn/java/1_1_1_4_1504264522.188482.html','2015-04-15 20:02','superMarss',0,'java,设计,泛型,api,arraylist,',1,'http://my.csdn.net/superMarss',1),(2217,2,'http://blog.csdn.net/supera_li/article/details/44940277','【总结】Effective java经验之谈，创建和销毁对象','关于Effective java 这本书，自己的一些总结性的思考。篇幅可能不按照目录来，因为自己喜欢先看哪一章就直接阅读了。不过能确定的是，每一章都会有总结。欢迎大家拍砖与补充。',1114,'csdn/java/1_1_1_5_1504264523.145457.html','2015-04-08 14:38','superMarss',2,'java,开发经验,编码,',1,'http://my.csdn.net/superMarss',1),(2218,4,'http://blog.csdn.net/dlutbrucezhang/article/details/9798527','Linux内核2.6的进程调度','Linux是多任务抢占操作系统，多任务就是指多个进程间通过分时切换来并发执行。非抢占的系统是对每个进程而言，除非时间片用完或主动放弃否则不会被剥夺CPU,主动放弃包括调用一些调度的系统调用（比如sch...',1410,'csdn/linux/1_0_3_0_1504264523.352568.html','2013-08-06 22:08','DLUTBruceZhang',0,'处理器,算法,Linux Kernel,内核,Linux,',0,'http://my.csdn.net/DLUTBruceZhang',1),(2219,2,'http://blog.csdn.net/supera_li/article/details/45034203','【总结】Effective java经验之谈，通用方法','对于通用方法，其实应用的场景是比较多的，我们在写一个类的时候，就要考虑是否要编写该方法的通用方法。这使得我们为以后该类的扩展性与使用方面提供很大的便利。',1028,'csdn/java/1_1_1_2_1504264524.314889.html','2015-04-13 23:34','superMarss',0,'设计,hashcode,equals,继承,boolean,',1,'http://my.csdn.net/superMarss',1),(2220,4,'http://blog.csdn.net/dlutbrucezhang/article/details/8699776','Linux中的中断处理','与Linux设备驱动中中断处理相关的首先是申请与释放IRQ的API request_irq()和free_irq()，\r\nrequest_irq()的原型为：\r\nint request_irq(uns...',3356,'csdn/linux/1_0_3_6_1504264524.363123.html','2013-03-22 14:19','DLUTBruceZhang',4,'Linux,UNIX,中断,中断处理程序,注册中断中断函数,',5,'http://my.csdn.net/DLUTBruceZhang',1),(2221,4,'http://blog.csdn.net/dlutbrucezhang/article/details/8694999','Linux进程状态','进程状态\r\n\r\n在linux下，通过ps命令我们能够查看到系统中存在的进程，以及它们的状态：\r\n\r\nR (TASK_RUNNING)，可执行状态。\r\n\r\n只有在该状态的进程才可能在CPU上运行。而同一...',1719,'csdn/linux/1_0_3_10_1504264525.558145.html','2013-03-20 10:04','DLUTBruceZhang',3,'Linux,Unix,信号,进程,状态,',2,'http://my.csdn.net/DLUTBruceZhang',1),(2222,4,'http://blog.csdn.net/dlutbrucezhang/article/details/8694793','Linux2.6 内核进程调度分析','Linux2.6 内核进程调度分析\r\n\r\n\r\n   进程的调度时机与引起进程调度的原因和进程调度的方式有关。在 2.6 中,除核心应用\r\n    主动调用调度器之外, 核心还在应用不完全感知的情况下在...',2471,'csdn/linux/1_0_3_11_1504264526.411986.html','2013-03-20 09:37','DLUTBruceZhang',0,'Linux2.6,进程,调度,schedule,UNIX,',1,'http://my.csdn.net/DLUTBruceZhang',1),(2223,2,'http://blog.csdn.net/qq_26525215/article/details/51136848','Java-单机版的书店管理系统(练习设计模块和思想_系列 五 )','经过前几次的发博客。。 \n我发现这样发代码太费劲了。。所以我把目前我完成的源代码上传到百度云里面去了。 \n百度云链接： \nhttp://pan.baidu.com/s/1o7X1Kk6 \n链接如果失效...',12657,'csdn/java/1_0_1_12_1504264527.374729.html','2016-04-12 20:54','qq_26525215',8,'设计,管理,数据,java,模块设计,',1,'http://my.csdn.net/qq_26525215',1),(2224,4,'http://blog.csdn.net/dlutbrucezhang/article/details/8701666','Linux系统调用','1       系统调用意义\r\n\r\nlinux内核中设置了一组用于实现系统功能的子程序，称为系统调用。系统调用和普通库函数调用非常相似，只是系统调用由操作系统核心提供，运行于核心态，而普通的函数调用由...',1657,'csdn/linux/1_0_3_7_1504264527.436571.html','2013-03-22 14:19','DLUTBruceZhang',0,'Linux,系统调用,内核,进程,操作系统,',2,'http://my.csdn.net/DLUTBruceZhang',1),(2225,2,'http://blog.csdn.net/qq_26525215/article/details/51117135','Java-单机版的书店管理系统(练习设计模块和思想_系列 四(2) )','说明：本博客为补全上篇-Java-单机版的书店管理系统(练习设计模块和思想_系列 四(1) )的，所以如果不懂，请先看上一篇。 \n本系列都是我一步一步学习来的， \n所以，可能比较适合初学设计模块的人来...',7138,'csdn/java/1_0_1_13_1504264528.61916.html','2016-04-11 00:36','qq_26525215',0,'设计,管理,博客,class,',1,'http://my.csdn.net/qq_26525215',1),(2226,4,'http://blog.csdn.net/dlutbrucezhang/article/details/8696296','Linux进程模型总结','一个进程在CPU上运行可以有两种运行模式（进程状态）：用户模式和内核模式。如果当前运行的是用户程序（用户代码），那么对应进程就处于用户模式（用户态），如果出现系统调用或者发生中断，那么对应进程就处于内...',2461,'csdn/linux/1_0_3_8_1504264528.702365.html','2013-03-20 14:26','DLUTBruceZhang',0,'Linux,UNIX,进程,模型,fork,',4,'http://my.csdn.net/DLUTBruceZhang',1),(2227,4,'http://blog.csdn.net/dlutbrucezhang/article/details/8695224','Linux进程休眠和唤醒','当进程以阻塞的方式通信，在得到结果前进程会挂起休眠。\r\n为了将进程以一种安全的方式进入休眠，我们需要牢记两条规则：\r\n一、永远不要在原子上下文中进入休眠。\r\n二、进程休眠后，对环境一无所知。唤醒后，必...',4160,'csdn/linux/1_0_3_9_1504264529.564963.html','2013-03-20 10:39','DLUTBruceZhang',0,'Linux,Unix,进程,休眠,唤醒,',3,'http://my.csdn.net/DLUTBruceZhang',1),(2228,2,'http://blog.csdn.net/qq_26525215/article/details/51089734','Java-单机版的书店管理系统(练习设计模块和思想_系列 二 )','今天对前面的代码有了小小的修改，让代码更加完善了一点。 \n至于用户唯一标识码uuid，会在以后修改成程序内部生成的， \n现在的uuid还是由用户自己设置。今天对这个程序，添加了用户界面的表现层的一部分...',5596,'csdn/java/1_0_1_16_1504264529.684558.html','2016-04-07 21:40','qq_26525215',0,'界面,管理,java,模块设计,app,',0,'http://my.csdn.net/qq_26525215',1),(2229,2,'http://blog.csdn.net/qq_26525215/article/details/51054965','Java---设计模块(装饰模式)','★ 场景和问题在不对原有对象类进行修改的基础上，如何给一个或多个已有的类对象提供增强额外的功能？★ 引例 \n写一个MyBufferedReader类，使它能够对字符流(如FileReader、Inpu...',3337,'csdn/java/1_0_1_19_1504264530.578956.html','2016-04-04 00:58','qq_26525215',0,'字符流,设计,对象,',0,'http://my.csdn.net/qq_26525215',1),(2230,2,'http://blog.csdn.net/qq_26525215/article/details/51071653','Java---设计模式app小软件汇总应用','写了一个app小软件，重点不在于软件，软件bug挺多，也没去修改。 \n这个小软件只是为了更好的说明和了解设计模块而做的。 \nJava 程序设计–包结构 \nJava程序设计的系统体系结构很大一部分都体现...',5373,'csdn/java/1_0_1_18_1504264530.630782.html','2016-04-06 02:21','qq_26525215',0,'设计模式,java,应用,结构,',3,'http://my.csdn.net/qq_26525215',1),(2231,4,'http://blog.csdn.net/dlutbrucezhang/article/details/9792203','Linux上程序调试的基石(2)--GDB','3. GDB的实现 GDB是GNU发布的一个强大的程序调试工具，用以调试C/C++程序。可以使程序员在程序运行的时候观察程序在内存/寄存器中的使用情况。它的实现也是基于ptrace系统调用来完成的。 ...',1508,'csdn/linux/1_0_3_1_1504264530.789566.html','2013-08-06 15:22','DLUTBruceZhang',0,'调试,GDB,内存,C++,C,',1,'http://my.csdn.net/DLUTBruceZhang',1),(2232,4,'http://blog.csdn.net/dlutbrucezhang/article/details/9792153','Linux上程序调试的基石(1)--ptrace','引子: 1.在Linux系统中，进程状态除了我们所熟知的TASK_RUNNING，TASK_INTERRUPTIBLE，TASK_STOPPED等，还有一个TASK_TRACED。这表明这个进程处于什...',1500,'csdn/linux/1_0_3_2_1504264530.996703.html','2013-08-06 15:20','DLUTBruceZhang',0,'调试,printf,helloworld,C,C++,',0,'http://my.csdn.net/DLUTBruceZhang',1),(2233,2,'http://blog.csdn.net/qq_26525215/article/details/51073546','Java-单机版的书店管理系统(练习设计模块和思想_系列 一 )','书店管理系统：项目练习目标 ： \n1、Java应用程序基本分析 \n2、培养面向对象编程的基本思想 \n3、Java基本设计模式综合应用 \n4、掌握分层和接口的基本设计 \n5、构建合理的Java应用程序包...',6178,'csdn/java/1_0_1_17_1504264531.657311.html','2016-04-06 14:05','qq_26525215',7,'java,面向对象编程,设计模式,管理,',6,'http://my.csdn.net/qq_26525215',1),(2234,4,'http://blog.csdn.net/dlutbrucezhang/article/details/9773279','printk的用法','printk的用法内核通过 printk() 输出的信息具有日志级别，日志级别是通过在 printk() 输出的字符串前加一个带尖括号的整数来控制的，如 printk(\"Hello, world!\\n...',1459,'csdn/linux/1_0_3_4_1504264531.935523.html','2013-08-05 21:45','DLUTBruceZhang',0,'IT,控制台,内核,调试,宏,',0,'http://my.csdn.net/DLUTBruceZhang',1),(2235,2,'http://blog.csdn.net/qq_26525215/article/details/51116429','Java-单机版的书店管理系统(练习设计模块和思想_系列 四(1) )','本系列四介绍说明：主要是添加了Uuid模块，现在的uuid并不是由用户输入，而是我们通过软件内部自动生成（通过唱票模式），uuid是不会产生重复的！还有把主界面改了下，以后会改成登录页面的（待完善）。...',5866,'csdn/java/1_0_1_14_1504264532.720198.html','2016-04-11 00:11','qq_26525215',0,'设计,界面,软件,图书,管理,',1,'http://my.csdn.net/qq_26525215',1),(2236,4,'http://blog.csdn.net/dlutbrucezhang/article/details/9772049','Linux内核基础','Linux系统运行的应用程序通过系统调用来与内核通信。应用程序通常调用库函数（比如C库函数）再有库函数通过系统调用界面，让内核带其完成各种不同的任务。下面这张图显示的就是应用程序，内核和硬件之间的关系...',1329,'csdn/linux/1_0_3_5_1504264532.766295.html','2013-08-05 20:42','DLUTBruceZhang',0,'Linux Kernel,内核,应用,处理器,库,',3,'http://my.csdn.net/DLUTBruceZhang',1),(2237,2,'http://blog.csdn.net/qq_26525215/article/details/51099202','Java-单机版的书店管理系统(练习设计模块和思想_系列 三 )','介绍今天对系列二的一个添加用户的输入小bug进行了解决， \n增加了用户模块的，删除用户，和修改用户模块。下面的代码是相对于系列二来说进行了修改或者是增加的类.先看AddPanel类的修改： \n在收集参...',4549,'csdn/java/1_0_1_15_1504264533.700442.html','2016-04-08 19:53','qq_26525215',2,'设计,java,',1,'http://my.csdn.net/qq_26525215',1),(2238,4,'http://blog.csdn.net/dlutbrucezhang/article/details/9773317','Linux中printk()实例','新建hello.c#include   \n#include   \n \n \nint init_module(void) \n{ \n    printk(KERN_INFO \"Welcome.....\\n\"...',1116,'csdn/linux/1_0_3_3_1504264533.784398.html','2013-08-05 21:47','DLUTBruceZhang',0,'Linux,shell,测试,终端,实例,',0,'http://my.csdn.net/DLUTBruceZhang',1),(2239,2,'http://blog.csdn.net/qq_26525215/article/details/51202656','Java-单机版的书店管理系统(练习设计模块和思想_系列汇总)','介绍：本软件系列到此，我已经全部写完了。项目练习目标 ：1、Java应用程序基本分析  \n2、培养面向对象编程的基本思想  \n3、Java基本设计模式综合应用  \n4、掌握分层和接口的基本设计  \n5...',8957,'csdn/java/1_0_1_8_1504264536.851537.html','2016-04-20 17:26','qq_26525215',4,'java,设计,管理,面向对象编程,应用,',3,'http://my.csdn.net/qq_26525215',1),(2240,4,'http://blog.csdn.net/dlutbrucezhang/article/details/9086653','Linux System Programming -- Appendix','这本书附录的名字是 “GCC对C语言的扩展” ，一下的内容是对扩展的总结类型发现GCC 允许通过变量的引用识别类型。这种操作支持泛型编程。在 C++、Ada 和 Java™ 语言等许多现代编程语言中都...',1257,'csdn/linux/1_1_1_0_1504264536.942217.html','2013-06-18 08:41','DLUTBruceZhang',0,'Linux,性能优化,行业数据,编译器,GCC,',0,'http://my.csdn.net/DLUTBruceZhang',1),(2241,2,'http://blog.csdn.net/qq_26525215/article/details/51190696','Java-单机版的书店管理系统(练习设计模块和思想_系列 七 )','本系列前面博客的链接：Java-单机版的书店管理系统(练习设计模块和思想_系列 六 ) \nhttp://blog.csdn.net/qq_26525215/article/details/511692...',6060,'csdn/java/1_0_1_10_1504264537.805061.html','2016-04-19 15:09','qq_26525215',0,'博客,设计,管理,',1,'http://my.csdn.net/qq_26525215',1),(2242,4,'http://blog.csdn.net/dlutbrucezhang/article/details/9046365','Linux System Programming --Chapter Four','这一章介绍的主题是--高级文件 I/O一. 分散--聚集I/O分散聚集I/O是一种进行输入和输出的方法。通过此方法，单一系统调用可以将缓冲区向量写入单一数据流，或者将单一数据流读取到缓冲区向量。这个类...',1618,'csdn/linux/1_1_1_6_1504264537.922721.html','2013-06-14 12:20','DLUTBruceZhang',0,'Linux,性能优化,C,高级IO,系统调用,',1,'http://my.csdn.net/DLUTBruceZhang',1),(2243,2,'http://blog.csdn.net/qq_26525215/article/details/51169277','Java-单机版的书店管理系统(练习设计模块和思想_系列 六 )','本系列前面博客的链接：Java-单机版的书店管理系统(练习设计模块和思想_系列 五 ) \nhttp://blog.csdn.net/qq_26525215/article/details/511368...',6400,'csdn/java/1_0_1_11_1504264538.972116.html','2016-04-16 17:48','qq_26525215',6,'设计,博客,管理,分层,模块,',1,'http://my.csdn.net/qq_26525215',1),(2244,4,'http://blog.csdn.net/dlutbrucezhang/article/details/9080173','Linux 内存映射函数 mmap（）函数详解','一、概述          内存映射，简而言之就是将用户空间的一段内存区域映射到内核空间，映射成功后，用户对这段内存区域的修改可以直接反映到内核空间，同样，内核空间对这段区域的修改也直接反映用户空间。...',21369,'csdn/linux/1_1_1_10_1504264539.01748.html','2013-06-12 19:02','DLUTBruceZhang',0,'Linux,内存,地图,内核,行业数据,',4,'http://my.csdn.net/DLUTBruceZhang',1),(2245,4,'http://blog.csdn.net/dlutbrucezhang/article/details/9058583','Linux 虚拟内存和物理内存的理解','首先，让我们看下虚拟内存：第一层理解1.         每个进程都有自己独立的4G内存空间，各个进程的内存空间具有类似的结构2.       一个新进程建立的时候，将会建立起自己的内存空间，此进程的...',15096,'csdn/linux/1_1_1_12_1504264540.003742.html','2013-06-12 09:48','DLUTBruceZhang',3,'内存,Linux,内核,磁盘,物理虚拟内存,',5,'http://my.csdn.net/DLUTBruceZhang',1),(2246,2,'http://blog.csdn.net/qq_26525215/article/details/51195473','Java-单机版的书店管理系统(练习设计模块和思想_系列 八 )','本系列前面博客的链接：Java-单机版的书店管理系统(练习设计模块和思想_系列 七 ) \nhttp://blog.csdn.net/qq_26525215/article/details/511906...',8578,'csdn/java/1_0_1_9_1504264540.103925.html','2016-04-20 00:46','qq_26525215',0,'设计模块,java,项目,',1,'http://my.csdn.net/qq_26525215',1),(2247,2,'http://blog.csdn.net/qq_26525215/article/details/51020655','【3】JAVA---地址App小软件（AddPanel.class）（表现层）','添加地址信息界面。年龄和地址必须是数字，否则会弹出窗口提示。 \n地址信息不能为空。 \n/*\n * AddPanel.java\n *\n * Created on __DATE__, __TIME__\n ...',579,'csdn/java/1_0_1_5_1504264540.935691.html','2016-03-31 00:07','qq_26525215',0,'软件,',0,'http://my.csdn.net/qq_26525215',1),(2248,4,'http://blog.csdn.net/dlutbrucezhang/article/details/9058989','缓冲区','什么是缓冲区缓冲区又称为缓存，它是内存空间的一部分。也就是说，在内存空间中预留了一定的存储空间，这些存储空间用来缓冲输入或输出的数据，这部分预留的空间就叫做缓冲区。缓冲区根据其对应的是输入设备还是输出...',2477,'csdn/linux/1_1_1_13_1504264541.191946.html','2013-06-12 09:47','DLUTBruceZhang',0,'磁盘,行业数据,处理器,C,缓冲区,',2,'http://my.csdn.net/DLUTBruceZhang',1),(2249,4,'http://blog.csdn.net/dlutbrucezhang/article/details/9080157','程序（进程）内存分布 解析','在多任务操作系统中的每一个进程都运行在一个属于它自己的内存沙盘中。这个沙盘就是虚拟地址空间（virtual address space），在32位模式下它总是一个4GB的内存地址块。这些虚拟地址通过页...',3535,'csdn/linux/1_1_1_11_1504264541.977617.html','2013-06-12 18:50','DLUTBruceZhang',1,'内存,行业数据,栈,Linux,内核,',6,'http://my.csdn.net/DLUTBruceZhang',1),(2250,4,'http://blog.csdn.net/dlutbrucezhang/article/details/9030575','有限状态机','有限状态机是一种数学概念，运用到程序中，可用于有限数量的状态的变化，每个子程序进行一些处理并选择下一种状态。基本的实现思路就是用一张表保存所有可能的状态，并列出进入每个状态时可能执行的所有动作，其中最...',2933,'csdn/linux/1_1_1_17_1504264543.135604.html','2013-06-08 09:25','DLUTBruceZhang',1,'存储,C++,编程,宏,有限状态机,',1,'http://my.csdn.net/DLUTBruceZhang',1),(2251,2,'http://blog.csdn.net/qq_26525215/article/details/51020570','【1】JAVA---地址App小软件（AddressApp.class）（初步接触项目开发的分层思想）（表现层）','这个是表现层的main方法。 \n实现的地址信息有： \n姓名，性别，年龄，电话，地址。 \n实现的功能有： \n增加地址； \n删除地址； \n修改地址； \n查找地址：其中年龄的查找为年龄段的查找。数据存储的方...',614,'csdn/java/1_0_1_7_1504264543.184161.html','2016-03-30 23:45','qq_26525215',0,'软件,app,',1,'http://my.csdn.net/qq_26525215',1),(2252,4,'http://blog.csdn.net/dlutbrucezhang/article/details/9084721','字符编码总结（UTF-8，UNICODE）','UTF-8是Unicode的一种实现方式，也就是它的字节结构有特殊要求，所以我们说一个汉字的范围是0X4E00到0x9FA5，是指unicode值，至于放在utf-8的编码里去就是由三个字节来组织，所...',2458,'csdn/linux/1_1_1_7_1504264544.274125.html','2013-06-13 14:18','DLUTBruceZhang',0,'编码,Unicode,UTF-8,存储,ASC,',1,'http://my.csdn.net/DLUTBruceZhang',1),(2253,4,'http://blog.csdn.net/dlutbrucezhang/article/details/9042229','Linux System Programming --Chapter Three','这一章的主题是--缓冲式I/O一，流与缓冲       流I/O是由C语言的标准函数提供的，这些I/O可以替代系统中提供的read和write函数。事实上流I/O的内部封装了这两个基本的文件读写系统调...',1773,'csdn/linux/1_1_1_8_1504264545.195313.html','2013-06-13 09:48','DLUTBruceZhang',1,'Linux,二进制,C,标准,缓冲IO,',1,'http://my.csdn.net/DLUTBruceZhang',1),(2254,2,'http://blog.csdn.net/qq_26525215/article/details/51020692','【5】JAVA---地址App小软件（DeletePanel.class）（表现层）','删除地址的表现层类。 \n如果没有选中要删除的地址信息，会出现窗口提示： \n删除地址界面：（无法修改数据，只能看） \n/*\n * DeletePanel.java\n *\n */package cn.hn...',7658,'csdn/java/1_0_1_3_1504264545.240339.html','2016-03-31 00:17','qq_26525215',0,'软件,app,界面,数据,class,',0,'http://my.csdn.net/qq_26525215',1),(2255,4,'http://blog.csdn.net/dlutbrucezhang/article/details/9035825','Linux System Programming --Chapter Two','首先，需要解释的东西是Linux系统调用一、 什么是系统调用     在Linux的世界里，我们经常会遇到系统调用这一术语，所谓系统调用，就是内核提供的、功能十分强大的一系列的函数。这些系统调用是在内...',1993,'csdn/linux/1_1_1_9_1504264546.420429.html','2013-06-13 09:45','DLUTBruceZhang',1,'Linux,磁盘,内核,标准,文件IO,',1,'http://my.csdn.net/DLUTBruceZhang',1),(2256,4,'http://blog.csdn.net/dlutbrucezhang/article/details/9082873','Linux System Programming --Chapter Nine','这一章的标题是 “信号” ，所以本文将对信号的各个方面进行介绍，由于Linux中的信号机制远比想象的要复杂，所以，本文不会讲的很全面。。。信号机制是进程之间相互传递消息的一种方法，信号全称为软中断信号...',1476,'csdn/linux/1_1_1_1_1504264547.52845.html','2013-06-18 08:41','DLUTBruceZhang',0,'Linux,printf,内核,Linux kill,信号,',0,'http://my.csdn.net/DLUTBruceZhang',1),(2257,4,'http://blog.csdn.net/dlutbrucezhang/article/details/9080491','Linux System Programming --Chapter Eight','内存管理一.分配动态内存的几个函数用户空间内存分配：malloc、calloc、realloc1、malloc原型如下：extern void *malloc(unsigned int num_byt...',1564,'csdn/linux/1_1_1_2_1504264548.594319.html','2013-06-18 08:41','DLUTBruceZhang',0,'Linux,内存,存储,行业数据,C,',0,'http://my.csdn.net/DLUTBruceZhang',1),(2258,4,'http://blog.csdn.net/dlutbrucezhang/article/details/9074891','Linux System Programming --Chapter Six','这一章的题目是--高级进程管理，这篇文章将以书中所叙的顺序进行讲解1、让出处理器Linux提供一个系统调用运行进程主动让出执行权：sched_yield。进程运行的好好的，为什么需要这个函数呢？有一种...',1282,'csdn/linux/1_1_1_4_1504264549.616554.html','2013-06-17 14:08','DLUTBruceZhang',0,'Linux,处理器,内核,优先级,进程调度,',1,'http://my.csdn.net/DLUTBruceZhang',1),(2259,4,'http://blog.csdn.net/dlutbrucezhang/article/details/9070881','Linux System Programming --Chapter Five','这一章中的内容出现在博主的多篇文章中，所以并不对这一章进行详细的说明解释，只是对几个比较重要的概念进行说明一.写时复制技术COW技术初窥：      在Linux程序中，fork（）会产生一个和父进程...',1595,'csdn/linux/1_1_1_5_1504264550.826422.html','2013-06-14 12:20','DLUTBruceZhang',0,'Linux,技术,内核,数据结构,守护进程,',1,'http://my.csdn.net/DLUTBruceZhang',1),(2260,4,'http://blog.csdn.net/dlutbrucezhang/article/details/9075433','Linux System Programming --Chapter Seven','文件和目录管理一.文件与其元数据我们首先看一下一个简单的文本文件是怎么保存的：打开vim，编辑一段文本：[root@localhost ~]# vim hello.txt编辑内容如下：opencfg....',1331,'csdn/linux/1_1_1_3_1504264550.874244.html','2013-06-17 14:09','DLUTBruceZhang',0,'Linux,行业数据,类,文件系统,Unix,',1,'http://my.csdn.net/DLUTBruceZhang',1),(2261,4,'http://blog.csdn.net/dlutbrucezhang/article/details/9063581','Linux 2.6 中的直接 I/O 技术','Linux 2.6 中提供的几种文件访问方式所有的 I/O 操作都是通过读文件或者写文件来完成的。在这里，我们把所有的外围设备，包括键盘和显示器，都看成是文件系统中的文件。访问文件的方法多种多样，这里...',1763,'csdn/linux/1_1_1_14_1504264551.747366.html','2013-06-11 12:16','DLUTBruceZhang',0,'Linux,行业数据,操作系统,应用,磁盘,',1,'http://my.csdn.net/DLUTBruceZhang',1),(2262,4,'http://blog.csdn.net/dlutbrucezhang/article/details/9050467','Linux 内核详解以及内核缓冲区技术','Linux 内核简介现在让我们从一个比较高的高度来审视一下 GNU/Linux 操作系统的体系结构。您可以从两个层次上来考虑操作系统，如图 2 所示。图 2. GNU/Linux 操作系统的基本体系结...',4797,'csdn/linux/1_1_1_18_1504264552.836616.html','2013-06-08 09:25','DLUTBruceZhang',0,'Linux,内核,磁盘,Structure,缓冲区,',2,'http://my.csdn.net/DLUTBruceZhang',1),(2263,4,'http://blog.csdn.net/dlutbrucezhang/article/details/9049687','Linux 用户进程内存空间详解','经常使用top命令了解进程信息，其中包括内存方面的信息。命令top帮助文档是这么解释各个字段的。VIRT	, Virtual Image (kb)RES, Resident size (kb)SHR,...',2271,'csdn/linux/1_1_1_19_1504264553.743916.html','2013-06-08 09:19','DLUTBruceZhang',0,'Linux,内存,malloc,磁盘,页存储,',1,'http://my.csdn.net/DLUTBruceZhang',1),(2264,4,'http://blog.csdn.net/dlutbrucezhang/article/details/9068017','Linux 开机启动过程分析','开机过程指的是从打开计算机电源直到LINUX显示用户登录画面的全过程。分析LINUX开机过程也是深入了解LINUX核心工作原理的一个很好的途径。启动第一步－－加载BIOS当 你打开计算机电源，计算机会...',3662,'csdn/linux/1_1_1_15_1504264554.806303.html','2013-06-11 12:08','DLUTBruceZhang',0,'Linux,内核,内存,init,启动过程,',3,'http://my.csdn.net/DLUTBruceZhang',1),(2265,4,'http://blog.csdn.net/dlutbrucezhang/article/details/9030641','How program works','1.gdb常用调试命令要用gdb调试的话，编译命令需要添加-g参数，例如[plain] view plaincopygcc -g main.c -o main  b linenum          ...',1432,'csdn/linux/1_1_1_16_1504264555.921151.html','2013-06-08 09:26','DLUTBruceZhang',1,'栈,操作系统,终端,内存,处理器,',1,'http://my.csdn.net/DLUTBruceZhang',1),(2266,2,'http://blog.csdn.net/kaikai_sk/article/details/50675439','设计模式之单例模式','Car.java文件package com.bjsxt.dp.factory;public class Car\n{\n    *private static Car car=new Car();*   ...',163,'csdn/java/1_2_1_0_1504264571.316743.html','2016-02-16 16:13','kaikai_sk',0,'设计模式,',0,'http://my.csdn.net/kaikai_sk',1),(2267,2,'http://blog.csdn.net/kaikai_sk/article/details/50676041','设计模式之简单工厂模式','Moveable.java:public interface Moveable\n{\n    void Run();\n}\nVehicleFactory.java:public abstract clas...',150,'csdn/java/1_2_1_1_1504264572.452242.html','2016-02-16 17:26','kaikai_sk',0,'设计模式,简单工厂,',0,'http://my.csdn.net/kaikai_sk',1),(2268,2,'http://blog.csdn.net/kaikai_sk/article/details/73330612','设计模式之观察者','Internet气象站例题： \n    提供温度、气压和湿度的接口 \n    测量数据更新时需时时通知给第三方 \n    需要设计开放型API，便于其他第三方公司也能接入气象站获取数据观察者模式原理：...',101,'csdn/java/1_2_1_6_1504264573.534878.html','2017-06-16 13:36','kaikai_sk',0,'设计模式,',0,'http://my.csdn.net/kaikai_sk',1),(2269,2,'http://blog.csdn.net/kaikai_sk/article/details/73385482','设计模式之适配器模式','现实生活中一些适配器例子例题：用火鸡冒充鸭子 \n适配器模式原理： \n适配器模式：将一个类的接口转换成另一种接口.让原本接口不兼容的类可以兼容. \n \n从用户的角度看不到被适配者，是解耦的 \n用户调用适...',60,'csdn/java/1_2_1_10_1504264574.475593.html','2017-06-17 21:17','kaikai_sk',0,'设计模式,',0,'http://my.csdn.net/kaikai_sk',1),(2270,2,'http://blog.csdn.net/kaikai_sk/article/details/73433636','设计模式之模板模式','例题：泡咖啡和泡茶的步骤泡咖啡                                       泡茶 \n水烧开                                    水烧开...',105,'csdn/java/1_2_1_12_1504264575.460372.html','2017-06-18 16:26','kaikai_sk',0,'设计模式,',0,'http://my.csdn.net/kaikai_sk',1),(2271,2,'http://blog.csdn.net/kaikai_sk/article/details/73436688','设计模式之迭代器模式','例题：两个菜馆合并后的菜单问题蛋糕店与餐厅合并后，怎么统一管理菜单项目 \n问题：一个用ArrayList管理菜单，一个用数组管理迭代器模式的原理和设计关键代码：1. 实现迭代器额接口\npublic c...',82,'csdn/java/1_2_1_13_1504264576.612209.html','2017-06-18 19:04','kaikai_sk',0,'设计模式,',0,'http://my.csdn.net/kaikai_sk',1),(2272,2,'http://blog.csdn.net/kaikai_sk/article/details/73429614','设计模式之外观','例题：一个家庭影院项目组建一个家庭影院： \nDVD播放器、投影仪、自动屏幕、环绕立体声、爆米花机外观模式的原理和设计外观模式：提供一个统一的接口，来访问子系统中一群功能相关接口 \n外观模式定义了一个高...',86,'csdn/java/1_2_1_11_1504264577.579647.html','2017-06-18 13:02','kaikai_sk',0,'设计模式,',0,'http://my.csdn.net/kaikai_sk',1),(2273,2,'http://blog.csdn.net/kaikai_sk/article/details/73344360','设计模式之单例','单例模式的意义有些对象我们只需要一个：线程池、缓存、硬件设备等 \n如果多个实例会有造成冲突、结果的不一致性等问题 \n是否可以用静态变量方式来实现？ \n或者程序员之间协商个全局变量？ \n单例模式：确保一...',52,'csdn/java/1_2_1_7_1504264578.775785.html','2017-06-16 17:35','kaikai_sk',0,'设计模式,',0,'http://my.csdn.net/kaikai_sk',1),(2274,2,'http://blog.csdn.net/kaikai_sk/article/details/73381455','设计模式之工厂系列','例题：披萨项目：要方便披萨品种的扩展、要便于维护、要能运行时扩展简单工厂模式 — 简单工厂模式的设计方案简单工厂模式的设计方案：定义一个实例化披萨对象的类，封装创建对象的代码 \n简单工厂模式：定义了一...',83,'csdn/java/1_2_1_8_1504264578.819403.html','2017-06-17 16:28','kaikai_sk',0,'设计模式,',0,'http://my.csdn.net/kaikai_sk',1),(2275,2,'http://blog.csdn.net/kaikai_sk/article/details/73382564','设计模式之命令模式','例题：家电自动化遥控器API各家电API \n遥控器接口 \n要求自动化遥控器：扩展性好、维护性好 \n命令模式原理遥控器例题的类图code Address:http://download.csdn.net...',80,'csdn/java/1_2_1_9_1504264579.681577.html','2017-06-17 19:54','kaikai_sk',0,'设计模式,',0,'http://my.csdn.net/kaikai_sk',1),(2276,2,'http://blog.csdn.net/kaikai_sk/article/details/50676245','设计模式之分析和需求的概念','要实现怎样的功能？？怎样去实现我们所要的功能？？',115,'csdn/java/1_2_1_2_1504264580.744653.html','2016-02-16 17:55','kaikai_sk',0,'设计模式,需求,',0,'http://my.csdn.net/kaikai_sk',1),(2277,2,'http://blog.csdn.net/kaikai_sk/article/details/73304598','设计模式之装饰器','案例： \n   咖啡馆订单： \n    1）、咖啡种类：Espresso、ShortBlack、LongBlack、Decaf \n    2）、调料：Milk、Soy、Chocolate \n    3...',77,'csdn/java/1_2_1_3_1504264581.926302.html','2017-06-15 22:45','kaikai_sk',0,'设计模式,',0,'http://my.csdn.net/kaikai_sk',1),(2278,4,'http://blog.csdn.net/ljy1988123/article/details/48978375','Linux内核工程导论——电源管理子系统','电源管理子系统\nACPI\n温度监测与控制',650,'csdn/linux/1_0_2_0_1504264583.049149.html','2015-10-08 20:31','ljy1988123',0,'linux kernel,内核,',0,'http://my.csdn.net/ljy1988123',1),(2279,2,'http://blog.csdn.net/kaikai_sk/article/details/73321713','设计模式之策略','例题：模拟鸭子 \n          各种颜色，各种不同动作，如飞，叫，游泳 \n    1）分析项目变化与不变部分，提取变化部分，抽象成接口+实现； \n    2）鸭子哪些功能是会根据新需求变化的？叫...',63,'csdn/java/1_2_1_5_1504264583.994671.html','2017-06-16 09:59','kaikai_sk',0,'设计模式,',0,'http://my.csdn.net/kaikai_sk',1),(2280,4,'http://blog.csdn.net/ljy1988123/article/details/48978485','Linux内核工程导论——硬件：音频子系统','音频子系统\r\n音频框架\r\n音频设备是非常常用，但又最容易在linux下出现问题的设备之一。音频设备种类和芯片繁多，所以必须提供足够多的驱动，并且有内核有足够的驱动与设备的匹配能力。也正是由于多样性，内...',900,'csdn/linux/1_0_2_2_1504264584.039919.html','2015-10-08 20:37','ljy1988123',0,'linux kernel,Linux,内核,',0,'http://my.csdn.net/ljy1988123',1),(2281,4,'http://blog.csdn.net/ljy1988123/article/details/48978503','Linux内核工程导论——硬件：无线子系统','WiMax\nWifi\n内核中有一个rfkill子系统，使用这个可以关闭任何一个射频收发器。Linux中倾向于通用架构子系统，各个设备其实都是实现这个子系统规定的函数。这些子系统向上就提供操作同类函数的...',1681,'csdn/linux/1_0_2_3_1504264585.010362.html','2015-10-08 20:37','ljy1988123',0,'Linux,内核,linux kernel,',0,'http://my.csdn.net/ljy1988123',1),(2282,4,'http://blog.csdn.net/ljy1988123/article/details/50912915','Linux内核工程导论——内核种类','内核概览linux内核并不是唯一的内核，也并不是唯一的一种内核。实际上linux内核属于Monolithic kernel的一个实现，这种内核还包括Unix系列（BSD、SunOS等），dos和win...',1472,'csdn/linux/1_0_2_18_1504264587.061601.html','2016-03-17 13:21','ljy1988123',1,'linux kernel,',0,'http://my.csdn.net/ljy1988123',1),(2283,4,'http://blog.csdn.net/ljy1988123/article/details/50579402','Linux内核工程导论——网络：路由：路由原理','背景与概览\n\n路由表\n\nIP层通过路由将数据包送达该送达的目的地址，这就要求在整个网络中建立正确的路由表。路由表的内容是记录要到达哪里下一跳需要发到哪里（可以是端口可以是ip），如此整个网络在单个节点...',1929,'csdn/linux/1_0_2_15_1504264590.334454.html','2016-01-25 19:50','ljy1988123',1,'网络,linux kernel,',2,'http://my.csdn.net/ljy1988123',1),(2284,4,'http://blog.csdn.net/ljy1988123/article/details/49870515','Linux内核工程导论——安全：概览','linux从unix和posix那里继承了最基本的安全机制：用户、文件权限、进程capabilities。但是仅有这些是不够的，很多第三方实现了新的机制，通过补丁的形式提供。如安全增强Linux（SE...',1503,'csdn/linux/1_0_2_13_1504264591.502612.html','2016-01-01 09:08','ljy1988123',0,'linux kernel,安全,',1,'http://my.csdn.net/ljy1988123',1),(2285,4,'http://blog.csdn.net/ljy1988123/article/details/49644587','Linux内核工程导论——进程社会学','服务与进程	进程是满足用户需求的一系列任务，有的为了提供一个交互的界面，有的为了提供一个后台的演算，有的为了提供一个网络服务，有的为了利用磁盘资源做存储。归根到底，进程就是需求的承载体。PC本身就是通...',1495,'csdn/linux/1_0_2_11_1504264595.653467.html','2015-11-04 22:43','ljy1988123',0,'Linux,cpu,操作系统,',0,'http://my.csdn.net/ljy1988123',1),(2286,4,'http://blog.csdn.net/ljy1988123/article/details/49593593','Linux内核工程导论——网络：下半部分:core','总览         最外层是3个文件:socket、compat；、sysctl_net。socket文件定义了操作系统暴漏给用户程序的接口，compat是兼容性考虑的特殊socket接口（主要服务...',1414,'csdn/linux/1_0_2_10_1504264596.937889.html','2015-11-02 23:02','ljy1988123',1,'Linux,linux kernel,kernel,socket,网络,',1,'http://my.csdn.net/ljy1988123',1),(2287,4,'http://blog.csdn.net/ljy1988123/article/details/48978663','Linux内核工程导论——内核架构概览','Linux内核通用技术\r\nlinux内核技巧与手段\r\nlinux内核上下层通信方式\r\n         定义一个接口体，包含各种函数指针，并且管理其列表。下层通过生成一个这样的结构体，将自己的操作函数...',1044,'csdn/linux/1_0_2_9_1504264597.39283.html','2015-10-08 20:45','ljy1988123',6,'linux kernel,Linux,内核,',0,'http://my.csdn.net/ljy1988123',1),(2288,4,'http://blog.csdn.net/ljy1988123/article/details/48978591','Linux内核工程导论——存储：通用块层','通用块层抽象\r\n         通用块层位于scsi的上层，文件系统的下层，系统主要的内存管理和读写优化都是在这里完成的。DIRECT_IO是跳过这一层的。这一层不是驱动，而是一种机制。其代码位于l...',2694,'csdn/linux/1_0_2_7_1504264598.68181.html','2015-10-08 20:43','ljy1988123',0,'linux kernel,缓存,数据结构,Linux,内核,',0,'http://my.csdn.net/ljy1988123',1),(2289,2,'http://blog.csdn.net/jjwwmlp456/article/details/40075219','Java 实现访问者(Visitor)模式','interface Visitor {\n	void visit(Gladiolus g);\n\n	void visit(Chrysanthemum c);\n}// concrete visitor		名...',1030,'csdn/java/1_0_2_0_1504264605.677381.html','2014-10-14 12:56','jjwwmlp456',0,'设计模式,访问者Visitor模式,',1,'http://my.csdn.net/jjwwmlp456',1),(2290,4,'http://blog.csdn.net/ljy1988123/article/details/50458044','Linux内核工程导论——网络：Netfilter概览','简介最早的内核包过滤机制是ipfwadm，后来是ipchains，再后来就是iptables/netfilter了。再往后，也就是现在是nftables。不过nftables与iptables还处于争...',1657,'csdn/linux/1_0_2_14_1504264605.957549.html','2016-01-04 19:52','ljy1988123',0,'Linux,内核,filter,iptables,',0,'http://my.csdn.net/ljy1988123',1),(2291,2,'http://blog.csdn.net/jjwwmlp456/article/details/40077711','Java 实现中介者(Mediator)模式','类图\r\n\r\n\r\npublic interface IMediator {\n\n	public void createMediator();\n\n	public void work();\n}\n\r\n/**\n ...',1059,'csdn/java/1_0_2_1_1504264606.803499.html','2014-10-14 15:36','jjwwmlp456',0,'设计模式,中介者Mediator模式,',1,'http://my.csdn.net/jjwwmlp456',1),(2292,4,'http://blog.csdn.net/ljy1988123/article/details/49823785','Linux内核工程导论–网络：TCP连接','Linux内核工程导论–网络：TCPTCP存在原因       TCP希望达成数据按序的，无损失的传输。 \n       只要有TCP这个协议的需求，就有其带来的问题。其问题是，既然要保证按序到达和完...',1918,'csdn/linux/1_0_2_12_1504264607.027887.html','2015-11-13 21:41','ljy1988123',0,'linux kernel,TCP,',0,'http://my.csdn.net/ljy1988123',1),(2293,2,'http://blog.csdn.net/jjwwmlp456/article/details/60875764','Android 使用Java8新特性之Lambda expression (附命令者模式简化)','前言Lambda expression，java8的新特性。使用Lambda expression，可以替代只有一个函数的接口实现，告别匿名内部类，代码看起来更简洁易懂。 \njava8还有其它一些新特...',1789,'csdn/java/1_0_2_6_1504264607.985195.html','2017-03-08 16:55','jjwwmlp456',9,'android,lambda,java8,',1,'http://my.csdn.net/jjwwmlp456',1),(2294,2,'http://blog.csdn.net/jjwwmlp456/article/details/40080721','Java 实现解释器(Interpreter)模式','/**\n * 声明一个抽象的解释操作\n * @author stone\n *\n */\npublic interface Interpreter {\n	\n	public void interpret(C...',1029,'csdn/java/1_0_2_2_1504264609.004558.html','2014-10-14 17:30','jjwwmlp456',0,'设计模式,解释器Interpreter模式,',0,'http://my.csdn.net/jjwwmlp456',1),(2295,2,'http://blog.csdn.net/jjwwmlp456/article/details/46739035','Android 建造者(Builder)模式','关于 Builder 模式 详述：http://blog.csdn.net/jjwwmlp456/article/details/39890699\n\n\n先来张图\n  \n看到 Android  中 使用...',1742,'csdn/java/1_0_2_3_1504264610.12015.html','2015-07-03 11:28','jjwwmlp456',0,'Android,Builder,',0,'http://my.csdn.net/jjwwmlp456',1),(2296,4,'http://blog.csdn.net/ljy1988123/article/details/48978625','Linux内核工程导论——存储：USB','kernel USB驱动层\r\n         首先USB（UniversalSerial Bus）是一种传输协议，并不是一种数据协议，也没有任何语义上的指令意义。USB传输协议所传输的SCSI命令才...',882,'csdn/linux/1_0_2_8_1504264611.504934.html','2015-10-08 20:44','ljy1988123',2,'kernel,usb,linux kernel,Linux,内核,',1,'http://my.csdn.net/ljy1988123',1),(2297,2,'http://blog.csdn.net/jjwwmlp456/article/details/52495661','HeadFirst 设计模式 笔记','设计原则\r\n1. 找出应用中可能需要变化之处，把它们独立出来，不要和那些不需要变化的代码混在一起。\r\n2. 针对接口编程，而不是针对实现编程。\r\n       针对接口编程，实质上是指针对超类型(su...',459,'csdn/java/1_0_2_5_1504264612.047209.html','2016-09-10 18:00','jjwwmlp456',0,'设计模式,',0,'http://my.csdn.net/jjwwmlp456',1),(2298,4,'http://blog.csdn.net/ljy1988123/article/details/48978533','Linux内核工程导论——存储：文件系统','文件系统层\n文件系统的种类和选用\n         文件系统有很多种，linux内核是个大杂烩，同时满足企业和个人的需求，文件系统也是如此，发行版也是如此。其中原因自己分析。\n         我们最...',1084,'csdn/linux/1_0_2_6_1504264613.337916.html','2015-10-08 20:39','ljy1988123',0,'linux kernel,Linux,内核,文件系统,存储,',0,'http://my.csdn.net/ljy1988123',1),(2299,4,'http://blog.csdn.net/ljy1988123/article/details/48978567','Linux内核工程导论——存储：缓存层','缓存层\nbdi：缓存设备\n         bdi是对块设备层的内存支持，相关代码页位于mm目录下。bdi的全称是backing device info，后备设备是非易失性存储器，但是这种存储器都比较...',1668,'csdn/linux/1_0_2_5_1504264614.346526.html','2015-10-08 20:41','ljy1988123',0,'缓存,文件系统,linux kernel,Linux,内核,',0,'http://my.csdn.net/ljy1988123',1),(2300,2,'http://blog.csdn.net/yqj2065/article/details/8592375','Java设计模式-导航','Java 设计模式++ 面向对象设计',3860,'csdn/java/1_1_2_7_1504264616.204731.html','2013-02-19 21:37','yqj2065',0,'Java 编程导论,设计模式,面向对象设计,导航,',15,'http://my.csdn.net/yqj2065',1),(2301,4,'http://blog.csdn.net/gatieme/article/details/51005811','进程间通信之-共享内存Shared Memory--linux内核剖析（十一）','共享内存共享内存是进程间通信中最简单的方式之一。共享内存是系统出于多个进程之间通讯的考虑，而预留的的一块内存区。共享内存允许两个或更多进程访问同一块内存，就如同 malloc() 函数向不同进程返回了...',3937,'csdn/linux/1_0_1_0_1504264616.416295.html','2016-03-29 15:11','gatieme',0,'函数,通信,内核,内存,malloc,',0,'http://my.csdn.net/gatieme',1),(2302,4,'http://blog.csdn.net/gatieme/article/details/50994533','进程间通信之-信号量semaphore--linux内核剖析（十）','信号量什么是信号量信号量的使用主要是用来保护共享资源，使得资源在一个时刻只有一个进程（线程）所拥有。\n  信号量的值为正的时候，说明它空闲。所测试的线程可以锁定而使用它。若为0，说明它被占用，测试的线...',4154,'csdn/linux/1_0_1_1_1504264617.428158.html','2016-03-28 23:37','gatieme',0,'通信,线程,测试,内核,信号,',0,'http://my.csdn.net/gatieme',1),(2303,4,'http://blog.csdn.net/gatieme/article/details/44958879','Linux内核绪论----Linux内核剖析（二）','什么是内核内核是操作系统最基本的部分。它是为众多应用程序提供对计算机硬件的安全访问的一部分软件，这种访问是有限的，并且内核决定一个程序在什么时候对某部分硬件操作多长时间。内核的分类可分为单内核和双内核...',9605,'csdn/linux/1_0_1_10_1504264618.6433.html','2015-04-09 15:48','gatieme',0,'内核,linux,',0,'http://my.csdn.net/gatieme',1),(2304,4,'http://blog.csdn.net/gatieme/article/details/44956431','Linux的历史----Linux内核剖析（一）','Unix操作系统Unix的由来汤普逊和里奇最早是在贝尔实验室开发Unix的，此后的10年，Unix在学术机构和大型企业中得到了广泛的应用，当时的UNIX拥有者AT&T公司以低廉甚至免费的许可将Unix...',10357,'csdn/linux/1_0_1_11_1504264619.509449.html','2015-04-09 10:51','gatieme',2,'内核,linux,unix,',0,'http://my.csdn.net/gatieme',1),(2305,4,'http://blog.csdn.net/gatieme/article/details/50990456','进程间通信之-信号signal--linux内核剖析（九）','信号及信号来源什么是信号信号是UNIX和Linux系统响应某些条件而产生的一个事件，接收到该信号的进程会相应地采取一些行动。通常信号是由一个错误产生的。但它们还可以作为进程间通信或修改行为的一种方式，...',2505,'csdn/linux/1_0_1_2_1504264621.664224.html','2016-03-27 13:22','gatieme',0,'unix,通信,处理器,内核,软件,',1,'http://my.csdn.net/gatieme',1),(2306,4,'http://blog.csdn.net/gatieme/article/details/50779184','Linux系统调用详解（实现机制分析）--linux内核剖析（六）','本文介绍了系统调用的一些实现细节。首先分析了系统调用的意义，它们与库函数和应用程序接口(API)有怎样的关系。然后，我们考察了Linux内核如何实现系统调用，以及执行系统调用的连锁反应：陷入内核，传递...',5602,'csdn/linux/1_0_1_6_1504264622.743798.html','2016-03-02 21:58','gatieme',2,'函数,api,linux,linux kernel,应用,',4,'http://my.csdn.net/gatieme',1),(2307,4,'http://blog.csdn.net/gatieme/article/details/48918399','Linux内核的构建过程----Linux内核剖析（五）','参考 \n  一次实验引发的故事 – kernel build system探索—vmlinux是如何炼成的– kernel makefile\n问题在前面的博文中，我们先是为自己的Ubuntu安装了一套...',2453,'csdn/linux/1_0_1_7_1504264623.988499.html','2015-10-08 15:53','gatieme',0,'arm,linux kernel,make,',0,'http://my.csdn.net/gatieme',1),(2308,4,'http://blog.csdn.net/gatieme/article/details/48846997','为arm内核构建源码树----Linux内核剖析（四）','前面说到要做linux底层开发或者编写Linux的驱动，必须建立内核源码树，之前我们提到过在本机上构建源码树—-Linux内核剖析（三），其建立的源码树是针对i686平台的，但是我么嵌入式系统用的是a...',1798,'csdn/linux/1_0_1_8_1504264624.03277.html','2015-10-01 17:24','gatieme',0,'arm,内核,源码,linux kernel,嵌入式系统,',0,'http://my.csdn.net/gatieme',1),(2309,2,'http://blog.csdn.net/yqj2065/article/details/39697081','访问者模式的意图','访问者模式的访问者，是做专项检查的。',1338,'csdn/java/1_1_1_0_1504264624.636924.html','2014-09-30 16:52','yqj2065',0,'设计模式,Java,',1,'http://my.csdn.net/yqj2065',1),(2310,4,'http://blog.csdn.net/gatieme/article/details/50908749','Linux进程间通信的几种方式总结--linux内核剖析（七）','进程间通信概述进程通信的目的\n数据传输 \n一个进程需要将它的数据发送给另一个进程，发送的数据量在一个字节到几M字节之间\n共享数据 \n多个进程想要操作共享数据，一个进程对共享数据\n通知事 \n一个进程需要...',10927,'csdn/linux/1_0_1_5_1504264624.994248.html','2016-03-16 22:09','gatieme',0,'通信,linux,数据,内核,IPC,',10,'http://my.csdn.net/gatieme',1),(2311,2,'http://blog.csdn.net/yqj2065/article/details/39127231','3.1  n次策略','多次使用策略模式需要考虑两个问题：组合爆炸和无限可能。',1574,'csdn/java/1_1_1_17_1504264625.867075.html','2014-09-08 01:05','yqj2065',0,'Java,designpattern,重构,方法类型化,',1,'http://my.csdn.net/yqj2065',1),(2312,4,'http://blog.csdn.net/gatieme/article/details/50914250','linux系统启动过程详解-开机加电后发生了什么 --linux内核剖析（零）','http://www.mamicode.com/info-detail-243819.html总的来说在操作系统加电启动之后到main函数执行之前操作系统经历了以下3个大步骤 \n*   启动BIOS。...',3231,'csdn/linux/1_0_1_3_1504264625.911022.html','2016-03-17 16:35','gatieme',0,'操作系统,函数,linux,内核,bios,',2,'http://my.csdn.net/gatieme',1),(2313,4,'http://blog.csdn.net/gatieme/article/details/50909399','进程间通信之-管道--linux内核剖析（八）','管道管道是一种两个进程间进行单向通信的机制。因为管道传递数据的单向性，管道又称为半双工管道。管道的这一特点决定了器使用的局限性。管道是Linux支持的最初Unix IPC形式之一，具有以下特点：\n数据...',1942,'csdn/linux/1_0_1_4_1504264626.85974.html','2016-03-16 23:30','gatieme',0,'unix,通信,数据,内核,linux,',1,'http://my.csdn.net/gatieme',1),(2314,2,'http://blog.csdn.net/yqj2065/article/details/38930281','3.4  命令模式(5.2)','命令模式(5.2)',1331,'csdn/java/1_1_1_18_1504264626.986078.html','2014-08-29 21:24','yqj2065',2,'编程导论,command,Java,',2,'http://my.csdn.net/yqj2065',1),(2315,2,'http://blog.csdn.net/yqj2065/article/details/39667587','命令模式之2 Invoker Vs. Client','一个实用的例子',1298,'csdn/java/1_1_1_1_1504264628.906706.html','2014-09-29 12:48','yqj2065',0,'设计模式,Java,界面,',0,'http://my.csdn.net/yqj2065',1),(2316,4,'http://blog.csdn.net/frogoscar/article/details/47162423','【Linux探索之旅】第二部分第一课：终端Terminal，好戏上场','领略终端的奇妙世界，命令行就在眼前',950,'csdn/linux/1_1_2_0_1504264628.945806.html','2015-07-31 01:35','frogoscar',1,'Linux,操作系统,程序员联盟,ProgrammerLeague,终端,',1,'http://my.csdn.net/frogoscar',1),(2317,2,'http://blog.csdn.net/yqj2065/article/details/39319493','简明解释器模式-2','用户输入代数表达式，如\"(a*a+b)*(c-d)\"，程序按照优先级和括号的使用情况计算正确的结果。',1104,'csdn/java/1_1_1_9_1504264629.834187.html','2014-09-16 17:21','yqj2065',4,'Java,解释器模式,',1,'http://my.csdn.net/yqj2065',1),(2318,4,'http://blog.csdn.net/frogoscar/article/details/47162391','【Linux探索之旅】第一部分测试题','第一部分的测试题，忘了知识点请回去之前的课程复习噢。',853,'csdn/linux/1_1_2_1_1504264629.950918.html','2015-07-31 01:24','frogoscar',0,'Linux,操作系统,测试题,程序员联盟,ProgrammerLeague,',2,'http://my.csdn.net/frogoscar',1),(2319,4,'http://blog.csdn.net/frogoscar/article/details/47758421','【Linux探索之旅】第一部分第六课：Linux如何安装在虚拟机中','虽然我们带大家一起在电脑的硬盘上安装了Ubuntu这个Linux发行版，不过有的朋友也许电脑硬盘资源有限（莫不是贡献给了各种大型游戏和xxx，你们懂的。反正小编没有好嘛 :P ），所以要他们再划分一定...',558,'csdn/linux/1_1_2_2_1504264631.070954.html','2015-08-18 20:19','frogoscar',0,'Linux,虚拟机,Ubuntu,VirtualBox,程序员联盟,',0,'http://my.csdn.net/frogoscar',1),(2320,2,'http://blog.csdn.net/yqj2065/article/details/39229481','2.1.2 工厂方法模式（3.3）','工厂方法模式(factory method pattern)从2方面认识。\n编程技巧：这是对参数化工厂方法加以改进的经典技术，以多态来重构if-else、switch-case等分支结构。\n设计思路：...',1259,'csdn/java/1_1_1_13_1504264631.098138.html','2014-09-12 15:27','yqj2065',0,'Java,designpattern,',1,'http://my.csdn.net/yqj2065',1),(2321,2,'http://blog.csdn.net/yqj2065/article/details/39183865','《编程导论(Java)·2.1.1里氏替换原则》什么是LSP','你可以不知道继承、多态，但是必须知道里氏替换原则(Liskov SubstitutionPrinciple、LSP)。',1653,'csdn/java/1_1_1_15_1504264631.842914.html','2014-09-10 17:30','yqj2065',0,'Java,编程导论,design,LSP,',4,'http://my.csdn.net/yqj2065',1),(2322,4,'http://blog.csdn.net/frogoscar/article/details/46563137','【Linux探索之旅】第一部分第二课：下载Linux，免费的噢','1. Linux的多面性\n2. 下载Ubuntu，烧写之',1218,'csdn/linux/1_1_2_6_1504264632.114533.html','2015-06-19 16:59','frogoscar',2,'Linux,操作系统,程序员联盟,编程,教程,',1,'http://my.csdn.net/frogoscar',1),(2323,4,'http://blog.csdn.net/frogoscar/article/details/47758303','【Linux探索之旅】第一部分第五课：Unity桌面，人生若只如初见','不容易啊，经过了前几课的学习，我们认识了Linux是什么，以及如何安装Linux系统（我们以Ubuntu这个Linux发行版为以后的演示系统），我们也在上一课终于把Ubuntu安装好了。\n“很不错，掌...',727,'csdn/linux/1_1_2_3_1504264633.201825.html','2015-08-18 20:15','frogoscar',0,'Linux,操作系统,Ubuntu,Unity,程序员联盟,',2,'http://my.csdn.net/frogoscar',1),(2324,4,'http://blog.csdn.net/frogoscar/article/details/46541445','【Linux探索之旅】开宗明义+第一部分第一课：什么是Linux？','1、什么是操作系统？\n2、天地霸气，爷们落地：Linux诞生\n3、不同的Linux发行版',1893,'csdn/linux/1_1_2_7_1504264634.2024.html','2015-06-18 01:57','frogoscar',2,'Linux,操作系统,程序员联盟,编程,教程,',6,'http://my.csdn.net/frogoscar',1),(2325,2,'http://blog.csdn.net/yqj2065/article/details/38978721','5.6 外观模式(4.5)','外观模式(façade pattern)是门面型委派方式，它将解决的问题是减少客户对服务细节的了解。',743,'csdn/java/1_1_1_14_1504264634.249026.html','2014-09-01 12:36','yqj2065',0,'Java,设计模式,外观模式,',0,'http://my.csdn.net/yqj2065',1),(2326,2,'http://blog.csdn.net/yqj2065/article/details/39304013','5.3解释器模式(5.3)','解释器模式(Interpreter Pattern)',1309,'csdn/java/1_1_1_10_1504264635.001592.html','2014-09-16 00:53','yqj2065',3,'Java,设计模式,解释器模式,',0,'http://my.csdn.net/yqj2065',1),(2327,4,'http://blog.csdn.net/frogoscar/article/details/47064401','【Linux探索之旅】第一部分第四课：磁盘分区，并完成Ubuntu安装','上一课我们正式开始安装Ubuntu了，但是到了分区的那一步，小编却戛然而止。这是什么情况呢？\n请读者们千万不要扁我；如果真的要扁，那就请“海扁”，让我一次挨（爱）个够（想到了庾澄庆的《让我一次爱个够》...',1395,'csdn/linux/1_1_2_4_1504264635.29354.html','2015-07-26 04:30','frogoscar',0,'Linux,ProgrammerLeague,Ubuntu,操作系统,程序员联盟,',1,'http://my.csdn.net/frogoscar',1),(2328,4,'http://blog.csdn.net/frogoscar/article/details/47005085','【Linux探索之旅】第一部分第三课：测试并安装Ubuntu','在正式开始Linux之旅前，我们要把操作系统安装好',744,'csdn/linux/1_1_2_5_1504264636.339172.html','2015-07-22 16:14','frogoscar',0,'Linux,操作系统,程序员联盟,Ubuntu,ProgrammerLeague,',1,'http://my.csdn.net/frogoscar',1),(2329,2,'http://blog.csdn.net/yqj2065/article/details/39591119','乒乓球问题','乒乓球问题，指方法的来回调用.',1360,'csdn/java/1_1_1_2_1504264638.159867.html','2014-09-27 00:22','yqj2065',1,'Java,设计模式,',0,'http://my.csdn.net/yqj2065',1),(2330,4,'http://blog.csdn.net/dlutbrucezhang/article/details/11037159','神奇的大内核锁','Big Kernel Lock（BKL）（大内核锁），是linux内核中使用到的一种锁，它跟普通的锁原理上的一样的：lock_kernel();/* 临界区 */unlock_kernel();但是它...',1574,'csdn/linux/1_0_1_0_1504264638.490547.html','2013-09-04 10:55','DLUTBruceZhang',0,'linux内核,全局变量,链表,内存,递归,',0,'http://my.csdn.net/DLUTBruceZhang',1),(2331,2,'http://blog.csdn.net/yqj2065/article/details/39402607','简明 责任链模式（5.1）','责任链模式可以称为“推卸”式的代理，多个对象能够处理客户发出的请求，即它们都具有相应的方法如handle()。',1240,'csdn/java/1_1_1_5_1504264639.358123.html','2014-09-19 20:44','yqj2065',0,'Java,设计模式,链表,',1,'http://my.csdn.net/yqj2065',1),(2332,4,'http://blog.csdn.net/dlutbrucezhang/article/details/10300421','Linux2.6内核 -- 结构的初始化','Linux 内核中用到了大量的结构体，在编码规范中也给出了结构体初始化的规则，这篇文章中有对其的解释：http://blog.csdn.net/dlutbrucezhang/article/detai...',1667,'csdn/linux/1_0_1_1_1504264639.611558.html','2013-08-25 15:06','DLUTBruceZhang',0,'结构,内核,linux,Linux Kernel,指针,',2,'http://my.csdn.net/DLUTBruceZhang',1),(2333,2,'http://blog.csdn.net/yqj2065/article/details/39346303','简明 状态模式（5.8）','屁股决定脑袋，状态决定行为',1646,'csdn/java/1_1_1_7_1504264640.618878.html','2014-09-17 19:00','yqj2065',4,'Java,设计模式,',1,'http://my.csdn.net/yqj2065',1),(2334,4,'http://blog.csdn.net/dlutbrucezhang/article/details/10296897','Linux2.6内核 -- 编码风格（3）','9.typedef    内核开发者们强烈反对使用 typedef 语句。他们的理由是：    1> typedef 掩盖了数据的真实类型    2> 由于数据类型隐藏起来了，所以很容易因此而犯错误，...',1811,'csdn/linux/1_0_1_2_1504264640.909459.html','2013-08-25 13:48','DLUTBruceZhang',0,'内核,编码,源码,linux内核,Linux Kernel,',1,'http://my.csdn.net/DLUTBruceZhang',1),(2335,2,'http://blog.csdn.net/yqj2065/article/details/39343193','简明 抽象工厂模式（3.1）','一个工厂能够创建多个配套的产品',1310,'csdn/java/1_1_1_8_1504264641.496853.html','2014-09-17 15:46','yqj2065',4,'Java,设计模式,',0,'http://my.csdn.net/yqj2065',1),(2336,4,'http://blog.csdn.net/dlutbrucezhang/article/details/10296389','Linux2.6内核 -- 编码风格（2）','5.每行代码的长度      源代码中要尽可能的保证每行代码长度不超过80个字符，因为这样做可以使代码最适合在标准的 80 * 24 的终端上显示。事实上，并不存在一个广泛接受的标准--如果代码行超过...',1841,'csdn/linux/1_0_1_3_1504264641.823117.html','2013-08-25 10:34','DLUTBruceZhang',0,'内核,编码,Linux Kernel,Linux,源代码,',1,'http://my.csdn.net/DLUTBruceZhang',1),(2337,2,'http://blog.csdn.net/yqj2065/article/details/39371487','有限状态机(FSM)的Java 演示','本文从简单的例子入手，逐步演变成非常复杂的程序。\n在简明 状态模式（5.8）中，状态之间的变换由外界控制，或者说，多种状态是分割的、无关的。状态模式最有趣的地方正是讨论其状态的变迁。',16083,'csdn/java/1_1_1_6_1504264642.427853.html','2014-09-18 14:51','yqj2065',6,'Java,设计模式,状态机,',2,'http://my.csdn.net/yqj2065',1),(2338,4,'http://blog.csdn.net/dlutbrucezhang/article/details/10094875','Linux2.6内核中链表的实现','对于一个计算机专业的学生，链表这种数据结构对我们来说再熟悉不过了，毕竟在大学的《数据结构》中就讲解过，相信你也自己实现过，它实现起来可能是这个样子：（这里的例子都来自《Linux内核设计与实现》第三版...',1786,'csdn/linux/1_0_1_18_1504264642.771811.html','2013-08-20 10:49','DLUTBruceZhang',4,'数据结构,链表,struct,Linux,Linux Kernel,',2,'http://my.csdn.net/DLUTBruceZhang',1),(2339,2,'http://blog.csdn.net/yqj2065/article/details/39575455','伪中介模式(5.5)','总之，股票交易所、婚姻介绍所、聊天室的例子，都不是[GoF]的中介者模式。',1135,'csdn/java/1_1_1_3_1504264643.518658.html','2014-09-26 09:00','yqj2065',0,'设计模式,Java,中介者模式,',0,'http://my.csdn.net/yqj2065',1),(2340,4,'http://blog.csdn.net/dlutbrucezhang/article/details/10076565','linux内核 asmlinkage宏','asmlinkage是个宏，使用它是为了保持参数在stack中。看一下/usr/include/asm/linkage.h里面的定义：#define asmlinkage CPP_ASMLINKAGE...',2162,'csdn/linux/1_0_1_19_1504264643.827725.html','2013-08-19 16:30','DLUTBruceZhang',0,'编译器,IT,性能优化,GCC,Linux Kernel,',0,'http://my.csdn.net/DLUTBruceZhang',1),(2341,4,'http://blog.csdn.net/dlutbrucezhang/article/details/10103371','浅析linux内核中的idr机制','idr在linux内核中指的就是整数ID管理机制，从本质上来说，这就是一种将整数ID号和特定指针关联在一起的机制。这个机制最早是在2003年2月加入内核的，当时是作为POSIX定时器的一个补丁。现在，...',4629,'csdn/linux/1_0_1_17_1504264644.611963.html','2013-08-20 12:26','DLUTBruceZhang',0,'AMP,struct,内核,Linux,Linux Kernel,',0,'http://my.csdn.net/DLUTBruceZhang',1),(2342,2,'http://blog.csdn.net/yqj2065/article/details/39449253','Java组合模式（4.3）','组合模式的要点是：叶子对象和各种容器能够统一地处理。',1277,'csdn/java/1_1_1_4_1504264644.66731.html','2014-09-21 10:19','yqj2065',0,'Java,设计模式,',0,'http://my.csdn.net/yqj2065',1),(2343,4,'http://blog.csdn.net/dlutbrucezhang/article/details/10108559','Linux2.6内核--中断线被关闭的情况','中断系统是现代操作系统中不可获取的一个子系统，它由硬件主动触发并发送到CPU，最后由内核调用中断处理程序处理中断。      那么中断有时候需要关闭，这是为什么呢？      一般分为两种情况：1.内...',1955,'csdn/linux/1_0_1_16_1504264645.965903.html','2013-08-20 15:05','DLUTBruceZhang',0,'硬件,操作系统,处理器,Linux,Linux Kernel,',1,'http://my.csdn.net/DLUTBruceZhang',1),(2344,4,'http://blog.csdn.net/dlutbrucezhang/article/details/10133251','Linux2.6--中断机制中的 ksoftirqd','Linux中的中断机制被分为两个部分，回应硬件的中断请求的部分成为上半部（一般都是这样），而真正在做处理工作（耗时工作）的部分成为下半部，实现下半部在Linux2.6内核中存在三种方法：软中断，tas...',3179,'csdn/linux/1_0_1_15_1504264646.622797.html','2013-08-21 09:50','DLUTBruceZhang',0,'内核,多线程,Linux,Linux Kernel,Unix,',1,'http://my.csdn.net/DLUTBruceZhang',1),(2345,4,'http://blog.csdn.net/dlutbrucezhang/article/details/10154351','LINUX自旋锁详解2','对于互斥, 旗标是一个有用的工具, 但是它们不是内核提供的唯一这样的工具. 相反, 大部分加锁是由一种称为自旋锁的机制来实现. 不象旗标, 自旋锁可用在不能睡眠的代码中, 例如中断处理. 当正确地使用...',1193,'csdn/linux/1_0_1_12_1504264647.631238.html','2013-08-21 17:04','DLUTBruceZhang',0,'内核,软件,Linux,Linux Kernel,Unix,',0,'http://my.csdn.net/DLUTBruceZhang',1),(2346,4,'http://blog.csdn.net/dlutbrucezhang/article/details/10142371','Linux2.6内核--中断下半部实现方法 工作队列','工作队列子系统是一个用于创建内核线程的接口，通过它创建的进程负责执行由内核其他部分排到队列里的任务。它创建的这些内核线程称作工作者线程。工作队列可以让你的驱动程序创建一个专门的工作者线程来处理需要退后...',1724,'csdn/linux/1_0_1_14_1504264648.667129.html','2013-08-21 13:15','DLUTBruceZhang',5,'内核,Linux,Linux Kernel,工作队列,中断,',1,'http://my.csdn.net/DLUTBruceZhang',1),(2347,4,'http://blog.csdn.net/dlutbrucezhang/article/details/10154177','LINUX自旋锁详解','加锁（locking）是一种广泛应用的同步技术。当内核控制路径必须访问共享数据结构或进入临界区时，就需要为自己获取一把“锁”。由锁机制保护的资源非常类似于限制于房间内的资源，当某人进入房间时，就把门锁...',2398,'csdn/linux/1_0_1_13_1504264649.728579.html','2013-08-21 17:02','DLUTBruceZhang',0,'内核,C,Linux Kernel,Linux,Unix,',0,'http://my.csdn.net/DLUTBruceZhang',1),(2348,4,'http://blog.csdn.net/dlutbrucezhang/article/details/10170649','linux内存屏障浅析','内存屏障主要解决了两个问题：单处理器下的乱序问题和多处理器下的内存同步问题。为什么会乱序现在的CPU一般采用流水线来执行指令。一个指令的执行被分成：取指、译码、访存、执行、写回、等若干个阶段。然后，多...',1296,'csdn/linux/1_0_1_11_1504264650.697342.html','2013-08-22 09:34','DLUTBruceZhang',0,'内存,处理器,Cache,Linux,Linux Kernel,',0,'http://my.csdn.net/DLUTBruceZhang',1),(2349,4,'http://blog.csdn.net/dlutbrucezhang/article/details/10295487','Linux2.6内核 -- 编码风格（1）','像所有其他大型软件一样，Linux 制定了一套编码风格，对代码的格式，风格和布局做出了规定。下面我就对 2.6 内核中的代码约定进行介绍。      1.缩进      缩进风格是用制表位（Tab）每...',2018,'csdn/linux/1_0_1_4_1504264651.718805.html','2013-08-25 10:10','DLUTBruceZhang',0,'内核,编程,重构,Linux Kernel,Linux,',1,'http://my.csdn.net/DLUTBruceZhang',1),(2350,4,'http://blog.csdn.net/dlutbrucezhang/article/details/10181535','Linux2.6内核--内存管理（1）--分页机制','在内核里分配内存可不像在其他地方分配内存那么容易。造成这种局面的因素很多。从根本上讲，是因为内核本身不能像用户空间那样奢侈的使用内存。内核与用户空间不同，它不具备这种能力，它不支持简单便捷的内存分配方...',1745,'csdn/linux/1_0_1_8_1504264652.827594.html','2013-08-22 14:51','DLUTBruceZhang',0,'内核,内存管理,分页,Linux,Linux Kernel,',1,'http://my.csdn.net/DLUTBruceZhang',1),(2351,4,'http://blog.csdn.net/dlutbrucezhang/article/details/10180569','Linux内核高端内存','Linux内核地址映射模型x86 CPU采用了段页式地址映射模型。进程代码中的地址为逻辑地址，经过段页式地址映射后，才真正访问物理内存。段页式机制如下图。 Linux内核地址空间划分通常32位Linu...',1660,'csdn/linux/1_0_1_10_1504264653.778166.html','2013-08-22 14:11','DLUTBruceZhang',0,'内核,X86,64位,Linux,Linux Kernel,',0,'http://my.csdn.net/DLUTBruceZhang',1),(2352,4,'http://blog.csdn.net/dlutbrucezhang/article/details/10220047','Linux2.6内核--VFS层中和进程相关的数据结构','系统中的每一个进程都有自己的一组打开的文件，像根文件系统，当前工作目录，安装点等。有三个数据结构将 VFS 层和系统的进程紧密的联系在一起，它们分别是：file_struct，fs_struct 和 ...',2055,'csdn/linux/1_0_1_7_1504264654.065728.html','2013-08-23 14:01','DLUTBruceZhang',0,'文件系统,namespace,Linux,Linux Kernel,缓存,',1,'http://my.csdn.net/DLUTBruceZhang',1),(2353,4,'http://blog.csdn.net/dlutbrucezhang/article/details/10183315','Linux2.6内核--内存管理（2）--区','由于硬件的限制，内核不能对所有的页一视同仁。有些页位于内存中的特定物理地址上，所以，不能将其用于一些特别的任务。（关于内存分页机制可以查看：http://blog.csdn.net/dlutbruce...',1820,'csdn/linux/1_0_1_9_1504264654.931242.html','2013-08-22 15:21','DLUTBruceZhang',1,'内存管理,硬件,Linux,Linux Kernel,高端内存,',1,'http://my.csdn.net/DLUTBruceZhang',1),(2354,4,'http://blog.csdn.net/dlutbrucezhang/article/details/10279207','mmap详解','共享内存可以说是最有用的进程间通信方式，也是最快的IPC形式, 因为进程可以直接读写内存，而不需要任何数据的拷贝。对于像管道和消息队列等通信方式，则需要在内核和用户空间进行四次的数据拷贝，而共享内存则...',1797,'csdn/linux/1_0_1_5_1504264655.931734.html','2013-08-24 17:37','DLUTBruceZhang',1,'存储,数据,指针,Linux Kernel,Linux,',0,'http://my.csdn.net/DLUTBruceZhang',1),(2355,4,'http://blog.csdn.net/dlutbrucezhang/article/details/10225703','Linux2.6内核--对块IO层操作的讨论','当一个块被调入内存时（也就是说，在读入后或等待写出时），它要存储在缓冲区中。每个缓冲区与一个块对应，它相当于是磁盘块在内存中的表示。块包含一个或多个扇区，但大小不能超过一页，所以一页可以容纳一个或多个...',1880,'csdn/linux/1_0_1_6_1504264656.961495.html','2013-08-23 15:44','DLUTBruceZhang',0,'内存,磁盘,Linux,Linux Kernel,io,',1,'http://my.csdn.net/DLUTBruceZhang',1),(2356,2,'http://blog.csdn.net/lulei9876/article/details/40303427','菜鸟版JAVA设计模式-从抽象与实现说桥接模式','桥接模式，初学的时候其实很不理解为什么要把这个模式命名为桥接模式，脑海里突然联想到。其实我学习是一件比较痛苦的事情，因为我必须要知道来龙去脉才能学的进去，所以，很快我就对这个命名产生了兴趣，桥接？\n嗯...',1862,'csdn/java/1_0_1_0_1504264658.00462.html','2014-10-22 15:26','lulei9876',0,'java设计模式,桥接模式,设计模式,面向对象,',0,'http://my.csdn.net/lulei9876',1),(2357,2,'http://blog.csdn.net/lulei9876/article/details/39994825','菜鸟版JAVA设计模式—适配器模式，装饰模式，代理模式异同','节前把3个设计模式的学习心得分享了一下，分别是适配器模式，装饰模式，代理模式。\n但是似乎越写越有些迷糊，这三种模式都有着一些大同小异的地方，总是有些搞不清。\n今天再重新学习下，把学习心得分享给大家一下...',9459,'csdn/java/1_0_1_2_1504264659.896492.html','2014-10-14 10:55','lulei9876',9,'JAVA,设计模式,适配器模式,装饰模式,代理模式,',7,'http://my.csdn.net/lulei9876',1),(2358,4,'http://blog.csdn.net/tinylab/article/details/45330771','［授权发表］用 kGDB 调试 Linux 内核','本文记录了用 kGDB 调试 Linux 内核的全过程，都是在前人工作基础上的一些总结。以下操作都是基于特定板子来进行，但是大部分都能应用于其他平台。',980,'csdn/linux/1_0_1_0_1504264661.044641.html','2015-04-28 08:16','hifalcon',0,'Linux,KGDB,调试,',0,'http://my.csdn.net/hifalcon',1),(2359,2,'http://blog.csdn.net/lulei9876/article/details/39582677','菜鸟版JAVA设计模式—从买房子看代理模式','相对于适配器模式，或者说装饰器模式，代理模式理解起来更加简单。\n代理这个词应该比较好理解，代替去做就是代理。\n比如，我们买卖房子，那么我们会找中介，我要卖房子，但是我们没有时间去卖，我主动交给中介，中...',2849,'csdn/java/1_0_1_3_1504264661.272887.html','2014-09-28 15:34','lulei9876',3,'JAVA,java设计模式,代理模式,',3,'http://my.csdn.net/lulei9876',1),(2360,2,'http://blog.csdn.net/lulei9876/article/details/39552631','菜鸟版JAVA设计模式—从火锅底料到装饰器模式','“老板，来份全辣锅底，不要给我用装饰器模式来配料！”我特地狠狠的强调了最后一句话。\n不到一会，老板给我端来了一个火锅和几个盘子，火锅里装了盐水，而盘子里放了辣椒，花椒，茴香，大蒜等佐料。。。。。。。。...',2852,'csdn/java/1_0_1_4_1504264662.080399.html','2014-09-25 16:52','lulei9876',0,'JAVA,java设计模式,面向对象,设计模式,',2,'http://my.csdn.net/lulei9876',1),(2361,4,'http://blog.csdn.net/tinylab/article/details/45330757','［授权发表］Linux内核Section Mismatch详解','Section Mismatch是非常严重的Bug，可能会导致无法预测的内存访问问题，建议谨慎对待，如果添加的驱动中有类似Warning，可能需要密切关注并解决掉。本文就该问题的检测、原因、解决思路以...',856,'csdn/linux/1_0_1_2_1504264662.113645.html','2015-04-28 08:12','hifalcon',0,'Linux,Mismatch,Section,',0,'http://my.csdn.net/hifalcon',1),(2362,4,'http://blog.csdn.net/tinylab/article/details/45330795','［授权发表］如何快速定位 Linux Panic 出错的代码行','内核调试中最常见的一个问题是：内核 Panic 后，如何快速定位到出错的代码行？就是这样一个常见的问题，面试过的大部分同学都未能很好地回答，这里希望能够做很彻底地解答。',776,'csdn/linux/1_0_1_1_1504264663.11105.html','2015-04-28 08:25','hifalcon',0,'Linux,Panic,调试,',0,'http://my.csdn.net/hifalcon',1),(2363,4,'http://blog.csdn.net/dlutbrucezhang/article/details/9159431','Linux中link，unlink，close，fclose详解','unlink系统调用】   \n    \n功能描述： \n从文件系统中删除一个名称。如果名称是文件的最后一个连接，并且没有其它进程将文件打开，名称对应的文件会实际被删除。 \n \n用法：  \n#includ...',6214,'csdn/linux/1_1_2_0_1504264665.068039.html','2013-06-24 10:44','DLUTBruceZhang',2,'Linux,printf,shell,链接,文件操作,',0,'http://my.csdn.net/DLUTBruceZhang',1),(2364,4,'http://blog.csdn.net/dlutbrucezhang/article/details/9152529','魔数','魔数（magic number），即在编写程序时直接在程序中运用数字，而不是采用定义宏或是const变量的方式，图1是使用了魔数的一个示例程序。其中的64是指Msk的最大字节数。从这一程序中可以看出，...',1247,'csdn/linux/1_1_2_3_1504264666.292326.html','2013-06-22 21:13','DLUTBruceZhang',0,'宏,注释,命名空间,iostream,魔数,',0,'http://my.csdn.net/DLUTBruceZhang',1),(2365,4,'http://blog.csdn.net/dlutbrucezhang/article/details/9140693','协处理器简介','原文出自：http://blog.csdn.net/liukun321/article/details/5548877协处理器 　　一种芯片，用于减轻系统微处理器的特定处理任务。例如，数学协处理器可以...',910,'csdn/linux/1_1_2_5_1504264667.181746.html','2013-06-20 20:56','DLUTBruceZhang',0,'处理器,ARM,扩展,存储,编程,',0,'http://my.csdn.net/DLUTBruceZhang',1),(2366,4,'http://blog.csdn.net/dlutbrucezhang/article/details/9140279','linux进程管理之进程创建','所谓进程就是程序执行时的一个实例. 它是现代操作系统中一个很重要的抽象,我们从进程的生命周期:创建,执行,消亡来分析一下Linux上的进程管理实现.一:前言进程管理结构;在内核中,每一个进程对应一个t...',1127,'csdn/linux/1_1_2_6_1504264668.363066.html','2013-06-20 20:21','DLUTBruceZhang',0,'Linux,管理,MM,struct,进程,',0,'http://my.csdn.net/DLUTBruceZhang',1),(2367,4,'http://blog.csdn.net/dlutbrucezhang/article/details/9089371','搭建Linux0.11系统环境','学习Linux0.11内核源代码，我们需要搭建一个基于Linux0.11的操作平台：                    1） boch仿真器：可以从http://bochs.sourceforge...',2816,'csdn/linux/1_1_2_12_1504264669.18624.html','2013-06-13 20:08','DLUTBruceZhang',0,'Linux,内核,文件系统,扩展,源代码,',1,'http://my.csdn.net/DLUTBruceZhang',1),(2368,4,'http://blog.csdn.net/dlutbrucezhang/article/details/9107811','Linux0.11 中对地址的管理','逻辑地址（Logical Address） 是指由程序产生的与段相关的偏移地址部分。例如，你在进行C语言指针编程中，可以读取指针变量本身值(&操作)，实际上这个值就是逻辑地址，它是相对于你当前进程数据...',1039,'csdn/linux/1_1_2_10_1504264670.323208.html','2013-06-18 08:43','DLUTBruceZhang',1,'Linux,内存,X,处理器,内核,',0,'http://my.csdn.net/DLUTBruceZhang',1),(2369,4,'http://blog.csdn.net/dlutbrucezhang/article/details/9150455','Linux系统的shell是什么','shell是用户和Linux操作系统之间的接口。Linux中有多种shell，其中缺省使用的是Bash。本章讲述了shell的工作原理，shell的种类，shell的一般操作及Bash的特性。　什么是...',1190,'csdn/linux/1_1_2_4_1504264671.327805.html','2013-06-22 13:37','DLUTBruceZhang',0,'Linux,shell,编程语言,应用,C,',0,'http://my.csdn.net/DLUTBruceZhang',1),(2370,4,'http://blog.csdn.net/dlutbrucezhang/article/details/9157087','理解inode','一、inode是什么？理解inode，要从文件储存说起。文件储存在硬盘上，硬盘的最小存储单位叫做\"扇区\"（Sector）。每个扇区储存512字节（相当于0.5KB）。操作系统读取硬盘的时候，不会一个个...',1168,'csdn/linux/1_1_2_1_1504264672.333265.html','2013-06-23 21:16','DLUTBruceZhang',0,'行业数据,操作系统,软件,存储,硬盘,',0,'http://my.csdn.net/DLUTBruceZhang',1),(2371,4,'http://blog.csdn.net/dlutbrucezhang/article/details/9156555','linux中文件描述符fd和文件指针flip的理解','简单归纳：fd只是一个整数，在open时产生。起到一个索引的作用，进程通过PCB中的文件描述符表找到该fd所指向的文件指针filp。文件描述符的操作(如: open)返回的是一个文件描述符,内核会在每...',1325,'csdn/linux/1_1_2_2_1504264673.434668.html','2013-06-23 19:54','DLUTBruceZhang',0,'Linux,指针,Structure,磁盘,内核,',0,'http://my.csdn.net/DLUTBruceZhang',1),(2372,4,'http://blog.csdn.net/dlutbrucezhang/article/details/9106517','对Linux0.11 中 进程0 和 进程1分析','1. 背景进程的创建过程无疑是最重要的操作系统处理过程之一，很多书和教材上说的最多的还是一些原理的部分，忽略了很多细节。比如，子进程复制父进程所拥有的资源，或者子进程和父进程共享相同的物理页面，拥有自...',1885,'csdn/linux/1_1_2_11_1504264674.559105.html','2013-06-18 08:43','DLUTBruceZhang',2,'操作系统,Linux,struct,处理器,进程,',0,'http://my.csdn.net/DLUTBruceZhang',1),(2373,4,'http://blog.csdn.net/dlutbrucezhang/article/details/9137373','C 语言内存区域分配（进程的各个段）详解','C语言可执行代码结构 名称内容代码段 可执行代码、字符串常量数据段 已初始化全局变量、已初始化全局静态变量、局部静态变量、常量数据BSS段 未初始化全局变量，未初始化全局静态变量栈 局部变量、函数参数...',2090,'csdn/linux/1_1_2_7_1504264675.521026.html','2013-06-20 15:14','DLUTBruceZhang',0,'编程语言,C,内存,行业数据,X,',1,'http://my.csdn.net/DLUTBruceZhang',1),(2374,4,'http://blog.csdn.net/dlutbrucezhang/article/details/9117483','Linux进程状态解析之R、S、D、T、Z、X','文章转载自：http://hi.baidu.com/shining_pc/item/21abcb32a4d2d484c3cf2950Linux是一个多用户，多任务的系统，可以同时运行多个用户的多个程序...',1082,'csdn/linux/1_1_2_9_1504264676.623031.html','2013-06-18 09:36','DLUTBruceZhang',0,'Linux,处理器,内核,struct,多线程,',0,'http://my.csdn.net/DLUTBruceZhang',1),(2375,4,'http://blog.csdn.net/dlutbrucezhang/article/details/9151099','实例分析exec函数','fork()函数通过系统调用创建一个与原来进程(父进程)几乎完全相同的进程(子进程是父进程的副本，它将获得父进程数据空间、堆、栈等资源的副本。注意，子进程持有的是上述存储空间的“副本”，这意味着父子进...',1032,'csdn/linux/1_1_2_8_1504264677.60306.html','2013-06-22 15:41','DLUTBruceZhang',0,'实例,指针,Path,Makefile,存储,',0,'http://my.csdn.net/DLUTBruceZhang',1),(2376,4,'http://blog.csdn.net/ljy1988123/article/details/47983095','Linux内核工程导论——内存管理（一）','Linux内存管理\n概要\n物理地址管理\n很多小型操作系统，例如eCos，vxworks等嵌入式系统，程序中所采用的地址就是实际的物理地址。这里所说的物理地址是CPU所能见到的地址，至于这个地址如何映射...',1729,'csdn/linux/1_0_1_0_1504264681.929859.html','2015-08-25 20:43','ljy1988123',0,'内核,linux kernel,',0,'http://my.csdn.net/ljy1988123',1),(2377,4,'http://blog.csdn.net/ljy1988123/article/details/47983195','Linux内核工程导论——内存管理（二）','页面回收算法（PFRA）\r\n请求调页机制，只要用户态进程继续执行，他们就能获得页框，然而，请求调页没有办法强制进程释放不再使用的页框。因此，迟早所有空闲内存将被分配给进程和高速缓存，Linux内核的页...',1935,'csdn/linux/1_0_1_1_1504264682.933388.html','2015-08-25 20:49','ljy1988123',2,'内核,linux kernel,',0,'http://my.csdn.net/ljy1988123',1),(2378,4,'http://blog.csdn.net/ljy1988123/article/details/48064727','Linux内核工程导论——用户空间设备管理','用户空间设备管理\n         用户空间所能见到的所有设备都放在/dev目录下（当然，只是一个目录，是可以变化的），文件系统所在的分区被当成一个单独的设备也放在该目录下。以前的2.4版本的曾经出现...',1088,'csdn/linux/1_0_1_8_1504264684.151387.html','2015-08-28 23:02','ljy1988123',0,'linux kernel,内核,Linux,',0,'http://my.csdn.net/ljy1988123',1),(2379,4,'http://blog.csdn.net/ljy1988123/article/details/48380845','Linux内核工程导论——网络：Socket','网络架构\r\n         我们通常见到的网络是以太网络和无线网络，但是linux是个大而全的操作系统，其支持的无线网络很多。主要有：业余无线电、CAN网络、红外线（IrDA）、蓝牙（Bluetoo...',787,'csdn/linux/1_0_1_9_1504264685.005995.html','2015-09-11 22:26','ljy1988123',1,'linux kernel,内核,Linux,网络,socket,',2,'http://my.csdn.net/ljy1988123',1),(2380,4,'http://blog.csdn.net/ljy1988123/article/details/48977953','Linux内核工程导论——网络：网络特性','网络特性\n       QoS and/orfair queueing\nIP层以下\n802.1d以太网桥\n802.1Q/802.1ad VLAN Support\nANSI/IEEE 802.2 LLC...',684,'csdn/linux/1_0_1_17_1504264687.147456.html','2015-10-08 20:09','ljy1988123',0,'Linux,linux kernel,网络,',2,'http://my.csdn.net/ljy1988123',1),(2381,4,'http://blog.csdn.net/ljy1988123/article/details/48975433','Linux内核工程导论——进程：用户进程间通信','应用程序间通信\r\nwritev/readv\r\nSystem V IPC\r\n管道\r\nfifo\r\ndbus\r\nunix domain\r\n信号\r\nPOSIX IPC\r\nmailbox\r\n         模...',545,'csdn/linux/1_0_1_16_1504264687.947007.html','2015-10-08 17:32','ljy1988123',0,'linux kernel,Linux,内核,',0,'http://my.csdn.net/ljy1988123',1),(2382,4,'http://blog.csdn.net/ljy1988123/article/details/48975203','Linux内核工程导论——进程：内核与用户空间的进程通信','内核与用户程序通信\r\nnetlink\r\n用户端使用\r\n\r\n    netlink被纳入socket操作的框架中，确切的说是在socket框架中设计的netlink通信接口。用户态创建、销毁socket...',640,'csdn/linux/1_0_1_15_1504264689.022733.html','2015-10-08 17:30','ljy1988123',0,'Linux,linux kernel,内核,socket,',0,'http://my.csdn.net/ljy1988123',1),(2383,4,'http://blog.csdn.net/ljy1988123/article/details/48064233','Linux内核工程导论——基础架构','基础功能元素\nworkqueue\n         linux下的工作队列时一种将工作推后执行的方式，其可以被睡眠、调度，与内核线程表现基本一致，但又比内核线程使用简单，一般用来处理任务内容比较动态的...',1989,'csdn/linux/1_0_1_6_1504264690.030737.html','2015-08-28 22:44','ljy1988123',0,'linux kernel,内核,Linux,',0,'http://my.csdn.net/ljy1988123',1),(2384,4,'http://blog.csdn.net/ljy1988123/article/details/48064267','Linux内核工程导论——进程','进程\n进程调度\n概要\n         linux是个多进程的环境，不但用户空间可以有多个进程，而且内核内部也可以有内核进程。linux内核中线程与进程没有区别，因此叫线程和进程都是一样的。调度器调度...',1487,'csdn/linux/1_0_1_7_1504264691.14261.html','2015-08-28 22:46','ljy1988123',1,'linux kernel,内核,Linux,',1,'http://my.csdn.net/ljy1988123',1),(2385,4,'http://blog.csdn.net/ljy1988123/article/details/48526087','Linux内核工程导论——网络：IP','TCP/IP网络\nIP\n         TCP/IP是目前通用性最高的网络系统，本来各个硬件体系大都会定义自己的通信协议，并且以太网上也是曾经存在很多通信协议（例如IPX），但是随着产业的发展，所有...',734,'csdn/linux/1_0_1_13_1504264692.099775.html','2015-09-17 19:09','ljy1988123',0,'Linux,linux kernel,内核,网络,',0,'http://my.csdn.net/ljy1988123',1),(2386,4,'http://blog.csdn.net/ljy1988123/article/details/48978041','Linux内核工程导论——网络：IP：隧道','Linux中IP隧道\n为什么需要IP隧道？\n没有接触过这个概念的人自然提出这样的疑问。实际上概念最初的提出很简单，为了在TCP/IP网络中传输其他协议的数据包。设想IPX协议或 X.25封装的数据包如...',957,'csdn/linux/1_0_1_18_1504264693.149691.html','2015-10-08 20:15','ljy1988123',0,'Linux,linux kernel,内核,网络,',2,'http://my.csdn.net/ljy1988123',1),(2387,4,'http://blog.csdn.net/ljy1988123/article/details/48477287','Linux内核工程导论——存储：SCSI、ATA与SAS','SCSI、ATA与T10的SAS\n         1981年SCSI产生。后一致与ATA并行竞争发展。例如串行的SATA的出现就导致了串行的SCSI：SAS的出现。SCSI目前的最新标准是T10，而...',2283,'csdn/linux/1_0_1_11_1504264694.257685.html','2015-09-15 22:48','ljy1988123',0,'linux kernel,内核,Linux,sas,',0,'http://my.csdn.net/ljy1988123',1),(2388,4,'http://blog.csdn.net/ljy1988123/article/details/47983273','Linux内核工程导论——内存管理（三）','用户端内核内存参数调整\r\n/proc/sys/vm/ （需要根据内核版本调整）\r\n交换相关\r\nswap_token_timeout\r\n Thisfile contains valid hold tim...',1059,'csdn/linux/1_0_1_2_1504264695.205697.html','2015-08-25 20:53','ljy1988123',0,'linux kernel,Linux,',0,'http://my.csdn.net/ljy1988123',1),(2389,2,'http://blog.csdn.net/liaodehong/article/details/48130299','spring入门实例详解','spring框架在我们的开发中用到的很多,前面几篇博客也理解了一下spring的基本概念，现在准备写一个spring框架的入门实例，以一个登陆认证签到模块为例子；\n实例说明：\n登陆签到模块其实很简单，...',7996,'csdn/java/1_2_1_17_1504264696.025961.html','2015-09-06 17:14','liaodehong',2,'spring,springjdbc,登陆,',11,'http://my.csdn.net/liaodehong',1),(2390,4,'http://blog.csdn.net/ljy1988123/article/details/48526185','Linux内核工程导论——网络：服务质量与安全性','TCP\n\nTCP希望达成数据按序的，无损失的传输。\n\n只要有TCP这个协议的需求，就有其带来的问题。其问题是，既然要保证按序到达和完全到达，如何保证？不但要保证，还要保证速度，又如何设计机制？最终TC...',656,'csdn/linux/1_0_1_14_1504264698.433545.html','2015-09-17 19:16','ljy1988123',0,'Linux,linux kernel,内核,网络,tcp,',0,'http://my.csdn.net/ljy1988123',1),(2391,2,'http://blog.csdn.net/liaodehong/article/details/52634911','SSM整合+Dubbo+zookeeper-3.4.6','最近刚好有点时间，特意来整合一下项目，以后会陆续把前端框架和一些组件也给整合进去，今天就先来整合一下SSM+mysql+dubbo+zookeeper来做一个用户列表功能。关于理论性的知识，大家可以自...',5057,'csdn/java/1_2_1_10_1504264699.23045.html','2016-09-23 16:07','liaodehong',5,'dubbo,mysql,web开发,java,',5,'http://my.csdn.net/liaodehong',1),(2392,4,'http://blog.csdn.net/ljy1988123/article/details/48477497','Linux内核工程导论——总线：Platform','Platform总线\r\n         PCI总线只是一种USB挂载的总线选择。USB总线虽然是慢速总线，需要挂载在较快的总线上作为缓存，但也有例外的情况，例如CPU中直接集成USB控制模块，这在很...',599,'csdn/linux/1_0_1_12_1504264700.444713.html','2015-09-15 22:57','ljy1988123',1,'linux kernel,Linux,内核,总线,',0,'http://my.csdn.net/ljy1988123',1),(2393,4,'http://blog.csdn.net/ljy1988123/article/details/48380859','Linux内核工程导论——网络：内核特性','TCP/IP网络\nIP\n         TCP/IP是目前通用性最高的网络系统，本来各个硬件体系大都会定义自己的通信协议，并且以太网上也是曾经存在很多通信协议（例如IPX），但是随着产业的发展，所有...',665,'csdn/linux/1_0_1_10_1504264701.522136.html','2015-09-11 22:29','ljy1988123',0,'linux kernel,内核,Linux,网络,',0,'http://my.csdn.net/ljy1988123',1),(2394,4,'http://blog.csdn.net/dlutbrucezhang/article/details/9030327','C语言中自动变量栈的分配','大家都知道在c语言的运行过程中，局部变量都是存放在栈中的，且是从高位到低位进行进行空间分配。先看一个程序。很明显，地址从高到低分配，和预计的一样。稍微修改一下，再运行。很明显，从低位到高位！！！明确一...',1438,'csdn/linux/1_1_2_0_1504264704.555163.html','2013-06-05 14:10','DLUTBruceZhang',0,'C,栈,X,Ubuntu,printf,',1,'http://my.csdn.net/DLUTBruceZhang',1),(2395,4,'http://blog.csdn.net/yaozhenguo2006/article/details/7696679','Linux USB Gadget--各环节的整合','Linux USB Gadget软件结构一文中分析Linux USB Gadget软件分为三层。这三层其中两层是与硬件无关的，分别是Gadget功能驱动层，USB设备层。一层是与硬件相关的是UDC层。...',13223,'csdn/linux/1_1_1_0_1504264706.604644.html','2012-06-27 16:55','YAOZHENGUO2006',1,'linux,struct,function,string,descriptor,数据结构,',9,'http://my.csdn.net/YAOZHENGUO2006',1),(2396,4,'http://blog.csdn.net/yaozhenguo2006/article/details/6824970','linux RTC 驱动模型分析','linux RTC 驱动模型分析\r\n        RTC(real time clock)实时时钟，主要作用是给Linux系统提供时间。RTC因为是电池供电的，所以掉电后时间不丢失。Linux内核把...',21496,'csdn/linux/1_1_1_3_1504264708.794233.html','2011-09-27 10:28','YAOZHENGUO2006',4,'linux,struct,linux内核,class,file,module,',11,'http://my.csdn.net/YAOZHENGUO2006',1),(2397,4,'http://blog.csdn.net/yaozhenguo2006/article/details/6761183','mini2440驱动分析之LED','mini2440驱动分析之LED\r\n        看LDD3有一段时间了，里面的例程也大部分实践了一下。现在进入真正的驱动程序学习。从友善之臂mini2440提供的驱动程序开始，把一些基本的驱动程序...',4254,'csdn/linux/1_1_1_11_1504264709.82406.html','2011-09-08 17:43','YAOZHENGUO2006',2,'c,table,output,struct,cmd,数据结构,',0,'http://my.csdn.net/YAOZHENGUO2006',1),(2398,2,'http://blog.csdn.net/renpengddxx/article/details/72517015','php、java实现桥接模式','该模式主要目的在于解耦，将模块的粒度分隔的更细，便于需求的更改类图 \njava实现public interface Implementor {\n    public void doSomething(...',434,'csdn/java/1_0_1_0_1504264710.849243.html','2017-05-19 09:23','renpengddxx',0,'桥接模式,java,php,',0,'http://my.csdn.net/renpengddxx',1),(2399,2,'http://blog.csdn.net/renpengddxx/article/details/65441742','php,java实现代理模式','普通代理模式类似于装饰者模式，将真实的实现逻辑的对象包装起来，外界通过访问其代理来调用真是的逻辑代码类图 \njava代码实现public interface Subject {    public v...',103,'csdn/java/1_0_1_15_1504264712.009188.html','2017-03-23 11:46','renpengddxx',0,'php,',0,'http://my.csdn.net/renpengddxx',1),(2400,2,'http://blog.csdn.net/renpengddxx/article/details/64438307','php,java实现建造者模式','很容易将建造者模式和工厂方法模式混淆，他们的区别是工厂方法模式侧重生产出相同的对象实例，而建造者模式强调的是对同一个对象实例的生产，不同的生产工艺（方法的执行顺序和对属性的赋值）将产生不同效果的对象类...',93,'csdn/java/1_0_1_16_1504264712.97503.html','2017-03-21 09:54','renpengddxx',0,'php,java,',0,'http://my.csdn.net/renpengddxx',1),(2401,4,'http://blog.csdn.net/yaozhenguo2006/article/details/6769482','linux input 子系统分析 一','linux input子系统分析--概述与数据结构\r\n        Input子系统处理输入事务，任何输入设备的驱动程序都可以通过Input输入子系统提供的接口注册到内核，利用子系统提供的功能来与用...',5200,'csdn/linux/1_1_1_7_1504264713.119264.html','2011-09-12 18:31','YAOZHENGUO2006',1,'input,linux,struct,硬件驱动,数据结构,list,',0,'http://my.csdn.net/YAOZHENGUO2006',1),(2402,4,'http://blog.csdn.net/yaozhenguo2006/article/details/7690707','Linux USB Gadget--软件结构','USB Gadget是分层的软件结构，本文分析的是2.6.32.2版本的Gadget软件结构，这个软件结构与以前版本的变化很大。USB Gadget软件结构总共分为三层：\r\n一. UDC层\r\n    ...',8634,'csdn/linux/1_1_1_1_1504264714.04979.html','2012-06-25 18:34','YAOZHENGUO2006',0,'linux,struct,数据结构,c,descriptor,linux内核,',7,'http://my.csdn.net/YAOZHENGUO2006',1),(2403,4,'http://blog.csdn.net/yaozhenguo2006/article/details/6769507','linux input 子系统分析 二','linux input子系统分析--主要函数\r\n 一. 各种注册函数\r\n    因为分析一所讲的每种数据结构都代表一类对象，所以每种数据结构都会对应一个注册函数，他们都定义在子系统核心的input.c...',5114,'csdn/linux/1_1_1_6_1504264715.208629.html','2011-09-12 18:57','YAOZHENGUO2006',4,'input,linux,struct,list,table,数据结构,',0,'http://my.csdn.net/YAOZHENGUO2006',1),(2404,2,'http://blog.csdn.net/renpengddxx/article/details/63680049','php，java实现抽象工厂模式','概念理解抽象工厂模式：生产出不同业务品种的不同业务分类，强调的是每个不同品种下的分类，而他的生产类中是按照业务分类来区别的，就像《设计模式之禅》举的例子，有奔驰车和宝马车，这个车强调的就是业务品种，要...',96,'csdn/java/1_0_1_18_1504264715.849239.html','2017-03-19 09:48','renpengddxx',0,'设计模式,',0,'http://my.csdn.net/renpengddxx',1),(2405,4,'http://blog.csdn.net/yaozhenguo2006/article/details/6775751','linux input 子系统分析 三','linux input子系统分析--子系统核心.事件处理层.事件传递过程\r\n\r\n一.  输入子系统核心分析。\r\n    1.输入子系统核心对应与/drivers/input/input.c文件,这个也...',6986,'csdn/linux/1_1_1_5_1504264716.092698.html','2011-09-14 19:48','YAOZHENGUO2006',6,'input,linux,struct,buffer,list,table,',0,'http://my.csdn.net/YAOZHENGUO2006',1),(2406,2,'http://blog.csdn.net/renpengddxx/article/details/71519064','php、java 实现享元模式','避免无限制的创建对象，建立一个对象池，将可以共享的对象存起来复用。类图 \njava实现public abstract class Flyweight {    private String intri...',382,'csdn/java/1_0_1_1_1504264716.88968.html','2017-05-10 13:18','renpengddxx',0,'java,php,',0,'http://my.csdn.net/renpengddxx',1),(2407,4,'http://blog.csdn.net/yaozhenguo2006/article/details/6760575','linux MISC 驱动模型分析','linux MISC 驱动模型分析\r\n\r\n\r\n        阅读led驱动程序的代码的时候，没有发现ldd3中提到的各种字符设备注册函数，而是发现了一个misc_register函数，这说明led设...',12186,'csdn/linux/1_1_1_12_1504264717.279034.html','2011-09-08 16:18','YAOZHENGUO2006',1,'linux,class,list,struct,linux内核,null,',0,'http://my.csdn.net/YAOZHENGUO2006',1),(2408,2,'http://blog.csdn.net/renpengddxx/article/details/69055627','php,java实现组合模式','组合模式强调整体与部分的关系，如数据结构中的树结构等类图： \njava实现public abstract class AbsPart {    public abstract void getInfo...',664,'csdn/java/1_0_1_7_1504264718.094249.html','2017-04-04 10:11','renpengddxx',0,'php,java,数据结构,结构,',0,'http://my.csdn.net/renpengddxx',1),(2409,4,'http://blog.csdn.net/yaozhenguo2006/article/details/6801161','mini2440驱动分析之LCD','mini2440驱动分析之LCD\r\n        mini2440集成了lcd控制器的接口，板子上接的lcd硬件是统宝240*320，TFT型lcd。lcd驱动对应的文件为s3c2410fb.c。要...',8748,'csdn/linux/1_1_1_4_1504264718.259735.html','2011-09-22 16:56','YAOZHENGUO2006',5,'struct,c,video,数据结构,buffer,null,',0,'http://my.csdn.net/YAOZHENGUO2006',1),(2410,2,'http://blog.csdn.net/renpengddxx/article/details/66968024','php,java实现责任链模式','当我们的请求根据不同的情况需要不同的处理者处理的时候，可以使用该模式，将多个处理者和请求者隔离，只暴露一个处理者，当满足处理条件时处理，不满足时将请求传递，类似于Android的事件分发机制。类图： ...',281,'csdn/java/1_0_1_11_1504264719.067131.html','2017-03-27 09:29','renpengddxx',0,'php,java,',0,'http://my.csdn.net/renpengddxx',1),(2411,2,'http://blog.csdn.net/renpengddxx/article/details/65937239','php，java实现中介者模式','当多个对象之间产生网状的关系时，适合中介者模式，把多对多的依赖转化为只对中介者的依赖类图 \njava实现中介者抽象类public abstract class AbsMediation {    pr...',292,'csdn/java/1_0_1_13_1504264720.089487.html','2017-03-25 15:47','renpengddxx',0,'java,php,',0,'http://my.csdn.net/renpengddxx',1),(2412,4,'http://blog.csdn.net/shanshanpt/article/details/7477027','Linux 服务器设计( 二 )','上一篇的介绍已经OK，那么此处就只贴上代码！\r\n   CODE_1 : 主线程accept，但是线程比进程有一个好处是，对于conn_fd资源来说是可以直接共享的，所以就可以不需要像在进程中那样需要传...',1154,'csdn/linux/1_1_1_0_1504264720.243716.html','2012-04-19 12:39','shanshanpt',0,'服务器,linux,struct,thread,socket,null,',4,'http://my.csdn.net/shanshanpt',1),(2413,2,'http://blog.csdn.net/renpengddxx/article/details/65626905','php,java实现原型模式','当我们要使用或者批量使用一个对象，他们完全相同，并且该对象的初始化过程十分复杂，可以使用该模式克隆出对个对象。类图 \njava代码实现：public class Subject implements ...',120,'csdn/java/1_0_1_14_1504264721.048636.html','2017-03-24 09:47','renpengddxx',0,'java,php,',0,'http://my.csdn.net/renpengddxx',1),(2414,4,'http://blog.csdn.net/shanshanpt/article/details/7383400','linux 网络编程：epoll 的实例','在前面已经经过了PPC、TPC、select之类( TPC就是使用进程处理data，TPC就是使用线程处理 ),前面两个的缺点大家应该都是知道的是吧，对于select( 其实poll和他差不多 )，缺...',6791,'csdn/linux/1_1_1_3_1504264721.215339.html','2012-03-22 15:39','shanshanpt',0,'linux,编程,网络,socket,struct,server,',3,'http://my.csdn.net/shanshanpt',1),(2415,4,'http://blog.csdn.net/shanshanpt/article/details/7381616','UNIX domain  (  UNIX  域协议  )  实例','一般在我们自己的主机上通信的时候，前面也讲到过可以使用pipe，fifo，msg，共享内存之类，如果你想使用套接字的话，当然TCP/IP的套接字也是可以的，只要指定server的IP = 127.0....',1168,'csdn/linux/1_1_1_4_1504264722.303373.html','2012-03-22 06:45','shanshanpt',0,'unix,domain,socket,struct,file,stream,',2,'http://my.csdn.net/shanshanpt',1),(2416,2,'http://blog.csdn.net/renpengddxx/article/details/71158423','php、java实现状态模式','个人理解：根据事物状态的不同，导致其行为的不同，切换状态，相应的行为也会发生变化类图 \nphp实现abstract class Status\n{\n    protected $context;    ...',402,'csdn/java/1_0_1_2_1504264726.190857.html','2017-05-04 10:01','renpengddxx',0,'php,java,',0,'http://my.csdn.net/renpengddxx',1),(2417,4,'http://blog.csdn.net/shanshanpt/article/details/7476988','Linux 下服务器设计（ 一 ）','这里讲的仅仅是一个简单的server的模型！为了处理同时来到很多小的链接请求( 解释：就是请求很简单，持续时间很短，那么if  server在请求到来时在fork来处理它，有可能fork的时间比应答请...',1853,'csdn/linux/1_1_1_1_1504264726.805796.html','2012-04-19 12:31','shanshanpt',0,'服务器,linux,socket,server,struct,stream,',1,'http://my.csdn.net/shanshanpt',1),(2418,2,'http://blog.csdn.net/renpengddxx/article/details/70046429','php,java实现访问者模式','定义一个类，使用它对数据类进行访问，可以减少对数据类的污染，并且可以随意定制数据展示和计算等。类图 \njava实现： \n数据源抽象类public abstract class Element {   ...',283,'csdn/java/1_0_1_3_1504264727.480649.html','2017-04-11 09:59','renpengddxx',0,'java,php,',0,'http://my.csdn.net/renpengddxx',1),(2419,2,'http://blog.csdn.net/renpengddxx/article/details/69499614','php,java实现门面（外观）模式','外观模式，就是将负复杂的业务路基统一到一个类中，该类提供了一个简易的访问接口，只需要调用该接口，就可以完成复杂的逻辑。类图: \njava实现public class BusinessClass1 { ...',351,'csdn/java/1_0_1_5_1504264728.344539.html','2017-04-07 09:14','renpengddxx',0,'java,php,',0,'http://my.csdn.net/renpengddxx',1),(2420,2,'http://blog.csdn.net/renpengddxx/article/details/69222159','php,java实现观察者模式','类图： \njava实现 \n被观察者public abstract class Observable extends java.util.Observable{    private ArrayList...',455,'csdn/java/1_0_1_6_1504264729.44845.html','2017-04-05 09:33','renpengddxx',0,'java,php,',0,'http://my.csdn.net/renpengddxx',1),(2421,2,'http://blog.csdn.net/renpengddxx/article/details/69941813','php，java实现备忘录模式','适用于想要回复某个时间点的数据，类似于数据库的恢复。类图： \njava实现： \n原始类public class Originator {    private String status = \"\"; ...',313,'csdn/java/1_0_1_4_1504264730.608431.html','2017-04-10 08:56','renpengddxx',0,'java,php,',0,'http://my.csdn.net/renpengddxx',1),(2422,4,'http://blog.csdn.net/dlutbrucezhang/article/details/9088951','LINUX0.11 内核阅读笔记','一．源码目录图1二．系统总体流程：系统从boot开始动作，把内核从启动盘装到正确的位置，进行一些基本的初始化，如检测内存，保护模式相关，建立页目录和内存页表，GDT表，IDT表。然后进入main进行初...',1709,'csdn/linux/1_1_1_0_1504264730.655474.html','2013-07-21 19:07','DLUTBruceZhang',0,'Linux,内核,内存,源代码,Linux0.11,',0,'http://my.csdn.net/DLUTBruceZhang',1),(2423,4,'http://blog.csdn.net/dlutbrucezhang/article/details/9332103','Linux0.11进程分配时间片的策略','想知道内核什么时候给进程重新分配时间片，最好的办法就是阅读源代码（其中已经打了注释）/*********************************************************...',1511,'csdn/linux/1_1_1_1_1504264731.676152.html','2013-07-15 14:46','DLUTBruceZhang',0,'Linux,进程,时间片,进程调度,进程切换,',0,'http://my.csdn.net/DLUTBruceZhang',1),(2424,4,'http://blog.csdn.net/dlutbrucezhang/article/details/9313397','Linux进程－进程的创建','今天学习了Linux的进程创建的基本原理，是基于0.11版本核心的。下面对其作一下简单的总结。一、Linux进程在内存中的相关资源   很容易理解，Linux进程的创建过程就是内存中进程相关资源产生的...',1632,'csdn/linux/1_1_1_5_1504264732.643633.html','2013-07-12 17:01','DLUTBruceZhang',0,'Linux,fork,进程,汇编,系统调用,',0,'http://my.csdn.net/DLUTBruceZhang',1),(2425,2,'http://blog.csdn.net/ysc1123/article/details/50097317','润乾报表实用教程','我们都知道在Java领域的开发中，有一个常用的报表--润乾报表。但是对于新手来讲，我们究竟如何在一个较短的时间内最高效的使用它呢？下面一起来看：\r\n☁ 报表设计步骤\r\n                ...',3100,'csdn/java/1_1_1_0_1504264733.399085.html','2015-11-29 16:59','YSC1123',26,'Java,报表,北京,',2,'http://my.csdn.net/YSC1123',1),(2426,4,'http://blog.csdn.net/dlutbrucezhang/article/details/9207173','Linux0.11小结','第一部分 基础内容1.操作系统基础    操作系统是计算机硬件系统与用户程序间重要环节，理解操作系统的原理是编写优秀代码的基础。教课书中阐述的操作系统一般由5部分组成。一个最简单的操作系统，可以不需要...',1790,'csdn/linux/1_1_1_13_1504264733.699226.html','2013-06-30 13:34','DLUTBruceZhang',0,'Linux,内核,栈,行业数据,操作系统,',0,'http://my.csdn.net/DLUTBruceZhang',1),(2427,2,'http://blog.csdn.net/ysc1123/article/details/48465727','小荷才露尖尖角之struts的秘密','我们都知道SSH是目前比较流行的一个Web应用程序开源框架，而struts又是之中的领头框架，究竟它有怎样的力量竟然可以博客IT界的眼球，下面请听我一一道来：\n 一、MVC\n要了解struts必须先来...',865,'csdn/java/1_1_1_1_1504264734.670927.html','2015-09-15 20:00','YSC1123',28,'SSH,Java,struts2.0,',0,'http://my.csdn.net/YSC1123',1),(2428,4,'http://blog.csdn.net/dlutbrucezhang/article/details/9167195','Linux进程-命令行参数和环境列表','命令行参数在C中，main函数有很多的变种，比如main(),\nint main(),\nint main(int argc, char *argv[]),\nint main(int argc, cha...',2484,'csdn/linux/1_1_1_18_1504264734.760718.html','2013-06-25 09:43','DLUTBruceZhang',1,'Linux,存储,String,shell,C,',0,'http://my.csdn.net/DLUTBruceZhang',1),(2429,4,'http://blog.csdn.net/dlutbrucezhang/article/details/9165479','进程内核栈、用户栈','1.进程的堆栈     内核在创建进程的时候，在创建task_struct的同事，会为进程创建相应的堆栈。每个进程会有两个栈，一个用户栈，存在于用户空间，一个内核栈，存在于内核空间。当进程在用户空间运...',1184,'csdn/linux/1_1_1_19_1504264734.79808.html','2013-06-24 21:43','DLUTBruceZhang',0,'栈,内核,指针,处理器,struct,',0,'http://my.csdn.net/DLUTBruceZhang',1),(2430,2,'http://blog.csdn.net/ysc1123/article/details/44588795','教你Servlet入门','Web 技术成为当今主流的互联网 Web 应用技术之一，而 Servlet 是 Java Web 技术的核心基础。这篇博客主要帮助大家了解一个 Web 工程在 Servlet 容器中是如何启动的？ S...',1218,'csdn/java/1_1_1_8_1504264734.863159.html','2015-03-24 14:44','YSC1123',13,'drp,',5,'http://my.csdn.net/YSC1123',1),(2431,2,'http://blog.csdn.net/ysc1123/article/details/44919647','jsp、servlet一家亲','上个月写了《教你servlet入门》，今天来探究一下关于jsp的那些故事。\r\n§ 回顾\r\n\r\n    1． 什么是Web应用程序？\r\n    2． 什么是Servlet，和一般Java程序有什么区别？...',1073,'csdn/java/1_1_1_9_1504264735.616165.html','2015-04-07 15:27','YSC1123',16,'drp,jsp,servlet,',3,'http://my.csdn.net/YSC1123',1),(2432,4,'http://blog.csdn.net/dlutbrucezhang/article/details/9168255','内存分配的原理__进程分配内存有两种方式，分别由两个系统调用完成：brk和mmap（不考虑共享内存）','如何查看进程发生缺页中断的次数？         用ps -o majflt,minflt -C program命令查看。          majflt代表major fault，中文名叫大错误，m...',2725,'csdn/linux/1_1_1_17_1504264735.958755.html','2013-06-25 11:09','DLUTBruceZhang',0,'内存,内存分配,malloc,C,行业数据,',0,'http://my.csdn.net/DLUTBruceZhang',1),(2433,2,'http://blog.csdn.net/ysc1123/article/details/50062321','Oracle语句的再深化--转码','当我们面对一个数据表，且表结构为：\ncreate table R_ExtSubFina_Month\n(\n        rptdate date not null,\n        rptname v...',1097,'csdn/java/1_1_1_2_1504264736.722254.html','2015-11-26 23:11','YSC1123',14,'北京,oracle,工作,sql,',0,'http://my.csdn.net/YSC1123',1),(2434,4,'http://blog.csdn.net/dlutbrucezhang/article/details/9168289','Linux--缺页中断和交换技术','1．请求调页中断：进程线性地址空间里的页面不必常驻内存，例如进程的分配请求被理解满足，空间仅仅保留vm_area_struct的空间，页面可能被交换到后援存储器，或者写一个只读页面(COW)。Linu...',1835,'csdn/linux/1_1_1_16_1504264737.003872.html','2013-06-25 11:11','DLUTBruceZhang',0,'Cache,磁盘,链表,内存,struct,',0,'http://my.csdn.net/DLUTBruceZhang',1),(2435,2,'http://blog.csdn.net/ysc1123/article/details/50462924','静态代理和动态代理的再学习','学过设计模式的编友们，一定对代理模式很熟悉，最近在学习中发现Spring中更好的使用了动态带来来降低耦合，提高代码复用性，那么为什么要使用动态代理？动态代理和我们之前使用的普通代理有什么区别和好处？\n...',773,'csdn/java/1_1_1_4_1504264737.929776.html','2016-01-05 17:30','YSC1123',2,'Java,设计模式,ssh,spring,',1,'http://my.csdn.net/YSC1123',1),(2436,4,'http://blog.csdn.net/dlutbrucezhang/article/details/9173951','Linux0.11进程切换和TSS结构','TSS 全称为task state segment，是指在操作系统进程管理的过程中，进程切换时的任务现场信息。 　　      X86体系从硬件上支持任务间的切换。为此目的，它增设了一个新段：任务状态...',1686,'csdn/linux/1_1_1_15_1504264737.978957.html','2013-06-25 22:11','DLUTBruceZhang',1,'Linux,struct,进程切换,进程调度,时间片,',0,'http://my.csdn.net/DLUTBruceZhang',1),(2437,2,'http://blog.csdn.net/ysc1123/article/details/48004933','笨鸟先飞之Java--MySql中文数据乱码为哪般？？？','看问题要全面，在解决问题的过程中要学者全面分析和思考问题，不要犯”头痛医头脚痛医脚“的错误！！',936,'csdn/java/1_1_1_6_1504264738.898466.html','2015-08-27 20:12','YSC1123',35,'乱码,Java,',2,'http://my.csdn.net/YSC1123',1),(2438,4,'http://blog.csdn.net/dlutbrucezhang/article/details/9207167','Linux0.11启动过程','从开机加电，到执行main函数之前的过程好吧，这里应该是有执行3个汇编的文件，但是我不太了解。囧从main函数，到启动OK（即可以响应用户操作了）这个步骤做了3件事情：创建进程0，使之具备在主机中进行...',1083,'csdn/linux/1_1_1_12_1504264738.965395.html','2013-06-30 13:32','DLUTBruceZhang',0,'Linux,行业数据,管理,硬盘,Structure,',0,'http://my.csdn.net/DLUTBruceZhang',1),(2439,2,'http://blog.csdn.net/ysc1123/article/details/45421777','严重：StandardServer.await:create[localhost 8005]:java.net.BindException','在使用tomcat服务器运行程序时，我们可能会遇到这样的问题：\r\n \r\n       由上面的信息可以发现，该问题是由于8005端口号已经被占用，所以我们需要对这样的端口号进行设置，因而找到tomca...',1995,'csdn/java/1_1_1_7_1504264739.807179.html','2015-05-01 21:07','YSC1123',10,'drp,socket,myeclipse,tomcat,',1,'http://my.csdn.net/YSC1123',1),(2440,4,'http://blog.csdn.net/dlutbrucezhang/article/details/9319577','Linux 句柄是什么 ？','1.句柄就是一个标识符，只要获得对象的句柄，我们就可以对对象进行任意的操作。2.句柄不是指针，操作系统用句柄可以找到一块内存，这个句柄可能是标识符，map的key，也可能是指针，看操作系统怎么处理的了...',6626,'csdn/linux/1_1_1_4_1504264740.23272.html','2013-07-13 16:55','DLUTBruceZhang',0,'Linux,文件,句柄,打开,读取,',0,'http://my.csdn.net/DLUTBruceZhang',1),(2441,2,'http://blog.csdn.net/ysc1123/article/details/47955299','笨鸟先飞之Java---缠缠绵绵的注解和注释','在平时的编程中注释一直与我们为伴，但是在Java编程中我们会经常性的使用注解。一字之差，也不知是否会有“失之毫厘差以千里”之说？？一起来看：',1763,'csdn/java/1_1_1_5_1504264740.836072.html','2015-08-24 19:29','YSC1123',28,'Java,笨鸟先飞,',2,'http://my.csdn.net/YSC1123',1),(2442,4,'http://blog.csdn.net/dlutbrucezhang/article/details/9214031','两篇文章说中断和异常之一','转载自：http://www.cnblogs.com/javawebsoa/archive/2013/05/05/3061787.html中断和异常的概念* 中断： 硬件通过中断来通知内核。中断是一种...',1214,'csdn/linux/1_1_1_10_1504264741.30052.html','2013-07-01 14:46','DLUTBruceZhang',0,'异常,职场,内核,struct,处理器,',0,'http://my.csdn.net/DLUTBruceZhang',1),(2443,2,'http://blog.csdn.net/ysc1123/article/details/50416919','数字溢出的那点事儿','近期的工作中，使用报表的频度越来越高，虽然展示数据更加方便了，但是报表加载数据时的各种问题也就迎之而来，最典型的问题：数字溢出；\n      先来看一下运行的错误日志：   \n    ❦故事背景：\n ...',797,'csdn/java/1_1_1_3_1504264741.909615.html','2015-12-28 10:12','YSC1123',8,'北京,Java,报表,',1,'http://my.csdn.net/YSC1123',1),(2444,4,'http://blog.csdn.net/dlutbrucezhang/article/details/9212067','Linux 进程等待队列','Linux内核的等待队列是以双循环链表为基础数据结构，与进程调度机制紧密结合，能够用于实现核心的异步事件通知机制。在这个链表中，有两种数据结构：等待队列头（wait_queue_head_t）和等待队...',1356,'csdn/linux/1_1_1_11_1504264742.207041.html','2013-07-01 10:51','DLUTBruceZhang',0,'Linux,struct,数据结构,宏,',0,'http://my.csdn.net/DLUTBruceZhang',1),(2445,4,'http://blog.csdn.net/dlutbrucezhang/article/details/9214061','两篇文章说异常和中断之二','一、基本概念1. 产生的位置发生的时刻时序中断CPU外部随机异步异常CPU正在执行的程序一条指令终止执行后同步2.由中断或异常执行的代码不是一个进程，而是一个内核控制路径，代表中断发生时正在运行的进程...',1606,'csdn/linux/1_1_1_9_1504264743.186532.html','2013-07-01 14:47','DLUTBruceZhang',0,'异常,Linux,栈,异常处理,内核,',0,'http://my.csdn.net/DLUTBruceZhang',1),(2446,4,'http://blog.csdn.net/dlutbrucezhang/article/details/9287093','Linux根文件系统介绍','系统　　根文件系统首先是一种文件系统，但是相对于普通的文件系统，它的特殊之处在于，它是内核启动时所mount的第一个文件系统，内核代码映像文件保存在根文件系统中，而系统引导启动程序会在根文件系统挂载之...',5299,'csdn/linux/1_1_1_8_1504264744.190514.html','2013-07-10 08:52','DLUTBruceZhang',0,'根文件系统,Linux,Root,多用户,',0,'http://my.csdn.net/DLUTBruceZhang',1),(2447,4,'http://blog.csdn.net/dlutbrucezhang/article/details/9300741','Linux0.11 创建进程的过程分析--fork函数的使用','/*\n* linux/kernel/fork.c\n*\n* (C) 1991 Linus Torvalds\n*/\n/*\n注意：signal.c和fork.c文件的编译选项内不能有vc变量优化选项/Og，...',1352,'csdn/linux/1_1_1_7_1504264745.333593.html','2013-07-11 14:52','DLUTBruceZhang',0,'fork,linux,C,',0,'http://my.csdn.net/DLUTBruceZhang',1),(2448,4,'http://blog.csdn.net/dlutbrucezhang/article/details/9196129','深入解析Linux中的fork函数','1、定义\n#include \n#include\npid_t fork( void );pid_t 是一个宏定义，其实质是int，被定义在#include中返回值：若成功调用一次则返回两个值，子进程返回...',1633,'csdn/linux/1_1_1_14_1504264746.601816.html','2013-06-28 13:43','DLUTBruceZhang',0,'Linux,printf,存储,Unix,Prototype,',0,'http://my.csdn.net/DLUTBruceZhang',1),(2449,4,'http://blog.csdn.net/dlutbrucezhang/article/details/9329591','Linux0.11中对文本文件进行修改的策略','现在，假设 hello.txt 是硬盘上已有的一个文件，而且内容为 “hello, world” ，在文件的当前指针设置完毕后，我们来介绍 sys_read , sys_write , sys_lse...',1546,'csdn/linux/1_1_1_2_1504264747.336688.html','2013-07-15 14:05','DLUTBruceZhang',0,'Linux,文件修改,文件指针,文件偏移,函数,',1,'http://my.csdn.net/DLUTBruceZhang',1),(2450,4,'http://blog.csdn.net/dlutbrucezhang/article/details/9303621','什么是文件头','要求每个文件均有特殊的、可识别的文件头。文件头偏移	代号	数据类型	字节数	默认值	名称	说明0	FUM	P-BCD	2	 文件统一标识	所有文件均含有此标识符2	FDT	P-BCD	1	 文件数据类...',2182,'csdn/linux/1_1_1_6_1504264748.36518.html','2013-07-11 19:09','DLUTBruceZhang',0,'java,文件头,文件类型,Linux,',0,'http://my.csdn.net/DLUTBruceZhang',1),(2451,4,'http://blog.csdn.net/dlutbrucezhang/article/details/9326857','进程的用户栈和内核栈','进程是程序的一次执行过程。用剧本和演出来类比，程序相当于剧本，而进程则相当于剧本的一次演出，舞台、灯光则相当于进程的运行环境。进程的堆栈每个进程都有自己的堆栈，内核在创建一个新的进程时，在创建进程控制...',2803,'csdn/linux/1_1_1_3_1504264749.460836.html','2013-07-14 22:11','DLUTBruceZhang',0,'Linux,进程管理,内存,',0,'http://my.csdn.net/DLUTBruceZhang',1),(2452,2,'http://blog.csdn.net/wiker_yong/article/details/50781969','JAVA设计模式-代理模式','代理模式代理模式使用代理对象完成用户请求，屏蔽用户对真实对象的访问。现实世界的代理人被授权执行当事人的一些事宜，无需当事人出面，从第三方的角度看，似乎当事人并不存在，因为他只和代理人通信。而事实上代理...',943,'csdn/java/1_0_1_0_1504264756.611221.html','2016-03-02 18:08','yangwei19680827',1,'java设计模式,',2,'http://my.csdn.net/yangwei19680827',1),(2453,2,'http://blog.csdn.net/odeviloo/article/details/52382338','一天一个设计模式---分类与六大原则','介绍23中设计模式的分类方式，结合《设计模式》一书的插图更加明显。详细说明设计模式中的六大原则，结合场景分析其解决方案。',2658,'csdn/java/1_0_1_0_1504264761.935354.html','2016-08-31 14:37','oDeviloo',0,'设计模式,',1,'http://my.csdn.net/oDeviloo',1),(2454,2,'http://blog.csdn.net/odeviloo/article/details/53292575','一天一个设计模式---中介者模式','我们去租房子时，每次价格变动的时候，房东通知下面的各个有意向的房客，而我们又需要对每个房东进行反馈。这样，一个房客和每个房东，以及一个房东和每个房客的关系都紧密相连。如果我们通过中介，中介会帮我们处理...',570,'csdn/java/1_0_1_1_1504264762.85544.html','2016-11-22 22:09','oDeviloo',0,'设计模式,',1,'http://my.csdn.net/oDeviloo',1),(2455,2,'http://blog.csdn.net/odeviloo/article/details/52458677','一天一个设计模式---享元模式','这是在这么多种设计模式中极少的以提高程序性能为目的的模式。其主要思想为—如果系统中存在多个相同对象，那么只需要一份对象的拷贝，而不必在每次使用的时候去新建一个对象。',733,'csdn/java/1_0_1_18_1504264764.008791.html','2016-09-07 13:27','oDeviloo',0,'设计模式,性能,',0,'http://my.csdn.net/oDeviloo',1),(2456,2,'http://blog.csdn.net/odeviloo/article/details/52420690','一天一个设计模式---代理模式','让我通过成龙大哥和经纪人的故事来讲解静态代理。通过JDK动态代理和CGLIB动态代理详细说明动态代理的实现方法。',657,'csdn/java/1_0_1_19_1504264764.951108.html','2016-09-03 00:53','oDeviloo',0,'设计模式,',0,'http://my.csdn.net/oDeviloo',1),(2457,2,'http://blog.csdn.net/odeviloo/article/details/52471559','一天一个设计模式---抽象工厂模式','继续上篇文章讲述Pizza供应商和工厂的故事。',979,'csdn/java/1_0_1_17_1504264765.932739.html','2016-09-08 14:55','oDeviloo',0,'工厂模式,设计模式,',1,'http://my.csdn.net/oDeviloo',1),(2458,2,'http://blog.csdn.net/odeviloo/article/details/53292643','一天一个设计模式---迭代器模式','使用Array、List、Map我们一般都会进行迭代操作，现在照着源码，来实现自定义的迭代器。',593,'csdn/java/1_0_1_2_1504264767.120785.html','2016-11-22 22:14','oDeviloo',0,'设计模式,迭代器,',1,'http://my.csdn.net/oDeviloo',1),(2459,2,'http://blog.csdn.net/odeviloo/article/details/52684935','一天一个设计模式---生成器模式','玩过《我的世界》这类沙盒游戏的玩家，很多都是冲着其开放式的制作功能去的。比如，我们要建造一个房子就需要很多东西。使得同样的构建过程可以创建不同的表示场景：我们在创建对象时可能会碰到过一个问题，比如，如...',1344,'csdn/java/1_0_1_10_1504264768.147976.html','2016-09-27 21:33','oDeviloo',2,'设计模式,',1,'http://my.csdn.net/oDeviloo',1),(2460,2,'http://blog.csdn.net/odeviloo/article/details/52535105','一天一个设计模式---适配器模式','小明从香港买了港版的iphone7 puls，回家发现插头用不了，但是通过转换头我们就能解决这个问题。',762,'csdn/java/1_0_1_14_1504264768.983949.html','2016-09-14 09:40','oDeviloo',0,'设计模式,',0,'http://my.csdn.net/oDeviloo',1),(2461,2,'http://blog.csdn.net/odeviloo/article/details/52488283','一天一个设计模式---装饰者模式','通过奶茶哥哥开奶茶店的例子来说说装饰者模式',534,'csdn/java/1_0_1_16_1504264769.980433.html','2016-09-09 16:18','oDeviloo',0,'设计模式,',0,'http://my.csdn.net/oDeviloo',1),(2462,2,'http://blog.csdn.net/odeviloo/article/details/52507234','一天一个设计模式---观察者模式','班里的同学在玩手机，聊天，而殊不知老师就在窗边观察着。',934,'csdn/java/1_0_1_15_1504264770.91447.html','2016-09-11 22:56','oDeviloo',0,'设计模式,',0,'http://my.csdn.net/oDeviloo',1),(2463,2,'http://blog.csdn.net/odeviloo/article/details/52600518','一天一个设计模式---状态模式','有些生存类游戏，比如《饥荒》中树木生长就是一个非常复杂的过程。现在我们就来模拟树木生长过程。',962,'csdn/java/1_0_1_13_1504264771.998414.html','2016-09-20 21:39','oDeviloo',0,'设计模式,',0,'http://my.csdn.net/oDeviloo',1),(2464,2,'http://blog.csdn.net/odeviloo/article/details/52671340','一天一个设计模式---模板方法模式','对于多个业务，它们的业务中有很多功能是相似的，有部分功能需要独自实现。这样我们就可以使用模板方法模式，将功能打散，抽取出更小的功能块，并减少重复代码。',1279,'csdn/java/1_0_1_11_1504264773.11834.html','2016-09-26 16:21','oDeviloo',0,'设计模式,',0,'http://my.csdn.net/oDeviloo',1),(2465,2,'http://blog.csdn.net/odeviloo/article/details/52610961','一天一个设计模式---策略模式','一套好的VR设备是十分昂贵的，在初期设备的价格高于官方报价。过了一段时间，卖家会降价，再过段时间，VR的势头过去，堆积的商品会进行促销。这里就可以使用策略模式来解决价格变动的问题。',1360,'csdn/java/1_0_1_12_1504264773.966487.html','2016-09-21 17:50','oDeviloo',2,'设计模式,',3,'http://my.csdn.net/oDeviloo',1),(2466,2,'http://blog.csdn.net/odeviloo/article/details/52760783','一天一个设计模式---原型模式','小米买了PSP，如果小明买的PSP和小米的使用的是同个对象，那么小明对其操作会导致小米的PSP也造成同样的改变。为了改变这种局面，我们就应该在应用中使用原型模式。',910,'csdn/java/1_0_1_9_1504264774.898729.html','2016-10-08 21:34','oDeviloo',0,'设计模式,',0,'http://my.csdn.net/oDeviloo',1),(2467,2,'http://blog.csdn.net/odeviloo/article/details/53184547','一天一个设计模式---解释器模式','对于语法的解释，是十分复杂的，比如打造一款计算器，我们需要让程序知道加减乘除和数字的关系，这个时候就可以用到解释器模式',768,'csdn/java/1_0_1_3_1504264775.981779.html','2016-11-16 11:09','oDeviloo',0,'设计模式,',0,'http://my.csdn.net/oDeviloo',1),(2468,2,'http://blog.csdn.net/odeviloo/article/details/52918773','一天一个设计模式---外观模式','如果让我们来制作一个苹果手机，我们需要实现拍照、视频聊天、通话的功能。通过外观模式，相当于对外提供了几个接口，拍照、视频聊天、通话的接口，而具体的内部处理，用户并不需要关心。',782,'csdn/java/1_0_1_6_1504264777.154181.html','2016-10-25 10:00','oDeviloo',0,'设计模式,',2,'http://my.csdn.net/oDeviloo',1),(2469,2,'http://blog.csdn.net/odeviloo/article/details/52816069','一天一个设计模式---桥接模式','举个桥梁的例子来说明。首先，说下原来的业务，中国建筑师只会造中国桥，美国建筑师会造美国桥。但是中国建筑师牛逼啊，学会了美国桥的建造。如果没有使用桥接模式，可能代码上会有很多问题。',831,'csdn/java/1_0_1_8_1504264777.991631.html','2016-10-14 15:08','oDeviloo',0,'桥接模式,设计模式,多态,',0,'http://my.csdn.net/oDeviloo',1),(2470,2,'http://blog.csdn.net/odeviloo/article/details/52839170','一天一个设计模式---组合模式','我们平时常用的dom4j框架其实其中就使用了组合模式来实现各个节点。我们就大致模仿，制作一个简单的xml框架。',1063,'csdn/java/1_0_1_7_1504264778.995822.html','2016-10-17 15:37','oDeviloo',0,'设计模式,xml,文件系统,',0,'http://my.csdn.net/oDeviloo',1),(2471,2,'http://blog.csdn.net/odeviloo/article/details/53081455','一天一个设计模式---命令模式','用命令模式来实现一个2D飞行射击游戏，能左右按钮躲避敌人的子弹，切换武器，射击。',877,'csdn/java/1_0_1_4_1504264780.053803.html','2016-11-08 13:50','oDeviloo',0,'设计模式,',1,'http://my.csdn.net/oDeviloo',1),(2472,2,'http://blog.csdn.net/odeviloo/article/details/53022407','一天一个设计模式---责任链模式','当时学习时，十分神秘的拦截器/过滤器，现在我也终于有思路去实现了！',815,'csdn/java/1_0_1_5_1504264781.274046.html','2016-11-03 16:00','oDeviloo',0,'设计模式,',0,'http://my.csdn.net/oDeviloo',1),(2473,2,'http://blog.csdn.net/odeviloo/article/details/52388833','一天一个设计模式---单例模式','介绍单利模式的主要思想、优点。使用基本的懒汉式和饿汉式的相关实例代码具体说明。',794,'csdn/java/1_0_2_0_1504264783.117375.html','2016-08-31 21:12','oDeviloo',0,'设计模式,',0,'http://my.csdn.net/oDeviloo',1),(2474,2,'http://blog.csdn.net/odeviloo/article/details/52335899','泛型让代码安全简单','合理的使用泛型，能让代码中的类型转换更加安全，而且在写代码的时候会更加简单。',699,'csdn/java/1_0_2_1_1504264784.082509.html','2016-08-27 16:50','oDeviloo',0,'java,泛型,',0,'http://my.csdn.net/oDeviloo',1),(2475,2,'http://blog.csdn.net/odeviloo/article/details/52320030','你知道这Java类型转换问题么？','一些我们忽视的类型转换问题，有你知道的，也有你不知道的。',629,'csdn/java/1_0_2_2_1504264785.118414.html','2016-08-26 00:45','oDeviloo',0,'java,',1,'http://my.csdn.net/oDeviloo',1),(2476,2,'http://blog.csdn.net/odeviloo/article/details/50390641','类和对象理解','最近看了TIOBE排行，java居然已经超过了c语言，排在了第一位。心理莫名的激动了一下，不是想说java有多牛逼，只是感慨现在java程序员越来越多，竞争压力加大。java区别于c语言，很重要的一点...',454,'csdn/java/1_0_2_10_1504264786.360581.html','2015-12-23 23:59','oDeviloo',0,'java,面向对象,',1,'http://my.csdn.net/oDeviloo',1),(2477,2,'http://blog.csdn.net/odeviloo/article/details/50546545','java--多线程与juc','刚刚研究多线程和juc发现一个写的比较不错的地址。多线程：http://www.cnblogs.com/skywang12345/p/java_threads_category.htmljuc:htt...',433,'csdn/java/1_0_2_3_1504264787.278852.html','2016-01-20 09:58','oDeviloo',0,'多线程,',1,'http://my.csdn.net/oDeviloo',1),(2478,2,'http://blog.csdn.net/odeviloo/article/details/51482238','Socket编程(六)---TCP/NIO实例讲解','本文将通过Channel(通道)、Buffer(缓冲区)以及Selector(选择器)来实现TCP下NIO的实例。',624,'csdn/java/1_0_2_4_1504264788.124652.html','2016-05-23 15:49','oDeviloo',0,'socket,实例,编程,buffer,',1,'http://my.csdn.net/oDeviloo',1),(2479,2,'http://blog.csdn.net/odeviloo/article/details/51469478','Socket编程(三)---仿QQ多人聊天实例','这次的实例，目的是为了模仿QQ上和好友聊天的功能，也就是用户登录后，点击用户头像，发送信息，好友就会接受到信息。',2245,'csdn/java/1_0_2_7_1504264789.165158.html','2016-05-21 15:47','oDeviloo',0,'socket,聊天,编程,实例,',2,'http://my.csdn.net/oDeviloo',1),(2480,2,'http://blog.csdn.net/odeviloo/article/details/51459887','Socket编程(一)---图解Socket','TCP/UDP基本概念介绍，socket相关行为的解释',1612,'csdn/java/1_0_2_9_1504264790.099086.html','2016-05-20 10:46','oDeviloo',0,'socket,编程,tcp,',1,'http://my.csdn.net/oDeviloo',1),(2481,2,'http://blog.csdn.net/odeviloo/article/details/51461212','Socket编程(二)---TCP简单实例','从上篇文章我们已经对Socket有了初步的认识，现在我们就通过一个例子来实现TCP简单实例。',825,'csdn/java/1_0_2_8_1504264791.147888.html','2016-05-20 14:42','oDeviloo',0,'socket,编程,server,通信,实例,',1,'http://my.csdn.net/oDeviloo',1),(2482,2,'http://blog.csdn.net/odeviloo/article/details/51479958','Socket编程(五)---NIO原理解读','参考文章： \nhttp://www.cnblogs.com/flyoung2008/p/3251826.html \nhttp://weixiaolu.iteye.com/blog/14796561.I...',552,'csdn/java/1_0_2_5_1504264792.082337.html','2016-05-23 11:20','oDeviloo',0,'socket,编程,clientserver,server,',1,'http://my.csdn.net/oDeviloo',1),(2483,2,'http://blog.csdn.net/odeviloo/article/details/51479109','Socket编程(四)---使用线程池优化服务端','在服务端使用线程池，来优化服务端处理的能力。',1197,'csdn/java/1_0_2_6_1504264793.311422.html','2016-05-23 09:19','oDeviloo',0,'socket,jvm,线程池,优化,编程,',1,'http://my.csdn.net/oDeviloo',1),(2484,2,'http://blog.csdn.net/tototuzuoquan/article/details/7710508','struts2校验','Struts2提供两种校验规则：字段校验器配置风格和非字段配置风格。\n字段校验器的格式：\n\n\n\n参数值\n-->\n校验失败时的提示信息\n\n\n下一个要校验的字段à\n\n字段校验器以元素为基本元素，该元素的n...',666,'csdn/java/1_0_1_4_1504264800.660985.html','2012-07-03 05:35','toto1297488504',0,'struts,action,',0,'http://my.csdn.net/toto1297488504',1),(2485,2,'http://blog.csdn.net/tototuzuoquan/article/details/8043574','Hibernate优化策略','1、抓取策略：\n 当提取一个对象的关联对象时，所要求的策略。\n \n fetch=\"select\"\n \n \n  customer:  lazy=\"false\" 或者  session.get(Custo...',805,'csdn/java/1_0_1_13_1504264805.665798.html','2012-10-06 17:57','toto1297488504',0,'hibernate,优化,session,sql,object,',0,'http://my.csdn.net/toto1297488504',1),(2486,2,'http://blog.csdn.net/tototuzuoquan/article/details/7841817','OA项目中环境准备','1，新建工程，类型为Web Project，设置默认编码为UTF-8，并创建如下文件夹\n 1，Source Folder\n  1，src  项目源码\n  2，conf  配置文件\n  3，test  ...',1269,'csdn/java/1_0_1_5_1504264808.630293.html','2012-08-08 09:19','toto1297488504',0,'struts,hibernate,spring,myeclipse,jbpm,',0,'http://my.csdn.net/toto1297488504',1),(2487,2,'http://blog.csdn.net/tototuzuoquan/article/details/8043564','Hibernate开发中常见错误总结','org.hibernate.MappingException: Unknown entity: cn.itcast.hibernate717.helloworld.Person\nhibernate框架...',12895,'csdn/java/1_0_1_10_1504264810.672586.html','2012-10-06 17:54','toto1297488504',1,'hibernate,object,数据库,delete,session,',0,'http://my.csdn.net/toto1297488504',1),(2488,2,'http://blog.csdn.net/tototuzuoquan/article/details/7848597','OA中总结：s:select,关于使用modelDriven,项目分层，@Transactional，jspf,各个层上配置注解交给spring管理的方法，简单的OGNL表达式写法','%\n\n list:需要进行迭代的list集合\n listKey:需要提交的值\n listValue:需要在页面上显示的值\n============================\n优化\n1.Actio...',1707,'csdn/java/1_0_1_9_1504264811.699423.html','2012-08-09 17:52','toto1297488504',0,'spring,service,action,session,include,',0,'http://my.csdn.net/toto1297488504',1),(2489,2,'http://blog.csdn.net/tototuzuoquan/article/details/7841822','OA中SSH+JBPM项目整合','一，集成 Spring 与 Hibernate\n 1，配置SessionFactory\n  1，配置\n   ---------------------- applicationContext.xml ...',2159,'csdn/java/1_0_1_6_1504264813.032858.html','2012-08-08 09:21','toto1297488504',0,'jbpm,ssh,spring,hibernate,class,',0,'http://my.csdn.net/toto1297488504',1),(2490,2,'http://blog.csdn.net/tototuzuoquan/article/details/26178115','基于XML配置的Spring MVC（所需jar包，web.xml配置，处理器配置，视图解析器配置）','1、添加jar\n\n2、web.xml配置\n\n\n xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\n xmlns:xsi=\"http://www.w3.org/200...',1492,'csdn/java/1_0_2_8_1504264826.922156.html','2014-05-18 23:55','toto1297488504',0,'Spring MVC,',0,'http://my.csdn.net/toto1297488504',1),(2491,2,'http://blog.csdn.net/xu__cg/article/details/52901464','Java设计模式学习——前言与介绍','前言　　在我平时的学习与项目工作中，经常会纠结于类的框架搭建，以及类间的关系梳理，而当我通过查看一些牛人的代码解释时总会有一种有一种豁然开朗之感，感觉别人写的代码层次清晰，易于理解。久而久之，我确实感...',595,'csdn/java/1_1_1_0_1504264842.918989.html','2016-10-23 14:04','xu__cg',1,'java设计模式,设计模式,',1,'http://my.csdn.net/xu__cg',1),(2492,2,'http://blog.csdn.net/xu__cg/article/details/52909769','Java设计模式学习02——工厂模式','工厂模式工厂模式主要是为创建对象提供接口，将创建对象的过程隔离起来，实现了创建者与调用者的分离，提高了程序的灵活性。 \n核心本质：\n实例化对象，用工厂方法代替new操作。\n将选择实现类、创建对象统一管...',771,'csdn/java/1_1_1_1_1504264843.98766.html','2016-10-24 12:39','xu__cg',0,'java设计模式,工厂模式,java,',3,'http://my.csdn.net/xu__cg',1),(2493,2,'http://blog.csdn.net/xu__cg/article/details/52923835','Java设计模式学习03——建造者模式','一、场景 \n        当需要生产一辆汽车时，我们需要为其装配发动机、轮胎、座椅等等部件，这个装配过程是比较复杂的而且也需要较高的组装技术。而建造者模式（Builder Pattern）就是为了将...',562,'csdn/java/1_1_1_2_1504264844.946896.html','2016-10-25 16:24','xu__cg',1,'java设计模式,建造者模式,',3,'http://my.csdn.net/xu__cg',1),(2494,2,'http://blog.csdn.net/xu__cg/article/details/52948633','Java设计模式学习05——适配器模式','之前讲的几种模式都是创建型模式，现在开始讲结构型模式。何为结构型模式？结构型模式的 核心作用， 是从程序结构上实现松耦合，从而可以扩大整体的类结构，用来解决更大的问题。一、适配器模式定义适配器模式，把...',447,'csdn/java/1_1_1_4_1504264845.942677.html','2016-10-27 18:55','xu__cg',1,'java设计模式,java,适配器模式,',1,'http://my.csdn.net/xu__cg',1),(2495,2,'http://blog.csdn.net/xu__cg/article/details/52970885','Java设计模式学习06——静态代理与动态代理','一、代理模式为某个对象提供一个代理，从而控制这个代理的访问。代理类和委托类具有共同的父类或父接口，这样在任何使用委托类对象的地方都可以使用代理类对象替代。代理类负责请求的预处理、过滤、将请求分配给委托...',955,'csdn/java/1_1_1_5_1504264846.887893.html','2016-10-30 09:57','xu__cg',1,'java设计模式,静态代理与动态代理,',4,'http://my.csdn.net/xu__cg',1),(2496,2,'http://blog.csdn.net/xu__cg/article/details/52932028','Java设计模式学习04——原型模式','原型模式　　当我们需要构建一个与已经存在对象相似时，再通过new去产生一个新对象需要非常繁琐的数据准备或访问权限，而这时就可以用到原型模式，原型模式实现就是Java中的克隆技术，以某个对象为原型，复制...',370,'csdn/java/1_1_1_3_1504264847.964694.html','2016-10-26 10:38','xu__cg',0,'java,java设计模式,原型模式,',3,'http://my.csdn.net/xu__cg',1),(2497,2,'http://blog.csdn.net/xu__cg/article/details/53190763','Java设计模式18——状态模式','一、定义状态(State)模式又称为状态对象模式(Pattern of Objects for State),状态模式是对象的行为模式。状态模式允许一个对象在其内部状态改变时改变其行为，用于解决系统中...',587,'csdn/java/1_1_1_17_1504264848.931682.html','2016-11-16 19:46','xu__cg',5,'java设计模式,状态模式,',2,'http://my.csdn.net/xu__cg',1),(2498,2,'http://blog.csdn.net/xu__cg/article/details/52999636','Java设计模式学习07——桥接模式','一、场景商城系统中常见的商品分类，以电脑为例，如何良好的处理商品分类销售的问题？\n我们可以用多层继承实现下图的关系：\n实现代码如下：public interface Computer {\n    vo...',573,'csdn/java/1_1_1_6_1504264850.037878.html','2016-11-01 20:03','xu__cg',0,'java设计模式,桥接模式,',2,'http://my.csdn.net/xu__cg',1),(2499,2,'http://blog.csdn.net/xu__cg/article/details/53143349','Java设计模式15——命令模式','一、介绍命令模式：将一个请求封装为对象，从而使我们可用不同的请求对客户进行参数化；对请求排队或者记录请求日志，以及支持可撤销的操作。也称为：动作(Action)模式、事务(transaction)模式...',284,'csdn/java/1_1_1_14_1504264850.947705.html','2016-11-12 21:49','xu__cg',0,'java设计模式,命令模式,',1,'http://my.csdn.net/xu__cg',1),(2500,2,'http://blog.csdn.net/xu__cg/article/details/53242995','Java设计模式19——观察者模式','一、定义观察者模式定义了一个一对多的依赖关系，让多个观察者对象同时监听同一个主题对象。当这个主题状态发生改变时，会通知所有观察者对象，让它们自动更新自己。二、类似场景\n聊天室程序的创建。服务器创建好后...',384,'csdn/java/1_1_1_18_1504264851.909149.html','2016-11-20 18:37','xu__cg',0,'java设计模式,观察者模式,',1,'http://my.csdn.net/xu__cg',1),(2501,2,'http://blog.csdn.net/xu__cg/article/details/53432286','Java设计模式20-备忘录模式','一、场景当我们使用文本编译器记录一些内容时，发现这一步写错了，往往可以使用Ctrl+Z的方式会退到上一个状态，其中运用到的知识就是备忘录模式。二、定义备忘录模式，即保存某个对象内部状态的拷贝，这样以后...',314,'csdn/java/1_1_1_19_1504264853.003265.html','2016-12-02 10:34','xu__cg',0,'java设计模式,备忘录模式,',1,'http://my.csdn.net/xu__cg',1),(2502,2,'http://blog.csdn.net/xu__cg/article/details/53133134','Java设计模式14——中介者(Mediator)模式','一、定义用一个中介对象封装一系列对象的交互，中介者是多个对象不需要显示的相互作用，而且可以独立的改变他们的交互。二、举例通过上述定义可能不好理解，下面举一个例子，假如在一个没有总经理的公司中，有三个部...',390,'csdn/java/1_1_1_13_1504264854.22654.html','2016-11-11 21:06','xu__cg',0,'java设计模式,中介者模式,',0,'http://my.csdn.net/xu__cg',1),(2503,2,'http://blog.csdn.net/xu__cg/article/details/53155551','Java设计模式16——策略模式','一、定义　　策略(strategy)模式属于对象的行为模式。其用途是针对一组算法，将每个不同算法封装到具有共同接口的独立类中，从而使他们可以相互替换。即使 算法和对象分开来，使得算法可以独立于使用它的...',714,'csdn/java/1_1_1_15_1504264855.032455.html','2016-11-14 08:30','xu__cg',5,'java设计模式,策略模式,',0,'http://my.csdn.net/xu__cg',1),(2504,2,'http://blog.csdn.net/xu__cg/article/details/53174505','Java设计模式17——模板方法模式','一、介绍模板方法模式是编程中经常用到的模式。它定义了一个操作中的算法骨架，将某些步骤延迟到子类中实现。这样，新的子类可以在不改变一个算法结构的前提下重新定义该算法的某些特定步骤。二、场景举例当一个客户...',420,'csdn/java/1_1_1_16_1504264856.125967.html','2016-11-15 18:20','xu__cg',0,'java设计模式,模板方法模式,',0,'http://my.csdn.net/xu__cg',1),(2505,2,'http://blog.csdn.net/xu__cg/article/details/53011258','Java设计模式学习08——组合模式','一、组合模式适用场景把部分和整体的关系用树形结构来表示，从而使客户端可以使用统一的方式对部分对象和整体对象进行管理。二、组合模式结构\n抽象构件(Conponent)角色：所有类的共有接口，定义了叶子和...',325,'csdn/java/1_1_1_7_1504264857.111527.html','2016-11-02 19:44','xu__cg',0,'java设计模式,组合模式,',2,'http://my.csdn.net/xu__cg',1),(2506,2,'http://blog.csdn.net/xu__cg/article/details/53054439','Java设计模式11——享元模式','一、适用场景　　内存属于稀缺资源，不能随意浪费。如果在一个系统中有很多个完全相同或相似的对象，我们就可以使用享元模式，让他们共享一份内存即可，不必每个都去实例化对象，从而节省内存空间。二、模式核心\n享...',686,'csdn/java/1_1_1_10_1504264858.090727.html','2016-11-06 14:58','xu__cg',3,'java设计模式,享元模式,',1,'http://my.csdn.net/xu__cg',1),(2507,2,'http://blog.csdn.net/xu__cg/article/details/53103970','Java设计模式13——迭代器模式','一、场景对于学习了Java的同学来说，“迭代”这个词并不会陌生，我们经常使用Iterator接口对Collection下的集合类进行遍历，常见代码：Iterator iterator=list.ite...',253,'csdn/java/1_1_1_12_1504264859.056061.html','2016-11-09 19:15','xu__cg',0,'java设计模式,迭代器,',0,'http://my.csdn.net/xu__cg',1),(2508,2,'http://blog.csdn.net/xu__cg/article/details/53069998','Java设计模式12——责任链模式','一、定义　　将能够处理同一类请求的对象连成一条链，所提交的请求将沿着这条链传递，链上的对象逐个判断是否有能力处理该请求，如果有则处理，如果没有则将请求传递给下一个对象处理。二、场景举例1.生活中场景 ...',296,'csdn/java/1_1_1_11_1504264860.123131.html','2016-11-07 20:07','xu__cg',0,'java设计模式,责任链模式,',1,'http://my.csdn.net/xu__cg',1),(2509,2,'http://blog.csdn.net/xu__cg/article/details/53024490','Java设计模式学习09——装饰模式','一、定义装饰(Decorate)模式又称为包装(Wrapper)模式。装饰模式是以对客户端透明的方式扩展对象的功能，是继承关系的一个替代方案。二、职责\n动态的为一个对象增加新的功能。\n装饰模式是一种用...',1242,'csdn/java/1_1_1_8_1504264861.092748.html','2016-11-03 19:11','xu__cg',3,'java设计模式,装饰模式,',7,'http://my.csdn.net/xu__cg',1),(2510,2,'http://blog.csdn.net/xu__cg/article/details/53047880','Java设计模式10——外观模式','外观模式是最简单的设计模式之一，所以我就不再去重写了，简单的总结转载看到的一篇文章，原文链接：http://blog.csdn.net/jason0539/article/details/227753...',255,'csdn/java/1_1_1_9_1504264862.165889.html','2016-11-05 21:09','xu__cg',0,'java设计模式,设计模式,外观模式,',0,'http://my.csdn.net/xu__cg',1),(2511,2,'http://blog.csdn.net/dawanganban/article/details/36189165','设计模式——代理模式','代理模式的作用是控制和管理访问先看一段代码：package com.test;\n/**\n * 抽象角色\n * @author Administrator\n *\n */\nabstract public ...',1867,'csdn/java/1_0_1_0_1504264864.298592.html','2014-07-01 21:51','lxq_xsyu',1,'设计模式,代理模式,',15,'http://my.csdn.net/lxq_xsyu',1),(2512,2,'http://blog.csdn.net/dawanganban/article/details/28627111','设计模式——观察者模式','观察者模式是对象的行为模式，又叫发布-订阅(Publish/Subscribe)模式、模型-视图(Model/View)模式、源-监听器(Source/Listener)模式或从属者(Dependen...',2199,'csdn/java/1_0_1_1_1504264865.233129.html','2014-06-05 15:28','lxq_xsyu',1,'Java,设计模式,观察者模式,',11,'http://my.csdn.net/lxq_xsyu',1),(2513,2,'http://blog.csdn.net/dawanganban/article/details/9990405','设计模式——建造者模式','什么是建造者模式\nBuilder模式也叫建造者模式或者生成器模式，是由GoF提出的23种设计模式中的一种。Builder模式是一种对象创建型模式之一，用来隐藏复合对象的创建过程，它把复合对象的创建过程...',1873,'csdn/java/1_0_1_3_1504264866.385597.html','2013-08-15 22:14','lxq_xsyu',2,'java,设计模式,建造者模式,',4,'http://my.csdn.net/lxq_xsyu',1),(2514,2,'http://blog.csdn.net/dawanganban/article/details/9899785','设计模式——单例模式','单例模式\n一、什么是单例模式：\n单例模式是一种对象创建形模式，使用单例模式，可以保证为一个类只生成唯一的实例对象。也就是说，在整个程序空间中，该类只存在一个实例对象。\n其实，GoF对单例模式的定义是：...',1826,'csdn/java/1_0_1_5_1504264867.311838.html','2013-08-11 14:55','lxq_xsyu',0,'java,设计模式,单例模式,饿汉式,懒汉式,',6,'http://my.csdn.net/lxq_xsyu',1),(2515,2,'http://blog.csdn.net/dawanganban/article/details/9884681','设计模式——工厂模式在开发中的应用（简单计算器）','下面以一个简单的计算器为例子来说明，怎么用工厂模式。\n如果你没有用任何设计模式，你可能会这样写：\npackage com.meritit;\n\nimport java.util.Scanner;\n\npu...',2616,'csdn/java/1_0_1_6_1504264868.266653.html','2013-08-10 22:16','lxq_xsyu',0,'java,工厂模式,应用,计算器,',3,'http://my.csdn.net/lxq_xsyu',1),(2516,2,'http://blog.csdn.net/dawanganban/article/details/9900539','设计模式——原形模式','Prototype模式是一种对象创建模式，它采用取复制原型对象的方法来创建对象的实例。使用Prototype模式创建的实例，具有与原型一样的数据。\n先看以下代码：\npackage com.meriti...',1536,'csdn/java/1_0_1_4_1504264869.368428.html','2013-08-11 16:45','lxq_xsyu',0,'java,设计模式,原型模式,浅克隆,深度克隆,',5,'http://my.csdn.net/lxq_xsyu',1),(2517,2,'http://blog.csdn.net/dawanganban/article/details/10012013','设计模式——装饰模式','装饰（ Decorator）模式又叫做包装模式。通过一种对客户端透明的方式来扩展对象的功能，是继承关系的一个替换方案。\n假如现在要一个会跑的车，我们会这样做：\npackage com.meritit;...',2051,'csdn/java/1_0_1_2_1504264870.352265.html','2013-08-16 22:59','lxq_xsyu',0,'java,设计模式,装饰模式,',4,'http://my.csdn.net/lxq_xsyu',1),(2518,2,'http://blog.csdn.net/dawanganban/article/details/9882193','设计模式——简单工厂模式—工厂方法模式—抽象工厂模式（比较）','一、简单工厂模式：\n       简单工厂模式是对对象创建的简单封装，可以通过一个工厂类来实现对象的实例化，但是这种方式如果要增加一个新的产品就要修改工厂方法，这样就产生了工厂方法模式。\n      ...',2468,'csdn/java/1_0_1_7_1504264871.621547.html','2013-08-10 18:25','lxq_xsyu',0,'设计模式,工厂模式,比较,',4,'http://my.csdn.net/lxq_xsyu',1),(2519,2,'http://blog.csdn.net/dawanganban/article/details/9879427','设计模式——抽象工厂模式','抽象工厂模式是所有形态的工厂模式中最为抽象和最具一般性的。抽象工厂模式可以向客户端提供一个接口，使得客户端在不必指定产品的具体类型的情况下，能够创建多个产品族的产品对象。\n\n\n\n\n（1）创建一个Fru...',1873,'csdn/java/1_0_1_8_1504264872.398513.html','2013-08-10 17:33','lxq_xsyu',0,'java,设计模式,抽象工厂模式,',3,'http://my.csdn.net/lxq_xsyu',1),(2520,2,'http://blog.csdn.net/dawanganban/article/details/9877593','设计模式——工厂方法模式','工厂方法模式同样属于类的创建模式又被称为多态工厂模式。工厂方法模式的意义是定义一个创建产品对象的工厂接口，将实际创建工作推迟到子类当中。核心工厂类不再负责产品的创建，这样核心类成为一个抽象的工厂角色，...',1864,'csdn/java/1_0_1_9_1504264873.440141.html','2013-08-10 15:51','lxq_xsyu',5,'java,设计模式,工厂方法模式,',3,'http://my.csdn.net/lxq_xsyu',1),(2521,2,'http://blog.csdn.net/dawanganban/article/details/9875873','设计模式——简单工厂','第一个小例子：\npublic class Apple {\n	/*\n	 * 采集\n	 */\n	public void get(){\n		System.out.println(\"采集苹果\");\n	}\n}\n...',2168,'csdn/java/1_0_1_10_1504264874.341045.html','2013-08-10 14:53','lxq_xsyu',0,'java,设计模式,简单工厂模式,',5,'http://my.csdn.net/lxq_xsyu',1),(2522,2,'http://blog.csdn.net/smile_miracle/article/details/53185016','tomcat配置默认显示页面','所谓的修改tomcat的默认主页，就是在tomcat服务器开启时输入ip：port能直接进入你自己定义的主页而不是tomcat主页，具体有以下几个步骤：①首先进入tomcat 下的conf目录，修改s...',758,'csdn/java/1_1_1_0_1504264878.31873.html','2016-11-16 11:52','Smile_Miracle',1,'tomcat,服务器,',0,'http://my.csdn.net/Smile_Miracle',1),(2523,2,'http://blog.csdn.net/smile_miracle/article/details/53709723','linux环境下配置tomcat HTTPS协议','https简介    它是由Netscape开发并内置于其浏览器中，用于对数据进行压缩和解压操作，并返回网络上传送回的结果。HTTPS实际上应用了Netscape的安全套接字层（SSL）作为HTTP应...',124,'csdn/java/1_1_1_1_1504264879.495232.html','2016-12-17 17:26','Smile_Miracle',0,'ssl,tomcat,linux,',0,'http://my.csdn.net/Smile_Miracle',1),(2524,2,'http://blog.csdn.net/smile_miracle/article/details/69948740','List集合切割实现对已有数据的分页显示（LIST容器数据量不大的情况下推荐使用）','package com.lyt.usermanage.utils;import java.util.ArrayList;\nimport java.util.LinkedList;\nimport jav...',324,'csdn/java/1_1_1_3_1504264880.244732.html','2017-04-10 15:06','Smile_Miracle',0,'class,分页,数据,',0,'http://my.csdn.net/Smile_Miracle',1),(2525,2,'http://blog.csdn.net/smile_miracle/article/details/71550548','Java中如何优雅正确的终止线程','Java中终止线程的方式主要有三种：1、使用stop()方法，已被弃用。原因是：stop()是立即终止，会导致一些数据被到处理一部分就会被终止，而用户并不知道哪些数据被处理，哪些没有被处理，产生了不完...',1745,'csdn/java/1_1_1_5_1504264881.342659.html','2017-05-10 16:53','Smile_Miracle',9,'java,线程,',6,'http://my.csdn.net/Smile_Miracle',1),(2526,2,'http://blog.csdn.net/smile_miracle/article/details/71620437','Java多线程wait,notify以及同步锁的运用实例','一个开多线程打印10次ABC的小Demo,如何保证线程执行的有序性，以下面这个Demo来做说明：package com.lyt.usermanage.test;public class MyThrea...',252,'csdn/java/1_1_1_6_1504264882.327227.html','2017-05-11 13:35','Smile_Miracle',0,'java,多线程,线程,',0,'http://my.csdn.net/Smile_Miracle',1),(2527,2,'http://blog.csdn.net/smile_miracle/article/details/74332182','SpringMVC项目中偶尔用到servlet，如何在servlet中注入service笔记','仅此做个笔记，防止注入时而成功时而失败的问题。package com.zhy.spdb.sso;import java.io.IOException;import javax.servlet.Serv...',196,'csdn/java/1_1_1_18_1504264883.5146.html','2017-07-04 16:19','Smile_Miracle',0,'servlet,spring mvc,',0,'http://my.csdn.net/Smile_Miracle',1),(2528,2,'http://blog.csdn.net/smile_miracle/article/details/70102262','Java 判断一个时间段（YYYY-MM-DD）是否在一个区间','/** \n    * @Title: isInDate \n    * @Description: 判断一个时间段（YYYY-MM-DD）是否在一个区间 \n    * @param @param dat...',1095,'csdn/java/1_1_1_4_1504264884.25655.html','2017-04-11 19:03','Smile_Miracle',0,'java,',0,'http://my.csdn.net/Smile_Miracle',1),(2529,2,'http://blog.csdn.net/smile_miracle/article/details/53791453','linux+tomcat配置域名访问指定项目，不用接项目名','直接上码，tomcat/conf/server.xml配置如下：\n\n  \n  <Listener',123,'csdn/java/1_1_1_2_1504264886.195514.html','2016-12-21 21:10','Smile_Miracle',0,'linux,',0,'http://my.csdn.net/Smile_Miracle',1),(2530,2,'http://blog.csdn.net/smile_miracle/article/details/71653194','Java自定义注解解析','什么是注解Annotation（注解）就是Java提供了一种元程序中的元素关联任何信息和着任何元数据（metadata）的途径和方法。Annotion(注解)是一个接口，程序可以通过反射来获取指定程序...',146,'csdn/java/1_1_1_14_1504264886.823559.html','2017-05-11 17:54','Smile_Miracle',0,'java,jdk,',0,'http://my.csdn.net/Smile_Miracle',1),(2531,2,'http://blog.csdn.net/smile_miracle/article/details/72364708','线程中的乐观与悲观锁的区别','线程中的锁可以分为乐观锁和悲观锁，这两个都是实现锁机制的两种办法。 \n悲观锁：根据字面意思，悲观，就是不是太好的。当一个线程访问这个数据的时候，悲观锁会把这个数据给锁住，不被其他线程所访问，直到这个线...',152,'csdn/java/1_1_1_7_1504264887.453092.html','2017-05-17 11:20','Smile_Miracle',0,'线程,乐观锁,悲观锁,',0,'http://my.csdn.net/Smile_Miracle',1),(2532,2,'http://blog.csdn.net/smile_miracle/article/details/72529165','浅谈对ActiveMQ的理解','现如今项目开发过程中由于功能多，流程长，机制繁多且复杂，让一个线程去跑完一个业务的整个流程的话会显得非常繁琐且耦合性太强，代码量很大，这个时候我们就可以用到一款技术叫做消息队列，我们可以通过定义好发送...',220,'csdn/java/1_1_1_15_1504264888.550877.html','2017-05-19 14:57','Smile_Miracle',0,'activemq,技术,',0,'http://my.csdn.net/Smile_Miracle',1),(2533,2,'http://blog.csdn.net/smile_miracle/article/details/76269537','Spring整合Quartz实现定时任务的时间更新，暂停和启用（不需要重启项目并且配置多数据源）','这是一套独立的定时系统，暂时不涉及与外界三方系统的交互，如有需求可自己根据场景来修改。配置项目基于spring4+mybatis3+quartz2.2.1来构建的，pom文件如下：<project x...',315,'csdn/java/1_1_1_19_1504264889.419407.html','2017-07-28 16:52','Smile_Miracle',0,'quartz,spring,数据,mybatis,',1,'http://my.csdn.net/Smile_Miracle',1),(2534,2,'http://blog.csdn.net/smile_miracle/article/details/73795670','关于Spring项目配置多个数据源的实例演示','一、多数据源动态切换原理项目中我们经常会遇到多数据源的问题，尤其是数据同步或定时任务等项目更是如此；又例如：读写分离数据库配置的系统。1、多数据源设置： \n1）静态数据源切换：一般情况下，我们可以配置...',118,'csdn/java/1_1_1_17_1504264891.550587.html','2017-06-27 14:34','Smile_Miracle',0,'spring,数据库,实例,',1,'http://my.csdn.net/Smile_Miracle',1),(2535,2,'http://blog.csdn.net/smile_miracle/article/details/53287671','mybatis级联查询','关联有嵌套查询和嵌套结果两种方式，本文是按照 嵌套结果 这种方式来说明的上一章介绍了多对一的关系，用到了，这是一个复杂类型的关联。我们选择一个示例来回顾下,比如：一个博客有一个用户，关联映射就工作于这...',630,'csdn/java/1_1_1_8_1504264892.540249.html','2016-11-22 16:32','Smile_Miracle',0,'mybatis,结构,',0,'http://my.csdn.net/Smile_Miracle',1),(2536,2,'http://blog.csdn.net/smile_miracle/article/details/53857096','封装通用分页工具，通过反射指定具体的实现类','分页具体实现类\nimport java.util.ArrayList;\nimport java.util.List;public class NavPageInfo {\n    private sta...',211,'csdn/java/1_1_1_11_1504264893.66129.html','2016-12-24 10:49','Smile_Miracle',0,'分页,class,',0,'http://my.csdn.net/Smile_Miracle',1),(2537,2,'http://blog.csdn.net/smile_miracle/article/details/71516502','Java多线程Thread类和Runable接口的区别以及线程类详解','在Java中可有两种方式实现多线程，一种是继承Thread类，一种是实现Runnable接口；Thread类是在java.lang包中定义的。一个类只要继承了Thread类同时覆写了本类中的run()...',309,'csdn/java/1_1_1_13_1504264894.60784.html','2017-05-10 11:52','Smile_Miracle',0,'java,多线程,线程,继承,',0,'http://my.csdn.net/Smile_Miracle',1),(2538,2,'http://blog.csdn.net/smile_miracle/article/details/58593168','JAVA SDK 极光推送后台DEMO','pom导依赖 \n        1.1.1\n       \n       \n            cn.jpush.api\n            jpush-clien',1123,'csdn/java/1_1_1_12_1504264895.589071.html','2017-02-28 13:43','Smile_Miracle',0,'sdk,java,',0,'http://my.csdn.net/Smile_Miracle',1),(2539,2,'http://blog.csdn.net/smile_miracle/article/details/53303165','集成通用Mapper，单表操作从此轻松','如果你使用的Maven开发，你只需在pom.xml文件中加入如下依赖：\n    com.github.abel533\n    mapper\n    2.3.4\n如果你想导入架包：下面是连接，由于Map...',1098,'csdn/java/1_1_1_9_1504264896.509379.html','2016-11-23 12:00','Smile_Miracle',0,'maven,jpa,',2,'http://my.csdn.net/Smile_Miracle',1),(2540,2,'http://blog.csdn.net/smile_miracle/article/details/53318521','Spring集成HttpClient实现跨域请求','在配置spring集成httpclient之前我们先说一下Jsonp，这是一种基于页面script标签的src属性实现的跨域请求，相比于httpclient，jsonp有两点很大的缺点，首先，它只能发...',1479,'csdn/java/1_1_1_10_1504264897.74515.html','2016-11-24 11:25','Smile_Miracle',2,'spring,',0,'http://my.csdn.net/Smile_Miracle',1),(2541,2,'http://blog.csdn.net/he90227/article/details/41546193','淘宝网采用什么技术架构来实现网站高负载的','时间过得很快，来淘宝已经两个月了，在这两个月的时间里，自己也感受颇深。下面就结合淘宝目前的一些底层技术框架以及自己的一些感触来说说如何构建一个可 伸缩，高性能，高可用性的分布式互联网应用。\r\n\r\n相关...',1514,'csdn/java/1_0_1_17_1504264906.934209.html','2014-11-27 14:53','he90227',0,'系统架构,架构设计,',0,'http://my.csdn.net/he90227',1),(2542,2,'http://blog.csdn.net/he90227/article/details/41545773','国内外大型SNS网站后台架构对比','要问时下什么类型的站点人气最旺？答案当属SNS网站。短短几年的时间，SNS便迅速确立了Web 2.0核心的地位。用户的增长量之快更是让人咂舌，而Facebook访问量首次超越Google的消息也让人觉...',1261,'csdn/java/1_0_1_14_1504264910.075052.html','2014-11-27 14:33','he90227',0,'系统架构,架构设计,',0,'http://my.csdn.net/he90227',1),(2543,2,'http://blog.csdn.net/he90227/article/details/41545873','构建高并发高可用的电商平台架构实践','原文出自：http://blog.csdn.net/yangbutao/article/details/12242441\r\n\r\n\r\n一、 设计理念\r\n\r\n\r\n \r\n\r\n\r\n \r\n\r\n1.      空...',771,'csdn/java/1_0_1_16_1504264911.6188.html','2014-11-27 14:38','he90227',0,'架构设计,',0,'http://my.csdn.net/he90227',1),(2544,2,'http://blog.csdn.net/he90227/article/details/41545829','各大网站架构总结笔记','各大网站架构总结笔记\r\n\r\n\r\n记得在大学里不止一次关注网站架构方面的东西了，但每次都是泛泛了解，也没有着重记录，一段时间后对各种架构的思想也就模糊了。这几天不知怎么的又心血来潮（可能是快毕业了冲动了...',3441,'csdn/java/1_0_1_15_1504264912.498851.html','2014-11-27 14:36','he90227',0,'架构设计,',0,'http://my.csdn.net/he90227',1),(2545,2,'http://blog.csdn.net/he90227/article/details/41545615','大型网站的架构设计图','近段时间以来，通过接触有关海量数据处理和搜索引擎的诸多技术，常常见识到不少精妙绝伦的架构图。除了每每感叹于每幅图表面上的绘制的精细之外，更为架构图背后所隐藏的设计思想所叹服。个人这两天一直在搜集各大型...',471,'csdn/java/1_0_1_13_1504264913.308992.html','2014-11-27 14:22','he90227',0,'架构设计,',0,'http://my.csdn.net/he90227',1),(2546,2,'http://blog.csdn.net/he90227/article/details/41545465','一步步构建大型网站','之前我简单向大家介绍了各个知名大型网站的架构，MySpace的五个里程碑、Flickr的架构、YouTube的架构、PlentyOfFish的架构、WikiPedia的架构。这几个都很典型，我们可以从...',399,'csdn/java/1_0_1_12_1504264915.092604.html','2014-11-27 14:13','he90227',0,'系统架构,负载均衡,',0,'http://my.csdn.net/he90227',1),(2547,2,'http://blog.csdn.net/sinat_29843547/article/details/51337082','javascript设计模式--单例模式','单例模式：只允许实例化一次的对象类 \n这种在基本的编程中可能已经经常的用到，只是不知道是单例模式 \n比如config.js文件，service.js里都会经常用到：app.factory(\'payIn...',632,'csdn/java/1_1_1_0_1504264924.56747.html','2016-05-07 11:43','sinat_29843547',0,'javascript,设计模式,',0,'http://my.csdn.net/sinat_29843547',1),(2548,2,'http://blog.csdn.net/sinat_29843547/article/details/51240552','javascript设计模式--原型模式','Prototype:用原型实例指向创建对象的类，使用于创建新的对象的类共享原型对象的属性及方法．创建一个焦点图//图片轮播类\nvar LoopImages = function(imgArr,cont...',363,'csdn/java/1_1_1_1_1504264925.508514.html','2016-04-25 10:40','sinat_29843547',0,'javascript,prototype,设计模式,',1,'http://my.csdn.net/sinat_29843547',1),(2549,2,'http://blog.csdn.net/sinat_29843547/article/details/51225722','javascript设计模式--Builder','Builder:将一个复杂对象的构建层与其表示层相互分离，同样的构件过程可采用不同的表示．    //创建一位人类\n    var Human = function(param){\n        /...',627,'csdn/java/1_1_1_2_1504264926.537561.html','2016-04-23 12:35','sinat_29843547',0,'设计模式,',0,'http://my.csdn.net/sinat_29843547',1),(2550,2,'http://blog.csdn.net/sinat_29843547/article/details/51218102','javascript设计模式--抽象工厂模式','抽象工厂模式（abstract Fctory）:通过对类的工厂抽象使其业务用于对产品类鏃的创建，而不负责创建某一类产品的实例．    //汽车抽象类，当使用其实例对象的方法时会抛出错误\n    var...',495,'csdn/java/1_1_1_3_1504264927.538513.html','2016-04-22 10:46','sinat_29843547',3,'工厂模式,javascript,设计模式,',0,'http://my.csdn.net/sinat_29843547',1),(2551,2,'http://blog.csdn.net/sinat_29843547/article/details/51188368','javascript设计模式－－工厂方法模式','工厂方法模式将实际创建对象工作推迟到子类当中。 \n1.安全模式类，用new和不用new都能够得到预期的对象。    var Demo = function(){}\n    Demo.prototype...',312,'csdn/java/1_1_1_4_1504264928.482445.html','2016-04-19 10:51','sinat_29843547',0,'javascript,设计模式,函数,对象,',0,'http://my.csdn.net/sinat_29843547',1),(2552,2,'http://blog.csdn.net/ruishenh/article/details/18319687','设计模式-结构型模式总结实例（三）','装饰模式\r\n动态地给一个对象增加一些额外的职责，就增加的功能来说，Decorator模式相比生成子类更加灵活。\r\n \r\n \r\nComponent（被装饰对象基类）： 定义对象的接口，可以给这些对象动态...',1320,'csdn/java/1_0_1_0_1504264945.970071.html','2014-01-15 19:48','ruishenh',0,'设计模式,享元模式,装饰者模式,桥接模式,java设计模式,',22,'http://my.csdn.net/ruishenh',1),(2553,2,'http://blog.csdn.net/ruishenh/article/details/18315735','设计模式-结构型模式总结实例（二）','代理模式\r\n为其他对象提供一种代理以控制对这个对象的访问。在某些情况下，一个对象不适合或者不能直接引用另一个对象，而代理对象可以在客户端和目标对象之间起到中介的作用。\r\n \r\n抽象角色：声明真实对象和...',1312,'csdn/java/1_0_1_1_1504264946.717355.html','2014-01-15 17:12','ruishenh',0,'设计模式,java设计模式,代理模式,动态代理模式,适配器模式,',22,'http://my.csdn.net/ruishenh',1),(2554,2,'http://blog.csdn.net/ruishenh/article/details/18315591','设计模式-结构型模式总结实例（一）','组合模式\r\n 将对象以树形结构组织起来,以达成“部分－整体”的层次结构，使得客户端对单个对象和组合对象的使用具有一致性.\r\n有时候又叫做部分-整体模式，它使我们树型结构的问题中，模糊了简单元素和复杂元...',1507,'csdn/java/1_0_1_2_1504264947.824552.html','2014-01-15 17:09','ruishenh',0,'java设计模式,设计模式,组合模式,外观模式,门面模式,',22,'http://my.csdn.net/ruishenh',1),(2555,2,'http://blog.csdn.net/ruishenh/article/details/18230757','设计模式-行为型模式总结实例（四）','解释器模式\r\n给定一个语言，定义他的文法的一个表示，并定义一个解释器，这个解释器使用该表示来解释语言中的句子。\r\n\r\npackage com.ruishenh.designPatter.action....',950,'csdn/java/1_0_1_3_1504264948.662676.html','2014-01-13 20:02','ruishenh',0,'设计模式,解释器模式,备忘录模式,java设计,',20,'http://my.csdn.net/ruishenh',1),(2556,2,'http://blog.csdn.net/ruishenh/article/details/18217061','设计模式-行为型模式总结实例（三）','职责链模式\r\n使多个对象都有机会处理请求，从而避免请求的发送者和接收者之间的耦合关系 \r\n package com.ruishenh.designPatter.action.chainOfResp;\n...',1201,'csdn/java/1_0_1_4_1504264949.930243.html','2014-01-13 11:04','ruishenh',0,'设计模式,访问者模式,职责链模式,中介者模式,java设计,',26,'http://my.csdn.net/ruishenh',1),(2557,2,'http://blog.csdn.net/ruishenh/article/details/18149655','设计模式-行为型模式总结实例（二）','命令模式\r\n将一个请求封装为一个对象，从而使你可以用不同的请求对客户进行参数化，对请求排队和记录请求日志，以及支持可撤销的操作。\r\n \r\npackage com.ruishenh.designPatt...',1330,'csdn/java/1_0_1_5_1504264950.980989.html','2014-01-11 21:15','ruishenh',0,'设计模式,命令模式,状态模式,策略模式,java设计模式,',28,'http://my.csdn.net/ruishenh',1),(2558,2,'http://blog.csdn.net/ruishenh/article/details/18046885','设计模式-行为型模式总结实例（一）','迭代器模式\r\n提供一个方法顺序访问一个聚合对象的各个元素，而又不需要暴露该对象的内部表示。\r\n \r\npackage com.ruishenh.designPatter.action.iterator;...',1170,'csdn/java/1_0_1_6_1504264951.984428.html','2014-01-09 18:21','ruishenh',0,'行为模式,设计模式,java设计模式,迭代器模式,观察者模式,',20,'http://my.csdn.net/ruishenh',1),(2559,2,'http://blog.csdn.net/ruishenh/article/details/17795505','设计模式-创建型总结实例','创建型\n \n单例模式\nSingleton，单例模式：保证一个类只有一个实例，并提供一个访问它的全局访问点 \njava中单例模式是一种常见的设计模式，单例模式分三种：懒汉式单例、饿汉式单例、登记式单例三...',1671,'csdn/java/1_0_1_7_1504264953.104042.html','2014-01-03 17:46','ruishenh',2,'java,设计模式,所有的创建型模式,',27,'http://my.csdn.net/ruishenh',1),(2560,2,'http://blog.csdn.net/fs1360472174/article/details/75708257','mongo driver类加载导致的错误','摘要一次类加载导致的错误，之所以要记录下来，是因为错误的发现不是在本地开发环境或者预部署环境，而是在生产环境。这应该是个易于重现的问题，但是不知道为什么直到生产环境部署时才报错。问题Unsatisfi...',213,'csdn/java/1_1_1_0_1504264958.186124.html','2017-07-22 10:40','FS1360472174',0,'java,类加载,mongo,spring-dat,',0,'http://my.csdn.net/FS1360472174',1),(2561,2,'http://blog.csdn.net/fs1360472174/article/details/74044426','Warning maven relocated xml-apis to 1.0.b','maven 依赖在ｍａｖｅｎ项目中，一些基础的ｊａｒ包被引用多次是很常见的事情。ｍａｖｅｎ选择ｊａｒ的版本是基于 \n－　依赖深度浅的　比如Ｃ项目依赖xml.jar。Ｃ依赖的Ｂ也引入了xml.jar。那...',330,'csdn/java/1_1_1_1_1504264959.303324.html','2017-07-01 11:29','FS1360472174',0,'maven,jar,dependency,xml-apis,',0,'http://my.csdn.net/FS1360472174',1),(2562,2,'http://blog.csdn.net/fs1360472174/article/details/69817523','cassandra 堆外内存管理','为什么需要堆外内存呢单有一些大内存对象的时候，JVM进行垃圾回收时需要收集所有的这些对象的内存也。增加了GC压力。因此需要使用堆外内存。java 分配堆外内存org.apache.cassandra....',703,'csdn/java/1_1_1_2_1504264960.115355.html','2017-04-09 15:11','FS1360472174',0,'cassandra,java,jvm,offheap,ohc,',0,'http://my.csdn.net/FS1360472174',1),(2563,2,'http://blog.csdn.net/fs1360472174/article/details/52494383','Spring Boot 中应用Spring data mongdb','摘要本文主要简单介绍下如何在Spring Boot 项目中使用Spring data mongdb.没有深入探究，仅供入门参考。 \n文末有代码链接准备安装mongodb \n需要连接mongodb，所以...',726,'csdn/java/1_1_1_3_1504264961.317322.html','2016-09-10 12:48','FS1360472174',0,'springboot,spr-mongo,repository,mongodb,',0,'http://my.csdn.net/FS1360472174',1),(2564,2,'http://blog.csdn.net/fs1360472174/article/details/26141577','基于Struts+Hibernate开发过程中遇到的错误','1.import  javax.servlet.http.HttpServletRequest 导入包出错\r\n\r\n导入包出错，通常是包未引入，HttpServletRequest包是浏览器通过http...',892,'csdn/java/1_1_1_11_1504264962.227282.html','2014-05-18 13:22','FS1360472174',0,'Struts hibernate 调试,',0,'http://my.csdn.net/FS1360472174',1),(2565,2,'http://blog.csdn.net/fs1360472174/article/details/52141800','JDK 源码学习——ByteBuffer','ByteBuffer 在NIO的作用Java SE4 开始引入Java NIO,相比较于老的IO，更加依赖底层实现。引入通道(Channels)，选择器(selector)，缓冲(Buffers).都...',1249,'csdn/java/1_1_1_4_1504264963.2659.html','2016-08-07 13:33','FS1360472174',0,'jdk,java,ByteBuffer,缓冲器-NIO,',0,'http://my.csdn.net/FS1360472174',1),(2566,2,'http://blog.csdn.net/fs1360472174/article/details/50464432','Anakia 转换xml文档为其他格式','一.简介 \nAnakia 使用JDOM 和Velocity将XML文档转换为特定格式的文档二.解析xml文档方法1.DOMjava jdk,xml-api.jar \n需要加载整个xml文档来构建层次结...',495,'csdn/java/1_1_1_5_1504264964.259007.html','2016-01-05 18:23','FS1360472174',0,'Anakia,Velocity,Ant,Xml,',0,'http://my.csdn.net/FS1360472174',1),(2567,2,'http://blog.csdn.net/fs1360472174/article/details/51997080','gradle 入门介绍','gradle ????Groovy??????????,?maven????????????xml?????script????gradle ???????build.gradle ????,buil...',1269,'csdn/java/1_1_1_8_1504264965.187355.html','2016-07-22 17:40','FS1360472174',0,'groovy,gradle,plugin,custom,',0,'http://my.csdn.net/FS1360472174',1),(2568,2,'http://blog.csdn.net/fs1360472174/article/details/43340889','Java读取properties文件','1.jsp页面展示代码\r\n\r\n{CSDN:CODE:594235}\r\n\r\n\r\n2. 代码结构图\r\n\r\n\r\n其中common中的Prop.java是读取properties文件\r\n3.代码实现\r\n一.初...',848,'csdn/java/1_1_1_10_1504264966.059801.html','2015-01-31 18:09','FS1360472174',0,'java,读取properties,缓存,',0,'http://my.csdn.net/FS1360472174',1),(2569,2,'http://blog.csdn.net/fs1360472174/article/details/44727159','ajax post请求request.getParameter(\"\")取值为null','写一个简单的ajax 请求，发现通过request.getParamter(“”)取到的值为null \n前台代码：\n\n\n\n$(document).ready(function(){\n    $(\"#a...',5342,'csdn/java/1_1_1_9_1504264966.988935.html','2015-03-29 15:34','FS1360472174',0,'ajax,post请求-re,',0,'http://my.csdn.net/FS1360472174',1),(2570,2,'http://blog.csdn.net/fs1360472174/article/details/50455598','introduction of velocity','introduction of velocity一.velocity 简介基于java 的模板引擎，apache 旗下的开源软件项目。 \n目的在于隔离 表示层和业务逻辑层，当然现在做的不仅仅是这些。二...',439,'csdn/java/1_1_1_6_1504264968.296471.html','2016-01-04 13:55','FS1360472174',0,'velocity-j,java,',0,'http://my.csdn.net/FS1360472174',1),(2571,2,'http://blog.csdn.net/fs1360472174/article/details/51147051','Eclipse中设置VM参数','eclipse.ini\n-Xms256m //设置堆最小值\n-Xmx1024m //设置堆最大值\n\n\n\nEclipse\n做JVM 的分析时,需要动态设置JVM的参数来进行各种测试，\n可以在下图地方进行...',4308,'csdn/java/1_1_1_7_1504264969.060317.html','2016-04-13 22:00','FS1360472174',0,'jvm参数,eclipse,堆大小,',1,'http://my.csdn.net/FS1360472174',1),(2572,2,'http://blog.csdn.net/smile_miracle/article/details/76682385','Maven Web项目解决跨域问题','跨域问题目前笔者所用到的方案大致有三种:jsonp,SpringMVC 4以上注解方式和cros三方过滤器。JsonpJSONP(JSON with Padding)是一个非官方的协议，它允许在服务器...',145,'csdn/java/1_1_2_0_1504265007.453906.html','2017-08-04 14:11','Smile_Miracle',0,'spring mvc,服务器,web,',0,'http://my.csdn.net/Smile_Miracle',1),(2573,2,'http://blog.csdn.net/smile_miracle/article/details/76684829','web项目Log4j日志输出路径配置问题','问题描述：一个web项目想在一个tomcat下运行多个实例（通过修改war包名称的实现），然后每个实例都将日志输出到tomcat的logs目录下实例名命名的文件夹下进行区分查看每个实例日志，要求通过尽...',136,'csdn/java/1_1_2_1_1504265008.421972.html','2017-08-04 14:50','Smile_Miracle',0,'log4j,web.xml,web,',0,'http://my.csdn.net/Smile_Miracle',1),(2574,2,'http://blog.csdn.net/smile_miracle/article/details/76849830','关于web项目log日志指定输出文件位置配置','首先我们定义一个可以在运行时动态的找出项目的路径WebAppRootKey,这么做的原因是为了在后面配置log4j输出文件路径的时候能随心配置。\n         webAppRootKey\n    ...',211,'csdn/java/1_1_2_2_1504265009.444733.html','2017-08-07 15:34','Smile_Miracle',0,'web,log4j,',0,'http://my.csdn.net/Smile_Miracle',1),(2575,2,'http://blog.csdn.net/han_yankun2009/article/details/19917733','java--IO流','java中的流按照不同的方式，可以有不同的分类标准 。\r\n但还是有基本的公有方法，读，写，关闭，缓冲等。\r\n\r\n\r\n \r\n \r\n不同的标准有不同的类型。\r\n \r\n按照功能分配，有节点和处理。节点和处理...',1636,'csdn/java/1_1_1_0_1504265011.473885.html','2014-02-25 15:47','han_yankun2009',39,'java,',4,'http://my.csdn.net/han_yankun2009',1),(2576,2,'http://blog.csdn.net/han_yankun2009/article/details/20465917','java多线程','说道多线程\n \n就得来认识下咱们经常说道的几个概念。\n进程：\n是一个静态的概念，它本身是不能动的，每个进程都是有一个主方法的执行路径，这个路径就是一个具体的线程。\n \n线程：不同的程序执行路径。\n \n...',1691,'csdn/java/1_1_1_1_1504265012.493952.html','2014-03-04 15:55','han_yankun2009',44,'java,多线程,',4,'http://my.csdn.net/han_yankun2009',1),(2577,2,'http://blog.csdn.net/han_yankun2009/article/details/21552853','J2EE--JDBC','JDBC\r\n\r\n\r\n（java Data Base Connectivity Java数据库链接）是一种用于执行SQL语句的JavaAPI，可以为多种关系数据库提\r\n供统一访问，它由一组用Java语言...',1943,'csdn/java/1_1_1_3_1504265013.516284.html','2014-03-19 20:20','han_yankun2009',40,'J2EE,',5,'http://my.csdn.net/han_yankun2009',1),(2578,2,'http://blog.csdn.net/han_yankun2009/article/details/22605005','J2EE---Servlet','Servlet\n\n\n是一种独立于操作系统平台和网络传输协议的服务器端的Java应用程序，它用来扩展服务器的功能，可以生成动态的Web页面。最大的用途是通过动态响应客户机请求来扩展服务器功能。Servl...',1867,'csdn/java/1_1_1_4_1504265014.590389.html','2014-03-30 20:39','han_yankun2009',32,'J2EE,',7,'http://my.csdn.net/han_yankun2009',1),(2579,2,'http://blog.csdn.net/han_yankun2009/article/details/21094917','J2EE规范--Weblogic','什么是weblogic\n  是美国Oracl公司出品的一个应用服务器。\n \nWeblogic可以做什么\n \n      是用于开发，继承，部署和管理分布式web应用，网络和数据库应用的java应用服务...',1705,'csdn/java/1_1_1_2_1504265015.679375.html','2014-03-12 15:51','han_yankun2009',37,'java,J2EE,',5,'http://my.csdn.net/han_yankun2009',1),(2580,2,'http://blog.csdn.net/bingjianit/article/details/53607856','设计模式之建造者模式','单例模式(Singleton Pattern)是最简单的一种设计模式。下面让我们开始学习单例模式。',967,'csdn/java/1_1_1_0_1504265017.644817.html','2016-12-13 11:37','bingjianIT',0,'java,建造者模式,设计模式,',0,'http://my.csdn.net/bingjianIT',1),(2581,2,'http://blog.csdn.net/bingjianit/article/details/53560074','设计模式之单例模式','单例模式(Singleton Pattern)是最简单的一种设计模式。下面让我们开始学习单例模式。',652,'csdn/java/1_1_1_1_1504265018.57862.html','2016-12-10 18:10','bingjianIT',0,'设计模式,singleton,java,',0,'http://my.csdn.net/bingjianIT',1),(2582,2,'http://blog.csdn.net/qq_26525215/article/details/51052781','Java---设计模块(值对象)','★ 场景和问题 \n在Java开发时，需要来回交换大量的数据，比如要为方法传入参数，也要获取方法的返回值，该如何能更好的进行数据的交互？★ 基本的编写步骤 \n◎第1步：写一个类，实现可序列化（如果以后数...',807,'csdn/java/1_0_2_0_1504265033.605077.html','2016-04-03 23:32','qq_26525215',0,'值对象,java,设计模块,',0,'http://my.csdn.net/qq_26525215',1),(2583,2,'http://blog.csdn.net/qq_26525215/article/details/51052677','Java---设计模块(工厂方法)','★ 场景和问题 \nJava程序开发讲究面向接口编程，隐藏具体的实现类，可是如何得到接口呢？工厂类的命名规范：***Factory \n单例工厂方法的命名规范：getInstance()工厂的本质是“选择...',616,'csdn/java/1_0_2_1_1504265034.674185.html','2016-04-03 23:07','qq_26525215',0,'java,设计,工厂,',0,'http://my.csdn.net/qq_26525215',1),(2584,2,'http://blog.csdn.net/qq_26525215/article/details/51045082','Java---设计模块(单例的变形)(多例)','设计模式1——单例变形(多例) \n★ 缓存在单例中的使用 \n缓存在编程中使用很频繁，有着非常重要的作用，它能够帮助程序实现以空间换取时间，通常被设计成整个应用程序所共享的一个空间，现要求实现一个用缓存...',8295,'csdn/java/1_0_2_2_1504265035.78254.html','2016-04-02 19:21','qq_26525215',0,'设计模式,设计,应用,对象,缓存,',0,'http://my.csdn.net/qq_26525215',1),(2585,2,'http://blog.csdn.net/qq_26525215/article/details/51044941','Java---设计模块（设计模块的简介及最简单的俩个单例代码加测试）','设计模式学习概述： \n★ 为什么要学习设计模式 \n1、设计模式都是一些相对优秀的解决方案，很多问题都是典型的、有代表性的问题，学习设计模式，我们就不用自己从头来解决这些问题，相当于在巨人的肩膀上，复用...',8473,'csdn/java/1_0_2_3_1504265036.665518.html','2016-04-02 18:42','qq_26525215',0,'测试,设计,设计模式,架构,',0,'http://my.csdn.net/qq_26525215',1),(2586,2,'http://blog.csdn.net/iihero/article/details/7506742','设计模式(1)-创建型-单件(Singleton)模式 (个人笔记)','提起设计模式，确实有不少著作讨论它，>一书理论化很强，我这里干脆整理出一些用代码来体现的实例来说明。第一个就是Singleton模式，意指始终保证只创建或得到一个唯一的实例。其代码如下：提起设计模式，...',2919,'csdn/java/1_1_1_0_1504265043.615652.html','2012-04-26 07:04','iihero',4,'设计模式,class,多线程,string,null,c,',4,'http://my.csdn.net/iihero',1),(2587,2,'http://blog.csdn.net/iihero/article/details/7506745','设计模式(2)-创建型-工厂方法(Factory method)(个人笔记)','概述：定义一个用于创建对象的接口，让子类决定实例化哪一个类。FactoryMethod使一个类的实例化延迟到其子类。\n适用性： 1.当一个类不知道它所必须创建的对象的类的时候。\n\n 2.当一个类希望由...',2407,'csdn/java/1_1_1_1_1504265044.67208.html','2012-04-26 07:06','iihero',2,'设计模式,class,任务,interface,string,',1,'http://my.csdn.net/iihero',1),(2588,2,'http://blog.csdn.net/iihero/article/details/7519467','设计模式(6)-结构型-适配器模式(Adapter)(个人笔记)','概述    将一个类的接口转换成客户希望的另外一个接口。Adapter模式使得原本由于接口不兼容而不能一起工作的那些类可以一起工作。\n 适用性    1.你想使用一个已经存在的类，而它的接口不符合你的...',1849,'csdn/java/1_1_1_5_1504265045.759409.html','2012-04-28 11:47','iihero',0,'设计模式,string,class,object,工作,',1,'http://my.csdn.net/iihero',1),(2589,2,'http://blog.csdn.net/iihero/article/details/7713127','设计模式(7)-结构型-桥接模式(Bridge)(个人笔记)','概述:将抽象部分与它的实现部分分离，使它们都可以独立地变化。适用性    1.你不希望在抽象和它的实现部分之间有一个固定的绑定关系。      例如这种情况可能是因为，在程序运行时刻实现部分应可以被选...',3469,'csdn/java/1_1_1_6_1504265048.810782.html','2012-07-03 20:52','iihero',0,'设计模式,class,string,',0,'http://my.csdn.net/iihero',1),(2590,2,'http://blog.csdn.net/iihero/article/details/7506749','设计模式(3)-创建型-抽象工厂(Abstract Factory)(个人笔记)','概述：提供一个创建一系列相关或相互依赖对象的接口，而无需指定它们具体的类。\n适用性：    1.一个系统要独立于它的产品的创建、组合和表示时。\n\n    2.一个系统要由多个产品系列中的一个来配置时。...',1874,'csdn/java/1_1_1_2_1504265050.760118.html','2012-04-26 07:08','iihero',1,'设计模式,产品,class,interface,string,',0,'http://my.csdn.net/iihero',1),(2591,2,'http://blog.csdn.net/iihero/article/details/7506750','设计模式(4)-创建型-建造者(Builder)(个人笔记)','概述：将一个复杂对象的构建与它的表示分离，使得同样的构建过程可以创建不同的表示。\n适用性    1.当创建复杂对象的算法应该独立于该对象的组成部分以及它们的装配方式时。\n\n    2.当构造过程必须允...',1940,'csdn/java/1_1_1_3_1504265051.79732.html','2012-04-26 07:10','iihero',0,'设计模式,string,制造,class,产品,算法,',1,'http://my.csdn.net/iihero',1),(2592,2,'http://blog.csdn.net/iihero/article/details/7519456','设计模式(5)-创建型-原型(Prototype)模式(个人笔记)','概述    用原型实例指定创建对象的种类，并且通过拷贝这些原型创建新的对象。\n 适用性    1.当一个系统应该独立于它的产品创建、构成和表示时。\n\n    2.当要实例化的类是在运行时刻指定时，例如...',1807,'csdn/java/1_1_1_4_1504265052.761093.html','2012-04-28 11:44','iihero',2,'prototype,设计模式,string,exception,class,产品,',1,'http://my.csdn.net/iihero',1),(2593,2,'http://blog.csdn.net/iihero/article/details/8218750','设计模式(20)-行为型-状态模式(State)','概述    定义对象间的一种一对多的依赖关系,当一个对象的状态发生改变时,所有依赖于它的对象都得到通知并被自动更新。\n适用性    1.一个对象的行为取决于它的状态,并且它必须在运行时刻根据状态改变它...',1842,'csdn/java/1_1_1_19_1504265056.733126.html','2012-11-24 06:16','iihero',4,'设计模式 架构,',0,'http://my.csdn.net/iihero',1),(2594,2,'http://blog.csdn.net/ysjian_pingcx/article/details/43730417','设计模式(001) 开启设计之旅','“身体和灵魂，总有一个在路上”，有的人旅行，有的人看书，还有些人在旅行中写出启迪人心的好书来，身体在路上赋予了灵魂的力量。我的设计模式之旅，与你、与我，能带来什么呢？抛开遥远深邃的美丽传说，是为了感谢...',1574,'csdn/java/1_0_1_1_1504265065.899645.html','2015-02-11 09:32','ysjian_pingcx',2,'设计模式,面向对象,OOD,Java,互联网架构,',2,'http://my.csdn.net/ysjian_pingcx',1),(2595,2,'http://blog.csdn.net/lee272616/article/details/54630243','javaEE防盗版-前言','本专栏主要是提供一个思路，用于设计javaWeb项目的防盗版技术（针对付费产品的防盗版）。研究背景在于没有一家公司愿意将自己的产品项目被目标客户破解使用，造成研发公司的重大产品损失。\n        ...',314,'csdn/java/1_0_1_0_1504265069.687502.html','2017-01-20 11:55','lee272616',0,'java ee,盗版,java web,',0,'http://my.csdn.net/lee272616',1),(2596,2,'http://blog.csdn.net/lee272616/article/details/55057311','javaEE防盗版-License开发','介绍java license的基本使用',830,'csdn/java/1_0_1_3_1504265070.943946.html','2017-02-13 22:22','lee272616',5,'java license,防盗版,',1,'http://my.csdn.net/lee272616',1),(2597,2,'http://blog.csdn.net/lee272616/article/details/55058683','javaEE防盗版-class文件加密思路','本文介绍class文件加密技术的思路。',304,'csdn/java/1_0_1_4_1504265072.782587.html','2017-02-13 22:39','lee272616',0,'防盗版,class文件加密,',0,'http://my.csdn.net/lee272616',1),(2598,2,'http://blog.csdn.net/lee272616/article/details/54599612','javaEE防盗版-java之类加载','前言\n        类加载技术是java运行的核心部分之一，虽然对于开发来说运用到此技术的地方不多，但是作为JAVAEE防盗版技术的组成部分之一，这一部分对于研发来说也需要着重了解。\n本文分析对象针...',333,'csdn/java/1_0_1_1_1504265073.71474.html','2017-01-18 13:53','lee272616',0,'类加载,',0,'http://my.csdn.net/lee272616',1),(2599,2,'http://blog.csdn.net/lee272616/article/details/52689900','javaEE防盗版-ProGuard 混淆技术','这里介绍一些java的混淆技术。混淆主要是为了保护产权，增加代码反编译后的阅读难度。\n\n\n本文介绍的是ProGuard来进行代码混淆，集成在Maven环境中。常规环境的混淆技术以后再做介绍了\n\n\nPO...',3617,'csdn/java/1_0_1_2_1504265074.009081.html','2016-09-28 14:03','lee272616',0,'ProGuard,混淆,java,Maven,',0,'http://my.csdn.net/lee272616',1),(2600,2,'http://blog.csdn.net/qq_28602957/article/details/54728981','给我一张名片——工厂方法模式','工厂方法模式（Factory Method）:通过对产品类的抽象使其创建业务主要负责用于创建多类产品的实例。广告是一个公司主要的一个经济来源，这不，很多企业等着要来公司首页打广告呢。广告展现“小白, ...',586,'csdn/java/1_0_1_0_1504265076.062304.html','2017-01-25 11:39','qq_28602957',0,'设计模式,JavaScript,工厂方法模式,',1,'http://my.csdn.net/qq_28602957',1),(2601,2,'http://blog.csdn.net/qq_28602957/article/details/53130979','灵活的语言---JavaScript','结束了4年的大学学习生活，小白信心满满地来到应聘的M公司。今天是入职的第一天，项目经理分下来一个验证表单功能的任务，内容不多，仅需要验证用户名、邮箱、密码等。入职第一天小白接到需求看了看，感觉很简单，...',1483,'csdn/java/1_0_1_4_1504265077.135193.html','2016-11-11 17:53','qq_28602957',2,'函数,语言,设计模式,JavaScript,',1,'http://my.csdn.net/qq_28602957',1),(2602,2,'http://blog.csdn.net/qq_28602957/article/details/53228522','神奇的魔术师——简单工厂模式','简单工厂模式（Simple Factory）：又叫静态工厂方法：由一个工厂对象决定创建某一产品对象的实例。主要用来创建同一类对象。小白经过几天对团队代码的学习，终于对面向对象思想有所认识，自己跳动的小...',1309,'csdn/java/1_0_1_1_1504265078.124825.html','2016-11-19 11:18','qq_28602957',0,'工厂模式,面向对象,设计模式,JavaScript,',1,'http://my.csdn.net/qq_28602957',1),(2603,2,'http://blog.csdn.net/qq_28602957/article/details/53190858','写的都是看到的——面向对象编程（二）','传宗接代——继承“小白，看继承呢？”小铭忙完自己的事情走过来。“是呀，刚才学习类，发现每个类都有3个部分，第一部分是构造函数内的，这是供实例化对象复制用的，第二部分是构造函数外的，直接通过点语法添加的...',1265,'csdn/java/1_0_1_2_1504265079.176344.html','2016-11-16 19:49','qq_28602957',0,'面向对象编程,JavaScript,设计模式,对象,',1,'http://my.csdn.net/qq_28602957',1),(2604,2,'http://blog.csdn.net/qq_28602957/article/details/53141513','写的都是看到的——面向对象编程（一）','第一天的经历使小白深深认识到校园学到的知识与实际工作中的偏差，所以想见识见识公司团队里大家都是如何书写代码并完成需求的。早晨走进公司的时候恰巧遇见了项目经理。两种编程风格——面向过程与面向对象“早！小...',1501,'csdn/java/1_0_1_3_1504265080.343787.html','2016-11-12 16:36','qq_28602957',0,'面向对象编程,函数,面向对象,设计模式,JavaScript,',1,'http://my.csdn.net/qq_28602957',1),(2605,2,'http://blog.csdn.net/jjwwmlp456/article/details/38405579','java 实现单例模式','public class Singleton {\n\nprivate \nstatic Singleton intance;\n\nprivate Singleton() {}\n\n\n\npublic \nstat...',1289,'csdn/java/1_0_1_0_1504265090.76142.html','2014-08-06 19:15','jjwwmlp456',0,'java,设计模式,',1,'http://my.csdn.net/jjwwmlp456',1),(2606,2,'http://blog.csdn.net/jjwwmlp456/article/details/39895075','Java 实现装饰者(Decorator)模式','在Java中，io包下的很多类就是典型的装饰者模式的体现，如：\n\n\nnew BufferedOutputStream(OutputStream out)\n\nnew BufferedInputStrea...',1035,'csdn/java/1_0_1_6_1504265091.696365.html','2014-10-08 16:42','jjwwmlp456',0,'设计模式,装饰者Decorator模式,',0,'http://my.csdn.net/jjwwmlp456',1),(2607,2,'http://blog.csdn.net/jjwwmlp456/article/details/39936335','Java 实现组合(Composite)模式','类图\n\n\n/**\n * 树	整体\n * \n * @author stone\n * \n */\npublic class Tree {\n	private TreeNode root; //根节点\n\n	pu...',1951,'csdn/java/1_0_1_10_1504265092.741277.html','2014-10-09 19:30','jjwwmlp456',0,'设计模式,组合Composite模式,',0,'http://my.csdn.net/jjwwmlp456',1),(2608,2,'http://blog.csdn.net/jjwwmlp456/article/details/39962937','Java 实现策略(Strategy)模式','/**\n * 策略模式：针对同一命令(或行为),不同的策略做不同的动作\n *  商品促销\n *  本类为：收取现金的类\n *  \n *  @author stone\n */\npublic interf...',1001,'csdn/java/1_0_1_12_1504265093.743721.html','2014-10-10 15:16','jjwwmlp456',0,'设计模式,策略Strategy模式,',1,'http://my.csdn.net/jjwwmlp456',1),(2609,2,'http://blog.csdn.net/jjwwmlp456/article/details/39963409','Java 实现模板方法(TemplateMethod)模式','类图\r\n\r\n\r\n/**\n * 业务流程模板，提供基本框架\n * @author stone\n *\n */\npublic abstract class BaseTemplate {\n	\n	public ...',936,'csdn/java/1_0_1_13_1504265094.778933.html','2014-10-10 15:34','jjwwmlp456',0,'设计模式,模板方法TemplateMethod模式,',0,'http://my.csdn.net/jjwwmlp456',1),(2610,2,'http://blog.csdn.net/jjwwmlp456/article/details/39960193','Java 实现享元(Flyweight)模式','/**\n * 字母\n * @author stone\n *\n */\npublic class Letter {\n\n	private String name;\n\n	public Letter(Strin...',1068,'csdn/java/1_0_1_11_1504265095.991994.html','2014-10-10 12:13','jjwwmlp456',0,'设计模式,享元Flyweight模式,',0,'http://my.csdn.net/jjwwmlp456',1),(2611,2,'http://blog.csdn.net/jjwwmlp456/article/details/40042087','Java 实现命令(Command)模式','类图\n\n\npublic interface ICommand {\n	void execute();\n}\npublic class ConcreteCommand implements ICommand...',1041,'csdn/java/1_0_1_17_1504265096.898736.html','2014-10-13 11:28','jjwwmlp456',0,'设计模式,命令Command模式,',0,'http://my.csdn.net/jjwwmlp456',1),(2612,2,'http://blog.csdn.net/jjwwmlp456/article/details/39896015','Java 实现代理(Proxy)模式','/**\n * 游戏者接口\n * @author stone\n * \n */\npublic interface IGamePlayer {\n\n	// 登录游戏\n	public void login(St...',1509,'csdn/java/1_0_1_7_1504265097.923952.html','2014-10-08 17:15','jjwwmlp456',0,'设计模式,代理Proxy模式,',0,'http://my.csdn.net/jjwwmlp456',1),(2613,2,'http://blog.csdn.net/jjwwmlp456/article/details/39896747','java 实现外观(Facade)模式','/**\n * 角色\n * @author stone\n *\n */\npublic class Actor {\n	public Actor(String name) {\n		System.out.pri...',887,'csdn/java/1_0_1_8_1504265098.970246.html','2014-10-08 18:21','jjwwmlp456',0,'设计模式,外观Facade模式,',0,'http://my.csdn.net/jjwwmlp456',1),(2614,2,'http://blog.csdn.net/jjwwmlp456/article/details/39914353','Java 实现桥接(Bridge)模式','/**\n * 手机壳、套\n * @author stone\n *\n */\npublic abstract class BaseCellphoneShell {\n	public abstract voi...',1368,'csdn/java/1_0_1_9_1504265099.954924.html','2014-10-09 00:49','jjwwmlp456',2,'设计模式,桥接Bridge模式,',0,'http://my.csdn.net/jjwwmlp456',1),(2615,2,'http://blog.csdn.net/jjwwmlp456/article/details/39586991','Java 实现简单工厂模式','工厂模式 属于创建型模式\n简单工厂模式\n通过一个厂类，以一个条件来创建对应的对象\n//业务功能\npublic interface ICalculation {\n	double getResult(d...',1037,'csdn/java/1_0_1_1_1504265101.039539.html','2014-09-26 22:40','jjwwmlp456',1,'工厂模式,',1,'http://my.csdn.net/jjwwmlp456',1),(2616,2,'http://blog.csdn.net/jjwwmlp456/article/details/39637255','Java 实现抽象工厂模式','抽象工厂模式\n里面有几个概念：抽象工厂、实体工厂、抽象产品、实体产品\n抽象工厂：定义创建产品的抽象方法\n实体工厂：具体的创建哪种产品\n抽象产品：一个接口或基类\n实体产品：实现具体功能，或派生\n\n\n...',985,'csdn/java/1_0_1_2_1504265102.217044.html','2014-09-28 10:41','jjwwmlp456',0,'工厂模式,',1,'http://my.csdn.net/jjwwmlp456',1),(2617,2,'http://blog.csdn.net/jjwwmlp456/article/details/39891507','Java 实现原型(Prototype)模式','public class BaseSpoon implements Cloneable {//spoon 匙, 调羹 \n	String name;\n\n	public String getName() ...',943,'csdn/java/1_0_1_4_1504265103.047093.html','2014-10-08 11:35','jjwwmlp456',0,'设计模式,原型Prototype模式,',0,'http://my.csdn.net/jjwwmlp456',1),(2618,2,'http://blog.csdn.net/jjwwmlp456/article/details/39893723','Java 实现适配器(Adapter)模式','平时我们会经常碰到这样的情况，有了两个现成的类，它们之间没有什么联系，但是我们现在既想用其中一个类的方法，同时也想用另外一个类的方法。有一个解决方法是，修改它们各自的接口，但是这是我们最不愿意看到的。...',5471,'csdn/java/1_0_1_5_1504265104.044177.html','2014-10-08 15:21','jjwwmlp456',0,'适配器Adapter模式,',2,'http://my.csdn.net/jjwwmlp456',1),(2619,2,'http://blog.csdn.net/jjwwmlp456/article/details/39890699','Java 实现建造者(Builder)模式','建造者(Builder)模式是创建型模式，创建了一个对外隐藏创建过程的产品，使用组合的方式，由指挥者(Director)来决定建造的流程\n\npublic interface Builder {\n	vo...',2461,'csdn/java/1_0_1_3_1504265105.106889.html','2014-10-08 10:58','jjwwmlp456',2,'设计模式,建造者Builder模式,',1,'http://my.csdn.net/jjwwmlp456',1),(2620,2,'http://blog.csdn.net/jjwwmlp456/article/details/39967021','Java 实现观察者(Observer)模式','1. Java自带的实现\r\n类图\r\n\r\n\r\n/**\n * 观察目标 继承自 java.util.Observable\n * @author stone\n *\n */\npublic class Upda...',1903,'csdn/java/1_0_1_14_1504265106.039029.html','2014-10-10 19:11','jjwwmlp456',0,'设计模式,观察者Observer模式,',1,'http://my.csdn.net/jjwwmlp456',1),(2621,2,'http://blog.csdn.net/jjwwmlp456/article/details/40053267','Java 实现备忘录(Memento)模式','/**\n * 数据对象\n * @author stone\n *\n */\npublic class DataState {\n	private String action;\n\n	public void s...',947,'csdn/java/1_0_1_18_1504265107.188367.html','2014-10-13 21:38','jjwwmlp456',0,'设计模式,备忘录Memento模式,',0,'http://my.csdn.net/jjwwmlp456',1),(2622,2,'http://blog.csdn.net/jjwwmlp456/article/details/40055905','Java 实现状态(State)模式','/**\n * @author stone\n */\npublic class WindowState {\n	private String stateValue;\n	\n	public WindowStat...',2373,'csdn/java/1_0_1_19_1504265108.13314.html','2014-10-13 23:19','jjwwmlp456',0,'设计模式,状态State模式,',0,'http://my.csdn.net/jjwwmlp456',1),(2623,2,'http://blog.csdn.net/jjwwmlp456/article/details/39992057','Java 实现迭代器(Iterator)模式','类图\n\n\n/**\n * 自定义集合接口, 类似java.util.Collection\n * 用于数据存储\n * @author stone\n *\n */\npublic interface IColl...',4067,'csdn/java/1_0_1_15_1504265109.226014.html','2014-10-11 12:21','jjwwmlp456',0,'设计模式,迭代器Iterator模式,',0,'http://my.csdn.net/jjwwmlp456',1),(2624,2,'http://blog.csdn.net/jjwwmlp456/article/details/39997217','Java 实现责任链(Chain of Responsibility)模式','类图\n\n\n/**\n * 抽象责任\n * @author stone\n *\n */\npublic abstract class IFilter {\n	private IFilter successor;...',1121,'csdn/java/1_0_1_16_1504265110.229479.html','2014-10-11 17:26','jjwwmlp456',0,'设计模式,责任链Chain of Responsi,',1,'http://my.csdn.net/jjwwmlp456',1),(2625,2,'http://blog.csdn.net/qq_16255321/article/details/54744269','提交表单--get与post方式','我们经常在网页上输入信息，然后通过按钮提交，有两种提交方式，get和post\r\nget方式效率高但安全性低，post是封装后进行提交安全性高。\r\nget方式经常用于搜索，查询   post常用与用户注...',167,'csdn/java/1_0_1_0_1504265131.510718.html','2017-01-26 15:49','qq_16255321',0,'jsp,表单,',0,'http://my.csdn.net/qq_16255321',1),(2626,2,'http://blog.csdn.net/qq_16255321/article/details/54744847','JavaBean','一,JavaBean是什么\nJavaBean 是一种JAVA语言写成的可重用组件。本质上是一组具有特殊规范的公共类。\n\n为写成JavaBean，类必须是具体的和公共的，并且具有无参数的构造器。Java...',234,'csdn/java/1_0_1_1_1504265132.494839.html','2017-01-26 20:04','qq_16255321',0,'jsp,',1,'http://my.csdn.net/qq_16255321',1),(2627,2,'http://blog.csdn.net/qq_16255321/article/details/54745279','JavaWeb开发模式1：JSP+JavaBean','看了几天web开发，说一下体会吧：\r\n开发分层：界面层（View）业务逻辑层，数据库层，但是单纯的JSP开发是将这个三层混在一起了，使得代码的维护性太差，如何解决？\r\n分层，JavaBean封装业务逻...',327,'csdn/java/1_0_1_2_1504265133.282985.html','2017-01-26 20:26','qq_16255321',0,'jsp,java web,javabean,',1,'http://my.csdn.net/qq_16255321',1),(2628,2,'http://blog.csdn.net/justloveyou_/article/details/74979754','Java web Filter, Strurs2 Interceptor 和 SpringMVC Interceptor 三者之间的联系与区别','无论是Filter、Strurs2 Interceptor还是SpringMVC Interceptor，它们都是AOP理念的实现，本文结合源码详细解剖了三者在具体实现上的异同。',358,'csdn/java/1_0_1_0_1504265174.375248.html','2017-07-11 15:58','justloveyou_',0,'filter,struts2拦截器,AOP,责任链模式,springmvc,',2,'http://my.csdn.net/justloveyou_',1),(2629,2,'http://blog.csdn.net/justloveyou_/article/details/74295728','简述Spring容器与SpringMVC的容器的联系与区别','在Spring整体框架的核心概念中，容器的核心思想是管理Bean的整个生命周期。但在一个项目中，Spring容器往往不止一个，最常见的场景就是在一个项目中引入Spring和SpringMVC这两个框架...',2472,'csdn/java/1_0_1_1_1504265175.316187.html','2017-07-04 10:55','justloveyou_',13,'spring,spring mvc,Spring容器创建,容器的配置,不同容器的关系,',20,'http://my.csdn.net/justloveyou_',1),(2630,2,'http://blog.csdn.net/justloveyou_/article/details/74379479','REST风格框架实战：从MVC到前后端分离(附完整Demo)','本人在前辈《从MVC到前后端分离（REST-个人也认为是目前比较流行和比较好的方式）》一文的基础上，实现了一个基于Spring的符合REST风格的完整Demo，具有MVC分层结构并实现前后端分离，该项...',1794,'csdn/java/1_0_1_2_1504265176.371813.html','2017-07-05 10:04','justloveyou_',5,'MVC分层架构,REST架构风格,REST框架实现,SpringMVC,前后端分离,',4,'http://my.csdn.net/justloveyou_',1),(2631,2,'http://blog.csdn.net/justloveyou_/article/details/55824500','Java Web基础 --- Jsp 综述(上)','Servlet/Jsp是J2EE规范的一部分，是Tomcat的主要实现部分。当用户发送请求时，Servlet利用输出流动态生成HTML，这导致其开发效率极为低下。JSP技术通过实现普通静态HTML和动...',3591,'csdn/java/1_0_1_17_1504265177.400789.html','2017-02-19 22:14','justloveyou_',6,'JSP的原理与本质,转译时期,请求时期,JSP的编译指令,JSP的动作指令,',10,'http://my.csdn.net/justloveyou_',1),(2632,2,'http://blog.csdn.net/justloveyou_/article/details/55827718','JSP中文乱码问题终极解决方案(下)','本文首先从四个方面给出了在使用JSP过程中可能出现中文乱码的情形，具体包括JSP页面中文乱码、JSP源文件中文乱码、GET 请求的请求参数为中文乱码 和 POST 请求的请求参数为中文乱码四种情形，并...',2356,'csdn/java/1_0_1_18_1504265178.349719.html','2017-02-19 22:42','justloveyou_',4,'JSP源文件乱码,JSP页面乱码,GET请求参数乱码,POST请求参数乱码,转码与解码,',4,'http://my.csdn.net/justloveyou_',1),(2633,2,'http://blog.csdn.net/justloveyou_/article/details/55002006','Struts2 实战：从 登录Demo 看 Struts2 应用开发','作为 Struts2 的首篇文章，本文首先以登录Demo为例介绍了创建一个简单的 Struts2 应用的一般步骤和流程，紧接着以该 Demo 为出发点概述了 Struts2 的运行机制，揭示了 Str...',775,'csdn/java/1_0_1_15_1504265179.676994.html','2017-02-12 16:19','justloveyou_',0,'Struts运行机制,请求路由规则,Namespace,核心控制器,业务控制器,',4,'http://my.csdn.net/justloveyou_',1),(2634,2,'http://blog.csdn.net/justloveyou_/article/details/52971667','领域驱动设计系列文章（1）——通过现实例子显示领域驱动设计的威力','在本文中，将会拿出一个显示的例子，先用传统的面向过程方式，使用贫血模型进行设计，然后再逐步加入需求变更，让读者发现，随着系统的不断变更，基于贫血模型的设计将会让系统慢慢陷入泥潭，越来越难于维护，然后再...',424,'csdn/java/1_0_1_16_1504265180.370828.html','2016-10-30 13:07','justloveyou_',0,'领域驱动,贫血模型,充血模型,架构设计,模块化,',3,'http://my.csdn.net/justloveyou_',1),(2635,2,'http://blog.csdn.net/justloveyou_/article/details/68961271','再述 OGNL：在Struts2中的应用','MVC框架的分层结构提高了程序的可维护性、可移植性、可扩展性与可重用性，降低了程序的开发难度，但是也引来了一些新的问题，比如不同层次间的数据流转问题。OGNL的出现填平了这条沟壑，成为字符串与Java...',2159,'csdn/java/1_0_1_11_1504265181.331975.html','2017-04-03 16:19','justloveyou_',4,'MVC数据流转问题,Action上下文,ValueStack,表现层技术与模板语言,Struts2标签,',3,'http://my.csdn.net/justloveyou_',1),(2636,2,'http://blog.csdn.net/justloveyou_/article/details/68922144','Java Web 基础 --- Filter 综述','伴随J2EE一起发布的Servlet规范中还包括一个重要的组件——过滤器，其主要用于对用户请求进的预处理以及对服务器响应的后处理，是个典型的处理链，并且Servlet规范使用了三个接口Filter，F...',1930,'csdn/java/1_0_1_13_1504265182.327436.html','2017-03-31 10:09','justloveyou_',2,'Filter-机制,AOP理念,责任链模式,中文解码过滤器,典型的过滤链,',6,'http://my.csdn.net/justloveyou_',1),(2637,2,'http://blog.csdn.net/justloveyou_/article/details/68491121','责任链模式进阶：与AOP思想的融合与应用','AOP的理念可以很容易抽象出横切关注点，基于AOP理念我们可以将责任链模式中各具体处理角色中共同逻辑抽象出来并将其模块化以便提高代码复用率和系统可维护性。Java Web中的过滤器和Struts2中的...',2212,'csdn/java/1_0_1_14_1504265183.415267.html','2017-03-30 18:15','justloveyou_',10,'AOP理念,责任链模式,Filter过滤器,struts2拦截器,横切关注点,',7,'http://my.csdn.net/justloveyou_',1),(2638,2,'http://blog.csdn.net/justloveyou_/article/details/68957129','与MVC框架解耦的OGNL：前世今生及其基本用法','虽然我们通过MVC框架而结缘OGNL，但它并未与MVC框架耦合在一起，而是一个以独立的库文件出现的功能强大的表达式语言，是字符串与Java对象之间沟通的桥梁。它通过简单一致的语法，可以存取Java对象...',4527,'csdn/java/1_0_1_12_1504265184.350144.html','2017-04-03 08:11','justloveyou_',1,'OGNL的前世今生,数据流转与映射,Java对象树,OGNL三要素,表现层技术与模板语言,',7,'http://my.csdn.net/justloveyou_',1),(2639,2,'http://blog.csdn.net/justloveyou_/article/details/69365627','Struts1与Struts2的区别和对比（深度好文）','本文介绍了Struts2的起源，详细对比了Struts2和Struts1.x的差异，并穿插概述了Struts2框架和请求流程。本文详细介绍了Struts1.x和Struts2两者之间在Action方面...',1593,'csdn/java/1_0_1_10_1504265185.537105.html','2017-04-05 22:31','justloveyou_',0,'Struts与IOC,Struts拦截器,Struts框架对比,Struts起源,Pull-MVC,',3,'http://my.csdn.net/justloveyou_',1),(2640,2,'http://blog.csdn.net/justloveyou_/article/details/73733278','Spring 事务管理机制概述','用户的每次请求都对应一个业务逻辑方法，而一个业务逻辑方法往往包括一系列数据库原子访问操作，并且这些操作应绑定成一个事务来执行。使用传统事务编程策略时，程序代码必然和具体的事务操作代码耦合，而Sprin...',1590,'csdn/java/1_0_1_3_1504265186.429273.html','2017-06-26 10:55','justloveyou_',4,'编程式事务管理,声明式事务管理,spring事务管理,事务隔离级别,事务的传播行为,',8,'http://my.csdn.net/justloveyou_',1),(2641,2,'http://blog.csdn.net/justloveyou_/article/details/70312810','简述数据库事务并发机制','事务是最小的逻辑执行单元，也是数据库并发控制的基本单位，其执行的结果必须使数据库从一种一致性状态变到另一种一致性状态。事务具有四个重要特征，即原子性、一致性、隔离性和持久性。本文首先叙述了数据库中事务...',2041,'csdn/java/1_0_1_7_1504265187.462082.html','2017-04-21 11:17','justloveyou_',6,'事务的隔离性,乐观锁-悲观锁,数据库事务隔离级别,事务并发安全性,事务四大特性ACID,',6,'http://my.csdn.net/justloveyou_',1),(2642,2,'http://blog.csdn.net/justloveyou_/article/details/69611328','计算机网络体系结构综述（上）','计算机网络体系结构标准的制定使得两台计算机能够像两个知心朋友那样能够互相准确理解对方的意思并做出优雅的回应。本文首先概述了计算机网络体系结构的提出动机，并结合日常生活中的邮政系统介绍了设计的理念，并给...',3035,'csdn/java/1_0_1_9_1504265188.466111.html','2017-04-07 18:54','justloveyou_',10,'层次化网络体系结构,OSI,TCP-IP,通信协议的实质,分层思想,',7,'http://my.csdn.net/justloveyou_',1),(2643,2,'http://blog.csdn.net/justloveyou_/article/details/69612153','计算机网络体系结构综述（下）','我们知道TCP/IP与OSI最大的不同在于OSI是一个理论上的网络通信模型，而TCP/IP则是实际上的网络通信标准。在上篇[《高频笔试面试干货：计算机网络体系结构综述（上）》][1]的基础上，本文着重...',2316,'csdn/java/1_0_1_8_1504265189.468613.html','2017-04-07 18:59','justloveyou_',2,'OSI,TCP-IP,网络层与传输层的区别,链路层与网络层的区别,五层网络体系结构,',8,'http://my.csdn.net/justloveyou_',1),(2644,2,'http://blog.csdn.net/justloveyou_/article/details/72835839','Spring MVC 简述：从MVC框架普遍关注的问题说起','任何一个完备的MVC框架都需要解决Web开发过程中的一些共性的问题，比如请求的收集与分发、数据前后台流转与转换，当前最流行的SpringMVC和Struts2也不例外。本文首先概述MVC模式的分层思想...',1791,'csdn/java/1_0_1_6_1504265190.747879.html','2017-06-01 22:19','justloveyou_',10,'springmvc,struts2与springmvc的区别,消息转换机制,数据绑定机制,MVC模式与框架,',12,'http://my.csdn.net/justloveyou_',1),(2645,2,'http://blog.csdn.net/justloveyou_/article/details/73612999','理解RESTful架构','越来越多的人开始意识到，网站即软件，而且是一种新型的软件。但是传统上，软件和网络是两个不同的领域，很少有交集；软件开发主要针对单机环境，网络则主要研究系统之间的通信。互联网的兴起，使得这两个领域开始融...',623,'csdn/java/1_0_1_4_1504265191.628746.html','2017-06-23 08:38','justloveyou_',0,'RESTful架构,表现层状态转移,软件与网络,资源与表现层,状态转化,',2,'http://my.csdn.net/justloveyou_',1),(2646,2,'http://blog.csdn.net/justloveyou_/article/details/73136260','Spring 核心技术概览(一)','Spring是一个分层的Java SE/EE应用一站式的轻量级开源框架，其从持久层、业务层到表现层都拥有相应的支持，几乎为企业应用提供了所需的一切。本文首先概述了Spring容器的IoC控制反转和DI...',990,'csdn/java/1_0_1_5_1504265192.862015.html','2017-06-12 21:14','justloveyou_',2,'IoC控制反转,DI依赖注入,Spring容器,Bean的声明周期,Resource接口,',3,'http://my.csdn.net/justloveyou_',1),(2647,2,'http://blog.csdn.net/justloveyou_/article/details/57154560','Java Web基础 --- Jsp 综述(下)','JSP脚本中包含九个内置对象，它们都是Servlet-API接口的实例，并且JSP规范对它们进行了默认初始化。本文首先通过一个JSP实例来认识JSP内置对象的实质，紧接着以基于请求/响应架构应用的运行...',2831,'csdn/java/1_0_1_19_1504265193.763499.html','2017-02-25 23:13','justloveyou_',10,'九大内置对象,请求-响应架构,重定向,Cookie,请求周期-当前会话,',7,'http://my.csdn.net/justloveyou_',1),(2648,2,'http://blog.csdn.net/justloveyou_/article/details/57156039','使用 URLDecoder 和 URLEncoder 对中文字符进行编码和解码','URLDecoder 和 URLEncoder 用于完成普通字符串 和 application/x-www-form-urlencoded MIME 字符串之间的相互转换。在本文中，我们以使用URLD...',3119,'csdn/java/1_0_2_0_1504265195.748848.html','2017-02-25 23:17','justloveyou_',0,'URLDecoder,URLEncoder,字符串编码,字符串解码,乱码,',6,'http://my.csdn.net/justloveyou_',1),(2649,2,'http://blog.csdn.net/justloveyou_/article/details/58048879','JSP中文乱码问题终极解决方案(上)','本文首先介绍了一个JSP的源文件执行过程，即需要经过三个阶段，两次编码，才能完成一次完整的输出。特别需要注意的是，在这个过程中，编码问题贯穿始终。在JSP/Servlet中，主要有以下四种方式可以设置...',1600,'csdn/java/1_0_2_1_1504265196.738196.html','2017-02-27 12:03','justloveyou_',2,'JSP执行过程,JSP编码方式,JSP编码解决方案,乱码,编码作用优先级,',5,'http://my.csdn.net/justloveyou_',1),(2650,2,'http://blog.csdn.net/justloveyou_/article/details/60964556','Java Web基础 --- Servlet 综述(实践篇)','摘要：　　伴随 J2EE 6一起发布的Servlet 3.0规范是Servlet规范历史上最重要的变革之一，它的许多新的特性都极大的简化了 Java Web 应用的开发。本文从一个简单的 Servle...',1557,'csdn/java/1_0_2_2_1504265197.751627.html','2017-03-09 18:00','justloveyou_',0,'Servlet配置,Servlet新特性,异步处理,非阻塞IO,文件上传,',6,'http://my.csdn.net/justloveyou_',1),(2651,2,'http://blog.csdn.net/justloveyou_/article/details/60964714','Java Web基础 --- Servlet 综述(理论篇)','Web 技术成为当今主流的互联网Web应用技术之一，而Servlet是Java Web技术的核心基础。本文首先从请求/响应架构应用的大背景谈起Servlet的由来，明确Servlet的产生动机，揭示了...',1759,'csdn/java/1_0_2_3_1504265198.755073.html','2017-03-09 18:09','justloveyou_',4,'Servlet动机,Servlet本质,生命周期与执行流程,Servlet与并发,MVC,',6,'http://my.csdn.net/justloveyou_',1),(2652,2,'http://blog.csdn.net/lhy_ycu/article/details/39760895','Java设计模式菜鸟系列(四)工厂方法模式建模与实现','转载请注明出处：http://blog.csdn.net/lhy_ycu/article/details/39760895\n\n工厂方法模式（Factory Method）分为三种：\n一、普通工厂模式。...',2112,'csdn/java/1_0_2_0_1504265200.743564.html','2014-10-04 22:29','JAVE_LOVER',0,'java设计模式,工厂模式,uml,java,',1,'http://my.csdn.net/JAVE_LOVER',1),(2653,2,'http://blog.csdn.net/lhy_ycu/article/details/39759199','Java设计模式菜鸟系列(三)装饰者模式建模与实现','装饰者(Decorator)模式：动态地将责任附加到对象上，若要扩展功能，装饰者提供了比继承更具有弹性的替代方案。对于装饰者模式，它其实是一种包装，所以我更愿意称它为一种包装。像咱们以前经常使用的Ja...',2133,'csdn/java/1_0_2_1_1504265201.777276.html','2014-10-03 22:23','JAVE_LOVER',0,'设计模式,uml,设计,java,',2,'http://my.csdn.net/JAVE_LOVER',1),(2654,2,'http://blog.csdn.net/lhy_ycu/article/details/39721563','Java设计模式菜鸟系列(一)策略模式建模与实现','今天开始咱们来谈谈Java设计模式。这里会结合uml图形来讲解，有对uml建模不熟的可以参考我的另一篇博文uml建模。\n首先，个人觉得模式的设计就是一个将变化的东西和不变(稳定)的东西分离的过程。咱们...',2912,'csdn/java/1_0_2_3_1504265202.783822.html','2014-10-01 23:47','JAVE_LOVER',3,'java,设计模式,架构,模式,',1,'http://my.csdn.net/JAVE_LOVER',1),(2655,2,'http://blog.csdn.net/lhy_ycu/article/details/39755577','Java设计模式菜鸟系列(二)观察者模式建模与实现','观察者(Observer)模式定义：在对象之间定义了一对多的依赖关系，这样一来，当一个对象改变状态时，依赖它的对象都会收到通知并自动跟新。Java已经提供了对观察者Observer模式的默认实现， J...',2027,'csdn/java/1_0_2_2_1504265203.749957.html','2014-10-03 19:03','JAVE_LOVER',4,'java,uml建模,设计模式,模式,',3,'http://my.csdn.net/JAVE_LOVER',1),(2656,2,'http://blog.csdn.net/u011712163/article/details/72953689','设计模式（一）— 什么是设计模式','设计模式（Design Pattern）是一套被反复使用、多数人知晓的、经过分类的、代码设计经验的总结。',102,'csdn/java/1_1_1_0_1504265219.060817.html','2017-06-09 09:38','u011712163',0,'设计模式,',1,'http://my.csdn.net/u011712163',1),(2657,2,'http://blog.csdn.net/u011712163/article/details/72953712','设计模式（二）— 为什么要用设计模式','使用设计模式的目的：为了代码可重用性、让代码更容易被他人理解、保证代码可靠性。 设计模式使代码编写真正工程化；设计模式是软件工程的基石脉络，如同大厦的结构一样。',121,'csdn/java/1_1_1_1_1504265220.150674.html','2017-06-09 09:40','u011712163',0,'设计模式,',1,'http://my.csdn.net/u011712163',1),(2658,2,'http://blog.csdn.net/u011712163/article/details/72961826','设计模式（三）— 设计原则','设计原则：\n1.逻辑代码独立到单独的方法中，注重封装性--易读，易复用。\n\n   不要在一个方法中，写下上百行的逻辑代码。把各小逻辑代码独立出来，写于其它方法中，易读其可重复调用。\n\n\n2.写类，写方...',106,'csdn/java/1_1_1_2_1504265221.133612.html','2017-06-09 16:15','u011712163',0,'设计模式,',1,'http://my.csdn.net/u011712163',1),(2659,2,'http://blog.csdn.net/qq_19558705/article/details/76419199','架构师入门笔记一 初识线程关键字','架构师入门笔记一 初识线程关键字\r\n本章主要介绍线程的关键字 synchronized，volatile  的含义，使用方法和使用场景，以及注意事项。下一章介绍线程的队列知识。\r\n首先要了解线程安全概...',5534,'csdn/java/1_0_1_0_1504265251.594849.html','2017-08-04 14:08','qq_19558705',0,'架构师,线程,',1,'http://my.csdn.net/qq_19558705',1),(2660,2,'http://blog.csdn.net/qq_19558705/article/details/76690531','架构师入门笔记二 初识java容器','架构师入门笔记二 初识java容器\r\n上一章简单介绍了 线程的关键字 synchronized 和 volatile 的用法及其注意事项。这章来讲解一下同步类容器，并发类容器，COW容器的原理和优缺点...',1016,'csdn/java/1_0_1_1_1504265252.589416.html','2017-08-07 14:07','qq_19558705',0,'架构师,容器,',1,'http://my.csdn.net/qq_19558705',1),(2661,2,'http://blog.csdn.net/qq_19558705/article/details/77073871','架构师入门笔记六 初识线程安全锁','架构师入门笔记六 初识线程安全锁\r\n这章主要介绍Synchronized，ThreadLock，Lock，Concurrent.util等方法。\r\n\r\n\r\n1 Lock 锁\r\n在java多线程中，可以...',391,'csdn/java/1_0_1_5_1504265253.53683.html','2017-08-26 09:37','qq_19558705',0,'架构师,锁,',1,'http://my.csdn.net/qq_19558705',1),(2662,2,'http://blog.csdn.net/qq_19558705/article/details/76695929','架构师入门笔记三 初识Queue队列','架构师入门笔记三 初识Queue队列\n\n\n1. wait和notify模拟Queue\n1.1 wait / notify 基础知识\n线程通信概念：线程是操作系统中独立的个体，但这些个体如果不经过特殊的...',888,'csdn/java/1_0_1_2_1504265254.615425.html','2017-08-10 21:30','qq_19558705',0,'架构师,Queue,',1,'http://my.csdn.net/qq_19558705',1),(2663,2,'http://blog.csdn.net/qq_19558705/article/details/77036449','架构师入门笔记五 初识线程池','架构师入门笔记五 初识线程池\n\n\n线程池，顾名思义是线程的池子。当任务提交给线程池的时候，线程池会安排一个空闲的线程去执行任务，当任务执行结束后返回到线程池中。若没有空闲的线程去执行任务，则该任务就会...',451,'csdn/java/1_0_1_4_1504265255.543954.html','2017-08-20 08:44','qq_19558705',0,'架构师,线程池,',1,'http://my.csdn.net/qq_19558705',1),(2664,2,'http://blog.csdn.net/qq_19558705/article/details/76888389','架构师入门笔记四 初识多线程设计模式','架构师入门笔记四 初识多线程设计模式\n\n\n这章讲解常用的并行设计模式，为后续的多线程打基础。常用的并行设计模式有：Future 模式、Master-Worker模式 和 生产者-消费者模式。其中生产者...',711,'csdn/java/1_0_1_3_1504265256.639035.html','2017-08-15 18:52','qq_19558705',0,'架构师,设计模式,',1,'http://my.csdn.net/qq_19558705',1),(2665,2,'http://blog.csdn.net/maosijunzi/article/details/38704889','java设计模式之享元模式（11）','是结构型设计模式，其目的是为了减少大量的重复对象。\r\njava中String就是享元模式的。看下例子\r\n \r\npackage com.pattern.struct.flyweight;\n\npublic...',758,'csdn/java/1_0_1_0_1504265258.700019.html','2014-08-20 13:30','maosijunzi',0,'JAVA,java设计模式,设计模式,',0,'http://my.csdn.net/maosijunzi',1),(2666,2,'http://blog.csdn.net/maosijunzi/article/details/38660429','java设计模式之桥梁模式（10）','java设计模式之桥梁模式（10）\r\n又叫桥连模式。\r\n桥梁模式是对象的结构模式，桥梁模式的用意是:将抽象化与实现化脱耦，使得二者可以独立地变化。\r\n接口就是抽象化，实现类就是实现化，把接口和实现类分...',2083,'csdn/java/1_0_1_1_1504265259.760147.html','2014-08-18 14:39','maosijunzi',0,'JAVA,java设计模式,设计模式,',2,'http://my.csdn.net/maosijunzi',1),(2667,2,'http://blog.csdn.net/maosijunzi/article/details/38335359','java设计模式之外观模式（9）','外观模式又叫门面模式。\r\n门面模式是对象的结构模式，外部与一个子系统的通信必须通过一个统一的门面对象进行。\r\n门面模式提供一个高层次的接口，使得子系统更易于使用。（注：这句话来自《java与模式》）。...',760,'csdn/java/1_0_1_2_1504265260.534216.html','2014-08-01 13:54','maosijunzi',0,'JAVA,java设计模式,设计模式,',1,'http://my.csdn.net/maosijunzi',1),(2668,2,'http://blog.csdn.net/maosijunzi/article/details/38065001','java设计模式之单例模式（1）','单例模式：属于创建型模式。项目中只存在某个类的一个对象，而且只可能存在一个对象。那么我们说这个类是单例模式，也叫单态模式。\r\n单例模式分为两种 :懒汉式 和 饿汉式。\r\n饿汉式',822,'csdn/java/1_0_1_10_1504265261.544801.html','2014-07-23 15:30','maosijunzi',1,'java设计模式,设计模式,',1,'http://my.csdn.net/maosijunzi',1),(2669,2,'http://blog.csdn.net/maosijunzi/article/details/38090011','java设计模式之工厂模式（2）','工厂模式：属于创建型模式。同我们生活中的厂家很相似。我们并不自己制造（new）产品，而是依靠厂家制造，我们只是拿来使用。简单的说就是让工厂\r\n  根据我们的需求给我们new一个对象。\r\n  \r\n工厂模...',904,'csdn/java/1_0_1_9_1504265262.610081.html','2014-07-24 18:21','maosijunzi',1,'JAVA,java设计模式,设计模式,',1,'http://my.csdn.net/maosijunzi',1),(2670,2,'http://blog.csdn.net/maosijunzi/article/details/38109171','java设计模式之建造者模式（3）','建造者模式：属于创建型模式，和之前的工厂模式很相似。两者相比的话，建造者模式创建的对象是复杂的对象，而工厂模式创建的都是简单的单一对象。\r\n    建造者模式就像一个 流水线，会把各种零件按照一定的顺...',899,'csdn/java/1_0_1_8_1504265263.725741.html','2014-07-25 09:44','maosijunzi',1,'JAVA,java设计模式,设计模式,',1,'http://my.csdn.net/maosijunzi',1),(2671,2,'http://blog.csdn.net/maosijunzi/article/details/38122333','java设计模式之三句话记住23种设计模式（4）','1：创建型模式：弹弓原件（单例，工厂，原型，建造）\r\n2：结构型模式：外援组 佩戴桥石（外观，享元，组合，适配，代理，桥连，装饰）\r\n3：行为型模式：爹责令房中介装备观测板（迭代，责任链，命令，访问者...',1204,'csdn/java/1_0_1_7_1504265263.872213.html','2014-07-25 17:28','maosijunzi',1,'JAVA,java设计模式,设计模式,',2,'http://my.csdn.net/maosijunzi',1),(2672,2,'http://blog.csdn.net/maosijunzi/article/details/38228855','java设计模式之原型模式（5）','原型模式也是一种创建型模式，只不过他创建的对象不是通过new来创建的，而是通过克隆来实现。为什么要通过克隆而不是new呢？\r\n举个例子：比如一个对象的创建需要读取本地文件（Excel）中的信息，而且需...',977,'csdn/java/1_0_1_6_1504265264.767708.html','2014-07-28 13:56','maosijunzi',1,'JAVA,java设计模式,设计模式,',1,'http://my.csdn.net/maosijunzi',1),(2673,2,'http://blog.csdn.net/maosijunzi/article/details/38321303','java设计模式之代理模式（8）','代理模式就是，不直接调用目标函数，而是通过一个代理类来调用。\r\n它的类继承关系和装饰模式很类似。但是它们的目的不一样。\r\n代理模式不会增加新的功能，只是在调用和被调用之间加入代理层。而装饰模式旨在增加...',761,'csdn/java/1_0_1_3_1504265265.799443.html','2014-07-31 17:52','maosijunzi',0,'JAVA,java设计模式,设计模式,',0,'http://my.csdn.net/maosijunzi',1),(2674,2,'http://blog.csdn.net/maosijunzi/article/details/38264871','java设计模式之适配器模式（6）','属于结构型模式。适配器这三个字在生活中很常见。举个最简单的例子，那就是变压器，它可以把几万伏的高压变成我们生活用电220伏。\r\n变压器就是一种适配器。适配器模式的作用就和生活中的适配器的作用是很相似的...',855,'csdn/java/1_0_1_5_1504265266.649672.html','2014-07-29 13:46','maosijunzi',0,'JAVA,java设计模式,设计模式,',0,'http://my.csdn.net/maosijunzi',1),(2675,2,'http://blog.csdn.net/maosijunzi/article/details/38294633','java设计模式之装饰模式（7）','属于结构型模式，装饰模式就是动态的给一个对象增加一些功能。\r\n要求装饰对象和被装饰对象实现同一个接口，装饰对象持有被装饰对象的实例。\r\njava的IO流的实现就是装饰模式。可以轻松的把一种流装饰成为另...',838,'csdn/java/1_0_1_4_1504265267.534465.html','2014-07-30 10:36','maosijunzi',0,'JAVA,java设计模式,设计模式,',0,'http://my.csdn.net/maosijunzi',1),(2676,2,'http://blog.csdn.net/maosijunzi/article/details/38064795','java设计模式（0）','总体来说设计模式分为三大类：创建型模式、结构型模式和行为型模式。\r\n创建型模式：工厂方法模式、抽象工厂模式、单例模式、建造者模式、原型模式。\r\n结构型模式：适配器模式、装饰器模式、代理模式、外观模式、...',731,'csdn/java/1_0_1_11_1504265268.786537.html','2014-07-23 15:18','maosijunzi',0,'java设计模式,设计模式,',1,'http://my.csdn.net/maosijunzi',1),(2677,2,'http://blog.csdn.net/xvshu/article/details/46284875','java架构解密——AOP之动态代理实现','深入spring aop 的核心，看看这个神秘的东西是怎么样的一幅面孔，看他是如何由简入难，化难为简！',1367,'csdn/java/1_0_1_2_1504265271.8805.html','2015-05-31 13:34','xvshu',15,'架构,aop,spring,框架,设计,',4,'http://my.csdn.net/xvshu',1),(2678,2,'http://blog.csdn.net/xvshu/article/details/46288131','java架构解密——深入再造AOP','随着AOP研究的深入，我们发现，核心概念变得极其重要，这些概念就是一幅图，指引我们在优化之路上越走越远！',1260,'csdn/java/1_0_1_1_1504265274.754792.html','2015-05-31 15:08','xvshu',10,'大数据,架构,优化,解密,aop,',2,'http://my.csdn.net/xvshu',1),(2679,2,'http://blog.csdn.net/xvshu/article/details/42435167','springMvc+Spring4+hibernate4整合常见错误','最近一直在做springMvc+Spring4+hibernate4的整合，出了不少错误，这都是我们宝贵的经验啊，在整合的过程中，最大的问题就是版本升级的问题，之前做过jdk1.6的例子，很顺利，但是...',6888,'csdn/java/1_0_1_6_1504265275.729173.html','2015-01-05 23:33','xvshu',17,'java,springMvc,',5,'http://my.csdn.net/xvshu',1),(2680,2,'http://blog.csdn.net/lhy_ycu/article/details/40031567','Java设计模式博客全目录','今天来对这23种设计模式做个总结。咱使用设计模式的目的是为了可重用代码、让代码更容易被他人理解、保证代码可靠性，当然设计模式并不是万能的，项目中的实际问题还有具体分析。咱不能为了使用设计模式而使用，而...',4132,'csdn/java/1_0_1_0_1504265278.74955.html','2014-10-13 02:04','JAVE_LOVER',4,'java设计模式,架构,uml,模式,设计模式,',4,'http://my.csdn.net/JAVE_LOVER',1),(2681,2,'http://blog.csdn.net/lhy_ycu/article/details/40021651','Java设计模式菜鸟系列(二十一)享元模式建模与实现','享元模式（Flyweight）：运用共享的技术有效地支持大量细粒度的对象。主要目的是实现对象的共享，即共享池，当系统中对象多的时候可以减少内存的开销。在某种程度上，你可以把单例看成是享元的一种特例。\n...',1708,'csdn/java/1_0_1_3_1504265279.798814.html','2014-10-12 22:27','JAVE_LOVER',0,'java设计模式,uml,架构,设计模式,模式,',1,'http://my.csdn.net/JAVE_LOVER',1),(2682,2,'http://blog.csdn.net/lhy_ycu/article/details/40019829','Java设计模式菜鸟系列(二十)解释器模式建模与实现','解释器模式(Interpreter)：它定义了对象与对象之间进行某种操作之后会得到什么值。一般主要应用在OOP开发中的编译器\n\n的开发中，所以适用面比较窄。\n\n解释器模式用来做各种各样的解释器，如正则...',1616,'csdn/java/1_0_1_4_1504265280.818141.html','2014-10-12 17:17','JAVE_LOVER',0,'java设计模式,uml,架构,设计模式,模式,',1,'http://my.csdn.net/JAVE_LOVER',1),(2683,2,'http://blog.csdn.net/lhy_ycu/article/details/39828653','Java设计模式菜鸟系列(十二)组合模式建模与实现','转载请注明出处：http://blog.csdn.net/lhy_ycu/article/details/39828653\n\n组合模式(Composite)：组合模式有时又叫部分-整体模式，将对象组合...',2515,'csdn/java/1_0_1_12_1504265281.772597.html','2014-10-06 16:11','JAVE_LOVER',3,'设计模式,java设计模式,模式,uml,架构,',2,'http://my.csdn.net/JAVE_LOVER',1),(2684,2,'http://blog.csdn.net/lhy_ycu/article/details/39784403','Java设计模式菜鸟系列(五)抽象工厂模式建模与实现','抽象工厂模式（Abstract Factory）：抽象工厂--顾名思义，就是把工厂抽象出来，不同的工厂生产不同的产品。这样做有个好处：一旦需要增加新的功能，直接增加新的工厂类就可以了，不需要修改之前的...',1950,'csdn/java/1_0_1_19_1504265282.836506.html','2014-10-04 23:25','JAVE_LOVER',0,'java设计模式,工厂模式,java,uml,',1,'http://my.csdn.net/JAVE_LOVER',1),(2685,2,'http://blog.csdn.net/lhy_ycu/article/details/39785513','Java设计模式菜鸟系列(六)单例模式建模与实现','单例模式保证了一个类只有一个实例，且提供一个访问全局点的方式，更加灵活的保证了实例的创建和访问约束。系统中只有一个实例，因此构造方法应该为私有 饿汉式：类加载时直接创建静态实例；懒汉式：第一次需要时才...',2202,'csdn/java/1_0_1_18_1504265283.596996.html','2014-10-05 00:44','JAVE_LOVER',1,'java设计模式,uml,java,设计模式,singleton,',2,'http://my.csdn.net/JAVE_LOVER',1),(2686,2,'http://blog.csdn.net/lhy_ycu/article/details/39804057','Java设计模式菜鸟系列(七)命令模式建模与实现','命令模式(Command)：将“请求”(命令/口令)封装成一个对象，以便使用不同的请求、队列或者日志来参数化其对象。命令模式也支持撤销操作。命令模式的目的就是达到命令的发出者和执行者之间解耦，实现请求...',2641,'csdn/java/1_0_1_17_1504265284.844097.html','2014-10-05 17:08','JAVE_LOVER',0,'设计模式,java设计模式,uml,架构,模式,',2,'http://my.csdn.net/JAVE_LOVER',1),(2687,2,'http://blog.csdn.net/lhy_ycu/article/details/39805069','Java设计模式菜鸟系列(八)适配器模式建模与实现','适配器模式(Adapter)：将某个类的接口转换成客户端期望的另一个接口表示，目的是消除由于接口不匹配所造成的类的兼容性问题。\n主要分为三类：类的适配器模式、对象的适配器模式、接口的适配器模式。\n\n1...',2010,'csdn/java/1_0_1_16_1504265286.199316.html','2014-10-05 19:52','JAVE_LOVER',0,'软件开发,java设计模式,设计模式,uml,架构,',1,'http://my.csdn.net/JAVE_LOVER',1),(2688,2,'http://blog.csdn.net/lhy_ycu/article/details/39805735','Java设计模式菜鸟系列(九)外观模式建模与实现','外观模式(Facade)：是为了解决类与类之间的依赖关系的，像spring一样，可以将类与类之间的关系配置到配置文件中，而外观模式就是将他们的\n关系放在一个Facade类中，降低了类与类之间的耦合度，...',2306,'csdn/java/1_0_1_15_1504265286.593606.html','2014-10-05 20:46','JAVE_LOVER',0,'软件开发,java设计模式,设计模式,uml,架构,',2,'http://my.csdn.net/JAVE_LOVER',1),(2689,2,'http://blog.csdn.net/lhy_ycu/article/details/39806973','Java设计模式菜鸟系列(十)模板方法模式建模与实现','模板方法模式(Template Method)：在一个方法中定义了一个算法的骨架，而将一些步骤延迟到子类中。模板方法使得子类可以再不改变算法结构的情况下，重新定义算法中的某些步骤。简而言之：模板方法定...',2004,'csdn/java/1_0_1_14_1504265288.202563.html','2014-10-05 21:47','JAVE_LOVER',0,'设计模式,uml,java设计模式,架构,模式,',1,'http://my.csdn.net/JAVE_LOVER',1),(2690,2,'http://blog.csdn.net/lhy_ycu/article/details/39829859','Java设计模式菜鸟系列(十三)状态模式建模与实现','转载请注明出处：http://blog.csdn.net/lhy_ycu/article/details/39828653\n\n状态模式(State)：允许对象在内部状态改变时改变它的行为，对象看起来好...',1841,'csdn/java/1_0_1_11_1504265288.999633.html','2014-10-06 17:22','JAVE_LOVER',0,'java设计模式,设计模式,架构,模式,uml,',2,'http://my.csdn.net/JAVE_LOVER',1),(2691,2,'http://blog.csdn.net/lhy_ycu/article/details/39863125','Java设计模式菜鸟系列(十五)建造者模式建模与实现','建造者模式(Builder)：工厂类模式提供的是创建单个类的模式，而建造者模式则是将各种产品集中起来进行管理。简单起见，就拿之前的工厂方法模式进行修改一下就可以得到建造者模式。\n建造者模式将很多功能集...',3142,'csdn/java/1_0_1_9_1504265289.93602.html','2014-10-07 23:32','JAVE_LOVER',0,'java设计模式,uml,设计模式,架构,模式,',2,'http://my.csdn.net/JAVE_LOVER',1),(2692,2,'http://blog.csdn.net/lhy_ycu/article/details/39856435','Java设计模式菜鸟系列(十四)代理模式建模与实现','代理模式(Composite)：代理模式其实就是多一个代理类出来，替原对象进行一些操作。比如咱有的时候打官司需要请律师，因为律师在法律方面有专长，可以替咱进行操作表达咱的想法，这就是代理的意思。代理模...',4308,'csdn/java/1_0_1_10_1504265290.97938.html','2014-10-07 19:41','JAVE_LOVER',2,'java设计模式,设计模式,架构,代理模式,uml,',1,'http://my.csdn.net/JAVE_LOVER',1),(2693,2,'http://blog.csdn.net/lhy_ycu/article/details/39997337','Java设计模式菜鸟系列(十六)原型模式建模与实现','原型模式(Prototype)：该模式的思想就是将一个对象作为原型，对其进行复制、克隆，产生一个和原对象类似的新对象。而这里的复制有两种：浅复制、深复制。\n浅复制：将一个对象复制后，基本数据类型的变量...',1580,'csdn/java/1_0_1_8_1504265291.925973.html','2014-10-11 17:45','JAVE_LOVER',0,'java设计模式,uml,设计模式,架构,模式,',1,'http://my.csdn.net/JAVE_LOVER',1),(2694,2,'http://blog.csdn.net/lhy_ycu/article/details/40008711','Java设计模式菜鸟系列(十七)桥接模式建模与实现','桥接模式(Bridge)： 把事物和其具体实现分开(抽象化与实现化解耦)，使他们可以各自独立的变化。\n假设你的电脑是双系统(WinXP、Win7)，而且都安装了mysql、oracle、sqlserv...',2080,'csdn/java/1_0_1_7_1504265292.935912.html','2014-10-12 01:20','JAVE_LOVER',0,'java设计模式,uml,架构,设计模式,模式,',2,'http://my.csdn.net/JAVE_LOVER',1),(2695,2,'http://blog.csdn.net/lhy_ycu/article/details/40018231','Java设计模式菜鸟系列(十八)责任链模式建模与实现','责任链模式(ChainOfResponsibility)： 有多个对象，每个对象持有下一个对象的引用，形成一条链，请求在这条链上传递，直到某一对象决定处理该请求，但是发出者并不清楚最终哪个对象会处理该...',1657,'csdn/java/1_0_1_6_1504265294.162423.html','2014-10-12 15:16','JAVE_LOVER',0,'java设计模式,uml,架构,设计模式,模式,',1,'http://my.csdn.net/JAVE_LOVER',1),(2696,2,'http://blog.csdn.net/lhy_ycu/article/details/39807741','Java设计模式菜鸟系列(十一)迭代器模式建模与实现','转载请注明出处：http://blog.csdn.net/lhy_ycu/article/details/39807741\n\n迭代器模式(Iterator)：提供了一种方法顺序访问一个聚合对象中的各个...',1943,'csdn/java/1_0_1_13_1504265295.45347.html','2014-10-06 14:28','JAVE_LOVER',2,'设计模式,uml,java设计模式,架构,模式,',2,'http://my.csdn.net/JAVE_LOVER',1),(2697,2,'http://blog.csdn.net/lhy_ycu/article/details/40028509','Java设计模式菜鸟系列(二十三)访问者模式建模与实现','访问者模式(Visitor)：把数据结构和作用于结构上的操作解耦合，使得操作集合可相对自由地演化。访问者模式适用于数据结构相对稳定而算法又容易变化的系统。访问者模式的优点是增加操作很容易，因为增加操作...',2097,'csdn/java/1_0_1_1_1504265296.129218.html','2014-10-13 00:36','JAVE_LOVER',0,'java设计模式,uml,架构,模式,设计模式,',1,'http://my.csdn.net/JAVE_LOVER',1),(2698,2,'http://blog.csdn.net/lhy_ycu/article/details/40027109','Java设计模式菜鸟系列(二十二)中介者模式建模与实现','中介者模式(Mediator)：主要用来降低类与类之间的耦合的，因为如果类与类之间有依赖关系的话，不利于功能的拓展和维护，因为只要修改一个对象，其它关联的对象都得进行修改。\n中介者模式只需关心和Med...',1774,'csdn/java/1_0_1_2_1504265297.113574.html','2014-10-13 00:02','JAVE_LOVER',0,'java设计模式,uml,架构,设计模式,模式,',1,'http://my.csdn.net/JAVE_LOVER',1),(2699,2,'http://blog.csdn.net/lhy_ycu/article/details/40018967','Java设计模式菜鸟系列(十九)备忘录模式建模与实现','备忘录模式(Memento)： 主要目的是保存一个对象的某个状态，以便在适当的时候恢复对象。\n\nMemento设计模式用来备份一个对象的当前状态，当需要的时候，用这个备份来恢复这个对象在某一个时刻的状...',2263,'csdn/java/1_0_1_5_1504265298.139207.html','2014-10-12 16:21','JAVE_LOVER',0,'java设计模式,uml,架构,设计模式,模式,',2,'http://my.csdn.net/JAVE_LOVER',1),(2700,2,'http://blog.csdn.net/yelangjueqi/article/details/52345790','中介者模式','中介者模式',862,'csdn/java/1_1_1_0_1504265300.115889.html','2016-08-28 15:13','dadaxiaoxiaode',0,'java,design pattern,设计模式,中介者模式,框架设计,',0,'http://my.csdn.net/dadaxiaoxiaode',1),(2701,2,'http://blog.csdn.net/yelangjueqi/article/details/52336510','状态模式','状态模式',681,'csdn/java/1_1_1_1_1504265301.078278.html','2016-08-27 19:06','dadaxiaoxiaode',0,'java,design pattern,设计模式,状态模式,',0,'http://my.csdn.net/dadaxiaoxiaode',1),(2702,2,'http://blog.csdn.net/yelangjueqi/article/details/52297065','外观模式','外观模式',343,'csdn/java/1_1_1_5_1504265302.101505.html','2016-08-24 09:58','dadaxiaoxiaode',0,'java,pattern,设计模式,对象,结构,',1,'http://my.csdn.net/dadaxiaoxiaode',1),(2703,2,'http://blog.csdn.net/yelangjueqi/article/details/52219931','如何学好设计模式？','如何学好设计模式？',410,'csdn/java/1_1_1_10_1504265303.915875.html','2016-08-16 13:32','dadaxiaoxiaode',0,'java,pattern,设计模式,思路,',1,'http://my.csdn.net/dadaxiaoxiaode',1),(2704,2,'http://blog.csdn.net/yelangjueqi/article/details/52220042','简单工厂模式','简单工厂模式',345,'csdn/java/1_1_1_9_1504265304.142167.html','2016-08-16 13:49','dadaxiaoxiaode',0,'java,pattern,简单工厂模式,设计模式,',0,'http://my.csdn.net/dadaxiaoxiaode',1),(2705,2,'http://blog.csdn.net/yelangjueqi/article/details/52261001','抽象工厂模式','抽象工厂模式根据实例讲述',273,'csdn/java/1_1_1_8_1504265305.285235.html','2016-08-20 13:27','dadaxiaoxiaode',0,'java,pattern,设计模式,结构,编程,',0,'http://my.csdn.net/dadaxiaoxiaode',1),(2706,2,'http://blog.csdn.net/yelangjueqi/article/details/52275308','工厂方法模式','工厂方法模式',299,'csdn/java/1_1_1_7_1504265306.311073.html','2016-08-22 11:27','dadaxiaoxiaode',0,'java,pattern,设计模式,实例,结构,',0,'http://my.csdn.net/dadaxiaoxiaode',1),(2707,2,'http://blog.csdn.net/yelangjueqi/article/details/52312167','适配器模式','适配器模式',983,'csdn/java/1_1_1_4_1504265307.313251.html','2016-08-25 10:35','dadaxiaoxiaode',0,'java,pattern,设计模式,结构,适配器模式,',0,'http://my.csdn.net/dadaxiaoxiaode',1),(2708,2,'http://blog.csdn.net/yelangjueqi/article/details/52327432','策略模式','策略模式',1003,'csdn/java/1_1_1_2_1504265308.254673.html','2016-08-26 13:20','dadaxiaoxiaode',0,'java,pattern,设计模式,策略模式,算法,',0,'http://my.csdn.net/dadaxiaoxiaode',1),(2709,2,'http://blog.csdn.net/yelangjueqi/article/details/52275965','单例模式','单例模式',308,'csdn/java/1_1_1_6_1504265309.220137.html','2016-08-22 13:21','dadaxiaoxiaode',0,'java,pattern,设计模式,singleton,安全,',0,'http://my.csdn.net/dadaxiaoxiaode',1),(2710,2,'http://blog.csdn.net/yelangjueqi/article/details/52315250','模板方法模式','模板方法模式',543,'csdn/java/1_1_1_3_1504265310.346879.html','2016-08-25 15:49','dadaxiaoxiaode',0,'java,pattern,设计模式,模板方法模式,结构,',0,'http://my.csdn.net/dadaxiaoxiaode',1),(2711,2,'http://blog.csdn.net/u012706811/article/details/77096257','Java8学习记录(一)-函数式接口','实习前只是粗略的看了下Java8的一些基本语法,但是没有系统的学习过.在使用一段时间后决定系统的对其进行一次分析,加深对Java8函数式编程的理解,提高自己的编码技巧.另外kotlin崛起,感兴趣的朋...',205,'csdn/java/1_0_1_0_1504265315.624839.html','2017-08-11 13:06','u012706811',0,'函数式,函数式编程,java,',0,'http://my.csdn.net/u012706811',1),(2712,2,'http://blog.csdn.net/u012706811/article/details/77096261','Java8学习记录(二)-Stream原理','推荐一篇博文,很好的介绍了Stream的原理.本文对其进行一些补充更加详细的讲解.\n  作者: 李豪 \n  地址: https://github.com/CarpenterLee/JavaLambda...',240,'csdn/java/1_0_1_1_1504265316.419101.html','2017-08-11 13:06','u012706811',0,'java,函数式编程,',0,'http://my.csdn.net/u012706811',1),(2713,2,'http://blog.csdn.net/u012706811/article/details/68950852','Docker学习记录(一)-基本概念','Docker学习记录(一)-基本概念标签（空格分隔）： docker因为做的项目用到了docker,所以开始学习下这方面的知识.1.基本概念docker虚拟机:docker环境,docker的操作都要...',465,'csdn/java/1_0_1_8_1504265317.234873.html','2017-04-02 09:55','u012706811',0,'虚拟机,docker,',0,'http://my.csdn.net/u012706811',1),(2714,2,'http://blog.csdn.net/u012706811/article/details/68950903','Docker学习记录(二)-Dockerfile创建镜像','Docker学习记录(二)-Dockerfile创建镜像标签（空格分隔）： docker\n  个人独立博客: http://mrdear.cn\n本文学习Dcokerfile的基本命令,并且创建一个支持...',604,'csdn/java/1_0_1_9_1504265318.328153.html','2017-04-02 10:11','u012706811',0,'docker,',0,'http://my.csdn.net/u012706811',1),(2715,2,'http://blog.csdn.net/u012706811/article/details/52833682','Spring Boot学习记录(四)--问题记录','记录spring boot出现的一些奇奇怪怪的问题解决方案.1.文件上传,临时文件夹无效问题异常信息:Caused by: java.io.IOException: The temporary upl...',3025,'csdn/java/1_0_1_19_1504265319.165465.html','2016-10-16 22:32','u012706811',0,'spring,',2,'http://my.csdn.net/u012706811',1),(2716,2,'http://blog.csdn.net/u012706811/article/details/52988782','JavaWEB后端支付银联,支付宝,微信对接','JavaWEB后端支付银联,支付宝,微信对接标签（空格分隔）： java项目概述最近项目需要后端打通支付,所以对接部分做成了一个小模块. \n先说下项目要求: \n后端要对接银联无跳转Token支付,支付...',6727,'csdn/java/1_0_1_17_1504265320.234071.html','2016-10-31 23:32','u012706811',5,'java,支付,',2,'http://my.csdn.net/u012706811',1),(2717,2,'http://blog.csdn.net/u012706811/article/details/53218102','SpringDataJPA学习记录(三)--复杂查询的封装','SpringDataJPA学习记录(三)–复杂查询的封装标签（空格分隔）： springJPA1.使用CriteriaBuilder构建JPQL在UserRepositoryImpl中使用Criter...',5428,'csdn/java/1_0_1_16_1504265321.541024.html','2016-11-18 16:13','u012706811',2,'spring,jpa,',0,'http://my.csdn.net/u012706811',1),(2718,2,'http://blog.csdn.net/u012706811/article/details/53218083','SpringDataJPA学习记录(二)--增删改查','SpringDataJPA学习记录(二)–增删改查标签（空格分隔）： springJPA环境配置后,开始增删改查,查是用的最多的,放在最后.1.增加增加可以使用JpaRepository接口里面的sa...',5651,'csdn/java/1_0_1_15_1504265322.639915.html','2016-11-18 16:11','u012706811',1,'spring,jpa,',4,'http://my.csdn.net/u012706811',1),(2719,2,'http://blog.csdn.net/u012706811/article/details/68950926','redis学习记录(三)-redis中的数据结构','redis学习记录(三)-redis中的数据结构标签（空格分隔）： redis\n  个人独立博客:http://mrdear.cn\nRedis学习记录(一)–入门知识 \nRedis学习记录(二)–使用...',503,'csdn/java/1_0_1_6_1504265323.288971.html','2017-04-02 10:18','u012706811',0,'redis,',0,'http://my.csdn.net/u012706811',1),(2720,2,'http://blog.csdn.net/u012706811/article/details/68950937','redis学习记录(四)-SpringDataRedis分析','redis学习记录(四)-SpringDataRedis分析标签（空格分隔）： redis\n  个人独立博客: http://mrdear.cn\nRedis学习记录(一)–入门知识 \nRedis学习记...',1318,'csdn/java/1_0_1_7_1504265324.427872.html','2017-04-02 10:19','u012706811',0,'redis,',0,'http://my.csdn.net/u012706811',1),(2721,2,'http://blog.csdn.net/u012706811/article/details/53231598','Java学习记录--ThreadLocal使用案例','java学习记录–ThreadLocal使用案例标签（空格分隔）： java最近整理公司项目,发现不少写的比较糟糕的地方,比如下面这个:public class DateUtil {    priva...',1061,'csdn/java/1_0_1_13_1504265325.577254.html','2016-11-19 16:26','u012706811',2,'java,',1,'http://my.csdn.net/u012706811',1),(2722,2,'http://blog.csdn.net/u012706811/article/details/52868556','Linux下搭建JavaWEB环境','Linux下搭建JavaWEB环境标签（空格分隔）： web1.安装JDK8首先使用wget下载jdk的安装包.这里下载tar.gz格式的.wget http://download.oracle.co...',929,'csdn/java/1_0_1_18_1504265326.645923.html','2016-10-20 08:23','u012706811',0,'java web,linux,',0,'http://my.csdn.net/u012706811',1),(2723,2,'http://blog.csdn.net/u012706811/article/details/53432032','SpringMVC学习记录(九)--RequestContextHolder分析','SpringMVC学习记录(九)–RequestContextHolder分析标签（空格分隔）： javaWEB最近遇到的问题是在service获取request和response,正常来说在serv...',1593,'csdn/java/1_0_1_11_1504265327.428434.html','2016-12-02 10:18','u012706811',4,'spring mvc,',0,'http://my.csdn.net/u012706811',1),(2724,2,'http://blog.csdn.net/u012706811/article/details/76945038','Spring Security学习记录(一) -- 初识Spring Security','Spring Security是什么?Spring Security是一套认证授权框架,支持认证模式如HTTP BASIC 认证头 (基于 IETF RFC-based 标准),HTTP Digest...',293,'csdn/java/1_0_1_2_1504265328.541416.html','2017-08-08 22:56','u012706811',0,'spring,spring security,',0,'http://my.csdn.net/u012706811',1),(2725,2,'http://blog.csdn.net/u012706811/article/details/76945046','Spring Security学习记录(三) -- JSON Web Token实践(上)','JWT实际上与Spring Security没多大关系,本文打算使用Spring Security配合JWT这种方式完成用户的认证和授权.JSON Web Token(JWT),是一个开放安全的行业标...',291,'csdn/java/1_0_1_4_1504265329.528519.html','2017-08-08 22:57','u012706811',0,'spring security,spring,',0,'http://my.csdn.net/u012706811',1),(2726,2,'http://blog.csdn.net/u012706811/article/details/76945049','Spring Security学习记录(四) -- JSON Web Token实践(下)','前提接着上篇的内容,了解了JWT Token后,发现这东西就是一个可信的用户信息存储方式,那么可信的话就可以省去验证这个步骤,只有当需要用户的详细信息时候才会去DB中查询用户的详细信息.那么现在的流程...',332,'csdn/java/1_0_1_5_1504265330.542141.html','2017-08-08 22:58','u012706811',0,'spring security,spring,',0,'http://my.csdn.net/u012706811',1),(2727,2,'http://blog.csdn.net/u012706811/article/details/53218045','SpringDataJPA学习记录(一)--环境配置','SpringDataJPA学习记录(一)–环境配置标签（空格分隔）： springJPA1.maven配置首先需要spring相关架包,其实spring-data-jpa里面已经依赖了,如果你想用自己...',1170,'csdn/java/1_0_1_14_1504265331.497898.html','2016-11-18 16:09','u012706811',0,'jpa,spring,',0,'http://my.csdn.net/u012706811',1),(2728,2,'http://blog.csdn.net/u012706811/article/details/76945041','Spring Security学习记录(二) -- Spring Security的Filter','上一篇学习了Spring Security是如何拦截请求,并把请求转向到Filter链的,该篇就主要学习下这些Filter链的节点的作用.下面是之前配置的内容,本文也是对这些内容 的执行分析.\n   ...',270,'csdn/java/1_0_1_3_1504265332.68888.html','2017-08-08 22:57','u012706811',0,'spring security,spring,',0,'http://my.csdn.net/u012706811',1),(2729,2,'http://blog.csdn.net/u012706811/article/details/53420757','JavaWEB学习记录--Jenkins自动部署Maven项目','JavaWEB学习记录–Jenkins自动部署Maven项目标签（空格分隔）： javaWEB最近在研究jenkins的自动部署方案,有一些心得,记录下来以帮助其他人.如果对你有帮助记得点下赞哈.1....',835,'csdn/java/1_0_1_12_1504265333.401332.html','2016-12-01 14:04','u012706811',0,'jenkins,',2,'http://my.csdn.net/u012706811',1),(2730,2,'http://blog.csdn.net/u012706811/article/details/68950913','Docker学习记录(三)-构建非跨平台项目编译环境','Docker学习记录(三)-构建非跨平台项目编译环境标签（空格分隔）： docker\n  个人独立博客: http://mrdear.cn\n因为毕业设计的问题所以去学了docker,本文描述这个问题解...',488,'csdn/java/1_0_1_10_1504265334.472737.html','2017-04-02 10:14','u012706811',0,'docker,',0,'http://my.csdn.net/u012706811',1),(2731,2,'http://blog.csdn.net/u012706811/article/details/51223026','SpringMVC学习记录(八)--开发中的小问题','最近在做项目,用此贴记录遇到的一些小问题1.关于json首先需要引入3个包,我看网上有人说只需要两个,但是我没成功,引入3个之后才没问题的 \n关于json的返回格式,如果想增加内容的话最好用一个map...',2606,'csdn/java/1_0_3_0_1504265341.453147.html','2016-04-22 20:38','u012706811',0,'spring mvc,',3,'http://my.csdn.net/u012706811',1),(2732,2,'http://blog.csdn.net/u012706811/article/details/51184409','Mybatis学习记录(五)--整合spring开发Dao','mybatis和spring整合,也就是通过spring管理SqlSessionFactory、mapper接口。一.导入架包除了spring的包和mybatis的包,还需要导入两者的整合包,目前这个...',6028,'csdn/java/1_0_3_2_1504265342.50696.html','2016-04-18 22:41','u012706811',0,'mybatis,spring,',3,'http://my.csdn.net/u012706811',1),(2733,2,'http://blog.csdn.net/u012706811/article/details/51179383','Mybatis学习记录(四)--高级查询和缓存','这些都是连贯的学习笔记,所以有的地方因为之前都说过,所以也就没怎么写详细了,看不太明白的可以看看之前的笔记.一.高级查询高级查询主要是一对一查询,一对多查询,多对多查询1.一对一查询有用户和订单两个表...',8941,'csdn/java/1_0_3_3_1504265343.018769.html','2016-04-18 14:31','u012706811',2,'mybatis,缓存,',2,'http://my.csdn.net/u012706811',1),(2734,2,'http://blog.csdn.net/u012706811/article/details/51059419','SpringMVC学习记录(四)--文件上传与下载','学习一个框架少不了学习文件上传和下载,原理来说上传和下载都是基本二进制流的转换,所以搞清楚了这一点就很容易理解上传和下载了在使用springMVC进行系统实现时，springMVC默认的解析器里面是没...',12802,'csdn/java/1_0_3_11_1504265343.564121.html','2016-04-04 23:17','u012706811',5,'spring mvc,文件上传,文件下载,',10,'http://my.csdn.net/u012706811',1),(2735,2,'http://blog.csdn.net/u012706811/article/details/51056213','SpringMVC学习记录(一)--环境配置','在IDEA下配置SpringMVC环境是相当简单的,这里强烈推荐Intellij IDEA开发javaWEB简直完爆eclipse.1.创建项目创建项目很简单,直接选择SpringMVC即可,并且ID...',1777,'csdn/java/1_0_3_14_1504265344.553381.html','2016-04-04 15:04','u012706811',1,'spring mvc,intellij idea,',4,'http://my.csdn.net/u012706811',1),(2736,2,'http://blog.csdn.net/u012706811/article/details/51056864','SpringMVC学习记录(二)--controller和view的联系','对于SpringMVC来说,controller由两个部分构成,分别是分发器和控制器,分发器DispatcherServlet决定着请求使用哪个控制器,并且决定着控制器返回哪个视图,整体结构如下. \n...',3849,'csdn/java/1_0_3_13_1504265345.493061.html','2016-04-04 16:51','u012706811',5,'spring mvc,框架,',2,'http://my.csdn.net/u012706811',1),(2737,2,'http://blog.csdn.net/u012706811/article/details/51069537','SpringMVC学习记录(五)--表单标签','在使用SpringMVC的时候我们可以使用Spring封装的一系列表单标签，这些标签都可以访问到ModelMap中的内容。下面将对这些标签一一介绍。1.引入标签头文件在正式介绍SpringMVC的表单...',4329,'csdn/java/1_0_3_10_1504265346.536141.html','2016-04-06 00:32','u012706811',2,'spring mvc,标签,',2,'http://my.csdn.net/u012706811',1),(2738,2,'http://blog.csdn.net/u012706811/article/details/51100756','SpringMVC学习记录(七)--拦截器的使用','SpringMVC的请求如下面这种图所示: \n可以看出所有的请求都要通过Dispatherservlet来接收,然后通过Handlermapping来决定使用哪个控制器,再根据ViewResolver...',7759,'csdn/java/1_0_3_8_1504265347.457533.html','2016-04-08 23:46','u012706811',0,'spring mvc,拦截器,',0,'http://my.csdn.net/u012706811',1),(2739,2,'http://blog.csdn.net/u012706811/article/details/51079740','SpringMVC学习记录(六)--Validator验证','SpringMVC服务器验证一种是有两种方式,一种是基于Validator接口,一种是使用Annotaion JSR-303标准的验证,下面主要是学习这两种,工作中推荐后者,方便很多一.基于Valid...',15645,'csdn/java/1_0_3_9_1504265348.548521.html','2016-04-06 23:23','u012706811',2,'spring mvc,validator,',4,'http://my.csdn.net/u012706811',1),(2740,2,'http://blog.csdn.net/u012706811/article/details/51127121','Maven学习记录(一)--IDEA下环境配置','一.什么是Maven?Maven 是一个项目管理和整合工具。Maven 为开发者提供了一套完整的构建生命周期框架。开发团队几乎不用花多少时间就能够自动完成工程的基础构建配置，因为 Maven 使用了一...',7828,'csdn/java/1_0_3_7_1504265349.480813.html','2016-04-11 23:51','u012706811',0,'maven,项目管理,',2,'http://my.csdn.net/u012706811',1),(2741,2,'http://blog.csdn.net/u012706811/article/details/51222965','Mybatis学习记录(六)--开发中的小问题','最近开始做项目,期间遇到一些小问题,开此贴记录一下1.关于order by今天写一个sql查询语句,用了order by但是一直没效果,后来才发现用了#{}取值,mybatis使用这个的话对于Stri...',3897,'csdn/java/1_0_3_1_1504265350.723321.html','2016-04-22 20:26','u012706811',0,'mybatis,',1,'http://my.csdn.net/u012706811',1),(2742,2,'http://blog.csdn.net/u012706811/article/details/51147975','Mybatis学习记录(一)--Mybatis入门','一.传统数据库解决方案对于数据库的连接,在java中简单的就是直接使用JDBC来控制数据库.传统的jdbc方式按照以下几步来操作数据库.1.加载驱动 2. 创建并获取连接 3. 创建jdbc stat...',4851,'csdn/java/1_0_3_6_1504265351.607775.html','2016-04-13 23:36','u012706811',2,'mybatis,数据库,',3,'http://my.csdn.net/u012706811',1),(2743,2,'http://blog.csdn.net/u012706811/article/details/51156153','Mybatis学习记录(二)--Mybatis开发DAO方式','mybatis开发dao的方法通常用两种,一种是传统DAO的方法,一种是基于mapper代理的方法,下面学习这两种开发模式.写dao之前应该要对SqlSession有一个更加细致的了解一.mybati...',6902,'csdn/java/1_0_3_5_1504265352.617573.html','2016-04-14 23:34','u012706811',0,'mybatis,mapper,',2,'http://my.csdn.net/u012706811',1),(2744,2,'http://blog.csdn.net/u012706811/article/details/51057695','SpringMVC学习记录(三)--异常处理','学习springMVC从大牛那借鉴了很多经验,感谢ITEYE的大牛springMVC提供的异常处理主要有两种方式，一种是直接实现自己的HandlerExceptionResolver，当然这也包括使用...',2446,'csdn/java/1_0_3_12_1504265353.872469.html','2016-04-04 19:31','u012706811',0,'spring mvc,异常处理,',4,'http://my.csdn.net/u012706811',1),(2745,2,'http://blog.csdn.net/u012706811/article/details/51165791','Mybatis学习记录(三)--Mybatis配置文件详解','关于mybatis的配置文件,主要有两个,一个是SqlMapperConfig.xml文件一个是mapper.xml文件,分别对这两个进行深入全面学习.一.SqlMapperConfig.xml文件1...',7198,'csdn/java/1_0_3_4_1504265354.740856.html','2016-04-16 00:27','u012706811',0,'mybatis,配置,',1,'http://my.csdn.net/u012706811',1),(2746,2,'http://blog.csdn.net/u012706811/article/details/52454907','SpringBoot实战记录(一)--MarkdownViewTools','SpringBoot实战记录(一)–MarkdownViewTools标签（空格分隔）： spring-boot在公司开发过程中,后端人员维护接口文档,前端妹子只看文档,两者通过SVN中转,一来一去每...',1658,'csdn/java/1_0_2_0_1504265356.667764.html','2016-09-06 23:50','u012706811',0,'springboot,',2,'http://my.csdn.net/u012706811',1),(2747,2,'http://blog.csdn.net/u012706811/article/details/52185345','Spring Boot学习记录(二)--thymeleaf模板','Spring Boot学习记录(二)–thymeleaf模板标签（空格分隔）： spring-boot自从来公司后都没用过jsp当界面渲染了,因为前后端分离不是很好,反而模板引擎用的比较多,thyme...',58732,'csdn/java/1_0_2_3_1504265357.661839.html','2016-08-11 18:20','u012706811',15,'springboot,',18,'http://my.csdn.net/u012706811',1),(2748,2,'http://blog.csdn.net/u012706811/article/details/52168339','Spring Boot学习记录(一)--环境搭建','Spring Boot学习记录(一)–环境搭建标签（空格分隔）： spring-boot最近趁着下班闲时间学习spring-boot,记录下学习历程,最后打算实战一个API管理平台,下面开始环境配置....',5805,'csdn/java/1_0_2_4_1504265358.69176.html','2016-08-10 09:28','u012706811',4,'springboot,',3,'http://my.csdn.net/u012706811',1),(2749,2,'http://blog.csdn.net/u012706811/article/details/51813462','近期javaWEB项目总结','找工作前把最近做的项目总结一下,面试的时候也好说说,虽然都不是什么很难得项目,但是对于最近学习的知识做到了一个很好的总结和巩固.1.微信后台开发这是学校老师接的一个项目,然后找我来做的,顺便吐槽下,老...',4507,'csdn/java/1_0_2_12_1504265359.720861.html','2016-07-03 00:14','u012706811',1,'java web,',2,'http://my.csdn.net/u012706811',1),(2750,2,'http://blog.csdn.net/u012706811/article/details/51245579','SSM实战记录(一)--一个大体的分页流程','这是一个使用springMVC+spring+mybatis+bootstrap table做的分页流程,网上之前搜到的类似的教程实在太少了,所以就想着写一个大体的过程(没写的很详细),能帮助到一些人...',13551,'csdn/java/1_0_2_19_1504265360.730294.html','2016-04-25 21:29','u012706811',6,'bootstrap,分页,spring mvc,',3,'http://my.csdn.net/u012706811',1),(2751,2,'http://blog.csdn.net/u012706811/article/details/51404383','JSON工具学习记录--FastJSON','最近做项目,总是与json打交道,在用了即可json工具后,个人认为fastJson最好用,很方便,API也清晰可见,所以记录下使用方法,给需要的人提供帮助.(部分摘抄自网络)一.API入口Fastj...',5682,'csdn/java/1_0_2_18_1504265361.690523.html','2016-05-14 09:55','u012706811',1,'json,',1,'http://my.csdn.net/u012706811',1),(2752,2,'http://blog.csdn.net/u012706811/article/details/51448996','Log4j使用学习记录','这是一篇Log4j使用教程,并不是一篇配置文件详解教程,主要的使用是按照需求来使用,所以随着我的需求增加会不断更新使用方法的.1.环境配置直接导入JAR就可以了,这里使用maven导入 \n      ...',3779,'csdn/java/1_0_2_17_1504265362.842853.html','2016-05-18 23:40','u012706811',0,'log4j,',4,'http://my.csdn.net/u012706811',1),(2753,2,'http://blog.csdn.net/u012706811/article/details/51567129','Maven学习记录(三)--实战引入Spring支持','一.创建项目maven项目在IDEA下创建是相当容易然后给定项目坐标,确定即可二.完善项目目录结构IDEA创建完项目结构和标准的maven项目有些差异,这个时候就需要我们手动调整一下更改前结构 \n更改...',11147,'csdn/java/1_0_2_15_1504265364.75726.html','2016-06-02 14:49','u012706811',0,'maven,',4,'http://my.csdn.net/u012706811',1),(2754,2,'http://blog.csdn.net/u012706811/article/details/51564962','Maven学习记录(二)--Maven核心概念','转载自 http://www.cnblogs.com/xdp-gacl/p/4051819.html   \n博主写的很好,所以直接转载过来了    一、Maven坐标\n1.1、什么是坐标？\n　　在平面...',943,'csdn/java/1_0_2_16_1504265364.802409.html','2016-06-02 11:14','u012706811',0,'maven,',3,'http://my.csdn.net/u012706811',1),(2755,2,'http://blog.csdn.net/u012706811/article/details/51570805','Maven学习记录(四)--多模块开发配置','多模块的好处就是协同开发,对于大的项目这样分工可以提高效率,同时减轻代码耦合,看起来也一目了然,maven多模块还解决了不同人开发使用的架包版本冲突等问题一.创建项目1.创建父级容器不要使用模板,直接...',3653,'csdn/java/1_0_2_14_1504265365.665069.html','2016-06-02 22:40','u012706811',0,'maven,',1,'http://my.csdn.net/u012706811',1),(2756,2,'http://blog.csdn.net/u012706811/article/details/51912474','JavaWEB小知识学习--验证码生成','验证码是现在必不可少的一个小功能,可以放爆破,防垃圾请求,总之还是有一定约束力的SpringMVC实现验证码功能主要是提供一个URL请求,该请求对应的方法可以生成一张验证码图片,然后把该验证码数值存入...',7136,'csdn/java/1_0_2_11_1504265366.809937.html','2016-07-14 20:10','u012706811',18,'java web,spring mvc,',7,'http://my.csdn.net/u012706811',1),(2757,2,'http://blog.csdn.net/u012706811/article/details/51927104','JavaWEB小知识学习--Java Mail','本文主要使用java mail和spring mail来发送邮件教程,比较啰嗦,因为除了发邮件还写了其他工具类,不过很详细.1.使用java mail发送邮件首先把相关账号密码信息保存到一个prope...',3015,'csdn/java/1_0_2_9_1504265368.077865.html','2016-07-16 23:28','u012706811',0,'java web,',4,'http://my.csdn.net/u012706811',1),(2758,2,'http://blog.csdn.net/u012706811/article/details/51923061','JavaWEB小知识学习--原生AJAX','AJAX的作用局部刷新,作为提升页面体验还是很重要的,不过大家都说对SEO不是很友好,一直使用jQuery封装的AJAX,没有了解过原生的是什么样子的,特此学习下,补充知识1.原生AJAX的Get方式...',1592,'csdn/java/1_0_2_10_1504265368.857493.html','2016-07-16 10:23','u012706811',1,'ajax,',1,'http://my.csdn.net/u012706811',1),(2759,2,'http://blog.csdn.net/u012706811/article/details/52054153','Jersey学习记录(一)--环境配置','最近公司项目在用jersey做api接口,遂来学习一下,学习的第一步,先运行起来一个项目,也就是环境配置好.1.环境配置对于IDEA来说可以直接引用包方式建立,这样的话在新建项目的时候勾选上WEB A...',2279,'csdn/java/1_0_2_8_1504265369.890049.html','2016-07-28 12:19','u012706811',0,'jersey,',0,'http://my.csdn.net/u012706811',1),(2760,2,'http://blog.csdn.net/u012706811/article/details/52054156','Jersey学习记录(二)--请求映射和页面传值','jersey的webservice开发基本上都是使用注解,接下来学习常用注解.一.根资源类1.@PATH注解@Path(\"/hello\")\npublic class HelloWorldControl...',2791,'csdn/java/1_0_2_7_1504265370.857547.html','2016-07-28 12:20','u012706811',0,'jersey,',0,'http://my.csdn.net/u012706811',1),(2761,2,'http://blog.csdn.net/u012706811/article/details/52054157','Jersey学习记录(三)--过滤拦截器与异常处理','本文记录全局异常返回,过滤器,拦截器.一.全局异常处理器webservice定义全局返回错误码是很重要的一个功能,jersey正好就能实现这一功能.整个流程就是当jersey托管的类发现了异常,抛出给...',5792,'csdn/java/1_0_2_6_1504265371.854454.html','2016-07-28 12:20','u012706811',10,'jersey,',3,'http://my.csdn.net/u012706811',1),(2762,2,'http://blog.csdn.net/u012706811/article/details/51726591','nginx学习记录--安装和转发到tomcat','有一段时间没写博客了,因为接了几个项目,并且临近期末,还要准备考试,比较忙.最近项目上线,项目主要是微信智能硬件管理,所以需要两个服务器,一个用来处理微信上传的消息,一个用来处理智能设备上传的消息,所...',3669,'csdn/java/1_0_2_13_1504265372.909351.html','2016-06-21 13:21','u012706811',0,'nginx,',0,'http://my.csdn.net/u012706811',1),(2763,2,'http://blog.csdn.net/u012706811/article/details/52190847','JSON工具学习记录--FastJSON循环引用问题','JSON工具学习记录–FastJSON循环引用问题标签（空格分隔）： fastjson最近基于他人项目做二次开发,遇到了循环引用的问题,简单来说A引用了B,B引用了C,C引用了A,那么转换json就会...',2311,'csdn/java/1_0_2_1_1504265374.034113.html','2016-08-12 13:33','u012706811',0,'json,',1,'http://my.csdn.net/u012706811',1),(2764,2,'http://blog.csdn.net/u012706811/article/details/52198677','Spring Boot学习记录(三)--整合Mybatis','Spring Boot学习记录(三)–整合Mybatis标签（空格分隔）： spring-boot控制器,视图解析器前面两篇都已弄好,这一篇学习持久层框架整合.1.数据源配置数据源使用druid,ma...',8198,'csdn/java/1_0_2_2_1504265374.932814.html','2016-08-13 12:18','u012706811',1,'springboot,',9,'http://my.csdn.net/u012706811',1),(2765,2,'http://blog.csdn.net/u012706811/article/details/52142701','SSM实战记录(二)--在线OJ系统','简介: \n学习SSM框架后,做出来的一个比较系统的项目,前端,数据库,后台全部自己完成,借鉴了很多前辈的经验,完成后颇有成就感,当然也学到了很多东西,至于能不能上线给学校用,还要看领导了…项目主要是类...',1918,'csdn/java/1_0_2_5_1504265375.974983.html','2016-08-07 15:26','u012706811',4,'java web,',6,'http://my.csdn.net/u012706811',1),(2766,1,'http://blog.csdn.net/u013239111/article/details/77719019','设计模式-策略模式','介绍在项目开发中，经常会碰到需要根据不同的条件采用不同的算法，但是这些不同的算法又有些类似。例如商城下单中的打折功能（打八折、五折、一折），满减功能等等。 \n地图中根据采用不同的出行方式计算时间、金额...',10,'csdn/mode/37_1_1_0_1504396836.119458.html','2017-09-02 18:08','u013239111',0,'设计模式,算法,策略模式,反射,简单工厂,',0,'http://my.csdn.net/u013239111',1),(2767,1,'http://blog.csdn.net/u013239111/article/details/77824736','设计模式-状态模式','介绍状态模式和策略模式是一对双胞胎，他们都属于行为设计模式。状态模式和策略模式都是为具有多种可能情形设计的模式，把不同的处理情形抽象为一个相同的接口，符合对扩展开放，对修改封闭的原则。策略模式封装了一...',114,'csdn/mode/37_0_1_0_1504569660.601471.html','2017-09-04 19:08','u013239111',0,'设计模式,对象,扩展,开放,状态模式,',0,'http://my.csdn.net/u013239111',1),(2768,1,'http://blog.csdn.net/u013239111/article/details/77719043','设计模式-享元模式','介绍享元模式简单的来说就是把一些重复的抽取出来提供给其他类使用。它使用共享物件，用来尽可能减少内存使用量以及分享资讯给尽可能多的相似物件；它适合用于当大量物件只是重复因而导致无法令人接受的使用大量内存...',175,'csdn/mode/37_0_1_1_1504569661.633582.html','2017-09-03 19:23','u013239111',0,'设计模式,享元模式,数据结构,对象,',0,'http://my.csdn.net/u013239111',1),(2769,1,'http://blog.csdn.net/u013239111/article/details/77453337','设计模式-原型模式','介绍原型模式（Prototype Pattern）是用于创建重复的对象，同时又能保证性能。这种类型的设计模式属于创建型模式，它提供了一种创建对象的最佳方式。 \n原型模式多用于创建复杂的或者耗时的实例，...',201,'csdn/mode/37_0_1_2_1504569662.539871.html','2017-09-03 16:05','u013239111',0,'prototype,设计模式,对象,',0,'http://my.csdn.net/u013239111',1),(2770,3,'http://blog.csdn.net/qq_35246620/article/details/77823968','史上最简单的 MySQL 教程（三十三）「视图（上）」','视图视图：view，是一种有结构（有行有列），但没有结果（结构中不真实存放数据）的虚拟表，虚拟表的结构来源不是自己定义的，而是从对应的基表（视图的数据来源）中产生的。创建视图首先，给出创建视图的基本语...',324,'csdn/mysql/17_1_1_0_1504569767.51514.html','2017-09-03 17:43','qq_35246620',0,'view,mysql,视图,数据库,',1,'http://my.csdn.net/qq_35246620',1),(2771,7,'http://blog.csdn.net/androidlushangderen/article/details/40918317','Redis源码分析（三十六）--- Redis中的11大优秀设计','坚持了一个月左右的时间，从最开始的对Redis的代码做分类，从struct结构体分析开始，到最后分析main主程序结束，中间，各大模块的代码逐个击破，学习，总之，收获了非常多，好久没有这么久的耐心把一...',11088,'csdn/redis/1_0_1_0_1504578435.591825.html','2014-11-08 10:16','Androidlushangderen',6,'nosql数据库,源码,redis,框架,设计,',6,'http://my.csdn.net/Androidlushangderen',1),(2772,1,'http://blog.csdn.net/u013239111/article/details/77824738','设计模式-装饰模式','介绍装饰器模式（Decorator Pattern）允许向一个现有的对象添加新的功能，同时又不改变其结构。 \n继承机制同样可以给现有类增加功能，通过继承一个现有类可以使得子类在拥有自身方法的同时还拥有...',178,'csdn/mode/37_7_1_0_1504742538.707862.html','2017-09-05 16:28','u013239111',0,'设计模式,继承,结构,装饰模式,',0,'http://my.csdn.net/u013239111',1),(2773,3,'http://blog.csdn.net/erlian1992/article/details/77869100','Union和Union All的区别','假设我们有一个表Student，包括以下字段与数据： [c-sharp] view plain copy drop table student;    create table student  ( ...',126,'csdn/mysql/17_2_1_0_1504742555.28375.html','2017-09-06 17:25','erlian1992',0,'mysql,数据库,联合查询,union,union all,',1,'http://my.csdn.net/erlian1992',1),(2774,3,'http://blog.csdn.net/erlian1992/article/details/77854486','mysql悲观锁总结和实践','最近学习了一下数据库的悲观锁和乐观锁，根据自己的理解和网上参考资料总结如下： 悲观锁介绍（百科）：悲观锁，正如其名，它指的是对数据被外界（包括本系统当前的其他事务，以及来自外部系统的事务处理）修改持保...',154,'csdn/mysql/17_2_1_3_1504742556.145474.html','2017-09-05 18:05','erlian1992',0,'mysql,数据库,悲观锁,乐观锁,锁机制,',0,'http://my.csdn.net/erlian1992',1),(2775,3,'http://blog.csdn.net/erlian1992/article/details/77859810','SQL语句优化技巧','1、应尽量避免在 where 子句中使用!=或2、对查询进行优化，应尽量避免全表扫描，首先应考虑在 where 及 order by 涉及的列上建立索引。3、应尽量避免在 where 子句中对字段进行...',222,'csdn/mysql/17_2_1_1_1504742557.120616.html','2017-09-05 23:05','erlian1992',0,'优化,sql,数据库性能优化,SQL语句优化,索引优化,',0,'http://my.csdn.net/erlian1992',1),(2776,3,'http://blog.csdn.net/erlian1992/article/details/77854501','mysql乐观锁总结和实践','上一篇文章《MySQL悲观锁总结和实践》谈到了MySQL悲观锁，但是悲观锁并不是适用于任何场景，它也有它存在的一些不足，因为悲观锁大多数情况下依靠数据库的锁机制实现，以保证操作最大程度的独占性。如果加...',155,'csdn/mysql/17_2_1_2_1504742558.153256.html','2017-09-05 18:06','erlian1992',0,'mysql,数据库,乐观锁,悲观锁,事务,',0,'http://my.csdn.net/erlian1992',1),(2777,3,'http://blog.csdn.net/number1killer/article/details/77897855','mysql七表查询实例（二）','而这个语句，这个结果的出现令我彻底蒙圈了。最后想了一个以毒攻毒的办法终于将之拿下。\n然而并没有什么卵用......当然还是有正解的：出于科学严谨的态度（呃，好吧，是偶搞错太多次了，怕了），让我们一起来...',198,'csdn/mysql/17_4_1_0_1505001635.936508.html','2017-09-08 19:59','number1killer',0,'mysql,嵌套查询,求平均值导致的数值类型转变,奇葩,七表,',0,'http://my.csdn.net/number1killer',1),(2778,3,'http://blog.csdn.net/number1killer/article/details/77896758','mysql七表查询实例（一）','开始之前先说点有趣的事：经常听说没有主键就无法进行多表查询，其实这太过于片面了。实际上有些情况没有主键也是可以进行多表查询的（例一，所用到的表格也都是下面的表格，先来个4表查询热热身）。\nmysql>...',241,'csdn/mysql/17_4_1_1_1505001637.016838.html','2017-09-08 18:35','number1killer',0,'mysql,实例,多表,联合查询,主键,',0,'http://my.csdn.net/number1killer',1),(2779,3,'http://blog.csdn.net/number1killer/article/details/77799941','MYSQL 中group by，order by用法详解及其特殊用法','我们可以看到GROUP BY 是优先对跟在他后面的第一个字段进行排序的并且也只对这一个字段进行排序，而且如果GROUP BY 后面跟的字段不只一个的话，那么GROUP BY就不会再对排序后的结果进行去...',56,'csdn/mysql/17_4_1_9_1505001638.053811.html','2017-09-02 11:14','number1killer',0,'mysql,order by,group by,详解,用法,',0,'http://my.csdn.net/number1killer',1),(2780,3,'http://blog.csdn.net/number1killer/article/details/77839529','mysql更新，修改语句汇总--update set,alter','update set 语句是mysql最常用的修改和更新语句。\n其语法为：\nupdate +表名 +set+ 变更后的信息 +where子句；\nalter语句也具有修改的功能。而且alter的功能远远...',59,'csdn/mysql/17_4_1_15_1505001640.079859.html','2017-09-04 17:24','number1killer',0,'mysql,更新,alter,update set,修改,',0,'http://my.csdn.net/number1killer',1),(2781,3,'http://blog.csdn.net/number1killer/article/details/77835755','mysql的4种复制操作详解（下篇）','3.复制旧表的数据到新表（假设两个表的结构一样）：\n4.复制旧表的数据到新表（假设两个表的结构不一样）：',42,'csdn/mysql/17_4_1_13_1505001640.150769.html','2017-09-04 11:32','number1killer',0,'mysql,插入数据,表结构,新表,复制,',0,'http://my.csdn.net/number1killer',1),(2782,3,'http://blog.csdn.net/number1killer/article/details/77834693','mysql的4种复制操作详解（上篇）','1.只复制表结构到新表\n \n 2.复制表结构及数据到新表\n \n \n \n \n \n \n \n \n \n \n \n \n\n\n\n1 CREATE TABLE 新表 LIKE 旧表 ;\n \n \n \n \n \n \n \n \n...',51,'csdn/mysql/17_4_1_14_1505001641.068557.html','2017-09-04 11:02','number1killer',0,'mysql,复制,操作,语句,结构,',0,'http://my.csdn.net/number1killer',1),(2783,3,'http://blog.csdn.net/number1killer/article/details/77833593','mysql中几个不用结尾符号也能够执行的语句','众所周知mysql执行每一个可执行语句都是以分号结尾的,也就是说mysql识别语句是否结束，是根据分号决定的。\r\n当然，你也可以用DELIMITER自定义一个语句的结束符号。\r\n不知道大家有没有发现，...',55,'csdn/mysql/17_4_1_10_1505001642.031782.html','2017-09-04 10:26','number1killer',0,'mysql,分号,delimiter,use,exit,',0,'http://my.csdn.net/number1killer',1),(2784,3,'http://blog.csdn.net/number1killer/article/details/77841565','mysql中insert into语句详解（上）','insert into是mysql中最常用的插入语句，它有5种写法。下面让我们一起来看一看吧：\n1向原表中某些字段中插入一条记录。\n语法：insert into +表名（表中的字段，，）value（字...',37,'csdn/mysql/17_4_1_12_1505001644.163164.html','2017-09-04 20:35','number1killer',0,'mysql,insert into,插入,数字,原表,',0,'http://my.csdn.net/number1killer',1),(2785,3,'http://blog.csdn.net/number1killer/article/details/77883676','mysql中条件限制语句（二）','可以看出双百分号%%是全匹配，可以匹配表中的所有记录。那么，即便是NULL值也能够匹配吗？\n可以看出当作用于多列的时候distinct就不再返回唯一记录了。\n另外distinct还可以和一些数学运算的...',197,'csdn/mysql/17_4_1_2_1505001645.161407.html','2017-09-07 16:42','number1killer',0,'mysql,like,全匹配,distinct,limit,',0,'http://my.csdn.net/number1killer',1),(2786,3,'http://blog.csdn.net/number1killer/article/details/77875386','mysql最大值，最小值，总和查询与计数查询','我们可以看到尽管SNAME有很多记录，但是如果用SUM去查询它的总和，虽然语法上，并没有错误，但是结果显然是\"错误的\"。\n而换用count来对SNAME来进行计数则没有问题。当然，NULL记录是不会被...',35,'csdn/mysql/17_4_1_5_1505001645.585119.html','2017-09-06 23:26','number1killer',0,'mysql,最大值,最小值,总和,计数,',0,'http://my.csdn.net/number1killer',1),(2787,3,'http://blog.csdn.net/number1killer/article/details/77862638','mysql删除语句大全（上）','1.drop语句。可以用来删除数据库和表。2.delete语句。用来删除表中的字段：\nA通过where子句来指定删除表中的某个记录：注意：如果delete语句中没有加入where就会把表中的所有记录全...',45,'csdn/mysql/17_4_1_7_1505001646.441938.html','2017-09-06 09:58','number1killer',0,'mysql,drop,delete,truncate,删除,',0,'http://my.csdn.net/number1killer',1),(2788,3,'http://blog.csdn.net/number1killer/article/details/77775399','mysql中char与varchar的区别分析','char是一种固定长度的类型，varchar则是一种可变长度的类型 \n　　char(M)类型的数据列里，每个值都占用M个字节，如果某个长度小于M，MySQL就会在它的右边用空格字符补足．（在检索操作中...',80,'csdn/mysql/17_4_1_8_1505001647.319842.html','2017-09-01 17:19','number1killer',0,'mysql,char,varchar,区别,分析,',0,'http://my.csdn.net/number1killer',1),(2789,3,'http://blog.csdn.net/number1killer/article/details/77866298','mysql删除语句大全（下）','4.update set 语句是mysql最常用的修改和更新语句，它更新信息时也会覆盖（删除）旧的信息。\n注意：如果变更信息后面没有加where子句指定其变更的内容，那么update set语句就会把...',124,'csdn/mysql/17_4_1_6_1505001648.643907.html','2017-09-06 14:48','number1killer',0,'mysql,update set,alter drop,索引,删除,',0,'http://my.csdn.net/number1killer',1),(2790,3,'http://blog.csdn.net/number1killer/article/details/77878754','mysql中条件限制语句（一）','显然where的功能要比in强大得多，因此where的命令优先级也比高一些。而相同条件下where的搜寻范围也比in要大一点---毕竟功能多了，要搜寻的东西就多了。所以，相同的查询条件下where的效...',122,'csdn/mysql/17_4_1_3_1505001649.911091.html','2017-09-07 11:01','number1killer',0,'mysql,between and,and,or,in,',0,'http://my.csdn.net/number1killer',1),(2791,3,'http://blog.csdn.net/number1killer/article/details/77878047','mysql加减乘除，求余，求平均值,查询不等于某数值','1.mysql加减乘除操作：\r\nmysql> select score,score+5,score-5,score*5,score/5 from 4a;\r\n+-------+---------+---...',98,'csdn/mysql/17_4_1_4_1505001650.292154.html','2017-09-07 10:25','number1killer',0,'mysql,加减乘除,求余,求平均值,求不等于某数值,',0,'http://my.csdn.net/number1killer',1),(2792,1,'http://blog.csdn.net/u013239111/article/details/77870085','设计模式-观察者模式','在我们日常生活中，有些人会有订阅报纸的经历，当我们订阅时，都能定时的收到报纸，当我么取消订阅时，就不会再收到报纸。 \n当然，互联网普及之后，报纸逐渐减少。但是类似的也有许多，例如微信的公众号，当我们订...',183,'csdn/mode/37_5_1_0_1505001777.996892.html','2017-09-09 13:15','u013239111',0,'设计模式,观察者模式,java,',0,'http://my.csdn.net/u013239111',1),(2793,1,'http://blog.csdn.net/u013239111/article/details/77870086','设计模式-中介者模式','在我们的日常生活中经常需要购买各种各样的东西，房子、车子、生活用品等等。那么我们并不会对各个产品都了解，所以销售人员应运而生，他们了解产品，然后他们根据你的需求在向你们推荐符合你们要求的产品。这些销售...',200,'csdn/mode/37_4_1_0_1505174526.090284.html','2017-09-10 21:09','u013239111',0,'设计模式,中介者模式,java设计模式,解耦,',0,'http://my.csdn.net/u013239111',1),(2794,3,'http://blog.csdn.net/qq_35246620/article/details/77914472','史上最简单的 MySQL 教程（三十四）「视图（下）」','视图操作视图操作：视图是可以进行数据写操作的，只不过有很多限制。',257,'csdn/mysql/17_3_1_0_1505174540.535324.html','2017-09-09 12:52','qq_35246620',0,'mysql,view,视图,数据库,',1,'http://my.csdn.net/qq_35246620',1),(2795,2,'http://blog.csdn.net/qq_19558705/article/details/77247912','架构师入门笔记八 并发框架Disruptor场景应用','架构师入门笔记八 并发框架Disruptor场景应用\r\n今天用一个停车场问题来加深对Disruptor的理解。一个有关汽车进入停车场的问题。当汽车进入停车场时，系统首先会记录汽车信息。同时也会发送消息...',395,'csdn/java/37_1_1_0_1505260887.14977.html','2017-09-09 16:31','qq_19558705',0,'架构师,Disruptor,',1,'http://my.csdn.net/qq_19558705',1),(2796,2,'http://blog.csdn.net/qq_19558705/article/details/77116949','架构师入门笔记七 并发框架Disruptor快速入门','架构师入门笔记七 并发框架Disruptor快速入门\r\n1. 什么是Disruptor\r\nDisruptor它是一个高性能的异步处理的开源并发框架，能够在无锁的情况下实现网络的Queue并发操作。可以...',397,'csdn/java/37_1_1_1_1505260888.359308.html','2017-09-01 21:46','qq_19558705',0,'架构师,Disruptor,',1,'http://my.csdn.net/qq_19558705',1),(2797,1,'http://blog.csdn.net/vtopqx/article/details/78052976','Java设计模式_(结构型)_适配器模式','引用百科	在计算机编程中，适配器模式（有时候也称包装样式或者包装）将一个类的接口适配成用户所期待的。一个适配允许通常因为接口不兼容而不能在一起工作的类工作在一起，做法是将类自己的接口包裹在一个已存在的...',116,'csdn/mode/37_2_1_0_1506038455.68991.html','2017-09-21 15:54','vtopqx',0,'java设计模式,设计模式,适配器模式,',0,'http://my.csdn.net/vtopqx',1),(2798,1,'http://blog.csdn.net/vtopqx/article/details/78042555','Java设计模式_(创建型)_建造者模式','引用百科   建造者模式是设计模式的一种，将一个复杂对象的构建与它的表示分离，使得同样的构建过程可以创建不同的表示。实用范围1 当创建复杂对象的算法应该独立于该对象的组成部分以及它们的装配方式时。2 ...',262,'csdn/mode/37_2_1_1_1506038456.749904.html','2017-09-20 16:40','vtopqx',0,'设计模式,java设计模式,建造者模式,',0,'http://my.csdn.net/vtopqx',1),(2799,1,'http://blog.csdn.net/vtopqx/article/details/78032366','Java设计模式_(创建型)_原型模式','引用百科：用原型实例指定创建对象的种类，并且通过拷贝这些原型创建新的对象。Prototype原型模式是一种创建型设计模式，Prototype模式允许一个对象再创建另外一个可定制的对象，根本无需知道任何...',297,'csdn/mode/37_2_1_2_1506038457.690015.html','2017-09-19 17:19','vtopqx',0,'java,java设计模式,原型模式,',1,'http://my.csdn.net/vtopqx',1),(2800,1,'http://blog.csdn.net/vtopqx/article/details/77852523','Java设计模式_(创建型)_单例模式','1  概述单例模式，是一种常用的软件设计模式。在它的核心结构中只包含一个被称为单例的特殊类。通过单例模式可以保证系统中一个类只有一个实例。即一个类只有一个对象实例.数学与逻辑学中，singleton定...',120,'csdn/mode/37_2_1_4_1506038458.703667.html','2017-09-05 15:57','vtopqx',0,'设计模式,java 设计模式,单例模式,',1,'http://my.csdn.net/vtopqx',1),(2801,1,'http://blog.csdn.net/vtopqx/article/details/78024523','Java设计模式_(创建型)_抽象工厂模式','引用百科：	抽象工厂模式是所有形态的工厂模式中最为抽象和最具一般性的一种形态。抽象工厂模式是指当有多个抽象角色时，使用的一种工厂模式。抽象工厂模式可以向客户端提供一个接口，使客户端在不必指定产品的具体...',93,'csdn/mode/37_2_1_6_1506038459.745736.html','2017-09-18 22:20','vtopqx',0,'抽象工厂模式,设计模式,java抽象工厂,',1,'http://my.csdn.net/vtopqx',1),(2802,1,'http://blog.csdn.net/vtopqx/article/details/77968734','Java设计模式_(创建型)_工厂模式','引用百科：  	工厂模式是我们最常用的实例化对象模式了，是用工厂方法代替new操作的一种模式。著名的Jive论坛 ,就大量使用了工厂模式，工厂模式在Java程序系统可以说是随处可见。因为工厂模式就相当...',56,'csdn/mode/37_2_1_5_1506038460.410604.html','2017-09-13 18:09','vtopqx',0,'java,java设计模式,工厂模式,',1,'http://my.csdn.net/vtopqx',1),(2803,1,'http://blog.csdn.net/vtopqx/article/details/77852319','Java设计模式_描述','概述：设计模式（Design Pattern）是一套被反复使用、多数人知晓的、经过分类的、代码设计经验的总结。使用设计模式的目的：为了代码可重用性、让代码更容易被他人理解、保证代码可靠性。 设计模式使...',80,'csdn/mode/37_2_1_3_1506038461.703039.html','2017-09-05 15:50','vtopqx',0,'设计模式,java 设计模式,23中设计模式,',1,'http://my.csdn.net/vtopqx',1),(2804,2,'http://blog.csdn.net/qq_19558705/article/details/77678432','架构师入门笔记十 Netty5快速入门','架构师入门笔记十 Netty5快速入门\n\n\n在了解IO，NIO，AIO知识后，学习Netty5便会轻松很多，本章节主要介绍Netty是如何接收，反馈数据和拆包粘包的问题。\n\n\n\n1 Netty基础知识...',29,'csdn/java/37_3_1_0_1506094316.615497.html','2017-09-22 15:40','qq_19558705',0,'架构师,netty5,',1,'http://my.csdn.net/qq_19558705',1),(2805,1,'http://blog.csdn.net/vtopqx/article/details/78063578','Java设计模式_(结构型)_组合模式','引用百科组合模式，将对象组合成树形结构以表示“部分-整体”的层次结构，组合模式使得用户对单个对象和组合对象的使用具有一致性。掌握组合模式的重点是要理解清楚 “部分/整体” 还有 ”单个对象“ 与 \"组...',186,'csdn/mode/37_0_1_0_1506211257.721213.html','2017-09-22 15:37','vtopqx',0,'java 设计模式,23中设计模式,组合模式,java组合模式,',1,'http://my.csdn.net/vtopqx',1),(2806,1,'http://blog.csdn.net/vtopqx/article/details/78085256','Java设计模式_(结构型)_外观模式','引用百科外观模式（Facade），为子系统中的一组接口提供一个一致的界面，定义一个高层接口，这个接口使得这一子系统更加容易使用。Facade这个外观类为子系统提供一个共同的对外接口Clients客户对...',43,'csdn/mode/37_5_1_0_1506384042.670113.html','2017-09-25 14:54','vtopqx',0,'23中设计模式,java,java设计模式,外观模式,门面模式,',0,'http://my.csdn.net/vtopqx',1),(2807,1,'http://blog.csdn.net/vtopqx/article/details/78107933','Java设计模式_(结构型)_代理模式','引用百科即Proxy Pattern，23种常用的面向对象软件的设计模式之一。代理模式的定义：为其他对象提供一种代理以控制对这个对象的访问。在某些情况下，一个对象不适合或者不能直接引用另一个对象，而代...',180,'csdn/mode/37_2_1_0_1506556848.581732.html','2017-09-26 22:44','vtopqx',0,'java设计模式,23中设计模式,代理模式,',0,'http://my.csdn.net/vtopqx',1),(2808,1,'http://blog.csdn.net/vtopqx/article/details/78091917','Java设计模式_(结构型)_桥接模式','引用百科	桥接模式是将抽象部分与它的实现部分分离，使它们都可以独立地变化。它是一种对象结构型模式，又称为柄体(Handle and Body)模式或接口(Interface)模式。在软件系统中，某些类...',46,'csdn/mode/37_2_1_1_1506556849.585141.html','2017-09-26 09:44','vtopqx',0,'23中设计模式,设计模式,java设计模式,桥接模式,',0,'http://my.csdn.net/vtopqx',1),(2809,1,'http://blog.csdn.net/vtopqx/article/details/78134465','Java设计模式_(结构型)_装饰模式','引用百科	装饰模式指的是在不必改变原类文件和使用继承的情况下，动态地扩展一个对象的功能。它是通过创建一个包装对象，也就是装饰来包裹真实的对象。特点（1） 装饰对象和真实对象有相同的接口。这样客户端对象...',231,'csdn/mode/37_4_1_0_1506729620.506558.html','2017-09-29 15:38','vtopqx',0,'23中设计模式,java设计模式,装饰模式,',0,'http://my.csdn.net/vtopqx',1),(2810,3,'http://blog.csdn.net/l1028386804/article/details/70544014','MySQL之——集群的那些事','1   数据复制技术简介\n数据库复制是指频繁的将数据从一个节点（服务器上的一个数据库）复制到另一个节点，可以将数据库复制系统看作一个分布式数据库，但是其中所有节点共享相同的信息。这类系统也称为数据库集...',182,'csdn/mysql/17_5_1_0_1506729669.112.html','2017-09-05 22:39','l1028386804',0,'mysql,',1,'http://my.csdn.net/l1028386804',1);
/*!40000 ALTER TABLE `t_csdn_article` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `t_csdn_columns`
--

DROP TABLE IF EXISTS `t_csdn_columns`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `t_csdn_columns` (
  `category` varchar(16) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `url` varchar(128) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `title` varchar(128) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `read_count` int(11) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `t_csdn_columns`
--

LOCK TABLES `t_csdn_columns` WRITE;
/*!40000 ALTER TABLE `t_csdn_columns` DISABLE KEYS */;
INSERT INTO `t_csdn_columns` VALUES ('设计模式','http://blog.csdn.net/column/details/mdmcsdn1.html?time=1504235060.112969','设计模式',16602),('设计模式','http://blog.csdn.net/column/details/design-pattern-hxm.html?time=1504235060.113009','设计模式之android',16079),('设计模式','http://blog.csdn.net/column/details/ourdesignpattern.html?time=1504235060.113017','设计模式',15976),('设计模式','http://blog.csdn.net/column/details/13196.html?time=1504235060.113026','设计模式',15488),('设计模式','http://blog.csdn.net/column/details/suski-pattern.html?time=1504235060.113033','《大话设计模式》读后感',15272),('mysql','http://blog.csdn.net/column/details/tangowl-mysql-intro.html?time=1504235063.574792','MySQL 入门教程',20526),('mysql','http://blog.csdn.net/column/details/mysql-dablelv.html?time=1504235063.574827','MySQL基础',20116),('mysql','http://blog.csdn.net/column/details/mysqlwu.html?time=1504235063.574847','MySQL必知必会学习笔记',19104),('mysql','http://blog.csdn.net/column/details/13881.html?time=1504235063.574855','mysql索引与优化',19025),('mysql','http://blog.csdn.net/column/details/15548.html?time=1504235063.574861','数据库(MySQL)',18863),('mysql','http://blog.csdn.net/column/details/16138.html?time=1504235065.891665','史上最简单的 MySQL 教程',37999),('mysql','http://blog.csdn.net/column/details/13220.html?time=1504235065.891694','mysql',32564),('mysql','http://blog.csdn.net/column/details/mysql-001.html?time=1504235065.891703','高性能MySQL',31333),('设计模式','http://blog.csdn.net/column/details/java-design-pattern.html?time=1504235068.67485','Java设计模式',2983),('设计模式','http://blog.csdn.net/column/details/yrp-design-pattern.html?time=1504235068.674875','设计模式与应用',2921),('设计模式','http://blog.csdn.net/column/details/16634.html?time=1504235068.674883','设计模式',2911),('设计模式','http://blog.csdn.net/column/details/16218.html?time=1504235068.674892','设计模式',2699),('设计模式','http://blog.csdn.net/column/details/14288.html?time=1504235068.674899','设计模式',2421),('设计模式','http://blog.csdn.net/column/details/16553.html?time=1504235068.674904','设计模式',2421),('设计模式','http://blog.csdn.net/column/details/15028.html?time=1504235068.674911','设计模式',2243),('设计模式','http://blog.csdn.net/column/details/designpatternnotewyj.html?time=1504235071.842787','设计模式笔记整理',3668),('设计模式','http://blog.csdn.net/column/details/javamodel.html?time=1504235071.842809','JAVA设计模式',3659),('设计模式','http://blog.csdn.net/column/details/13164.html?time=1504235071.842819','设计模式',3506),('设计模式','http://blog.csdn.net/column/details/javascriptdesgin.html?time=1504235071.842825','javascript设计模式',3463),('设计模式','http://blog.csdn.net/column/details/15193.html?time=1504235071.842832','赵建银-设计模式学习',3423),('设计模式','http://blog.csdn.net/column/details/design-pattern-zen.html?time=1504235071.842838','《设计模式之禅》读书笔记',3350),('设计模式','http://blog.csdn.net/column/details/15839.html?time=1504235071.842847','设计模式',3122),('设计模式','http://blog.csdn.net/column/details/16632.html?time=1504235071.842853','设计模式学习笔记',3092),('mysql','http://blog.csdn.net/column/details/mysql-daydayup.html?time=1504235072.85895','Mysql提升',116184),('mysql','http://blog.csdn.net/column/details/mysql-tzx.html?time=1504235072.858985','mysql知识汇总和提高',109613),('mysql','http://blog.csdn.net/column/details/zhy-study-mysql.html?time=1504235072.858999','Mysql',91439),('mysql','http://blog.csdn.net/column/details/14121.html?time=1504235072.859006','如何让Mysql跑的更快',85301),('mysql','http://blog.csdn.net/column/details/mysqlzl544434558.html?time=1504235072.859016','项目中积累的mysql使用经验',78380),('mysql','http://blog.csdn.net/column/details/13794.html?time=1504235073.516924','MySQL',160254),('mysql','http://blog.csdn.net/column/details/mysqlnote.html?time=1504235073.516951','MySQL进阶指南',145889),('mysql','http://blog.csdn.net/column/details/mysql-1.html?time=1504235073.516962','MySQL从入门到精通',125952),('设计模式','http://blog.csdn.net/column/details/design-pattern.html?time=1504235074.085999','设计模式在实际项目中的应用',18145),('设计模式','http://blog.csdn.net/column/details/xiaomaolv.html?time=1504235074.08604','设计模式',18092),('设计模式','http://blog.csdn.net/column/details/designpatterns-night.html?time=1504235074.086049','设计模式',17834),('设计模式','http://blog.csdn.net/column/details/16366.html?time=1504235074.086073','设计模式讲解与代码实践',17114),('设计模式','http://blog.csdn.net/column/details/javadesignpattern.html?time=1504235074.086095','设计模式',16895),('mysql','http://blog.csdn.net/column/details/mysqlsummary.html?time=1504235074.6979','Mysql数据库总结',69315),('mysql','http://blog.csdn.net/column/details/mysqlpri.html?time=1504235074.697923','思考mysql内核之初级系列',66344),('mysql','http://blog.csdn.net/column/details/15260.html?time=1504235074.697933','MySQL技术',58088),('mysql','http://blog.csdn.net/column/details/conquermysql.html?time=1504235074.697942','征服数据库之mysql',50531),('mysql','http://blog.csdn.net/column/details/studymysql.html?time=1504235076.229678','MySQL数据库学习',15030),('mysql','http://blog.csdn.net/column/details/wenniuwuren-mysql.html?time=1504235076.229716','MySQL 入门到调优',14899),('设计模式','http://blog.csdn.net/column/details/12965.html?time=1504235076.297811','设计模式',2124),('设计模式','http://blog.csdn.net/column/details/14987.html?time=1504235076.297861','设计模式',2046),('设计模式','http://blog.csdn.net/column/details/14187.html?time=1504235076.297874','设计模式-java',1761),('设计模式','http://blog.csdn.net/column/details/15050.html?time=1504235076.297903','设计模式',1725),('设计模式','http://blog.csdn.net/column/details/13865.html?time=1504235076.297913','java设计模式',1619),('设计模式','http://blog.csdn.net/column/details/15456.html?time=1504235076.29794','常用Java设计模式系列',1579),('mysql','http://blog.csdn.net/column/details/detailofmysql.html?time=1504235083.401017','MySQL详解',47978),('mysql','http://blog.csdn.net/column/details/oracle2mysql.html?time=1504235083.40105','从Oracle到MySQL',44375),('mysql','http://blog.csdn.net/column/details/cppformysqlpro.html?time=1504235083.401068','visual c++ 2008进行MySQL编程（ODBC）',44074),('mysql','http://blog.csdn.net/column/details/13005.html?time=1504235083.401081','MySQL必知必会',39937),('设计模式','http://blog.csdn.net/column/details/sjms.html?time=1504235121.173908','设计模式',19366),('设计模式','http://blog.csdn.net/column/details/huohuo.html?time=1504235121.173939','大话设计模式',19147),('设计模式','http://blog.csdn.net/column/details/dhsjms.html?time=1504235121.173947','大话设计模式',19068),('设计模式','http://blog.csdn.net/column/details/extenddesignpattern.html?time=1504235121.173973','可扩展性与设计模式',18673),('设计模式','http://blog.csdn.net/column/details/oodm.html?time=1504235145.639857','面向对象设计模式',88473),('设计模式','http://blog.csdn.net/column/details/my-designpattern.html?time=1504235150.443957','设计模式与系统架构',45944),('设计模式','http://blog.csdn.net/column/details/design-pattern-homer.html?time=1504235150.444012','设计模式',45328),('设计模式','http://blog.csdn.net/column/details/designpatterns4java.html?time=1504235150.444021','23种设计模式 (java通俗演义)',45236),('设计模式','http://blog.csdn.net/column/details/gof-23design.html?time=1504235153.305822','Gof 设计模式',5556),('设计模式','http://blog.csdn.net/column/details/14723.html?time=1504235153.305878','设计模式',5305),('设计模式','http://blog.csdn.net/column/details/12992.html?time=1504235153.30589','设计模式备忘录',5057),('设计模式','http://blog.csdn.net/column/details/designpatterns-haoz.html?time=1504235153.305896','设计模式解析',4995),('设计模式','http://blog.csdn.net/column/details/designpatternsjiange.html?time=1504235153.305903','设计模式',4803),('设计模式','http://blog.csdn.net/column/details/shejimoshi1.html?time=1504235153.305911','设计模式',4635),('设计模式','http://blog.csdn.net/column/details/12848.html?time=1504235186.549933','一天一个设计模式',21955),('设计模式','http://blog.csdn.net/column/details/designpattern32.html?time=1504235186.549965','设计模式',21939),('设计模式','http://blog.csdn.net/column/details/designpatterns-qt.html?time=1504235186.549981','设计模式(Qt版)',20901),('设计模式','http://blog.csdn.net/column/details/cainiaojava.html?time=1504235186.549988','菜鸟版JAVA设计模式',20581),('设计模式','http://blog.csdn.net/column/details/13439.html?time=1504235187.665265','JavaScript设计模式',6142),('设计模式','http://blog.csdn.net/column/details/javadesign-pattern.html?time=1504235187.665293','JAVA设计模式笔记',6047),('设计模式','http://blog.csdn.net/column/details/14351.html?time=1504235187.665303','java23种设计模式',5769),('设计模式','http://blog.csdn.net/column/details/14410.html?time=1504235187.66531','设计模式',5634),('设计模式','http://blog.csdn.net/column/details/hgbshejimoshi.html?time=1504235187.665316','设计模式',5632),('设计模式','http://blog.csdn.net/column/details/design-patterns-xue.html?time=1504235187.665324','设计模式',5571),('设计模式','http://blog.csdn.net/column/details/14788.html?time=1504235212.767434','设计模式(Java)',42554),('设计模式','http://blog.csdn.net/column/details/xing-designpattern.html?time=1504235212.767461','写最好的设计模式专栏',41871),('设计模式','http://blog.csdn.net/column/details/patternsdesign.html?time=1504235212.767472','设计模式笔记',39883),('设计模式','http://blog.csdn.net/column/details/design-pattern23.html?time=1504235212.767478','C#设计模式',39622),('设计模式','http://blog.csdn.net/column/details/softwaredesign.html?time=1504235212.767487','设计模式',38635),('设计模式','http://blog.csdn.net/column/details/cpp-design-pattern.html?time=1504235213.761164','C++设计模式',301934),('设计模式','http://blog.csdn.net/column/details/designpattern-xt.html?time=1504235213.761194','DesignPattern(设计模式)',247740),('设计模式','http://blog.csdn.net/column/details/mydesignpattern.html?time=1504235213.761204','我所理解的设计模式',229050),('设计模式','http://blog.csdn.net/column/details/14875.html?time=1504235253.097879','设计模式',6814),('设计模式','http://blog.csdn.net/column/details/14948.html?time=1504235253.097914','php，java实现设计模式',6796),('设计模式','http://blog.csdn.net/column/details/xfzsjms.html?time=1504235253.097923','设计模式',6762),('设计模式','http://blog.csdn.net/column/details/design-pattern-lin.html?time=1504235253.097929','设计模式',6745),('设计模式','http://blog.csdn.net/column/details/designpattern2.html?time=1504235253.097936','设计模式',6662),('设计模式','http://blog.csdn.net/column/details/14533.html?time=1504235253.097944','23种设计模式',6376),('设计模式','http://blog.csdn.net/column/details/tuimo.html?time=1504235253.09795','设计模式',6288),('设计模式','http://blog.csdn.net/column/details/designpatternforb.html?time=1504235254.089807','\"围观\"设计模式',111765),('设计模式','http://blog.csdn.net/column/details/designmodels.html?time=1504235275.323359','Java设计模式菜鸟系列',54926),('设计模式','http://blog.csdn.net/column/details/dahua.html?time=1504235275.323384','大话设计模式',52780),('设计模式','http://blog.csdn.net/column/details/hacke2-designpatter.html?time=1504235275.323394','设计模式读书笔记与总结',51716),('设计模式','http://blog.csdn.net/column/details/phpdesign.html?time=1504235275.32341','PHP设计模式',50865),('设计模式','http://blog.csdn.net/column/details/oodesign.html?time=1504235275.323416','设计模式攻略',50491),('设计模式','http://blog.csdn.net/column/details/designaction.html?time=1504235295.415793','设计模式',27286),('设计模式','http://blog.csdn.net/column/details/design-pattern-java.html?time=1504235295.415828','设计模式（JAVA）',26927),('设计模式','http://blog.csdn.net/column/details/baadf00df00dabadfds0.html?time=1504235295.415838','初探设计模式（C++实现）',25788),('设计模式','http://blog.csdn.net/column/details/ef3c5ec0-f3c9-48af.html?time=1504235295.415846','设计模式精解',25649),('设计模式','http://blog.csdn.net/column/details/designpatternbylmb.html?time=1504235295.415857','大话设计模式',24450),('设计模式','http://blog.csdn.net/column/details/design--mode.html?time=1504235296.43818','大话设计模式',7751),('设计模式','http://blog.csdn.net/column/details/shejimoshismile.html?time=1504235296.438212','设计模式',7728),('设计模式','http://blog.csdn.net/column/details/guus-sjms.html?time=1504235296.438221','设计模式大全',7685),('设计模式','http://blog.csdn.net/column/details/14866.html?time=1504235296.43823','设计模式之(C++实现)',7418),('设计模式','http://blog.csdn.net/column/details/design-pattern-123.html?time=1504235296.438238','设计模式',7179),('设计模式','http://blog.csdn.net/column/details/chaogeshejimoshi.html?time=1504235296.438246','Java设计模式简明教程',7091),('设计模式','http://blog.csdn.net/column/details/pattern23.html?time=1504235296.438252','设计模式',7034),('设计模式','http://blog.csdn.net/column/details/designpattern001.html?time=1504235322.720618','设计模式实战',8761),('设计模式','http://blog.csdn.net/column/details/habren-design-patter.html?time=1504235322.720704','跟着Jason学 设计模式',8608),('设计模式','http://blog.csdn.net/column/details/dpatterns.html?time=1504235322.720711','设计模式',8511),('设计模式','http://blog.csdn.net/column/details/learn-design-pattern.html?time=1504235322.720734','初识设计模式',8353),('设计模式','http://blog.csdn.net/column/details/learnofdesignpattern.html?time=1504235322.72074','设计模式',8329),('设计模式','http://blog.csdn.net/column/details/dhsjms-cplusplus.html?time=1504235323.742492','《大话设计模式》C++实现',27988),('设计模式','http://blog.csdn.net/column/details/17017.html?time=1504235323.742525','快速扩展和迭代 - 设计模式',27982),('设计模式','http://blog.csdn.net/column/details/design--pattern.html?time=1504235323.742534','设计模式',27960),('设计模式','http://blog.csdn.net/column/details/ds-1.html?time=1504235323.74254','大话设计模式',27945),('设计模式','http://blog.csdn.net/column/details/14308.html?time=1504235323.742554','设计模式之美',27360),('设计模式','http://blog.csdn.net/column/details/sjmsjc.html?time=1504235342.857432','设计模式',9872),('设计模式','http://blog.csdn.net/column/details/designpatternsummary.html?time=1504235342.857476','大话设计模式',9635),('设计模式','http://blog.csdn.net/column/details/shenruqianchu-design.html?time=1504235342.857487','深入浅出设计模式',9442),('设计模式','http://blog.csdn.net/column/details/designpattern1.html?time=1504235342.857494','设计模式',9264),('设计模式','http://blog.csdn.net/column/details/dahua-shejimoshi.html?time=1504235342.857502','大话设计模式',9028),('设计模式','http://blog.csdn.net/column/details/designmodel.html?time=1504235357.831621','设计模式',10727),('设计模式','http://blog.csdn.net/column/details/javapatternexample.html?time=1504235357.831669','java设计模式实例',10461),('设计模式','http://blog.csdn.net/column/details/13758.html?time=1504235357.831695','java设计模式学习',10399),('设计模式','http://blog.csdn.net/column/details/designpatterns.html?time=1504235366.94774','大话设计模式',74264),('设计模式','http://blog.csdn.net/column/details/design2.html?time=1504235366.947774','乱砍设计模式',73394),('设计模式','http://blog.csdn.net/column/details/artofdesignpattern.html?time=1504235368.029475','设计模式的艺术',32161),('设计模式','http://blog.csdn.net/column/details/phpusedesignpattern.html?time=1504235368.029526','设计模式之PHP项目应用',32007),('设计模式','http://blog.csdn.net/column/details/shejimoshishengsheng.html?time=1504235368.029538','设计模式',31196),('设计模式','http://blog.csdn.net/column/details/13891.html?time=1504235368.892462','《设计模式》',12260),('设计模式','http://blog.csdn.net/column/details/lius0011.html?time=1504235368.892488','设计模式实例',12154),('设计模式','http://blog.csdn.net/column/details/13400.html?time=1504235368.892496','设计模式',12086),('设计模式','http://blog.csdn.net/column/details/designpattern-qiu.html?time=1504235368.892515','设计模式',11914),('设计模式','http://blog.csdn.net/column/details/mydesignpatterns.html?time=1504235368.892522','设计模式通俗讲解&&C++实现',11778),('设计模式','http://blog.csdn.net/column/details/designpatternsharing.html?time=1504235368.892528','设计模式',11748),('设计模式','http://blog.csdn.net/column/details/zhenghaozhuanlan.html?time=1504235368.892534','设计模式',11695),('设计模式','http://blog.csdn.net/column/details/java-design-mode.html?time=1504235369.982322','java设计模式',11588),('设计模式','http://blog.csdn.net/column/details/desginpattern.html?time=1504235369.982357','设计模式',11404),('设计模式','http://blog.csdn.net/column/details/design-patterns001.html?time=1504235369.982365','设计模式的六大原则',11387),('设计模式','http://blog.csdn.net/column/details/theonegis-design.html?time=1504235369.982375','设计模式学习笔记',11260),('设计模式','http://blog.csdn.net/column/details/zysjms.html?time=1504235369.982384','设计模式',11042),('设计模式','http://blog.csdn.net/column/details/javadesignmodel.html?time=1504235398.086007','23天征服--23种设计模式',13057),('设计模式','http://blog.csdn.net/column/details/13088.html?time=1504235398.086032','设计模式',13010),('设计模式','http://blog.csdn.net/column/details/lxydahua.html?time=1504235398.086041','大话设计模式',12930),('设计模式','http://blog.csdn.net/column/details/patternofjie.html?time=1504235398.086049','设计模式',12617),('设计模式','http://blog.csdn.net/column/details/walker1.html?time=1504235398.086056','设计模式C++实现',12462),('设计模式','http://blog.csdn.net/column/details/16401.html?time=1504235421.213674','24种设计模式',14749),('设计模式','http://blog.csdn.net/column/details/mydesignpattern35.html?time=1504235421.213702','设计模式之全解析',14672),('设计模式','http://blog.csdn.net/column/details/gof-design-patterns.html?time=1504235421.213709','GoF设计模式',14662),('设计模式','http://blog.csdn.net/column/details/shms520.html?time=1504235421.213715','设计模式',14574),('设计模式','http://blog.csdn.net/column/details/note-design-pattern.html?time=1504235421.213721','设计模式笔记',14371),('设计模式','http://blog.csdn.net/column/details/gof-design-pattern.html?time=1504235427.415264','小清新GoF23种设计模式',37194),('设计模式','http://blog.csdn.net/column/details/wenqiang.html?time=1504235427.415289','设计模式之禅',36717),('设计模式','http://blog.csdn.net/column/details/my-designpatterns.html?time=1504235427.4153','设计模式之禅',35399),('设计模式','http://blog.csdn.net/column/details/13856.html?time=1504235427.415306','设计模式',35227),('设计模式','http://blog.csdn.net/column/details/designerpattern.html?time=1504235427.415326','IOS设计模式浅析',34013),('mysql','http://blog.csdn.net/column/details/mysqlbywangjianan.html?time=1504237451.546327','mysql数据库',10945),('mysql','http://blog.csdn.net/column/details/13534.html?time=1504237451.546415','Mysql系列',10939),('mysql','http://blog.csdn.net/column/details/13489.html?time=1504237451.546431','MySQL基础知识大全',10744),('mysql','http://blog.csdn.net/column/details/yinfeng-mysql.html?time=1504237457.070578','MySQL内核与性能优化',9725),('mysql','http://blog.csdn.net/column/details/13281.html?time=1504237457.070603','MySQL-数据库-JDBC',9004),('mysql','http://blog.csdn.net/column/details/13516.html?time=1504237457.070614','MySQL路线',8001),('mysql','http://blog.csdn.net/column/details/16578.html?time=1504237457.580253','MYSQL',3590),('mysql','http://blog.csdn.net/column/details/16135.html?time=1504237457.580284','Mysql架构设计',2488),('mysql','http://blog.csdn.net/column/details/13213.html?time=1504237457.580295','Mysql基本使用',2138),('mysql','http://blog.csdn.net/column/details/mysql1209.html?time=1504237462.662286','mysql优化',6883),('mysql','http://blog.csdn.net/column/details/mysql1.html?time=1504237462.66232','踟蹰MySQL',6453),('mysql','http://blog.csdn.net/column/details/13369.html?time=1504237462.662329','mysql的使用',6364),('mysql','http://blog.csdn.net/column/details/16983.html?time=1504237462.662338','MySQL从入门到精通',6064),('mysql','http://blog.csdn.net/column/details/13509.html?time=1504237462.662359','MySQl数据库嵌入式开发',5718),('mysql','http://blog.csdn.net/column/details/mysql56-refer.html?time=1504237462.662366','MySQL 5.6 参考',5713),('mysql','http://blog.csdn.net/column/details/14861.html?time=1504237463.511993','高性能MySQL',13777),('mysql','http://blog.csdn.net/column/details/13301.html?time=1504237463.512049','MySQL',12292),('mysql','http://blog.csdn.net/column/details/13337.html?time=1504237463.512066','mysql数据库',11612),('mysql','http://blog.csdn.net/column/details/15364.html?time=1504237491.050269','MySQL',2081),('mysql','http://blog.csdn.net/column/details/16687.html?time=1504237491.050291','Mysql学习与实践笔记',2064),('mysql','http://blog.csdn.net/column/details/15133.html?time=1504237491.050299','MySQL基本知识',1914),('mysql','http://blog.csdn.net/column/details/16190.html?time=1504237491.050308','mysql',1659),('mysql','http://blog.csdn.net/column/details/15775.html?time=1504237491.050316','MySQL详解',1230),('mysql','http://blog.csdn.net/column/details/15110.html?time=1504237491.050322','MySQL入门详解',1042),('mysql','http://blog.csdn.net/column/details/mysqlcentury.html?time=1504237570.393924','MySQL进阶',1224267),('mysql','http://blog.csdn.net/column/details/mysql-in-action.html?time=1504237570.393974','mysql 由浅入深',365319),('mysql','http://blog.csdn.net/column/details/mysqltw.html?time=1504237570.393983','MySQL图文进阶',342816),('mysql','http://blog.csdn.net/column/details/mysqldba.html?time=1504237570.393995','MySQL管理开发由浅入深',218480),('mysql','http://blog.csdn.net/column/details/evermysql.html?time=1504237570.394002','MySQL',188640),('mysql','http://blog.csdn.net/column/details/mysqlstudy.html?time=1504237578.637744','mysql学习',27492),('mysql','http://blog.csdn.net/column/details/15651.html?time=1504237578.637777','MySql数据库调优',26653),('mysql','http://blog.csdn.net/column/details/14507.html?time=1504237578.637786','MySQL学习记录',25918),('mysql','http://blog.csdn.net/column/details/16623.html?time=1504237620.322582','MySQL源码研究',5249),('mysql','http://blog.csdn.net/column/details/shenruqianchu-mysql.html?time=1504237620.322613','深入浅出Mysql',5228),('mysql','http://blog.csdn.net/column/details/15343.html?time=1504237620.322624','史上最全的MySQL基础教程',4533),('mysql','http://blog.csdn.net/column/details/13738.html?time=1504237620.322634','MySql及NoSQL相关',4134),('mysql','http://blog.csdn.net/column/details/14622.html?time=1504237620.322642','MySQL',3731),('mysql','http://blog.csdn.net/column/details/mysqlcentury.html?time=1504246479.62743','MySQL进阶',1224271),('mysql','http://blog.csdn.net/column/details/mysql-in-action.html?time=1504246479.627475','mysql 由浅入深',365321),('mysql','http://blog.csdn.net/column/details/mysqltw.html?time=1504246479.627484','MySQL图文进阶',342936),('mysql','http://blog.csdn.net/column/details/mysqldba.html?time=1504246479.627496','MySQL管理开发由浅入深',218512),('mysql','http://blog.csdn.net/column/details/evermysql.html?time=1504246479.627503','MySQL',188677),('nginx','http://blog.csdn.net/column/details/nginx.html?time=1504246638.256962','Nginx高性能Web服务器',381232),('redis','http://blog.csdn.net/column/details/13313.html?time=1504263680.878897','Redis技术相关',11183),('redis','http://blog.csdn.net/column/details/13266.html?time=1504263680.878945','redis命令详解与应用',11069),('设计模式','http://blog.csdn.net/column/details/designaction.html?time=1504263711.481045','设计模式',27287),('设计模式','http://blog.csdn.net/column/details/design-pattern-java.html?time=1504263711.481092','设计模式（JAVA）',26952),('设计模式','http://blog.csdn.net/column/details/baadf00df00dabadfds0.html?time=1504263711.481103','初探设计模式（C++实现）',25794),('设计模式','http://blog.csdn.net/column/details/ef3c5ec0-f3c9-48af.html?time=1504263711.481109','设计模式精解',25651),('设计模式','http://blog.csdn.net/column/details/designpatternbylmb.html?time=1504263711.48112','大话设计模式',24455),('linux','http://blog.csdn.net/column/details/linuxkernel-detailed.html?time=1504264148.041288','Linux内核剖析',67168),('linux','http://blog.csdn.net/column/details/dut-linux-kernel.html?time=1504264148.04132','Linux内核设计的艺术',66381),('java','http://blog.csdn.net/column/details/java-enhance.html?time=1504264336.698973','Java总结',344126),('java','http://blog.csdn.net/column/details/javaframe.html?time=1504264336.699003','Java后台框架系列',322224),('java','http://blog.csdn.net/column/details/designpatternschx.html?time=1504264364.11628','JAVA设计模块之旅',131510),('java','http://blog.csdn.net/column/details/java-enhance.html?time=1504264364.149219','Java总结',344126),('java','http://blog.csdn.net/column/details/javaframe.html?time=1504264364.149246','Java后台框架系列',322224),('java','http://blog.csdn.net/column/details/12698.html?time=1504264364.387203','Java设计模式实战',55785),('java','http://blog.csdn.net/column/details/lxq-shejimoshi.html?time=1504264365.48549','设计模式--Java描述',22341),('java','http://blog.csdn.net/column/details/14365.html?time=1504264367.458407','Java Web开发',728),('java','http://blog.csdn.net/column/details/15973.html?time=1504264367.458439','Java设计模式',329),('java','http://blog.csdn.net/column/details/15026.html?time=1504264368.476327','Java 设计模式',1453),('java','http://blog.csdn.net/column/details/13662.html?time=1504264368.476361','Java设计模式学习',1332),('java','http://blog.csdn.net/column/details/16040.html?time=1504264368.476371','java设计模式',1267),('linux','http://blog.csdn.net/column/details/16850.html?time=1504264369.050987','Linux内核完全解读',1775),('java','http://blog.csdn.net/column/details/14187.html?time=1504264369.477014','设计模式-java',1761),('java','http://blog.csdn.net/column/details/13865.html?time=1504264369.477047','java设计模式',1619),('java','http://blog.csdn.net/column/details/15456.html?time=1504264369.477057','常用Java设计模式系列',1579),('java','http://blog.csdn.net/column/details/beginer.html?time=1504264369.477064','javaEE->高新',1574),('linux','http://blog.csdn.net/column/details/linux-qa-practice.html?time=1504264370.021807','实战 Linux 系统质量保障',2612),('linux','http://blog.csdn.net/column/details/linux1209.html?time=1504264389.726265','Linux',11644),('linux','http://blog.csdn.net/column/details/oslinux.html?time=1504264391.716567','操作系统原理（linux）',32871),('linux','http://blog.csdn.net/column/details/explore-linux.html?time=1504264391.716599','Linux探索之旅',31221),('java','http://blog.csdn.net/column/details/gavin-framework.html?time=1504264428.838613','JavaWeb框架',14056),('java','http://blog.csdn.net/column/details/ysc-1123.html?time=1504264428.838691','Java菜鸟成长日记',13617),('linux','http://blog.csdn.net/column/details/linux-kernel-no-code.html?time=1504264435.18104','linux内核原理',84300),('linux','http://blog.csdn.net/column/details/linuxsystemprogram.html?time=1504264435.181078','Linux 系统编程',77120),('linux','http://blog.csdn.net/column/details/master-linux.html?time=1504264436.556517','Linux操作系统',21583),('linux','http://blog.csdn.net/column/details/shanshanpt.html?time=1504264436.556553','Linux 网络编程',20956),('linux','http://blog.csdn.net/column/details/sln-linux-design.html?time=1504264436.556565','把握linux内核设计思想',20416),('java','http://blog.csdn.net/column/details/12714.html?time=1504264437.298672','javaEE——框架技术',16310),('linux','http://blog.csdn.net/column/details/kernel2-6.html?time=1504264438.468255','Linux内核设计基础',18979),('java','http://blog.csdn.net/column/details/javaee.html?time=1504264451.464917','Java EE开发',121114),('java','http://blog.csdn.net/column/details/kuangjiaxuexi123.html?time=1504264451.464946','java 框架',118715),('linux','http://blog.csdn.net/column/details/linuxkernel.html?time=1504264460.906199','Linux内核设计与实现',106465),('linux','http://blog.csdn.net/column/details/driverforlinux.html?time=1504264460.906228','Linux设备驱动',97391),('linux','http://blog.csdn.net/column/details/linux-driver.html?time=1504264462.275763','linux驱动开发',45996),('java','http://blog.csdn.net/column/details/14788.html?time=1504264484.542602','设计模式(Java)',42580),('java','http://blog.csdn.net/column/details/jplogicframework.html?time=1504264484.54266','java快速开发平台(jplogic)',41886),('java','http://blog.csdn.net/column/details/framework-1.html?time=1504264485.651939','Java进阶之路',7760),('java','http://blog.csdn.net/column/details/chaogeshejimoshi.html?time=1504264485.651973','Java设计模式简明教程',7093),('java','http://blog.csdn.net/column/details/14948.html?time=1504264486.742102','php，java实现设计模式',6800),('java','http://blog.csdn.net/column/details/talk-effective-java.html?time=1504264486.742134','谈Effective Java',6787),('java','http://blog.csdn.net/column/details/14017.html?time=1504264486.742146','java web开发应用',6631),('linux','http://blog.csdn.net/column/details/linuxkernel-detailed.html?time=1504264521.025379','Linux内核剖析',67168),('linux','http://blog.csdn.net/column/details/dut-linux-kernel.html?time=1504264521.025425','Linux内核设计的艺术',66381),('java','http://blog.csdn.net/column/details/15065.html?time=1504264568.156807','Java技术栈架构',91701),('java','http://blog.csdn.net/column/details/dp-in-java-yqj2065.html?time=1504264568.15686','面向对象设计：原理、模式和应用(Java8)',90433),('java','http://blog.csdn.net/column/details/java-design-pattern.html?time=1504264585.832058','Java设计模式',2987),('java','http://blog.csdn.net/column/details/toto-ee.html?time=1504264622.635379','JavaEE由浅入深专栏',67914),('java','http://blog.csdn.net/column/details/java-design-mode.html?time=1504264623.64508','java设计模式',11592),('java','http://blog.csdn.net/column/details/16808.html?time=1504264623.645134','Java开发经验积累',11554),('java','http://blog.csdn.net/column/details/cainiaojava.html?time=1504264645.481382','菜鸟版JAVA设计模式',20589),('java','http://blog.csdn.net/column/details/javamodel.html?time=1504264646.473005','JAVA设计模式',3660),('java','http://blog.csdn.net/column/details/javascriptdesgin.html?time=1504264646.473031','javascript设计模式',3466),('java','http://blog.csdn.net/column/details/14305.html?time=1504264647.461585','javaEE防盗版',5398),('java','http://blog.csdn.net/column/details/max1210.html?time=1504264647.461608','java入门到精通',5172),('java','http://blog.csdn.net/column/details/javapatternexample.html?time=1504264649.421465','java设计模式实例',10461),('java','http://blog.csdn.net/column/details/13758.html?time=1504264649.421506','java设计模式学习',10423),('java','http://blog.csdn.net/column/details/java-thread-.html?time=1504264650.431661','java 并发 多线程',33254),('java','http://blog.csdn.net/column/details/rabbitmq-for-java.html?time=1504264650.431689','RabbitMQ Java入门教程',32505),('java','http://blog.csdn.net/column/details/spring-liao.html?time=1504264650.431703','java 框架',31161),('java','http://blog.csdn.net/column/details/learnpro.html?time=1504264731.365748','Java性能调优',29475),('java','http://blog.csdn.net/column/details/javaee2014-09-04.html?time=1504264750.38051','JavaEE',11932),('java','http://blog.csdn.net/column/details/javaforspring.html?time=1504264898.561363','java架构解析',18025),('java','http://blog.csdn.net/column/details/java-web-learn.html?time=1504264898.561393','java web 知识汇总',16814),('java','http://blog.csdn.net/column/details/13439.html?time=1504264899.690983','JavaScript设计模式',6144),('java','http://blog.csdn.net/column/details/javadesign-pattern.html?time=1504264899.691008','JAVA设计模式笔记',6050),('java','http://blog.csdn.net/column/details/14351.html?time=1504264899.691017','java23种设计模式',5775),('java','http://blog.csdn.net/column/details/14790.html?time=1504264899.691027','Java调优方案',5594),('java','http://blog.csdn.net/column/details/16988.html?time=1504264900.678735','java架构师入门',8991),('java','http://blog.csdn.net/column/details/j2ee-hanhan.html?time=1504264900.678981','Java之J2EE',8842),('java','http://blog.csdn.net/column/details/designmodels.html?time=1504264955.099954','Java设计模式菜鸟系列',54953),('java','http://blog.csdn.net/column/details/12747.html?time=1504264955.099985','JavaWeb',50174),('java','http://blog.csdn.net/column/details/design-pattern-java.html?time=1504265020.576371','设计模式（JAVA）',26952),('java','http://blog.csdn.net/column/details/14810.html?time=1504265021.474501','Java Web 成神之路',47443),('java','http://blog.csdn.net/column/details/designpatterns4java.html?time=1504265021.474528','23种设计模式 (java通俗演义)',45272),('java','http://blog.csdn.net/column/details/javapractice.html?time=1504265311.243123','javaWEB实战',276444),('java','http://blog.csdn.net/column/details/myjava.html?time=1504265311.243172','Java深入',216559),('java','http://blog.csdn.net/column/details/javaee-learning.html?time=1504265311.243181','JavaEE核心框架',189627),('mysql','http://blog.csdn.net/column/details/mysqlcentury.html?time=1504396801.997056','MySQL进阶',1224438),('mysql','http://blog.csdn.net/column/details/mysql-in-action.html?time=1504396801.997102','mysql 由浅入深',365362),('mysql','http://blog.csdn.net/column/details/mysqltw.html?time=1504396801.997113','MySQL图文进阶',343653),('mysql','http://blog.csdn.net/column/details/mysqldba.html?time=1504396801.997124','MySQL管理开发由浅入深',218832),('mysql','http://blog.csdn.net/column/details/evermysql.html?time=1504396801.997132','MySQL',188887),('nginx','http://blog.csdn.net/column/details/code-for-nginx.html?time=1504396802.140347','nginx源码学习笔记',135247),('nginx','http://blog.csdn.net/column/details/nginx.html?time=1504396802.2044','Nginx高性能Web服务器',381487),('设计模式','http://blog.csdn.net/column/details/pattern.html?time=1504396802.23624','设计模式',1275595),('设计模式','http://blog.csdn.net/column/details/design.html?time=1504396802.236279','设计模式C++实现',456605),('设计模式','http://blog.csdn.net/column/details/designpatternzh.html?time=1504396802.236289','跟着ZHONGHuan学习设计模式',369592),('设计模式','http://blog.csdn.net/column/details/design-patterns.html?time=1504396802.276149','设计模式',161638),('设计模式','http://blog.csdn.net/column/details/csharpdesignpattern.html?time=1504396802.276177','C#设计模式',144193),('设计模式','http://blog.csdn.net/column/details/chenssy-design.html?time=1504396802.276189','设计模式读书笔记',129249),('设计模式','http://blog.csdn.net/column/details/code-design.html?time=1504396802.276211','设计模式融入生活',125064),('设计模式','http://blog.csdn.net/column/details/13826.html?time=1504396802.321046','云设计模式',63763),('设计模式','http://blog.csdn.net/column/details/eat-designpattern.html?time=1504396802.321071','硬啃设计模式',62691),('设计模式','http://blog.csdn.net/column/details/headfirst.html?time=1504396802.321081','HeadFirst 设计模式学习笔记',60558),('设计模式','http://blog.csdn.net/column/details/clouddesignpattern.html?time=1504396802.321087','云计算设计模式',59198),('设计模式','http://blog.csdn.net/column/details/shuangde800-design.html?time=1504396802.321097','设计模式征途',56096),('设计模式','http://blog.csdn.net/column/details/12698.html?time=1504396802.321102','Java设计模式实战',55868),('mysql','http://blog.csdn.net/column/details/mysql-daydayup.html?time=1504396802.407605','Mysql提升',116375),('mysql','http://blog.csdn.net/column/details/mysql-tzx.html?time=1504396802.40763','mysql知识汇总和提高',109661),('mysql','http://blog.csdn.net/column/details/zhy-study-mysql.html?time=1504396802.407659','Mysql',91563),('mysql','http://blog.csdn.net/column/details/14121.html?time=1504396802.407668','如何让Mysql跑的更快',85375),('mysql','http://blog.csdn.net/column/details/mysqlzl544434558.html?time=1504396802.407677','项目中积累的mysql使用经验',78556),('mysql','http://blog.csdn.net/column/details/mysqlstudy.html?time=1504396803.366739','mysql学习',27518),('mysql','http://blog.csdn.net/column/details/15651.html?time=1504396803.366775','MySql数据库调优',26750),('mysql','http://blog.csdn.net/column/details/14507.html?time=1504396803.366785','MySQL学习记录',25937),('mysql','http://blog.csdn.net/column/details/16623.html?time=1504396803.415722','MySQL源码研究',5321),('mysql','http://blog.csdn.net/column/details/shenruqianchu-mysql.html?time=1504396803.415745','深入浅出Mysql',5245),('mysql','http://blog.csdn.net/column/details/15343.html?time=1504396803.415756','史上最全的MySQL基础教程',4556),('mysql','http://blog.csdn.net/column/details/13738.html?time=1504396803.415764','MySql及NoSQL相关',4171),('mysql','http://blog.csdn.net/column/details/14622.html?time=1504396803.415778','MySQL',3758),('mysql','http://blog.csdn.net/column/details/16578.html?time=1504396803.415784','MYSQL',3652),('设计模式','http://blog.csdn.net/column/details/qkcoder.html?time=1504396803.489514','C++设计模式',4319),('设计模式','http://blog.csdn.net/column/details/15604.html?time=1504396803.48954','Head First设计模式',4258),('mysql','http://blog.csdn.net/column/details/16135.html?time=1504396803.663577','Mysql架构设计',2506),('mysql','http://blog.csdn.net/column/details/13213.html?time=1504396803.663612','Mysql基本使用',2146),('设计模式','http://blog.csdn.net/column/details/designpatternsumarry.html?time=1504396804.413408','设计模式',787),('设计模式','http://blog.csdn.net/column/details/14268.html?time=1504396804.413439','C# 设计模式',770),('设计模式','http://blog.csdn.net/column/details/15973.html?time=1504396804.413468','Java设计模式',333),('mysql','http://blog.csdn.net/column/details/15364.html?time=1504396804.545255','MySQL',2106),('mysql','http://blog.csdn.net/column/details/16687.html?time=1504396804.545281','Mysql学习与实践笔记',2088),('mysql','http://blog.csdn.net/column/details/15133.html?time=1504396804.54529','MySQL基本知识',1929),('mysql','http://blog.csdn.net/column/details/16190.html?time=1504396804.5453','mysql',1668),('mysql','http://blog.csdn.net/column/details/15775.html?time=1504396804.545309','MySQL详解',1234),('mysql','http://blog.csdn.net/column/details/15110.html?time=1504396804.545315','MySQL入门详解',1049),('设计模式','http://blog.csdn.net/column/details/designpatternforios.html?time=1504396805.090626','设计模式之深入学习IOS版',24116),('设计模式','http://blog.csdn.net/column/details/cppdesignpattern.html?time=1504396805.090672','C++设计模式',23691),('设计模式','http://blog.csdn.net/column/details/feihedp.html?time=1504396805.090682','浅显易懂的设计模式',23305),('设计模式','http://blog.csdn.net/column/details/lxq-shejimoshi.html?time=1504396805.09069','设计模式--Java描述',22386),('设计模式','http://blog.csdn.net/column/details/designpattern-cassie.html?time=1504396805.090696','设计模式',22307),('设计模式','http://blog.csdn.net/column/details/sjmsxuexibiji.html?time=1504396805.090704','设计模式学习笔记',22074),('设计模式','http://blog.csdn.net/column/details/12906.html?time=1504396805.09071','小话设计模式',22066),('设计模式','http://blog.csdn.net/column/details/12848.html?time=1504396805.090715','一天一个设计模式',22006),('设计模式','http://blog.csdn.net/column/details/15026.html?time=1504396805.531769','Java 设计模式',1470),('设计模式','http://blog.csdn.net/column/details/13662.html?time=1504396805.531796','Java设计模式学习',1346),('设计模式','http://blog.csdn.net/column/details/16040.html?time=1504396805.531804','java设计模式',1284),('设计模式','http://blog.csdn.net/column/details/16088.html?time=1504396805.531812','设计模式',1225),('设计模式','http://blog.csdn.net/column/details/zhdldesignpattern.html?time=1504396805.53182','设计模式之木叶村之旅',1164),('设计模式','http://blog.csdn.net/column/details/15600.html?time=1504396805.531826','设计模式小解',1013),('mysql','http://blog.csdn.net/column/details/mysql1209.html?time=1504396806.30571','mysql优化',6925),('mysql','http://blog.csdn.net/column/details/mysql1.html?time=1504396806.305754','踟蹰MySQL',6463),('mysql','http://blog.csdn.net/column/details/13369.html?time=1504396806.305763','mysql的使用',6376),('mysql','http://blog.csdn.net/column/details/16983.html?time=1504396806.30577','MySQL从入门到精通',6113),('mysql','http://blog.csdn.net/column/details/13509.html?time=1504396806.305996','MySQl数据库嵌入式开发',5740),('mysql','http://blog.csdn.net/column/details/mysql56-refer.html?time=1504396806.306015','MySQL 5.6 参考',5727),('设计模式','http://blog.csdn.net/column/details/12965.html?time=1504396806.616208','设计模式',2136),('设计模式','http://blog.csdn.net/column/details/14987.html?time=1504396806.616236','设计模式',2051),('设计模式','http://blog.csdn.net/column/details/14187.html?time=1504396806.616249','设计模式-java',1772),('设计模式','http://blog.csdn.net/column/details/15050.html?time=1504396806.616255','设计模式',1730),('设计模式','http://blog.csdn.net/column/details/13865.html?time=1504396806.616262','java设计模式',1623),('设计模式','http://blog.csdn.net/column/details/15456.html?time=1504396806.616269','常用Java设计模式系列',1594),('设计模式','http://blog.csdn.net/column/details/java-design-pattern.html?time=1504396807.51996','Java设计模式',2991),('设计模式','http://blog.csdn.net/column/details/16634.html?time=1504396807.519988','设计模式',2950),('设计模式','http://blog.csdn.net/column/details/yrp-design-pattern.html?time=1504396807.519996','设计模式与应用',2930),('设计模式','http://blog.csdn.net/column/details/16218.html?time=1504396807.520005','设计模式',2702),('设计模式','http://blog.csdn.net/column/details/16553.html?time=1504396807.520013','设计模式',2447),('设计模式','http://blog.csdn.net/column/details/14288.html?time=1504396807.520019','设计模式',2432),('设计模式','http://blog.csdn.net/column/details/15028.html?time=1504396807.520026','设计模式',2278),('nginx','http://blog.csdn.net/column/details/spch2008-nginx.html?time=1504396819.940221','NGINX',8269),('nginx','http://blog.csdn.net/column/details/mynginx.html?time=1504396835.306503','Nginx',31674),('nginx','http://blog.csdn.net/column/details/niginxsourcelearning.html?time=1504396843.549835','nginx源码剖析',256771),('mysql','http://blog.csdn.net/column/details/yinfeng-mysql.html?time=1504396882.385768','MySQL内核与性能优化',9737),('mysql','http://blog.csdn.net/column/details/13281.html?time=1504396882.385804','MySQL-数据库-JDBC',9026),('mysql','http://blog.csdn.net/column/details/13516.html?time=1504396882.385815','MySQL路线',8032),('mysql','http://blog.csdn.net/column/details/13337.html?time=1504396883.447303','mysql数据库',11646),('mysql','http://blog.csdn.net/column/details/mysqlbywangjianan.html?time=1504396883.447357','mysql数据库',10973),('mysql','http://blog.csdn.net/column/details/13534.html?time=1504396883.447366','Mysql系列',10959),('mysql','http://blog.csdn.net/column/details/13489.html?time=1504396883.447372','MySQL基础知识大全',10765),('mysql','http://blog.csdn.net/column/details/14861.html?time=1504396886.759745','高性能MySQL',13859),('mysql','http://blog.csdn.net/column/details/13301.html?time=1504396886.759774','MySQL',12303),('mysql','http://blog.csdn.net/column/details/studymysql.html?time=1504396904.145211','MySQL数据库学习',15058),('mysql','http://blog.csdn.net/column/details/wenniuwuren-mysql.html?time=1504396904.145243','MySQL 入门到调优',14931),('设计模式','http://blog.csdn.net/column/details/gof-23design.html?time=1504396904.193742','Gof 设计模式',5565),('设计模式','http://blog.csdn.net/column/details/14723.html?time=1504396904.193784','设计模式',5345),('设计模式','http://blog.csdn.net/column/details/12992.html?time=1504396904.193794','设计模式备忘录',5068),('设计模式','http://blog.csdn.net/column/details/designpatterns-haoz.html?time=1504396904.1938','设计模式解析',5000),('设计模式','http://blog.csdn.net/column/details/designpatternsjiange.html?time=1504396904.193807','设计模式',4812),('设计模式','http://blog.csdn.net/column/details/shejimoshi1.html?time=1504396904.193816','设计模式',4638),('mysql','http://blog.csdn.net/column/details/16138.html?time=1504396906.092528','史上最简单的 MySQL 教程',38607),('mysql','http://blog.csdn.net/column/details/13220.html?time=1504396906.092558','mysql',32736),('mysql','http://blog.csdn.net/column/details/mysql-001.html?time=1504396906.092567','高性能MySQL',31375),('mysql','http://blog.csdn.net/column/details/tangowl-mysql-intro.html?time=1504396908.657499','MySQL 入门教程',20567),('mysql','http://blog.csdn.net/column/details/mysql-dablelv.html?time=1504396908.657543','MySQL基础',20140),('mysql','http://blog.csdn.net/column/details/mysqlwu.html?time=1504396908.657556','MySQL必知必会学习笔记',19131),('mysql','http://blog.csdn.net/column/details/13881.html?time=1504396908.657562','mysql索引与优化',19073),('mysql','http://blog.csdn.net/column/details/15548.html?time=1504396908.657569','数据库(MySQL)',18950),('设计模式','http://blog.csdn.net/column/details/designpatternnotewyj.html?time=1504396925.450237','设计模式笔记整理',3672),('设计模式','http://blog.csdn.net/column/details/javamodel.html?time=1504396925.450271','JAVA设计模式',3664),('设计模式','http://blog.csdn.net/column/details/13164.html?time=1504396925.450291','设计模式',3513),('设计模式','http://blog.csdn.net/column/details/javascriptdesgin.html?time=1504396925.450298','javascript设计模式',3486),('设计模式','http://blog.csdn.net/column/details/15193.html?time=1504396925.450321','赵建银-设计模式学习',3440),('设计模式','http://blog.csdn.net/column/details/design-pattern-zen.html?time=1504396925.450328','《设计模式之禅》读书笔记',3351),('设计模式','http://blog.csdn.net/column/details/15839.html?time=1504396925.450336','设计模式',3147),('设计模式','http://blog.csdn.net/column/details/16632.html?time=1504396925.450342','设计模式学习笔记',3116),('设计模式','http://blog.csdn.net/column/details/13439.html?time=1504396926.470229','JavaScript设计模式',6156),('设计模式','http://blog.csdn.net/column/details/javadesign-pattern.html?time=1504396926.47028','JAVA设计模式笔记',6078),('设计模式','http://blog.csdn.net/column/details/14351.html?time=1504396926.470296','java23种设计模式',5828),('设计模式','http://blog.csdn.net/column/details/14410.html?time=1504396926.470311','设计模式',5688),('设计模式','http://blog.csdn.net/column/details/hgbshejimoshi.html?time=1504396926.470324','设计模式',5634),('设计模式','http://blog.csdn.net/column/details/design-patterns-xue.html?time=1504396926.470337','设计模式',5576),('设计模式','http://blog.csdn.net/column/details/14875.html?time=1504396927.487586','设计模式',6853),('设计模式','http://blog.csdn.net/column/details/14948.html?time=1504396927.487634','php，java实现设计模式',6837),('设计模式','http://blog.csdn.net/column/details/design-pattern-lin.html?time=1504396927.487642','设计模式',6795),('设计模式','http://blog.csdn.net/column/details/xfzsjms.html?time=1504396927.487648','设计模式',6772),('设计模式','http://blog.csdn.net/column/details/designpattern2.html?time=1504396927.487674','设计模式',6663),('设计模式','http://blog.csdn.net/column/details/14533.html?time=1504396927.487682','23种设计模式',6390),('设计模式','http://blog.csdn.net/column/details/tuimo.html?time=1504396927.487687','设计模式',6290),('设计模式','http://blog.csdn.net/column/details/design--mode.html?time=1504396928.53753','大话设计模式',7769),('设计模式','http://blog.csdn.net/column/details/shejimoshismile.html?time=1504396928.537583','设计模式',7734),('设计模式','http://blog.csdn.net/column/details/guus-sjms.html?time=1504396928.537592','设计模式大全',7692),('设计模式','http://blog.csdn.net/column/details/14866.html?time=1504396928.5376','设计模式之(C++实现)',7451),('设计模式','http://blog.csdn.net/column/details/design-pattern-123.html?time=1504396928.537608','设计模式',7185),('设计模式','http://blog.csdn.net/column/details/chaogeshejimoshi.html?time=1504396928.537615','Java设计模式简明教程',7108),('设计模式','http://blog.csdn.net/column/details/pattern23.html?time=1504396928.537621','设计模式',7040),('mysql','http://blog.csdn.net/column/details/detailofmysql.html?time=1504396928.649095','MySQL详解',48103),('mysql','http://blog.csdn.net/column/details/oracle2mysql.html?time=1504396928.649128','从Oracle到MySQL',44457),('mysql','http://blog.csdn.net/column/details/cppformysqlpro.html?time=1504396928.649138','visual c++ 2008进行MySQL编程（ODBC）',44122),('mysql','http://blog.csdn.net/column/details/13005.html?time=1504396928.649167','MySQL必知必会',40082),('mysql','http://blog.csdn.net/column/details/13794.html?time=1504396930.63361','MySQL',161042),('mysql','http://blog.csdn.net/column/details/mysqlnote.html?time=1504396930.633681','MySQL进阶指南',146163),('mysql','http://blog.csdn.net/column/details/mysql-1.html?time=1504396930.633694','MySQL从入门到精通',126116),('mysql','http://blog.csdn.net/column/details/mysqlsummary.html?time=1504396954.968482','Mysql数据库总结',69604),('mysql','http://blog.csdn.net/column/details/mysqlpri.html?time=1504396954.968508','思考mysql内核之初级系列',66391),('mysql','http://blog.csdn.net/column/details/15260.html?time=1504396954.968519','MySQL技术',58284),('mysql','http://blog.csdn.net/column/details/conquermysql.html?time=1504396954.968529','征服数据库之mysql',50587),('设计模式','http://blog.csdn.net/column/details/dahua-shejimoshi.html?time=1504396992.210041','大话设计模式',9045),('设计模式','http://blog.csdn.net/column/details/designpattern001.html?time=1504396992.210095','设计模式实战',8842),('设计模式','http://blog.csdn.net/column/details/habren-design-patter.html?time=1504396992.210108','跟着Jason学 设计模式',8638),('设计模式','http://blog.csdn.net/column/details/dpatterns.html?time=1504396992.210115','设计模式',8524),('设计模式','http://blog.csdn.net/column/details/learn-design-pattern.html?time=1504396992.210123','初识设计模式',8364),('设计模式','http://blog.csdn.net/column/details/learnofdesignpattern.html?time=1504396992.210129','设计模式',8336),('设计模式','http://blog.csdn.net/column/details/sjmsjc.html?time=1504396993.223046','设计模式',9883),('设计模式','http://blog.csdn.net/column/details/designpatternsummary.html?time=1504396993.223102','大话设计模式',9641),('设计模式','http://blog.csdn.net/column/details/shenruqianchu-design.html?time=1504396993.223129','深入浅出设计模式',9465),('设计模式','http://blog.csdn.net/column/details/designpattern1.html?time=1504396993.22314','设计模式',9274),('设计模式','http://blog.csdn.net/column/details/zysjms.html?time=1504396994.71528','设计模式',11046),('设计模式','http://blog.csdn.net/column/details/designmodel.html?time=1504396994.715315','设计模式',10735),('设计模式','http://blog.csdn.net/column/details/13758.html?time=1504396994.715325','java设计模式学习',10488),('设计模式','http://blog.csdn.net/column/details/javapatternexample.html?time=1504396994.715331','java设计模式实例',10485),('设计模式','http://blog.csdn.net/column/details/java-design-mode.html?time=1504397023.426952','java设计模式',11617),('设计模式','http://blog.csdn.net/column/details/desginpattern.html?time=1504397023.426978','设计模式',11415),('设计模式','http://blog.csdn.net/column/details/design-patterns001.html?time=1504397023.426986','设计模式的六大原则',11399),('设计模式','http://blog.csdn.net/column/details/theonegis-design.html?time=1504397023.426996','设计模式学习笔记',11278),('设计模式','http://blog.csdn.net/column/details/13891.html?time=1504397024.464499','《设计模式》',12270),('设计模式','http://blog.csdn.net/column/details/lius0011.html?time=1504397024.464526','设计模式实例',12159),('设计模式','http://blog.csdn.net/column/details/13400.html?time=1504397024.464534','设计模式',12110),('设计模式','http://blog.csdn.net/column/details/zhenghaozhuanlan.html?time=1504397024.464541','设计模式',12020),('设计模式','http://blog.csdn.net/column/details/designpattern-qiu.html?time=1504397024.46455','设计模式',11927),('设计模式','http://blog.csdn.net/column/details/mydesignpatterns.html?time=1504397024.464557','设计模式通俗讲解&&C++实现',11799),('设计模式','http://blog.csdn.net/column/details/designpatternsharing.html?time=1504397024.464563','设计模式',11761),('设计模式','http://blog.csdn.net/column/details/13088.html?time=1504397052.90435','设计模式',13105),('设计模式','http://blog.csdn.net/column/details/javadesignmodel.html?time=1504397052.904378','23天征服--23种设计模式',13089),('设计模式','http://blog.csdn.net/column/details/lxydahua.html?time=1504397052.904387','大话设计模式',12934),('设计模式','http://blog.csdn.net/column/details/patternofjie.html?time=1504397052.904396','设计模式',12632),('设计模式','http://blog.csdn.net/column/details/walker1.html?time=1504397052.904402','设计模式C++实现',12473),('设计模式','http://blog.csdn.net/column/details/mydesignpattern35.html?time=1504397053.850946','设计模式之全解析',14695),('设计模式','http://blog.csdn.net/column/details/gof-design-patterns.html?time=1504397053.850981','GoF设计模式',14681),('设计模式','http://blog.csdn.net/column/details/shms520.html?time=1504397053.850988','设计模式',14594),('设计模式','http://blog.csdn.net/column/details/note-design-pattern.html?time=1504397053.850995','设计模式笔记',14385),('设计模式','http://blog.csdn.net/column/details/mdmcsdn1.html?time=1504397054.880445','设计模式',16610),('设计模式','http://blog.csdn.net/column/details/design-pattern-hxm.html?time=1504397054.880475','设计模式之android',16132),('设计模式','http://blog.csdn.net/column/details/ourdesignpattern.html?time=1504397054.880482','设计模式',15990),('设计模式','http://blog.csdn.net/column/details/16401.html?time=1504397054.880491','24种设计模式',15594),('设计模式','http://blog.csdn.net/column/details/13196.html?time=1504397054.880496','设计模式',15516),('设计模式','http://blog.csdn.net/column/details/suski-pattern.html?time=1504397054.880503','《大话设计模式》读后感',15295),('设计模式','http://blog.csdn.net/column/details/design-pattern.html?time=1504397060.053413','设计模式在实际项目中的应用',18153),('设计模式','http://blog.csdn.net/column/details/xiaomaolv.html?time=1504397060.053477','设计模式',18114),('设计模式','http://blog.csdn.net/column/details/designpatterns-night.html?time=1504397060.053497','设计模式',17897),('设计模式','http://blog.csdn.net/column/details/16366.html?time=1504397060.053504','设计模式讲解与代码实践',17356),('设计模式','http://blog.csdn.net/column/details/javadesignpattern.html?time=1504397060.053513','设计模式',16918),('设计模式','http://blog.csdn.net/column/details/sjms.html?time=1504397107.454089','设计模式',19407),('设计模式','http://blog.csdn.net/column/details/huohuo.html?time=1504397107.454124','大话设计模式',19165),('设计模式','http://blog.csdn.net/column/details/dhsjms.html?time=1504397107.454132','大话设计模式',19135),('设计模式','http://blog.csdn.net/column/details/extenddesignpattern.html?time=1504397107.454143','可扩展性与设计模式',18702),('设计模式','http://blog.csdn.net/column/details/designaction.html?time=1504397108.43439','设计模式',27303),('设计模式','http://blog.csdn.net/column/details/design-pattern-java.html?time=1504397108.434422','设计模式（JAVA）',26985),('设计模式','http://blog.csdn.net/column/details/baadf00df00dabadfds0.html?time=1504397108.434433','初探设计模式（C++实现）',25827),('设计模式','http://blog.csdn.net/column/details/ef3c5ec0-f3c9-48af.html?time=1504397108.43444','设计模式精解',25660),('设计模式','http://blog.csdn.net/column/details/designpatternbylmb.html?time=1504397108.43445','大话设计模式',24493),('设计模式','http://blog.csdn.net/column/details/dhsjms-cplusplus.html?time=1504397110.542009','《大话设计模式》C++实现',28063),('设计模式','http://blog.csdn.net/column/details/17017.html?time=1504397110.54204','快速扩展和迭代 - 设计模式',27989),('设计模式','http://blog.csdn.net/column/details/design--pattern.html?time=1504397110.542047','设计模式',27976),('设计模式','http://blog.csdn.net/column/details/ds-1.html?time=1504397110.542053','大话设计模式',27964),('设计模式','http://blog.csdn.net/column/details/14308.html?time=1504397110.54206','设计模式之美',27383),('设计模式','http://blog.csdn.net/column/details/designpattern32.html?time=1504397110.705236','设计模式',21963),('设计模式','http://blog.csdn.net/column/details/designpatterns-qt.html?time=1504397110.705274','设计模式(Qt版)',20925),('设计模式','http://blog.csdn.net/column/details/cainiaojava.html?time=1504397110.705284','菜鸟版JAVA设计模式',20608),('设计模式','http://blog.csdn.net/column/details/artofdesignpattern.html?time=1504397147.842525','设计模式的艺术',32188),('设计模式','http://blog.csdn.net/column/details/phpusedesignpattern.html?time=1504397147.842563','设计模式之PHP项目应用',32084),('设计模式','http://blog.csdn.net/column/details/shejimoshishengsheng.html?time=1504397147.842574','设计模式',31211),('设计模式','http://blog.csdn.net/column/details/gof-design-pattern.html?time=1504397148.917243','小清新GoF23种设计模式',37214),('设计模式','http://blog.csdn.net/column/details/wenqiang.html?time=1504397148.917319','设计模式之禅',36820),('设计模式','http://blog.csdn.net/column/details/my-designpatterns.html?time=1504397148.917343','设计模式之禅',35473),('设计模式','http://blog.csdn.net/column/details/13856.html?time=1504397148.917355','设计模式',35343),('设计模式','http://blog.csdn.net/column/details/designerpattern.html?time=1504397148.917374','IOS设计模式浅析',34021),('设计模式','http://blog.csdn.net/column/details/14788.html?time=1504397169.06955','设计模式(Java)',42663),('设计模式','http://blog.csdn.net/column/details/xing-designpattern.html?time=1504397169.069585','写最好的设计模式专栏',41984),('设计模式','http://blog.csdn.net/column/details/patternsdesign.html?time=1504397169.069612','设计模式笔记',39943),('设计模式','http://blog.csdn.net/column/details/design-pattern23.html?time=1504397169.069619','C#设计模式',39683),('设计模式','http://blog.csdn.net/column/details/softwaredesign.html?time=1504397169.069627','设计模式',38667),('设计模式','http://blog.csdn.net/column/details/my-designpattern.html?time=1504397187.371844','设计模式与系统架构',45982),('设计模式','http://blog.csdn.net/column/details/design-pattern-homer.html?time=1504397187.371884','设计模式',45334),('设计模式','http://blog.csdn.net/column/details/designpatterns4java.html?time=1504397187.371891','23种设计模式 (java通俗演义)',45309),('设计模式','http://blog.csdn.net/column/details/designmodels.html?time=1504397190.39847','Java设计模式菜鸟系列',55068),('设计模式','http://blog.csdn.net/column/details/dahua.html?time=1504397190.398502','大话设计模式',52795),('设计模式','http://blog.csdn.net/column/details/hacke2-designpatter.html?time=1504397190.398529','设计模式读书笔记与总结',51733),('设计模式','http://blog.csdn.net/column/details/phpdesign.html?time=1504397190.398554','PHP设计模式',50940),('设计模式','http://blog.csdn.net/column/details/oodesign.html?time=1504397190.398565','设计模式攻略',50517),('设计模式','http://blog.csdn.net/column/details/designpatterns.html?time=1504397212.375372','大话设计模式',74317),('设计模式','http://blog.csdn.net/column/details/design2.html?time=1504397212.375414','乱砍设计模式',73553),('设计模式','http://blog.csdn.net/column/details/oodm.html?time=1504397214.473014','面向对象设计模式',88522),('设计模式','http://blog.csdn.net/column/details/designpatternforb.html?time=1504397218.561337','\"围观\"设计模式',111842),('设计模式','http://blog.csdn.net/column/details/cpp-design-pattern.html?time=1504397222.635081','C++设计模式',301986),('设计模式','http://blog.csdn.net/column/details/designpattern-xt.html?time=1504397222.635114','DesignPattern(设计模式)',247774),('设计模式','http://blog.csdn.net/column/details/mydesignpattern.html?time=1504397222.635124','我所理解的设计模式',229306),('mysql','http://blog.csdn.net/column/details/mysqlcentury.html?time=1504569601.821337','MySQL进阶',1224651),('mysql','http://blog.csdn.net/column/details/mysql-in-action.html?time=1504569601.821378','mysql 由浅入深',365406),('mysql','http://blog.csdn.net/column/details/mysqltw.html?time=1504569601.821402','MySQL图文进阶',344615),('mysql','http://blog.csdn.net/column/details/mysqldba.html?time=1504569601.821414','MySQL管理开发由浅入深',219332),('mysql','http://blog.csdn.net/column/details/evermysql.html?time=1504569601.821422','MySQL',189137),('mysql','http://blog.csdn.net/column/details/mysql-daydayup.html?time=1504569601.876222','Mysql提升',116623),('mysql','http://blog.csdn.net/column/details/mysql-tzx.html?time=1504569601.876252','mysql知识汇总和提高',109729),('mysql','http://blog.csdn.net/column/details/zhy-study-mysql.html?time=1504569601.876265','Mysql',91692),('mysql','http://blog.csdn.net/column/details/14121.html?time=1504569601.876273','如何让Mysql跑的更快',85450),('mysql','http://blog.csdn.net/column/details/mysqlzl544434558.html?time=1504569601.876283','项目中积累的mysql使用经验',78795),('设计模式','http://blog.csdn.net/column/details/pattern.html?time=1504569601.933179','设计模式',1277080),('设计模式','http://blog.csdn.net/column/details/design.html?time=1504569601.933214','设计模式C++实现',457143),('设计模式','http://blog.csdn.net/column/details/designpatternzh.html?time=1504569601.933225','跟着ZHONGHuan学习设计模式',369642),('设计模式','http://blog.csdn.net/column/details/design-patterns.html?time=1504569601.97134','设计模式',161729),('设计模式','http://blog.csdn.net/column/details/csharpdesignpattern.html?time=1504569601.971389','C#设计模式',144421),('设计模式','http://blog.csdn.net/column/details/chenssy-design.html?time=1504569601.971401','设计模式读书笔记',129510),('设计模式','http://blog.csdn.net/column/details/code-design.html?time=1504569601.971407','设计模式融入生活',125267),('设计模式','http://blog.csdn.net/column/details/13826.html?time=1504569602.012973','云设计模式',63863),('设计模式','http://blog.csdn.net/column/details/eat-designpattern.html?time=1504569602.012999','硬啃设计模式',62760),('设计模式','http://blog.csdn.net/column/details/headfirst.html?time=1504569602.013018','HeadFirst 设计模式学习笔记',60734),('设计模式','http://blog.csdn.net/column/details/clouddesignpattern.html?time=1504569602.013025','云计算设计模式',59314),('设计模式','http://blog.csdn.net/column/details/shuangde800-design.html?time=1504569602.013036','设计模式征途',56129),('设计模式','http://blog.csdn.net/column/details/12698.html?time=1504569602.013042','Java设计模式实战',55978),('mysql','http://blog.csdn.net/column/details/mysqlstudy.html?time=1504569602.06442','mysql学习',27564),('mysql','http://blog.csdn.net/column/details/15651.html?time=1504569602.064448','MySql数据库调优',26827),('mysql','http://blog.csdn.net/column/details/14507.html?time=1504569602.064457','MySQL学习记录',25959),('mysql','http://blog.csdn.net/column/details/16135.html?time=1504569602.455441','Mysql架构设计',2558),('mysql','http://blog.csdn.net/column/details/13213.html?time=1504569602.455487','Mysql基本使用',2151),('设计模式','http://blog.csdn.net/column/details/designpatternforios.html?time=1504569602.509428','设计模式之深入学习IOS版',24136),('设计模式','http://blog.csdn.net/column/details/cppdesignpattern.html?time=1504569602.509471','C++设计模式',23727),('设计模式','http://blog.csdn.net/column/details/feihedp.html?time=1504569602.509483','浅显易懂的设计模式',23326),('设计模式','http://blog.csdn.net/column/details/lxq-shejimoshi.html?time=1504569602.509492','设计模式--Java描述',22421),('设计模式','http://blog.csdn.net/column/details/designpattern-cassie.html?time=1504569602.509499','设计模式',22320),('设计模式','http://blog.csdn.net/column/details/sjmsxuexibiji.html?time=1504569602.509507','设计模式学习笔记',22123),('设计模式','http://blog.csdn.net/column/details/12906.html?time=1504569602.509513','小话设计模式',22103),('设计模式','http://blog.csdn.net/column/details/12848.html?time=1504569602.509519','一天一个设计模式',22046),('mysql','http://blog.csdn.net/column/details/16623.html?time=1504569603.395968','MySQL源码研究',5589),('mysql','http://blog.csdn.net/column/details/shenruqianchu-mysql.html?time=1504569603.396002','深入浅出Mysql',5284),('mysql','http://blog.csdn.net/column/details/15343.html?time=1504569603.396021','史上最全的MySQL基础教程',4581),('mysql','http://blog.csdn.net/column/details/13738.html?time=1504569603.396034','MySql及NoSQL相关',4188),('mysql','http://blog.csdn.net/column/details/14622.html?time=1504569603.396042','MySQL',3788),('mysql','http://blog.csdn.net/column/details/16578.html?time=1504569603.396048','MYSQL',3698),('设计模式','http://blog.csdn.net/column/details/16634.html?time=1504569603.458112','设计模式',4544),('设计模式','http://blog.csdn.net/column/details/qkcoder.html?time=1504569603.458145','C++设计模式',4330),('设计模式','http://blog.csdn.net/column/details/15604.html?time=1504569603.458155','Head First设计模式',4271),('设计模式','http://blog.csdn.net/column/details/designpatternsumarry.html?time=1504569604.238696','设计模式',788),('设计模式','http://blog.csdn.net/column/details/14268.html?time=1504569604.23873','C# 设计模式',775),('设计模式','http://blog.csdn.net/column/details/15973.html?time=1504569604.238744','Java设计模式',333),('mysql','http://blog.csdn.net/column/details/16687.html?time=1504569604.355617','Mysql学习与实践笔记',2151),('mysql','http://blog.csdn.net/column/details/15364.html?time=1504569604.355652','MySQL',2121),('mysql','http://blog.csdn.net/column/details/15133.html?time=1504569604.355661','MySQL基本知识',1952),('mysql','http://blog.csdn.net/column/details/16190.html?time=1504569604.355672','mysql',1686),('mysql','http://blog.csdn.net/column/details/15775.html?time=1504569604.355681','MySQL详解',1236),('mysql','http://blog.csdn.net/column/details/15110.html?time=1504569604.355687','MySQL入门详解',1057),('mysql','http://blog.csdn.net/column/details/mysql1209.html?time=1504569605.438889','mysql优化',6971),('mysql','http://blog.csdn.net/column/details/mysql1.html?time=1504569605.438938','踟蹰MySQL',6479),('mysql','http://blog.csdn.net/column/details/13369.html?time=1504569605.43895','mysql的使用',6384),('mysql','http://blog.csdn.net/column/details/16983.html?time=1504569605.438961','MySQL从入门到精通',6169),('mysql','http://blog.csdn.net/column/details/13509.html?time=1504569605.438988','MySQl数据库嵌入式开发',5782),('mysql','http://blog.csdn.net/column/details/mysql56-refer.html?time=1504569605.438998','MySQL 5.6 参考',5743),('设计模式','http://blog.csdn.net/column/details/15026.html?time=1504569605.490194','Java 设计模式',1474),('设计模式','http://blog.csdn.net/column/details/13662.html?time=1504569605.490222','Java设计模式学习',1350),('设计模式','http://blog.csdn.net/column/details/16040.html?time=1504569605.490231','java设计模式',1293),('设计模式','http://blog.csdn.net/column/details/16088.html?time=1504569605.490239','设计模式',1231),('设计模式','http://blog.csdn.net/column/details/zhdldesignpattern.html?time=1504569605.490249','设计模式之木叶村之旅',1174),('设计模式','http://blog.csdn.net/column/details/15600.html?time=1504569605.490255','设计模式小解',1020),('设计模式','http://blog.csdn.net/column/details/12965.html?time=1504569606.41041','设计模式',2144),('设计模式','http://blog.csdn.net/column/details/14987.html?time=1504569606.41044','设计模式',2059),('设计模式','http://blog.csdn.net/column/details/14187.html?time=1504569606.410451','设计模式-java',1782),('设计模式','http://blog.csdn.net/column/details/15050.html?time=1504569606.410456','设计模式',1733),('设计模式','http://blog.csdn.net/column/details/13865.html?time=1504569606.410464','java设计模式',1625),('设计模式','http://blog.csdn.net/column/details/15456.html?time=1504569606.41047','常用Java设计模式系列',1599),('设计模式','http://blog.csdn.net/column/details/java-design-pattern.html?time=1504569607.47506','Java设计模式',2999),('设计模式','http://blog.csdn.net/column/details/yrp-design-pattern.html?time=1504569607.475092','设计模式与应用',2936),('设计模式','http://blog.csdn.net/column/details/16218.html?time=1504569607.475102','设计模式',2715),('设计模式','http://blog.csdn.net/column/details/16553.html?time=1504569607.47511','设计模式',2473),('设计模式','http://blog.csdn.net/column/details/14288.html?time=1504569607.475116','设计模式',2442),('设计模式','http://blog.csdn.net/column/details/15028.html?time=1504569607.475124','设计模式',2322),('mysql','http://blog.csdn.net/column/details/13337.html?time=1504569655.914957','mysql数据库',11672),('mysql','http://blog.csdn.net/column/details/mysqlbywangjianan.html?time=1504569655.914998','mysql数据库',11052),('mysql','http://blog.csdn.net/column/details/13534.html?time=1504569655.915007','Mysql系列',10980),('mysql','http://blog.csdn.net/column/details/13489.html?time=1504569655.915014','MySQL基础知识大全',10787),('设计模式','http://blog.csdn.net/column/details/sjmsjc.html?time=1504569666.893921','设计模式',9905),('设计模式','http://blog.csdn.net/column/details/designpatternsummary.html?time=1504569666.893967','大话设计模式',9652),('设计模式','http://blog.csdn.net/column/details/shenruqianchu-design.html?time=1504569666.893977','深入浅出设计模式',9514),('设计模式','http://blog.csdn.net/column/details/designpattern1.html?time=1504569666.893986','设计模式',9281),('设计模式','http://blog.csdn.net/column/details/zysjms.html?time=1504569667.845943','设计模式',11058),('设计模式','http://blog.csdn.net/column/details/designmodel.html?time=1504569667.845975','设计模式',10744),('设计模式','http://blog.csdn.net/column/details/13758.html?time=1504569667.845984','java设计模式学习',10560),('设计模式','http://blog.csdn.net/column/details/javapatternexample.html?time=1504569667.84599','java设计模式实例',10497),('mysql','http://blog.csdn.net/column/details/yinfeng-mysql.html?time=1504569690.104815','MySQL内核与性能优化',9783),('mysql','http://blog.csdn.net/column/details/13281.html?time=1504569690.104844','MySQL-数据库-JDBC',9047),('mysql','http://blog.csdn.net/column/details/13516.html?time=1504569690.104853','MySQL路线',8080),('mysql','http://blog.csdn.net/column/details/detailofmysql.html?time=1504569692.014784','MySQL详解',48287),('mysql','http://blog.csdn.net/column/details/oracle2mysql.html?time=1504569692.014824','从Oracle到MySQL',44559),('mysql','http://blog.csdn.net/column/details/cppformysqlpro.html?time=1504569692.014834','visual c++ 2008进行MySQL编程（ODBC）',44148),('mysql','http://blog.csdn.net/column/details/14861.html?time=1504569704.3223','高性能MySQL',13975),('mysql','http://blog.csdn.net/column/details/13301.html?time=1504569704.322337','MySQL',12319),('mysql','http://blog.csdn.net/column/details/studymysql.html?time=1504569710.214284','MySQL数据库学习',15105),('mysql','http://blog.csdn.net/column/details/wenniuwuren-mysql.html?time=1504569710.214311','MySQL 入门到调优',15017),('mysql','http://blog.csdn.net/column/details/tangowl-mysql-intro.html?time=1504569711.242951','MySQL 入门教程',20611),('mysql','http://blog.csdn.net/column/details/mysql-dablelv.html?time=1504569711.242983','MySQL基础',20187),('mysql','http://blog.csdn.net/column/details/mysqlwu.html?time=1504569711.242995','MySQL必知必会学习笔记',19189),('mysql','http://blog.csdn.net/column/details/13881.html?time=1504569711.243001','mysql索引与优化',19120),('mysql','http://blog.csdn.net/column/details/15548.html?time=1504569711.243009','数据库(MySQL)',19055),('mysql','http://blog.csdn.net/column/details/13005.html?time=1504569725.325256','MySQL必知必会',40245),('mysql','http://blog.csdn.net/column/details/16138.html?time=1504569725.325288','史上最简单的 MySQL 教程',39689),('mysql','http://blog.csdn.net/column/details/13220.html?time=1504569725.325303','mysql',32853),('mysql','http://blog.csdn.net/column/details/mysql-001.html?time=1504569725.325312','高性能MySQL',31414),('设计模式','http://blog.csdn.net/column/details/design-patterns-xue.html?time=1504569725.383529','设计模式',5585),('设计模式','http://blog.csdn.net/column/details/gof-23design.html?time=1504569725.383562','Gof 设计模式',5585),('设计模式','http://blog.csdn.net/column/details/14723.html?time=1504569725.383577','设计模式',5386),('设计模式','http://blog.csdn.net/column/details/12992.html?time=1504569725.383591','设计模式备忘录',5083),('设计模式','http://blog.csdn.net/column/details/designpatterns-haoz.html?time=1504569725.383601','设计模式解析',5014),('设计模式','http://blog.csdn.net/column/details/designpatternsjiange.html?time=1504569725.383613','设计模式',4835),('设计模式','http://blog.csdn.net/column/details/shejimoshi1.html?time=1504569725.383627','设计模式',4644),('设计模式','http://blog.csdn.net/column/details/designpatternnotewyj.html?time=1504569726.453477','设计模式笔记整理',3674),('设计模式','http://blog.csdn.net/column/details/javamodel.html?time=1504569726.453501','JAVA设计模式',3667),('设计模式','http://blog.csdn.net/column/details/13164.html?time=1504569726.453511','设计模式',3520),('设计模式','http://blog.csdn.net/column/details/javascriptdesgin.html?time=1504569726.453517','javascript设计模式',3500),('设计模式','http://blog.csdn.net/column/details/15193.html?time=1504569726.453523','赵建银-设计模式学习',3459),('设计模式','http://blog.csdn.net/column/details/design-pattern-zen.html?time=1504569726.45353','《设计模式之禅》读书笔记',3353),('设计模式','http://blog.csdn.net/column/details/15839.html?time=1504569726.453541','设计模式',3163),('设计模式','http://blog.csdn.net/column/details/16632.html?time=1504569726.453547','设计模式学习笔记',3145),('mysql','http://blog.csdn.net/column/details/13794.html?time=1504569738.413221','MySQL',162439),('mysql','http://blog.csdn.net/column/details/mysqlnote.html?time=1504569738.413252','MySQL进阶指南',146423),('mysql','http://blog.csdn.net/column/details/mysql-1.html?time=1504569738.413282','MySQL从入门到精通',126336),('mysql','http://blog.csdn.net/column/details/mysqlsummary.html?time=1504569739.443316','Mysql数据库总结',69931),('mysql','http://blog.csdn.net/column/details/mysqlpri.html?time=1504569739.443345','思考mysql内核之初级系列',66422),('mysql','http://blog.csdn.net/column/details/15260.html?time=1504569739.443355','MySQL技术',58532),('mysql','http://blog.csdn.net/column/details/conquermysql.html?time=1504569739.443365','征服数据库之mysql',50666),('设计模式','http://blog.csdn.net/column/details/13439.html?time=1504569762.650319','JavaScript设计模式',6161),('设计模式','http://blog.csdn.net/column/details/javadesign-pattern.html?time=1504569762.650346','JAVA设计模式笔记',6097),('设计模式','http://blog.csdn.net/column/details/14351.html?time=1504569762.650355','java23种设计模式',5839),('设计模式','http://blog.csdn.net/column/details/14410.html?time=1504569762.650362','设计模式',5753),('设计模式','http://blog.csdn.net/column/details/hgbshejimoshi.html?time=1504569762.650372','设计模式',5639),('设计模式','http://blog.csdn.net/column/details/14875.html?time=1504569765.715268','设计模式',6899),('设计模式','http://blog.csdn.net/column/details/14948.html?time=1504569765.715299','php，java实现设计模式',6852),('设计模式','http://blog.csdn.net/column/details/design-pattern-lin.html?time=1504569765.715306','设计模式',6823),('设计模式','http://blog.csdn.net/column/details/xfzsjms.html?time=1504569765.715315','设计模式',6778),('设计模式','http://blog.csdn.net/column/details/designpattern2.html?time=1504569765.715322','设计模式',6677),('设计模式','http://blog.csdn.net/column/details/14533.html?time=1504569765.715331','23种设计模式',6399),('设计模式','http://blog.csdn.net/column/details/tuimo.html?time=1504569765.715338','设计模式',6291),('设计模式','http://blog.csdn.net/column/details/designpatterns.html?time=1504569795.682603','大话设计模式',74471),('设计模式','http://blog.csdn.net/column/details/design2.html?time=1504569795.682629','乱砍设计模式',73718),('设计模式','http://blog.csdn.net/column/details/dahua-shejimoshi.html?time=1504569796.868722','大话设计模式',9073),('设计模式','http://blog.csdn.net/column/details/designpattern001.html?time=1504569796.868752','设计模式实战',8918),('设计模式','http://blog.csdn.net/column/details/habren-design-patter.html?time=1504569796.868763','跟着Jason学 设计模式',8654),('设计模式','http://blog.csdn.net/column/details/dpatterns.html?time=1504569796.86877','设计模式',8544),('设计模式','http://blog.csdn.net/column/details/learn-design-pattern.html?time=1504569796.868777','初识设计模式',8372),('设计模式','http://blog.csdn.net/column/details/learnofdesignpattern.html?time=1504569796.868782','设计模式',8343),('设计模式','http://blog.csdn.net/column/details/artofdesignpattern.html?time=1504569798.886258','设计模式的艺术',32220),('设计模式','http://blog.csdn.net/column/details/phpusedesignpattern.html?time=1504569798.886283','设计模式之PHP项目应用',32171),('设计模式','http://blog.csdn.net/column/details/shejimoshishengsheng.html?time=1504569798.886293','设计模式',31325),('设计模式','http://blog.csdn.net/column/details/java-design-mode.html?time=1504569825.049192','java设计模式',11632),('设计模式','http://blog.csdn.net/column/details/desginpattern.html?time=1504569825.049218','设计模式',11422),('设计模式','http://blog.csdn.net/column/details/design-patterns001.html?time=1504569825.049226','设计模式的六大原则',11407),('设计模式','http://blog.csdn.net/column/details/theonegis-design.html?time=1504569825.049235','设计模式学习笔记',11303),('设计模式','http://blog.csdn.net/column/details/13891.html?time=1504569826.078393','《设计模式》',12280),('设计模式','http://blog.csdn.net/column/details/lius0011.html?time=1504569826.078423','设计模式实例',12164),('设计模式','http://blog.csdn.net/column/details/13400.html?time=1504569826.078431','设计模式',12161),('设计模式','http://blog.csdn.net/column/details/zhenghaozhuanlan.html?time=1504569826.078437','设计模式',12113),('设计模式','http://blog.csdn.net/column/details/designpattern-qiu.html?time=1504569826.078446','设计模式',11940),('设计模式','http://blog.csdn.net/column/details/mydesignpatterns.html?time=1504569826.07847','设计模式通俗讲解&&C++实现',11825),('设计模式','http://blog.csdn.net/column/details/designpatternsharing.html?time=1504569826.078476','设计模式',11777),('设计模式','http://blog.csdn.net/column/details/13088.html?time=1504569827.099899','设计模式',13214),('设计模式','http://blog.csdn.net/column/details/javadesignmodel.html?time=1504569827.099931','23天征服--23种设计模式',13165),('设计模式','http://blog.csdn.net/column/details/lxydahua.html?time=1504569827.099941','大话设计模式',12944),('设计模式','http://blog.csdn.net/column/details/patternofjie.html?time=1504569827.099949','设计模式',12642),('设计模式','http://blog.csdn.net/column/details/walker1.html?time=1504569827.099956','设计模式C++实现',12502),('设计模式','http://blog.csdn.net/column/details/mydesignpattern35.html?time=1504569828.04888','设计模式之全解析',14721),('设计模式','http://blog.csdn.net/column/details/gof-design-patterns.html?time=1504569828.048912','GoF设计模式',14689),('设计模式','http://blog.csdn.net/column/details/shms520.html?time=1504569828.04892','设计模式',14608),('设计模式','http://blog.csdn.net/column/details/note-design-pattern.html?time=1504569828.048928','设计模式笔记',14422),('设计模式','http://blog.csdn.net/column/details/mdmcsdn1.html?time=1504569872.461853','设计模式',16620),('设计模式','http://blog.csdn.net/column/details/design-pattern-hxm.html?time=1504569872.461887','设计模式之android',16198),('设计模式','http://blog.csdn.net/column/details/ourdesignpattern.html?time=1504569872.461895','设计模式',16016),('设计模式','http://blog.csdn.net/column/details/16401.html?time=1504569872.461901','24种设计模式',16004),('设计模式','http://blog.csdn.net/column/details/13196.html?time=1504569872.461908','设计模式',15535),('设计模式','http://blog.csdn.net/column/details/suski-pattern.html?time=1504569872.461915','《大话设计模式》读后感',15328),('设计模式','http://blog.csdn.net/column/details/design-pattern.html?time=1504569892.560753','设计模式在实际项目中的应用',18165),('设计模式','http://blog.csdn.net/column/details/xiaomaolv.html?time=1504569892.560793','设计模式',18140),('设计模式','http://blog.csdn.net/column/details/designpatterns-night.html?time=1504569892.560804','设计模式',17937),('设计模式','http://blog.csdn.net/column/details/16366.html?time=1504569892.560812','设计模式讲解与代码实践',17421),('设计模式','http://blog.csdn.net/column/details/javadesignpattern.html?time=1504569892.560821','设计模式',16924),('设计模式','http://blog.csdn.net/column/details/sjms.html?time=1504569893.568273','设计模式',19429),('设计模式','http://blog.csdn.net/column/details/dhsjms.html?time=1504569893.568307','大话设计模式',19204),('设计模式','http://blog.csdn.net/column/details/huohuo.html?time=1504569893.56832','大话设计模式',19179),('设计模式','http://blog.csdn.net/column/details/extenddesignpattern.html?time=1504569893.568334','可扩展性与设计模式',18731),('设计模式','http://blog.csdn.net/column/details/designaction.html?time=1504569894.446974','设计模式',27308),('设计模式','http://blog.csdn.net/column/details/design-pattern-java.html?time=1504569894.447006','设计模式（JAVA）',27050),('设计模式','http://blog.csdn.net/column/details/baadf00df00dabadfds0.html?time=1504569894.447018','初探设计模式（C++实现）',25838),('设计模式','http://blog.csdn.net/column/details/ef3c5ec0-f3c9-48af.html?time=1504569894.447025','设计模式精解',25690),('设计模式','http://blog.csdn.net/column/details/designpatternbylmb.html?time=1504569894.447037','大话设计模式',24538),('设计模式','http://blog.csdn.net/column/details/designpattern32.html?time=1504569895.524494','设计模式',22012),('设计模式','http://blog.csdn.net/column/details/designpatterns-qt.html?time=1504569895.524522','设计模式(Qt版)',20935),('设计模式','http://blog.csdn.net/column/details/cainiaojava.html?time=1504569895.524531','菜鸟版JAVA设计模式',20642),('设计模式','http://blog.csdn.net/column/details/design--mode.html?time=1504569931.786902','大话设计模式',7791),('设计模式','http://blog.csdn.net/column/details/shejimoshismile.html?time=1504569931.786925','设计模式',7748),('设计模式','http://blog.csdn.net/column/details/guus-sjms.html?time=1504569931.786932','设计模式大全',7704),('设计模式','http://blog.csdn.net/column/details/14866.html?time=1504569931.786995','设计模式之(C++实现)',7480),('设计模式','http://blog.csdn.net/column/details/design-pattern-123.html?time=1504569931.787021','设计模式',7192),('设计模式','http://blog.csdn.net/column/details/chaogeshejimoshi.html?time=1504569931.787027','Java设计模式简明教程',7128),('设计模式','http://blog.csdn.net/column/details/pattern23.html?time=1504569931.787033','设计模式',7047),('设计模式','http://blog.csdn.net/column/details/gof-design-pattern.html?time=1504569950.920399','小清新GoF23种设计模式',37283),('设计模式','http://blog.csdn.net/column/details/wenqiang.html?time=1504569950.920427','设计模式之禅',36925),('设计模式','http://blog.csdn.net/column/details/13856.html?time=1504569950.92044','设计模式',35537),('设计模式','http://blog.csdn.net/column/details/my-designpatterns.html?time=1504569950.920446','设计模式之禅',35529),('设计模式','http://blog.csdn.net/column/details/designerpattern.html?time=1504569950.920456','IOS设计模式浅析',34051),('设计模式','http://blog.csdn.net/column/details/14788.html?time=1504569951.938825','设计模式(Java)',42753),('设计模式','http://blog.csdn.net/column/details/xing-designpattern.html?time=1504569951.938861','写最好的设计模式专栏',42088),('设计模式','http://blog.csdn.net/column/details/patternsdesign.html?time=1504569951.938874','设计模式笔记',39972),('设计模式','http://blog.csdn.net/column/details/design-pattern23.html?time=1504569951.93888','C#设计模式',39744),('设计模式','http://blog.csdn.net/column/details/softwaredesign.html?time=1504569951.938894','设计模式',38696),('设计模式','http://blog.csdn.net/column/details/my-designpattern.html?time=1504569953.94896','设计模式与系统架构',46025),('设计模式','http://blog.csdn.net/column/details/designpatterns4java.html?time=1504569953.948991','23种设计模式 (java通俗演义)',45339),('设计模式','http://blog.csdn.net/column/details/design-pattern-homer.html?time=1504569953.949015','设计模式',45337),('设计模式','http://blog.csdn.net/column/details/dhsjms-cplusplus.html?time=1504569990.260147','《大话设计模式》C++实现',28106),('设计模式','http://blog.csdn.net/column/details/17017.html?time=1504569990.260179','快速扩展和迭代 - 设计模式',28033),('设计模式','http://blog.csdn.net/column/details/design--pattern.html?time=1504569990.260186','设计模式',28003),('设计模式','http://blog.csdn.net/column/details/ds-1.html?time=1504569990.260193','大话设计模式',27988),('设计模式','http://blog.csdn.net/column/details/14308.html?time=1504569990.260199','设计模式之美',27401),('设计模式','http://blog.csdn.net/column/details/designmodels.html?time=1504569991.278498','Java设计模式菜鸟系列',55181),('设计模式','http://blog.csdn.net/column/details/dahua.html?time=1504569991.278528','大话设计模式',52911),('设计模式','http://blog.csdn.net/column/details/hacke2-designpatter.html?time=1504569991.278539','设计模式读书笔记与总结',51765),('设计模式','http://blog.csdn.net/column/details/phpdesign.html?time=1504569991.278546','PHP设计模式',51086),('设计模式','http://blog.csdn.net/column/details/oodesign.html?time=1504569991.278554','设计模式攻略',50555),('设计模式','http://blog.csdn.net/column/details/oodm.html?time=1504569992.204605','面向对象设计模式',88568),('设计模式','http://blog.csdn.net/column/details/cpp-design-pattern.html?time=1504570022.47007','C++设计模式',302051),('设计模式','http://blog.csdn.net/column/details/designpattern-xt.html?time=1504570022.470103','DesignPattern(设计模式)',247805),('设计模式','http://blog.csdn.net/column/details/mydesignpattern.html?time=1504570022.470113','我所理解的设计模式',229581),('设计模式','http://blog.csdn.net/column/details/designpatternforb.html?time=1504570023.383055','\"围观\"设计模式',111913),('uml','http://blog.csdn.net/column/details/shejimoshi-17.html?time=1504578362.360841','uml',14494),('uml','http://blog.csdn.net/column/details/umlclass.html?time=1504578362.36089','UML',14214),('uml','http://blog.csdn.net/column/details/sweetyoyy.html?time=1504578398.631052','UML学习',4296),('uml','http://blog.csdn.net/column/details/zyumljm.html?time=1504578398.631344','UML建模',3912),('uml','http://blog.csdn.net/column/details/txbuml.html?time=1504578398.631361','UML',3834),('uml','http://blog.csdn.net/column/details/15059.html?time=1504578400.75305','UML知识',1176),('uml','http://blog.csdn.net/column/details/13140.html?time=1504578402.864093','UML',2777),('uml','http://blog.csdn.net/column/details/12939.html?time=1504578403.954981','UML 学习总结',3238),('uml','http://blog.csdn.net/column/details/uml-jianfei.html?time=1504578415.930007','UML',5152),('uml','http://blog.csdn.net/column/details/uml-learning.html?time=1504578415.930032','UML',5151),('uml','http://blog.csdn.net/column/details/13175.html?time=1504578415.930043','UML--统一建模语言',4802),('uml','http://blog.csdn.net/column/details/uml12.html?time=1504578418.095323','UML',6192),('uml','http://blog.csdn.net/column/details/uml-1.html?time=1504578418.095349','UML',6126),('uml','http://blog.csdn.net/column/details/umlhello.html?time=1504578418.095363','UML',5714),('redis','http://blog.csdn.net/column/details/redis-code.html?time=1504578422.246709','Redis源码分析',151179),('uml','http://blog.csdn.net/column/details/uml-faith.html?time=1504578432.237451','UML',8782),('uml','http://blog.csdn.net/column/details/uml001.html?time=1504578432.237495','实战UML',8714),('uml','http://blog.csdn.net/column/details/uml-design.html?time=1504578432.237503','UML',8636),('uml','http://blog.csdn.net/column/details/uml9-1.html?time=1504578432.237511','UML9图学习',8430),('uml','http://blog.csdn.net/column/details/uml20141029.html?time=1504578433.366456','UML',9804),('uml','http://blog.csdn.net/column/details/mqp66uml.html?time=1504578433.366491','uml专栏',9505),('uml','http://blog.csdn.net/column/details/uml-cyl.html?time=1504578434.441407','UML学习',10994),('uml','http://blog.csdn.net/column/details/lingzai6818.html?time=1504578434.441441','UML',10237),('uml','http://blog.csdn.net/column/details/thinkinuml.html?time=1504578450.50379','UML',12373),('uml','http://blog.csdn.net/column/details/victor-uml.html?time=1504578450.503829','UML',11966),('uml','http://blog.csdn.net/column/details/shejimoshi-17.html?time=1504578456.367744','uml',14494),('uml','http://blog.csdn.net/column/details/umlclass.html?time=1504578456.367771','UML',14214),('uml','http://blog.csdn.net/column/details/modelinglanguage.html?time=1504578457.677962','UML',16620),('uml','http://blog.csdn.net/column/details/csuml.html?time=1504578457.67801','UML',16320),('uml','http://blog.csdn.net/column/details/hugh-uml.html?time=1504578458.674292','UML',18324),('redis','http://blog.csdn.net/column/details/redis-code.html?time=1504578474.232147','Redis源码分析',151179),('redis','http://blog.csdn.net/column/details/13859.html?time=1504578474.396213','Redis',58368),('uml','http://blog.csdn.net/column/details/switch-uml.html?time=1504578474.871888','UML与需求分析学习笔记',28396),('uml','http://blog.csdn.net/column/details/uml-11.html?time=1504578477.973798','UML学习之路',43355),('uml','http://blog.csdn.net/column/details/lshuml.html?time=1504578479.974022','UML详解',44868),('uml','http://blog.csdn.net/column/details/myuml.html?time=1504578479.974049','UML设计',44178),('uml','http://blog.csdn.net/column/details/umlmodelingtechnolog.html?time=1504578491.086269','UML建模技术',236096),('redis','http://blog.csdn.net/column/details/13313.html?time=1504578494.892304','Redis技术相关',11303),('redis','http://blog.csdn.net/column/details/13266.html?time=1504578494.892343','redis命令详解与应用',11181),('redis','http://blog.csdn.net/column/details/15428.html?time=1504578502.766619','Redis 3.2.8 源码剖析注释',19924),('redis','http://blog.csdn.net/column/details/16017.html?time=1504578503.846967','redis学习',21248),('mysql','http://blog.csdn.net/column/details/mysqlcentury.html?time=1504742401.858529','MySQL进阶',1224972),('mysql','http://blog.csdn.net/column/details/mysql-in-action.html?time=1504742401.858666','mysql 由浅入深',365473),('mysql','http://blog.csdn.net/column/details/mysqltw.html?time=1504742401.85868','MySQL图文进阶',345953),('mysql','http://blog.csdn.net/column/details/mysqldba.html?time=1504742401.858747','MySQL管理开发由浅入深',219877),('mysql','http://blog.csdn.net/column/details/evermysql.html?time=1504742401.858778','MySQL',189539),('设计模式','http://blog.csdn.net/column/details/pattern.html?time=1504742401.982755','设计模式',1278982),('设计模式','http://blog.csdn.net/column/details/design.html?time=1504742401.982806','设计模式C++实现',457723),('设计模式','http://blog.csdn.net/column/details/designpatternzh.html?time=1504742401.982816','跟着ZHONGHuan学习设计模式',369715),('mysql','http://blog.csdn.net/column/details/mysqlstudy.html?time=1504742402.018234','mysql学习',27613),('mysql','http://blog.csdn.net/column/details/15651.html?time=1504742402.018259','MySql数据库调优',27185),('mysql','http://blog.csdn.net/column/details/14507.html?time=1504742402.018269','MySQL学习记录',26001),('mysql','http://blog.csdn.net/column/details/mysql-daydayup.html?time=1504742402.073235','Mysql提升',116973),('mysql','http://blog.csdn.net/column/details/mysql-tzx.html?time=1504742402.073268','mysql知识汇总和提高',109828),('mysql','http://blog.csdn.net/column/details/zhy-study-mysql.html?time=1504742402.073281','Mysql',91973),('mysql','http://blog.csdn.net/column/details/14121.html?time=1504742402.073287','如何让Mysql跑的更快',85550),('mysql','http://blog.csdn.net/column/details/mysqlzl544434558.html?time=1504742402.073296','项目中积累的mysql使用经验',79081),('设计模式','http://blog.csdn.net/column/details/design-patterns.html?time=1504742402.115177','设计模式',161824),('设计模式','http://blog.csdn.net/column/details/csharpdesignpattern.html?time=1504742402.115201','C#设计模式',144720),('设计模式','http://blog.csdn.net/column/details/chenssy-design.html?time=1504742402.115213','设计模式读书笔记',130989),('redis','http://blog.csdn.net/column/details/redis-code.html?time=1504742402.144784','Redis源码分析',151842),('redis','http://blog.csdn.net/column/details/13859.html?time=1504742402.200981','Redis',58867),('设计模式','http://blog.csdn.net/column/details/13826.html?time=1504742402.231256','云设计模式',63967),('设计模式','http://blog.csdn.net/column/details/eat-designpattern.html?time=1504742402.23128','硬啃设计模式',62802),('设计模式','http://blog.csdn.net/column/details/headfirst.html?time=1504742402.23129','HeadFirst 设计模式学习笔记',60770),('设计模式','http://blog.csdn.net/column/details/clouddesignpattern.html?time=1504742402.231297','云计算设计模式',59486),('设计模式','http://blog.csdn.net/column/details/shuangde800-design.html?time=1504742402.231308','设计模式征途',56174),('设计模式','http://blog.csdn.net/column/details/12698.html?time=1504742402.231314','Java设计模式实战',56131),('mysql','http://blog.csdn.net/column/details/16135.html?time=1504742402.368575','Mysql架构设计',2581),('mysql','http://blog.csdn.net/column/details/16687.html?time=1504742402.368602','Mysql学习与实践笔记',2211),('设计模式','http://blog.csdn.net/column/details/designpatternforios.html?time=1504742402.501714','设计模式之深入学习IOS版',24164),('设计模式','http://blog.csdn.net/column/details/cppdesignpattern.html?time=1504742402.501741','C++设计模式',23760),('设计模式','http://blog.csdn.net/column/details/feihedp.html?time=1504742402.50175','浅显易懂的设计模式',23357),('设计模式','http://blog.csdn.net/column/details/lxq-shejimoshi.html?time=1504742402.501759','设计模式--Java描述',22464),('设计模式','http://blog.csdn.net/column/details/designpattern-cassie.html?time=1504742402.501765','设计模式',22325),('设计模式','http://blog.csdn.net/column/details/12906.html?time=1504742402.50179','小话设计模式',22164),('设计模式','http://blog.csdn.net/column/details/sjmsxuexibiji.html?time=1504742402.501796','设计模式学习笔记',22151),('设计模式','http://blog.csdn.net/column/details/12848.html?time=1504742402.501801','一天一个设计模式',22091),('mysql','http://blog.csdn.net/column/details/16623.html?time=1504742403.159125','MySQL源码研究',5744),('mysql','http://blog.csdn.net/column/details/shenruqianchu-mysql.html?time=1504742403.159158','深入浅出Mysql',5298),('mysql','http://blog.csdn.net/column/details/15343.html?time=1504742403.159168','史上最全的MySQL基础教程',4638),('mysql','http://blog.csdn.net/column/details/13738.html?time=1504742403.159177','MySql及NoSQL相关',4233),('mysql','http://blog.csdn.net/column/details/14622.html?time=1504742403.159184','MySQL',3823),('mysql','http://blog.csdn.net/column/details/16578.html?time=1504742403.15919','MYSQL',3771),('设计模式','http://blog.csdn.net/column/details/qkcoder.html?time=1504742403.229988','C++设计模式',4342),('设计模式','http://blog.csdn.net/column/details/15604.html?time=1504742403.230052','Head First设计模式',4292),('设计模式','http://blog.csdn.net/column/details/14268.html?time=1504742404.153063','C# 设计模式',822),('设计模式','http://blog.csdn.net/column/details/designpatternsumarry.html?time=1504742404.153094','设计模式',789),('设计模式','http://blog.csdn.net/column/details/15973.html?time=1504742404.153108','Java设计模式',333),('mysql','http://blog.csdn.net/column/details/13213.html?time=1504742404.269955','Mysql基本使用',2161),('mysql','http://blog.csdn.net/column/details/15364.html?time=1504742404.269985','MySQL',2154),('mysql','http://blog.csdn.net/column/details/15133.html?time=1504742404.269994','MySQL基本知识',1977),('mysql','http://blog.csdn.net/column/details/16190.html?time=1504742404.27002','mysql',1697),('mysql','http://blog.csdn.net/column/details/15775.html?time=1504742404.270045','MySQL详解',1244),('mysql','http://blog.csdn.net/column/details/15110.html?time=1504742404.270056','MySQL入门详解',1060),('设计模式','http://blog.csdn.net/column/details/15026.html?time=1504742405.189885','Java 设计模式',1483),('设计模式','http://blog.csdn.net/column/details/13662.html?time=1504742405.189919','Java设计模式学习',1356),('设计模式','http://blog.csdn.net/column/details/16040.html?time=1504742405.189927','java设计模式',1298),('设计模式','http://blog.csdn.net/column/details/16088.html?time=1504742405.189954','设计模式',1248),('设计模式','http://blog.csdn.net/column/details/zhdldesignpattern.html?time=1504742405.189962','设计模式之木叶村之旅',1185),('设计模式','http://blog.csdn.net/column/details/15600.html?time=1504742405.18997','设计模式小解',1024),('mysql','http://blog.csdn.net/column/details/mysql1209.html?time=1504742405.312247','mysql优化',7050),('mysql','http://blog.csdn.net/column/details/mysql1.html?time=1504742405.312279','踟蹰MySQL',6494),('mysql','http://blog.csdn.net/column/details/13369.html?time=1504742405.312287','mysql的使用',6392),('mysql','http://blog.csdn.net/column/details/16983.html?time=1504742405.312295','MySQL从入门到精通',6237),('mysql','http://blog.csdn.net/column/details/13509.html?time=1504742405.312346','MySQl数据库嵌入式开发',5853),('mysql','http://blog.csdn.net/column/details/mysql56-refer.html?time=1504742405.312353','MySQL 5.6 参考',5766),('设计模式','http://blog.csdn.net/column/details/12965.html?time=1504742406.320392','设计模式',2165),('设计模式','http://blog.csdn.net/column/details/14987.html?time=1504742406.320493','设计模式',2070),('设计模式','http://blog.csdn.net/column/details/14187.html?time=1504742406.320526','设计模式-java',1790),('设计模式','http://blog.csdn.net/column/details/15050.html?time=1504742406.320552','设计模式',1743),('设计模式','http://blog.csdn.net/column/details/13865.html?time=1504742406.320564','java设计模式',1626),('设计模式','http://blog.csdn.net/column/details/15456.html?time=1504742406.320575','常用Java设计模式系列',1603),('设计模式','http://blog.csdn.net/column/details/java-design-pattern.html?time=1504742407.290613','Java设计模式',3003),('设计模式','http://blog.csdn.net/column/details/yrp-design-pattern.html?time=1504742407.290647','设计模式与应用',2943),('设计模式','http://blog.csdn.net/column/details/16218.html?time=1504742407.290667','设计模式',2720),('设计模式','http://blog.csdn.net/column/details/16553.html?time=1504742407.290676','设计模式',2511),('设计模式','http://blog.csdn.net/column/details/14288.html?time=1504742407.290683','设计模式',2451),('设计模式','http://blog.csdn.net/column/details/15028.html?time=1504742407.290689','设计模式',2389),('redis','http://blog.csdn.net/column/details/13313.html?time=1504742422.247385','Redis技术相关',11413),('redis','http://blog.csdn.net/column/details/13266.html?time=1504742422.247424','redis命令详解与应用',11301),('redis','http://blog.csdn.net/column/details/15428.html?time=1504742430.413685','Redis 3.2.8 源码剖析注释',20107),('redis','http://blog.csdn.net/column/details/16017.html?time=1504742431.78154','redis学习',21374),('mysql','http://blog.csdn.net/column/details/yinfeng-mysql.html?time=1504742481.615881','MySQL内核与性能优化',9801),('mysql','http://blog.csdn.net/column/details/13281.html?time=1504742481.615934','MySQL-数据库-JDBC',9082),('mysql','http://blog.csdn.net/column/details/13516.html?time=1504742481.615945','MySQL路线',8100),('mysql','http://blog.csdn.net/column/details/13337.html?time=1504742482.705248','mysql数据库',11704),('mysql','http://blog.csdn.net/column/details/mysqlbywangjianan.html?time=1504742482.705286','mysql数据库',11104),('mysql','http://blog.csdn.net/column/details/13534.html?time=1504742482.705295','Mysql系列',11012),('mysql','http://blog.csdn.net/column/details/13489.html?time=1504742482.705302','MySQL基础知识大全',10837),('mysql','http://blog.csdn.net/column/details/14861.html?time=1504742483.698553','高性能MySQL',14145),('mysql','http://blog.csdn.net/column/details/13301.html?time=1504742483.698586','MySQL',12331),('设计模式','http://blog.csdn.net/column/details/designpatternnotewyj.html?time=1504742500.668689','设计模式笔记整理',3677),('设计模式','http://blog.csdn.net/column/details/javamodel.html?time=1504742500.668721','JAVA设计模式',3670),('设计模式','http://blog.csdn.net/column/details/13164.html?time=1504742500.668733','设计模式',3533),('设计模式','http://blog.csdn.net/column/details/javascriptdesgin.html?time=1504742500.668744','javascript设计模式',3512),('设计模式','http://blog.csdn.net/column/details/15193.html?time=1504742500.668755','赵建银-设计模式学习',3509),('设计模式','http://blog.csdn.net/column/details/design-pattern-zen.html?time=1504742500.668768','《设计模式之禅》读书笔记',3354),('设计模式','http://blog.csdn.net/column/details/16632.html?time=1504742500.668776','设计模式学习笔记',3183),('设计模式','http://blog.csdn.net/column/details/15839.html?time=1504742500.668782','设计模式',3180),('mysql','http://blog.csdn.net/column/details/studymysql.html?time=1504742504.914766','MySQL数据库学习',15123),('mysql','http://blog.csdn.net/column/details/wenniuwuren-mysql.html?time=1504742504.914804','MySQL 入门到调优',15085),('mysql','http://blog.csdn.net/column/details/16138.html?time=1504742505.805191','史上最简单的 MySQL 教程',40903),('mysql','http://blog.csdn.net/column/details/13005.html?time=1504742505.805219','MySQL必知必会',40517),('mysql','http://blog.csdn.net/column/details/13220.html?time=1504742505.805235','mysql',33007),('mysql','http://blog.csdn.net/column/details/mysql-001.html?time=1504742505.805243','高性能MySQL',31471),('mysql','http://blog.csdn.net/column/details/tangowl-mysql-intro.html?time=1504742506.874924','MySQL 入门教程',20645),('mysql','http://blog.csdn.net/column/details/mysql-dablelv.html?time=1504742506.874965','MySQL基础',20272),('mysql','http://blog.csdn.net/column/details/mysqlwu.html?time=1504742506.874979','MySQL必知必会学习笔记',19251),('mysql','http://blog.csdn.net/column/details/15548.html?time=1504742506.874986','数据库(MySQL)',19215),('mysql','http://blog.csdn.net/column/details/13881.html?time=1504742506.874993','mysql索引与优化',19189),('设计模式','http://blog.csdn.net/column/details/hgbshejimoshi.html?time=1504742524.849446','设计模式',5643),('设计模式','http://blog.csdn.net/column/details/design-patterns-xue.html?time=1504742524.849476','设计模式',5603),('设计模式','http://blog.csdn.net/column/details/gof-23design.html?time=1504742524.849484','Gof 设计模式',5596),('设计模式','http://blog.csdn.net/column/details/14723.html?time=1504742524.84949','设计模式',5440),('设计模式','http://blog.csdn.net/column/details/12992.html?time=1504742524.849499','设计模式备忘录',5097),('设计模式','http://blog.csdn.net/column/details/designpatterns-haoz.html?time=1504742524.849522','设计模式解析',5023),('设计模式','http://blog.csdn.net/column/details/designpatternsjiange.html?time=1504742524.849528','设计模式',4871),('设计模式','http://blog.csdn.net/column/details/16634.html?time=1504742524.849535','设计模式',4796),('设计模式','http://blog.csdn.net/column/details/shejimoshi1.html?time=1504742524.849544','设计模式',4654),('设计模式','http://blog.csdn.net/column/details/13439.html?time=1504742528.861108','JavaScript设计模式',6168),('设计模式','http://blog.csdn.net/column/details/javadesign-pattern.html?time=1504742528.861141','JAVA设计模式笔记',6116),('设计模式','http://blog.csdn.net/column/details/14351.html?time=1504742528.861157','java23种设计模式',5853),('设计模式','http://blog.csdn.net/column/details/14410.html?time=1504742528.861164','设计模式',5833),('mysql','http://blog.csdn.net/column/details/detailofmysql.html?time=1504742532.945325','MySQL详解',48477),('mysql','http://blog.csdn.net/column/details/oracle2mysql.html?time=1504742532.945358','从Oracle到MySQL',44715),('mysql','http://blog.csdn.net/column/details/cppformysqlpro.html?time=1504742532.945369','visual c++ 2008进行MySQL编程（ODBC）',44200),('mysql','http://blog.csdn.net/column/details/13794.html?time=1504742534.008034','MySQL',163566),('mysql','http://blog.csdn.net/column/details/mysqlnote.html?time=1504742534.008059','MySQL进阶指南',146759),('mysql','http://blog.csdn.net/column/details/mysql-1.html?time=1504742534.00807','MySQL从入门到精通',127211),('设计模式','http://blog.csdn.net/column/details/design-pattern.html?time=1504742544.05984','设计模式在实际项目中的应用',18184),('设计模式','http://blog.csdn.net/column/details/xiaomaolv.html?time=1504742544.059869','设计模式',18156),('设计模式','http://blog.csdn.net/column/details/16366.html?time=1504742544.059876','设计模式讲解与代码实践',18103),('设计模式','http://blog.csdn.net/column/details/designpatterns-night.html?time=1504742544.059882','设计模式',17988),('设计模式','http://blog.csdn.net/column/details/javadesignpattern.html?time=1504742544.059893','设计模式',16940),('mysql','http://blog.csdn.net/column/details/mysqlsummary.html?time=1504742560.211776','Mysql数据库总结',70489),('mysql','http://blog.csdn.net/column/details/mysqlpri.html?time=1504742560.211835','思考mysql内核之初级系列',66483),('mysql','http://blog.csdn.net/column/details/15260.html?time=1504742560.211844','MySQL技术',58875),('mysql','http://blog.csdn.net/column/details/conquermysql.html?time=1504742560.211853','征服数据库之mysql',50758),('设计模式','http://blog.csdn.net/column/details/pattern23.html?time=1504742568.079297','设计模式',7056),('设计模式','http://blog.csdn.net/column/details/14875.html?time=1504742568.079323','设计模式',6932),('设计模式','http://blog.csdn.net/column/details/14948.html?time=1504742568.079331','php，java实现设计模式',6869),('设计模式','http://blog.csdn.net/column/details/design-pattern-lin.html?time=1504742568.079338','设计模式',6856),('设计模式','http://blog.csdn.net/column/details/xfzsjms.html?time=1504742568.079345','设计模式',6791),('设计模式','http://blog.csdn.net/column/details/designpattern2.html?time=1504742568.079352','设计模式',6695),('设计模式','http://blog.csdn.net/column/details/14533.html?time=1504742568.07936','23种设计模式',6424),('设计模式','http://blog.csdn.net/column/details/tuimo.html?time=1504742568.079367','设计模式',6294),('设计模式','http://blog.csdn.net/column/details/design--mode.html?time=1504742569.161448','大话设计模式',7804),('设计模式','http://blog.csdn.net/column/details/shejimoshismile.html?time=1504742569.161474','设计模式',7766),('设计模式','http://blog.csdn.net/column/details/guus-sjms.html?time=1504742569.161482','设计模式大全',7721),('设计模式','http://blog.csdn.net/column/details/14866.html?time=1504742569.161489','设计模式之(C++实现)',7523),('设计模式','http://blog.csdn.net/column/details/design-pattern-123.html?time=1504742569.161498','设计模式',7193),('设计模式','http://blog.csdn.net/column/details/chaogeshejimoshi.html?time=1504742569.161505','Java设计模式简明教程',7137),('设计模式','http://blog.csdn.net/column/details/dahua-shejimoshi.html?time=1504742570.170564','大话设计模式',9106),('设计模式','http://blog.csdn.net/column/details/designpattern001.html?time=1504742570.170606','设计模式实战',8939),('设计模式','http://blog.csdn.net/column/details/habren-design-patter.html?time=1504742570.170632','跟着Jason学 设计模式',8670),('设计模式','http://blog.csdn.net/column/details/dpatterns.html?time=1504742570.170641','设计模式',8560),('设计模式','http://blog.csdn.net/column/details/learn-design-pattern.html?time=1504742570.170648','初识设计模式',8381),('设计模式','http://blog.csdn.net/column/details/learnofdesignpattern.html?time=1504742570.170654','设计模式',8352),('设计模式','http://blog.csdn.net/column/details/sjmsjc.html?time=1504742572.177218','设计模式',9921),('设计模式','http://blog.csdn.net/column/details/designpatternsummary.html?time=1504742572.177251','大话设计模式',9680),('设计模式','http://blog.csdn.net/column/details/shenruqianchu-design.html?time=1504742572.177261','深入浅出设计模式',9547),('设计模式','http://blog.csdn.net/column/details/designpattern1.html?time=1504742572.177269','设计模式',9287),('设计模式','http://blog.csdn.net/column/details/zysjms.html?time=1504742625.576515','设计模式',11075),('设计模式','http://blog.csdn.net/column/details/designmodel.html?time=1504742625.576548','设计模式',10758),('设计模式','http://blog.csdn.net/column/details/13758.html?time=1504742625.576556','java设计模式学习',10659),('设计模式','http://blog.csdn.net/column/details/javapatternexample.html?time=1504742625.576563','java设计模式实例',10513),('设计模式','http://blog.csdn.net/column/details/java-design-mode.html?time=1504742626.570157','java设计模式',11683),('设计模式','http://blog.csdn.net/column/details/desginpattern.html?time=1504742626.57019','设计模式',11432),('设计模式','http://blog.csdn.net/column/details/design-patterns001.html?time=1504742626.570199','设计模式的六大原则',11423),('设计模式','http://blog.csdn.net/column/details/theonegis-design.html?time=1504742626.570208','设计模式学习笔记',11325),('设计模式','http://blog.csdn.net/column/details/13891.html?time=1504742627.595972','《设计模式》',12292),('设计模式','http://blog.csdn.net/column/details/13400.html?time=1504742627.596004','设计模式',12189),('设计模式','http://blog.csdn.net/column/details/lius0011.html?time=1504742627.596037','设计模式实例',12165),('设计模式','http://blog.csdn.net/column/details/zhenghaozhuanlan.html?time=1504742627.59605','设计模式',12132),('设计模式','http://blog.csdn.net/column/details/designpattern-qiu.html?time=1504742627.59606','设计模式',11958),('设计模式','http://blog.csdn.net/column/details/mydesignpatterns.html?time=1504742627.596067','设计模式通俗讲解&&C++实现',11843),('设计模式','http://blog.csdn.net/column/details/designpatternsharing.html?time=1504742627.596073','设计模式',11798),('设计模式','http://blog.csdn.net/column/details/13088.html?time=1504742628.582491','设计模式',13299),('设计模式','http://blog.csdn.net/column/details/javadesignmodel.html?time=1504742628.582537','23天征服--23种设计模式',13227),('设计模式','http://blog.csdn.net/column/details/lxydahua.html?time=1504742628.582549','大话设计模式',12951),('设计模式','http://blog.csdn.net/column/details/patternofjie.html?time=1504742628.582556','设计模式',12651),('设计模式','http://blog.csdn.net/column/details/walker1.html?time=1504742628.582575','设计模式C++实现',12538),('设计模式','http://blog.csdn.net/column/details/mydesignpattern35.html?time=1504742670.923318','设计模式之全解析',14736),('设计模式','http://blog.csdn.net/column/details/gof-design-patterns.html?time=1504742670.92335','GoF设计模式',14707),('设计模式','http://blog.csdn.net/column/details/shms520.html?time=1504742670.923359','设计模式',14623),('设计模式','http://blog.csdn.net/column/details/note-design-pattern.html?time=1504742670.923366','设计模式笔记',14437),('设计模式','http://blog.csdn.net/column/details/mdmcsdn1.html?time=1504742679.844736','设计模式',16633),('设计模式','http://blog.csdn.net/column/details/design-pattern-hxm.html?time=1504742679.844764','设计模式之android',16273),('设计模式','http://blog.csdn.net/column/details/16401.html?time=1504742679.844772','24种设计模式',16064),('设计模式','http://blog.csdn.net/column/details/ourdesignpattern.html?time=1504742679.844778','设计模式',16042),('设计模式','http://blog.csdn.net/column/details/13196.html?time=1504742679.844786','设计模式',15562),('设计模式','http://blog.csdn.net/column/details/suski-pattern.html?time=1504742679.844793','《大话设计模式》读后感',15346),('设计模式','http://blog.csdn.net/column/details/my-designpattern.html?time=1504742703.11432','设计模式与系统架构',46068),('设计模式','http://blog.csdn.net/column/details/designpatterns4java.html?time=1504742703.114347','23种设计模式 (java通俗演义)',45375),('设计模式','http://blog.csdn.net/column/details/design-pattern-homer.html?time=1504742703.114354','设计模式',45349),('设计模式','http://blog.csdn.net/column/details/sjms.html?time=1504742704.129526','设计模式',19451),('设计模式','http://blog.csdn.net/column/details/dhsjms.html?time=1504742704.129565','大话设计模式',19307),('设计模式','http://blog.csdn.net/column/details/huohuo.html?time=1504742704.129577','大话设计模式',19197),('设计模式','http://blog.csdn.net/column/details/extenddesignpattern.html?time=1504742704.129591','可扩展性与设计模式',18776),('设计模式','http://blog.csdn.net/column/details/designaction.html?time=1504742705.045518','设计模式',27321),('设计模式','http://blog.csdn.net/column/details/design-pattern-java.html?time=1504742705.04558','设计模式（JAVA）',27124),('设计模式','http://blog.csdn.net/column/details/baadf00df00dabadfds0.html?time=1504742705.045599','初探设计模式（C++实现）',25867),('设计模式','http://blog.csdn.net/column/details/ef3c5ec0-f3c9-48af.html?time=1504742705.045613','设计模式精解',25701),('设计模式','http://blog.csdn.net/column/details/designpatternbylmb.html?time=1504742705.045672','大话设计模式',24601),('设计模式','http://blog.csdn.net/column/details/designpattern32.html?time=1504742706.002124','设计模式',22060),('设计模式','http://blog.csdn.net/column/details/designpatterns-qt.html?time=1504742706.00216','设计模式(Qt版)',20958),('设计模式','http://blog.csdn.net/column/details/cainiaojava.html?time=1504742706.002172','菜鸟版JAVA设计模式',20685),('设计模式','http://blog.csdn.net/column/details/dhsjms-cplusplus.html?time=1504742740.437395','《大话设计模式》C++实现',28173),('设计模式','http://blog.csdn.net/column/details/design--pattern.html?time=1504742740.437424','设计模式',28043),('设计模式','http://blog.csdn.net/column/details/17017.html?time=1504742740.437433','快速扩展和迭代 - 设计模式',28040),('设计模式','http://blog.csdn.net/column/details/ds-1.html?time=1504742740.437439','大话设计模式',28003),('设计模式','http://blog.csdn.net/column/details/14308.html?time=1504742740.437445','设计模式之美',27416),('设计模式','http://blog.csdn.net/column/details/phpusedesignpattern.html?time=1504742741.46807','设计模式之PHP项目应用',32322),('设计模式','http://blog.csdn.net/column/details/artofdesignpattern.html?time=1504742741.468105','设计模式的艺术',32261),('设计模式','http://blog.csdn.net/column/details/shejimoshishengsheng.html?time=1504742741.468125','设计模式',31353),('设计模式','http://blog.csdn.net/column/details/gof-design-pattern.html?time=1504742742.468822','小清新GoF23种设计模式',37326),('设计模式','http://blog.csdn.net/column/details/wenqiang.html?time=1504742742.468849','设计模式之禅',37016),('设计模式','http://blog.csdn.net/column/details/13856.html?time=1504742742.46886','设计模式',35688),('设计模式','http://blog.csdn.net/column/details/my-designpatterns.html?time=1504742742.468866','设计模式之禅',35665),('设计模式','http://blog.csdn.net/column/details/designerpattern.html?time=1504742742.468876','IOS设计模式浅析',34079),('设计模式','http://blog.csdn.net/column/details/14788.html?time=1504742743.519069','设计模式(Java)',42883),('设计模式','http://blog.csdn.net/column/details/xing-designpattern.html?time=1504742743.5191','写最好的设计模式专栏',42210),('设计模式','http://blog.csdn.net/column/details/patternsdesign.html?time=1504742743.519113','设计模式笔记',40039),('设计模式','http://blog.csdn.net/column/details/design-pattern23.html?time=1504742743.519141','C#设计模式',39796),('设计模式','http://blog.csdn.net/column/details/softwaredesign.html?time=1504742743.519153','设计模式',38721),('设计模式','http://blog.csdn.net/column/details/code-design.html?time=1504742793.77781','设计模式融入生活',125486),('设计模式','http://blog.csdn.net/column/details/designpatternforb.html?time=1504742793.777848','\"围观\"设计模式',112016),('设计模式','http://blog.csdn.net/column/details/designpatterns.html?time=1504742794.706164','大话设计模式',74533),('设计模式','http://blog.csdn.net/column/details/design2.html?time=1504742794.706194','乱砍设计模式',73880),('设计模式','http://blog.csdn.net/column/details/designmodels.html?time=1504742795.7536','Java设计模式菜鸟系列',55289),('设计模式','http://blog.csdn.net/column/details/dahua.html?time=1504742795.753691','大话设计模式',52957),('设计模式','http://blog.csdn.net/column/details/hacke2-designpatter.html?time=1504742795.753702','设计模式读书笔记与总结',51804),('设计模式','http://blog.csdn.net/column/details/phpdesign.html?time=1504742795.753708','PHP设计模式',51243),('设计模式','http://blog.csdn.net/column/details/oodesign.html?time=1504742795.753716','设计模式攻略',50594),('设计模式','http://blog.csdn.net/column/details/oodm.html?time=1504742818.865302','面向对象设计模式',88595),('设计模式','http://blog.csdn.net/column/details/cpp-design-pattern.html?time=1504742823.903762','C++设计模式',302098),('设计模式','http://blog.csdn.net/column/details/designpattern-xt.html?time=1504742823.903808','DesignPattern(设计模式)',247844),('设计模式','http://blog.csdn.net/column/details/mydesignpattern.html?time=1504742823.903817','我所理解的设计模式',229913),('redis','http://blog.csdn.net/column/details/redis-code.html?time=1504868500.800598','Redis源码分析',152347),('redis','http://blog.csdn.net/column/details/13859.html?time=1504868501.288217','Redis',59335),('uml','http://blog.csdn.net/column/details/sweetyoyy.html?time=1504868501.772183','UML学习',4338),('uml','http://blog.csdn.net/column/details/zyumljm.html?time=1504868501.772455','UML建模',3923),('uml','http://blog.csdn.net/column/details/txbuml.html?time=1504868501.772469','UML',3845),('uml','http://blog.csdn.net/column/details/15059.html?time=1504868503.894165','UML知识',1190),('mysql','http://blog.csdn.net/column/details/mysqlcentury.html?time=1504868504.292724','MySQL进阶',1225265),('mysql','http://blog.csdn.net/column/details/mysql-in-action.html?time=1504868504.292758','mysql 由浅入深',365530),('mysql','http://blog.csdn.net/column/details/mysqltw.html?time=1504868504.292766','MySQL图文进阶',347129),('mysql','http://blog.csdn.net/column/details/mysqldba.html?time=1504868504.292778','MySQL管理开发由浅入深',220273),('mysql','http://blog.csdn.net/column/details/evermysql.html?time=1504868504.292785','MySQL',189883),('mysql','http://blog.csdn.net/column/details/mysql-daydayup.html?time=1504868504.357305','Mysql提升',117269),('mysql','http://blog.csdn.net/column/details/mysql-tzx.html?time=1504868504.357341','mysql知识汇总和提高',109875),('mysql','http://blog.csdn.net/column/details/zhy-study-mysql.html?time=1504868504.357354','Mysql',92116),('mysql','http://blog.csdn.net/column/details/14121.html?time=1504868504.357361','如何让Mysql跑的更快',85615),('mysql','http://blog.csdn.net/column/details/mysqlzl544434558.html?time=1504868504.35737','项目中积累的mysql使用经验',79341),('mysql','http://blog.csdn.net/column/details/mysqlstudy.html?time=1504868504.975444','mysql学习',27653),('mysql','http://blog.csdn.net/column/details/15651.html?time=1504868504.975536','MySql数据库调优',27355),('mysql','http://blog.csdn.net/column/details/14507.html?time=1504868504.975546','MySQL学习记录',26033),('设计模式','http://blog.csdn.net/column/details/design-patterns.html?time=1504868505.04967','设计模式',161909),('设计模式','http://blog.csdn.net/column/details/csharpdesignpattern.html?time=1504868505.049721','C#设计模式',145063),('设计模式','http://blog.csdn.net/column/details/chenssy-design.html?time=1504868505.049733','设计模式读书笔记',131264),('设计模式','http://blog.csdn.net/column/details/pattern.html?time=1504868505.08545','设计模式',1280685),('设计模式','http://blog.csdn.net/column/details/design.html?time=1504868505.085516','设计模式C++实现',458409),('设计模式','http://blog.csdn.net/column/details/designpatternzh.html?time=1504868505.085529','跟着ZHONGHuan学习设计模式',369790),('设计模式','http://blog.csdn.net/column/details/13826.html?time=1504868505.349125','云设计模式',64046),('设计模式','http://blog.csdn.net/column/details/eat-designpattern.html?time=1504868505.349152','硬啃设计模式',62858),('设计模式','http://blog.csdn.net/column/details/headfirst.html?time=1504868505.349162','HeadFirst 设计模式学习笔记',60804),('设计模式','http://blog.csdn.net/column/details/clouddesignpattern.html?time=1504868505.349169','云计算设计模式',59624),('设计模式','http://blog.csdn.net/column/details/12698.html?time=1504868505.34918','Java设计模式实战',56274),('设计模式','http://blog.csdn.net/column/details/shuangde800-design.html?time=1504868505.349205','设计模式征途',56247),('mysql','http://blog.csdn.net/column/details/16135.html?time=1504868505.99227','Mysql架构设计',2595),('mysql','http://blog.csdn.net/column/details/16687.html?time=1504868505.992326','Mysql学习与实践笔记',2251),('uml','http://blog.csdn.net/column/details/12939.html?time=1504868506.872142','UML 学习总结',3277),('设计模式','http://blog.csdn.net/column/details/shejimoshi1.html?time=1504868507.368079','设计模式',4660),('设计模式','http://blog.csdn.net/column/details/qkcoder.html?time=1504868507.368111','C++设计模式',4349),('设计模式','http://blog.csdn.net/column/details/15604.html?time=1504868507.368121','Head First设计模式',4302),('mysql','http://blog.csdn.net/column/details/mysql56-refer.html?time=1504868507.92359','MySQL 5.6 参考',5783),('mysql','http://blog.csdn.net/column/details/shenruqianchu-mysql.html?time=1504868507.923625','深入浅出Mysql',5310),('mysql','http://blog.csdn.net/column/details/15343.html?time=1504868507.923636','史上最全的MySQL基础教程',4710),('mysql','http://blog.csdn.net/column/details/13738.html?time=1504868507.923645','MySql及NoSQL相关',4281),('mysql','http://blog.csdn.net/column/details/14622.html?time=1504868507.923653','MySQL',3859),('mysql','http://blog.csdn.net/column/details/16578.html?time=1504868507.923659','MYSQL',3822),('设计模式','http://blog.csdn.net/column/details/15600.html?time=1504868508.309365','设计模式小解',1046),('设计模式','http://blog.csdn.net/column/details/14268.html?time=1504868508.3094','C# 设计模式',827),('设计模式','http://blog.csdn.net/column/details/designpatternsumarry.html?time=1504868508.309414','设计模式',789),('设计模式','http://blog.csdn.net/column/details/15026.html?time=1504868509.333951','Java 设计模式',1499),('设计模式','http://blog.csdn.net/column/details/13662.html?time=1504868509.333979','Java设计模式学习',1359),('设计模式','http://blog.csdn.net/column/details/16040.html?time=1504868509.333987','java设计模式',1318),('设计模式','http://blog.csdn.net/column/details/16088.html?time=1504868509.333995','设计模式',1260),('设计模式','http://blog.csdn.net/column/details/zhdldesignpattern.html?time=1504868509.334004','设计模式之木叶村之旅',1193),('设计模式','http://blog.csdn.net/column/details/12965.html?time=1504868510.378545','设计模式',2170),('设计模式','http://blog.csdn.net/column/details/14987.html?time=1504868510.378572','设计模式',2089),('设计模式','http://blog.csdn.net/column/details/14187.html?time=1504868510.378581','设计模式-java',1798),('设计模式','http://blog.csdn.net/column/details/15050.html?time=1504868510.378603','设计模式',1749),('设计模式','http://blog.csdn.net/column/details/13865.html?time=1504868510.378611','java设计模式',1630),('设计模式','http://blog.csdn.net/column/details/15456.html?time=1504868510.378617','常用Java设计模式系列',1617),('uml','http://blog.csdn.net/column/details/uml-jianfei.html?time=1504868511.89853','UML',5174),('uml','http://blog.csdn.net/column/details/uml-learning.html?time=1504868511.898557','UML',5166),('uml','http://blog.csdn.net/column/details/13175.html?time=1504868511.898567','UML--统一建模语言',4860),('redis','http://blog.csdn.net/column/details/16017.html?time=1504868512.771015','redis学习',21482),('uml','http://blog.csdn.net/column/details/uml12.html?time=1504868525.226734','UML',6266),('uml','http://blog.csdn.net/column/details/uml-1.html?time=1504868525.226774','UML',6148),('uml','http://blog.csdn.net/column/details/umlhello.html?time=1504868525.226791','UML',5747),('redis','http://blog.csdn.net/column/details/13313.html?time=1504868525.639894','Redis技术相关',11477),('redis','http://blog.csdn.net/column/details/13266.html?time=1504868525.639929','redis命令详解与应用',11403),('uml','http://blog.csdn.net/column/details/uml-faith.html?time=1504868528.282224','UML',8811),('uml','http://blog.csdn.net/column/details/uml001.html?time=1504868528.282257','实战UML',8765),('uml','http://blog.csdn.net/column/details/uml-design.html?time=1504868528.282266','UML',8650),('uml','http://blog.csdn.net/column/details/uml9-1.html?time=1504868528.282272','UML9图学习',8465),('mysql','http://blog.csdn.net/column/details/mysql1209.html?time=1504868528.890382','mysql优化',7118),('mysql','http://blog.csdn.net/column/details/mysql1.html?time=1504868528.89043','踟蹰MySQL',6508),('mysql','http://blog.csdn.net/column/details/13369.html?time=1504868528.890445','mysql的使用',6407),('mysql','http://blog.csdn.net/column/details/16983.html?time=1504868528.890469','MySQL从入门到精通',6310),('mysql','http://blog.csdn.net/column/details/13509.html?time=1504868528.890487','MySQl数据库嵌入式开发',5903),('mysql','http://blog.csdn.net/column/details/16623.html?time=1504868528.890502','MySQL源码研究',5834),('uml','http://blog.csdn.net/column/details/uml20141029.html?time=1504868532.711784','UML',9820),('uml','http://blog.csdn.net/column/details/mqp66uml.html?time=1504868532.711847','uml专栏',9526),('redis','http://blog.csdn.net/column/details/15428.html?time=1504868532.945839','Redis 3.2.8 源码剖析注释',20275),('uml','http://blog.csdn.net/column/details/uml-cyl.html?time=1504868548.244463','UML学习',11041),('uml','http://blog.csdn.net/column/details/lingzai6818.html?time=1504868548.244512','UML',10272),('uml','http://blog.csdn.net/column/details/thinkinuml.html?time=1504868551.202505','UML',12423),('uml','http://blog.csdn.net/column/details/victor-uml.html?time=1504868551.20254','UML',11994),('uml','http://blog.csdn.net/column/details/shejimoshi-17.html?time=1504868555.361523','uml',14528),('uml','http://blog.csdn.net/column/details/umlclass.html?time=1504868555.361556','UML',14270),('uml','http://blog.csdn.net/column/details/modelinglanguage.html?time=1504868563.836597','UML',16656),('uml','http://blog.csdn.net/column/details/csuml.html?time=1504868563.836644','UML',16351),('uml','http://blog.csdn.net/column/details/hugh-uml.html?time=1504868565.972858','UML',18402),('设计模式','http://blog.csdn.net/column/details/16366.html?time=1504868569.59155','设计模式讲解与代码实践',19560),('设计模式','http://blog.csdn.net/column/details/sjms.html?time=1504868569.591576','设计模式',19485),('设计模式','http://blog.csdn.net/column/details/dhsjms.html?time=1504868569.591584','大话设计模式',19392),('设计模式','http://blog.csdn.net/column/details/huohuo.html?time=1504868569.59159','大话设计模式',19219),('设计模式','http://blog.csdn.net/column/details/extenddesignpattern.html?time=1504868569.591598','可扩展性与设计模式',18817),('mysql','http://blog.csdn.net/column/details/13005.html?time=1504868573.324896','MySQL必知必会',40719),('mysql','http://blog.csdn.net/column/details/13220.html?time=1504868573.324945','mysql',33121),('mysql','http://blog.csdn.net/column/details/mysql-001.html?time=1504868573.324976','高性能MySQL',31527),('mysql','http://blog.csdn.net/column/details/yinfeng-mysql.html?time=1504868574.504625','MySQL内核与性能优化',9817),('mysql','http://blog.csdn.net/column/details/13281.html?time=1504868574.50466','MySQL-数据库-JDBC',9113),('mysql','http://blog.csdn.net/column/details/13516.html?time=1504868574.50468','MySQL路线',8133),('uml','http://blog.csdn.net/column/details/switch-uml.html?time=1504868577.509101','UML与需求分析学习笔记',28544),('uml','http://blog.csdn.net/column/details/lshuml.html?time=1504868581.44966','UML详解',45001),('uml','http://blog.csdn.net/column/details/myuml.html?time=1504868581.449682','UML设计',44312),('uml','http://blog.csdn.net/column/details/uml-11.html?time=1504868581.449691','UML学习之路',43573),('mysql','http://blog.csdn.net/column/details/13337.html?time=1504868586.866714','mysql数据库',11745),('mysql','http://blog.csdn.net/column/details/mysqlbywangjianan.html?time=1504868586.866762','mysql数据库',11152),('mysql','http://blog.csdn.net/column/details/13534.html?time=1504868586.866775','Mysql系列',11067),('mysql','http://blog.csdn.net/column/details/13489.html?time=1504868586.86679','MySQL基础知识大全',10891),('设计模式','http://blog.csdn.net/column/details/java-design-pattern.html?time=1504868587.470701','Java设计模式',3005),('设计模式','http://blog.csdn.net/column/details/yrp-design-pattern.html?time=1504868587.470749','设计模式与应用',2950),('设计模式','http://blog.csdn.net/column/details/16218.html?time=1504868587.470767','设计模式',2730),('设计模式','http://blog.csdn.net/column/details/16553.html?time=1504868587.470782','设计模式',2540),('设计模式','http://blog.csdn.net/column/details/14288.html?time=1504868587.470796','设计模式',2457),('设计模式','http://blog.csdn.net/column/details/15028.html?time=1504868587.470809','设计模式',2419),('mysql','http://blog.csdn.net/column/details/14861.html?time=1504868587.835715','高性能MySQL',14282),('mysql','http://blog.csdn.net/column/details/13301.html?time=1504868587.835751','MySQL',12344),('设计模式','http://blog.csdn.net/column/details/hgbshejimoshi.html?time=1504868588.462385','设计模式',5647),('设计模式','http://blog.csdn.net/column/details/design-patterns-xue.html?time=1504868588.462426','设计模式',5611),('设计模式','http://blog.csdn.net/column/details/gof-23design.html?time=1504868588.462444','Gof 设计模式',5606),('设计模式','http://blog.csdn.net/column/details/14723.html?time=1504868588.462451','设计模式',5477),('设计模式','http://blog.csdn.net/column/details/12992.html?time=1504868588.46246','设计模式备忘录',5130),('设计模式','http://blog.csdn.net/column/details/designpatterns-haoz.html?time=1504868588.462466','设计模式解析',5034),('设计模式','http://blog.csdn.net/column/details/designpatternsjiange.html?time=1504868588.462473','设计模式',4894),('设计模式','http://blog.csdn.net/column/details/16634.html?time=1504868588.46248','设计模式',4842),('设计模式','http://blog.csdn.net/column/details/designpatternnotewyj.html?time=1504868589.400433','设计模式笔记整理',3689),('设计模式','http://blog.csdn.net/column/details/javamodel.html?time=1504868589.400462','JAVA设计模式',3681),('设计模式','http://blog.csdn.net/column/details/15193.html?time=1504868589.400471','赵建银-设计模式学习',3571),('设计模式','http://blog.csdn.net/column/details/13164.html?time=1504868589.400477','设计模式',3543),('设计模式','http://blog.csdn.net/column/details/javascriptdesgin.html?time=1504868589.400483','javascript设计模式',3520),('设计模式','http://blog.csdn.net/column/details/design-pattern-zen.html?time=1504868589.400491','《设计模式之禅》读书笔记',3355),('设计模式','http://blog.csdn.net/column/details/16632.html?time=1504868589.400499','设计模式学习笔记',3234),('设计模式','http://blog.csdn.net/column/details/15839.html?time=1504868589.400505','设计模式',3191),('设计模式','http://blog.csdn.net/column/details/13439.html?time=1504868590.491668','JavaScript设计模式',6172),('设计模式','http://blog.csdn.net/column/details/javadesign-pattern.html?time=1504868590.491699','JAVA设计模式笔记',6124),('设计模式','http://blog.csdn.net/column/details/14351.html?time=1504868590.491708','java23种设计模式',5882),('设计模式','http://blog.csdn.net/column/details/14410.html?time=1504868590.491715','设计模式',5881),('设计模式','http://blog.csdn.net/column/details/chaogeshejimoshi.html?time=1504868591.409527','Java设计模式简明教程',7143),('设计模式','http://blog.csdn.net/column/details/pattern23.html?time=1504868591.409574','设计模式',7060),('设计模式','http://blog.csdn.net/column/details/14875.html?time=1504868591.409592','设计模式',6987),('设计模式','http://blog.csdn.net/column/details/14948.html?time=1504868591.409621','php，java实现设计模式',6912),('设计模式','http://blog.csdn.net/column/details/design-pattern-lin.html?time=1504868591.409628','设计模式',6871),('设计模式','http://blog.csdn.net/column/details/xfzsjms.html?time=1504868591.409667','设计模式',6796),('设计模式','http://blog.csdn.net/column/details/designpattern2.html?time=1504868591.409676','设计模式',6699),('设计模式','http://blog.csdn.net/column/details/14533.html?time=1504868591.409683','23种设计模式',6452),('设计模式','http://blog.csdn.net/column/details/tuimo.html?time=1504868591.409691','设计模式',6304),('uml','http://blog.csdn.net/column/details/13140.html?time=1504868592.673341','UML',2797),('uml','http://blog.csdn.net/column/details/umlmodelingtechnolog.html?time=1504868593.699116','UML建模技术',236659),('mysql','http://blog.csdn.net/column/details/studymysql.html?time=1504868602.102792','MySQL数据库学习',15139),('mysql','http://blog.csdn.net/column/details/wenniuwuren-mysql.html?time=1504868602.102814','MySQL 入门到调优',15135),('mysql','http://blog.csdn.net/column/details/tangowl-mysql-intro.html?time=1504868605.251348','MySQL 入门教程',20668),('mysql','http://blog.csdn.net/column/details/mysql-dablelv.html?time=1504868605.251398','MySQL基础',20320),('mysql','http://blog.csdn.net/column/details/15548.html?time=1504868605.25142','数据库(MySQL)',19343),('mysql','http://blog.csdn.net/column/details/mysqlwu.html?time=1504868605.251434','MySQL必知必会学习笔记',19291),('mysql','http://blog.csdn.net/column/details/13881.html?time=1504868605.251446','mysql索引与优化',19264),('mysql','http://blog.csdn.net/column/details/15364.html?time=1504868607.243125','MySQL',2185),('mysql','http://blog.csdn.net/column/details/13213.html?time=1504868607.243148','Mysql基本使用',2176),('mysql','http://blog.csdn.net/column/details/15133.html?time=1504868607.243159','MySQL基本知识',1994),('mysql','http://blog.csdn.net/column/details/16190.html?time=1504868607.243167','mysql',1707),('mysql','http://blog.csdn.net/column/details/15775.html?time=1504868607.243175','MySQL详解',1249),('mysql','http://blog.csdn.net/column/details/15110.html?time=1504868607.243182','MySQL入门详解',1075),('mysql','http://blog.csdn.net/column/details/detailofmysql.html?time=1504868634.387578','MySQL详解',48630),('mysql','http://blog.csdn.net/column/details/oracle2mysql.html?time=1504868634.387643','从Oracle到MySQL',44820),('mysql','http://blog.csdn.net/column/details/cppformysqlpro.html?time=1504868634.38767','visual c++ 2008进行MySQL编程（ODBC）',44243),('mysql','http://blog.csdn.net/column/details/16138.html?time=1504868634.38768','史上最简单的 MySQL 教程',42223),('mysql','http://blog.csdn.net/column/details/13794.html?time=1504868635.469965','MySQL',164693),('mysql','http://blog.csdn.net/column/details/mysqlnote.html?time=1504868635.470001','MySQL进阶指南',147023),('mysql','http://blog.csdn.net/column/details/mysql-1.html?time=1504868635.470013','MySQL从入门到精通',127658),('mysql','http://blog.csdn.net/column/details/mysqlsummary.html?time=1504868659.803677','Mysql数据库总结',70947),('mysql','http://blog.csdn.net/column/details/mysqlpri.html?time=1504868659.803709','思考mysql内核之初级系列',66625),('mysql','http://blog.csdn.net/column/details/15260.html?time=1504868659.803738','MySQL技术',59189),('mysql','http://blog.csdn.net/column/details/conquermysql.html?time=1504868659.803748','征服数据库之mysql',50838),('设计模式','http://blog.csdn.net/column/details/design--mode.html?time=1504868670.582598','大话设计模式',7879),('设计模式','http://blog.csdn.net/column/details/shejimoshismile.html?time=1504868670.582621','设计模式',7778),('设计模式','http://blog.csdn.net/column/details/guus-sjms.html?time=1504868670.582629','设计模式大全',7731),('设计模式','http://blog.csdn.net/column/details/14866.html?time=1504868670.582636','设计模式之(C++实现)',7546),('设计模式','http://blog.csdn.net/column/details/design-pattern-123.html?time=1504868670.582666','设计模式',7197),('设计模式','http://blog.csdn.net/column/details/dahua-shejimoshi.html?time=1504868671.749155','大话设计模式',9128),('设计模式','http://blog.csdn.net/column/details/designpattern001.html?time=1504868671.749189','设计模式实战',8949),('设计模式','http://blog.csdn.net/column/details/habren-design-patter.html?time=1504868671.749203','跟着Jason学 设计模式',8686),('设计模式','http://blog.csdn.net/column/details/dpatterns.html?time=1504868671.74921','设计模式',8571),('设计模式','http://blog.csdn.net/column/details/learn-design-pattern.html?time=1504868671.749217','初识设计模式',8392),('设计模式','http://blog.csdn.net/column/details/learnofdesignpattern.html?time=1504868671.749223','设计模式',8372),('设计模式','http://blog.csdn.net/column/details/sjmsjc.html?time=1504868672.727496','设计模式',9936),('设计模式','http://blog.csdn.net/column/details/designpatternsummary.html?time=1504868672.727531','大话设计模式',9697),('设计模式','http://blog.csdn.net/column/details/shenruqianchu-design.html?time=1504868672.72754','深入浅出设计模式',9566),('设计模式','http://blog.csdn.net/column/details/designpattern1.html?time=1504868672.727549','设计模式',9294),('设计模式','http://blog.csdn.net/column/details/zysjms.html?time=1504868673.765428','设计模式',11083),('设计模式','http://blog.csdn.net/column/details/designmodel.html?time=1504868673.765457','设计模式',10770),('设计模式','http://blog.csdn.net/column/details/13758.html?time=1504868673.765465','java设计模式学习',10720),('设计模式','http://blog.csdn.net/column/details/javapatternexample.html?time=1504868673.765472','java设计模式实例',10530),('设计模式','http://blog.csdn.net/column/details/designpatternsharing.html?time=1504868674.765978','设计模式',11813),('设计模式','http://blog.csdn.net/column/details/java-design-mode.html?time=1504868674.766005','java设计模式',11748),('设计模式','http://blog.csdn.net/column/details/desginpattern.html?time=1504868674.766017','设计模式',11438),('设计模式','http://blog.csdn.net/column/details/design-patterns001.html?time=1504868674.766023','设计模式的六大原则',11434),('设计模式','http://blog.csdn.net/column/details/theonegis-design.html?time=1504868674.766031','设计模式学习笔记',11351),('设计模式','http://blog.csdn.net/column/details/walker1.html?time=1504868724.061074','设计模式C++实现',12556),('设计模式','http://blog.csdn.net/column/details/13891.html?time=1504868724.061118','《设计模式》',12294),('设计模式','http://blog.csdn.net/column/details/13400.html?time=1504868724.061128','设计模式',12212),('设计模式','http://blog.csdn.net/column/details/lius0011.html?time=1504868724.061134','设计模式实例',12166),('设计模式','http://blog.csdn.net/column/details/zhenghaozhuanlan.html?time=1504868724.061141','设计模式',12144),('设计模式','http://blog.csdn.net/column/details/designpattern-qiu.html?time=1504868724.061151','设计模式',11963),('设计模式','http://blog.csdn.net/column/details/mydesignpatterns.html?time=1504868724.061158','设计模式通俗讲解&&C++实现',11854),('设计模式','http://blog.csdn.net/column/details/13088.html?time=1504868725.106087','设计模式',13360),('设计模式','http://blog.csdn.net/column/details/javadesignmodel.html?time=1504868725.106117','23天征服--23种设计模式',13320),('设计模式','http://blog.csdn.net/column/details/lxydahua.html?time=1504868725.106127','大话设计模式',12960),('设计模式','http://blog.csdn.net/column/details/patternofjie.html?time=1504868725.106134','设计模式',12652),('设计模式','http://blog.csdn.net/column/details/mydesignpattern35.html?time=1504868726.092756','设计模式之全解析',14749),('设计模式','http://blog.csdn.net/column/details/gof-design-patterns.html?time=1504868726.092804','GoF设计模式',14726),('设计模式','http://blog.csdn.net/column/details/shms520.html?time=1504868726.092811','设计模式',14632),('设计模式','http://blog.csdn.net/column/details/note-design-pattern.html?time=1504868726.092819','设计模式笔记',14454),('设计模式','http://blog.csdn.net/column/details/javadesignpattern.html?time=1504868766.290047','设计模式',16949),('设计模式','http://blog.csdn.net/column/details/mdmcsdn1.html?time=1504868766.290135','设计模式',16644),('设计模式','http://blog.csdn.net/column/details/design-pattern-hxm.html?time=1504868766.290148','设计模式之android',16303),('设计模式','http://blog.csdn.net/column/details/16401.html?time=1504868766.290156','24种设计模式',16124),('设计模式','http://blog.csdn.net/column/details/ourdesignpattern.html?time=1504868766.290162','设计模式',16073),('设计模式','http://blog.csdn.net/column/details/13196.html?time=1504868766.290171','设计模式',15591),('设计模式','http://blog.csdn.net/column/details/suski-pattern.html?time=1504868766.290178','《大话设计模式》读后感',15366),('设计模式','http://blog.csdn.net/column/details/design-pattern.html?time=1504868767.369485','设计模式在实际项目中的应用',18188),('设计模式','http://blog.csdn.net/column/details/xiaomaolv.html?time=1504868767.369509','设计模式',18166),('设计模式','http://blog.csdn.net/column/details/designpatterns-night.html?time=1504868767.369516','设计模式',18006),('设计模式','http://blog.csdn.net/column/details/designmodels.html?time=1504868768.250118','Java设计模式菜鸟系列',55365),('设计模式','http://blog.csdn.net/column/details/dahua.html?time=1504868768.250178','大话设计模式',52984),('设计模式','http://blog.csdn.net/column/details/hacke2-designpatter.html?time=1504868768.250185','设计模式读书笔记与总结',51845),('设计模式','http://blog.csdn.net/column/details/phpdesign.html?time=1504868768.250192','PHP设计模式',51360),('设计模式','http://blog.csdn.net/column/details/oodesign.html?time=1504868768.250199','设计模式攻略',50638),('设计模式','http://blog.csdn.net/column/details/designaction.html?time=1504868769.319506','设计模式',27332),('设计模式','http://blog.csdn.net/column/details/design-pattern-java.html?time=1504868769.319532','设计模式（JAVA）',27187),('设计模式','http://blog.csdn.net/column/details/baadf00df00dabadfds0.html?time=1504868769.319543','初探设计模式（C++实现）',25884),('设计模式','http://blog.csdn.net/column/details/ef3c5ec0-f3c9-48af.html?time=1504868769.319551','设计模式精解',25709),('设计模式','http://blog.csdn.net/column/details/designpatternbylmb.html?time=1504868769.319561','大话设计模式',24649),('设计模式','http://blog.csdn.net/column/details/sjmsxuexibiji.html?time=1504868814.760896','设计模式学习笔记',22173),('设计模式','http://blog.csdn.net/column/details/12848.html?time=1504868814.760928','一天一个设计模式',22128),('设计模式','http://blog.csdn.net/column/details/designpattern32.html?time=1504868814.760937','设计模式',22087),('设计模式','http://blog.csdn.net/column/details/designpatterns-qt.html?time=1504868814.760949','设计模式(Qt版)',20977),('设计模式','http://blog.csdn.net/column/details/cainiaojava.html?time=1504868814.760959','菜鸟版JAVA设计模式',20744),('设计模式','http://blog.csdn.net/column/details/dhsjms-cplusplus.html?time=1504868834.890362','《大话设计模式》C++实现',28211),('设计模式','http://blog.csdn.net/column/details/design--pattern.html?time=1504868834.890393','设计模式',28088),('设计模式','http://blog.csdn.net/column/details/ds-1.html?time=1504868834.890401','大话设计模式',28056),('设计模式','http://blog.csdn.net/column/details/17017.html?time=1504868834.890407','快速扩展和迭代 - 设计模式',28056),('设计模式','http://blog.csdn.net/column/details/14308.html?time=1504868834.890414','设计模式之美',27429),('设计模式','http://blog.csdn.net/column/details/phpusedesignpattern.html?time=1504868835.912229','设计模式之PHP项目应用',32445),('设计模式','http://blog.csdn.net/column/details/artofdesignpattern.html?time=1504868835.912272','设计模式的艺术',32285),('设计模式','http://blog.csdn.net/column/details/shejimoshishengsheng.html?time=1504868835.912302','设计模式',31403),('设计模式','http://blog.csdn.net/column/details/gof-design-pattern.html?time=1504868836.840273','小清新GoF23种设计模式',37369),('设计模式','http://blog.csdn.net/column/details/wenqiang.html?time=1504868836.840319','设计模式之禅',37116),('设计模式','http://blog.csdn.net/column/details/13856.html?time=1504868836.840332','设计模式',35832),('设计模式','http://blog.csdn.net/column/details/my-designpatterns.html?time=1504868836.840338','设计模式之禅',35734),('设计模式','http://blog.csdn.net/column/details/designerpattern.html?time=1504868836.840349','IOS设计模式浅析',34094),('设计模式','http://blog.csdn.net/column/details/14788.html?time=1504868837.851323','设计模式(Java)',43003),('设计模式','http://blog.csdn.net/column/details/xing-designpattern.html?time=1504868837.851345','写最好的设计模式专栏',42326),('设计模式','http://blog.csdn.net/column/details/patternsdesign.html?time=1504868837.851357','设计模式笔记',40147),('设计模式','http://blog.csdn.net/column/details/design-pattern23.html?time=1504868837.851365','C#设计模式',39865),('设计模式','http://blog.csdn.net/column/details/softwaredesign.html?time=1504868837.851372','设计模式',38740),('设计模式','http://blog.csdn.net/column/details/my-designpattern.html?time=1504868888.165515','设计模式与系统架构',46102),('设计模式','http://blog.csdn.net/column/details/designpatterns4java.html?time=1504868888.165543','23种设计模式 (java通俗演义)',45401),('设计模式','http://blog.csdn.net/column/details/design-pattern-homer.html?time=1504868888.165551','设计模式',45353),('设计模式','http://blog.csdn.net/column/details/designpatterns.html?time=1504868889.308778','大话设计模式',74599),('设计模式','http://blog.csdn.net/column/details/design2.html?time=1504868889.308808','乱砍设计模式',73998),('设计模式','http://blog.csdn.net/column/details/code-design.html?time=1504868890.381556','设计模式融入生活',125768),('设计模式','http://blog.csdn.net/column/details/designpatternforb.html?time=1504868890.381585','\"围观\"设计模式',112076),('设计模式','http://blog.csdn.net/column/details/oodm.html?time=1504868907.404103','面向对象设计模式',88629),('设计模式','http://blog.csdn.net/column/details/designpatternforios.html?time=1504868908.430458','设计模式之深入学习IOS版',24185),('设计模式','http://blog.csdn.net/column/details/cppdesignpattern.html?time=1504868908.430497','C++设计模式',23790),('设计模式','http://blog.csdn.net/column/details/feihedp.html?time=1504868908.430505','浅显易懂的设计模式',23381),('设计模式','http://blog.csdn.net/column/details/lxq-shejimoshi.html?time=1504868908.430515','设计模式--Java描述',22490),('设计模式','http://blog.csdn.net/column/details/designpattern-cassie.html?time=1504868908.430521','设计模式',22336),('设计模式','http://blog.csdn.net/column/details/12906.html?time=1504868908.430528','小话设计模式',22201),('设计模式','http://blog.csdn.net/column/details/cpp-design-pattern.html?time=1504868909.47795','C++设计模式',302148),('设计模式','http://blog.csdn.net/column/details/designpattern-xt.html?time=1504868909.477985','DesignPattern(设计模式)',247864),('设计模式','http://blog.csdn.net/column/details/mydesignpattern.html?time=1504868909.477995','我所理解的设计模式',230241),('设计模式','http://blog.csdn.net/column/details/design-patterns.html?time=1505001601.75993','设计模式',161965),('设计模式','http://blog.csdn.net/column/details/csharpdesignpattern.html?time=1505001601.759974','C#设计模式',145242),('设计模式','http://blog.csdn.net/column/details/chenssy-design.html?time=1505001601.759988','设计模式读书笔记',131482),('设计模式','http://blog.csdn.net/column/details/pattern.html?time=1505001601.868407','设计模式',1281510),('设计模式','http://blog.csdn.net/column/details/design.html?time=1505001601.868457','设计模式C++实现',458754),('设计模式','http://blog.csdn.net/column/details/designpatternzh.html?time=1505001601.868467','跟着ZHONGHuan学习设计模式',369841),('mysql','http://blog.csdn.net/column/details/mysqlcentury.html?time=1505001601.96221','MySQL进阶',1225397),('mysql','http://blog.csdn.net/column/details/mysql-in-action.html?time=1505001601.962247','mysql 由浅入深',365578),('mysql','http://blog.csdn.net/column/details/mysqltw.html?time=1505001601.962255','MySQL图文进阶',347758),('mysql','http://blog.csdn.net/column/details/mysqldba.html?time=1505001601.962267','MySQL管理开发由浅入深',220573),('mysql','http://blog.csdn.net/column/details/evermysql.html?time=1505001601.962275','MySQL',190075),('设计模式','http://blog.csdn.net/column/details/13826.html?time=1505001602.057058','云设计模式',64111),('设计模式','http://blog.csdn.net/column/details/eat-designpattern.html?time=1505001602.057083','硬啃设计模式',62901),('设计模式','http://blog.csdn.net/column/details/headfirst.html?time=1505001602.057256','HeadFirst 设计模式学习笔记',60825),('设计模式','http://blog.csdn.net/column/details/clouddesignpattern.html?time=1505001602.057268','云计算设计模式',59712),('设计模式','http://blog.csdn.net/column/details/12698.html?time=1505001602.057279','Java设计模式实战',56389),('设计模式','http://blog.csdn.net/column/details/shuangde800-design.html?time=1505001602.057285','设计模式征途',56284),('mysql','http://blog.csdn.net/column/details/mysql-daydayup.html?time=1505001602.403408','Mysql提升',117424),('mysql','http://blog.csdn.net/column/details/mysql-tzx.html?time=1505001602.403454','mysql知识汇总和提高',109934),('mysql','http://blog.csdn.net/column/details/zhy-study-mysql.html?time=1505001602.403468','Mysql',92206),('mysql','http://blog.csdn.net/column/details/14121.html?time=1505001602.403475','如何让Mysql跑的更快',85847),('mysql','http://blog.csdn.net/column/details/mysqlzl544434558.html?time=1505001602.403485','项目中积累的mysql使用经验',79479),('mysql','http://blog.csdn.net/column/details/mysqlstudy.html?time=1505001602.449765','mysql学习',27698),('mysql','http://blog.csdn.net/column/details/15651.html?time=1505001602.449787','MySql数据库调优',27410),('mysql','http://blog.csdn.net/column/details/14507.html?time=1505001602.449797','MySQL学习记录',26047),('设计模式','http://blog.csdn.net/column/details/designpatternforios.html?time=1505001602.532703','设计模式之深入学习IOS版',24201),('设计模式','http://blog.csdn.net/column/details/cppdesignpattern.html?time=1505001602.532728','C++设计模式',23906),('设计模式','http://blog.csdn.net/column/details/feihedp.html?time=1505001602.532737','浅显易懂的设计模式',23411),('设计模式','http://blog.csdn.net/column/details/lxq-shejimoshi.html?time=1505001602.532746','设计模式--Java描述',22511),('设计模式','http://blog.csdn.net/column/details/designpattern-cassie.html?time=1505001602.532753','设计模式',22356),('设计模式','http://blog.csdn.net/column/details/12906.html?time=1505001602.53276','小话设计模式',22257),('mysql','http://blog.csdn.net/column/details/16135.html?time=1505001602.582314','Mysql架构设计',2635),('mysql','http://blog.csdn.net/column/details/16687.html?time=1505001602.582354','Mysql学习与实践笔记',2275),('设计模式','http://blog.csdn.net/column/details/shejimoshi1.html?time=1505001603.830987','设计模式',4667),('设计模式','http://blog.csdn.net/column/details/qkcoder.html?time=1505001603.831014','C++设计模式',4355),('设计模式','http://blog.csdn.net/column/details/15604.html?time=1505001603.831023','Head First设计模式',4322),('mysql','http://blog.csdn.net/column/details/mysql56-refer.html?time=1505001603.914337','MySQL 5.6 参考',5804),('mysql','http://blog.csdn.net/column/details/shenruqianchu-mysql.html?time=1505001603.914364','深入浅出Mysql',5329),('mysql','http://blog.csdn.net/column/details/15343.html?time=1505001603.914374','史上最全的MySQL基础教程',4736),('mysql','http://blog.csdn.net/column/details/13738.html?time=1505001603.914384','MySql及NoSQL相关',4296),('mysql','http://blog.csdn.net/column/details/14622.html?time=1505001603.914409','MySQL',3869),('mysql','http://blog.csdn.net/column/details/16578.html?time=1505001603.914416','MYSQL',3843),('设计模式','http://blog.csdn.net/column/details/15600.html?time=1505001604.252365','设计模式小解',1050),('设计模式','http://blog.csdn.net/column/details/14268.html?time=1505001604.252396','C# 设计模式',831),('设计模式','http://blog.csdn.net/column/details/designpatternsumarry.html?time=1505001604.252405','设计模式',789),('mysql','http://blog.csdn.net/column/details/15364.html?time=1505001604.321048','MySQL',2195),('mysql','http://blog.csdn.net/column/details/13213.html?time=1505001604.321097','Mysql基本使用',2184),('mysql','http://blog.csdn.net/column/details/15133.html?time=1505001604.321108','MySQL基本知识',2005),('mysql','http://blog.csdn.net/column/details/16190.html?time=1505001604.321116','mysql',1722),('mysql','http://blog.csdn.net/column/details/17229.html?time=1505001604.321123','mysql',1469),('mysql','http://blog.csdn.net/column/details/15775.html?time=1505001604.321131','MySQL详解',1258),('mysql','http://blog.csdn.net/column/details/15110.html?time=1505001604.321137','MySQL入门详解',1085),('mysql','http://blog.csdn.net/column/details/mysql1209.html?time=1505001605.2178','mysql优化',7144),('mysql','http://blog.csdn.net/column/details/mysql1.html?time=1505001605.217836','踟蹰MySQL',6523),('mysql','http://blog.csdn.net/column/details/13369.html?time=1505001605.217845','mysql的使用',6420),('mysql','http://blog.csdn.net/column/details/16983.html?time=1505001605.217866','MySQL从入门到精通',6340),('mysql','http://blog.csdn.net/column/details/13509.html?time=1505001605.217876','MySQl数据库嵌入式开发',5925),('mysql','http://blog.csdn.net/column/details/16623.html?time=1505001605.217882','MySQL源码研究',5922),('设计模式','http://blog.csdn.net/column/details/15456.html?time=1505001605.844816','常用Java设计模式系列',1618),('设计模式','http://blog.csdn.net/column/details/15026.html?time=1505001605.844849','Java 设计模式',1507),('设计模式','http://blog.csdn.net/column/details/13662.html?time=1505001605.844858','Java设计模式学习',1364),('设计模式','http://blog.csdn.net/column/details/16040.html?time=1505001605.844866','java设计模式',1328),('设计模式','http://blog.csdn.net/column/details/16088.html?time=1505001605.844874','设计模式',1267),('设计模式','http://blog.csdn.net/column/details/zhdldesignpattern.html?time=1505001605.844883','设计模式之木叶村之旅',1197),('设计模式','http://blog.csdn.net/column/details/12965.html?time=1505001606.945938','设计模式',2177),('设计模式','http://blog.csdn.net/column/details/14987.html?time=1505001606.945974','设计模式',2103),('设计模式','http://blog.csdn.net/column/details/14187.html?time=1505001606.945985','设计模式-java',1810),('设计模式','http://blog.csdn.net/column/details/15050.html?time=1505001606.945992','设计模式',1756),('设计模式','http://blog.csdn.net/column/details/13865.html?time=1505001606.946003','java设计模式',1632),('设计模式','http://blog.csdn.net/column/details/java-design-pattern.html?time=1505001607.292855','Java设计模式',3007),('设计模式','http://blog.csdn.net/column/details/yrp-design-pattern.html?time=1505001607.292888','设计模式与应用',2957),('设计模式','http://blog.csdn.net/column/details/16218.html?time=1505001607.292897','设计模式',2739),('设计模式','http://blog.csdn.net/column/details/16553.html?time=1505001607.292905','设计模式',2561),('设计模式','http://blog.csdn.net/column/details/14288.html?time=1505001607.292913','设计模式',2462),('设计模式','http://blog.csdn.net/column/details/15028.html?time=1505001607.292919','设计模式',2445),('mysql','http://blog.csdn.net/column/details/14861.html?time=1505001669.819192','高性能MySQL',14333),('mysql','http://blog.csdn.net/column/details/13301.html?time=1505001669.819287','MySQL',12349),('mysql','http://blog.csdn.net/column/details/detailofmysql.html?time=1505001685.181085','MySQL详解',48764),('mysql','http://blog.csdn.net/column/details/oracle2mysql.html?time=1505001685.181366','从Oracle到MySQL',44863),('mysql','http://blog.csdn.net/column/details/cppformysqlpro.html?time=1505001685.181384','visual c++ 2008进行MySQL编程（ODBC）',44263),('mysql','http://blog.csdn.net/column/details/16138.html?time=1505001685.181393','史上最简单的 MySQL 教程',42725),('mysql','http://blog.csdn.net/column/details/tangowl-mysql-intro.html?time=1505001685.240329','MySQL 入门教程',20726),('mysql','http://blog.csdn.net/column/details/mysql-dablelv.html?time=1505001685.24037','MySQL基础',20349),('mysql','http://blog.csdn.net/column/details/15548.html?time=1505001685.240382','数据库(MySQL)',19403),('mysql','http://blog.csdn.net/column/details/mysqlwu.html?time=1505001685.240405','MySQL必知必会学习笔记',19336),('mysql','http://blog.csdn.net/column/details/13881.html?time=1505001685.240411','mysql索引与优化',19308),('mysql','http://blog.csdn.net/column/details/13794.html?time=1505001687.32388','MySQL',165242),('mysql','http://blog.csdn.net/column/details/mysqlnote.html?time=1505001687.32393','MySQL进阶指南',147288),('mysql','http://blog.csdn.net/column/details/mysql-1.html?time=1505001687.32394','MySQL从入门到精通',127822),('设计模式','http://blog.csdn.net/column/details/hgbshejimoshi.html?time=1505001701.795985','设计模式',5652),('设计模式','http://blog.csdn.net/column/details/design-patterns-xue.html?time=1505001701.796017','设计模式',5614),('设计模式','http://blog.csdn.net/column/details/gof-23design.html?time=1505001701.796025','Gof 设计模式',5609),('设计模式','http://blog.csdn.net/column/details/14723.html?time=1505001701.796031','设计模式',5507),('设计模式','http://blog.csdn.net/column/details/12992.html?time=1505001701.796041','设计模式备忘录',5147),('设计模式','http://blog.csdn.net/column/details/16634.html?time=1505001701.796047','设计模式',5054),('设计模式','http://blog.csdn.net/column/details/designpatterns-haoz.html?time=1505001701.796052','设计模式解析',5041),('设计模式','http://blog.csdn.net/column/details/designpatternsjiange.html?time=1505001701.796059','设计模式',4899),('设计模式','http://blog.csdn.net/column/details/designpatternnotewyj.html?time=1505001702.948633','设计模式笔记整理',3690),('设计模式','http://blog.csdn.net/column/details/javamodel.html?time=1505001702.948666','JAVA设计模式',3686),('设计模式','http://blog.csdn.net/column/details/15193.html?time=1505001702.948674','赵建银-设计模式学习',3616),('设计模式','http://blog.csdn.net/column/details/13164.html?time=1505001702.948682','设计模式',3559),('设计模式','http://blog.csdn.net/column/details/javascriptdesgin.html?time=1505001702.948688','javascript设计模式',3524),('设计模式','http://blog.csdn.net/column/details/design-pattern-zen.html?time=1505001702.948696','《设计模式之禅》读书笔记',3355),('设计模式','http://blog.csdn.net/column/details/16632.html?time=1505001702.948703','设计模式学习笔记',3256),('设计模式','http://blog.csdn.net/column/details/15839.html?time=1505001702.94871','设计模式',3233),('设计模式','http://blog.csdn.net/column/details/tuimo.html?time=1505001704.062725','设计模式',6308),('设计模式','http://blog.csdn.net/column/details/13439.html?time=1505001704.062759','JavaScript设计模式',6275),('设计模式','http://blog.csdn.net/column/details/javadesign-pattern.html?time=1505001704.062768','JAVA设计模式笔记',6147),('设计模式','http://blog.csdn.net/column/details/14351.html?time=1505001704.062777','java23种设计模式',5903),('设计模式','http://blog.csdn.net/column/details/14410.html?time=1505001704.062783','设计模式',5899),('设计模式','http://blog.csdn.net/column/details/design--mode.html?time=1505001706.256119','大话设计模式',7894),('设计模式','http://blog.csdn.net/column/details/shejimoshismile.html?time=1505001706.256146','设计模式',7789),('设计模式','http://blog.csdn.net/column/details/guus-sjms.html?time=1505001706.256153','设计模式大全',7748),('设计模式','http://blog.csdn.net/column/details/14866.html?time=1505001706.25616','设计模式之(C++实现)',7599),('设计模式','http://blog.csdn.net/column/details/design-pattern-123.html?time=1505001706.25617','设计模式',7201),('设计模式','http://blog.csdn.net/column/details/chaogeshejimoshi.html?time=1505001706.597575','Java设计模式简明教程',7158),('设计模式','http://blog.csdn.net/column/details/pattern23.html?time=1505001706.597603','设计模式',7070),('设计模式','http://blog.csdn.net/column/details/14875.html?time=1505001706.59761','设计模式',7014),('设计模式','http://blog.csdn.net/column/details/14948.html?time=1505001706.597618','php，java实现设计模式',6928),('设计模式','http://blog.csdn.net/column/details/design-pattern-lin.html?time=1505001706.597624','设计模式',6888),('设计模式','http://blog.csdn.net/column/details/xfzsjms.html?time=1505001706.59765','设计模式',6801),('设计模式','http://blog.csdn.net/column/details/designpattern2.html?time=1505001706.59766','设计模式',6704),('设计模式','http://blog.csdn.net/column/details/14533.html?time=1505001706.597667','23种设计模式',6485),('mysql','http://blog.csdn.net/column/details/mysqlsummary.html?time=1505001721.708301','Mysql数据库总结',71175),('mysql','http://blog.csdn.net/column/details/mysqlpri.html?time=1505001721.708336','思考mysql内核之初级系列',66754),('mysql','http://blog.csdn.net/column/details/15260.html?time=1505001721.708346','MySQL技术',59363),('mysql','http://blog.csdn.net/column/details/conquermysql.html?time=1505001721.708356','征服数据库之mysql',50891),('mysql','http://blog.csdn.net/column/details/yinfeng-mysql.html?time=1505001739.783195','MySQL内核与性能优化',9823),('mysql','http://blog.csdn.net/column/details/13281.html?time=1505001739.783232','MySQL-数据库-JDBC',9129),('mysql','http://blog.csdn.net/column/details/13516.html?time=1505001739.783244','MySQL路线',8173),('mysql','http://blog.csdn.net/column/details/studymysql.html?time=1505001742.964754','MySQL数据库学习',15172),('mysql','http://blog.csdn.net/column/details/wenniuwuren-mysql.html?time=1505001742.964779','MySQL 入门到调优',15158),('mysql','http://blog.csdn.net/column/details/13005.html?time=1505001759.24499','MySQL必知必会',41173),('mysql','http://blog.csdn.net/column/details/13220.html?time=1505001759.245027','mysql',33191),('mysql','http://blog.csdn.net/column/details/mysql-001.html?time=1505001759.245036','高性能MySQL',31549),('mysql','http://blog.csdn.net/column/details/13337.html?time=1505001770.03486','mysql数据库',11761),('mysql','http://blog.csdn.net/column/details/mysqlbywangjianan.html?time=1505001770.034889','mysql数据库',11181),('mysql','http://blog.csdn.net/column/details/13534.html?time=1505001770.034897','Mysql系列',11100),('mysql','http://blog.csdn.net/column/details/13489.html?time=1505001770.034905','MySQL基础知识大全',10939),('设计模式','http://blog.csdn.net/column/details/dhsjms-cplusplus.html?time=1505001781.890827','《大话设计模式》C++实现',28251),('设计模式','http://blog.csdn.net/column/details/design--pattern.html?time=1505001781.89089','设计模式',28115),('设计模式','http://blog.csdn.net/column/details/ds-1.html?time=1505001781.890899','大话设计模式',28074),('设计模式','http://blog.csdn.net/column/details/17017.html?time=1505001781.890906','快速扩展和迭代 - 设计模式',28067),('设计模式','http://blog.csdn.net/column/details/14308.html?time=1505001781.890912','设计模式之美',27455),('设计模式','http://blog.csdn.net/column/details/dahua-shejimoshi.html?time=1505001782.812075','大话设计模式',9151),('设计模式','http://blog.csdn.net/column/details/designpattern001.html?time=1505001782.812124','设计模式实战',8967),('设计模式','http://blog.csdn.net/column/details/habren-design-patter.html?time=1505001782.812146','跟着Jason学 设计模式',8700),('设计模式','http://blog.csdn.net/column/details/dpatterns.html?time=1505001782.812158','设计模式',8579),('设计模式','http://blog.csdn.net/column/details/learn-design-pattern.html?time=1505001782.812171','初识设计模式',8400),('设计模式','http://blog.csdn.net/column/details/learnofdesignpattern.html?time=1505001782.812183','设计模式',8381),('设计模式','http://blog.csdn.net/column/details/sjmsjc.html?time=1505001783.842465','设计模式',9945),('设计模式','http://blog.csdn.net/column/details/designpatternsummary.html?time=1505001783.842499','大话设计模式',9713),('设计模式','http://blog.csdn.net/column/details/shenruqianchu-design.html?time=1505001783.842509','深入浅出设计模式',9609),('设计模式','http://blog.csdn.net/column/details/designpattern1.html?time=1505001783.842517','设计模式',9300),('设计模式','http://blog.csdn.net/column/details/zysjms.html?time=1505001784.802145','设计模式',11087),('设计模式','http://blog.csdn.net/column/details/designmodel.html?time=1505001784.802181','设计模式',10785),('设计模式','http://blog.csdn.net/column/details/13758.html?time=1505001784.80219','java设计模式学习',10757),('设计模式','http://blog.csdn.net/column/details/javapatternexample.html?time=1505001784.802197','java设计模式实例',10556),('设计模式','http://blog.csdn.net/column/details/designpatternsharing.html?time=1505001824.528751','设计模式',11829),('设计模式','http://blog.csdn.net/column/details/java-design-mode.html?time=1505001824.528783','java设计模式',11771),('设计模式','http://blog.csdn.net/column/details/desginpattern.html?time=1505001824.528798','设计模式',11442),('设计模式','http://blog.csdn.net/column/details/design-patterns001.html?time=1505001824.528804','设计模式的六大原则',11441),('设计模式','http://blog.csdn.net/column/details/theonegis-design.html?time=1505001824.528811','设计模式学习笔记',11371),('设计模式','http://blog.csdn.net/column/details/13088.html?time=1505001835.641066','设计模式',13423),('设计模式','http://blog.csdn.net/column/details/javadesignmodel.html?time=1505001835.641113','23天征服--23种设计模式',13345),('设计模式','http://blog.csdn.net/column/details/lxydahua.html?time=1505001835.64113','大话设计模式',12969),('设计模式','http://blog.csdn.net/column/details/patternofjie.html?time=1505001835.64114','设计模式',12659),('设计模式','http://blog.csdn.net/column/details/walker1.html?time=1505001842.054975','设计模式C++实现',12583),('设计模式','http://blog.csdn.net/column/details/13891.html?time=1505001842.055005','《设计模式》',12301),('设计模式','http://blog.csdn.net/column/details/13400.html?time=1505001842.055013','设计模式',12238),('设计模式','http://blog.csdn.net/column/details/lius0011.html?time=1505001842.05502','设计模式实例',12170),('设计模式','http://blog.csdn.net/column/details/zhenghaozhuanlan.html?time=1505001842.055026','设计模式',12158),('设计模式','http://blog.csdn.net/column/details/designpattern-qiu.html?time=1505001842.055036','设计模式',11972),('设计模式','http://blog.csdn.net/column/details/mydesignpatterns.html?time=1505001842.055042','设计模式通俗讲解&&C++实现',11868),('设计模式','http://blog.csdn.net/column/details/suski-pattern.html?time=1505001846.790829','《大话设计模式》读后感',15393),('设计模式','http://blog.csdn.net/column/details/mydesignpattern35.html?time=1505001846.790857','设计模式之全解析',14774),('设计模式','http://blog.csdn.net/column/details/gof-design-patterns.html?time=1505001846.790865','GoF设计模式',14742),('设计模式','http://blog.csdn.net/column/details/shms520.html?time=1505001846.790871','设计模式',14647),('设计模式','http://blog.csdn.net/column/details/note-design-pattern.html?time=1505001846.790879','设计模式笔记',14473),('设计模式','http://blog.csdn.net/column/details/javadesignpattern.html?time=1505001880.817372','设计模式',16959),('设计模式','http://blog.csdn.net/column/details/mdmcsdn1.html?time=1505001880.817427','设计模式',16653),('设计模式','http://blog.csdn.net/column/details/design-pattern-hxm.html?time=1505001880.817444','设计模式之android',16342),('设计模式','http://blog.csdn.net/column/details/16401.html?time=1505001880.817455','24种设计模式',16175),('设计模式','http://blog.csdn.net/column/details/ourdesignpattern.html?time=1505001880.817467','设计模式',16085),('设计模式','http://blog.csdn.net/column/details/13196.html?time=1505001880.817482','设计模式',15613),('设计模式','http://blog.csdn.net/column/details/design-pattern.html?time=1505001881.339174','设计模式在实际项目中的应用',18194),('设计模式','http://blog.csdn.net/column/details/xiaomaolv.html?time=1505001881.339213','设计模式',18181),('设计模式','http://blog.csdn.net/column/details/designpatterns-night.html?time=1505001881.339221','设计模式',18061),('设计模式','http://blog.csdn.net/column/details/16366.html?time=1505001884.317479','设计模式讲解与代码实践',19598),('设计模式','http://blog.csdn.net/column/details/sjms.html?time=1505001884.317507','设计模式',19532),('设计模式','http://blog.csdn.net/column/details/dhsjms.html?time=1505001884.317516','大话设计模式',19442),('设计模式','http://blog.csdn.net/column/details/huohuo.html?time=1505001884.317522','大话设计模式',19234),('设计模式','http://blog.csdn.net/column/details/extenddesignpattern.html?time=1505001884.317531','可扩展性与设计模式',18837),('设计模式','http://blog.csdn.net/column/details/sjmsxuexibiji.html?time=1505001885.780919','设计模式学习笔记',22192),('设计模式','http://blog.csdn.net/column/details/12848.html?time=1505001885.780963','一天一个设计模式',22170),('设计模式','http://blog.csdn.net/column/details/designpattern32.html?time=1505001885.780971','设计模式',22136),('设计模式','http://blog.csdn.net/column/details/designpatterns-qt.html?time=1505001885.780985','设计模式(Qt版)',20990),('设计模式','http://blog.csdn.net/column/details/cainiaojava.html?time=1505001885.780993','菜鸟版JAVA设计模式',20782),('设计模式','http://blog.csdn.net/column/details/designaction.html?time=1505001925.959002','设计模式',27341),('设计模式','http://blog.csdn.net/column/details/design-pattern-java.html?time=1505001925.959185','设计模式（JAVA）',27222),('设计模式','http://blog.csdn.net/column/details/baadf00df00dabadfds0.html?time=1505001925.959203','初探设计模式（C++实现）',25904),('设计模式','http://blog.csdn.net/column/details/ef3c5ec0-f3c9-48af.html?time=1505001925.959211','设计模式精解',25720),('设计模式','http://blog.csdn.net/column/details/designpatternbylmb.html?time=1505001925.959221','大话设计模式',24704),('设计模式','http://blog.csdn.net/column/details/designpatterns.html?time=1505001943.114919','大话设计模式',74636),('设计模式','http://blog.csdn.net/column/details/design2.html?time=1505001943.114965','乱砍设计模式',74027),('设计模式','http://blog.csdn.net/column/details/phpusedesignpattern.html?time=1505001943.240962','设计模式之PHP项目应用',32520),('设计模式','http://blog.csdn.net/column/details/artofdesignpattern.html?time=1505001943.241009','设计模式的艺术',32315),('设计模式','http://blog.csdn.net/column/details/shejimoshishengsheng.html?time=1505001943.24102','设计模式',31436),('设计模式','http://blog.csdn.net/column/details/gof-design-pattern.html?time=1505001944.244163','小清新GoF23种设计模式',37398),('设计模式','http://blog.csdn.net/column/details/wenqiang.html?time=1505001944.244189','设计模式之禅',37174),('设计模式','http://blog.csdn.net/column/details/13856.html?time=1505001944.244201','设计模式',35911),('设计模式','http://blog.csdn.net/column/details/my-designpatterns.html?time=1505001944.244207','设计模式之禅',35803),('设计模式','http://blog.csdn.net/column/details/designerpattern.html?time=1505001944.244218','IOS设计模式浅析',34134),('设计模式','http://blog.csdn.net/column/details/14788.html?time=1505001947.518908','设计模式(Java)',43147),('设计模式','http://blog.csdn.net/column/details/xing-designpattern.html?time=1505001947.518958','写最好的设计模式专栏',42481),('设计模式','http://blog.csdn.net/column/details/patternsdesign.html?time=1505001947.518986','设计模式笔记',40219),('设计模式','http://blog.csdn.net/column/details/design-pattern23.html?time=1505001947.518994','C#设计模式',39915),('设计模式','http://blog.csdn.net/column/details/softwaredesign.html?time=1505001947.519001','设计模式',38760),('设计模式','http://blog.csdn.net/column/details/my-designpattern.html?time=1505001988.607375','设计模式与系统架构',46131),('设计模式','http://blog.csdn.net/column/details/designpatterns4java.html?time=1505001988.607398','23种设计模式 (java通俗演义)',45424),('设计模式','http://blog.csdn.net/column/details/design-pattern-homer.html?time=1505001988.607406','设计模式',45355),('设计模式','http://blog.csdn.net/column/details/designmodels.html?time=1505001990.602828','Java设计模式菜鸟系列',55420),('设计模式','http://blog.csdn.net/column/details/dahua.html?time=1505001990.602856','大话设计模式',53006),('设计模式','http://blog.csdn.net/column/details/hacke2-designpatter.html?time=1505001990.602865','设计模式读书笔记与总结',51890),('设计模式','http://blog.csdn.net/column/details/phpdesign.html?time=1505001990.602872','PHP设计模式',51451),('设计模式','http://blog.csdn.net/column/details/oodesign.html?time=1505001990.602881','设计模式攻略',50657),('设计模式','http://blog.csdn.net/column/details/oodm.html?time=1505002009.344315','面向对象设计模式',88663),('设计模式','http://blog.csdn.net/column/details/cpp-design-pattern.html?time=1505002016.962961','C++设计模式',302196),('设计模式','http://blog.csdn.net/column/details/designpattern-xt.html?time=1505002016.962993','DesignPattern(设计模式)',247886),('设计模式','http://blog.csdn.net/column/details/mydesignpattern.html?time=1505002016.963003','我所理解的设计模式',230436),('设计模式','http://blog.csdn.net/column/details/code-design.html?time=1505002017.315625','设计模式融入生活',125878),('设计模式','http://blog.csdn.net/column/details/designpatternforb.html?time=1505002017.315661','\"围观\"设计模式',112155),('设计模式','http://blog.csdn.net/column/details/pattern.html?time=1505174401.639322','设计模式',1283009),('设计模式','http://blog.csdn.net/column/details/design.html?time=1505174401.639394','设计模式C++实现',459541),('设计模式','http://blog.csdn.net/column/details/designpatternzh.html?time=1505174401.639407','跟着ZHONGHuan学习设计模式',369898),('设计模式','http://blog.csdn.net/column/details/design-patterns.html?time=1505174401.720138','设计模式',162040),('设计模式','http://blog.csdn.net/column/details/csharpdesignpattern.html?time=1505174401.720193','C#设计模式',145541),('设计模式','http://blog.csdn.net/column/details/chenssy-design.html?time=1505174401.720212','设计模式读书笔记',131748),('mysql','http://blog.csdn.net/column/details/mysql-daydayup.html?time=1505174401.759964','Mysql提升',117731),('mysql','http://blog.csdn.net/column/details/mysql-tzx.html?time=1505174401.760024','mysql知识汇总和提高',109974),('mysql','http://blog.csdn.net/column/details/zhy-study-mysql.html?time=1505174401.760041','Mysql',92400),('mysql','http://blog.csdn.net/column/details/14121.html?time=1505174401.760048','如何让Mysql跑的更快',85920),('mysql','http://blog.csdn.net/column/details/mysqlzl544434558.html?time=1505174401.760058','项目中积累的mysql使用经验',79628),('设计模式','http://blog.csdn.net/column/details/13826.html?time=1505174401.876244','云设计模式',64185),('设计模式','http://blog.csdn.net/column/details/eat-designpattern.html?time=1505174401.87627','硬啃设计模式',62953),('设计模式','http://blog.csdn.net/column/details/headfirst.html?time=1505174401.876278','HeadFirst 设计模式学习笔记',60830),('设计模式','http://blog.csdn.net/column/details/clouddesignpattern.html?time=1505174401.876285','云计算设计模式',59882),('设计模式','http://blog.csdn.net/column/details/12698.html?time=1505174401.876296','Java设计模式实战',56508),('mysql','http://blog.csdn.net/column/details/mysqlstudy.html?time=1505174401.971335','mysql学习',27754),('mysql','http://blog.csdn.net/column/details/15651.html?time=1505174401.97145','MySql数据库调优',27527),('mysql','http://blog.csdn.net/column/details/14507.html?time=1505174401.971463','MySQL学习记录',26074),('mysql','http://blog.csdn.net/column/details/mysqlcentury.html?time=1505174402.039552','MySQL进阶',1225641),('mysql','http://blog.csdn.net/column/details/mysql-in-action.html?time=1505174402.039675','mysql 由浅入深',365616),('mysql','http://blog.csdn.net/column/details/mysqltw.html?time=1505174402.039688','MySQL图文进阶',348712),('mysql','http://blog.csdn.net/column/details/mysqldba.html?time=1505174402.0397','MySQL管理开发由浅入深',220822),('mysql','http://blog.csdn.net/column/details/evermysql.html?time=1505174402.039708','MySQL',190341),('设计模式','http://blog.csdn.net/column/details/designpatternforios.html?time=1505174402.305945','设计模式之深入学习IOS版',24225),('设计模式','http://blog.csdn.net/column/details/cppdesignpattern.html?time=1505174402.306005','C++设计模式',23952),('设计模式','http://blog.csdn.net/column/details/feihedp.html?time=1505174402.30602','浅显易懂的设计模式',23454),('设计模式','http://blog.csdn.net/column/details/lxq-shejimoshi.html?time=1505174402.306052','设计模式--Java描述',22542),('设计模式','http://blog.csdn.net/column/details/designpattern-cassie.html?time=1505174402.306064','设计模式',22387),('设计模式','http://blog.csdn.net/column/details/12906.html?time=1505174402.306077','小话设计模式',22323),('mysql','http://blog.csdn.net/column/details/16135.html?time=1505174402.477524','Mysql架构设计',2663),('mysql','http://blog.csdn.net/column/details/16687.html?time=1505174402.478288','Mysql学习与实践笔记',2301),('设计模式','http://blog.csdn.net/column/details/shejimoshi1.html?time=1505174403.333949','设计模式',4672),('设计模式','http://blog.csdn.net/column/details/qkcoder.html?time=1505174403.333985','C++设计模式',4367),('设计模式','http://blog.csdn.net/column/details/15604.html?time=1505174403.333993','Head First设计模式',4333),('mysql','http://blog.csdn.net/column/details/mysql56-refer.html?time=1505174403.420506','MySQL 5.6 参考',5817),('mysql','http://blog.csdn.net/column/details/shenruqianchu-mysql.html?time=1505174403.42054','深入浅出Mysql',5343),('mysql','http://blog.csdn.net/column/details/15343.html?time=1505174403.420552','史上最全的MySQL基础教程',4773),('mysql','http://blog.csdn.net/column/details/13738.html?time=1505174403.420561','MySql及NoSQL相关',4339),('mysql','http://blog.csdn.net/column/details/14622.html?time=1505174403.42057','MySQL',3905),('mysql','http://blog.csdn.net/column/details/16578.html?time=1505174403.420576','MYSQL',3894),('mysql','http://blog.csdn.net/column/details/15364.html?time=1505174404.332256','MySQL',2222),('mysql','http://blog.csdn.net/column/details/13213.html?time=1505174404.332286','Mysql基本使用',2190),('mysql','http://blog.csdn.net/column/details/15133.html?time=1505174404.332296','MySQL基本知识',2018),('mysql','http://blog.csdn.net/column/details/16190.html?time=1505174404.332304','mysql',1734),('mysql','http://blog.csdn.net/column/details/17229.html?time=1505174404.33231','mysql',1686),('mysql','http://blog.csdn.net/column/details/15775.html?time=1505174404.332319','MySQL详解',1265),('mysql','http://blog.csdn.net/column/details/15110.html?time=1505174404.332325','MySQL入门详解',1090),('设计模式','http://blog.csdn.net/column/details/15600.html?time=1505174404.430854','设计模式小解',1059),('设计模式','http://blog.csdn.net/column/details/14268.html?time=1505174404.430881','C# 设计模式',837),('设计模式','http://blog.csdn.net/column/details/designpatternsumarry.html?time=1505174404.430891','设计模式',792),('设计模式','http://blog.csdn.net/column/details/15456.html?time=1505174405.538927','常用Java设计模式系列',1625),('设计模式','http://blog.csdn.net/column/details/15026.html?time=1505174405.53897','Java 设计模式',1515),('设计模式','http://blog.csdn.net/column/details/13662.html?time=1505174405.53898','Java设计模式学习',1367),('设计模式','http://blog.csdn.net/column/details/16040.html?time=1505174405.538986','java设计模式',1352),('设计模式','http://blog.csdn.net/column/details/16088.html?time=1505174405.538993','设计模式',1276),('设计模式','http://blog.csdn.net/column/details/zhdldesignpattern.html?time=1505174405.539001','设计模式之木叶村之旅',1201),('mysql','http://blog.csdn.net/column/details/mysql1209.html?time=1505174405.636007','mysql优化',7202),('mysql','http://blog.csdn.net/column/details/mysql1.html?time=1505174405.636041','踟蹰MySQL',6540),('mysql','http://blog.csdn.net/column/details/13369.html?time=1505174405.63605','mysql的使用',6429),('mysql','http://blog.csdn.net/column/details/16983.html?time=1505174405.636266','MySQL从入门到精通',6399),('mysql','http://blog.csdn.net/column/details/16623.html?time=1505174405.636278','MySQL源码研究',5995),('mysql','http://blog.csdn.net/column/details/13509.html?time=1505174405.636285','MySQl数据库嵌入式开发',5974),('设计模式','http://blog.csdn.net/column/details/12965.html?time=1505174406.344427','设计模式',2186),('设计模式','http://blog.csdn.net/column/details/14987.html?time=1505174406.344453','设计模式',2114),('设计模式','http://blog.csdn.net/column/details/14187.html?time=1505174406.344465','设计模式-java',1819),('设计模式','http://blog.csdn.net/column/details/15050.html?time=1505174406.344472','设计模式',1762),('设计模式','http://blog.csdn.net/column/details/13865.html?time=1505174406.34448','java设计模式',1636),('linux','http://blog.csdn.net/column/details/16850.html?time=1505174406.645428','Linux内核完全解读',1919),('设计模式','http://blog.csdn.net/column/details/java-design-pattern.html?time=1505174407.347171','Java设计模式',3010),('设计模式','http://blog.csdn.net/column/details/yrp-design-pattern.html?time=1505174407.347213','设计模式与应用',2972),('设计模式','http://blog.csdn.net/column/details/16218.html?time=1505174407.347228','设计模式',2744),('设计模式','http://blog.csdn.net/column/details/16553.html?time=1505174407.347242','设计模式',2586),('设计模式','http://blog.csdn.net/column/details/14288.html?time=1505174407.347254','设计模式',2468),('设计模式','http://blog.csdn.net/column/details/15028.html?time=1505174407.347265','设计模式',2467),('linux','http://blog.csdn.net/column/details/linux-qa-practice.html?time=1505174407.412251','实战 Linux 系统质量保障',2643),('linux','http://blog.csdn.net/column/details/linux1209.html?time=1505174421.695506','Linux',12132),('linux','http://blog.csdn.net/column/details/sln-linux-design.html?time=1505174427.806235','把握linux内核设计思想',20694),('linux','http://blog.csdn.net/column/details/kernel2-6.html?time=1505174427.806272','Linux内核设计基础',19229),('linux','http://blog.csdn.net/column/details/master-linux.html?time=1505174430.122847','Linux操作系统',21871),('linux','http://blog.csdn.net/column/details/shanshanpt.html?time=1505174430.122884','Linux 网络编程',21124),('linux','http://blog.csdn.net/column/details/oslinux.html?time=1505174441.139043','操作系统原理（linux）',33789),('linux','http://blog.csdn.net/column/details/explore-linux.html?time=1505174441.139077','Linux探索之旅',31531),('linux','http://blog.csdn.net/column/details/linux-driver.html?time=1505174444.263006','linux驱动开发',46301),('linux','http://blog.csdn.net/column/details/linuxsystemprogram.html?time=1505174447.430591','Linux 系统编程',77934),('linux','http://blog.csdn.net/column/details/linuxkernel-detailed.html?time=1505174447.430627','Linux内核剖析',68170),('linux','http://blog.csdn.net/column/details/dut-linux-kernel.html?time=1505174447.430635','Linux内核设计的艺术',67135),('linux','http://blog.csdn.net/column/details/linux-kernel-no-code.html?time=1505174461.610812','linux内核原理',85487),('linux','http://blog.csdn.net/column/details/linuxkernel.html?time=1505174468.930173','Linux内核设计与实现',107465),('linux','http://blog.csdn.net/column/details/driverforlinux.html?time=1505174468.930213','Linux设备驱动',97905),('mysql','http://blog.csdn.net/column/details/yinfeng-mysql.html?time=1505174483.901526','MySQL内核与性能优化',9833),('mysql','http://blog.csdn.net/column/details/13281.html?time=1505174483.901573','MySQL-数据库-JDBC',9155),('mysql','http://blog.csdn.net/column/details/13516.html?time=1505174483.901593','MySQL路线',8196),('mysql','http://blog.csdn.net/column/details/13337.html?time=1505174484.9264','mysql数据库',11799),('mysql','http://blog.csdn.net/column/details/mysqlbywangjianan.html?time=1505174484.926437','mysql数据库',11226),('mysql','http://blog.csdn.net/column/details/13534.html?time=1505174484.926445','Mysql系列',11123),('mysql','http://blog.csdn.net/column/details/13489.html?time=1505174484.926453','MySQL基础知识大全',10970),('mysql','http://blog.csdn.net/column/details/14861.html?time=1505174485.968326','高性能MySQL',14424),('mysql','http://blog.csdn.net/column/details/13301.html?time=1505174485.968378','MySQL',12359),('设计模式','http://blog.csdn.net/column/details/hgbshejimoshi.html?time=1505174494.758826','设计模式',5653),('设计模式','http://blog.csdn.net/column/details/design-patterns-xue.html?time=1505174494.758852','设计模式',5624),('设计模式','http://blog.csdn.net/column/details/gof-23design.html?time=1505174494.75886','Gof 设计模式',5615),('设计模式','http://blog.csdn.net/column/details/14723.html?time=1505174494.758866','设计模式',5528),('设计模式','http://blog.csdn.net/column/details/16634.html?time=1505174494.758873','设计模式',5337),('设计模式','http://blog.csdn.net/column/details/12992.html?time=1505174494.758881','设计模式备忘录',5160),('设计模式','http://blog.csdn.net/column/details/designpatterns-haoz.html?time=1505174494.758887','设计模式解析',5053),('设计模式','http://blog.csdn.net/column/details/designpatternsjiange.html?time=1505174494.758893','设计模式',4915),('设计模式','http://blog.csdn.net/column/details/designpatternnotewyj.html?time=1505174495.82728','设计模式笔记整理',3696),('设计模式','http://blog.csdn.net/column/details/javamodel.html?time=1505174495.827302','JAVA设计模式',3695),('设计模式','http://blog.csdn.net/column/details/15193.html?time=1505174495.82731','赵建银-设计模式学习',3658),('设计模式','http://blog.csdn.net/column/details/13164.html?time=1505174495.827317','设计模式',3569),('设计模式','http://blog.csdn.net/column/details/javascriptdesgin.html?time=1505174495.827322','javascript设计模式',3528),('设计模式','http://blog.csdn.net/column/details/design-pattern-zen.html?time=1505174495.827329','《设计模式之禅》读书笔记',3355),('设计模式','http://blog.csdn.net/column/details/16632.html?time=1505174495.827337','设计模式学习笔记',3277),('设计模式','http://blog.csdn.net/column/details/15839.html?time=1505174495.827342','设计模式',3250),('mysql','http://blog.csdn.net/column/details/wenniuwuren-mysql.html?time=1505174507.128877','MySQL 入门到调优',15209),('mysql','http://blog.csdn.net/column/details/studymysql.html?time=1505174507.128908','MySQL数据库学习',15198),('mysql','http://blog.csdn.net/column/details/13220.html?time=1505174508.232894','mysql',33287),('mysql','http://blog.csdn.net/column/details/mysql-001.html?time=1505174508.232924','高性能MySQL',31611),('mysql','http://blog.csdn.net/column/details/tangowl-mysql-intro.html?time=1505174508.266563','MySQL 入门教程',20747),('mysql','http://blog.csdn.net/column/details/mysql-dablelv.html?time=1505174508.26659','MySQL基础',20398),('mysql','http://blog.csdn.net/column/details/15548.html?time=1505174508.266601','数据库(MySQL)',19492),('mysql','http://blog.csdn.net/column/details/13881.html?time=1505174508.266608','mysql索引与优化',19384),('mysql','http://blog.csdn.net/column/details/mysqlwu.html?time=1505174508.266614','MySQL必知必会学习笔记',19380),('mysql','http://blog.csdn.net/column/details/detailofmysql.html?time=1505174527.290221','MySQL详解',48907),('mysql','http://blog.csdn.net/column/details/oracle2mysql.html?time=1505174527.290272','从Oracle到MySQL',44952),('mysql','http://blog.csdn.net/column/details/cppformysqlpro.html?time=1505174527.290299','visual c++ 2008进行MySQL编程（ODBC）',44282),('mysql','http://blog.csdn.net/column/details/16138.html?time=1505174527.290305','史上最简单的 MySQL 教程',43977),('mysql','http://blog.csdn.net/column/details/13005.html?time=1505174527.290313','MySQL必知必会',41828),('mysql','http://blog.csdn.net/column/details/mysqlsummary.html?time=1505174529.502548','Mysql数据库总结',71537),('mysql','http://blog.csdn.net/column/details/mysqlpri.html?time=1505174529.502625','思考mysql内核之初级系列',66904),('mysql','http://blog.csdn.net/column/details/15260.html?time=1505174529.502635','MySQL技术',59630),('mysql','http://blog.csdn.net/column/details/conquermysql.html?time=1505174529.502645','征服数据库之mysql',50954),('设计模式','http://blog.csdn.net/column/details/12848.html?time=1505174532.381738','一天一个设计模式',22256),('设计模式','http://blog.csdn.net/column/details/sjmsxuexibiji.html?time=1505174532.381766','设计模式学习笔记',22231),('设计模式','http://blog.csdn.net/column/details/designpattern32.html?time=1505174532.381775','设计模式',22163),('设计模式','http://blog.csdn.net/column/details/16366.html?time=1505174532.381787','设计模式讲解与代码实践',21267),('设计模式','http://blog.csdn.net/column/details/designpatterns-qt.html?time=1505174532.381795','设计模式(Qt版)',20997),('设计模式','http://blog.csdn.net/column/details/cainiaojava.html?time=1505174532.381803','菜鸟版JAVA设计模式',20831),('设计模式','http://blog.csdn.net/column/details/tuimo.html?time=1505174550.480629','设计模式',6312),('设计模式','http://blog.csdn.net/column/details/javadesign-pattern.html?time=1505174550.4807','JAVA设计模式笔记',6168),('设计模式','http://blog.csdn.net/column/details/14351.html?time=1505174550.480709','java23种设计模式',5953),('设计模式','http://blog.csdn.net/column/details/14410.html?time=1505174550.480716','设计模式',5927),('mysql','http://blog.csdn.net/column/details/13794.html?time=1505174550.65539','MySQL',166137),('mysql','http://blog.csdn.net/column/details/mysqlnote.html?time=1505174550.655419','MySQL进阶指南',147536),('mysql','http://blog.csdn.net/column/details/mysql-1.html?time=1505174550.65543','MySQL从入门到精通',128028),('设计模式','http://blog.csdn.net/column/details/design-pattern-123.html?time=1505174551.807723','设计模式',7201),('设计模式','http://blog.csdn.net/column/details/chaogeshejimoshi.html?time=1505174551.807759','Java设计模式简明教程',7166),('设计模式','http://blog.csdn.net/column/details/pattern23.html?time=1505174551.807766','设计模式',7080),('设计模式','http://blog.csdn.net/column/details/14875.html?time=1505174551.807772','设计模式',7037),('设计模式','http://blog.csdn.net/column/details/14948.html?time=1505174551.807779','php，java实现设计模式',6956),('设计模式','http://blog.csdn.net/column/details/design-pattern-lin.html?time=1505174551.807784','设计模式',6907),('设计模式','http://blog.csdn.net/column/details/xfzsjms.html?time=1505174551.807791','设计模式',6820),('设计模式','http://blog.csdn.net/column/details/designpattern2.html?time=1505174551.807798','设计模式',6708),('设计模式','http://blog.csdn.net/column/details/14533.html?time=1505174551.807805','23种设计模式',6516),('设计模式','http://blog.csdn.net/column/details/13439.html?time=1505174551.807811','JavaScript设计模式',6465),('设计模式','http://blog.csdn.net/column/details/design--mode.html?time=1505174552.481026','大话设计模式',7913),('设计模式','http://blog.csdn.net/column/details/shejimoshismile.html?time=1505174552.481054','设计模式',7799),('设计模式','http://blog.csdn.net/column/details/guus-sjms.html?time=1505174552.481062','设计模式大全',7766),('设计模式','http://blog.csdn.net/column/details/14866.html?time=1505174552.481068','设计模式之(C++实现)',7631),('设计模式','http://blog.csdn.net/column/details/dahua-shejimoshi.html?time=1505174554.525625','大话设计模式',9173),('设计模式','http://blog.csdn.net/column/details/designpattern001.html?time=1505174554.525683','设计模式实战',8987),('设计模式','http://blog.csdn.net/column/details/habren-design-patter.html?time=1505174554.525695','跟着Jason学 设计模式',8720),('设计模式','http://blog.csdn.net/column/details/dpatterns.html?time=1505174554.525702','设计模式',8590),('设计模式','http://blog.csdn.net/column/details/learn-design-pattern.html?time=1505174554.525709','初识设计模式',8412),('设计模式','http://blog.csdn.net/column/details/learnofdesignpattern.html?time=1505174554.525715','设计模式',8392),('设计模式','http://blog.csdn.net/column/details/sjmsjc.html?time=1505174609.98802','设计模式',9956),('设计模式','http://blog.csdn.net/column/details/designpatternsummary.html?time=1505174609.988048','大话设计模式',9729),('设计模式','http://blog.csdn.net/column/details/shenruqianchu-design.html?time=1505174609.988058','深入浅出设计模式',9629),('设计模式','http://blog.csdn.net/column/details/designpattern1.html?time=1505174609.988066','设计模式',9306),('设计模式','http://blog.csdn.net/column/details/zysjms.html?time=1505174611.08909','设计模式',11092),('设计模式','http://blog.csdn.net/column/details/13758.html?time=1505174611.089117','java设计模式学习',10816),('设计模式','http://blog.csdn.net/column/details/designmodel.html?time=1505174611.089125','设计模式',10801),('设计模式','http://blog.csdn.net/column/details/javapatternexample.html?time=1505174611.089132','java设计模式实例',10582),('设计模式','http://blog.csdn.net/column/details/designpatternsharing.html?time=1505174612.091342','设计模式',11846),('设计模式','http://blog.csdn.net/column/details/java-design-mode.html?time=1505174612.091401','java设计模式',11793),('设计模式','http://blog.csdn.net/column/details/design-patterns001.html?time=1505174612.091415','设计模式的六大原则',11448),('设计模式','http://blog.csdn.net/column/details/desginpattern.html?time=1505174612.091421','设计模式',11452),('设计模式','http://blog.csdn.net/column/details/theonegis-design.html?time=1505174612.091428','设计模式学习笔记',11402),('设计模式','http://blog.csdn.net/column/details/patternofjie.html?time=1505174613.119003','设计模式',12672),('设计模式','http://blog.csdn.net/column/details/walker1.html?time=1505174613.119042','设计模式C++实现',12606),('设计模式','http://blog.csdn.net/column/details/13891.html?time=1505174613.119057','《设计模式》',12309),('设计模式','http://blog.csdn.net/column/details/13400.html?time=1505174613.119064','设计模式',12254),('设计模式','http://blog.csdn.net/column/details/zhenghaozhuanlan.html?time=1505174613.119069','设计模式',12191),('设计模式','http://blog.csdn.net/column/details/lius0011.html?time=1505174613.119075','设计模式实例',12177),('设计模式','http://blog.csdn.net/column/details/designpattern-qiu.html?time=1505174613.119083','设计模式',11990),('设计模式','http://blog.csdn.net/column/details/mydesignpatterns.html?time=1505174613.119089','设计模式通俗讲解&&C++实现',11921),('设计模式','http://blog.csdn.net/column/details/13088.html?time=1505174614.157807','设计模式',13488),('设计模式','http://blog.csdn.net/column/details/javadesignmodel.html?time=1505174614.157875','23天征服--23种设计模式',13405),('设计模式','http://blog.csdn.net/column/details/lxydahua.html?time=1505174614.157886','大话设计模式',12982),('设计模式','http://blog.csdn.net/column/details/suski-pattern.html?time=1505174665.622127','《大话设计模式》读后感',15420),('设计模式','http://blog.csdn.net/column/details/mydesignpattern35.html?time=1505174665.622164','设计模式之全解析',14807),('设计模式','http://blog.csdn.net/column/details/gof-design-patterns.html?time=1505174665.622171','GoF设计模式',14757),('设计模式','http://blog.csdn.net/column/details/shms520.html?time=1505174665.622178','设计模式',14666),('设计模式','http://blog.csdn.net/column/details/note-design-pattern.html?time=1505174665.622186','设计模式笔记',14504),('设计模式','http://blog.csdn.net/column/details/javadesignpattern.html?time=1505174666.619073','设计模式',16987),('设计模式','http://blog.csdn.net/column/details/mdmcsdn1.html?time=1505174666.6191','设计模式',16673),('设计模式','http://blog.csdn.net/column/details/design-pattern-hxm.html?time=1505174666.619109','设计模式之android',16383),('设计模式','http://blog.csdn.net/column/details/16401.html?time=1505174666.619115','24种设计模式',16293),('设计模式','http://blog.csdn.net/column/details/ourdesignpattern.html?time=1505174666.619122','设计模式',16124),('设计模式','http://blog.csdn.net/column/details/13196.html?time=1505174666.61913','设计模式',15656),('设计模式','http://blog.csdn.net/column/details/extenddesignpattern.html?time=1505174667.626218','可扩展性与设计模式',18867),('设计模式','http://blog.csdn.net/column/details/design-pattern.html?time=1505174667.626252','设计模式在实际项目中的应用',18206),('设计模式','http://blog.csdn.net/column/details/xiaomaolv.html?time=1505174667.62626','设计模式',18197),('设计模式','http://blog.csdn.net/column/details/designpatterns-night.html?time=1505174667.626266','设计模式',18086),('设计模式','http://blog.csdn.net/column/details/sjms.html?time=1505174709.053269','设计模式',19544),('设计模式','http://blog.csdn.net/column/details/dhsjms.html?time=1505174709.0533','大话设计模式',19510),('设计模式','http://blog.csdn.net/column/details/huohuo.html?time=1505174709.053308','大话设计模式',19248),('设计模式','http://blog.csdn.net/column/details/designaction.html?time=1505174709.324529','设计模式',27360),('设计模式','http://blog.csdn.net/column/details/design-pattern-java.html?time=1505174709.324556','设计模式（JAVA）',27278),('设计模式','http://blog.csdn.net/column/details/baadf00df00dabadfds0.html?time=1505174709.324569','初探设计模式（C++实现）',25946),('设计模式','http://blog.csdn.net/column/details/ef3c5ec0-f3c9-48af.html?time=1505174709.324576','设计模式精解',25742),('设计模式','http://blog.csdn.net/column/details/designpatternbylmb.html?time=1505174709.324586','大话设计模式',24747),('设计模式','http://blog.csdn.net/column/details/shuangde800-design.html?time=1505174710.163882','设计模式征途',56322),('设计模式','http://blog.csdn.net/column/details/designmodels.html?time=1505174710.163907','Java设计模式菜鸟系列',55544),('设计模式','http://blog.csdn.net/column/details/dahua.html?time=1505174710.163918','大话设计模式',53042),('设计模式','http://blog.csdn.net/column/details/hacke2-designpatter.html?time=1505174710.163925','设计模式读书笔记与总结',51923),('设计模式','http://blog.csdn.net/column/details/phpdesign.html?time=1505174710.163933','PHP设计模式',51579),('设计模式','http://blog.csdn.net/column/details/oodesign.html?time=1505174710.16394','设计模式攻略',50738),('设计模式','http://blog.csdn.net/column/details/dhsjms-cplusplus.html?time=1505174711.126596','《大话设计模式》C++实现',28286),('设计模式','http://blog.csdn.net/column/details/design--pattern.html?time=1505174711.126633','设计模式',28140),('设计模式','http://blog.csdn.net/column/details/ds-1.html?time=1505174711.126641','大话设计模式',28091),('设计模式','http://blog.csdn.net/column/details/17017.html?time=1505174711.126647','快速扩展和迭代 - 设计模式',28086),('设计模式','http://blog.csdn.net/column/details/14308.html?time=1505174711.126653','设计模式之美',27472),('设计模式','http://blog.csdn.net/column/details/phpusedesignpattern.html?time=1505174712.155849','设计模式之PHP项目应用',32593),('设计模式','http://blog.csdn.net/column/details/artofdesignpattern.html?time=1505174712.155876','设计模式的艺术',32347),('设计模式','http://blog.csdn.net/column/details/shejimoshishengsheng.html?time=1505174712.155886','设计模式',31471),('设计模式','http://blog.csdn.net/column/details/gof-design-pattern.html?time=1505174766.542361','小清新GoF23种设计模式',37470),('设计模式','http://blog.csdn.net/column/details/wenqiang.html?time=1505174766.542404','设计模式之禅',37250),('设计模式','http://blog.csdn.net/column/details/13856.html?time=1505174766.542431','设计模式',36079),('设计模式','http://blog.csdn.net/column/details/my-designpatterns.html?time=1505174766.542438','设计模式之禅',35878),('设计模式','http://blog.csdn.net/column/details/designerpattern.html?time=1505174766.542447','IOS设计模式浅析',34169),('设计模式','http://blog.csdn.net/column/details/14788.html?time=1505174767.586516','设计模式(Java)',43313),('设计模式','http://blog.csdn.net/column/details/xing-designpattern.html?time=1505174767.586539','写最好的设计模式专栏',42624),('设计模式','http://blog.csdn.net/column/details/patternsdesign.html?time=1505174767.586551','设计模式笔记',40258),('设计模式','http://blog.csdn.net/column/details/design-pattern23.html?time=1505174767.586559','C#设计模式',39972),('设计模式','http://blog.csdn.net/column/details/softwaredesign.html?time=1505174767.586565','设计模式',38774),('设计模式','http://blog.csdn.net/column/details/my-designpattern.html?time=1505174795.809573','设计模式与系统架构',46163),('设计模式','http://blog.csdn.net/column/details/designpatterns4java.html?time=1505174795.809622','23种设计模式 (java通俗演义)',45452),('设计模式','http://blog.csdn.net/column/details/design-pattern-homer.html?time=1505174795.809644','设计模式',45359),('设计模式','http://blog.csdn.net/column/details/code-design.html?time=1505174796.830822','设计模式融入生活',126079),('设计模式','http://blog.csdn.net/column/details/designpatternforb.html?time=1505174796.830868','\"围观\"设计模式',112237),('设计模式','http://blog.csdn.net/column/details/designpatterns.html?time=1505174811.929846','大话设计模式',74694),('设计模式','http://blog.csdn.net/column/details/design2.html?time=1505174811.929884','乱砍设计模式',74174),('设计模式','http://blog.csdn.net/column/details/oodm.html?time=1505174817.048185','面向对象设计模式',88698),('设计模式','http://blog.csdn.net/column/details/cpp-design-pattern.html?time=1505174822.08946','C++设计模式',302245),('设计模式','http://blog.csdn.net/column/details/designpattern-xt.html?time=1505174822.089486','DesignPattern(设计模式)',247913),('设计模式','http://blog.csdn.net/column/details/mydesignpattern.html?time=1505174822.089496','我所理解的设计模式',230706),('java','http://blog.csdn.net/column/details/java-enhance.html?time=1505260801.952077','Java总结',350627),('java','http://blog.csdn.net/column/details/javaframe.html?time=1505260801.952135','Java后台框架系列',335509),('java','http://blog.csdn.net/column/details/12698.html?time=1505260802.046528','Java设计模式实战',56561),('java','http://blog.csdn.net/column/details/designpatternschx.html?time=1505260802.129532','JAVA设计模块之旅',132477),('java','http://blog.csdn.net/column/details/lxq-shejimoshi.html?time=1505260802.738437','设计模式--Java描述',22557),('java','http://blog.csdn.net/column/details/14365.html?time=1505260804.540773','Java Web开发',755),('java','http://blog.csdn.net/column/details/13865.html?time=1505260805.613245','java设计模式',1638),('java','http://blog.csdn.net/column/details/15456.html?time=1505260805.613271','常用Java设计模式系列',1626),('java','http://blog.csdn.net/column/details/15026.html?time=1505260805.613282','Java 设计模式',1524),('java','http://blog.csdn.net/column/details/13662.html?time=1505260805.61329','Java设计模式学习',1369),('java','http://blog.csdn.net/column/details/16040.html?time=1505260805.613296','java设计模式',1357),('java','http://blog.csdn.net/column/details/14187.html?time=1505260806.55975','设计模式-java',1819),('java','http://blog.csdn.net/column/details/beginer.html?time=1505260806.559816','javaEE->高新',1665),('java','http://blog.csdn.net/column/details/java-design-pattern.html?time=1505260807.6264','Java设计模式',3011),('java','http://blog.csdn.net/column/details/14305.html?time=1505260836.923255','javaEE防盗版',5493),('java','http://blog.csdn.net/column/details/max1210.html?time=1505260836.923304','java入门到精通',5299),('java','http://blog.csdn.net/column/details/javamodel.html?time=1505260837.920856','JAVA设计模式',3697),('java','http://blog.csdn.net/column/details/javascriptdesgin.html?time=1505260837.920891','javascript设计模式',3540),('java','http://blog.csdn.net/column/details/javadesign-pattern.html?time=1505260838.821404','JAVA设计模式笔记',6193),('java','http://blog.csdn.net/column/details/14351.html?time=1505260838.821439','java23种设计模式',5972),('java','http://blog.csdn.net/column/details/14790.html?time=1505260838.821446','Java调优方案',5960),('java','http://blog.csdn.net/column/details/chaogeshejimoshi.html?time=1505260856.999812','Java设计模式简明教程',7174),('java','http://blog.csdn.net/column/details/talk-effective-java.html?time=1505260856.999842','谈Effective Java',6994),('java','http://blog.csdn.net/column/details/14948.html?time=1505260856.999849','php，java实现设计模式',6970),('java','http://blog.csdn.net/column/details/13439.html?time=1505260856.999861','JavaScript设计模式',6519),('java','http://blog.csdn.net/column/details/framework-1.html?time=1505260858.022091','Java进阶之路',7975),('java','http://blog.csdn.net/column/details/14017.html?time=1505260858.02215','java web开发应用',7262),('java','http://blog.csdn.net/column/details/j2ee-hanhan.html?time=1505260859.990474','Java之J2EE',8894),('java','http://blog.csdn.net/column/details/13758.html?time=1505260875.269482','java设计模式学习',10869),('java','http://blog.csdn.net/column/details/javapatternexample.html?time=1505260875.26952','java设计模式实例',10587),('java','http://blog.csdn.net/column/details/java-design-mode.html?time=1505260876.199325','java设计模式',11803),('java','http://blog.csdn.net/column/details/16988.html?time=1505260876.199353','java架构师入门',11493),('java','http://blog.csdn.net/column/details/16808.html?time=1505260877.290315','Java开发经验积累',12713),('java','http://blog.csdn.net/column/details/javaee2014-09-04.html?time=1505260877.290353','JavaEE',12068),('java','http://blog.csdn.net/column/details/rabbitmq-for-java.html?time=1505260891.257734','RabbitMQ Java入门教程',33660),('java','http://blog.csdn.net/column/details/spring-liao.html?time=1505260891.257774','java 框架',32218),('java','http://blog.csdn.net/column/details/java-thread-.html?time=1505260892.395438','java 并发 多线程',34002),('java','http://blog.csdn.net/column/details/ysc-1123.html?time=1505260894.466817','Java菜鸟成长日记',14036),('java','http://blog.csdn.net/column/details/gavin-framework.html?time=1505260895.479778','JavaWeb框架',14305),('java','http://blog.csdn.net/column/details/12714.html?time=1505260907.607196','javaEE——框架技术',16681),('java','http://blog.csdn.net/column/details/javaforspring.html?time=1505260908.61495','java架构解析',18425),('java','http://blog.csdn.net/column/details/java-web-learn.html?time=1505260908.614981','java web 知识汇总',17305),('java','http://blog.csdn.net/column/details/design-pattern-java.html?time=1505260910.576104','设计模式（JAVA）',27353),('java','http://blog.csdn.net/column/details/cainiaojava.html?time=1505260911.686883','菜鸟版JAVA设计模式',20868),('java','http://blog.csdn.net/column/details/learnpro.html?time=1505260922.769098','Java性能调优',29968),('java','http://blog.csdn.net/column/details/toto-ee.html?time=1505260923.680106','JavaEE由浅入深专栏',68974),('java','http://blog.csdn.net/column/details/15065.html?time=1505260924.690723','Java技术栈架构',94115),('java','http://blog.csdn.net/column/details/dp-in-java-yqj2065.html?time=1505260924.690756','面向对象设计：原理、模式和应用(Java8)',91480),('java','http://blog.csdn.net/column/details/14788.html?time=1505260925.680285','设计模式(Java)',43378),('java','http://blog.csdn.net/column/details/jplogicframework.html?time=1505260925.680313','java快速开发平台(jplogic)',42532),('java','http://blog.csdn.net/column/details/14810.html?time=1505260939.830569','Java Web 成神之路',49247),('java','http://blog.csdn.net/column/details/designpatterns4java.html?time=1505260939.830648','23种设计模式 (java通俗演义)',45468),('java','http://blog.csdn.net/column/details/designmodels.html?time=1505260940.785719','Java设计模式菜鸟系列',55590),('java','http://blog.csdn.net/column/details/12747.html?time=1505260940.785758','JavaWeb',51833),('java','http://blog.csdn.net/column/details/javapractice.html?time=1505260958.936034','javaWEB实战',286714),('java','http://blog.csdn.net/column/details/myjava.html?time=1505260958.936075','Java深入',219594),('java','http://blog.csdn.net/column/details/javaee-learning.html?time=1505260958.936084','JavaEE核心框架',195454),('java','http://blog.csdn.net/column/details/javaee.html?time=1505260971.068715','Java EE开发',121459),('java','http://blog.csdn.net/column/details/kuangjiaxuexi123.html?time=1505260971.068741','java 框架',120058),('设计模式','http://blog.csdn.net/column/details/pattern.html?time=1505347201.874898','设计模式',1285110),('设计模式','http://blog.csdn.net/column/details/design.html?time=1505347201.874978','设计模式C++实现',460413),('设计模式','http://blog.csdn.net/column/details/designpatternzh.html?time=1505347201.874992','跟着ZHONGHuan学习设计模式',369956),('mysql','http://blog.csdn.net/column/details/mysqlcentury.html?time=1505347201.93303','MySQL进阶',1225913),('mysql','http://blog.csdn.net/column/details/mysql-in-action.html?time=1505347201.933056','mysql 由浅入深',365660),('mysql','http://blog.csdn.net/column/details/mysqltw.html?time=1505347201.933064','MySQL图文进阶',350079),('mysql','http://blog.csdn.net/column/details/mysqldba.html?time=1505347201.933075','MySQL管理开发由浅入深',221277),('mysql','http://blog.csdn.net/column/details/evermysql.html?time=1505347201.933082','MySQL',190701),('设计模式','http://blog.csdn.net/column/details/13826.html?time=1505347202.095404','云设计模式',64253),('设计模式','http://blog.csdn.net/column/details/eat-designpattern.html?time=1505347202.095433','硬啃设计模式',62996),('设计模式','http://blog.csdn.net/column/details/headfirst.html?time=1505347202.095442','HeadFirst 设计模式学习笔记',60843),('设计模式','http://blog.csdn.net/column/details/clouddesignpattern.html?time=1505347202.095449','云计算设计模式',60034),('设计模式','http://blog.csdn.net/column/details/12698.html?time=1505347202.09546','Java设计模式实战',56621),('设计模式','http://blog.csdn.net/column/details/design-patterns.html?time=1505347202.14988','设计模式',162122),('设计模式','http://blog.csdn.net/column/details/csharpdesignpattern.html?time=1505347202.1499','C#设计模式',145883),('设计模式','http://blog.csdn.net/column/details/chenssy-design.html?time=1505347202.149911','设计模式读书笔记',132039),('mysql','http://blog.csdn.net/column/details/mysqlstudy.html?time=1505347202.216667','mysql学习',27803),('mysql','http://blog.csdn.net/column/details/15651.html?time=1505347202.216729','MySql数据库调优',27765),('mysql','http://blog.csdn.net/column/details/14507.html?time=1505347202.216739','MySQL学习记录',26103),('设计模式','http://blog.csdn.net/column/details/designpatternforios.html?time=1505347202.579663','设计模式之深入学习IOS版',24253),('设计模式','http://blog.csdn.net/column/details/cppdesignpattern.html?time=1505347202.579692','C++设计模式',24067),('设计模式','http://blog.csdn.net/column/details/feihedp.html?time=1505347202.579717','浅显易懂的设计模式',23495),('设计模式','http://blog.csdn.net/column/details/lxq-shejimoshi.html?time=1505347202.579727','设计模式--Java描述',22568),('设计模式','http://blog.csdn.net/column/details/12906.html?time=1505347202.579753','小话设计模式',22403),('设计模式','http://blog.csdn.net/column/details/designpattern-cassie.html?time=1505347202.579759','设计模式',22397),('设计模式','http://blog.csdn.net/column/details/12848.html?time=1505347202.57978','一天一个设计模式',22313),('mysql','http://blog.csdn.net/column/details/16135.html?time=1505347202.688095','Mysql架构设计',2688),('mysql','http://blog.csdn.net/column/details/16687.html?time=1505347202.688119','Mysql学习与实践笔记',2337),('mysql','http://blog.csdn.net/column/details/mysql-daydayup.html?time=1505347203.048324','Mysql提升',118038),('mysql','http://blog.csdn.net/column/details/mysql-tzx.html?time=1505347203.048357','mysql知识汇总和提高',110031),('mysql','http://blog.csdn.net/column/details/zhy-study-mysql.html?time=1505347203.04837','Mysql',92595),('mysql','http://blog.csdn.net/column/details/14121.html?time=1505347203.048377','如何让Mysql跑的更快',86032),('mysql','http://blog.csdn.net/column/details/mysqlzl544434558.html?time=1505347203.048387','项目中积累的mysql使用经验',79883),('mysql','http://blog.csdn.net/column/details/mysql56-refer.html?time=1505347203.365593','MySQL 5.6 参考',5833),('mysql','http://blog.csdn.net/column/details/shenruqianchu-mysql.html?time=1505347203.365627','深入浅出Mysql',5360),('mysql','http://blog.csdn.net/column/details/15343.html?time=1505347203.365663','史上最全的MySQL基础教程',4809),('mysql','http://blog.csdn.net/column/details/13738.html?time=1505347203.365672','MySql及NoSQL相关',4387),('mysql','http://blog.csdn.net/column/details/16578.html?time=1505347203.36568','MYSQL',3955),('mysql','http://blog.csdn.net/column/details/14622.html?time=1505347203.365686','MySQL',3935),('设计模式','http://blog.csdn.net/column/details/javamodel.html?time=1505347203.421073','JAVA设计模式',3698),('设计模式','http://blog.csdn.net/column/details/designpatternnotewyj.html?time=1505347203.42112','设计模式笔记整理',3698),('设计模式','http://blog.csdn.net/column/details/15193.html?time=1505347203.421134','赵建银-设计模式学习',3679),('设计模式','http://blog.csdn.net/column/details/14268.html?time=1505347204.304062','C# 设计模式',841),('设计模式','http://blog.csdn.net/column/details/designpatternsumarry.html?time=1505347204.304098','设计模式',793),('设计模式','http://blog.csdn.net/column/details/15973.html?time=1505347204.304115','Java设计模式',338),('mysql','http://blog.csdn.net/column/details/15364.html?time=1505347204.463609','MySQL',2261),('mysql','http://blog.csdn.net/column/details/13213.html?time=1505347204.463635','Mysql基本使用',2196),('mysql','http://blog.csdn.net/column/details/15133.html?time=1505347204.463646','MySQL基本知识',2045),('mysql','http://blog.csdn.net/column/details/17229.html?time=1505347204.463661','mysql',1777),('mysql','http://blog.csdn.net/column/details/16190.html?time=1505347204.463673','mysql',1743),('mysql','http://blog.csdn.net/column/details/15775.html?time=1505347204.463684','MySQL详解',1268),('mysql','http://blog.csdn.net/column/details/15110.html?time=1505347204.46369','MySQL入门详解',1098),('mysql','http://blog.csdn.net/column/details/mysql1209.html?time=1505347205.538377','mysql优化',7276),('mysql','http://blog.csdn.net/column/details/mysql1.html?time=1505347205.538415','踟蹰MySQL',6574),('mysql','http://blog.csdn.net/column/details/16983.html?time=1505347205.538438','MySQL从入门到精通',6483),('mysql','http://blog.csdn.net/column/details/13369.html?time=1505347205.538446','mysql的使用',6454),('mysql','http://blog.csdn.net/column/details/16623.html?time=1505347205.538454','MySQL源码研究',6151),('mysql','http://blog.csdn.net/column/details/13509.html?time=1505347205.538461','MySQl数据库嵌入式开发',6040),('设计模式','http://blog.csdn.net/column/details/13662.html?time=1505347205.597537','Java设计模式学习',1372),('设计模式','http://blog.csdn.net/column/details/16040.html?time=1505347205.597558','java设计模式',1364),('设计模式','http://blog.csdn.net/column/details/16088.html?time=1505347205.597567','设计模式',1284),('设计模式','http://blog.csdn.net/column/details/zhdldesignpattern.html?time=1505347205.597577','设计模式之木叶村之旅',1202),('设计模式','http://blog.csdn.net/column/details/15600.html?time=1505347205.597583','设计模式小解',1063),('设计模式','http://blog.csdn.net/column/details/14187.html?time=1505347206.560537','设计模式-java',1820),('设计模式','http://blog.csdn.net/column/details/15050.html?time=1505347206.560572','设计模式',1767),('设计模式','http://blog.csdn.net/column/details/13865.html?time=1505347206.560582','java设计模式',1640),('设计模式','http://blog.csdn.net/column/details/15456.html?time=1505347206.560588','常用Java设计模式系列',1632),('设计模式','http://blog.csdn.net/column/details/15026.html?time=1505347206.560612','Java 设计模式',1527),('linux','http://blog.csdn.net/column/details/16850.html?time=1505347206.708641','Linux内核完全解读',1948),('设计模式','http://blog.csdn.net/column/details/16218.html?time=1505347207.639218','设计模式',2755),('设计模式','http://blog.csdn.net/column/details/16553.html?time=1505347207.639261','设计模式',2611),('设计模式','http://blog.csdn.net/column/details/15028.html?time=1505347207.639274','设计模式',2482),('设计模式','http://blog.csdn.net/column/details/14288.html?time=1505347207.639283','设计模式',2477),('设计模式','http://blog.csdn.net/column/details/12965.html?time=1505347207.639312','设计模式',2204),('设计模式','http://blog.csdn.net/column/details/14987.html?time=1505347207.639323','设计模式',2132),('linux','http://blog.csdn.net/column/details/linux-qa-practice.html?time=1505347207.692631','实战 Linux 系统质量保障',2651),('linux','http://blog.csdn.net/column/details/linux1209.html?time=1505347222.134508','Linux',12254),('linux','http://blog.csdn.net/column/details/sln-linux-design.html?time=1505347228.26566','把握linux内核设计思想',20744),('linux','http://blog.csdn.net/column/details/kernel2-6.html?time=1505347228.265693','Linux内核设计基础',19261),('linux','http://blog.csdn.net/column/details/master-linux.html?time=1505347230.272893','Linux操作系统',21917),('linux','http://blog.csdn.net/column/details/shanshanpt.html?time=1505347230.272921','Linux 网络编程',21159),('linux','http://blog.csdn.net/column/details/explore-linux.html?time=1505347239.311718','Linux探索之旅',31577),('linux','http://blog.csdn.net/column/details/oslinux.html?time=1505347242.314126','操作系统原理（linux）',33968),('linux','http://blog.csdn.net/column/details/linux-driver.html?time=1505347245.418529','linux驱动开发',46365),('linux','http://blog.csdn.net/column/details/linuxsystemprogram.html?time=1505347249.395949','Linux 系统编程',78095),('linux','http://blog.csdn.net/column/details/linuxkernel-detailed.html?time=1505347249.395991','Linux内核剖析',68384),('linux','http://blog.csdn.net/column/details/dut-linux-kernel.html?time=1505347249.395998','Linux内核设计的艺术',67228),('linux','http://blog.csdn.net/column/details/linux-kernel-no-code.html?time=1505347263.682357','linux内核原理',85703),('linux','http://blog.csdn.net/column/details/linuxkernel.html?time=1505347265.797811','Linux内核设计与实现',107571),('linux','http://blog.csdn.net/column/details/driverforlinux.html?time=1505347265.797863','Linux设备驱动',98070),('mysql','http://blog.csdn.net/column/details/mysqlsummary.html?time=1505347274.053707','Mysql数据库总结',72056),('mysql','http://blog.csdn.net/column/details/mysqlpri.html?time=1505347274.05375','思考mysql内核之初级系列',66942),('mysql','http://blog.csdn.net/column/details/15260.html?time=1505347274.053767','MySQL技术',59957),('mysql','http://blog.csdn.net/column/details/conquermysql.html?time=1505347274.053784','征服数据库之mysql',51032),('mysql','http://blog.csdn.net/column/details/wenniuwuren-mysql.html?time=1505347275.103166','MySQL 入门到调优',15272),('mysql','http://blog.csdn.net/column/details/studymysql.html?time=1505347275.103192','MySQL数据库学习',15242),('设计模式','http://blog.csdn.net/column/details/12992.html?time=1505347298.952767','设计模式备忘录',5179),('设计模式','http://blog.csdn.net/column/details/designpatterns-haoz.html?time=1505347298.952791','设计模式解析',5058),('设计模式','http://blog.csdn.net/column/details/designpatternsjiange.html?time=1505347298.9528','设计模式',4941),('设计模式','http://blog.csdn.net/column/details/shejimoshi1.html?time=1505347298.95281','设计模式',4678),('设计模式','http://blog.csdn.net/column/details/qkcoder.html?time=1505347298.952818','C++设计模式',4377),('设计模式','http://blog.csdn.net/column/details/15604.html?time=1505347298.952824','Head First设计模式',4344),('mysql','http://blog.csdn.net/column/details/yinfeng-mysql.html?time=1505347299.031756','MySQL内核与性能优化',9849),('mysql','http://blog.csdn.net/column/details/13281.html?time=1505347299.031789','MySQL-数据库-JDBC',9172),('mysql','http://blog.csdn.net/column/details/13516.html?time=1505347299.0318','MySQL路线',8212),('设计模式','http://blog.csdn.net/column/details/13164.html?time=1505347300.233222','设计模式',3583),('设计模式','http://blog.csdn.net/column/details/javascriptdesgin.html?time=1505347300.233244','javascript设计模式',3544),('设计模式','http://blog.csdn.net/column/details/design-pattern-zen.html?time=1505347300.233253','《设计模式之禅》读书笔记',3358),('设计模式','http://blog.csdn.net/column/details/16632.html?time=1505347300.233259','设计模式学习笔记',3327),('设计模式','http://blog.csdn.net/column/details/15839.html?time=1505347300.233265','设计模式',3269),('设计模式','http://blog.csdn.net/column/details/java-design-pattern.html?time=1505347300.233276','Java设计模式',3012),('设计模式','http://blog.csdn.net/column/details/yrp-design-pattern.html?time=1505347300.233281','设计模式与应用',2975),('设计模式','http://blog.csdn.net/column/details/javadesign-pattern.html?time=1505347300.776123','JAVA设计模式笔记',6207),('设计模式','http://blog.csdn.net/column/details/14351.html?time=1505347300.77615','java23种设计模式',6004),('设计模式','http://blog.csdn.net/column/details/14410.html?time=1505347300.776158','设计模式',5958),('设计模式','http://blog.csdn.net/column/details/hgbshejimoshi.html?time=1505347300.776169','设计模式',5659),('设计模式','http://blog.csdn.net/column/details/gof-23design.html?time=1505347300.776175','Gof 设计模式',5632),('设计模式','http://blog.csdn.net/column/details/design-patterns-xue.html?time=1505347300.776181','设计模式',5630),('设计模式','http://blog.csdn.net/column/details/14723.html?time=1505347300.776187','设计模式',5570),('设计模式','http://blog.csdn.net/column/details/16634.html?time=1505347300.776193','设计模式',5392),('mysql','http://blog.csdn.net/column/details/14861.html?time=1505347300.834386','高性能MySQL',14541),('mysql','http://blog.csdn.net/column/details/13301.html?time=1505347300.834432','MySQL',12369),('mysql','http://blog.csdn.net/column/details/13794.html?time=1505347312.964068','MySQL',167384),('mysql','http://blog.csdn.net/column/details/mysqlnote.html?time=1505347312.964096','MySQL进阶指南',147934),('mysql','http://blog.csdn.net/column/details/mysql-1.html?time=1505347312.964108','MySQL从入门到精通',128267),('mysql','http://blog.csdn.net/column/details/tangowl-mysql-intro.html?time=1505347314.021338','MySQL 入门教程',20770),('mysql','http://blog.csdn.net/column/details/mysql-dablelv.html?time=1505347314.021366','MySQL基础',20463),('mysql','http://blog.csdn.net/column/details/15548.html?time=1505347314.021376','数据库(MySQL)',19647),('mysql','http://blog.csdn.net/column/details/13881.html?time=1505347314.021383','mysql索引与优化',19471),('mysql','http://blog.csdn.net/column/details/mysqlwu.html?time=1505347314.021389','MySQL必知必会学习笔记',19461),('mysql','http://blog.csdn.net/column/details/13220.html?time=1505347342.241386','mysql',33373),('mysql','http://blog.csdn.net/column/details/mysql-001.html?time=1505347342.241436','高性能MySQL',31672),('mysql','http://blog.csdn.net/column/details/13337.html?time=1505347344.24706','mysql数据库',11826),('mysql','http://blog.csdn.net/column/details/mysqlbywangjianan.html?time=1505347344.247119','mysql数据库',11291),('mysql','http://blog.csdn.net/column/details/13534.html?time=1505347344.247133','Mysql系列',11131),('mysql','http://blog.csdn.net/column/details/13489.html?time=1505347344.247145','MySQL基础知识大全',11020),('设计模式','http://blog.csdn.net/column/details/design-pattern-lin.html?time=1505347347.515899','设计模式',6971),('设计模式','http://blog.csdn.net/column/details/xfzsjms.html?time=1505347347.51595','设计模式',6831),('设计模式','http://blog.csdn.net/column/details/designpattern2.html?time=1505347347.515981','设计模式',6712),('设计模式','http://blog.csdn.net/column/details/13439.html?time=1505347347.515989','JavaScript设计模式',6570),('设计模式','http://blog.csdn.net/column/details/14533.html?time=1505347347.515995','23种设计模式',6538),('设计模式','http://blog.csdn.net/column/details/tuimo.html?time=1505347347.516006','设计模式',6312),('设计模式','http://blog.csdn.net/column/details/shejimoshismile.html?time=1505347348.325182','设计模式',7811),('设计模式','http://blog.csdn.net/column/details/guus-sjms.html?time=1505347348.325208','设计模式大全',7776),('设计模式','http://blog.csdn.net/column/details/14866.html?time=1505347348.325216','设计模式之(C++实现)',7667),('设计模式','http://blog.csdn.net/column/details/design-pattern-123.html?time=1505347348.325229','设计模式',7201),('设计模式','http://blog.csdn.net/column/details/chaogeshejimoshi.html?time=1505347348.325235','Java设计模式简明教程',7179),('设计模式','http://blog.csdn.net/column/details/14875.html?time=1505347348.325241','设计模式',7114),('设计模式','http://blog.csdn.net/column/details/pattern23.html?time=1505347348.325247','设计模式',7097),('设计模式','http://blog.csdn.net/column/details/14948.html?time=1505347348.325254','php，java实现设计模式',6992),('设计模式','http://blog.csdn.net/column/details/designpattern001.html?time=1505347352.298497','设计模式实战',9033),('设计模式','http://blog.csdn.net/column/details/habren-design-patter.html?time=1505347352.298533','跟着Jason学 设计模式',8736),('设计模式','http://blog.csdn.net/column/details/dpatterns.html?time=1505347352.298541','设计模式',8611),('设计模式','http://blog.csdn.net/column/details/learn-design-pattern.html?time=1505347352.298549','初识设计模式',8429),('设计模式','http://blog.csdn.net/column/details/learnofdesignpattern.html?time=1505347352.298555','设计模式',8400),('设计模式','http://blog.csdn.net/column/details/design--mode.html?time=1505347352.298583','大话设计模式',7928),('mysql','http://blog.csdn.net/column/details/detailofmysql.html?time=1505347355.393931','MySQL详解',49189),('mysql','http://blog.csdn.net/column/details/16138.html?time=1505347355.393961','史上最简单的 MySQL 教程',45580),('mysql','http://blog.csdn.net/column/details/oracle2mysql.html?time=1505347355.393969','从Oracle到MySQL',45102),('mysql','http://blog.csdn.net/column/details/cppformysqlpro.html?time=1505347355.39398','visual c++ 2008进行MySQL编程（ODBC）',44299),('mysql','http://blog.csdn.net/column/details/13005.html?time=1505347355.393989','MySQL必知必会',42405),('设计模式','http://blog.csdn.net/column/details/designpatternsummary.html?time=1505347394.815275','大话设计模式',9746),('设计模式','http://blog.csdn.net/column/details/shenruqianchu-design.html?time=1505347394.815318','深入浅出设计模式',9643),('设计模式','http://blog.csdn.net/column/details/designpattern1.html?time=1505347394.815329','设计模式',9317),('设计模式','http://blog.csdn.net/column/details/dahua-shejimoshi.html?time=1505347394.815336','大话设计模式',9199),('设计模式','http://blog.csdn.net/column/details/13758.html?time=1505347395.750542','java设计模式学习',10919),('设计模式','http://blog.csdn.net/column/details/designmodel.html?time=1505347395.750572','设计模式',10815),('设计模式','http://blog.csdn.net/column/details/javapatternexample.html?time=1505347395.750582','java设计模式实例',10593),('设计模式','http://blog.csdn.net/column/details/sjmsjc.html?time=1505347395.750592','设计模式',9974),('设计模式','http://blog.csdn.net/column/details/desginpattern.html?time=1505347414.124589','设计模式',11463),('设计模式','http://blog.csdn.net/column/details/design-patterns001.html?time=1505347414.124628','设计模式的六大原则',11462),('设计模式','http://blog.csdn.net/column/details/theonegis-design.html?time=1505347414.124637','设计模式学习笔记',11433),('设计模式','http://blog.csdn.net/column/details/zysjms.html?time=1505347414.124647','设计模式',11107),('设计模式','http://blog.csdn.net/column/details/13891.html?time=1505347415.971348','《设计模式》',12326),('设计模式','http://blog.csdn.net/column/details/13400.html?time=1505347415.971373','设计模式',12317),('设计模式','http://blog.csdn.net/column/details/zhenghaozhuanlan.html?time=1505347415.971381','设计模式',12203),('设计模式','http://blog.csdn.net/column/details/lius0011.html?time=1505347415.971387','设计模式实例',12181),('设计模式','http://blog.csdn.net/column/details/designpattern-qiu.html?time=1505347415.971413','设计模式',12016),('设计模式','http://blog.csdn.net/column/details/mydesignpatterns.html?time=1505347415.97142','设计模式通俗讲解&&C++实现',11940),('设计模式','http://blog.csdn.net/column/details/designpatternsharing.html?time=1505347415.971427','设计模式',11860),('设计模式','http://blog.csdn.net/column/details/java-design-mode.html?time=1505347415.971433','java设计模式',11808),('设计模式','http://blog.csdn.net/column/details/13088.html?time=1505347418.017027','设计模式',13576),('设计模式','http://blog.csdn.net/column/details/javadesignmodel.html?time=1505347418.017051','23天征服--23种设计模式',13486),('设计模式','http://blog.csdn.net/column/details/lxydahua.html?time=1505347418.017061','大话设计模式',12998),('设计模式','http://blog.csdn.net/column/details/patternofjie.html?time=1505347418.01707','设计模式',12677),('设计模式','http://blog.csdn.net/column/details/walker1.html?time=1505347418.017076','设计模式C++实现',12630),('设计模式','http://blog.csdn.net/column/details/mydesignpattern35.html?time=1505347457.550381','设计模式之全解析',14819),('设计模式','http://blog.csdn.net/column/details/gof-design-patterns.html?time=1505347457.550412','GoF设计模式',14775),('设计模式','http://blog.csdn.net/column/details/shms520.html?time=1505347457.55042','设计模式',14680),('设计模式','http://blog.csdn.net/column/details/note-design-pattern.html?time=1505347457.550427','设计模式笔记',14547),('设计模式','http://blog.csdn.net/column/details/mdmcsdn1.html?time=1505347458.302084','设计模式',16688),('设计模式','http://blog.csdn.net/column/details/design-pattern-hxm.html?time=1505347458.302106','设计模式之android',16437),('设计模式','http://blog.csdn.net/column/details/16401.html?time=1505347458.302114','24种设计模式',16392),('设计模式','http://blog.csdn.net/column/details/ourdesignpattern.html?time=1505347458.302133','设计模式',16141),('设计模式','http://blog.csdn.net/column/details/13196.html?time=1505347458.302161','设计模式',15701),('设计模式','http://blog.csdn.net/column/details/suski-pattern.html?time=1505347458.302167','《大话设计模式》读后感',15448),('设计模式','http://blog.csdn.net/column/details/design-pattern.html?time=1505347459.765814','设计模式在实际项目中的应用',18214),('设计模式','http://blog.csdn.net/column/details/designpatterns-night.html?time=1505347459.765844','设计模式',18125),('设计模式','http://blog.csdn.net/column/details/javadesignpattern.html?time=1505347459.765858','设计模式',17013),('设计模式','http://blog.csdn.net/column/details/dhsjms.html?time=1505347460.315397','大话设计模式',19623),('设计模式','http://blog.csdn.net/column/details/sjms.html?time=1505347460.315451','设计模式',19561),('设计模式','http://blog.csdn.net/column/details/huohuo.html?time=1505347460.315461','大话设计模式',19260),('设计模式','http://blog.csdn.net/column/details/extenddesignpattern.html?time=1505347460.315469','可扩展性与设计模式',18905),('设计模式','http://blog.csdn.net/column/details/design-pattern-java.html?time=1505347461.410597','设计模式（JAVA）',27424),('设计模式','http://blog.csdn.net/column/details/designaction.html?time=1505347461.410618','设计模式',27372),('设计模式','http://blog.csdn.net/column/details/baadf00df00dabadfds0.html?time=1505347461.410632','初探设计模式（C++实现）',25973),('设计模式','http://blog.csdn.net/column/details/ef3c5ec0-f3c9-48af.html?time=1505347461.410638','设计模式精解',25751),('设计模式','http://blog.csdn.net/column/details/designpatternbylmb.html?time=1505347461.410647','大话设计模式',24794),('设计模式','http://blog.csdn.net/column/details/sjmsxuexibiji.html?time=1505347514.082739','设计模式学习笔记',22284),('设计模式','http://blog.csdn.net/column/details/designpattern32.html?time=1505347514.082771','设计模式',22205),('设计模式','http://blog.csdn.net/column/details/16366.html?time=1505347514.082785','设计模式讲解与代码实践',21368),('设计模式','http://blog.csdn.net/column/details/designpatterns-qt.html?time=1505347514.082793','设计模式(Qt版)',21009),('设计模式','http://blog.csdn.net/column/details/cainiaojava.html?time=1505347514.0828','菜鸟版JAVA设计模式',20901),('设计模式','http://blog.csdn.net/column/details/dhsjms-cplusplus.html?time=1505347516.119041','《大话设计模式》C++实现',28360),('设计模式','http://blog.csdn.net/column/details/design--pattern.html?time=1505347516.119067','设计模式',28167),('设计模式','http://blog.csdn.net/column/details/17017.html?time=1505347516.119074','快速扩展和迭代 - 设计模式',28165),('设计模式','http://blog.csdn.net/column/details/ds-1.html?time=1505347516.11908','大话设计模式',28111),('设计模式','http://blog.csdn.net/column/details/14308.html?time=1505347516.119086','设计模式之美',27498),('设计模式','http://blog.csdn.net/column/details/phpusedesignpattern.html?time=1505347517.170103','设计模式之PHP项目应用',32690),('设计模式','http://blog.csdn.net/column/details/artofdesignpattern.html?time=1505347517.170128','设计模式的艺术',32400),('设计模式','http://blog.csdn.net/column/details/shejimoshishengsheng.html?time=1505347517.170138','设计模式',31528),('设计模式','http://blog.csdn.net/column/details/gof-design-pattern.html?time=1505347547.438516','小清新GoF23种设计模式',37494),('设计模式','http://blog.csdn.net/column/details/wenqiang.html?time=1505347547.438541','设计模式之禅',37352),('设计模式','http://blog.csdn.net/column/details/13856.html?time=1505347547.43856','设计模式',36279),('设计模式','http://blog.csdn.net/column/details/my-designpatterns.html?time=1505347547.438571','设计模式之禅',35960),('设计模式','http://blog.csdn.net/column/details/designerpattern.html?time=1505347547.438589','IOS设计模式浅析',34199),('设计模式','http://blog.csdn.net/column/details/14788.html?time=1505347548.513018','设计模式(Java)',43434),('设计模式','http://blog.csdn.net/column/details/xing-designpattern.html?time=1505347548.513053','写最好的设计模式专栏',42763),('设计模式','http://blog.csdn.net/column/details/patternsdesign.html?time=1505347548.513069','设计模式笔记',40353),('设计模式','http://blog.csdn.net/column/details/design-pattern23.html?time=1505347548.513076','C#设计模式',40050),('设计模式','http://blog.csdn.net/column/details/softwaredesign.html?time=1505347548.513084','设计模式',38794),('设计模式','http://blog.csdn.net/column/details/my-designpattern.html?time=1505347579.719316','设计模式与系统架构',46204),('设计模式','http://blog.csdn.net/column/details/designpatterns4java.html?time=1505347579.719421','23种设计模式 (java通俗演义)',45480),('设计模式','http://blog.csdn.net/column/details/design-pattern-homer.html?time=1505347579.719432','设计模式',45360),('设计模式','http://blog.csdn.net/column/details/shuangde800-design.html?time=1505347581.214343','设计模式征途',56376),('设计模式','http://blog.csdn.net/column/details/designmodels.html?time=1505347581.214387','Java设计模式菜鸟系列',55642),('设计模式','http://blog.csdn.net/column/details/dahua.html?time=1505347581.214398','大话设计模式',53066),('设计模式','http://blog.csdn.net/column/details/hacke2-designpatter.html?time=1505347581.214406','设计模式读书笔记与总结',51958),('设计模式','http://blog.csdn.net/column/details/phpdesign.html?time=1505347581.214413','PHP设计模式',51740),('设计模式','http://blog.csdn.net/column/details/oodesign.html?time=1505347581.214421','设计模式攻略',50773),('设计模式','http://blog.csdn.net/column/details/designpatterns.html?time=1505347605.990118','大话设计模式',74746),('设计模式','http://blog.csdn.net/column/details/design2.html?time=1505347605.990158','乱砍设计模式',74254),('设计模式','http://blog.csdn.net/column/details/oodm.html?time=1505347608.050929','面向对象设计模式',88737),('设计模式','http://blog.csdn.net/column/details/cpp-design-pattern.html?time=1505347616.208227','C++设计模式',302293),('设计模式','http://blog.csdn.net/column/details/designpattern-xt.html?time=1505347616.208256','DesignPattern(设计模式)',247947),('设计模式','http://blog.csdn.net/column/details/mydesignpattern.html?time=1505347616.208265','我所理解的设计模式',231048),('设计模式','http://blog.csdn.net/column/details/code-design.html?time=1505347617.205772','设计模式融入生活',126377),('设计模式','http://blog.csdn.net/column/details/designpatternforb.html?time=1505347617.205826','\"围观\"设计模式',112303),('uml','http://blog.csdn.net/column/details/sweetyoyy.html?time=1505433603.473994','UML学习',4354),('uml','http://blog.csdn.net/column/details/zyumljm.html?time=1505433603.474117','UML建模',3940),('uml','http://blog.csdn.net/column/details/15059.html?time=1505433605.497214','UML知识',1210),('uml','http://blog.csdn.net/column/details/13140.html?time=1505433607.471736','UML',2816),('uml','http://blog.csdn.net/column/details/12939.html?time=1505433608.4845','UML 学习总结',3303),('uml','http://blog.csdn.net/column/details/uml-jianfei.html?time=1505433611.540701','UML',5231),('uml','http://blog.csdn.net/column/details/uml-learning.html?time=1505433611.540733','UML',5192),('uml','http://blog.csdn.net/column/details/13175.html?time=1505433611.540745','UML--统一建模语言',4945),('uml','http://blog.csdn.net/column/details/uml12.html?time=1505433625.564525','UML',6308),('uml','http://blog.csdn.net/column/details/uml-1.html?time=1505433625.564548','UML',6197),('uml','http://blog.csdn.net/column/details/umlhello.html?time=1505433625.564562','UML',5808),('uml','http://blog.csdn.net/column/details/uml-faith.html?time=1505433629.560556','UML',8883),('uml','http://blog.csdn.net/column/details/uml001.html?time=1505433629.560589','实战UML',8813),('uml','http://blog.csdn.net/column/details/uml-design.html?time=1505433629.560598','UML',8671),('uml','http://blog.csdn.net/column/details/uml9-1.html?time=1505433629.560606','UML9图学习',8542),('uml','http://blog.csdn.net/column/details/uml20141029.html?time=1505433633.664215','UML',9847),('uml','http://blog.csdn.net/column/details/mqp66uml.html?time=1505433633.66425','uml专栏',9553),('uml','http://blog.csdn.net/column/details/uml-cyl.html?time=1505433648.729883','UML学习',11112),('uml','http://blog.csdn.net/column/details/lingzai6818.html?time=1505433648.729927','UML',10336),('uml','http://blog.csdn.net/column/details/thinkinuml.html?time=1505433651.855342','UML',12470),('uml','http://blog.csdn.net/column/details/victor-uml.html?time=1505433651.855387','UML',12032),('uml','http://blog.csdn.net/column/details/shejimoshi-17.html?time=1505433655.91105','uml',14597),('uml','http://blog.csdn.net/column/details/umlclass.html?time=1505433655.911078','UML',14398),('uml','http://blog.csdn.net/column/details/modelinglanguage.html?time=1505433665.029777','UML',16707),('uml','http://blog.csdn.net/column/details/csuml.html?time=1505433665.029827','UML',16435),('uml','http://blog.csdn.net/column/details/hugh-uml.html?time=1505433666.987508','UML',18505),('uml','http://blog.csdn.net/column/details/switch-uml.html?time=1505433678.082402','UML与需求分析学习笔记',28814),('uml','http://blog.csdn.net/column/details/lshuml.html?time=1505433683.098573','UML详解',45105),('uml','http://blog.csdn.net/column/details/myuml.html?time=1505433683.098599','UML设计',44557),('uml','http://blog.csdn.net/column/details/uml-11.html?time=1505433683.098608','UML学习之路',43801),('uml','http://blog.csdn.net/column/details/umlmodelingtechnolog.html?time=1505433694.004418','UML建模技术',237478),('设计模式','http://blog.csdn.net/column/details/design-patterns.html?time=1505520006.714618','设计模式',162216),('设计模式','http://blog.csdn.net/column/details/csharpdesignpattern.html?time=1505520006.714694','C#设计模式',146231),('设计模式','http://blog.csdn.net/column/details/chenssy-design.html?time=1505520006.714709','设计模式读书笔记',132340),('设计模式','http://blog.csdn.net/column/details/13826.html?time=1505520006.82781','云设计模式',64322),('设计模式','http://blog.csdn.net/column/details/eat-designpattern.html?time=1505520006.82784','硬啃设计模式',63045),('设计模式','http://blog.csdn.net/column/details/headfirst.html?time=1505520006.827849','HeadFirst 设计模式学习笔记',60864),('设计模式','http://blog.csdn.net/column/details/clouddesignpattern.html?time=1505520006.827855','云计算设计模式',60172),('设计模式','http://blog.csdn.net/column/details/12698.html?time=1505520006.827865','Java设计模式实战',56753),('设计模式','http://blog.csdn.net/column/details/pattern.html?time=1505520006.915572','设计模式',1287107),('设计模式','http://blog.csdn.net/column/details/design.html?time=1505520006.915605','设计模式C++实现',461249),('设计模式','http://blog.csdn.net/column/details/designpatternzh.html?time=1505520006.915616','跟着ZHONGHuan学习设计模式',369993),('mysql','http://blog.csdn.net/column/details/mysqlcentury.html?time=1505520007.01521','MySQL进阶',1226184),('mysql','http://blog.csdn.net/column/details/mysql-in-action.html?time=1505520007.015253','mysql 由浅入深',365703),('mysql','http://blog.csdn.net/column/details/mysqltw.html?time=1505520007.015263','MySQL图文进阶',351287),('mysql','http://blog.csdn.net/column/details/mysqldba.html?time=1505520007.015275','MySQL管理开发由浅入深',221680),('mysql','http://blog.csdn.net/column/details/evermysql.html?time=1505520007.015282','MySQL',191073),('mysql','http://blog.csdn.net/column/details/15364.html?time=1505520007.063182','MySQL',2301),('mysql','http://blog.csdn.net/column/details/13213.html?time=1505520007.063224','Mysql基本使用',2202),('mysql','http://blog.csdn.net/column/details/15133.html?time=1505520007.063252','MySQL基本知识',2059),('mysql','http://blog.csdn.net/column/details/17229.html?time=1505520007.063259','mysql',1896),('mysql','http://blog.csdn.net/column/details/16190.html?time=1505520007.063268','mysql',1751),('mysql','http://blog.csdn.net/column/details/15775.html?time=1505520007.063277','MySQL详解',1274),('设计模式','http://blog.csdn.net/column/details/12965.html?time=1505520007.172144','设计模式',2212),('设计模式','http://blog.csdn.net/column/details/14987.html?time=1505520007.172167','设计模式',2151),('设计模式','http://blog.csdn.net/column/details/14187.html?time=1505520007.172188','设计模式-java',1826),('设计模式','http://blog.csdn.net/column/details/15050.html?time=1505520007.172195','设计模式',1773),('设计模式','http://blog.csdn.net/column/details/13865.html?time=1505520007.172204','java设计模式',1645),('设计模式','http://blog.csdn.net/column/details/15456.html?time=1505520007.17221','常用Java设计模式系列',1639),('linux','http://blog.csdn.net/column/details/16850.html?time=1505520007.241124','Linux内核完全解读',1986),('设计模式','http://blog.csdn.net/column/details/designpatternforios.html?time=1505520007.268573','设计模式之深入学习IOS版',24272),('设计模式','http://blog.csdn.net/column/details/cppdesignpattern.html?time=1505520007.268605','C++设计模式',24124),('设计模式','http://blog.csdn.net/column/details/feihedp.html?time=1505520007.268614','浅显易懂的设计模式',23519),('设计模式','http://blog.csdn.net/column/details/lxq-shejimoshi.html?time=1505520007.268625','设计模式--Java描述',22594),('设计模式','http://blog.csdn.net/column/details/12906.html?time=1505520007.268632','小话设计模式',22473),('设计模式','http://blog.csdn.net/column/details/designpattern-cassie.html?time=1505520007.268638','设计模式',22411),('设计模式','http://blog.csdn.net/column/details/15026.html?time=1505520007.310372','Java 设计模式',1533),('设计模式','http://blog.csdn.net/column/details/13662.html?time=1505520007.310511','Java设计模式学习',1384),('设计模式','http://blog.csdn.net/column/details/16040.html?time=1505520007.310523','java设计模式',1376),('设计模式','http://blog.csdn.net/column/details/16088.html?time=1505520007.310532','设计模式',1298),('设计模式','http://blog.csdn.net/column/details/zhdldesignpattern.html?time=1505520007.310542','设计模式之木叶村之旅',1207),('mysql','http://blog.csdn.net/column/details/yinfeng-mysql.html?time=1505520007.403145','MySQL内核与性能优化',9866),('mysql','http://blog.csdn.net/column/details/13281.html?time=1505520007.403174','MySQL-数据库-JDBC',9189),('mysql','http://blog.csdn.net/column/details/13516.html?time=1505520007.403193','MySQL路线',8248),('mysql','http://blog.csdn.net/column/details/16135.html?time=1505520007.437687','Mysql架构设计',2708),('mysql','http://blog.csdn.net/column/details/16687.html?time=1505520007.43772','Mysql学习与实践笔记',2391),('设计模式','http://blog.csdn.net/column/details/qkcoder.html?time=1505520007.487319','C++设计模式',4393),('设计模式','http://blog.csdn.net/column/details/15604.html?time=1505520007.487352','Head First设计模式',4352),('设计模式','http://blog.csdn.net/column/details/15600.html?time=1505520007.539674','设计模式小解',1080),('设计模式','http://blog.csdn.net/column/details/14268.html?time=1505520007.539699','C# 设计模式',846),('设计模式','http://blog.csdn.net/column/details/designpatternsumarry.html?time=1505520007.539708','设计模式',796),('mysql','http://blog.csdn.net/column/details/mysql56-refer.html?time=1505520007.597487','MySQL 5.6 参考',5845),('mysql','http://blog.csdn.net/column/details/shenruqianchu-mysql.html?time=1505520007.597511','深入浅出Mysql',5376),('mysql','http://blog.csdn.net/column/details/15343.html?time=1505520007.597522','史上最全的MySQL基础教程',4833),('mysql','http://blog.csdn.net/column/details/13738.html?time=1505520007.597531','MySql及NoSQL相关',4437),('mysql','http://blog.csdn.net/column/details/16578.html?time=1505520007.597539','MYSQL',4030),('mysql','http://blog.csdn.net/column/details/14622.html?time=1505520007.597545','MySQL',3954),('mysql','http://blog.csdn.net/column/details/mysql-daydayup.html?time=1505520007.64178','Mysql提升',118410),('mysql','http://blog.csdn.net/column/details/mysql-tzx.html?time=1505520007.641809','mysql知识汇总和提高',110077),('mysql','http://blog.csdn.net/column/details/zhy-study-mysql.html?time=1505520007.641823','Mysql',92809),('mysql','http://blog.csdn.net/column/details/14121.html?time=1505520007.641831','如何让Mysql跑的更快',86119),('mysql','http://blog.csdn.net/column/details/mysqlzl544434558.html?time=1505520007.641841','项目中积累的mysql使用经验',80098),('mysql','http://blog.csdn.net/column/details/mysql1209.html?time=1505520007.683695','mysql优化',7344),('mysql','http://blog.csdn.net/column/details/mysql1.html?time=1505520007.683738','踟蹰MySQL',6610),('mysql','http://blog.csdn.net/column/details/16983.html?time=1505520007.683747','MySQL从入门到精通',6554),('mysql','http://blog.csdn.net/column/details/13369.html?time=1505520007.683754','mysql的使用',6464),('mysql','http://blog.csdn.net/column/details/16623.html?time=1505520007.683763','MySQL源码研究',6312),('mysql','http://blog.csdn.net/column/details/13509.html?time=1505520007.68377','MySQl数据库嵌入式开发',6083),('mysql','http://blog.csdn.net/column/details/15651.html?time=1505520007.726732','MySql数据库调优',27982),('mysql','http://blog.csdn.net/column/details/mysqlstudy.html?time=1505520007.726755','mysql学习',27875),('mysql','http://blog.csdn.net/column/details/14507.html?time=1505520007.726766','MySQL学习记录',26127),('设计模式','http://blog.csdn.net/column/details/java-design-pattern.html?time=1505520007.764746','Java设计模式',3014),('设计模式','http://blog.csdn.net/column/details/yrp-design-pattern.html?time=1505520007.764771','设计模式与应用',2983),('设计模式','http://blog.csdn.net/column/details/16218.html?time=1505520007.764783','设计模式',2765),('设计模式','http://blog.csdn.net/column/details/16553.html?time=1505520007.76479','设计模式',2670),('设计模式','http://blog.csdn.net/column/details/15028.html?time=1505520007.764799','设计模式',2494),('设计模式','http://blog.csdn.net/column/details/14288.html?time=1505520007.764805','设计模式',2481),('linux','http://blog.csdn.net/column/details/linux-qa-practice.html?time=1505520007.830572','实战 Linux 系统质量保障',2657),('mysql','http://blog.csdn.net/column/details/13337.html?time=1505520007.855783','mysql数据库',11859),('mysql','http://blog.csdn.net/column/details/mysqlbywangjianan.html?time=1505520007.855811','mysql数据库',11369),('mysql','http://blog.csdn.net/column/details/13534.html?time=1505520007.855819','Mysql系列',11151),('mysql','http://blog.csdn.net/column/details/13489.html?time=1505520007.855826','MySQL基础知识大全',11080),('设计模式','http://blog.csdn.net/column/details/16634.html?time=1505520008.352','设计模式',5429),('设计模式','http://blog.csdn.net/column/details/12992.html?time=1505520008.352035','设计模式备忘录',5226),('设计模式','http://blog.csdn.net/column/details/designpatterns-haoz.html?time=1505520008.352043','设计模式解析',5070),('设计模式','http://blog.csdn.net/column/details/designpatternsjiange.html?time=1505520008.35205','设计模式',4988),('设计模式','http://blog.csdn.net/column/details/shejimoshi1.html?time=1505520008.352061','设计模式',4680),('mysql','http://blog.csdn.net/column/details/14861.html?time=1505520008.39359','高性能MySQL',14635),('mysql','http://blog.csdn.net/column/details/13301.html?time=1505520008.393648','MySQL',12380),('设计模式','http://blog.csdn.net/column/details/designpatternnotewyj.html?time=1505520009.362176','设计模式笔记整理',3704),('设计模式','http://blog.csdn.net/column/details/javamodel.html?time=1505520009.362268','JAVA设计模式',3701),('设计模式','http://blog.csdn.net/column/details/15193.html?time=1505520009.362276','赵建银-设计模式学习',3697),('设计模式','http://blog.csdn.net/column/details/13164.html?time=1505520009.362284','设计模式',3598),('设计模式','http://blog.csdn.net/column/details/javascriptdesgin.html?time=1505520009.362303','javascript设计模式',3550),('设计模式','http://blog.csdn.net/column/details/design-pattern-zen.html?time=1505520009.362312','《设计模式之禅》读书笔记',3360),('设计模式','http://blog.csdn.net/column/details/16632.html?time=1505520009.362318','设计模式学习笔记',3355),('设计模式','http://blog.csdn.net/column/details/15839.html?time=1505520009.362325','设计模式',3286),('mysql','http://blog.csdn.net/column/details/wenniuwuren-mysql.html?time=1505520009.415171','MySQL 入门到调优',15331),('mysql','http://blog.csdn.net/column/details/studymysql.html?time=1505520009.41521','MySQL数据库学习',15271),('设计模式','http://blog.csdn.net/column/details/tuimo.html?time=1505520010.302983','设计模式',6317),('设计模式','http://blog.csdn.net/column/details/javadesign-pattern.html?time=1505520010.303051','JAVA设计模式笔记',6242),('设计模式','http://blog.csdn.net/column/details/14351.html?time=1505520010.303061','java23种设计模式',6043),('设计模式','http://blog.csdn.net/column/details/14410.html?time=1505520010.30307','设计模式',5980),('设计模式','http://blog.csdn.net/column/details/hgbshejimoshi.html?time=1505520010.303079','设计模式',5663),('设计模式','http://blog.csdn.net/column/details/gof-23design.html?time=1505520010.303085','Gof 设计模式',5643),('设计模式','http://blog.csdn.net/column/details/design-patterns-xue.html?time=1505520010.30309','设计模式',5642),('设计模式','http://blog.csdn.net/column/details/14723.html?time=1505520010.303096','设计模式',5599),('mysql','http://blog.csdn.net/column/details/tangowl-mysql-intro.html?time=1505520010.411311','MySQL 入门教程',20786),('mysql','http://blog.csdn.net/column/details/mysql-dablelv.html?time=1505520010.411338','MySQL基础',20515),('mysql','http://blog.csdn.net/column/details/15548.html?time=1505520010.41135','数据库(MySQL)',19763),('mysql','http://blog.csdn.net/column/details/13881.html?time=1505520010.411356','mysql索引与优化',19526),('mysql','http://blog.csdn.net/column/details/mysqlwu.html?time=1505520010.411363','MySQL必知必会学习笔记',19509),('设计模式','http://blog.csdn.net/column/details/pattern23.html?time=1505520011.300257','设计模式',7106),('设计模式','http://blog.csdn.net/column/details/14948.html?time=1505520011.300282','php，java实现设计模式',7020),('设计模式','http://blog.csdn.net/column/details/design-pattern-lin.html?time=1505520011.300289','设计模式',6997),('设计模式','http://blog.csdn.net/column/details/xfzsjms.html?time=1505520011.300296','设计模式',6838),('设计模式','http://blog.csdn.net/column/details/designpattern2.html?time=1505520011.300304','设计模式',6720),('设计模式','http://blog.csdn.net/column/details/13439.html?time=1505520011.30031','JavaScript设计模式',6676),('设计模式','http://blog.csdn.net/column/details/14533.html?time=1505520011.300316','23种设计模式',6588),('linux','http://blog.csdn.net/column/details/linux1209.html?time=1505520021.651811','Linux',12368),('linux','http://blog.csdn.net/column/details/sln-linux-design.html?time=1505520027.919705','把握linux内核设计思想',20812),('linux','http://blog.csdn.net/column/details/kernel2-6.html?time=1505520027.919747','Linux内核设计基础',19297),('linux','http://blog.csdn.net/column/details/master-linux.html?time=1505520029.914824','Linux操作系统',21949),('linux','http://blog.csdn.net/column/details/shanshanpt.html?time=1505520029.914861','Linux 网络编程',21177),('linux','http://blog.csdn.net/column/details/explore-linux.html?time=1505520040.992216','Linux探索之旅',31656),('linux','http://blog.csdn.net/column/details/oslinux.html?time=1505520041.993527','操作系统原理（linux）',34168),('linux','http://blog.csdn.net/column/details/linux-driver.html?time=1505520044.018815','linux驱动开发',46425),('linux','http://blog.csdn.net/column/details/linuxsystemprogram.html?time=1505520054.137096','Linux 系统编程',78269),('linux','http://blog.csdn.net/column/details/linuxkernel-detailed.html?time=1505520054.137153','Linux内核剖析',68593),('linux','http://blog.csdn.net/column/details/dut-linux-kernel.html?time=1505520054.13716','Linux内核设计的艺术',67333),('linux','http://blog.csdn.net/column/details/linux-kernel-no-code.html?time=1505520056.276106','linux内核原理',85876),('linux','http://blog.csdn.net/column/details/linuxkernel.html?time=1505520069.108691','Linux内核设计与实现',107717),('linux','http://blog.csdn.net/column/details/driverforlinux.html?time=1505520069.108715','Linux设备驱动',98216),('mysql','http://blog.csdn.net/column/details/13220.html?time=1505520120.717664','mysql',33556),('mysql','http://blog.csdn.net/column/details/mysql-001.html?time=1505520120.717695','高性能MySQL',31723),('mysql','http://blog.csdn.net/column/details/detailofmysql.html?time=1505520122.593647','MySQL详解',49354),('mysql','http://blog.csdn.net/column/details/16138.html?time=1505520122.593678','史上最简单的 MySQL 教程',47960),('mysql','http://blog.csdn.net/column/details/oracle2mysql.html?time=1505520122.59369','从Oracle到MySQL',45242),('mysql','http://blog.csdn.net/column/details/cppformysqlpro.html?time=1505520122.593719','visual c++ 2008进行MySQL编程（ODBC）',44342),('mysql','http://blog.csdn.net/column/details/13005.html?time=1505520122.593726','MySQL必知必会',43015),('mysql','http://blog.csdn.net/column/details/13794.html?time=1505520142.743836','MySQL',168495),('mysql','http://blog.csdn.net/column/details/mysqlnote.html?time=1505520142.743883','MySQL进阶指南',148206),('mysql','http://blog.csdn.net/column/details/mysql-1.html?time=1505520142.743899','MySQL从入门到精通',128497),('mysql','http://blog.csdn.net/column/details/mysqlsummary.html?time=1505520143.749991','Mysql数据库总结',72575),('mysql','http://blog.csdn.net/column/details/mysqlpri.html?time=1505520143.75002','思考mysql内核之初级系列',67013),('mysql','http://blog.csdn.net/column/details/15260.html?time=1505520143.75003','MySQL技术',60235),('mysql','http://blog.csdn.net/column/details/conquermysql.html?time=1505520143.75004','征服数据库之mysql',51123),('设计模式','http://blog.csdn.net/column/details/design--mode.html?time=1505520160.930534','大话设计模式',7942),('设计模式','http://blog.csdn.net/column/details/shejimoshismile.html?time=1505520160.930571','设计模式',7826),('设计模式','http://blog.csdn.net/column/details/guus-sjms.html?time=1505520160.930582','设计模式大全',7784),('设计模式','http://blog.csdn.net/column/details/14866.html?time=1505520160.930594','设计模式之(C++实现)',7698),('设计模式','http://blog.csdn.net/column/details/design-pattern-123.html?time=1505520160.930611','设计模式',7212),('设计模式','http://blog.csdn.net/column/details/chaogeshejimoshi.html?time=1505520160.930618','Java设计模式简明教程',7190),('设计模式','http://blog.csdn.net/column/details/14875.html?time=1505520160.930624','设计模式',7152),('设计模式','http://blog.csdn.net/column/details/designpattern001.html?time=1505520180.013419','设计模式实战',9051),('设计模式','http://blog.csdn.net/column/details/habren-design-patter.html?time=1505520180.013449','跟着Jason学 设计模式',8757),('设计模式','http://blog.csdn.net/column/details/dpatterns.html?time=1505520180.013476','设计模式',8620),('设计模式','http://blog.csdn.net/column/details/learn-design-pattern.html?time=1505520180.013503','初识设计模式',8441),('设计模式','http://blog.csdn.net/column/details/learnofdesignpattern.html?time=1505520180.013509','设计模式',8415),('设计模式','http://blog.csdn.net/column/details/sjmsjc.html?time=1505520180.959183','设计模式',9990),('设计模式','http://blog.csdn.net/column/details/designpatternsummary.html?time=1505520180.959205','大话设计模式',9757),('设计模式','http://blog.csdn.net/column/details/shenruqianchu-design.html?time=1505520180.959212','深入浅出设计模式',9664),('设计模式','http://blog.csdn.net/column/details/designpattern1.html?time=1505520180.959219','设计模式',9326),('设计模式','http://blog.csdn.net/column/details/dahua-shejimoshi.html?time=1505520180.959228','大话设计模式',9213),('设计模式','http://blog.csdn.net/column/details/zysjms.html?time=1505520181.969035','设计模式',11116),('设计模式','http://blog.csdn.net/column/details/13758.html?time=1505520181.96906','java设计模式学习',10988),('设计模式','http://blog.csdn.net/column/details/designmodel.html?time=1505520181.969068','设计模式',10828),('设计模式','http://blog.csdn.net/column/details/javapatternexample.html?time=1505520181.969076','java设计模式实例',10604),('设计模式','http://blog.csdn.net/column/details/designpatternsharing.html?time=1505520209.180951','设计模式',11874),('设计模式','http://blog.csdn.net/column/details/java-design-mode.html?time=1505520209.180981','java设计模式',11838),('设计模式','http://blog.csdn.net/column/details/desginpattern.html?time=1505520209.180993','设计模式',11473),('设计模式','http://blog.csdn.net/column/details/design-patterns001.html?time=1505520209.180999','设计模式的六大原则',11472),('设计模式','http://blog.csdn.net/column/details/theonegis-design.html?time=1505520209.181022','设计模式学习笔记',11454),('设计模式','http://blog.csdn.net/column/details/patternofjie.html?time=1505520210.177434','设计模式',12687),('设计模式','http://blog.csdn.net/column/details/walker1.html?time=1505520210.177476','设计模式C++实现',12651),('设计模式','http://blog.csdn.net/column/details/13400.html?time=1505520210.177487','设计模式',12346),('设计模式','http://blog.csdn.net/column/details/13891.html?time=1505520210.177495','《设计模式》',12331),('设计模式','http://blog.csdn.net/column/details/zhenghaozhuanlan.html?time=1505520210.177521','设计模式',12217),('设计模式','http://blog.csdn.net/column/details/lius0011.html?time=1505520210.177531','设计模式实例',12185),('设计模式','http://blog.csdn.net/column/details/designpattern-qiu.html?time=1505520210.177547','设计模式',12034),('设计模式','http://blog.csdn.net/column/details/mydesignpatterns.html?time=1505520210.17756','设计模式通俗讲解&&C++实现',11960),('设计模式','http://blog.csdn.net/column/details/13088.html?time=1505520241.394119','设计模式',13643),('设计模式','http://blog.csdn.net/column/details/javadesignmodel.html?time=1505520241.394152','23天征服--23种设计模式',13534),('设计模式','http://blog.csdn.net/column/details/lxydahua.html?time=1505520241.394165','大话设计模式',13010),('设计模式','http://blog.csdn.net/column/details/suski-pattern.html?time=1505520242.467795','《大话设计模式》读后感',15485),('设计模式','http://blog.csdn.net/column/details/mydesignpattern35.html?time=1505520242.46783','设计模式之全解析',14851),('设计模式','http://blog.csdn.net/column/details/gof-design-patterns.html?time=1505520242.467838','GoF设计模式',14788),('设计模式','http://blog.csdn.net/column/details/shms520.html?time=1505520242.467845','设计模式',14714),('设计模式','http://blog.csdn.net/column/details/note-design-pattern.html?time=1505520242.467852','设计模式笔记',14584),('设计模式','http://blog.csdn.net/column/details/javadesignpattern.html?time=1505520245.400431','设计模式',17030),('设计模式','http://blog.csdn.net/column/details/mdmcsdn1.html?time=1505520245.400489','设计模式',16701),('设计模式','http://blog.csdn.net/column/details/design-pattern-hxm.html?time=1505520245.400499','设计模式之android',16470),('设计模式','http://blog.csdn.net/column/details/16401.html?time=1505520245.400506','24种设计模式',16452),('设计模式','http://blog.csdn.net/column/details/ourdesignpattern.html?time=1505520245.400513','设计模式',16177),('设计模式','http://blog.csdn.net/column/details/13196.html?time=1505520245.40052','设计模式',15727),('设计模式','http://blog.csdn.net/column/details/extenddesignpattern.html?time=1505520275.647838','可扩展性与设计模式',18932),('设计模式','http://blog.csdn.net/column/details/design-pattern.html?time=1505520275.647894','设计模式在实际项目中的应用',18218),('设计模式','http://blog.csdn.net/column/details/designpatterns-night.html?time=1505520275.64791','设计模式',18146),('设计模式','http://blog.csdn.net/column/details/cainiaojava.html?time=1505520291.755318','菜鸟版JAVA设计模式',20950),('设计模式','http://blog.csdn.net/column/details/dhsjms.html?time=1505520291.755352','大话设计模式',19707),('设计模式','http://blog.csdn.net/column/details/sjms.html?time=1505520291.755361','设计模式',19579),('设计模式','http://blog.csdn.net/column/details/huohuo.html?time=1505520291.755369','大话设计模式',19297),('设计模式','http://blog.csdn.net/column/details/design-pattern-java.html?time=1505520292.767869','设计模式（JAVA）',27559),('设计模式','http://blog.csdn.net/column/details/14308.html?time=1505520292.767895','设计模式之美',27518),('设计模式','http://blog.csdn.net/column/details/designaction.html?time=1505520292.767903','设计模式',27378),('设计模式','http://blog.csdn.net/column/details/baadf00df00dabadfds0.html?time=1505520292.767915','初探设计模式（C++实现）',25991),('设计模式','http://blog.csdn.net/column/details/ef3c5ec0-f3c9-48af.html?time=1505520292.767921','设计模式精解',25763),('设计模式','http://blog.csdn.net/column/details/designpatternbylmb.html?time=1505520292.767931','大话设计模式',24853),('设计模式','http://blog.csdn.net/column/details/12848.html?time=1505520293.862417','一天一个设计模式',22378),('设计模式','http://blog.csdn.net/column/details/sjmsxuexibiji.html?time=1505520293.862443','设计模式学习笔记',22305),('设计模式','http://blog.csdn.net/column/details/designpattern32.html?time=1505520293.862453','设计模式',22233),('设计模式','http://blog.csdn.net/column/details/16366.html?time=1505520293.862464','设计模式讲解与代码实践',21450),('设计模式','http://blog.csdn.net/column/details/designpatterns-qt.html?time=1505520293.862473','设计模式(Qt版)',21028),('设计模式','http://blog.csdn.net/column/details/dhsjms-cplusplus.html?time=1505520294.878438','《大话设计模式》C++实现',28412),('设计模式','http://blog.csdn.net/column/details/17017.html?time=1505520294.878501','快速扩展和迭代 - 设计模式',28213),('设计模式','http://blog.csdn.net/column/details/design--pattern.html?time=1505520294.878508','设计模式',28181),('设计模式','http://blog.csdn.net/column/details/ds-1.html?time=1505520294.878515','大话设计模式',28126),('设计模式','http://blog.csdn.net/column/details/phpusedesignpattern.html?time=1505520340.147156','设计模式之PHP项目应用',32801),('设计模式','http://blog.csdn.net/column/details/artofdesignpattern.html?time=1505520340.147177','设计模式的艺术',32423),('设计模式','http://blog.csdn.net/column/details/shejimoshishengsheng.html?time=1505520340.147203','设计模式',31556),('设计模式','http://blog.csdn.net/column/details/gof-design-pattern.html?time=1505520341.140929','小清新GoF23种设计模式',37533),('设计模式','http://blog.csdn.net/column/details/wenqiang.html?time=1505520341.140953','设计模式之禅',37435),('设计模式','http://blog.csdn.net/column/details/13856.html?time=1505520341.140965','设计模式',36448),('设计模式','http://blog.csdn.net/column/details/my-designpatterns.html?time=1505520341.140972','设计模式之禅',36065),('设计模式','http://blog.csdn.net/column/details/designerpattern.html?time=1505520341.140981','IOS设计模式浅析',34217),('设计模式','http://blog.csdn.net/column/details/14788.html?time=1505520342.231678','设计模式(Java)',43560),('设计模式','http://blog.csdn.net/column/details/xing-designpattern.html?time=1505520342.231709','写最好的设计模式专栏',42896),('设计模式','http://blog.csdn.net/column/details/patternsdesign.html?time=1505520342.231725','设计模式笔记',40403),('设计模式','http://blog.csdn.net/column/details/design-pattern23.html?time=1505520342.231732','C#设计模式',40088),('设计模式','http://blog.csdn.net/column/details/softwaredesign.html?time=1505520342.231739','设计模式',38811),('设计模式','http://blog.csdn.net/column/details/my-designpattern.html?time=1505520343.081105','设计模式与系统架构',46243),('设计模式','http://blog.csdn.net/column/details/designpatterns4java.html?time=1505520343.081142','23种设计模式 (java通俗演义)',45494),('设计模式','http://blog.csdn.net/column/details/design-pattern-homer.html?time=1505520343.081157','设计模式',45366),('设计模式','http://blog.csdn.net/column/details/designpatterns.html?time=1505520385.434595','大话设计模式',74801),('设计模式','http://blog.csdn.net/column/details/design2.html?time=1505520385.434618','乱砍设计模式',74297),('设计模式','http://blog.csdn.net/column/details/shuangde800-design.html?time=1505520386.575184','设计模式征途',56408),('设计模式','http://blog.csdn.net/column/details/designmodels.html?time=1505520386.575209','Java设计模式菜鸟系列',55757),('设计模式','http://blog.csdn.net/column/details/dahua.html?time=1505520386.57522','大话设计模式',53090),('设计模式','http://blog.csdn.net/column/details/hacke2-designpatter.html?time=1505520386.575228','设计模式读书笔记与总结',52007),('设计模式','http://blog.csdn.net/column/details/phpdesign.html?time=1505520386.575235','PHP设计模式',51926),('设计模式','http://blog.csdn.net/column/details/oodesign.html?time=1505520386.575243','设计模式攻略',50815),('设计模式','http://blog.csdn.net/column/details/oodm.html?time=1505520410.78992','面向对象设计模式',88770),('设计模式','http://blog.csdn.net/column/details/cpp-design-pattern.html?time=1505520411.718649','C++设计模式',302348),('设计模式','http://blog.csdn.net/column/details/designpattern-xt.html?time=1505520411.718697','DesignPattern(设计模式)',247982),('设计模式','http://blog.csdn.net/column/details/mydesignpattern.html?time=1505520411.718706','我所理解的设计模式',231432),('设计模式','http://blog.csdn.net/column/details/code-design.html?time=1505520412.670886','设计模式融入生活',126670),('设计模式','http://blog.csdn.net/column/details/designpatternforb.html?time=1505520412.670956','\"围观\"设计模式',112386),('redis','http://blog.csdn.net/column/details/redis-code.html?time=1505534602.61678','Redis源码分析',154128),('redis','http://blog.csdn.net/column/details/13859.html?time=1505534603.045737','Redis',60952),('uml','http://blog.csdn.net/column/details/sweetyoyy.html?time=1505534604.623524','UML学习',4355),('uml','http://blog.csdn.net/column/details/zyumljm.html?time=1505534604.623584','UML建模',3940),('uml','http://blog.csdn.net/column/details/txbuml.html?time=1505534604.623598','UML',3871),('uml','http://blog.csdn.net/column/details/15059.html?time=1505534606.607115','UML知识',1210),('uml','http://blog.csdn.net/column/details/13140.html?time=1505534608.890394','UML',2817),('uml','http://blog.csdn.net/column/details/uml-jianfei.html?time=1505534609.728438','UML',5242),('uml','http://blog.csdn.net/column/details/uml-learning.html?time=1505534609.72847','UML',5195),('uml','http://blog.csdn.net/column/details/13175.html?time=1505534609.728481','UML--统一建模语言',4956),('uml','http://blog.csdn.net/column/details/12939.html?time=1505534613.553551','UML 学习总结',3308),('redis','http://blog.csdn.net/column/details/13313.html?time=1505534623.901394','Redis技术相关',11738),('redis','http://blog.csdn.net/column/details/13266.html?time=1505534623.901426','redis命令详解与应用',11712),('uml','http://blog.csdn.net/column/details/uml12.html?time=1505534627.089239','UML',6314),('uml','http://blog.csdn.net/column/details/uml-1.html?time=1505534627.089261','UML',6201),('uml','http://blog.csdn.net/column/details/umlhello.html?time=1505534627.089274','UML',5812),('redis','http://blog.csdn.net/column/details/15428.html?time=1505534631.257282','Redis 3.2.8 源码剖析注释',20945),('redis','http://blog.csdn.net/column/details/16017.html?time=1505534632.325689','redis学习',21953),('uml','http://blog.csdn.net/column/details/uml-faith.html?time=1505534635.41249','UML',8896),('uml','http://blog.csdn.net/column/details/uml001.html?time=1505534635.41254','实战UML',8818),('uml','http://blog.csdn.net/column/details/uml-design.html?time=1505534635.41267','UML',8675),('uml','http://blog.csdn.net/column/details/uml9-1.html?time=1505534635.412684','UML9图学习',8549),('uml','http://blog.csdn.net/column/details/uml20141029.html?time=1505534636.536521','UML',9849),('uml','http://blog.csdn.net/column/details/mqp66uml.html?time=1505534636.536555','uml专栏',9563),('uml','http://blog.csdn.net/column/details/uml-cyl.html?time=1505534651.123865','UML学习',11125),('uml','http://blog.csdn.net/column/details/lingzai6818.html?time=1505534651.123894','UML',10345),('uml','http://blog.csdn.net/column/details/thinkinuml.html?time=1505534653.008621','UML',12478),('uml','http://blog.csdn.net/column/details/victor-uml.html?time=1505534653.008667','UML',12036),('uml','http://blog.csdn.net/column/details/shejimoshi-17.html?time=1505534655.140711','uml',14611),('uml','http://blog.csdn.net/column/details/umlclass.html?time=1505534655.140736','UML',14407),('uml','http://blog.csdn.net/column/details/modelinglanguage.html?time=1505534668.21256','UML',16714),('uml','http://blog.csdn.net/column/details/csuml.html?time=1505534668.212622','UML',16436),('uml','http://blog.csdn.net/column/details/hugh-uml.html?time=1505534669.199863','UML',18516),('uml','http://blog.csdn.net/column/details/switch-uml.html?time=1505534679.254517','UML与需求分析学习笔记',28838),('uml','http://blog.csdn.net/column/details/lshuml.html?time=1505534685.265814','UML详解',45119),('uml','http://blog.csdn.net/column/details/myuml.html?time=1505534685.265837','UML设计',44593),('uml','http://blog.csdn.net/column/details/uml-11.html?time=1505534685.265847','UML学习之路',43843),('uml','http://blog.csdn.net/column/details/umlmodelingtechnolog.html?time=1505534696.443558','UML建模技术',237701),('java','http://blog.csdn.net/column/details/12698.html?time=1505606403.049599','Java设计模式实战',56814),('java','http://blog.csdn.net/column/details/java-enhance.html?time=1505606403.114153','Java总结',353087),('java','http://blog.csdn.net/column/details/javaframe.html?time=1505606403.114188','Java后台框架系列',340294),('java','http://blog.csdn.net/column/details/lxq-shejimoshi.html?time=1505606403.154327','设计模式--Java描述',22606),('java','http://blog.csdn.net/column/details/designpatternschx.html?time=1505606403.181141','JAVA设计模块之旅',132656),('java','http://blog.csdn.net/column/details/14365.html?time=1505606404.387152','Java Web开发',760),('java','http://blog.csdn.net/column/details/15026.html?time=1505606405.388555','Java 设计模式',1536),('java','http://blog.csdn.net/column/details/13662.html?time=1505606405.388581','Java设计模式学习',1385),('java','http://blog.csdn.net/column/details/16040.html?time=1505606405.388587','java设计模式',1385),('java','http://blog.csdn.net/column/details/14187.html?time=1505606406.594166','设计模式-java',1831),('java','http://blog.csdn.net/column/details/beginer.html?time=1505606406.594199','javaEE->高新',1708),('java','http://blog.csdn.net/column/details/13865.html?time=1505606406.594208','java设计模式',1648),('java','http://blog.csdn.net/column/details/15456.html?time=1505606406.594215','常用Java设计模式系列',1644),('java','http://blog.csdn.net/column/details/java-design-pattern.html?time=1505606407.62571','Java设计模式',3016),('java','http://blog.csdn.net/column/details/javamodel.html?time=1505606408.715022','JAVA设计模式',3705),('java','http://blog.csdn.net/column/details/javascriptdesgin.html?time=1505606408.715066','javascript设计模式',3559),('java','http://blog.csdn.net/column/details/14305.html?time=1505606437.945618','javaEE防盗版',5537),('java','http://blog.csdn.net/column/details/max1210.html?time=1505606437.945696','java入门到精通',5346),('java','http://blog.csdn.net/column/details/javadesign-pattern.html?time=1505606450.101534','JAVA设计模式笔记',6257),('java','http://blog.csdn.net/column/details/14790.html?time=1505606450.10156','Java调优方案',6093),('java','http://blog.csdn.net/column/details/14351.html?time=1505606450.101569','java23种设计模式',6058),('java','http://blog.csdn.net/column/details/talk-effective-java.html?time=1505606451.238321','谈Effective Java',7045),('java','http://blog.csdn.net/column/details/14948.html?time=1505606451.23836','php，java实现设计模式',7025),('java','http://blog.csdn.net/column/details/13439.html?time=1505606451.238374','JavaScript设计模式',6731),('java','http://blog.csdn.net/column/details/framework-1.html?time=1505606452.309053','Java进阶之路',8054),('java','http://blog.csdn.net/column/details/14017.html?time=1505606452.309085','java web开发应用',7516),('java','http://blog.csdn.net/column/details/chaogeshejimoshi.html?time=1505606452.309099','Java设计模式简明教程',7196),('java','http://blog.csdn.net/column/details/j2ee-hanhan.html?time=1505606453.391909','Java之J2EE',8909),('java','http://blog.csdn.net/column/details/13758.html?time=1505606476.658187','java设计模式学习',11039),('java','http://blog.csdn.net/column/details/javapatternexample.html?time=1505606476.658223','java设计模式实例',10607),('java','http://blog.csdn.net/column/details/java-design-mode.html?time=1505606477.738276','java设计模式',11851),('java','http://blog.csdn.net/column/details/16988.html?time=1505606478.826573','java架构师入门',12127),('java','http://blog.csdn.net/column/details/javaee2014-09-04.html?time=1505606478.826602','JavaEE',12103),('java','http://blog.csdn.net/column/details/16808.html?time=1505606479.852894','Java开发经验积累',13144),('java','http://blog.csdn.net/column/details/gavin-framework.html?time=1505606480.887697','JavaWeb框架',14389),('java','http://blog.csdn.net/column/details/ysc-1123.html?time=1505606480.887743','Java菜鸟成长日记',14171),('java','http://blog.csdn.net/column/details/12714.html?time=1505606496.075286','javaEE——框架技术',16788),('java','http://blog.csdn.net/column/details/java-web-learn.html?time=1505606497.000117','java web 知识汇总',17443),('java','http://blog.csdn.net/column/details/cainiaojava.html?time=1505606503.193113','菜鸟版JAVA设计模式',20968),('java','http://blog.csdn.net/column/details/designmodels.html?time=1505606504.169264','Java设计模式菜鸟系列',55802),('java','http://blog.csdn.net/column/details/12747.html?time=1505606504.169443','JavaWeb',52562),('java','http://blog.csdn.net/column/details/learnpro.html?time=1505606517.285769','Java性能调优',30132),('java','http://blog.csdn.net/column/details/design-pattern-java.html?time=1505606517.285803','设计模式（JAVA）',27656),('java','http://blog.csdn.net/column/details/rabbitmq-for-java.html?time=1505606518.210727','RabbitMQ Java入门教程',34036),('java','http://blog.csdn.net/column/details/spring-liao.html?time=1505606518.210755','java 框架',32589),('java','http://blog.csdn.net/column/details/java-thread-.html?time=1505606519.172346','java 并发 多线程',34238),('java','http://blog.csdn.net/column/details/14788.html?time=1505606520.235871','设计模式(Java)',43595),('java','http://blog.csdn.net/column/details/jplogicframework.html?time=1505606520.235895','java快速开发平台(jplogic)',42733),('java','http://blog.csdn.net/column/details/14810.html?time=1505606532.385601','Java Web 成神之路',49831),('java','http://blog.csdn.net/column/details/designpatterns4java.html?time=1505606532.385656','23种设计模式 (java通俗演义)',45507),('java','http://blog.csdn.net/column/details/toto-ee.html?time=1505606544.393658','JavaEE由浅入深专栏',69343),('java','http://blog.csdn.net/column/details/javaee.html?time=1505606546.194349','Java EE开发',121586),('java','http://blog.csdn.net/column/details/kuangjiaxuexi123.html?time=1505606546.19438','java 框架',120562),('java','http://blog.csdn.net/column/details/15065.html?time=1505606546.676226','Java技术栈架构',94995),('java','http://blog.csdn.net/column/details/dp-in-java-yqj2065.html?time=1505606546.676261','面向对象设计：原理、模式和应用(Java8)',91880),('java','http://blog.csdn.net/column/details/javapractice.html?time=1505606548.635355','javaWEB实战',290867),('java','http://blog.csdn.net/column/details/myjava.html?time=1505606548.635393','Java深入',220690),('java','http://blog.csdn.net/column/details/javaee-learning.html?time=1505606548.635403','JavaEE核心框架',197490),('设计模式','http://blog.csdn.net/column/details/13826.html?time=1505692801.504082','云设计模式',64374),('设计模式','http://blog.csdn.net/column/details/eat-designpattern.html?time=1505692801.50412','硬啃设计模式',63089),('设计模式','http://blog.csdn.net/column/details/headfirst.html?time=1505692801.504132','HeadFirst 设计模式学习笔记',60879),('设计模式','http://blog.csdn.net/column/details/clouddesignpattern.html?time=1505692801.504138','云计算设计模式',60278),('设计模式','http://blog.csdn.net/column/details/12698.html?time=1505692801.504149','Java设计模式实战',56850),('设计模式','http://blog.csdn.net/column/details/design-patterns.html?time=1505692801.577408','设计模式',162338),('设计模式','http://blog.csdn.net/column/details/csharpdesignpattern.html?time=1505692801.57743','C#设计模式',146514),('设计模式','http://blog.csdn.net/column/details/chenssy-design.html?time=1505692801.577442','设计模式读书笔记',132497),('mysql','http://blog.csdn.net/column/details/mysqlcentury.html?time=1505692801.615502','MySQL进阶',1226343),('mysql','http://blog.csdn.net/column/details/mysql-in-action.html?time=1505692801.615533','mysql 由浅入深',365734),('mysql','http://blog.csdn.net/column/details/mysqltw.html?time=1505692801.615541','MySQL图文进阶',351911),('mysql','http://blog.csdn.net/column/details/mysqldba.html?time=1505692801.615551','MySQL管理开发由浅入深',221799),('mysql','http://blog.csdn.net/column/details/evermysql.html?time=1505692801.615558','MySQL',191255),('设计模式','http://blog.csdn.net/column/details/pattern.html?time=1505692801.659731','设计模式',1288123),('设计模式','http://blog.csdn.net/column/details/design.html?time=1505692801.659781','设计模式C++实现',461839),('设计模式','http://blog.csdn.net/column/details/designpatternzh.html?time=1505692801.659791','跟着ZHONGHuan学习设计模式',370052),('mysql','http://blog.csdn.net/column/details/15651.html?time=1505692801.730188','MySql数据库调优',28136),('mysql','http://blog.csdn.net/column/details/mysqlstudy.html?time=1505692801.730244','mysql学习',27927),('mysql','http://blog.csdn.net/column/details/14507.html?time=1505692801.730257','MySQL学习记录',26146),('mysql','http://blog.csdn.net/column/details/mysql-daydayup.html?time=1505692801.837291','Mysql提升',118648),('mysql','http://blog.csdn.net/column/details/mysql-tzx.html?time=1505692801.837315','mysql知识汇总和提高',110115),('mysql','http://blog.csdn.net/column/details/zhy-study-mysql.html?time=1505692801.837327','Mysql',92904),('mysql','http://blog.csdn.net/column/details/14121.html?time=1505692801.837335','如何让Mysql跑的更快',86162),('mysql','http://blog.csdn.net/column/details/mysqlzl544434558.html?time=1505692801.837344','项目中积累的mysql使用经验',80228),('设计模式','http://blog.csdn.net/column/details/designpatternforios.html?time=1505692802.197943','设计模式之深入学习IOS版',24295),('设计模式','http://blog.csdn.net/column/details/cppdesignpattern.html?time=1505692802.197974','C++设计模式',24195),('设计模式','http://blog.csdn.net/column/details/feihedp.html?time=1505692802.197984','浅显易懂的设计模式',23540),('设计模式','http://blog.csdn.net/column/details/12906.html?time=1505692802.197994','小话设计模式',22634),('设计模式','http://blog.csdn.net/column/details/lxq-shejimoshi.html?time=1505692802.198','设计模式--Java描述',22618),('设计模式','http://blog.csdn.net/column/details/12848.html?time=1505692802.198024','一天一个设计模式',22426),('mysql','http://blog.csdn.net/column/details/16135.html?time=1505692802.276554','Mysql架构设计',2728),('mysql','http://blog.csdn.net/column/details/16687.html?time=1505692802.27659','Mysql学习与实践笔记',2436),('mysql','http://blog.csdn.net/column/details/mysql56-refer.html?time=1505692803.164413','MySQL 5.6 参考',5873),('mysql','http://blog.csdn.net/column/details/shenruqianchu-mysql.html?time=1505692803.164447','深入浅出Mysql',5389),('mysql','http://blog.csdn.net/column/details/15343.html?time=1505692803.164459','史上最全的MySQL基础教程',4870),('mysql','http://blog.csdn.net/column/details/13738.html?time=1505692803.164467','MySql及NoSQL相关',4465),('mysql','http://blog.csdn.net/column/details/16578.html?time=1505692803.164476','MYSQL',4082),('mysql','http://blog.csdn.net/column/details/14622.html?time=1505692803.164482','MySQL',3966),('设计模式','http://blog.csdn.net/column/details/qkcoder.html?time=1505692803.381743','C++设计模式',4402),('设计模式','http://blog.csdn.net/column/details/15604.html?time=1505692803.381774','Head First设计模式',4360),('mysql','http://blog.csdn.net/column/details/15364.html?time=1505692804.116944','MySQL',2320),('mysql','http://blog.csdn.net/column/details/13213.html?time=1505692804.116976','Mysql基本使用',2208),('mysql','http://blog.csdn.net/column/details/15133.html?time=1505692804.116986','MySQL基本知识',2072),('mysql','http://blog.csdn.net/column/details/17229.html?time=1505692804.116993','mysql',2005),('mysql','http://blog.csdn.net/column/details/16190.html?time=1505692804.117001','mysql',1765),('mysql','http://blog.csdn.net/column/details/15775.html?time=1505692804.11701','MySQL详解',1279),('设计模式','http://blog.csdn.net/column/details/15600.html?time=1505692804.349672','设计模式小解',1098),('设计模式','http://blog.csdn.net/column/details/14268.html?time=1505692804.349702','C# 设计模式',849),('设计模式','http://blog.csdn.net/column/details/designpatternsumarry.html?time=1505692804.349711','设计模式',798),('mysql','http://blog.csdn.net/column/details/mysql1209.html?time=1505692805.17282','mysql优化',7383),('mysql','http://blog.csdn.net/column/details/16623.html?time=1505692805.17286','MySQL源码研究',6761),('mysql','http://blog.csdn.net/column/details/mysql1.html?time=1505692805.172882','踟蹰MySQL',6631),('mysql','http://blog.csdn.net/column/details/16983.html?time=1505692805.172895','MySQL从入门到精通',6603),('mysql','http://blog.csdn.net/column/details/13369.html?time=1505692805.172906','mysql的使用',6488),('mysql','http://blog.csdn.net/column/details/13509.html?time=1505692805.172923','MySQl数据库嵌入式开发',6143),('设计模式','http://blog.csdn.net/column/details/15026.html?time=1505692805.333391','Java 设计模式',1540),('设计模式','http://blog.csdn.net/column/details/16040.html?time=1505692805.333416','java设计模式',1392),('设计模式','http://blog.csdn.net/column/details/13662.html?time=1505692805.333424','Java设计模式学习',1385),('设计模式','http://blog.csdn.net/column/details/16088.html?time=1505692805.333432','设计模式',1308),('设计模式','http://blog.csdn.net/column/details/zhdldesignpattern.html?time=1505692805.333442','设计模式之木叶村之旅',1210),('设计模式','http://blog.csdn.net/column/details/12965.html?time=1505692806.310357','设计模式',2222),('设计模式','http://blog.csdn.net/column/details/14987.html?time=1505692806.310382','设计模式',2164),('设计模式','http://blog.csdn.net/column/details/14187.html?time=1505692806.31041','设计模式-java',1834),('设计模式','http://blog.csdn.net/column/details/15050.html?time=1505692806.310418','设计模式',1780),('设计模式','http://blog.csdn.net/column/details/13865.html?time=1505692806.310447','java设计模式',1653),('设计模式','http://blog.csdn.net/column/details/15456.html?time=1505692806.310454','常用Java设计模式系列',1651),('设计模式','http://blog.csdn.net/column/details/java-design-pattern.html?time=1505692807.474424','Java设计模式',3017),('设计模式','http://blog.csdn.net/column/details/yrp-design-pattern.html?time=1505692807.474481','设计模式与应用',2995),('设计模式','http://blog.csdn.net/column/details/16218.html?time=1505692807.474494','设计模式',2770),('设计模式','http://blog.csdn.net/column/details/16553.html?time=1505692807.474501','设计模式',2691),('设计模式','http://blog.csdn.net/column/details/15028.html?time=1505692807.47451','设计模式',2522),('设计模式','http://blog.csdn.net/column/details/14288.html?time=1505692807.474516','设计模式',2485),('mysql','http://blog.csdn.net/column/details/tangowl-mysql-intro.html?time=1505692870.644311','MySQL 入门教程',20814),('mysql','http://blog.csdn.net/column/details/mysql-dablelv.html?time=1505692870.644364','MySQL基础',20573),('mysql','http://blog.csdn.net/column/details/15548.html?time=1505692870.644379','数据库(MySQL)',19868),('mysql','http://blog.csdn.net/column/details/13881.html?time=1505692870.644389','mysql索引与优化',19591),('mysql','http://blog.csdn.net/column/details/mysqlwu.html?time=1505692870.644398','MySQL必知必会学习笔记',19559),('mysql','http://blog.csdn.net/column/details/mysqlsummary.html?time=1505692885.701316','Mysql数据库总结',72849),('mysql','http://blog.csdn.net/column/details/mysqlpri.html?time=1505692885.70135','思考mysql内核之初级系列',67048),('mysql','http://blog.csdn.net/column/details/15260.html?time=1505692885.701359','MySQL技术',60235),('mysql','http://blog.csdn.net/column/details/conquermysql.html?time=1505692885.70137','征服数据库之mysql',51159),('设计模式','http://blog.csdn.net/column/details/14723.html?time=1505692895.049411','设计模式',5641),('设计模式','http://blog.csdn.net/column/details/16634.html?time=1505692895.049443','设计模式',5533),('设计模式','http://blog.csdn.net/column/details/12992.html?time=1505692895.049453','设计模式备忘录',5236),('设计模式','http://blog.csdn.net/column/details/designpatterns-haoz.html?time=1505692895.04946','设计模式解析',5083),('设计模式','http://blog.csdn.net/column/details/designpatternsjiange.html?time=1505692895.049466','设计模式',5004),('设计模式','http://blog.csdn.net/column/details/shejimoshi1.html?time=1505692895.049477','设计模式',4709),('设计模式','http://blog.csdn.net/column/details/15193.html?time=1505692896.052393','赵建银-设计模式学习',3732),('设计模式','http://blog.csdn.net/column/details/designpatternnotewyj.html?time=1505692896.052413','设计模式笔记整理',3709),('设计模式','http://blog.csdn.net/column/details/javamodel.html?time=1505692896.05242','JAVA设计模式',3705),('设计模式','http://blog.csdn.net/column/details/13164.html?time=1505692896.052427','设计模式',3615),('设计模式','http://blog.csdn.net/column/details/javascriptdesgin.html?time=1505692896.052433','javascript设计模式',3564),('设计模式','http://blog.csdn.net/column/details/16632.html?time=1505692896.052439','设计模式学习笔记',3408),('设计模式','http://blog.csdn.net/column/details/design-pattern-zen.html?time=1505692896.052444','《设计模式之禅》读书笔记',3362),('设计模式','http://blog.csdn.net/column/details/15839.html?time=1505692896.052452','设计模式',3301),('设计模式','http://blog.csdn.net/column/details/tuimo.html?time=1505692896.971219','设计模式',6317),('设计模式','http://blog.csdn.net/column/details/javadesign-pattern.html?time=1505692896.971244','JAVA设计模式笔记',6265),('设计模式','http://blog.csdn.net/column/details/14351.html?time=1505692896.971254','java23种设计模式',6070),('设计模式','http://blog.csdn.net/column/details/14410.html?time=1505692896.971261','设计模式',6001),('设计模式','http://blog.csdn.net/column/details/hgbshejimoshi.html?time=1505692896.97127','设计模式',5667),('设计模式','http://blog.csdn.net/column/details/gof-23design.html?time=1505692896.971276','Gof 设计模式',5655),('设计模式','http://blog.csdn.net/column/details/design-patterns-xue.html?time=1505692896.971282','设计模式',5644),('mysql','http://blog.csdn.net/column/details/yinfeng-mysql.html?time=1505692901.924417','MySQL内核与性能优化',9875),('mysql','http://blog.csdn.net/column/details/13281.html?time=1505692901.924462','MySQL-数据库-JDBC',9222),('mysql','http://blog.csdn.net/column/details/13516.html?time=1505692901.924473','MySQL路线',8269),('mysql','http://blog.csdn.net/column/details/14861.html?time=1505692904.009593','高性能MySQL',14691),('mysql','http://blog.csdn.net/column/details/13301.html?time=1505692904.009674','MySQL',12400),('设计模式','http://blog.csdn.net/column/details/zysjms.html?time=1505692911.4525','设计模式',11129),('设计模式','http://blog.csdn.net/column/details/13758.html?time=1505692911.452533','java设计模式学习',11055),('设计模式','http://blog.csdn.net/column/details/designmodel.html?time=1505692911.452542','设计模式',10838),('设计模式','http://blog.csdn.net/column/details/javapatternexample.html?time=1505692911.452549','java设计模式实例',10612),('设计模式','http://blog.csdn.net/column/details/designpatternsharing.html?time=1505692912.420687','设计模式',11886),('设计模式','http://blog.csdn.net/column/details/java-design-mode.html?time=1505692912.420736','java设计模式',11866),('设计模式','http://blog.csdn.net/column/details/design-patterns001.html?time=1505692912.420756','设计模式的六大原则',11489),('设计模式','http://blog.csdn.net/column/details/desginpattern.html?time=1505692912.420768','设计模式',11485),('设计模式','http://blog.csdn.net/column/details/theonegis-design.html?time=1505692912.42078','设计模式学习笔记',11478),('mysql','http://blog.csdn.net/column/details/13794.html?time=1505692920.143896','MySQL',169265),('mysql','http://blog.csdn.net/column/details/mysqlnote.html?time=1505692920.143945','MySQL进阶指南',148369),('mysql','http://blog.csdn.net/column/details/mysql-1.html?time=1505692920.143957','MySQL从入门到精通',128692),('mysql','http://blog.csdn.net/column/details/13220.html?time=1505692922.240354','mysql',33641),('mysql','http://blog.csdn.net/column/details/mysql-001.html?time=1505692922.240382','高性能MySQL',31777),('mysql','http://blog.csdn.net/column/details/13337.html?time=1505692942.351009','mysql数据库',11886),('mysql','http://blog.csdn.net/column/details/mysqlbywangjianan.html?time=1505692942.351037','mysql数据库',11414),('mysql','http://blog.csdn.net/column/details/13534.html?time=1505692942.351045','Mysql系列',11163),('mysql','http://blog.csdn.net/column/details/13489.html?time=1505692942.351052','MySQL基础知识大全',11090),('mysql','http://blog.csdn.net/column/details/wenniuwuren-mysql.html?time=1505692943.42048','MySQL 入门到调优',15355),('mysql','http://blog.csdn.net/column/details/studymysql.html?time=1505692943.420513','MySQL数据库学习',15294),('mysql','http://blog.csdn.net/column/details/detailofmysql.html?time=1505692954.422038','MySQL详解',49471),('mysql','http://blog.csdn.net/column/details/16138.html?time=1505692954.422073','史上最简单的 MySQL 教程',48749),('mysql','http://blog.csdn.net/column/details/oracle2mysql.html?time=1505692954.422087','从Oracle到MySQL',45302),('mysql','http://blog.csdn.net/column/details/cppformysqlpro.html?time=1505692954.422098','visual c++ 2008进行MySQL编程（ODBC）',44364),('mysql','http://blog.csdn.net/column/details/13005.html?time=1505692954.422105','MySQL必知必会',43467),('设计模式','http://blog.csdn.net/column/details/pattern23.html?time=1505692965.720511','设计模式',7119),('设计模式','http://blog.csdn.net/column/details/14948.html?time=1505692965.720553','php，java实现设计模式',7029),('设计模式','http://blog.csdn.net/column/details/design-pattern-lin.html?time=1505692965.720561','设计模式',7023),('设计模式','http://blog.csdn.net/column/details/xfzsjms.html?time=1505692965.72057','设计模式',6844),('设计模式','http://blog.csdn.net/column/details/13439.html?time=1505692965.720578','JavaScript设计模式',6781),('设计模式','http://blog.csdn.net/column/details/designpattern2.html?time=1505692965.720586','设计模式',6726),('设计模式','http://blog.csdn.net/column/details/14533.html?time=1505692965.720592','23种设计模式',6615),('设计模式','http://blog.csdn.net/column/details/design--mode.html?time=1505692966.788969','大话设计模式',7957),('设计模式','http://blog.csdn.net/column/details/shejimoshismile.html?time=1505692966.789004','设计模式',7845),('设计模式','http://blog.csdn.net/column/details/guus-sjms.html?time=1505692966.789012','设计模式大全',7793),('设计模式','http://blog.csdn.net/column/details/14866.html?time=1505692966.789019','设计模式之(C++实现)',7737),('设计模式','http://blog.csdn.net/column/details/design-pattern-123.html?time=1505692966.789033','设计模式',7225),('设计模式','http://blog.csdn.net/column/details/chaogeshejimoshi.html?time=1505692966.789039','Java设计模式简明教程',7201),('设计模式','http://blog.csdn.net/column/details/14875.html?time=1505692966.789045','设计模式',7185),('设计模式','http://blog.csdn.net/column/details/designpattern001.html?time=1505692967.930868','设计模式实战',9078),('设计模式','http://blog.csdn.net/column/details/habren-design-patter.html?time=1505692967.930904','跟着Jason学 设计模式',8781),('设计模式','http://blog.csdn.net/column/details/dpatterns.html?time=1505692967.930913','设计模式',8629),('设计模式','http://blog.csdn.net/column/details/learn-design-pattern.html?time=1505692967.930921','初识设计模式',8462),('设计模式','http://blog.csdn.net/column/details/learnofdesignpattern.html?time=1505692967.930928','设计模式',8421),('设计模式','http://blog.csdn.net/column/details/sjmsjc.html?time=1505692969.018169','设计模式',10005),('设计模式','http://blog.csdn.net/column/details/designpatternsummary.html?time=1505692969.018213','大话设计模式',9774),('设计模式','http://blog.csdn.net/column/details/shenruqianchu-design.html?time=1505692969.018228','深入浅出设计模式',9682),('设计模式','http://blog.csdn.net/column/details/designpattern1.html?time=1505692969.018237','设计模式',9330),('设计模式','http://blog.csdn.net/column/details/dahua-shejimoshi.html?time=1505692969.018246','大话设计模式',9238),('设计模式','http://blog.csdn.net/column/details/phpusedesignpattern.html?time=1505692970.147368','设计模式之PHP项目应用',32886),('设计模式','http://blog.csdn.net/column/details/artofdesignpattern.html?time=1505692970.147399','设计模式的艺术',32447),('设计模式','http://blog.csdn.net/column/details/shejimoshishengsheng.html?time=1505692970.147409','设计模式',31587),('设计模式','http://blog.csdn.net/column/details/gof-design-pattern.html?time=1505693030.811608','小清新GoF23种设计模式',37549),('设计模式','http://blog.csdn.net/column/details/wenqiang.html?time=1505693030.811638','设计模式之禅',37545),('设计模式','http://blog.csdn.net/column/details/13856.html?time=1505693030.811649','设计模式',36555),('设计模式','http://blog.csdn.net/column/details/my-designpatterns.html?time=1505693030.811655','设计模式之禅',36138),('设计模式','http://blog.csdn.net/column/details/designerpattern.html?time=1505693030.811666','IOS设计模式浅析',34239),('设计模式','http://blog.csdn.net/column/details/patternofjie.html?time=1505693031.872477','设计模式',12693),('设计模式','http://blog.csdn.net/column/details/walker1.html?time=1505693031.872504','设计模式C++实现',12675),('设计模式','http://blog.csdn.net/column/details/13400.html?time=1505693031.872516','设计模式',12389),('设计模式','http://blog.csdn.net/column/details/13891.html?time=1505693031.872523','《设计模式》',12344),('设计模式','http://blog.csdn.net/column/details/zhenghaozhuanlan.html?time=1505693031.872529','设计模式',12234),('设计模式','http://blog.csdn.net/column/details/lius0011.html?time=1505693031.872536','设计模式实例',12187),('设计模式','http://blog.csdn.net/column/details/designpattern-qiu.html?time=1505693031.872544','设计模式',12055),('设计模式','http://blog.csdn.net/column/details/mydesignpatterns.html?time=1505693031.872551','设计模式通俗讲解&&C++实现',11981),('设计模式','http://blog.csdn.net/column/details/13088.html?time=1505693032.873579','设计模式',13714),('设计模式','http://blog.csdn.net/column/details/javadesignmodel.html?time=1505693032.873614','23天征服--23种设计模式',13571),('设计模式','http://blog.csdn.net/column/details/lxydahua.html?time=1505693032.873627','大话设计模式',13023),('设计模式','http://blog.csdn.net/column/details/suski-pattern.html?time=1505693033.849188','《大话设计模式》读后感',15509),('设计模式','http://blog.csdn.net/column/details/mydesignpattern35.html?time=1505693033.849223','设计模式之全解析',14876),('设计模式','http://blog.csdn.net/column/details/gof-design-patterns.html?time=1505693033.849233','GoF设计模式',14799),('设计模式','http://blog.csdn.net/column/details/shms520.html?time=1505693033.849239','设计模式',14732),('设计模式','http://blog.csdn.net/column/details/note-design-pattern.html?time=1505693033.849246','设计模式笔记',14599),('设计模式','http://blog.csdn.net/column/details/javadesignpattern.html?time=1505693091.356517','设计模式',17068),('设计模式','http://blog.csdn.net/column/details/mdmcsdn1.html?time=1505693091.356568','设计模式',16721),('设计模式','http://blog.csdn.net/column/details/design-pattern-hxm.html?time=1505693091.356577','设计模式之android',16506),('设计模式','http://blog.csdn.net/column/details/16401.html?time=1505693091.356584','24种设计模式',16500),('设计模式','http://blog.csdn.net/column/details/ourdesignpattern.html?time=1505693091.356592','设计模式',16204),('设计模式','http://blog.csdn.net/column/details/13196.html?time=1505693091.356599','设计模式',15773),('设计模式','http://blog.csdn.net/column/details/extenddesignpattern.html?time=1505693091.756236','可扩展性与设计模式',18960),('设计模式','http://blog.csdn.net/column/details/design-pattern.html?time=1505693091.756264','设计模式在实际项目中的应用',18221),('设计模式','http://blog.csdn.net/column/details/designpatterns-night.html?time=1505693091.756272','设计模式',18178),('设计模式','http://blog.csdn.net/column/details/cainiaojava.html?time=1505693092.290749','菜鸟版JAVA设计模式',20991),('设计模式','http://blog.csdn.net/column/details/dhsjms.html?time=1505693092.290784','大话设计模式',19774),('设计模式','http://blog.csdn.net/column/details/sjms.html?time=1505693092.290792','设计模式',19591),('设计模式','http://blog.csdn.net/column/details/huohuo.html?time=1505693092.2908','大话设计模式',19315),('设计模式','http://blog.csdn.net/column/details/14308.html?time=1505693093.391413','设计模式之美',27534),('设计模式','http://blog.csdn.net/column/details/designaction.html?time=1505693093.391445','设计模式',27383),('设计模式','http://blog.csdn.net/column/details/baadf00df00dabadfds0.html?time=1505693093.391459','初探设计模式（C++实现）',26007),('设计模式','http://blog.csdn.net/column/details/ef3c5ec0-f3c9-48af.html?time=1505693093.391465','设计模式精解',25781),('设计模式','http://blog.csdn.net/column/details/designpatternbylmb.html?time=1505693093.391475','大话设计模式',24915),('设计模式','http://blog.csdn.net/column/details/designpattern-cassie.html?time=1505693094.351975','设计模式',22421),('设计模式','http://blog.csdn.net/column/details/sjmsxuexibiji.html?time=1505693094.352007','设计模式学习笔记',22341),('设计模式','http://blog.csdn.net/column/details/designpattern32.html?time=1505693094.352015','设计模式',22269),('设计模式','http://blog.csdn.net/column/details/16366.html?time=1505693094.352028','设计模式讲解与代码实践',21508),('设计模式','http://blog.csdn.net/column/details/designpatterns-qt.html?time=1505693094.352037','设计模式(Qt版)',21037),('设计模式','http://blog.csdn.net/column/details/dhsjms-cplusplus.html?time=1505693147.758444','《大话设计模式》C++实现',28478),('设计模式','http://blog.csdn.net/column/details/17017.html?time=1505693147.758478','快速扩展和迭代 - 设计模式',28238),('设计模式','http://blog.csdn.net/column/details/design--pattern.html?time=1505693147.758486','设计模式',28211),('设计模式','http://blog.csdn.net/column/details/ds-1.html?time=1505693147.758492','大话设计模式',28134),('设计模式','http://blog.csdn.net/column/details/design-pattern-java.html?time=1505693147.758499','设计模式（JAVA）',27687),('设计模式','http://blog.csdn.net/column/details/designpatterns.html?time=1505693148.571223','大话设计模式',74830),('设计模式','http://blog.csdn.net/column/details/design2.html?time=1505693148.57126','乱砍设计模式',74317),('设计模式','http://blog.csdn.net/column/details/oodm.html?time=1505693165.847835','面向对象设计模式',88808),('设计模式','http://blog.csdn.net/column/details/14788.html?time=1505693168.868323','设计模式(Java)',43632),('设计模式','http://blog.csdn.net/column/details/xing-designpattern.html?time=1505693168.868342','写最好的设计模式专栏',43018),('设计模式','http://blog.csdn.net/column/details/patternsdesign.html?time=1505693168.868356','设计模式笔记',40448),('设计模式','http://blog.csdn.net/column/details/design-pattern23.html?time=1505693168.868362','C#设计模式',40201),('设计模式','http://blog.csdn.net/column/details/softwaredesign.html?time=1505693168.868369','设计模式',38821),('设计模式','http://blog.csdn.net/column/details/my-designpattern.html?time=1505693170.801966','设计模式与系统架构',46268),('设计模式','http://blog.csdn.net/column/details/designpatterns4java.html?time=1505693170.801992','23种设计模式 (java通俗演义)',45521),('设计模式','http://blog.csdn.net/column/details/design-pattern-homer.html?time=1505693170.802','设计模式',45374),('设计模式','http://blog.csdn.net/column/details/shuangde800-design.html?time=1505693171.863231','设计模式征途',56442),('设计模式','http://blog.csdn.net/column/details/designmodels.html?time=1505693171.863276','Java设计模式菜鸟系列',55829),('设计模式','http://blog.csdn.net/column/details/dahua.html?time=1505693171.863287','大话设计模式',53135),('设计模式','http://blog.csdn.net/column/details/phpdesign.html?time=1505693171.863295','PHP设计模式',52048),('设计模式','http://blog.csdn.net/column/details/hacke2-designpatter.html?time=1505693171.863301','设计模式读书笔记与总结',52048),('设计模式','http://blog.csdn.net/column/details/oodesign.html?time=1505693171.863311','设计模式攻略',50833),('设计模式','http://blog.csdn.net/column/details/cpp-design-pattern.html?time=1505693210.186305','C++设计模式',302401),('设计模式','http://blog.csdn.net/column/details/designpattern-xt.html?time=1505693210.186339','DesignPattern(设计模式)',247996),('设计模式','http://blog.csdn.net/column/details/mydesignpattern.html?time=1505693210.186349','我所理解的设计模式',231737),('设计模式','http://blog.csdn.net/column/details/code-design.html?time=1505693223.266048','设计模式融入生活',126814),('设计模式','http://blog.csdn.net/column/details/designpatternforb.html?time=1505693223.266089','\"围观\"设计模式',112471),('设计模式','http://blog.csdn.net/column/details/pattern.html?time=1505865601.888866','设计模式',1289867),('设计模式','http://blog.csdn.net/column/details/design.html?time=1505865601.888927','设计模式C++实现',462915),('设计模式','http://blog.csdn.net/column/details/designpatternzh.html?time=1505865601.88894','跟着ZHONGHuan学习设计模式',370130),('mysql','http://blog.csdn.net/column/details/mysqlcentury.html?time=1505865601.968892','MySQL进阶',1226630),('mysql','http://blog.csdn.net/column/details/mysql-in-action.html?time=1505865601.96892','mysql 由浅入深',365780),('mysql','http://blog.csdn.net/column/details/mysqltw.html?time=1505865601.968929','MySQL图文进阶',353192),('mysql','http://blog.csdn.net/column/details/mysqldba.html?time=1505865601.96894','MySQL管理开发由浅入深',222022),('mysql','http://blog.csdn.net/column/details/evermysql.html?time=1505865601.968947','MySQL',191583),('设计模式','http://blog.csdn.net/column/details/design-patterns.html?time=1505865602.114095','设计模式',162548),('设计模式','http://blog.csdn.net/column/details/csharpdesignpattern.html?time=1505865602.11413','C#设计模式',146917),('设计模式','http://blog.csdn.net/column/details/chenssy-design.html?time=1505865602.114144','设计模式读书笔记',132735),('设计模式','http://blog.csdn.net/column/details/13826.html?time=1505865602.17324','云设计模式',64463),('设计模式','http://blog.csdn.net/column/details/eat-designpattern.html?time=1505865602.173272','硬啃设计模式',63173),('设计模式','http://blog.csdn.net/column/details/headfirst.html?time=1505865602.173281','HeadFirst 设计模式学习笔记',60898),('设计模式','http://blog.csdn.net/column/details/clouddesignpattern.html?time=1505865602.173289','云计算设计模式',60448),('设计模式','http://blog.csdn.net/column/details/12698.html?time=1505865602.173299','Java设计模式实战',56933),('mysql','http://blog.csdn.net/column/details/mysql-tzx.html?time=1505865602.217358','mysql知识汇总和提高',110217),('mysql','http://blog.csdn.net/column/details/zhy-study-mysql.html?time=1505865602.217395','Mysql',93162),('mysql','http://blog.csdn.net/column/details/14121.html?time=1505865602.217404','如何让Mysql跑的更快',86236),('mysql','http://blog.csdn.net/column/details/mysqlzl544434558.html?time=1505865602.217414','项目中积累的mysql使用经验',80464),('mysql','http://blog.csdn.net/column/details/mysqlstudy.html?time=1505865602.252563','mysql学习',27972),('mysql','http://blog.csdn.net/column/details/14507.html?time=1505865602.252598','MySQL学习记录',26201),('设计模式','http://blog.csdn.net/column/details/designpatternforios.html?time=1505865602.496289','设计模式之深入学习IOS版',24317),('设计模式','http://blog.csdn.net/column/details/cppdesignpattern.html?time=1505865602.496334','C++设计模式',24258),('设计模式','http://blog.csdn.net/column/details/16366.html?time=1505865602.496351','设计模式讲解与代码实践',23739),('设计模式','http://blog.csdn.net/column/details/feihedp.html?time=1505865602.496364','浅显易懂的设计模式',23573),('设计模式','http://blog.csdn.net/column/details/12906.html?time=1505865602.496383','小话设计模式',22774),('设计模式','http://blog.csdn.net/column/details/lxq-shejimoshi.html?time=1505865602.496395','设计模式--Java描述',22647),('mysql','http://blog.csdn.net/column/details/16135.html?time=1505865602.585534','Mysql架构设计',2759),('mysql','http://blog.csdn.net/column/details/16687.html?time=1505865602.585562','Mysql学习与实践笔记',2491),('uml','http://blog.csdn.net/column/details/sweetyoyy.html?time=1505865603.281181','UML学习',4364),('uml','http://blog.csdn.net/column/details/zyumljm.html?time=1505865603.281222','UML建模',3947),('uml','http://blog.csdn.net/column/details/txbuml.html?time=1505865603.28123','UML',3900),('设计模式','http://blog.csdn.net/column/details/qkcoder.html?time=1505865603.320938','C++设计模式',4409),('设计模式','http://blog.csdn.net/column/details/15604.html?time=1505865603.320979','Head First设计模式',4377),('mysql','http://blog.csdn.net/column/details/mysql56-refer.html?time=1505865603.355719','MySQL 5.6 参考',5892),('mysql','http://blog.csdn.net/column/details/shenruqianchu-mysql.html?time=1505865603.355752','深入浅出Mysql',5409),('mysql','http://blog.csdn.net/column/details/15343.html?time=1505865603.355762','史上最全的MySQL基础教程',4915),('mysql','http://blog.csdn.net/column/details/13738.html?time=1505865603.355769','MySql及NoSQL相关',4514),('mysql','http://blog.csdn.net/column/details/16578.html?time=1505865603.355778','MYSQL',4149),('mysql','http://blog.csdn.net/column/details/14622.html?time=1505865603.355783','MySQL',3985),('mysql','http://blog.csdn.net/column/details/15364.html?time=1505865604.41637','MySQL',2347),('mysql','http://blog.csdn.net/column/details/13213.html?time=1505865604.416403','Mysql基本使用',2218),('mysql','http://blog.csdn.net/column/details/17229.html?time=1505865604.416413','mysql',2110),('mysql','http://blog.csdn.net/column/details/15133.html?time=1505865604.41642','MySQL基本知识',2099),('mysql','http://blog.csdn.net/column/details/16190.html?time=1505865604.416428','mysql',1777),('mysql','http://blog.csdn.net/column/details/15775.html?time=1505865604.416438','MySQL详解',1289),('设计模式','http://blog.csdn.net/column/details/15600.html?time=1505865604.462557','设计模式小解',1099),('设计模式','http://blog.csdn.net/column/details/14268.html?time=1505865604.462593','C# 设计模式',851),('设计模式','http://blog.csdn.net/column/details/designpatternsumarry.html?time=1505865604.462602','设计模式',801),('设计模式','http://blog.csdn.net/column/details/15456.html?time=1505865605.383001','常用Java设计模式系列',1653),('设计模式','http://blog.csdn.net/column/details/15026.html?time=1505865605.383035','Java 设计模式',1556),('设计模式','http://blog.csdn.net/column/details/16040.html?time=1505865605.383045','java设计模式',1397),('设计模式','http://blog.csdn.net/column/details/13662.html?time=1505865605.383051','Java设计模式学习',1395),('设计模式','http://blog.csdn.net/column/details/16088.html?time=1505865605.383059','设计模式',1316),('设计模式','http://blog.csdn.net/column/details/zhdldesignpattern.html?time=1505865605.38307','设计模式之木叶村之旅',1212),('uml','http://blog.csdn.net/column/details/15059.html?time=1505865605.439794','UML知识',1219),('mysql','http://blog.csdn.net/column/details/mysql1209.html?time=1505865605.464777','mysql优化',7475),('mysql','http://blog.csdn.net/column/details/16623.html?time=1505865605.464799','MySQL源码研究',7085),('mysql','http://blog.csdn.net/column/details/16983.html?time=1505865605.464818','MySQL从入门到精通',6684),('mysql','http://blog.csdn.net/column/details/mysql1.html?time=1505865605.464825','踟蹰MySQL',6666),('mysql','http://blog.csdn.net/column/details/13369.html?time=1505865605.464832','mysql的使用',6504),('mysql','http://blog.csdn.net/column/details/13509.html?time=1505865605.464839','MySQl数据库嵌入式开发',6200),('设计模式','http://blog.csdn.net/column/details/12965.html?time=1505865606.509891','设计模式',2225),('设计模式','http://blog.csdn.net/column/details/14987.html?time=1505865606.50992','设计模式',2189),('设计模式','http://blog.csdn.net/column/details/14187.html?time=1505865606.509943','设计模式-java',1837),('设计模式','http://blog.csdn.net/column/details/15050.html?time=1505865606.509953','设计模式',1780),('设计模式','http://blog.csdn.net/column/details/13865.html?time=1505865606.509961','java设计模式',1658),('设计模式','http://blog.csdn.net/column/details/java-design-pattern.html?time=1505865607.624843','Java设计模式',3020),('设计模式','http://blog.csdn.net/column/details/yrp-design-pattern.html?time=1505865607.624864','设计模式与应用',2998),('设计模式','http://blog.csdn.net/column/details/16218.html?time=1505865607.624881','设计模式',2781),('设计模式','http://blog.csdn.net/column/details/16553.html?time=1505865607.624888','设计模式',2730),('设计模式','http://blog.csdn.net/column/details/15028.html?time=1505865607.624896','设计模式',2538),('设计模式','http://blog.csdn.net/column/details/14288.html?time=1505865607.624902','设计模式',2503),('uml','http://blog.csdn.net/column/details/13140.html?time=1505865607.665212','UML',2843),('uml','http://blog.csdn.net/column/details/12939.html?time=1505865608.955485','UML 学习总结',3323),('uml','http://blog.csdn.net/column/details/uml-jianfei.html?time=1505865613.886919','UML',5294),('uml','http://blog.csdn.net/column/details/uml-learning.html?time=1505865613.886959','UML',5216),('uml','http://blog.csdn.net/column/details/13175.html?time=1505865613.886969','UML--统一建模语言',4991),('uml','http://blog.csdn.net/column/details/uml12.html?time=1505865625.937794','UML',6328),('uml','http://blog.csdn.net/column/details/uml-1.html?time=1505865625.937818','UML',6225),('uml','http://blog.csdn.net/column/details/umlhello.html?time=1505865625.937832','UML',5841),('uml','http://blog.csdn.net/column/details/uml-faith.html?time=1505865635.06469','UML',8973),('uml','http://blog.csdn.net/column/details/uml001.html?time=1505865635.064717','实战UML',8852),('uml','http://blog.csdn.net/column/details/uml-design.html?time=1505865635.064725','UML',8693),('uml','http://blog.csdn.net/column/details/uml9-1.html?time=1505865635.064732','UML9图学习',8592),('uml','http://blog.csdn.net/column/details/uml20141029.html?time=1505865638.985827','UML',9874),('uml','http://blog.csdn.net/column/details/mqp66uml.html?time=1505865638.985855','uml专栏',9582),('uml','http://blog.csdn.net/column/details/uml-cyl.html?time=1505865651.274752','UML学习',11183),('uml','http://blog.csdn.net/column/details/lingzai6818.html?time=1505865651.274791','UML',10380),('uml','http://blog.csdn.net/column/details/thinkinuml.html?time=1505865653.230841','UML',12500),('uml','http://blog.csdn.net/column/details/victor-uml.html?time=1505865653.230881','UML',12058),('uml','http://blog.csdn.net/column/details/shejimoshi-17.html?time=1505865660.276187','uml',14640),('uml','http://blog.csdn.net/column/details/umlclass.html?time=1505865660.276218','UML',14464),('uml','http://blog.csdn.net/column/details/modelinglanguage.html?time=1505865667.344901','UML',16742),('uml','http://blog.csdn.net/column/details/csuml.html?time=1505865667.344936','UML',16461),('uml','http://blog.csdn.net/column/details/hugh-uml.html?time=1505865668.269957','UML',18564),('mysql','http://blog.csdn.net/column/details/yinfeng-mysql.html?time=1505865672.323636','MySQL内核与性能优化',9908),('mysql','http://blog.csdn.net/column/details/13281.html?time=1505865672.323687','MySQL-数据库-JDBC',9252),('mysql','http://blog.csdn.net/column/details/13516.html?time=1505865672.323704','MySQL路线',8290),('uml','http://blog.csdn.net/column/details/switch-uml.html?time=1505865679.623707','UML与需求分析学习笔记',29036),('uml','http://blog.csdn.net/column/details/lshuml.html?time=1505865684.65479','UML详解',45158),('uml','http://blog.csdn.net/column/details/myuml.html?time=1505865684.654832','UML设计',44745),('uml','http://blog.csdn.net/column/details/uml-11.html?time=1505865684.654841','UML学习之路',44013),('mysql','http://blog.csdn.net/column/details/13337.html?time=1505865686.766348','mysql数据库',11932),('mysql','http://blog.csdn.net/column/details/mysqlbywangjianan.html?time=1505865686.766375','mysql数据库',11502),('mysql','http://blog.csdn.net/column/details/13534.html?time=1505865686.766385','Mysql系列',11183),('mysql','http://blog.csdn.net/column/details/13489.html?time=1505865686.766392','MySQL基础知识大全',11145),('mysql','http://blog.csdn.net/column/details/14861.html?time=1505865687.771897','高性能MySQL',14802),('mysql','http://blog.csdn.net/column/details/13301.html?time=1505865687.771939','MySQL',12416),('mysql','http://blog.csdn.net/column/details/wenniuwuren-mysql.html?time=1505865688.952835','MySQL 入门到调优',15422),('mysql','http://blog.csdn.net/column/details/studymysql.html?time=1505865688.952857','MySQL数据库学习',15326),('mysql','http://blog.csdn.net/column/details/tangowl-mysql-intro.html?time=1505865690.083831','MySQL 入门教程',20857),('mysql','http://blog.csdn.net/column/details/mysql-dablelv.html?time=1505865690.083857','MySQL基础',20659),('mysql','http://blog.csdn.net/column/details/15548.html?time=1505865690.083867','数据库(MySQL)',20046),('mysql','http://blog.csdn.net/column/details/13881.html?time=1505865690.083874','mysql索引与优化',19653),('mysql','http://blog.csdn.net/column/details/mysqlwu.html?time=1505865690.083881','MySQL必知必会学习笔记',19618),('设计模式','http://blog.csdn.net/column/details/design-patterns-xue.html?time=1505865693.938876','设计模式',5653),('设计模式','http://blog.csdn.net/column/details/16634.html?time=1505865693.938896','设计模式',5585),('设计模式','http://blog.csdn.net/column/details/12992.html?time=1505865693.938906','设计模式备忘录',5256),('设计模式','http://blog.csdn.net/column/details/designpatterns-haoz.html?time=1505865693.938913','设计模式解析',5103),('设计模式','http://blog.csdn.net/column/details/designpatternsjiange.html?time=1505865693.938919','设计模式',5025),('设计模式','http://blog.csdn.net/column/details/shejimoshi1.html?time=1505865693.938928','设计模式',4716),('设计模式','http://blog.csdn.net/column/details/15193.html?time=1505865694.913362','赵建银-设计模式学习',3754),('设计模式','http://blog.csdn.net/column/details/designpatternnotewyj.html?time=1505865694.913403','设计模式笔记整理',3721),('设计模式','http://blog.csdn.net/column/details/javamodel.html?time=1505865694.913415','JAVA设计模式',3708),('设计模式','http://blog.csdn.net/column/details/13164.html?time=1505865694.913426','设计模式',3640),('设计模式','http://blog.csdn.net/column/details/javascriptdesgin.html?time=1505865694.913436','javascript设计模式',3574),('设计模式','http://blog.csdn.net/column/details/16632.html?time=1505865694.913446','设计模式学习笔记',3478),('设计模式','http://blog.csdn.net/column/details/design-pattern-zen.html?time=1505865694.913456','《设计模式之禅》读书笔记',3369),('设计模式','http://blog.csdn.net/column/details/15839.html?time=1505865694.913467','设计模式',3325),('设计模式','http://blog.csdn.net/column/details/tuimo.html?time=1505865696.110608','设计模式',6318),('设计模式','http://blog.csdn.net/column/details/javadesign-pattern.html?time=1505865696.11063','JAVA设计模式笔记',6311),('设计模式','http://blog.csdn.net/column/details/14351.html?time=1505865696.110641','java23种设计模式',6090),('设计模式','http://blog.csdn.net/column/details/14410.html?time=1505865696.110648','设计模式',6016),('设计模式','http://blog.csdn.net/column/details/hgbshejimoshi.html?time=1505865696.110657','设计模式',5670),('设计模式','http://blog.csdn.net/column/details/14723.html?time=1505865696.110664','设计模式',5670),('设计模式','http://blog.csdn.net/column/details/gof-23design.html?time=1505865696.110669','Gof 设计模式',5667),('uml','http://blog.csdn.net/column/details/umlmodelingtechnolog.html?time=1505865696.673605','UML建模技术',238066),('mysql','http://blog.csdn.net/column/details/13220.html?time=1505865715.322492','mysql',33746),('mysql','http://blog.csdn.net/column/details/mysql-001.html?time=1505865715.322512','高性能MySQL',31838),('mysql','http://blog.csdn.net/column/details/15651.html?time=1505865715.322521','MySql数据库调优',28550),('mysql','http://blog.csdn.net/column/details/16138.html?time=1505865724.395676','史上最简单的 MySQL 教程',49942),('mysql','http://blog.csdn.net/column/details/detailofmysql.html?time=1505865724.395699','MySQL详解',49691),('mysql','http://blog.csdn.net/column/details/oracle2mysql.html?time=1505865724.395714','从Oracle到MySQL',45445),('mysql','http://blog.csdn.net/column/details/cppformysqlpro.html?time=1505865724.395724','visual c++ 2008进行MySQL编程（ODBC）',44389),('mysql','http://blog.csdn.net/column/details/13005.html?time=1505865724.39573','MySQL必知必会',44092),('mysql','http://blog.csdn.net/column/details/13794.html?time=1505865725.472589','MySQL',170703),('mysql','http://blog.csdn.net/column/details/mysqlnote.html?time=1505865725.472625','MySQL进阶指南',148586),('mysql','http://blog.csdn.net/column/details/mysql-1.html?time=1505865725.472637','MySQL从入门到精通',128985),('mysql','http://blog.csdn.net/column/details/mysql-daydayup.html?time=1505865725.472648','Mysql提升',119095),('设计模式','http://blog.csdn.net/column/details/pattern23.html?time=1505865744.397135','设计模式',7131),('设计模式','http://blog.csdn.net/column/details/design-pattern-lin.html?time=1505865744.397202','设计模式',7057),('设计模式','http://blog.csdn.net/column/details/14948.html?time=1505865744.397213','php，java实现设计模式',7049),('设计模式','http://blog.csdn.net/column/details/13439.html?time=1505865744.397223','JavaScript设计模式',6891),('设计模式','http://blog.csdn.net/column/details/xfzsjms.html?time=1505865744.397237','设计模式',6857),('设计模式','http://blog.csdn.net/column/details/designpattern2.html?time=1505865744.397249','设计模式',6726),('设计模式','http://blog.csdn.net/column/details/14533.html?time=1505865744.397258','23种设计模式',6634),('设计模式','http://blog.csdn.net/column/details/design--mode.html?time=1505865745.404421','大话设计模式',7970),('设计模式','http://blog.csdn.net/column/details/shejimoshismile.html?time=1505865745.404446','设计模式',7850),('设计模式','http://blog.csdn.net/column/details/guus-sjms.html?time=1505865745.404454','设计模式大全',7821),('设计模式','http://blog.csdn.net/column/details/14866.html?time=1505865745.40446','设计模式之(C++实现)',7765),('设计模式','http://blog.csdn.net/column/details/14875.html?time=1505865745.404474','设计模式',7250),('设计模式','http://blog.csdn.net/column/details/design-pattern-123.html?time=1505865745.40448','设计模式',7232),('设计模式','http://blog.csdn.net/column/details/chaogeshejimoshi.html?time=1505865745.404486','Java设计模式简明教程',7215),('设计模式','http://blog.csdn.net/column/details/designpattern001.html?time=1505865748.512876','设计模式实战',9106),('设计模式','http://blog.csdn.net/column/details/habren-design-patter.html?time=1505865748.51295','跟着Jason学 设计模式',8799),('设计模式','http://blog.csdn.net/column/details/dpatterns.html?time=1505865748.512958','设计模式',8642),('设计模式','http://blog.csdn.net/column/details/learn-design-pattern.html?time=1505865748.512965','初识设计模式',8497),('设计模式','http://blog.csdn.net/column/details/learnofdesignpattern.html?time=1505865748.512972','设计模式',8436),('mysql','http://blog.csdn.net/column/details/mysqlsummary.html?time=1505865753.635029','Mysql数据库总结',73484),('mysql','http://blog.csdn.net/column/details/mysqlpri.html?time=1505865753.635057','思考mysql内核之初级系列',67083),('mysql','http://blog.csdn.net/column/details/15260.html?time=1505865753.635066','MySQL技术',60235),('mysql','http://blog.csdn.net/column/details/conquermysql.html?time=1505865753.635076','征服数据库之mysql',51231),('设计模式','http://blog.csdn.net/column/details/sjmsjc.html?time=1505865789.779224','设计模式',10028),('设计模式','http://blog.csdn.net/column/details/designpatternsummary.html?time=1505865789.779252','大话设计模式',9792),('设计模式','http://blog.csdn.net/column/details/shenruqianchu-design.html?time=1505865789.779259','深入浅出设计模式',9728),('设计模式','http://blog.csdn.net/column/details/designpattern1.html?time=1505865789.779269','设计模式',9341),('设计模式','http://blog.csdn.net/column/details/dahua-shejimoshi.html?time=1505865789.779276','大话设计模式',9267),('设计模式','http://blog.csdn.net/column/details/zysjms.html?time=1505865790.718072','设计模式',11146),('设计模式','http://blog.csdn.net/column/details/13758.html?time=1505865790.718103','java设计模式学习',11126),('设计模式','http://blog.csdn.net/column/details/designmodel.html?time=1505865790.718112','设计模式',10846),('设计模式','http://blog.csdn.net/column/details/javapatternexample.html?time=1505865790.71812','java设计模式实例',10617),('设计模式','http://blog.csdn.net/column/details/mydesignpatterns.html?time=1505865791.725765','设计模式通俗讲解&&C++实现',12009),('设计模式','http://blog.csdn.net/column/details/designpatternsharing.html?time=1505865791.725792','设计模式',11899),('设计模式','http://blog.csdn.net/column/details/java-design-mode.html?time=1505865791.725801','java设计模式',11877),('设计模式','http://blog.csdn.net/column/details/design-patterns001.html?time=1505865791.725811','设计模式的六大原则',11501),('设计模式','http://blog.csdn.net/column/details/theonegis-design.html?time=1505865791.725817','设计模式学习笔记',11495),('设计模式','http://blog.csdn.net/column/details/desginpattern.html?time=1505865791.725822','设计模式',11494),('设计模式','http://blog.csdn.net/column/details/walker1.html?time=1505865827.052401','设计模式C++实现',12706),('设计模式','http://blog.csdn.net/column/details/patternofjie.html?time=1505865827.052434','设计模式',12701),('设计模式','http://blog.csdn.net/column/details/13400.html?time=1505865827.052444','设计模式',12419),('设计模式','http://blog.csdn.net/column/details/13891.html?time=1505865827.052452','《设计模式》',12351),('设计模式','http://blog.csdn.net/column/details/zhenghaozhuanlan.html?time=1505865827.052477','设计模式',12244),('设计模式','http://blog.csdn.net/column/details/lius0011.html?time=1505865827.052485','设计模式实例',12189),('设计模式','http://blog.csdn.net/column/details/designpattern-qiu.html?time=1505865827.052492','设计模式',12065),('设计模式','http://blog.csdn.net/column/details/13088.html?time=1505865828.048685','设计模式',13812),('设计模式','http://blog.csdn.net/column/details/javadesignmodel.html?time=1505865828.048718','23天征服--23种设计模式',13625),('设计模式','http://blog.csdn.net/column/details/lxydahua.html?time=1505865828.048731','大话设计模式',13032),('设计模式','http://blog.csdn.net/column/details/suski-pattern.html?time=1505865829.022151','《大话设计模式》读后感',15539),('设计模式','http://blog.csdn.net/column/details/mydesignpattern35.html?time=1505865829.022187','设计模式之全解析',14926),('设计模式','http://blog.csdn.net/column/details/gof-design-patterns.html?time=1505865829.022198','GoF设计模式',14826),('设计模式','http://blog.csdn.net/column/details/shms520.html?time=1505865829.022205','设计模式',14752),('设计模式','http://blog.csdn.net/column/details/note-design-pattern.html?time=1505865829.022213','设计模式笔记',14622),('设计模式','http://blog.csdn.net/column/details/javadesignpattern.html?time=1505865830.060731','设计模式',17094),('设计模式','http://blog.csdn.net/column/details/mdmcsdn1.html?time=1505865830.060762','设计模式',16733),('设计模式','http://blog.csdn.net/column/details/design-pattern-hxm.html?time=1505865830.06077','设计模式之android',16568),('设计模式','http://blog.csdn.net/column/details/16401.html?time=1505865830.060776','24种设计模式',16570),('设计模式','http://blog.csdn.net/column/details/ourdesignpattern.html?time=1505865830.060785','设计模式',16246),('设计模式','http://blog.csdn.net/column/details/13196.html?time=1505865830.060791','设计模式',15809),('设计模式','http://blog.csdn.net/column/details/extenddesignpattern.html?time=1505865830.683981','可扩展性与设计模式',18995),('设计模式','http://blog.csdn.net/column/details/design-pattern.html?time=1505865830.684026','设计模式在实际项目中的应用',18228),('设计模式','http://blog.csdn.net/column/details/designpatterns-night.html?time=1505865830.684035','设计模式',18211),('设计模式','http://blog.csdn.net/column/details/dhsjms.html?time=1505865885.603991','大话设计模式',19903),('设计模式','http://blog.csdn.net/column/details/sjms.html?time=1505865885.60402','设计模式',19608),('设计模式','http://blog.csdn.net/column/details/huohuo.html?time=1505865885.60403','大话设计模式',19336),('设计模式','http://blog.csdn.net/column/details/12848.html?time=1505865894.445009','一天一个设计模式',22506),('设计模式','http://blog.csdn.net/column/details/designpattern-cassie.html?time=1505865894.445041','设计模式',22433),('设计模式','http://blog.csdn.net/column/details/sjmsxuexibiji.html?time=1505865894.44505','设计模式学习笔记',22364),('设计模式','http://blog.csdn.net/column/details/designpattern32.html?time=1505865894.445057','设计模式',22308),('设计模式','http://blog.csdn.net/column/details/designpatterns-qt.html?time=1505865894.445072','设计模式(Qt版)',21045),('设计模式','http://blog.csdn.net/column/details/cainiaojava.html?time=1505865894.445078','菜鸟版JAVA设计模式',21042),('设计模式','http://blog.csdn.net/column/details/14308.html?time=1505865897.527446','设计模式之美',27555),('设计模式','http://blog.csdn.net/column/details/designaction.html?time=1505865897.52748','设计模式',27391),('设计模式','http://blog.csdn.net/column/details/baadf00df00dabadfds0.html?time=1505865897.527494','初探设计模式（C++实现）',26015),('设计模式','http://blog.csdn.net/column/details/ef3c5ec0-f3c9-48af.html?time=1505865897.527502','设计模式精解',25790),('设计模式','http://blog.csdn.net/column/details/designpatternbylmb.html?time=1505865897.527511','大话设计模式',24995),('设计模式','http://blog.csdn.net/column/details/dhsjms-cplusplus.html?time=1505865925.701206','《大话设计模式》C++实现',28554),('设计模式','http://blog.csdn.net/column/details/17017.html?time=1505865925.701239','快速扩展和迭代 - 设计模式',28280),('设计模式','http://blog.csdn.net/column/details/design--pattern.html?time=1505865925.701247','设计模式',28229),('设计模式','http://blog.csdn.net/column/details/ds-1.html?time=1505865925.701257','大话设计模式',28155),('设计模式','http://blog.csdn.net/column/details/design-pattern-java.html?time=1505865925.701268','设计模式（JAVA）',27826),('设计模式','http://blog.csdn.net/column/details/designerpattern.html?time=1505865926.798577','IOS设计模式浅析',34265),('设计模式','http://blog.csdn.net/column/details/phpusedesignpattern.html?time=1505865926.798609','设计模式之PHP项目应用',32994),('设计模式','http://blog.csdn.net/column/details/artofdesignpattern.html?time=1505865926.798618','设计模式的艺术',32507),('设计模式','http://blog.csdn.net/column/details/shejimoshishengsheng.html?time=1505865926.798629','设计模式',31624),('设计模式','http://blog.csdn.net/column/details/wenqiang.html?time=1505865927.835666','设计模式之禅',37667),('设计模式','http://blog.csdn.net/column/details/gof-design-pattern.html?time=1505865927.835713','小清新GoF23种设计模式',37575),('设计模式','http://blog.csdn.net/column/details/13856.html?time=1505865927.835733','设计模式',36762),('设计模式','http://blog.csdn.net/column/details/my-designpatterns.html?time=1505865927.835746','设计模式之禅',36229),('设计模式','http://blog.csdn.net/column/details/14788.html?time=1505865965.057769','设计模式(Java)',43790),('设计模式','http://blog.csdn.net/column/details/xing-designpattern.html?time=1505865965.057794','写最好的设计模式专栏',43196),('设计模式','http://blog.csdn.net/column/details/patternsdesign.html?time=1505865965.057807','设计模式笔记',40510),('设计模式','http://blog.csdn.net/column/details/design-pattern23.html?time=1505865965.057813','C#设计模式',40275),('设计模式','http://blog.csdn.net/column/details/softwaredesign.html?time=1505865965.05782','设计模式',38851),('设计模式','http://blog.csdn.net/column/details/my-designpattern.html?time=1505865965.915202','设计模式与系统架构',46320),('设计模式','http://blog.csdn.net/column/details/designpatterns4java.html?time=1505865965.915226','23种设计模式 (java通俗演义)',45550),('设计模式','http://blog.csdn.net/column/details/design-pattern-homer.html?time=1505865965.915234','设计模式',45386),('设计模式','http://blog.csdn.net/column/details/designpatterns.html?time=1505865966.930527','大话设计模式',74865),('设计模式','http://blog.csdn.net/column/details/design2.html?time=1505865966.930552','乱砍设计模式',74375),('设计模式','http://blog.csdn.net/column/details/shuangde800-design.html?time=1505865987.262446','设计模式征途',56488),('设计模式','http://blog.csdn.net/column/details/designmodels.html?time=1505865987.262484','Java设计模式菜鸟系列',55907),('设计模式','http://blog.csdn.net/column/details/dahua.html?time=1505865987.262495','大话设计模式',53171),('设计模式','http://blog.csdn.net/column/details/phpdesign.html?time=1505865987.262503','PHP设计模式',52184),('设计模式','http://blog.csdn.net/column/details/hacke2-designpatter.html?time=1505865987.26251','设计模式读书笔记与总结',52082),('设计模式','http://blog.csdn.net/column/details/oodesign.html?time=1505865987.262518','设计模式攻略',50855),('设计模式','http://blog.csdn.net/column/details/oodm.html?time=1505866009.336428','面向对象设计模式',88841),('设计模式','http://blog.csdn.net/column/details/code-design.html?time=1505866011.359032','设计模式融入生活',127182),('设计模式','http://blog.csdn.net/column/details/designpatternforb.html?time=1505866011.359069','\"围观\"设计模式',112552),('设计模式','http://blog.csdn.net/column/details/cpp-design-pattern.html?time=1505866012.479861','C++设计模式',302453),('设计模式','http://blog.csdn.net/column/details/designpattern-xt.html?time=1505866012.479888','DesignPattern(设计模式)',248021),('设计模式','http://blog.csdn.net/column/details/mydesignpattern.html?time=1505866012.479939','我所理解的设计模式',232121),('mysql','http://blog.csdn.net/column/details/mysqlcentury.html?time=1506038401.493089','MySQL进阶',1226977),('mysql','http://blog.csdn.net/column/details/mysql-in-action.html?time=1506038401.493131','mysql 由浅入深',365826),('mysql','http://blog.csdn.net/column/details/mysqltw.html?time=1506038401.493141','MySQL图文进阶',354492),('mysql','http://blog.csdn.net/column/details/mysqldba.html?time=1506038401.493153','MySQL管理开发由浅入深',222329),('mysql','http://blog.csdn.net/column/details/evermysql.html?time=1506038401.493161','MySQL',191863),('设计模式','http://blog.csdn.net/column/details/design-patterns.html?time=1506038401.575506','设计模式',162662),('设计模式','http://blog.csdn.net/column/details/csharpdesignpattern.html?time=1506038401.575582','C#设计模式',147347),('设计模式','http://blog.csdn.net/column/details/chenssy-design.html?time=1506038401.575595','设计模式读书笔记',132969),('设计模式','http://blog.csdn.net/column/details/pattern.html?time=1506038401.647935','设计模式',1291709),('设计模式','http://blog.csdn.net/column/details/design.html?time=1506038401.648011','设计模式C++实现',463800),('设计模式','http://blog.csdn.net/column/details/designpatternzh.html?time=1506038401.64803','跟着ZHONGHuan学习设计模式',370187),('设计模式','http://blog.csdn.net/column/details/13826.html?time=1506038401.763544','云设计模式',64591),('设计模式','http://blog.csdn.net/column/details/eat-designpattern.html?time=1506038401.763588','硬啃设计模式',63259),('设计模式','http://blog.csdn.net/column/details/headfirst.html?time=1506038401.763598','HeadFirst 设计模式学习笔记',60930),('设计模式','http://blog.csdn.net/column/details/clouddesignpattern.html?time=1506038401.763605','云计算设计模式',60575),('设计模式','http://blog.csdn.net/column/details/12698.html?time=1506038401.763615','Java设计模式实战',57050),('mysql','http://blog.csdn.net/column/details/mysql-tzx.html?time=1506038401.803022','mysql知识汇总和提高',110303),('mysql','http://blog.csdn.net/column/details/zhy-study-mysql.html?time=1506038401.803074','Mysql',93396),('mysql','http://blog.csdn.net/column/details/14121.html?time=1506038401.803082','如何让Mysql跑的更快',86314),('mysql','http://blog.csdn.net/column/details/mysqlzl544434558.html?time=1506038401.803092','项目中积累的mysql使用经验',80735),('mysql','http://blog.csdn.net/column/details/mysqlstudy.html?time=1506038401.948085','mysql学习',28037),('mysql','http://blog.csdn.net/column/details/14507.html?time=1506038401.948121','MySQL学习记录',26238),('设计模式','http://blog.csdn.net/column/details/designpatternforios.html?time=1506038402.361364','设计模式之深入学习IOS版',24338),('设计模式','http://blog.csdn.net/column/details/cppdesignpattern.html?time=1506038402.361385','C++设计模式',24334),('设计模式','http://blog.csdn.net/column/details/16366.html?time=1506038402.36141','设计模式讲解与代码实践',23822),('设计模式','http://blog.csdn.net/column/details/feihedp.html?time=1506038402.361417','浅显易懂的设计模式',23618),('设计模式','http://blog.csdn.net/column/details/12906.html?time=1506038402.361426','小话设计模式',22851),('设计模式','http://blog.csdn.net/column/details/lxq-shejimoshi.html?time=1506038402.361434','设计模式--Java描述',22675),('mysql','http://blog.csdn.net/column/details/16135.html?time=1506038402.697286','Mysql架构设计',2785),('mysql','http://blog.csdn.net/column/details/16687.html?time=1506038402.697312','Mysql学习与实践笔记',2536),('mysql','http://blog.csdn.net/column/details/mysql56-refer.html?time=1506038403.004312','MySQL 5.6 参考',5918),('mysql','http://blog.csdn.net/column/details/shenruqianchu-mysql.html?time=1506038403.004346','深入浅出Mysql',5418),('mysql','http://blog.csdn.net/column/details/15343.html?time=1506038403.004357','史上最全的MySQL基础教程',4954),('mysql','http://blog.csdn.net/column/details/13738.html?time=1506038403.004366','MySql及NoSQL相关',4583),('mysql','http://blog.csdn.net/column/details/16578.html?time=1506038403.004375','MYSQL',4224),('mysql','http://blog.csdn.net/column/details/14622.html?time=1506038403.004381','MySQL',4020),('设计模式','http://blog.csdn.net/column/details/shejimoshi1.html?time=1506038403.153541','设计模式',4723),('设计模式','http://blog.csdn.net/column/details/qkcoder.html?time=1506038403.153579','C++设计模式',4421),('设计模式','http://blog.csdn.net/column/details/15604.html?time=1506038403.153586','Head First设计模式',4395),('设计模式','http://blog.csdn.net/column/details/zhdldesignpattern.html?time=1506038404.176278','设计模式之木叶村之旅',1212),('设计模式','http://blog.csdn.net/column/details/15600.html?time=1506038404.176328','设计模式小解',1103),('设计模式','http://blog.csdn.net/column/details/17223.html?time=1506038404.176337','设计模式篇',1024),('设计模式','http://blog.csdn.net/column/details/14268.html?time=1506038404.176347','C# 设计模式',859),('设计模式','http://blog.csdn.net/column/details/designpatternsumarry.html?time=1506038404.176354','设计模式',802),('mysql','http://blog.csdn.net/column/details/15364.html?time=1506038404.227528','MySQL',2383),('mysql','http://blog.csdn.net/column/details/13213.html?time=1506038404.227565','Mysql基本使用',2226),('mysql','http://blog.csdn.net/column/details/17229.html?time=1506038404.227576','mysql',2209),('mysql','http://blog.csdn.net/column/details/15133.html?time=1506038404.227588','MySQL基本知识',2119),('mysql','http://blog.csdn.net/column/details/16190.html?time=1506038404.2276','mysql',1795),('mysql','http://blog.csdn.net/column/details/15775.html?time=1506038404.227615','MySQL详解',1297),('设计模式','http://blog.csdn.net/column/details/13865.html?time=1506038405.249843','java设计模式',1666),('设计模式','http://blog.csdn.net/column/details/15456.html?time=1506038405.249869','常用Java设计模式系列',1662),('设计模式','http://blog.csdn.net/column/details/15026.html?time=1506038405.249878','Java 设计模式',1561),('设计模式','http://blog.csdn.net/column/details/16040.html?time=1506038405.249887','java设计模式',1418),('设计模式','http://blog.csdn.net/column/details/13662.html?time=1506038405.249893','Java设计模式学习',1406),('设计模式','http://blog.csdn.net/column/details/16088.html?time=1506038405.249901','设计模式',1323),('mysql','http://blog.csdn.net/column/details/mysql1209.html?time=1506038405.299212','mysql优化',7567),('mysql','http://blog.csdn.net/column/details/16623.html?time=1506038405.299236','MySQL源码研究',7523),('mysql','http://blog.csdn.net/column/details/16983.html?time=1506038405.299258','MySQL从入门到精通',6774),('mysql','http://blog.csdn.net/column/details/mysql1.html?time=1506038405.299266','踟蹰MySQL',6686),('mysql','http://blog.csdn.net/column/details/13369.html?time=1506038405.299272','mysql的使用',6516),('mysql','http://blog.csdn.net/column/details/13509.html?time=1506038405.299279','MySQl数据库嵌入式开发',6247),('设计模式','http://blog.csdn.net/column/details/14288.html?time=1506038406.362197','设计模式',2510),('设计模式','http://blog.csdn.net/column/details/12965.html?time=1506038406.36224','设计模式',2243),('设计模式','http://blog.csdn.net/column/details/14987.html?time=1506038406.362256','设计模式',2192),('设计模式','http://blog.csdn.net/column/details/14187.html?time=1506038406.362273','设计模式-java',1844),('设计模式','http://blog.csdn.net/column/details/15050.html?time=1506038406.362284','设计模式',1786),('设计模式','http://blog.csdn.net/column/details/java-design-pattern.html?time=1506038407.425215','Java设计模式',3022),('设计模式','http://blog.csdn.net/column/details/yrp-design-pattern.html?time=1506038407.425249','设计模式与应用',3003),('设计模式','http://blog.csdn.net/column/details/16218.html?time=1506038407.425259','设计模式',2789),('设计模式','http://blog.csdn.net/column/details/16553.html?time=1506038407.425265','设计模式',2774),('设计模式','http://blog.csdn.net/column/details/15028.html?time=1506038407.425274','设计模式',2562),('设计模式','http://blog.csdn.net/column/details/designerpattern.html?time=1506038465.770216','IOS设计模式浅析',34283),('设计模式','http://blog.csdn.net/column/details/phpusedesignpattern.html?time=1506038465.770252','设计模式之PHP项目应用',33069),('设计模式','http://blog.csdn.net/column/details/artofdesignpattern.html?time=1506038465.77026','设计模式的艺术',32544),('设计模式','http://blog.csdn.net/column/details/shejimoshishengsheng.html?time=1506038465.770272','设计模式',31673),('设计模式','http://blog.csdn.net/column/details/13758.html?time=1506038466.991691','java设计模式学习',11179),('设计模式','http://blog.csdn.net/column/details/zysjms.html?time=1506038466.991738','设计模式',11153),('设计模式','http://blog.csdn.net/column/details/designmodel.html?time=1506038466.991753','设计模式',10853),('设计模式','http://blog.csdn.net/column/details/javapatternexample.html?time=1506038466.991767','java设计模式实例',10633),('mysql','http://blog.csdn.net/column/details/yinfeng-mysql.html?time=1506038479.97533','MySQL内核与性能优化',9924),('mysql','http://blog.csdn.net/column/details/13281.html?time=1506038479.975355','MySQL-数据库-JDBC',9278),('mysql','http://blog.csdn.net/column/details/13516.html?time=1506038479.975366','MySQL路线',8349),('mysql','http://blog.csdn.net/column/details/13337.html?time=1506038480.961931','mysql数据库',11988),('mysql','http://blog.csdn.net/column/details/mysqlbywangjianan.html?time=1506038480.961979','mysql数据库',11576),('mysql','http://blog.csdn.net/column/details/13534.html?time=1506038480.96199','Mysql系列',11201),('mysql','http://blog.csdn.net/column/details/13489.html?time=1506038480.961997','MySQL基础知识大全',11194),('mysql','http://blog.csdn.net/column/details/14861.html?time=1506038481.996298','高性能MySQL',14949),('mysql','http://blog.csdn.net/column/details/13301.html?time=1506038481.996333','MySQL',12432),('mysql','http://blog.csdn.net/column/details/wenniuwuren-mysql.html?time=1506038483.103074','MySQL 入门到调优',15486),('mysql','http://blog.csdn.net/column/details/studymysql.html?time=1506038483.10312','MySQL数据库学习',15344),('mysql','http://blog.csdn.net/column/details/tangowl-mysql-intro.html?time=1506038503.505708','MySQL 入门教程',20901),('mysql','http://blog.csdn.net/column/details/mysql-dablelv.html?time=1506038503.505741','MySQL基础',20722),('mysql','http://blog.csdn.net/column/details/15548.html?time=1506038503.505751','数据库(MySQL)',20205),('mysql','http://blog.csdn.net/column/details/13881.html?time=1506038503.505759','mysql索引与优化',19739),('mysql','http://blog.csdn.net/column/details/mysqlwu.html?time=1506038503.505765','MySQL必知必会学习笔记',19685),('mysql','http://blog.csdn.net/column/details/13220.html?time=1506038504.607375','mysql',33877),('mysql','http://blog.csdn.net/column/details/mysql-001.html?time=1506038504.607403','高性能MySQL',31901),('mysql','http://blog.csdn.net/column/details/15651.html?time=1506038504.607411','MySql数据库调优',28861),('设计模式','http://blog.csdn.net/column/details/15193.html?time=1506038519.610579','赵建银-设计模式学习',3775),('设计模式','http://blog.csdn.net/column/details/designpatternnotewyj.html?time=1506038519.610625','设计模式笔记整理',3728),('设计模式','http://blog.csdn.net/column/details/javamodel.html?time=1506038519.610639','JAVA设计模式',3711),('设计模式','http://blog.csdn.net/column/details/13164.html?time=1506038519.610652','设计模式',3646),('设计模式','http://blog.csdn.net/column/details/javascriptdesgin.html?time=1506038519.610659','javascript设计模式',3598),('设计模式','http://blog.csdn.net/column/details/16632.html?time=1506038519.610665','设计模式学习笔记',3501),('设计模式','http://blog.csdn.net/column/details/design-pattern-zen.html?time=1506038519.610674','《设计模式之禅》读书笔记',3371),('设计模式','http://blog.csdn.net/column/details/15839.html?time=1506038519.61068','设计模式',3350),('mysql','http://blog.csdn.net/column/details/detailofmysql.html?time=1506038524.709553','MySQL详解',49885),('mysql','http://blog.csdn.net/column/details/oracle2mysql.html?time=1506038524.709611','从Oracle到MySQL',45575),('mysql','http://blog.csdn.net/column/details/13005.html?time=1506038524.709621','MySQL必知必会',44689),('mysql','http://blog.csdn.net/column/details/cppformysqlpro.html?time=1506038524.709628','visual c++ 2008进行MySQL编程（ODBC）',44405),('mysql','http://blog.csdn.net/column/details/13794.html?time=1506038525.675224','MySQL',172278),('mysql','http://blog.csdn.net/column/details/mysqlnote.html?time=1506038525.675265','MySQL进阶指南',148944),('mysql','http://blog.csdn.net/column/details/mysql-1.html?time=1506038525.675275','MySQL从入门到精通',129364),('mysql','http://blog.csdn.net/column/details/mysql-daydayup.html?time=1506038525.675285','Mysql提升',119576),('设计模式','http://blog.csdn.net/column/details/14723.html?time=1506038542.878466','设计模式',5709),('设计模式','http://blog.csdn.net/column/details/gof-23design.html?time=1506038542.878502','Gof 设计模式',5680),('设计模式','http://blog.csdn.net/column/details/16634.html?time=1506038542.878529','设计模式',5680),('设计模式','http://blog.csdn.net/column/details/hgbshejimoshi.html?time=1506038542.878535','设计模式',5675),('设计模式','http://blog.csdn.net/column/details/design-patterns-xue.html?time=1506038542.878541','设计模式',5659),('设计模式','http://blog.csdn.net/column/details/12992.html?time=1506038542.878553','设计模式备忘录',5270),('设计模式','http://blog.csdn.net/column/details/designpatterns-haoz.html?time=1506038542.878559','设计模式解析',5117),('设计模式','http://blog.csdn.net/column/details/designpatternsjiange.html?time=1506038542.878565','设计模式',5049),('mysql','http://blog.csdn.net/column/details/mysqlsummary.html?time=1506038553.011791','Mysql数据库总结',74018),('mysql','http://blog.csdn.net/column/details/mysqlpri.html?time=1506038553.011842','思考mysql内核之初级系列',67134),('mysql','http://blog.csdn.net/column/details/15260.html?time=1506038553.011852','MySQL技术',60235),('mysql','http://blog.csdn.net/column/details/conquermysql.html?time=1506038553.011861','征服数据库之mysql',51300),('mysql','http://blog.csdn.net/column/details/16138.html?time=1506038553.011867','史上最简单的 MySQL 教程',51213),('设计模式','http://blog.csdn.net/column/details/javadesign-pattern.html?time=1506038562.044298','JAVA设计模式笔记',6341),('设计模式','http://blog.csdn.net/column/details/tuimo.html?time=1506038562.044323','设计模式',6318),('设计模式','http://blog.csdn.net/column/details/14351.html?time=1506038562.044334','java23种设计模式',6118),('设计模式','http://blog.csdn.net/column/details/14410.html?time=1506038562.044341','设计模式',6050),('设计模式','http://blog.csdn.net/column/details/14875.html?time=1506038563.030488','设计模式',7288),('设计模式','http://blog.csdn.net/column/details/design-pattern-123.html?time=1506038563.030517','设计模式',7239),('设计模式','http://blog.csdn.net/column/details/chaogeshejimoshi.html?time=1506038563.030538','Java设计模式简明教程',7232),('设计模式','http://blog.csdn.net/column/details/pattern23.html?time=1506038563.030549','设计模式',7141),('设计模式','http://blog.csdn.net/column/details/design-pattern-lin.html?time=1506038563.03057','设计模式',7086),('设计模式','http://blog.csdn.net/column/details/14948.html?time=1506038563.030582','php，java实现设计模式',7076),('设计模式','http://blog.csdn.net/column/details/13439.html?time=1506038563.030594','JavaScript设计模式',6999),('设计模式','http://blog.csdn.net/column/details/xfzsjms.html?time=1506038563.03061','设计模式',6861),('设计模式','http://blog.csdn.net/column/details/designpattern2.html?time=1506038563.030622','设计模式',6732),('设计模式','http://blog.csdn.net/column/details/14533.html?time=1506038563.030633','23种设计模式',6678),('设计模式','http://blog.csdn.net/column/details/designpattern1.html?time=1506038595.475724','设计模式',9352),('设计模式','http://blog.csdn.net/column/details/dahua-shejimoshi.html?time=1506038595.475755','大话设计模式',9275),('设计模式','http://blog.csdn.net/column/details/designpattern001.html?time=1506038595.475763','设计模式实战',9129),('设计模式','http://blog.csdn.net/column/details/habren-design-patter.html?time=1506038595.475774','跟着Jason学 设计模式',8816),('设计模式','http://blog.csdn.net/column/details/dpatterns.html?time=1506038595.475781','设计模式',8676),('设计模式','http://blog.csdn.net/column/details/learn-design-pattern.html?time=1506038595.475788','初识设计模式',8513),('设计模式','http://blog.csdn.net/column/details/sjmsjc.html?time=1506038596.644065','设计模式',10046),('设计模式','http://blog.csdn.net/column/details/designpatternsummary.html?time=1506038596.644134','大话设计模式',9826),('设计模式','http://blog.csdn.net/column/details/shenruqianchu-design.html?time=1506038596.644152','深入浅出设计模式',9754),('设计模式','http://blog.csdn.net/column/details/designpatterns.html?time=1506038616.662954','大话设计模式',74905),('设计模式','http://blog.csdn.net/column/details/design2.html?time=1506038616.662985','乱砍设计模式',74443),('设计模式','http://blog.csdn.net/column/details/designpattern-qiu.html?time=1506038623.884231','设计模式',12087),('设计模式','http://blog.csdn.net/column/details/mydesignpatterns.html?time=1506038623.884264','设计模式通俗讲解&&C++实现',12026),('设计模式','http://blog.csdn.net/column/details/designpatternsharing.html?time=1506038623.88429','设计模式',11920),('设计模式','http://blog.csdn.net/column/details/java-design-mode.html?time=1506038623.884316','java设计模式',11891),('设计模式','http://blog.csdn.net/column/details/theonegis-design.html?time=1506038623.884325','设计模式学习笔记',11550),('设计模式','http://blog.csdn.net/column/details/design-patterns001.html?time=1506038623.884332','设计模式的六大原则',11510),('设计模式','http://blog.csdn.net/column/details/desginpattern.html?time=1506038623.884337','设计模式',11504),('设计模式','http://blog.csdn.net/column/details/lxydahua.html?time=1506038625.053789','大话设计模式',13042),('设计模式','http://blog.csdn.net/column/details/walker1.html?time=1506038625.053812','设计模式C++实现',12781),('设计模式','http://blog.csdn.net/column/details/patternofjie.html?time=1506038625.05382','设计模式',12707),('设计模式','http://blog.csdn.net/column/details/13400.html?time=1506038625.053829','设计模式',12450),('设计模式','http://blog.csdn.net/column/details/13891.html?time=1506038625.053835','《设计模式》',12362),('设计模式','http://blog.csdn.net/column/details/zhenghaozhuanlan.html?time=1506038625.053842','设计模式',12264),('设计模式','http://blog.csdn.net/column/details/lius0011.html?time=1506038625.053849','设计模式实例',12190),('设计模式','http://blog.csdn.net/column/details/13088.html?time=1506038626.00103','设计模式',13891),('设计模式','http://blog.csdn.net/column/details/javadesignmodel.html?time=1506038626.001065','23天征服--23种设计模式',13671),('设计模式','http://blog.csdn.net/column/details/13196.html?time=1506038659.244786','设计模式',15838),('设计模式','http://blog.csdn.net/column/details/suski-pattern.html?time=1506038659.244837','《大话设计模式》读后感',15556),('设计模式','http://blog.csdn.net/column/details/mydesignpattern35.html?time=1506038659.244855','设计模式之全解析',14947),('设计模式','http://blog.csdn.net/column/details/gof-design-patterns.html?time=1506038659.244869','GoF设计模式',14841),('设计模式','http://blog.csdn.net/column/details/shms520.html?time=1506038659.24488','设计模式',14767),('设计模式','http://blog.csdn.net/column/details/note-design-pattern.html?time=1506038659.244892','设计模式笔记',14654),('设计模式','http://blog.csdn.net/column/details/javadesignpattern.html?time=1506038680.355395','设计模式',17128),('设计模式','http://blog.csdn.net/column/details/mdmcsdn1.html?time=1506038680.355423','设计模式',16743),('设计模式','http://blog.csdn.net/column/details/16401.html?time=1506038680.355431','24种设计模式',16627),('设计模式','http://blog.csdn.net/column/details/design-pattern-hxm.html?time=1506038680.355437','设计模式之android',16614),('设计模式','http://blog.csdn.net/column/details/ourdesignpattern.html?time=1506038680.355445','设计模式',16304),('设计模式','http://blog.csdn.net/column/details/extenddesignpattern.html?time=1506038681.331996','可扩展性与设计模式',19021),('设计模式','http://blog.csdn.net/column/details/designpatterns-night.html?time=1506038681.332022','设计模式',18241),('设计模式','http://blog.csdn.net/column/details/design-pattern.html?time=1506038681.33203','设计模式在实际项目中的应用',18234),('设计模式','http://blog.csdn.net/column/details/cainiaojava.html?time=1506038682.480327','菜鸟版JAVA设计模式',21095),('设计模式','http://blog.csdn.net/column/details/designpatterns-qt.html?time=1506038682.480359','设计模式(Qt版)',21057),('设计模式','http://blog.csdn.net/column/details/dhsjms.html?time=1506038682.480375','大话设计模式',19999),('设计模式','http://blog.csdn.net/column/details/sjms.html?time=1506038682.480384','设计模式',19622),('设计模式','http://blog.csdn.net/column/details/huohuo.html?time=1506038682.48039','大话设计模式',19351),('设计模式','http://blog.csdn.net/column/details/design-pattern-java.html?time=1506038710.751134','设计模式（JAVA）',27949),('设计模式','http://blog.csdn.net/column/details/14308.html?time=1506038710.75117','设计模式之美',27561),('设计模式','http://blog.csdn.net/column/details/designaction.html?time=1506038710.751178','设计模式',27396),('设计模式','http://blog.csdn.net/column/details/baadf00df00dabadfds0.html?time=1506038710.75119','初探设计模式（C++实现）',26050),('设计模式','http://blog.csdn.net/column/details/ef3c5ec0-f3c9-48af.html?time=1506038710.751199','设计模式精解',25807),('设计模式','http://blog.csdn.net/column/details/designpatternbylmb.html?time=1506038710.751207','大话设计模式',25049),('设计模式','http://blog.csdn.net/column/details/12848.html?time=1506038729.000981','一天一个设计模式',22572),('设计模式','http://blog.csdn.net/column/details/designpattern-cassie.html?time=1506038729.001014','设计模式',22443),('设计模式','http://blog.csdn.net/column/details/sjmsxuexibiji.html?time=1506038729.001023','设计模式学习笔记',22387),('设计模式','http://blog.csdn.net/column/details/designpattern32.html?time=1506038729.001029','设计模式',22348),('设计模式','http://blog.csdn.net/column/details/dhsjms-cplusplus.html?time=1506038731.053592','《大话设计模式》C++实现',28599),('设计模式','http://blog.csdn.net/column/details/17017.html?time=1506038731.053645','快速扩展和迭代 - 设计模式',28315),('设计模式','http://blog.csdn.net/column/details/design--pattern.html?time=1506038731.053656','设计模式',28253),('设计模式','http://blog.csdn.net/column/details/ds-1.html?time=1506038731.053663','大话设计模式',28191),('设计模式','http://blog.csdn.net/column/details/wenqiang.html?time=1506038748.109226','设计模式之禅',37809),('设计模式','http://blog.csdn.net/column/details/gof-design-pattern.html?time=1506038748.109261','小清新GoF23种设计模式',37600),('设计模式','http://blog.csdn.net/column/details/13856.html?time=1506038748.109273','设计模式',37003),('设计模式','http://blog.csdn.net/column/details/my-designpatterns.html?time=1506038748.10928','设计模式之禅',36312),('设计模式','http://blog.csdn.net/column/details/14788.html?time=1506038766.170226','设计模式(Java)',44022),('设计模式','http://blog.csdn.net/column/details/xing-designpattern.html?time=1506038766.170253','写最好的设计模式专栏',43407),('设计模式','http://blog.csdn.net/column/details/patternsdesign.html?time=1506038766.170267','设计模式笔记',40576),('设计模式','http://blog.csdn.net/column/details/design-pattern23.html?time=1506038766.170273','C#设计模式',40346),('设计模式','http://blog.csdn.net/column/details/softwaredesign.html?time=1506038766.170308','设计模式',38870),('设计模式','http://blog.csdn.net/column/details/my-designpattern.html?time=1506038767.26177','设计模式与系统架构',46361),('设计模式','http://blog.csdn.net/column/details/designpatterns4java.html?time=1506038767.261807','23种设计模式 (java通俗演义)',45581),('设计模式','http://blog.csdn.net/column/details/design-pattern-homer.html?time=1506038767.261816','设计模式',45406),('设计模式','http://blog.csdn.net/column/details/learnofdesignpattern.html?time=1506038768.288169','设计模式',8448),('设计模式','http://blog.csdn.net/column/details/design--mode.html?time=1506038768.288192','大话设计模式',8000),('设计模式','http://blog.csdn.net/column/details/shejimoshismile.html?time=1506038768.288201','设计模式',7868),('设计模式','http://blog.csdn.net/column/details/14866.html?time=1506038768.288209','设计模式之(C++实现)',7843),('设计模式','http://blog.csdn.net/column/details/guus-sjms.html?time=1506038768.288215','设计模式大全',7832),('设计模式','http://blog.csdn.net/column/details/shuangde800-design.html?time=1506038800.584649','设计模式征途',56519),('设计模式','http://blog.csdn.net/column/details/designmodels.html?time=1506038800.584683','Java设计模式菜鸟系列',55976),('设计模式','http://blog.csdn.net/column/details/dahua.html?time=1506038800.584695','大话设计模式',53196),('设计模式','http://blog.csdn.net/column/details/phpdesign.html?time=1506038800.584704','PHP设计模式',52495),('设计模式','http://blog.csdn.net/column/details/hacke2-designpatter.html?time=1506038800.58471','设计模式读书笔记与总结',52109),('设计模式','http://blog.csdn.net/column/details/oodesign.html?time=1506038800.584719','设计模式攻略',50895),('设计模式','http://blog.csdn.net/column/details/oodm.html?time=1506038802.509286','面向对象设计模式',88882),('设计模式','http://blog.csdn.net/column/details/cpp-design-pattern.html?time=1506038822.598075','C++设计模式',302501),('设计模式','http://blog.csdn.net/column/details/designpattern-xt.html?time=1506038822.598098','DesignPattern(设计模式)',248039),('设计模式','http://blog.csdn.net/column/details/mydesignpattern.html?time=1506038822.598106','我所理解的设计模式',232535),('设计模式','http://blog.csdn.net/column/details/code-design.html?time=1506038823.581259','设计模式融入生活',127421),('设计模式','http://blog.csdn.net/column/details/designpatternforb.html?time=1506038823.581314','\"围观\"设计模式',112636),('设计模式','http://blog.csdn.net/column/details/pattern.html?time=1506093962.318914','设计模式',1292392),('设计模式','http://blog.csdn.net/column/details/design.html?time=1506093962.318952','设计模式C++实现',464247),('设计模式','http://blog.csdn.net/column/details/designpatternzh.html?time=1506093962.318962','跟着ZHONGHuan学习设计模式',370209),('java','http://blog.csdn.net/column/details/java-enhance.html?time=1506094269.705662','Java总结',357256),('java','http://blog.csdn.net/column/details/12698.html?time=1506094269.810217','Java设计模式实战',57074),('nginx','http://blog.csdn.net/column/details/nginx.html?time=1506094270.13501','Nginx高性能Web服务器',384480),('nginx','http://blog.csdn.net/column/details/code-for-nginx.html?time=1506094270.180183','nginx源码学习笔记',137322),('redis','http://blog.csdn.net/column/details/redis-code.html?time=1506094271.961895','Redis源码分析',155890),('redis','http://blog.csdn.net/column/details/13859.html?time=1506094272.581587','Redis',62521),('uml','http://blog.csdn.net/column/details/sweetyoyy.html?time=1506094273.2061','UML学习',4380),('uml','http://blog.csdn.net/column/details/zyumljm.html?time=1506094273.206131','UML建模',3953),('java','http://blog.csdn.net/column/details/beginer.html?time=1506094273.685191','javaEE->高新',1759),('java','http://blog.csdn.net/column/details/13865.html?time=1506094273.685216','java设计模式',1667),('java','http://blog.csdn.net/column/details/15456.html?time=1506094273.685225','常用Java设计模式系列',1663),('java','http://blog.csdn.net/column/details/15026.html?time=1506094273.685234','Java 设计模式',1562),('java','http://blog.csdn.net/column/details/16040.html?time=1506094273.685242','java设计模式',1419),('java','http://blog.csdn.net/column/details/13662.html?time=1506094273.68525','Java设计模式学习',1408),('uml','http://blog.csdn.net/column/details/15059.html?time=1506094274.192314','UML知识',1226),('java','http://blog.csdn.net/column/details/14187.html?time=1506094275.577403','设计模式-java',1849),('linux','http://blog.csdn.net/column/details/16850.html?time=1506094275.645062','Linux内核完全解读',2092),('java','http://blog.csdn.net/column/details/java-design-pattern.html?time=1506094275.793102','Java设计模式',3022),('linux','http://blog.csdn.net/column/details/linux-qa-practice.html?time=1506094276.303507','实战 Linux 系统质量保障',2686),('uml','http://blog.csdn.net/column/details/12939.html?time=1506094277.398143','UML 学习总结',3335),('uml','http://blog.csdn.net/column/details/13140.html?time=1506094277.398181','UML',2852),('java','http://blog.csdn.net/column/details/14305.html?time=1506094278.625099','javaEE防盗版',5613),('java','http://blog.csdn.net/column/details/max1210.html?time=1506094278.625125','java入门到精通',5418),('uml','http://blog.csdn.net/column/details/txbuml.html?time=1506094278.816868','UML',3910),('uml','http://blog.csdn.net/column/details/uml-jianfei.html?time=1506094281.505054','UML',5327),('uml','http://blog.csdn.net/column/details/uml-learning.html?time=1506094281.505107','UML',5235),('uml','http://blog.csdn.net/column/details/13175.html?time=1506094281.505125','UML--统一建模语言',5017),('nginx','http://blog.csdn.net/column/details/spch2008-nginx.html?time=1506094288.218369','NGINX',8424),('linux','http://blog.csdn.net/column/details/linux1209.html?time=1506094291.167078','Linux',12724),('redis','http://blog.csdn.net/column/details/13266.html?time=1506094294.283945','redis命令详解与应用',12018),('redis','http://blog.csdn.net/column/details/13313.html?time=1506094294.283972','Redis技术相关',11985),('uml','http://blog.csdn.net/column/details/uml12.html?time=1506094296.005628','UML',6345),('uml','http://blog.csdn.net/column/details/uml-1.html?time=1506094296.013676','UML',6248),('uml','http://blog.csdn.net/column/details/umlhello.html?time=1506094296.01369','UML',5857),('linux','http://blog.csdn.net/column/details/sln-linux-design.html?time=1506094296.241374','把握linux内核设计思想',21012),('linux','http://blog.csdn.net/column/details/kernel2-6.html?time=1506094296.241418','Linux内核设计基础',19398),('linux','http://blog.csdn.net/column/details/master-linux.html?time=1506094298.354819','Linux操作系统',22106),('linux','http://blog.csdn.net/column/details/shanshanpt.html?time=1506094298.354855','Linux 网络编程',21251),('java','http://blog.csdn.net/column/details/javamodel.html?time=1506094299.633287','JAVA设计模式',3715),('java','http://blog.csdn.net/column/details/javascriptdesgin.html?time=1506094299.633356','javascript设计模式',3600),('redis','http://blog.csdn.net/column/details/16017.html?time=1506094303.524095','redis学习',22397),('redis','http://blog.csdn.net/column/details/15428.html?time=1506094303.524147','Redis 3.2.8 源码剖析注释',21573),('nginx','http://blog.csdn.net/column/details/mynginx.html?time=1506094303.751167','Nginx',32607),('uml','http://blog.csdn.net/column/details/uml-faith.html?time=1506094304.311841','UML',9017),('uml','http://blog.csdn.net/column/details/uml001.html?time=1506094304.311875','实战UML',8873),('uml','http://blog.csdn.net/column/details/uml-design.html?time=1506094304.311884','UML',8696),('uml','http://blog.csdn.net/column/details/uml9-1.html?time=1506094304.311892','UML9图学习',8617),('java','http://blog.csdn.net/column/details/javadesign-pattern.html?time=1506094304.359714','JAVA设计模式笔记',6347),('java','http://blog.csdn.net/column/details/14790.html?time=1506094304.359764','Java调优方案',6249),('java','http://blog.csdn.net/column/details/14351.html?time=1506094304.359781','java23种设计模式',6122),('java','http://blog.csdn.net/column/details/16988.html?time=1506094304.359798','java架构师入门',6050),('java','http://blog.csdn.net/column/details/chaogeshejimoshi.html?time=1506094307.369351','Java设计模式简明教程',7234),('java','http://blog.csdn.net/column/details/talk-effective-java.html?time=1506094307.369387','谈Effective Java',7126),('java','http://blog.csdn.net/column/details/14948.html?time=1506094307.369396','php，java实现设计模式',7078),('java','http://blog.csdn.net/column/details/13439.html?time=1506094307.369403','JavaScript设计模式',6999),('uml','http://blog.csdn.net/column/details/uml20141029.html?time=1506094308.273224','UML',9899),('uml','http://blog.csdn.net/column/details/mqp66uml.html?time=1506094308.273258','uml专栏',9589),('java','http://blog.csdn.net/column/details/framework-1.html?time=1506094308.311343','Java进阶之路',8156),('java','http://blog.csdn.net/column/details/14017.html?time=1506094308.31137','java web开发应用',7923),('linux','http://blog.csdn.net/column/details/explore-linux.html?time=1506094309.199372','Linux探索之旅',31838),('linux','http://blog.csdn.net/column/details/oslinux.html?time=1506094310.607291','操作系统原理（linux）',34884),('linux','http://blog.csdn.net/column/details/linux-driver.html?time=1506094312.120944','linux驱动开发',46632),('nginx','http://blog.csdn.net/column/details/niginxsourcelearning.html?time=1506094313.236258','nginx源码剖析',257959),('uml','http://blog.csdn.net/column/details/uml-cyl.html?time=1506094320.459274','UML学习',11259),('uml','http://blog.csdn.net/column/details/lingzai6818.html?time=1506094320.459321','UML',10408),('uml','http://blog.csdn.net/column/details/victor-uml.html?time=1506094321.38948','UML',12068),('linux','http://blog.csdn.net/column/details/linuxsystemprogram.html?time=1506094322.867322','Linux 系统编程',78742),('linux','http://blog.csdn.net/column/details/linuxkernel-detailed.html?time=1506094322.867352','Linux内核剖析',69375),('linux','http://blog.csdn.net/column/details/dut-linux-kernel.html?time=1506094322.867361','Linux内核设计的艺术',67718),('uml','http://blog.csdn.net/column/details/thinkinuml.html?time=1506094323.460855','UML',12519),('java','http://blog.csdn.net/column/details/lxq-shejimoshi.html?time=1506094323.586534','设计模式--Java描述',22686),('linux','http://blog.csdn.net/column/details/linux-kernel-no-code.html?time=1506094324.40401','linux内核原理',86547),('linux','http://blog.csdn.net/column/details/linuxkernel.html?time=1506094325.508954','Linux内核设计与实现',108156),('linux','http://blog.csdn.net/column/details/driverforlinux.html?time=1506094325.508987','Linux设备驱动',98586),('uml','http://blog.csdn.net/column/details/shejimoshi-17.html?time=1506094330.945398','uml',14680),('uml','http://blog.csdn.net/column/details/umlclass.html?time=1506094330.945438','UML',14527),('uml','http://blog.csdn.net/column/details/modelinglanguage.html?time=1506094331.724637','UML',16761),('uml','http://blog.csdn.net/column/details/csuml.html?time=1506094331.724667','UML',16488),('java','http://blog.csdn.net/column/details/j2ee-hanhan.html?time=1506094335.982568','Java之J2EE',8924),('java','http://blog.csdn.net/column/details/13758.html?time=1506094338.048532','java设计模式学习',11199),('java','http://blog.csdn.net/column/details/javapatternexample.html?time=1506094338.048596','java设计模式实例',10640),('java','http://blog.csdn.net/column/details/java-design-mode.html?time=1506094339.129014','java设计模式',11912),('uml','http://blog.csdn.net/column/details/hugh-uml.html?time=1506094339.929778','UML',18642),('java','http://blog.csdn.net/column/details/javaee2014-09-04.html?time=1506094340.205967','JavaEE',12185),('java','http://blog.csdn.net/column/details/ysc-1123.html?time=1506094342.264286','Java菜鸟成长日记',14401),('java','http://blog.csdn.net/column/details/16808.html?time=1506094342.264317','Java开发经验积累',13809),('uml','http://blog.csdn.net/column/details/switch-uml.html?time=1506094349.18553','UML与需求分析学习笔记',29179),('uml','http://blog.csdn.net/column/details/uml-11.html?time=1506094352.918221','UML学习之路',44185),('uml','http://blog.csdn.net/column/details/lshuml.html?time=1506094354.338605','UML详解',45177),('uml','http://blog.csdn.net/column/details/myuml.html?time=1506094354.338628','UML设计',44857),('java','http://blog.csdn.net/column/details/gavin-framework.html?time=1506094354.958126','JavaWeb框架',14512),('java','http://blog.csdn.net/column/details/12714.html?time=1506094357.486972','javaEE——框架技术',16955),('java','http://blog.csdn.net/column/details/javaforspring.html?time=1506094358.465469','java架构解析',18472),('java','http://blog.csdn.net/column/details/java-web-learn.html?time=1506094358.465499','java web 知识汇总',17720),('java','http://blog.csdn.net/column/details/cainiaojava.html?time=1506094359.49699','菜鸟版JAVA设计模式',21121),('java','http://blog.csdn.net/column/details/designmodels.html?time=1506094361.424475','Java设计模式菜鸟系列',55995),('java','http://blog.csdn.net/column/details/12747.html?time=1506094361.424508','JavaWeb',53682),('uml','http://blog.csdn.net/column/details/umlmodelingtechnolog.html?time=1506094365.608962','UML建模技术',238409),('java','http://blog.csdn.net/column/details/design-pattern-java.html?time=1506094373.840555','设计模式（JAVA）',28005),('java','http://blog.csdn.net/column/details/learnpro.html?time=1506094380.332556','Java性能调优',30412),('java','http://blog.csdn.net/column/details/rabbitmq-for-java.html?time=1506094380.877725','RabbitMQ Java入门教程',34638),('java','http://blog.csdn.net/column/details/spring-liao.html?time=1506094380.877755','java 框架',33243),('java','http://blog.csdn.net/column/details/java-thread-.html?time=1506094383.151111','java 并发 多线程',34652),('java','http://blog.csdn.net/column/details/14788.html?time=1506094383.961006','设计模式(Java)',44073),('java','http://blog.csdn.net/column/details/jplogicframework.html?time=1506094383.96106','java快速开发平台(jplogic)',42978),('java','http://blog.csdn.net/column/details/14810.html?time=1506094396.255492','Java Web 成神之路',50818),('java','http://blog.csdn.net/column/details/designpatterns4java.html?time=1506094396.255539','23种设计模式 (java通俗演义)',45586),('java','http://blog.csdn.net/column/details/designpatternschx.html?time=1506094397.259888','JAVA设计模块之旅',132840),('java','http://blog.csdn.net/column/details/javaee.html?time=1506094397.259913','Java EE开发',121700),('java','http://blog.csdn.net/column/details/kuangjiaxuexi123.html?time=1506094397.259921','java 框架',121406),('java','http://blog.csdn.net/column/details/toto-ee.html?time=1506094414.48252','JavaEE由浅入深专栏',69873),('java','http://blog.csdn.net/column/details/15065.html?time=1506094416.497569','Java技术栈架构',96444),('java','http://blog.csdn.net/column/details/dp-in-java-yqj2065.html?time=1506094416.497598','面向对象设计：原理、模式和应用(Java8)',92423),('java','http://blog.csdn.net/column/details/javaframe.html?time=1506094418.454145','Java后台框架系列',348894),('java','http://blog.csdn.net/column/details/javapractice.html?time=1506094418.454176','javaWEB实战',297014),('java','http://blog.csdn.net/column/details/myjava.html?time=1506094418.454188','Java深入',222396),('java','http://blog.csdn.net/column/details/javaee-learning.html?time=1506094418.454193','JavaEE核心框架',200698),('mysql','http://blog.csdn.net/column/details/mysqlcentury.html?time=1506211201.72604','MySQL进阶',1227194),('mysql','http://blog.csdn.net/column/details/mysql-in-action.html?time=1506211201.726109','mysql 由浅入深',365883),('mysql','http://blog.csdn.net/column/details/mysqltw.html?time=1506211201.726121','MySQL图文进阶',355477),('mysql','http://blog.csdn.net/column/details/mysqldba.html?time=1506211201.726131','MySQL管理开发由浅入深',222534),('mysql','http://blog.csdn.net/column/details/evermysql.html?time=1506211201.726139','MySQL',192146),('设计模式','http://blog.csdn.net/column/details/pattern.html?time=1506211201.891205','设计模式',1293122),('设计模式','http://blog.csdn.net/column/details/design.html?time=1506211201.891249','设计模式C++实现',464546),('设计模式','http://blog.csdn.net/column/details/designpatternzh.html?time=1506211201.891259','跟着ZHONGHuan学习设计模式',370229),('设计模式','http://blog.csdn.net/column/details/13826.html?time=1506211201.990377','云设计模式',64658),('设计模式','http://blog.csdn.net/column/details/eat-designpattern.html?time=1506211201.990411','硬啃设计模式',63310),('设计模式','http://blog.csdn.net/column/details/headfirst.html?time=1506211201.99042','HeadFirst 设计模式学习笔记',60939),('设计模式','http://blog.csdn.net/column/details/clouddesignpattern.html?time=1506211201.990426','云计算设计模式',60669),('设计模式','http://blog.csdn.net/column/details/12698.html?time=1506211201.990435','Java设计模式实战',57152),('设计模式','http://blog.csdn.net/column/details/design-patterns.html?time=1506211202.035556','设计模式',162729),('设计模式','http://blog.csdn.net/column/details/csharpdesignpattern.html?time=1506211202.03559','C#设计模式',147612),('设计模式','http://blog.csdn.net/column/details/chenssy-design.html?time=1506211202.035604','设计模式读书笔记',133269),('mysql','http://blog.csdn.net/column/details/mysqlstudy.html?time=1506211202.068028','mysql学习',28091),('mysql','http://blog.csdn.net/column/details/14507.html?time=1506211202.0681','MySQL学习记录',26270),('mysql','http://blog.csdn.net/column/details/mysql-tzx.html?time=1506211202.140877','mysql知识汇总和提高',110355),('mysql','http://blog.csdn.net/column/details/zhy-study-mysql.html?time=1506211202.140913','Mysql',93630),('mysql','http://blog.csdn.net/column/details/14121.html?time=1506211202.140933','如何让Mysql跑的更快',86396),('mysql','http://blog.csdn.net/column/details/mysqlzl544434558.html?time=1506211202.140943','项目中积累的mysql使用经验',80920),('mysql','http://blog.csdn.net/column/details/14622.html?time=1506211202.406612','MySQL',4033),('mysql','http://blog.csdn.net/column/details/16135.html?time=1506211202.406668','Mysql架构设计',2801),('mysql','http://blog.csdn.net/column/details/16687.html?time=1506211202.406678','Mysql学习与实践笔记',2571),('设计模式','http://blog.csdn.net/column/details/designpatternbylmb.html?time=1506211202.450807','大话设计模式',25088),('设计模式','http://blog.csdn.net/column/details/designpatternforios.html?time=1506211202.450836','设计模式之深入学习IOS版',24380),('设计模式','http://blog.csdn.net/column/details/cppdesignpattern.html?time=1506211202.450843','C++设计模式',24372),('设计模式','http://blog.csdn.net/column/details/16366.html?time=1506211202.45085','设计模式讲解与代码实践',23893),('设计模式','http://blog.csdn.net/column/details/feihedp.html?time=1506211202.450858','浅显易懂的设计模式',23642),('设计模式','http://blog.csdn.net/column/details/12906.html?time=1506211202.450867','小话设计模式',22949),('mysql','http://blog.csdn.net/column/details/mysql56-refer.html?time=1506211203.351507','MySQL 5.6 参考',5942),('mysql','http://blog.csdn.net/column/details/shenruqianchu-mysql.html?time=1506211203.351532','深入浅出Mysql',5439),('mysql','http://blog.csdn.net/column/details/15343.html?time=1506211203.351541','史上最全的MySQL基础教程',5002),('mysql','http://blog.csdn.net/column/details/13738.html?time=1506211203.351549','MySql及NoSQL相关',4620),('mysql','http://blog.csdn.net/column/details/16578.html?time=1506211203.351557','MYSQL',4313),('设计模式','http://blog.csdn.net/column/details/shejimoshi1.html?time=1506211203.3902','设计模式',4728),('设计模式','http://blog.csdn.net/column/details/qkcoder.html?time=1506211203.39023','C++设计模式',4438),('设计模式','http://blog.csdn.net/column/details/15604.html?time=1506211203.390257','Head First设计模式',4415),('设计模式','http://blog.csdn.net/column/details/17223.html?time=1506211204.331573','设计模式篇',1312),('设计模式','http://blog.csdn.net/column/details/zhdldesignpattern.html?time=1506211204.331609','设计模式之木叶村之旅',1214),('设计模式','http://blog.csdn.net/column/details/15600.html?time=1506211204.331634','设计模式小解',1112),('设计模式','http://blog.csdn.net/column/details/14268.html?time=1506211204.331644','C# 设计模式',861),('设计模式','http://blog.csdn.net/column/details/designpatternsumarry.html?time=1506211204.331651','设计模式',805),('mysql','http://blog.csdn.net/column/details/15364.html?time=1506211204.380163','MySQL',2416),('mysql','http://blog.csdn.net/column/details/17229.html?time=1506211204.38019','mysql',2265),('mysql','http://blog.csdn.net/column/details/13213.html?time=1506211204.380198','Mysql基本使用',2233),('mysql','http://blog.csdn.net/column/details/15133.html?time=1506211204.380206','MySQL基本知识',2164),('mysql','http://blog.csdn.net/column/details/16190.html?time=1506211204.380214','mysql',1807),('mysql','http://blog.csdn.net/column/details/15775.html?time=1506211204.380225','MySQL详解',1300),('mysql','http://blog.csdn.net/column/details/mysql1209.html?time=1506211205.5187','mysql优化',7627),('mysql','http://blog.csdn.net/column/details/16983.html?time=1506211205.51878','MySQL从入门到精通',6844),('mysql','http://blog.csdn.net/column/details/mysql1.html?time=1506211205.518789','踟蹰MySQL',6710),('mysql','http://blog.csdn.net/column/details/13369.html?time=1506211205.518797','mysql的使用',6518),('mysql','http://blog.csdn.net/column/details/13509.html?time=1506211205.518804','MySQl数据库嵌入式开发',6302),('设计模式','http://blog.csdn.net/column/details/13865.html?time=1506211205.569079','java设计模式',1672),('设计模式','http://blog.csdn.net/column/details/15456.html?time=1506211205.569122','常用Java设计模式系列',1664),('设计模式','http://blog.csdn.net/column/details/15026.html?time=1506211205.569131','Java 设计模式',1574),('设计模式','http://blog.csdn.net/column/details/16040.html?time=1506211205.569139','java设计模式',1428),('设计模式','http://blog.csdn.net/column/details/13662.html?time=1506211205.569145','Java设计模式学习',1417),('设计模式','http://blog.csdn.net/column/details/16088.html?time=1506211205.569152','设计模式',1332),('设计模式','http://blog.csdn.net/column/details/14288.html?time=1506211206.449793','设计模式',2518),('设计模式','http://blog.csdn.net/column/details/12965.html?time=1506211206.449822','设计模式',2259),('设计模式','http://blog.csdn.net/column/details/14987.html?time=1506211206.44983','设计模式',2200),('设计模式','http://blog.csdn.net/column/details/14187.html?time=1506211206.44984','设计模式-java',1851),('设计模式','http://blog.csdn.net/column/details/15050.html?time=1506211206.449845','设计模式',1799),('设计模式','http://blog.csdn.net/column/details/java-design-pattern.html?time=1506211207.414391','Java设计模式',3023),('设计模式','http://blog.csdn.net/column/details/yrp-design-pattern.html?time=1506211207.414426','设计模式与应用',3017),('设计模式','http://blog.csdn.net/column/details/16218.html?time=1506211207.414443','设计模式',2796),('设计模式','http://blog.csdn.net/column/details/16553.html?time=1506211207.414454','设计模式',2790),('设计模式','http://blog.csdn.net/column/details/15028.html?time=1506211207.414465','设计模式',2590),('设计模式','http://blog.csdn.net/column/details/designpattern-qiu.html?time=1506211263.015551','设计模式',12098),('设计模式','http://blog.csdn.net/column/details/mydesignpatterns.html?time=1506211263.015577','设计模式通俗讲解&&C++实现',12043),('设计模式','http://blog.csdn.net/column/details/designpatternsharing.html?time=1506211263.015587','设计模式',11933),('设计模式','http://blog.csdn.net/column/details/java-design-mode.html?time=1506211263.015593','java设计模式',11923),('设计模式','http://blog.csdn.net/column/details/theonegis-design.html?time=1506211263.015602','设计模式学习笔记',11588),('设计模式','http://blog.csdn.net/column/details/design-patterns001.html?time=1506211263.015609','设计模式的六大原则',11526),('设计模式','http://blog.csdn.net/column/details/desginpattern.html?time=1506211263.015616','设计模式',11523),('mysql','http://blog.csdn.net/column/details/yinfeng-mysql.html?time=1506211270.929278','MySQL内核与性能优化',9936),('mysql','http://blog.csdn.net/column/details/13281.html?time=1506211270.929313','MySQL-数据库-JDBC',9291),('mysql','http://blog.csdn.net/column/details/13516.html?time=1506211270.929323','MySQL路线',8381),('mysql','http://blog.csdn.net/column/details/16623.html?time=1506211270.929333','MySQL源码研究',7768),('mysql','http://blog.csdn.net/column/details/13337.html?time=1506211287.12365','mysql数据库',12040),('mysql','http://blog.csdn.net/column/details/mysqlbywangjianan.html?time=1506211287.123676','mysql数据库',11639),('mysql','http://blog.csdn.net/column/details/13489.html?time=1506211287.123687','MySQL基础知识大全',11227),('mysql','http://blog.csdn.net/column/details/13534.html?time=1506211287.123693','Mysql系列',11221),('mysql','http://blog.csdn.net/column/details/14861.html?time=1506211288.091776','高性能MySQL',15043),('mysql','http://blog.csdn.net/column/details/13301.html?time=1506211288.091851','MySQL',12443),('mysql','http://blog.csdn.net/column/details/wenniuwuren-mysql.html?time=1506211289.098515','MySQL 入门到调优',15518),('mysql','http://blog.csdn.net/column/details/studymysql.html?time=1506211289.098537','MySQL数据库学习',15356),('mysql','http://blog.csdn.net/column/details/tangowl-mysql-intro.html?time=1506211290.183464','MySQL 入门教程',20928),('mysql','http://blog.csdn.net/column/details/mysql-dablelv.html?time=1506211290.183513','MySQL基础',20775),('mysql','http://blog.csdn.net/column/details/15548.html?time=1506211290.183522','数据库(MySQL)',20326),('mysql','http://blog.csdn.net/column/details/13881.html?time=1506211290.183529','mysql索引与优化',19819),('mysql','http://blog.csdn.net/column/details/mysqlwu.html?time=1506211290.183535','MySQL必知必会学习笔记',19727),('mysql','http://blog.csdn.net/column/details/13220.html?time=1506211314.273705','mysql',33948),('mysql','http://blog.csdn.net/column/details/mysql-001.html?time=1506211314.273739','高性能MySQL',31972),('mysql','http://blog.csdn.net/column/details/15651.html?time=1506211314.273748','MySql数据库调优',29002),('设计模式','http://blog.csdn.net/column/details/14723.html?time=1506211317.31686','设计模式',5753),('设计模式','http://blog.csdn.net/column/details/16634.html?time=1506211317.316884','设计模式',5730),('设计模式','http://blog.csdn.net/column/details/gof-23design.html?time=1506211317.316892','Gof 设计模式',5707),('设计模式','http://blog.csdn.net/column/details/hgbshejimoshi.html?time=1506211317.316898','设计模式',5680),('设计模式','http://blog.csdn.net/column/details/design-patterns-xue.html?time=1506211317.316904','设计模式',5666),('设计模式','http://blog.csdn.net/column/details/12992.html?time=1506211317.316913','设计模式备忘录',5299),('设计模式','http://blog.csdn.net/column/details/designpatterns-haoz.html?time=1506211317.316919','设计模式解析',5125),('设计模式','http://blog.csdn.net/column/details/designpatternsjiange.html?time=1506211317.316925','设计模式',5077),('设计模式','http://blog.csdn.net/column/details/15193.html?time=1506211318.313814','赵建银-设计模式学习',3806),('设计模式','http://blog.csdn.net/column/details/designpatternnotewyj.html?time=1506211318.31384','设计模式笔记整理',3732),('设计模式','http://blog.csdn.net/column/details/javamodel.html?time=1506211318.313848','JAVA设计模式',3717),('设计模式','http://blog.csdn.net/column/details/13164.html?time=1506211318.313875','设计模式',3653),('设计模式','http://blog.csdn.net/column/details/javascriptdesgin.html?time=1506211318.313882','javascript设计模式',3609),('设计模式','http://blog.csdn.net/column/details/16632.html?time=1506211318.313888','设计模式学习笔记',3574),('设计模式','http://blog.csdn.net/column/details/design-pattern-zen.html?time=1506211318.313897','《设计模式之禅》读书笔记',3373),('设计模式','http://blog.csdn.net/column/details/15839.html?time=1506211318.313903','设计模式',3369),('设计模式','http://blog.csdn.net/column/details/14533.html?time=1506211319.283352','23种设计模式',6697),('设计模式','http://blog.csdn.net/column/details/javadesign-pattern.html?time=1506211319.283382','JAVA设计模式笔记',6363),('设计模式','http://blog.csdn.net/column/details/tuimo.html?time=1506211319.28339','设计模式',6319),('设计模式','http://blog.csdn.net/column/details/14351.html?time=1506211319.2834','java23种设计模式',6132),('设计模式','http://blog.csdn.net/column/details/14410.html?time=1506211319.283407','设计模式',6081),('设计模式','http://blog.csdn.net/column/details/14875.html?time=1506211320.844854','设计模式',7317),('设计模式','http://blog.csdn.net/column/details/design-pattern-123.html?time=1506211320.844901','设计模式',7271),('设计模式','http://blog.csdn.net/column/details/chaogeshejimoshi.html?time=1506211320.844909','Java设计模式简明教程',7238),('设计模式','http://blog.csdn.net/column/details/pattern23.html?time=1506211320.844916','设计模式',7147),('设计模式','http://blog.csdn.net/column/details/design-pattern-lin.html?time=1506211320.844923','设计模式',7114),('设计模式','http://blog.csdn.net/column/details/14948.html?time=1506211320.84493','php，java实现设计模式',7087),('设计模式','http://blog.csdn.net/column/details/13439.html?time=1506211320.844936','JavaScript设计模式',7103),('设计模式','http://blog.csdn.net/column/details/xfzsjms.html?time=1506211320.844945','设计模式',6880),('设计模式','http://blog.csdn.net/column/details/designpattern2.html?time=1506211320.844952','设计模式',6736),('设计模式','http://blog.csdn.net/column/details/learnofdesignpattern.html?time=1506211321.428957','设计模式',8459),('设计模式','http://blog.csdn.net/column/details/design--mode.html?time=1506211321.428991','大话设计模式',8010),('设计模式','http://blog.csdn.net/column/details/14866.html?time=1506211321.429001','设计模式之(C++实现)',7899),('设计模式','http://blog.csdn.net/column/details/shejimoshismile.html?time=1506211321.429008','设计模式',7887),('设计模式','http://blog.csdn.net/column/details/guus-sjms.html?time=1506211321.429014','设计模式大全',7843),('mysql','http://blog.csdn.net/column/details/detailofmysql.html?time=1506211324.452436','MySQL详解',50008),('mysql','http://blog.csdn.net/column/details/oracle2mysql.html?time=1506211324.452488','从Oracle到MySQL',45666),('mysql','http://blog.csdn.net/column/details/13005.html?time=1506211324.452496','MySQL必知必会',45259),('mysql','http://blog.csdn.net/column/details/cppformysqlpro.html?time=1506211324.452505','visual c++ 2008进行MySQL编程（ODBC）',44439),('mysql','http://blog.csdn.net/column/details/13794.html?time=1506211325.387193','MySQL',173244),('mysql','http://blog.csdn.net/column/details/mysqlnote.html?time=1506211325.387231','MySQL进阶指南',149187),('mysql','http://blog.csdn.net/column/details/mysql-1.html?time=1506211325.387244','MySQL从入门到精通',129616),('mysql','http://blog.csdn.net/column/details/mysql-daydayup.html?time=1506211325.387255','Mysql提升',119834),('mysql','http://blog.csdn.net/column/details/mysqlsummary.html?time=1506211352.655108','Mysql数据库总结',74431),('mysql','http://blog.csdn.net/column/details/mysqlpri.html?time=1506211352.655135','思考mysql内核之初级系列',67180),('mysql','http://blog.csdn.net/column/details/15260.html?time=1506211352.655143','MySQL技术',60235),('mysql','http://blog.csdn.net/column/details/16138.html?time=1506211352.655153','史上最简单的 MySQL 教程',52017),('mysql','http://blog.csdn.net/column/details/conquermysql.html?time=1506211352.655158','征服数据库之mysql',51371),('设计模式','http://blog.csdn.net/column/details/sjmsjc.html?time=1506211403.135355','设计模式',10073),('设计模式','http://blog.csdn.net/column/details/designpatternsummary.html?time=1506211403.135415','大话设计模式',9842),('设计模式','http://blog.csdn.net/column/details/shenruqianchu-design.html?time=1506211403.135432','深入浅出设计模式',9792),('设计模式','http://blog.csdn.net/column/details/13758.html?time=1506211404.100331','java设计模式学习',11245),('设计模式','http://blog.csdn.net/column/details/zysjms.html?time=1506211404.100356','设计模式',11164),('设计模式','http://blog.csdn.net/column/details/designmodel.html?time=1506211404.100364','设计模式',10868),('设计模式','http://blog.csdn.net/column/details/javapatternexample.html?time=1506211404.100371','java设计模式实例',10644),('设计模式','http://blog.csdn.net/column/details/designpatterns.html?time=1506211404.981423','大话设计模式',74930),('设计模式','http://blog.csdn.net/column/details/design2.html?time=1506211404.98147','乱砍设计模式',74475),('设计模式','http://blog.csdn.net/column/details/designerpattern.html?time=1506211405.982416','IOS设计模式浅析',34305),('设计模式','http://blog.csdn.net/column/details/phpusedesignpattern.html?time=1506211405.982469','设计模式之PHP项目应用',33189),('设计模式','http://blog.csdn.net/column/details/artofdesignpattern.html?time=1506211405.982479','设计模式的艺术',32563),('设计模式','http://blog.csdn.net/column/details/shejimoshishengsheng.html?time=1506211405.98249','设计模式',31718),('设计模式','http://blog.csdn.net/column/details/wenqiang.html?time=1506211407.064488','设计模式之禅',37901),('设计模式','http://blog.csdn.net/column/details/gof-design-pattern.html?time=1506211407.064551','小清新GoF23种设计模式',37628),('设计模式','http://blog.csdn.net/column/details/13856.html?time=1506211407.064561','设计模式',37135),('设计模式','http://blog.csdn.net/column/details/my-designpatterns.html?time=1506211407.06457','设计模式之禅',36388),('设计模式','http://blog.csdn.net/column/details/lxydahua.html?time=1506211447.37516','大话设计模式',13064),('设计模式','http://blog.csdn.net/column/details/walker1.html?time=1506211447.375204','设计模式C++实现',12808),('设计模式','http://blog.csdn.net/column/details/patternofjie.html?time=1506211447.375218','设计模式',12721),('设计模式','http://blog.csdn.net/column/details/13400.html?time=1506211447.375234','设计模式',12508),('设计模式','http://blog.csdn.net/column/details/13891.html?time=1506211447.375248','《设计模式》',12370),('设计模式','http://blog.csdn.net/column/details/zhenghaozhuanlan.html?time=1506211447.375261','设计模式',12290),('设计模式','http://blog.csdn.net/column/details/lius0011.html?time=1506211447.37527','设计模式实例',12196),('设计模式','http://blog.csdn.net/column/details/13088.html?time=1506211448.445731','设计模式',13945),('设计模式','http://blog.csdn.net/column/details/javadesignmodel.html?time=1506211448.44576','23天征服--23种设计模式',13702),('设计模式','http://blog.csdn.net/column/details/13196.html?time=1506211449.465894','设计模式',15902),('设计模式','http://blog.csdn.net/column/details/suski-pattern.html?time=1506211449.465927','《大话设计模式》读后感',15581),('设计模式','http://blog.csdn.net/column/details/mydesignpattern35.html?time=1506211449.465939','设计模式之全解析',14975),('设计模式','http://blog.csdn.net/column/details/gof-design-patterns.html?time=1506211449.465945','GoF设计模式',14874),('设计模式','http://blog.csdn.net/column/details/shms520.html?time=1506211449.465951','设计模式',14778),('设计模式','http://blog.csdn.net/column/details/note-design-pattern.html?time=1506211449.465957','设计模式笔记',14674),('设计模式','http://blog.csdn.net/column/details/javadesignpattern.html?time=1506211450.505143','设计模式',17142),('设计模式','http://blog.csdn.net/column/details/mdmcsdn1.html?time=1506211450.505182','设计模式',16754),('设计模式','http://blog.csdn.net/column/details/design-pattern-hxm.html?time=1506211450.50519','设计模式之android',16679),('设计模式','http://blog.csdn.net/column/details/16401.html?time=1506211450.505197','24种设计模式',16672),('设计模式','http://blog.csdn.net/column/details/ourdesignpattern.html?time=1506211450.505205','设计模式',16341),('设计模式','http://blog.csdn.net/column/details/extenddesignpattern.html?time=1506211497.780599','可扩展性与设计模式',19056),('设计模式','http://blog.csdn.net/column/details/designpatterns-night.html?time=1506211497.780629','设计模式',18257),('设计模式','http://blog.csdn.net/column/details/design-pattern.html?time=1506211497.780637','设计模式在实际项目中的应用',18237),('设计模式','http://blog.csdn.net/column/details/cainiaojava.html?time=1506211506.881484','菜鸟版JAVA设计模式',21148),('设计模式','http://blog.csdn.net/column/details/designpatterns-qt.html?time=1506211506.881507','设计模式(Qt版)',21071),('设计模式','http://blog.csdn.net/column/details/dhsjms.html?time=1506211506.881521','大话设计模式',20086),('设计模式','http://blog.csdn.net/column/details/sjms.html?time=1506211506.881529','设计模式',19633),('设计模式','http://blog.csdn.net/column/details/huohuo.html?time=1506211506.881536','大话设计模式',19367),('设计模式','http://blog.csdn.net/column/details/design-pattern-java.html?time=1506211521.960425','设计模式（JAVA）',28068),('设计模式','http://blog.csdn.net/column/details/14308.html?time=1506211521.960451','设计模式之美',27618),('设计模式','http://blog.csdn.net/column/details/designaction.html?time=1506211521.960458','设计模式',27412),('设计模式','http://blog.csdn.net/column/details/baadf00df00dabadfds0.html?time=1506211521.960469','初探设计模式（C++实现）',26073),('设计模式','http://blog.csdn.net/column/details/ef3c5ec0-f3c9-48af.html?time=1506211521.960476','设计模式精解',25841),('设计模式','http://blog.csdn.net/column/details/lxq-shejimoshi.html?time=1506211523.095741','设计模式--Java描述',22697),('设计模式','http://blog.csdn.net/column/details/12848.html?time=1506211523.095769','一天一个设计模式',22666),('设计模式','http://blog.csdn.net/column/details/designpattern-cassie.html?time=1506211523.095785','设计模式',22449),('设计模式','http://blog.csdn.net/column/details/sjmsxuexibiji.html?time=1506211523.095798','设计模式学习笔记',22421),('设计模式','http://blog.csdn.net/column/details/designpattern32.html?time=1506211523.09581','设计模式',22372),('设计模式','http://blog.csdn.net/column/details/dhsjms-cplusplus.html?time=1506211524.791051','《大话设计模式》C++实现',28653),('设计模式','http://blog.csdn.net/column/details/17017.html?time=1506211524.791076','快速扩展和迭代 - 设计模式',28506),('设计模式','http://blog.csdn.net/column/details/design--pattern.html?time=1506211524.791084','设计模式',28281),('设计模式','http://blog.csdn.net/column/details/ds-1.html?time=1506211524.79109','大话设计模式',28222),('设计模式','http://blog.csdn.net/column/details/designpattern1.html?time=1506211525.666944','设计模式',9358),('设计模式','http://blog.csdn.net/column/details/dahua-shejimoshi.html?time=1506211525.66697','大话设计模式',9289),('设计模式','http://blog.csdn.net/column/details/designpattern001.html?time=1506211525.66698','设计模式实战',9154),('设计模式','http://blog.csdn.net/column/details/habren-design-patter.html?time=1506211525.666991','跟着Jason学 设计模式',8831),('设计模式','http://blog.csdn.net/column/details/dpatterns.html?time=1506211525.666998','设计模式',8703),('设计模式','http://blog.csdn.net/column/details/learn-design-pattern.html?time=1506211525.667025','初识设计模式',8555),('设计模式','http://blog.csdn.net/column/details/oodm.html?time=1506211571.321133','面向对象设计模式',88906),('设计模式','http://blog.csdn.net/column/details/14788.html?time=1506211572.250066','设计模式(Java)',44135),('设计模式','http://blog.csdn.net/column/details/xing-designpattern.html?time=1506211572.250105','写最好的设计模式专栏',43542),('设计模式','http://blog.csdn.net/column/details/patternsdesign.html?time=1506211572.250138','设计模式笔记',40631),('设计模式','http://blog.csdn.net/column/details/design-pattern23.html?time=1506211572.250151','C#设计模式',40403),('设计模式','http://blog.csdn.net/column/details/softwaredesign.html?time=1506211572.250162','设计模式',38876),('设计模式','http://blog.csdn.net/column/details/oodesign.html?time=1506211573.356561','设计模式攻略',50938),('设计模式','http://blog.csdn.net/column/details/my-designpattern.html?time=1506211573.356603','设计模式与系统架构',46375),('设计模式','http://blog.csdn.net/column/details/designpatterns4java.html?time=1506211573.356611','23种设计模式 (java通俗演义)',45591),('设计模式','http://blog.csdn.net/column/details/design-pattern-homer.html?time=1506211573.356618','设计模式',45419),('设计模式','http://blog.csdn.net/column/details/shuangde800-design.html?time=1506211600.518073','设计模式征途',56562),('设计模式','http://blog.csdn.net/column/details/designmodels.html?time=1506211600.518102','Java设计模式菜鸟系列',56044),('设计模式','http://blog.csdn.net/column/details/dahua.html?time=1506211600.518114','大话设计模式',53223),('设计模式','http://blog.csdn.net/column/details/phpdesign.html?time=1506211600.518121','PHP设计模式',52607),('设计模式','http://blog.csdn.net/column/details/hacke2-designpatter.html?time=1506211600.518127','设计模式读书笔记与总结',52136),('设计模式','http://blog.csdn.net/column/details/cpp-design-pattern.html?time=1506211616.714294','C++设计模式',302566),('设计模式','http://blog.csdn.net/column/details/designpattern-xt.html?time=1506211616.714318','DesignPattern(设计模式)',248057),('设计模式','http://blog.csdn.net/column/details/mydesignpattern.html?time=1506211616.714327','我所理解的设计模式',232711),('设计模式','http://blog.csdn.net/column/details/code-design.html?time=1506211618.639027','设计模式融入生活',127563),('设计模式','http://blog.csdn.net/column/details/designpatternforb.html?time=1506211618.639082','\"围观\"设计模式',112700),('设计模式','http://blog.csdn.net/column/details/pattern.html?time=1506384001.784888','设计模式',1294448),('设计模式','http://blog.csdn.net/column/details/design.html?time=1506384001.784922','设计模式C++实现',465311),('设计模式','http://blog.csdn.net/column/details/designpatternzh.html?time=1506384001.784933','跟着ZHONGHuan学习设计模式',370277),('mysql','http://blog.csdn.net/column/details/mysqlcentury.html?time=1506384001.818461','MySQL进阶',1227439),('mysql','http://blog.csdn.net/column/details/mysql-in-action.html?time=1506384001.818489','mysql 由浅入深',365929),('mysql','http://blog.csdn.net/column/details/mysqltw.html?time=1506384001.818497','MySQL图文进阶',356497),('mysql','http://blog.csdn.net/column/details/mysqldba.html?time=1506384001.818507','MySQL管理开发由浅入深',222704),('mysql','http://blog.csdn.net/column/details/evermysql.html?time=1506384001.818515','MySQL',192371),('设计模式','http://blog.csdn.net/column/details/design-patterns.html?time=1506384001.896203','设计模式',162800),('设计模式','http://blog.csdn.net/column/details/csharpdesignpattern.html?time=1506384001.896228','C#设计模式',147909),('设计模式','http://blog.csdn.net/column/details/chenssy-design.html?time=1506384001.896239','设计模式读书笔记',133454),('设计模式','http://blog.csdn.net/column/details/13826.html?time=1506384001.941051','云设计模式',64719),('设计模式','http://blog.csdn.net/column/details/eat-designpattern.html?time=1506384001.9411','硬啃设计模式',63329),('设计模式','http://blog.csdn.net/column/details/headfirst.html?time=1506384001.941109','HeadFirst 设计模式学习笔记',60943),('设计模式','http://blog.csdn.net/column/details/clouddesignpattern.html?time=1506384001.941115','云计算设计模式',60779),('设计模式','http://blog.csdn.net/column/details/12698.html?time=1506384001.941124','Java设计模式实战',57251),('mysql','http://blog.csdn.net/column/details/mysql-tzx.html?time=1506384001.978371','mysql知识汇总和提高',110420),('mysql','http://blog.csdn.net/column/details/zhy-study-mysql.html?time=1506384001.97841','Mysql',93774),('mysql','http://blog.csdn.net/column/details/14121.html?time=1506384001.97842','如何让Mysql跑的更快',86447),('mysql','http://blog.csdn.net/column/details/mysqlzl544434558.html?time=1506384001.978429','项目中积累的mysql使用经验',81119),('mysql','http://blog.csdn.net/column/details/mysqlstudy.html?time=1506384002.019323','mysql学习',28138),('mysql','http://blog.csdn.net/column/details/14507.html?time=1506384002.019352','MySQL学习记录',26309),('设计模式','http://blog.csdn.net/column/details/16366.html?time=1506384002.494403','设计模式讲解与代码实践',25246),('设计模式','http://blog.csdn.net/column/details/designpatternbylmb.html?time=1506384002.494439','大话设计模式',25174),('设计模式','http://blog.csdn.net/column/details/cppdesignpattern.html?time=1506384002.494452','C++设计模式',24417),('设计模式','http://blog.csdn.net/column/details/designpatternforios.html?time=1506384002.494459','设计模式之深入学习IOS版',24395),('设计模式','http://blog.csdn.net/column/details/feihedp.html?time=1506384002.494467','浅显易懂的设计模式',23669),('设计模式','http://blog.csdn.net/column/details/12906.html?time=1506384002.494478','小话设计模式',23011),('mysql','http://blog.csdn.net/column/details/14622.html?time=1506384002.553486','MySQL',4055),('mysql','http://blog.csdn.net/column/details/16135.html?time=1506384002.553541','Mysql架构设计',2838),('mysql','http://blog.csdn.net/column/details/16687.html?time=1506384002.553551','Mysql学习与实践笔记',2679),('设计模式','http://blog.csdn.net/column/details/shejimoshi1.html?time=1506384003.260842','设计模式',4732),('设计模式','http://blog.csdn.net/column/details/qkcoder.html?time=1506384003.260892','C++设计模式',4456),('设计模式','http://blog.csdn.net/column/details/15604.html?time=1506384003.260901','Head First设计模式',4425),('mysql','http://blog.csdn.net/column/details/mysql56-refer.html?time=1506384003.301059','MySQL 5.6 参考',5963),('mysql','http://blog.csdn.net/column/details/shenruqianchu-mysql.html?time=1506384003.301109','深入浅出Mysql',5460),('mysql','http://blog.csdn.net/column/details/15343.html?time=1506384003.301128','史上最全的MySQL基础教程',5023),('mysql','http://blog.csdn.net/column/details/13738.html?time=1506384003.301143','MySql及NoSQL相关',4652),('mysql','http://blog.csdn.net/column/details/16578.html?time=1506384003.301158','MYSQL',4413),('设计模式','http://blog.csdn.net/column/details/16088.html?time=1506384004.386704','设计模式',1335),('设计模式','http://blog.csdn.net/column/details/zhdldesignpattern.html?time=1506384004.386758','设计模式之木叶村之旅',1214),('设计模式','http://blog.csdn.net/column/details/15600.html?time=1506384004.386766','设计模式小解',1119),('设计模式','http://blog.csdn.net/column/details/14268.html?time=1506384004.386776','C# 设计模式',864),('设计模式','http://blog.csdn.net/column/details/designpatternsumarry.html?time=1506384004.386783','设计模式',805),('mysql','http://blog.csdn.net/column/details/15364.html?time=1506384004.797922','MySQL',2455),('mysql','http://blog.csdn.net/column/details/17229.html?time=1506384004.798016','mysql',2296),('mysql','http://blog.csdn.net/column/details/13213.html?time=1506384004.798027','Mysql基本使用',2236),('mysql','http://blog.csdn.net/column/details/15133.html?time=1506384004.798035','MySQL基本知识',2183),('mysql','http://blog.csdn.net/column/details/16190.html?time=1506384004.798044','mysql',1814),('mysql','http://blog.csdn.net/column/details/15775.html?time=1506384004.798054','MySQL详解',1306),('mysql','http://blog.csdn.net/column/details/mysql1209.html?time=1506384005.454495','mysql优化',7691),('mysql','http://blog.csdn.net/column/details/16983.html?time=1506384005.454579','MySQL从入门到精通',6905),('mysql','http://blog.csdn.net/column/details/mysql1.html?time=1506384005.454589','踟蹰MySQL',6725),('mysql','http://blog.csdn.net/column/details/13369.html?time=1506384005.454596','mysql的使用',6525),('mysql','http://blog.csdn.net/column/details/13509.html?time=1506384005.454603','MySQl数据库嵌入式开发',6354),('设计模式','http://blog.csdn.net/column/details/13865.html?time=1506384005.540704','java设计模式',1678),('设计模式','http://blog.csdn.net/column/details/15456.html?time=1506384005.540768','常用Java设计模式系列',1671),('设计模式','http://blog.csdn.net/column/details/15026.html?time=1506384005.540786','Java 设计模式',1578),('设计模式','http://blog.csdn.net/column/details/16040.html?time=1506384005.540802','java设计模式',1431),('设计模式','http://blog.csdn.net/column/details/13662.html?time=1506384005.540814','Java设计模式学习',1421),('设计模式','http://blog.csdn.net/column/details/17223.html?time=1506384005.540827','设计模式篇',1399),('设计模式','http://blog.csdn.net/column/details/14288.html?time=1506384006.475169','设计模式',2535),('设计模式','http://blog.csdn.net/column/details/12965.html?time=1506384006.475207','设计模式',2268),('设计模式','http://blog.csdn.net/column/details/14987.html?time=1506384006.475217','设计模式',2205),('设计模式','http://blog.csdn.net/column/details/14187.html?time=1506384006.475228','设计模式-java',1855),('设计模式','http://blog.csdn.net/column/details/yrp-design-pattern.html?time=1506384007.429613','设计模式与应用',3027),('设计模式','http://blog.csdn.net/column/details/java-design-pattern.html?time=1506384007.429686','Java设计模式',3026),('设计模式','http://blog.csdn.net/column/details/16553.html?time=1506384007.429696','设计模式',2818),('设计模式','http://blog.csdn.net/column/details/16218.html?time=1506384007.429702','设计模式',2813),('设计模式','http://blog.csdn.net/column/details/15028.html?time=1506384007.429711','设计模式',2602),('设计模式','http://blog.csdn.net/column/details/learnofdesignpattern.html?time=1506384047.80932','设计模式',8466),('设计模式','http://blog.csdn.net/column/details/design--mode.html?time=1506384047.809346','大话设计模式',8026),('设计模式','http://blog.csdn.net/column/details/14866.html?time=1506384047.809355','设计模式之(C++实现)',7928),('设计模式','http://blog.csdn.net/column/details/shejimoshismile.html?time=1506384047.809362','设计模式',7900),('设计模式','http://blog.csdn.net/column/details/guus-sjms.html?time=1506384047.809369','设计模式大全',7852),('mysql','http://blog.csdn.net/column/details/yinfeng-mysql.html?time=1506384071.151976','MySQL内核与性能优化',9954),('mysql','http://blog.csdn.net/column/details/13281.html?time=1506384071.152005','MySQL-数据库-JDBC',9303),('mysql','http://blog.csdn.net/column/details/13516.html?time=1506384071.152014','MySQL路线',8400),('mysql','http://blog.csdn.net/column/details/16623.html?time=1506384071.152039','MySQL源码研究',8194),('mysql','http://blog.csdn.net/column/details/13220.html?time=1506384087.392247','mysql',34033),('mysql','http://blog.csdn.net/column/details/mysql-001.html?time=1506384087.392275','高性能MySQL',32030),('mysql','http://blog.csdn.net/column/details/15651.html?time=1506384087.392284','MySql数据库调优',29203),('mysql','http://blog.csdn.net/column/details/13337.html?time=1506384088.533416','mysql数据库',12077),('mysql','http://blog.csdn.net/column/details/mysqlbywangjianan.html?time=1506384088.533441','mysql数据库',11677),('mysql','http://blog.csdn.net/column/details/13489.html?time=1506384088.533451','MySQL基础知识大全',11267),('mysql','http://blog.csdn.net/column/details/13534.html?time=1506384088.533457','Mysql系列',11229),('mysql','http://blog.csdn.net/column/details/14861.html?time=1506384089.562475','高性能MySQL',15142),('mysql','http://blog.csdn.net/column/details/13301.html?time=1506384089.562511','MySQL',12459),('mysql','http://blog.csdn.net/column/details/wenniuwuren-mysql.html?time=1506384090.498479','MySQL 入门到调优',15568),('mysql','http://blog.csdn.net/column/details/studymysql.html?time=1506384090.498511','MySQL数据库学习',15373),('设计模式','http://blog.csdn.net/column/details/14723.html?time=1506384108.612564','设计模式',5796),('设计模式','http://blog.csdn.net/column/details/16634.html?time=1506384108.61259','设计模式',5770),('设计模式','http://blog.csdn.net/column/details/gof-23design.html?time=1506384108.612597','Gof 设计模式',5718),('设计模式','http://blog.csdn.net/column/details/hgbshejimoshi.html?time=1506384108.612604','设计模式',5683),('设计模式','http://blog.csdn.net/column/details/design-patterns-xue.html?time=1506384108.612619','设计模式',5680),('设计模式','http://blog.csdn.net/column/details/12992.html?time=1506384108.612629','设计模式备忘录',5315),('设计模式','http://blog.csdn.net/column/details/designpatterns-haoz.html?time=1506384108.612635','设计模式解析',5138),('设计模式','http://blog.csdn.net/column/details/designpatternsjiange.html?time=1506384108.612642','设计模式',5107),('设计模式','http://blog.csdn.net/column/details/15193.html?time=1506384109.716462','赵建银-设计模式学习',3827),('设计模式','http://blog.csdn.net/column/details/16632.html?time=1506384109.716496','设计模式学习笔记',3752),('设计模式','http://blog.csdn.net/column/details/designpatternnotewyj.html?time=1506384109.716504','设计模式笔记整理',3742),('设计模式','http://blog.csdn.net/column/details/javamodel.html?time=1506384109.716511','JAVA设计模式',3722),('设计模式','http://blog.csdn.net/column/details/13164.html?time=1506384109.716517','设计模式',3667),('设计模式','http://blog.csdn.net/column/details/javascriptdesgin.html?time=1506384109.716524','javascript设计模式',3629),('设计模式','http://blog.csdn.net/column/details/15839.html?time=1506384109.716532','设计模式',3390),('设计模式','http://blog.csdn.net/column/details/design-pattern-zen.html?time=1506384109.716538','《设计模式之禅》读书笔记',3379),('设计模式','http://blog.csdn.net/column/details/14533.html?time=1506384110.755366','23种设计模式',6732),('设计模式','http://blog.csdn.net/column/details/javadesign-pattern.html?time=1506384110.755402','JAVA设计模式笔记',6387),('设计模式','http://blog.csdn.net/column/details/tuimo.html?time=1506384110.755412','设计模式',6323),('设计模式','http://blog.csdn.net/column/details/14351.html?time=1506384110.755436','java23种设计模式',6149),('设计模式','http://blog.csdn.net/column/details/14410.html?time=1506384110.755443','设计模式',6109),('mysql','http://blog.csdn.net/column/details/tangowl-mysql-intro.html?time=1506384111.630947','MySQL 入门教程',20980),('mysql','http://blog.csdn.net/column/details/mysql-dablelv.html?time=1506384111.630984','MySQL基础',20847),('mysql','http://blog.csdn.net/column/details/15548.html?time=1506384111.630999','数据库(MySQL)',20434),('mysql','http://blog.csdn.net/column/details/13881.html?time=1506384111.631013','mysql索引与优化',19868),('mysql','http://blog.csdn.net/column/details/mysqlwu.html?time=1506384111.631024','MySQL必知必会学习笔记',19770),('mysql','http://blog.csdn.net/column/details/detailofmysql.html?time=1506384125.750175','MySQL详解',50136),('mysql','http://blog.csdn.net/column/details/oracle2mysql.html?time=1506384125.750227','从Oracle到MySQL',45778),('mysql','http://blog.csdn.net/column/details/13005.html?time=1506384125.750254','MySQL必知必会',45785),('mysql','http://blog.csdn.net/column/details/cppformysqlpro.html?time=1506384125.750263','visual c++ 2008进行MySQL编程（ODBC）',44460),('mysql','http://blog.csdn.net/column/details/mysqlsummary.html?time=1506384126.89132','Mysql数据库总结',74811),('mysql','http://blog.csdn.net/column/details/mysqlpri.html?time=1506384126.891351','思考mysql内核之初级系列',67192),('mysql','http://blog.csdn.net/column/details/15260.html?time=1506384126.89136','MySQL技术',60295),('mysql','http://blog.csdn.net/column/details/16138.html?time=1506384126.89137','史上最简单的 MySQL 教程',52754),('mysql','http://blog.csdn.net/column/details/conquermysql.html?time=1506384126.891376','征服数据库之mysql',51434),('mysql','http://blog.csdn.net/column/details/13794.html?time=1506384147.844363','MySQL',174240),('mysql','http://blog.csdn.net/column/details/mysqlnote.html?time=1506384147.844405','MySQL进阶指南',149387),('mysql','http://blog.csdn.net/column/details/mysql-1.html?time=1506384147.844416','MySQL从入门到精通',129818),('mysql','http://blog.csdn.net/column/details/mysql-daydayup.html?time=1506384147.844436','Mysql提升',120141),('设计模式','http://blog.csdn.net/column/details/14875.html?time=1506384159.161033','设计模式',7346),('设计模式','http://blog.csdn.net/column/details/design-pattern-123.html?time=1506384159.161066','设计模式',7289),('设计模式','http://blog.csdn.net/column/details/chaogeshejimoshi.html?time=1506384159.161075','Java设计模式简明教程',7250),('设计模式','http://blog.csdn.net/column/details/13439.html?time=1506384159.161084','JavaScript设计模式',7209),('设计模式','http://blog.csdn.net/column/details/pattern23.html?time=1506384159.161092','设计模式',7155),('设计模式','http://blog.csdn.net/column/details/design-pattern-lin.html?time=1506384159.161098','设计模式',7126),('设计模式','http://blog.csdn.net/column/details/14948.html?time=1506384159.161104','php，java实现设计模式',7111),('设计模式','http://blog.csdn.net/column/details/xfzsjms.html?time=1506384159.161113','设计模式',6890),('设计模式','http://blog.csdn.net/column/details/designpattern2.html?time=1506384159.161121','设计模式',6741),('设计模式','http://blog.csdn.net/column/details/dhsjms-cplusplus.html?time=1506384162.344494','《大话设计模式》C++实现',28727),('设计模式','http://blog.csdn.net/column/details/17017.html?time=1506384162.344521','快速扩展和迭代 - 设计模式',28539),('设计模式','http://blog.csdn.net/column/details/design--pattern.html?time=1506384162.344528','设计模式',28315),('设计模式','http://blog.csdn.net/column/details/ds-1.html?time=1506384162.344542','大话设计模式',28237),('设计模式','http://blog.csdn.net/column/details/designpattern1.html?time=1506384190.664381','设计模式',9369),('设计模式','http://blog.csdn.net/column/details/dahua-shejimoshi.html?time=1506384190.664414','大话设计模式',9321),('设计模式','http://blog.csdn.net/column/details/designpattern001.html?time=1506384190.66443','设计模式实战',9184),('设计模式','http://blog.csdn.net/column/details/habren-design-patter.html?time=1506384190.664441','跟着Jason学 设计模式',8847),('设计模式','http://blog.csdn.net/column/details/dpatterns.html?time=1506384190.664447','设计模式',8718),('设计模式','http://blog.csdn.net/column/details/learn-design-pattern.html?time=1506384190.664454','初识设计模式',8569),('设计模式','http://blog.csdn.net/column/details/sjmsjc.html?time=1506384191.837606','设计模式',10097),('设计模式','http://blog.csdn.net/column/details/designpatternsummary.html?time=1506384191.837652','大话设计模式',9852),('设计模式','http://blog.csdn.net/column/details/shenruqianchu-design.html?time=1506384191.837662','深入浅出设计模式',9818),('设计模式','http://blog.csdn.net/column/details/13758.html?time=1506384192.864893','java设计模式学习',11306),('设计模式','http://blog.csdn.net/column/details/zysjms.html?time=1506384192.86492','设计模式',11184),('设计模式','http://blog.csdn.net/column/details/designmodel.html?time=1506384192.864943','设计模式',10882),('设计模式','http://blog.csdn.net/column/details/javapatternexample.html?time=1506384192.864957','java设计模式实例',10660),('设计模式','http://blog.csdn.net/column/details/designpattern-qiu.html?time=1506384223.031303','设计模式',12104),('设计模式','http://blog.csdn.net/column/details/mydesignpatterns.html?time=1506384223.031352','设计模式通俗讲解&&C++实现',12050),('设计模式','http://blog.csdn.net/column/details/designpatternsharing.html?time=1506384223.031362','设计模式',11953),('设计模式','http://blog.csdn.net/column/details/java-design-mode.html?time=1506384223.031368','java设计模式',11937),('设计模式','http://blog.csdn.net/column/details/theonegis-design.html?time=1506384223.031378','设计模式学习笔记',11605),('设计模式','http://blog.csdn.net/column/details/desginpattern.html?time=1506384223.031384','设计模式',11540),('设计模式','http://blog.csdn.net/column/details/design-patterns001.html?time=1506384223.03139','设计模式的六大原则',11537),('设计模式','http://blog.csdn.net/column/details/lxydahua.html?time=1506384224.078225','大话设计模式',13075),('设计模式','http://blog.csdn.net/column/details/walker1.html?time=1506384224.078261','设计模式C++实现',12835),('设计模式','http://blog.csdn.net/column/details/patternofjie.html?time=1506384224.07829','设计模式',12735),('设计模式','http://blog.csdn.net/column/details/13400.html?time=1506384224.078326','设计模式',12607),('设计模式','http://blog.csdn.net/column/details/13891.html?time=1506384224.078341','《设计模式》',12382),('设计模式','http://blog.csdn.net/column/details/zhenghaozhuanlan.html?time=1506384224.078351','设计模式',12303),('设计模式','http://blog.csdn.net/column/details/lius0011.html?time=1506384224.078361','设计模式实例',12199),('设计模式','http://blog.csdn.net/column/details/13088.html?time=1506384224.99892','设计模式',14005),('设计模式','http://blog.csdn.net/column/details/javadesignmodel.html?time=1506384224.998944','23天征服--23种设计模式',13737),('设计模式','http://blog.csdn.net/column/details/13196.html?time=1506384227.229145','设计模式',15935),('设计模式','http://blog.csdn.net/column/details/suski-pattern.html?time=1506384227.229173','《大话设计模式》读后感',15610),('设计模式','http://blog.csdn.net/column/details/mydesignpattern35.html?time=1506384227.229186','设计模式之全解析',15006),('设计模式','http://blog.csdn.net/column/details/gof-design-patterns.html?time=1506384227.229193','GoF设计模式',14901),('设计模式','http://blog.csdn.net/column/details/shms520.html?time=1506384227.229199','设计模式',14798),('设计模式','http://blog.csdn.net/column/details/note-design-pattern.html?time=1506384227.229205','设计模式笔记',14702),('设计模式','http://blog.csdn.net/column/details/javadesignpattern.html?time=1506384280.542754','设计模式',17165),('设计模式','http://blog.csdn.net/column/details/mdmcsdn1.html?time=1506384280.542787','设计模式',16760),('设计模式','http://blog.csdn.net/column/details/design-pattern-hxm.html?time=1506384280.542796','设计模式之android',16707),('设计模式','http://blog.csdn.net/column/details/16401.html?time=1506384280.542802','24种设计模式',16708),('设计模式','http://blog.csdn.net/column/details/ourdesignpattern.html?time=1506384280.542809','设计模式',16381),('设计模式','http://blog.csdn.net/column/details/extenddesignpattern.html?time=1506384281.538209','可扩展性与设计模式',19085),('设计模式','http://blog.csdn.net/column/details/designpatterns-night.html?time=1506384281.538247','设计模式',18283),('设计模式','http://blog.csdn.net/column/details/design-pattern.html?time=1506384281.538255','设计模式在实际项目中的应用',18241),('设计模式','http://blog.csdn.net/column/details/cainiaojava.html?time=1506384282.48431','菜鸟版JAVA设计模式',21202),('设计模式','http://blog.csdn.net/column/details/designpatterns-qt.html?time=1506384282.484335','设计模式(Qt版)',21090),('设计模式','http://blog.csdn.net/column/details/dhsjms.html?time=1506384282.484347','大话设计模式',20173),('设计模式','http://blog.csdn.net/column/details/sjms.html?time=1506384282.484356','设计模式',19642),('设计模式','http://blog.csdn.net/column/details/huohuo.html?time=1506384282.484362','大话设计模式',19388),('设计模式','http://blog.csdn.net/column/details/design-pattern-java.html?time=1506384283.593048','设计模式（JAVA）',28195),('设计模式','http://blog.csdn.net/column/details/14308.html?time=1506384283.593087','设计模式之美',27635),('设计模式','http://blog.csdn.net/column/details/designaction.html?time=1506384283.593094','设计模式',27422),('设计模式','http://blog.csdn.net/column/details/baadf00df00dabadfds0.html?time=1506384283.593106','初探设计模式（C++实现）',26091),('设计模式','http://blog.csdn.net/column/details/ef3c5ec0-f3c9-48af.html?time=1506384283.59312','设计模式精解',25870),('设计模式','http://blog.csdn.net/column/details/12848.html?time=1506384320.013863','一天一个设计模式',22748),('设计模式','http://blog.csdn.net/column/details/lxq-shejimoshi.html?time=1506384320.013888','设计模式--Java描述',22711),('设计模式','http://blog.csdn.net/column/details/designpattern-cassie.html?time=1506384320.013899','设计模式',22470),('设计模式','http://blog.csdn.net/column/details/sjmsxuexibiji.html?time=1506384320.013905','设计模式学习笔记',22460),('设计模式','http://blog.csdn.net/column/details/designpattern32.html?time=1506384320.013911','设计模式',22406),('设计模式','http://blog.csdn.net/column/details/designpatterns.html?time=1506384339.970704','大话设计模式',74987),('设计模式','http://blog.csdn.net/column/details/design2.html?time=1506384339.970731','乱砍设计模式',74565),('设计模式','http://blog.csdn.net/column/details/designerpattern.html?time=1506384341.551258','IOS设计模式浅析',34324),('设计模式','http://blog.csdn.net/column/details/phpusedesignpattern.html?time=1506384341.551315','设计模式之PHP项目应用',33296),('设计模式','http://blog.csdn.net/column/details/artofdesignpattern.html?time=1506384341.551333','设计模式的艺术',32606),('设计模式','http://blog.csdn.net/column/details/shejimoshishengsheng.html?time=1506384341.55135','设计模式',31748),('设计模式','http://blog.csdn.net/column/details/wenqiang.html?time=1506384342.359062','设计模式之禅',38035),('设计模式','http://blog.csdn.net/column/details/gof-design-pattern.html?time=1506384342.359109','小清新GoF23种设计模式',37648),('设计模式','http://blog.csdn.net/column/details/13856.html?time=1506384342.359126','设计模式',37275),('设计模式','http://blog.csdn.net/column/details/my-designpatterns.html?time=1506384342.359142','设计模式之禅',36467),('设计模式','http://blog.csdn.net/column/details/14788.html?time=1506384343.222683','设计模式(Java)',44256),('设计模式','http://blog.csdn.net/column/details/xing-designpattern.html?time=1506384343.222749','写最好的设计模式专栏',43668),('设计模式','http://blog.csdn.net/column/details/patternsdesign.html?time=1506384343.22277','设计模式笔记',40703),('设计模式','http://blog.csdn.net/column/details/design-pattern23.html?time=1506384343.222781','C#设计模式',40471),('设计模式','http://blog.csdn.net/column/details/softwaredesign.html?time=1506384343.222792','设计模式',38884),('设计模式','http://blog.csdn.net/column/details/oodesign.html?time=1506384380.497125','设计模式攻略',50970),('设计模式','http://blog.csdn.net/column/details/my-designpattern.html?time=1506384380.497154','设计模式与系统架构',46416),('设计模式','http://blog.csdn.net/column/details/designpatterns4java.html?time=1506384380.497163','23种设计模式 (java通俗演义)',45606),('设计模式','http://blog.csdn.net/column/details/design-pattern-homer.html?time=1506384380.49717','设计模式',45428),('设计模式','http://blog.csdn.net/column/details/shuangde800-design.html?time=1506384381.571036','设计模式征途',56592),('设计模式','http://blog.csdn.net/column/details/designmodels.html?time=1506384381.57108','Java设计模式菜鸟系列',56137),('设计模式','http://blog.csdn.net/column/details/dahua.html?time=1506384381.571112','大话设计模式',53241),('设计模式','http://blog.csdn.net/column/details/phpdesign.html?time=1506384381.571119','PHP设计模式',52727),('设计模式','http://blog.csdn.net/column/details/hacke2-designpatter.html?time=1506384381.571125','设计模式读书笔记与总结',52155),('设计模式','http://blog.csdn.net/column/details/oodm.html?time=1506384411.568882','面向对象设计模式',88945),('设计模式','http://blog.csdn.net/column/details/cpp-design-pattern.html?time=1506384412.590215','C++设计模式',302608),('设计模式','http://blog.csdn.net/column/details/designpattern-xt.html?time=1506384412.590272','DesignPattern(设计模式)',248074),('设计模式','http://blog.csdn.net/column/details/mydesignpattern.html?time=1506384412.590284','我所理解的设计模式',232905),('设计模式','http://blog.csdn.net/column/details/code-design.html?time=1506384413.547482','设计模式融入生活',127736),('设计模式','http://blog.csdn.net/column/details/designpatternforb.html?time=1506384413.547512','\"围观\"设计模式',112764),('设计模式','http://blog.csdn.net/column/details/pattern.html?time=1506556801.62983','设计模式',1296128),('设计模式','http://blog.csdn.net/column/details/design.html?time=1506556801.62987','设计模式C++实现',465937),('设计模式','http://blog.csdn.net/column/details/designpatternzh.html?time=1506556801.629879','跟着ZHONGHuan学习设计模式',370350),('mysql','http://blog.csdn.net/column/details/mysqlcentury.html?time=1506556801.678067','MySQL进阶',1227864),('mysql','http://blog.csdn.net/column/details/mysql-in-action.html?time=1506556801.678103','mysql 由浅入深',365994),('mysql','http://blog.csdn.net/column/details/mysqltw.html?time=1506556801.678112','MySQL图文进阶',357777),('mysql','http://blog.csdn.net/column/details/mysqldba.html?time=1506556801.678124','MySQL管理开发由浅入深',222949),('mysql','http://blog.csdn.net/column/details/evermysql.html?time=1506556801.678132','MySQL',192694),('设计模式','http://blog.csdn.net/column/details/design-patterns.html?time=1506556801.721802','设计模式',163013),('设计模式','http://blog.csdn.net/column/details/csharpdesignpattern.html?time=1506556801.72183','C#设计模式',148192),('设计模式','http://blog.csdn.net/column/details/chenssy-design.html?time=1506556801.721841','设计模式读书笔记',133660),('设计模式','http://blog.csdn.net/column/details/13826.html?time=1506556801.797198','云设计模式',64806),('设计模式','http://blog.csdn.net/column/details/eat-designpattern.html?time=1506556801.797226','硬啃设计模式',63381),('设计模式','http://blog.csdn.net/column/details/headfirst.html?time=1506556801.797235','HeadFirst 设计模式学习笔记',60956),('设计模式','http://blog.csdn.net/column/details/clouddesignpattern.html?time=1506556801.797241','云计算设计模式',60930),('设计模式','http://blog.csdn.net/column/details/12698.html?time=1506556801.79725','Java设计模式实战',57387),('mysql','http://blog.csdn.net/column/details/mysql-tzx.html?time=1506556801.848224','mysql知识汇总和提高',110496),('mysql','http://blog.csdn.net/column/details/zhy-study-mysql.html?time=1506556801.848254','Mysql',93940),('mysql','http://blog.csdn.net/column/details/14121.html?time=1506556801.848262','如何让Mysql跑的更快',86529),('mysql','http://blog.csdn.net/column/details/mysqlzl544434558.html?time=1506556801.848271','项目中积累的mysql使用经验',81364),('mysql','http://blog.csdn.net/column/details/mysqlstudy.html?time=1506556801.901251','mysql学习',28190),('mysql','http://blog.csdn.net/column/details/14507.html?time=1506556801.90128','MySQL学习记录',26351),('设计模式','http://blog.csdn.net/column/details/designpatternbylmb.html?time=1506556802.362949','大话设计模式',25255),('设计模式','http://blog.csdn.net/column/details/cppdesignpattern.html?time=1506556802.362979','C++设计模式',24456),('设计模式','http://blog.csdn.net/column/details/designpatternforios.html?time=1506556802.362987','设计模式之深入学习IOS版',24421),('设计模式','http://blog.csdn.net/column/details/feihedp.html?time=1506556802.362996','浅显易懂的设计模式',23722),('mysql','http://blog.csdn.net/column/details/14622.html?time=1506556802.410134','MySQL',4078),('mysql','http://blog.csdn.net/column/details/16135.html?time=1506556802.410179','Mysql架构设计',2855),('mysql','http://blog.csdn.net/column/details/16687.html?time=1506556802.410188','Mysql学习与实践笔记',2727),('设计模式','http://blog.csdn.net/column/details/shejimoshi1.html?time=1506556803.126917','设计模式',4735),('设计模式','http://blog.csdn.net/column/details/qkcoder.html?time=1506556803.126946','C++设计模式',4459),('设计模式','http://blog.csdn.net/column/details/15604.html?time=1506556803.126953','Head First设计模式',4435),('mysql','http://blog.csdn.net/column/details/mysql56-refer.html?time=1506556803.230223','MySQL 5.6 参考',5990),('mysql','http://blog.csdn.net/column/details/shenruqianchu-mysql.html?time=1506556803.230249','深入浅出Mysql',5474),('mysql','http://blog.csdn.net/column/details/15343.html?time=1506556803.230259','史上最全的MySQL基础教程',5047),('mysql','http://blog.csdn.net/column/details/13738.html?time=1506556803.230268','MySql及NoSQL相关',4717),('mysql','http://blog.csdn.net/column/details/16578.html?time=1506556803.230276','MYSQL',4488),('设计模式','http://blog.csdn.net/column/details/16088.html?time=1506556804.099138','设计模式',1346),('设计模式','http://blog.csdn.net/column/details/zhdldesignpattern.html?time=1506556804.099182','设计模式之木叶村之旅',1221),('设计模式','http://blog.csdn.net/column/details/15600.html?time=1506556804.099191','设计模式小解',1121),('设计模式','http://blog.csdn.net/column/details/14268.html?time=1506556804.099201','C# 设计模式',868),('mysql','http://blog.csdn.net/column/details/15364.html?time=1506556804.210362','MySQL',2500),('mysql','http://blog.csdn.net/column/details/17229.html?time=1506556804.210408','mysql',2364),('mysql','http://blog.csdn.net/column/details/13213.html?time=1506556804.210417','Mysql基本使用',2243),('mysql','http://blog.csdn.net/column/details/15133.html?time=1506556804.210423','MySQL基本知识',2196),('mysql','http://blog.csdn.net/column/details/16190.html?time=1506556804.210431','mysql',1830),('mysql','http://blog.csdn.net/column/details/15775.html?time=1506556804.21044','MySQL详解',1313),('mysql','http://blog.csdn.net/column/details/mysql1209.html?time=1506556805.18455','mysql优化',7806),('mysql','http://blog.csdn.net/column/details/16983.html?time=1506556805.184617','MySQL从入门到精通',7000),('mysql','http://blog.csdn.net/column/details/mysql1.html?time=1506556805.184644','踟蹰MySQL',6738),('mysql','http://blog.csdn.net/column/details/13369.html?time=1506556805.184659','mysql的使用',6542),('mysql','http://blog.csdn.net/column/details/13509.html?time=1506556805.184672','MySQl数据库嵌入式开发',6411),('设计模式','http://blog.csdn.net/column/details/14187.html?time=1506556805.232288','设计模式-java',1863),('设计模式','http://blog.csdn.net/column/details/15050.html?time=1506556805.232319','设计模式',1825),('设计模式','http://blog.csdn.net/column/details/17223.html?time=1506556805.232329','设计模式篇',1689),('设计模式','http://blog.csdn.net/column/details/13865.html?time=1506556805.232336','java设计模式',1678),('设计模式','http://blog.csdn.net/column/details/15456.html?time=1506556805.232342','常用Java设计模式系列',1676),('设计模式','http://blog.csdn.net/column/details/15026.html?time=1506556805.232349','Java 设计模式',1587),('设计模式','http://blog.csdn.net/column/details/16040.html?time=1506556805.232357','java设计模式',1441),('设计模式','http://blog.csdn.net/column/details/13662.html?time=1506556805.232364','Java设计模式学习',1425),('设计模式','http://blog.csdn.net/column/details/15028.html?time=1506556806.326075','设计模式',2621),('设计模式','http://blog.csdn.net/column/details/14288.html?time=1506556806.326104','设计模式',2550),('设计模式','http://blog.csdn.net/column/details/12965.html?time=1506556806.326117','设计模式',2275),('设计模式','http://blog.csdn.net/column/details/14987.html?time=1506556806.326123','设计模式',2215),('设计模式','http://blog.csdn.net/column/details/15839.html?time=1506556807.444474','设计模式',3431),('设计模式','http://blog.csdn.net/column/details/design-pattern-zen.html?time=1506556807.444502','《设计模式之禅》读书笔记',3382),('设计模式','http://blog.csdn.net/column/details/yrp-design-pattern.html?time=1506556807.444515','设计模式与应用',3034),('设计模式','http://blog.csdn.net/column/details/java-design-pattern.html?time=1506556807.444521','Java设计模式',3027),('设计模式','http://blog.csdn.net/column/details/16553.html?time=1506556807.444529','设计模式',2874),('设计模式','http://blog.csdn.net/column/details/16218.html?time=1506556807.444535','设计模式',2820),('设计模式','http://blog.csdn.net/column/details/sjmsjc.html?time=1506556853.839108','设计模式',10119),('设计模式','http://blog.csdn.net/column/details/designpatternsummary.html?time=1506556853.839132','大话设计模式',9857),('设计模式','http://blog.csdn.net/column/details/shenruqianchu-design.html?time=1506556853.83914','深入浅出设计模式',9835),('设计模式','http://blog.csdn.net/column/details/design-patterns001.html?time=1506556854.86144','设计模式的六大原则',11551),('设计模式','http://blog.csdn.net/column/details/13758.html?time=1506556854.861478','java设计模式学习',11394),('设计模式','http://blog.csdn.net/column/details/zysjms.html?time=1506556854.861489','设计模式',11200),('设计模式','http://blog.csdn.net/column/details/designmodel.html?time=1506556854.861497','设计模式',10899),('设计模式','http://blog.csdn.net/column/details/javapatternexample.html?time=1506556854.861505','java设计模式实例',10679),('mysql','http://blog.csdn.net/column/details/yinfeng-mysql.html?time=1506556871.021413','MySQL内核与性能优化',9963),('mysql','http://blog.csdn.net/column/details/13281.html?time=1506556871.021444','MySQL-数据库-JDBC',9327),('mysql','http://blog.csdn.net/column/details/13516.html?time=1506556871.021461','MySQL路线',8442),('mysql','http://blog.csdn.net/column/details/16623.html?time=1506556871.021478','MySQL源码研究',8381),('mysql','http://blog.csdn.net/column/details/13337.html?time=1506556886.240483','mysql数据库',12125),('mysql','http://blog.csdn.net/column/details/mysqlbywangjianan.html?time=1506556886.240522','mysql数据库',11739),('mysql','http://blog.csdn.net/column/details/13489.html?time=1506556886.240533','MySQL基础知识大全',11304),('mysql','http://blog.csdn.net/column/details/13534.html?time=1506556886.24054','Mysql系列',11238),('mysql','http://blog.csdn.net/column/details/14861.html?time=1506556887.240823','高性能MySQL',15279),('mysql','http://blog.csdn.net/column/details/13301.html?time=1506556887.240885','MySQL',12468),('mysql','http://blog.csdn.net/column/details/wenniuwuren-mysql.html?time=1506556888.276194','MySQL 入门到调优',15636),('mysql','http://blog.csdn.net/column/details/studymysql.html?time=1506556888.276214','MySQL数据库学习',15383),('mysql','http://blog.csdn.net/column/details/tangowl-mysql-intro.html?time=1506556889.238395','MySQL 入门教程',21010),('mysql','http://blog.csdn.net/column/details/mysql-dablelv.html?time=1506556889.238425','MySQL基础',20927),('mysql','http://blog.csdn.net/column/details/15548.html?time=1506556889.238435','数据库(MySQL)',20614),('mysql','http://blog.csdn.net/column/details/13881.html?time=1506556889.238442','mysql索引与优化',19948),('mysql','http://blog.csdn.net/column/details/mysqlwu.html?time=1506556889.238448','MySQL必知必会学习笔记',19831),('设计模式','http://blog.csdn.net/column/details/16634.html?time=1506556910.39378','设计模式',5846),('设计模式','http://blog.csdn.net/column/details/14723.html?time=1506556910.393842','设计模式',5832),('设计模式','http://blog.csdn.net/column/details/gof-23design.html?time=1506556910.393849','Gof 设计模式',5738),('设计模式','http://blog.csdn.net/column/details/design-patterns-xue.html?time=1506556910.393855','设计模式',5696),('设计模式','http://blog.csdn.net/column/details/hgbshejimoshi.html?time=1506556910.393861','设计模式',5689),('设计模式','http://blog.csdn.net/column/details/12992.html?time=1506556910.393869','设计模式备忘录',5326),('设计模式','http://blog.csdn.net/column/details/designpatterns-haoz.html?time=1506556910.393875','设计模式解析',5145),('设计模式','http://blog.csdn.net/column/details/designpatternsjiange.html?time=1506556910.393881','设计模式',5132),('设计模式','http://blog.csdn.net/column/details/15193.html?time=1506556911.570676','赵建银-设计模式学习',3844),('设计模式','http://blog.csdn.net/column/details/16632.html?time=1506556911.570716','设计模式学习笔记',3803),('设计模式','http://blog.csdn.net/column/details/designpatternnotewyj.html?time=1506556911.57073','设计模式笔记整理',3746),('设计模式','http://blog.csdn.net/column/details/javamodel.html?time=1506556911.570744','JAVA设计模式',3730),('设计模式','http://blog.csdn.net/column/details/13164.html?time=1506556911.57076','设计模式',3674),('设计模式','http://blog.csdn.net/column/details/javascriptdesgin.html?time=1506556911.570772','javascript设计模式',3645),('mysql','http://blog.csdn.net/column/details/13220.html?time=1506556916.453067','mysql',34140),('mysql','http://blog.csdn.net/column/details/mysql-001.html?time=1506556916.453094','高性能MySQL',32076),('mysql','http://blog.csdn.net/column/details/15651.html?time=1506556916.453104','MySql数据库调优',29443),('mysql','http://blog.csdn.net/column/details/conquermysql.html?time=1506556918.367167','征服数据库之mysql',51517),('mysql','http://blog.csdn.net/column/details/detailofmysql.html?time=1506556918.36721','MySQL详解',50299),('mysql','http://blog.csdn.net/column/details/13005.html?time=1506556918.367228','MySQL必知必会',46412),('mysql','http://blog.csdn.net/column/details/oracle2mysql.html?time=1506556918.367235','从Oracle到MySQL',45891),('mysql','http://blog.csdn.net/column/details/cppformysqlpro.html?time=1506556918.367246','visual c++ 2008进行MySQL编程（ODBC）',44553),('mysql','http://blog.csdn.net/column/details/13794.html?time=1506556937.555144','MySQL',175672),('mysql','http://blog.csdn.net/column/details/mysqlnote.html?time=1506556937.55518','MySQL进阶指南',149630),('mysql','http://blog.csdn.net/column/details/mysql-1.html?time=1506556937.555192','MySQL从入门到精通',130077),('mysql','http://blog.csdn.net/column/details/mysql-daydayup.html?time=1506556937.555203','Mysql提升',120596),('mysql','http://blog.csdn.net/column/details/mysqlsummary.html?time=1506556938.716124','Mysql数据库总结',75359),('mysql','http://blog.csdn.net/column/details/mysqlpri.html?time=1506556938.716191','思考mysql内核之初级系列',67248),('mysql','http://blog.csdn.net/column/details/15260.html?time=1506556938.7162','MySQL技术',60566),('mysql','http://blog.csdn.net/column/details/16138.html?time=1506556938.716211','史上最简单的 MySQL 教程',54039),('设计模式','http://blog.csdn.net/column/details/14533.html?time=1506556945.865791','23种设计模式',6772),('设计模式','http://blog.csdn.net/column/details/designpattern2.html?time=1506556945.865858','设计模式',6747),('设计模式','http://blog.csdn.net/column/details/javadesign-pattern.html?time=1506556945.865867','JAVA设计模式笔记',6417),('设计模式','http://blog.csdn.net/column/details/tuimo.html?time=1506556945.865882','设计模式',6324),('设计模式','http://blog.csdn.net/column/details/14351.html?time=1506556945.865894','java23种设计模式',6162),('设计模式','http://blog.csdn.net/column/details/14410.html?time=1506556945.865906','设计模式',6131),('设计模式','http://blog.csdn.net/column/details/14875.html?time=1506556946.82751','设计模式',7373),('设计模式','http://blog.csdn.net/column/details/13439.html?time=1506556946.827538','JavaScript设计模式',7315),('设计模式','http://blog.csdn.net/column/details/design-pattern-123.html?time=1506556946.827546','设计模式',7316),('设计模式','http://blog.csdn.net/column/details/chaogeshejimoshi.html?time=1506556946.827552','Java设计模式简明教程',7263),('设计模式','http://blog.csdn.net/column/details/pattern23.html?time=1506556946.82756','设计模式',7168),('设计模式','http://blog.csdn.net/column/details/design-pattern-lin.html?time=1506556946.827566','设计模式',7147),('设计模式','http://blog.csdn.net/column/details/14948.html?time=1506556946.827573','php，java实现设计模式',7126),('设计模式','http://blog.csdn.net/column/details/xfzsjms.html?time=1506556946.827581','设计模式',6898),('设计模式','http://blog.csdn.net/column/details/learnofdesignpattern.html?time=1506556948.907176','设计模式',8481),('设计模式','http://blog.csdn.net/column/details/design--mode.html?time=1506556948.907204','大话设计模式',8031),('设计模式','http://blog.csdn.net/column/details/14866.html?time=1506556948.907213','设计模式之(C++实现)',7955),('设计模式','http://blog.csdn.net/column/details/shejimoshismile.html?time=1506556948.907219','设计模式',7919),('设计模式','http://blog.csdn.net/column/details/guus-sjms.html?time=1506556948.907225','设计模式大全',7868),('设计模式','http://blog.csdn.net/column/details/designpattern1.html?time=1506556992.222052','设计模式',9377),('设计模式','http://blog.csdn.net/column/details/dahua-shejimoshi.html?time=1506556992.222078','大话设计模式',9346),('设计模式','http://blog.csdn.net/column/details/designpattern001.html?time=1506556992.222087','设计模式实战',9208),('设计模式','http://blog.csdn.net/column/details/habren-design-patter.html?time=1506556992.222098','跟着Jason学 设计模式',8870),('设计模式','http://blog.csdn.net/column/details/dpatterns.html?time=1506556992.222104','设计模式',8735),('设计模式','http://blog.csdn.net/column/details/learn-design-pattern.html?time=1506556992.222111','初识设计模式',8580),('设计模式','http://blog.csdn.net/column/details/designpatterns.html?time=1506556993.098421','大话设计模式',75025),('设计模式','http://blog.csdn.net/column/details/design2.html?time=1506556993.098452','乱砍设计模式',74587),('设计模式','http://blog.csdn.net/column/details/designerpattern.html?time=1506556994.177117','IOS设计模式浅析',34338),('设计模式','http://blog.csdn.net/column/details/phpusedesignpattern.html?time=1506556994.177146','设计模式之PHP项目应用',33413),('设计模式','http://blog.csdn.net/column/details/artofdesignpattern.html?time=1506556994.177157','设计模式的艺术',32624),('设计模式','http://blog.csdn.net/column/details/shejimoshishengsheng.html?time=1506556994.177166','设计模式',31782),('设计模式','http://blog.csdn.net/column/details/lius0011.html?time=1506557024.439763','设计模式实例',12202),('设计模式','http://blog.csdn.net/column/details/designpattern-qiu.html?time=1506557024.4398','设计模式',12109),('设计模式','http://blog.csdn.net/column/details/mydesignpatterns.html?time=1506557024.439809','设计模式通俗讲解&&C++实现',12065),('设计模式','http://blog.csdn.net/column/details/designpatternsharing.html?time=1506557024.439817','设计模式',11981),('设计模式','http://blog.csdn.net/column/details/java-design-mode.html?time=1506557024.439823','java设计模式',11959),('设计模式','http://blog.csdn.net/column/details/theonegis-design.html?time=1506557024.439832','设计模式学习笔记',11622),('设计模式','http://blog.csdn.net/column/details/desginpattern.html?time=1506557024.439839','设计模式',11557),('设计模式','http://blog.csdn.net/column/details/lxydahua.html?time=1506557025.453446','大话设计模式',13089),('设计模式','http://blog.csdn.net/column/details/walker1.html?time=1506557025.453491','设计模式C++实现',12861),('设计模式','http://blog.csdn.net/column/details/patternofjie.html?time=1506557025.453499','设计模式',12744),('设计模式','http://blog.csdn.net/column/details/13400.html?time=1506557025.453505','设计模式',12677),('设计模式','http://blog.csdn.net/column/details/13891.html?time=1506557025.453514','《设计模式》',12398),('设计模式','http://blog.csdn.net/column/details/zhenghaozhuanlan.html?time=1506557025.45352','设计模式',12323),('设计模式','http://blog.csdn.net/column/details/note-design-pattern.html?time=1506557026.46622','设计模式笔记',14731),('设计模式','http://blog.csdn.net/column/details/13088.html?time=1506557026.466259','设计模式',14093),('设计模式','http://blog.csdn.net/column/details/javadesignmodel.html?time=1506557026.466269','23天征服--23种设计模式',13766),('设计模式','http://blog.csdn.net/column/details/13196.html?time=1506557027.635621','设计模式',15956),('设计模式','http://blog.csdn.net/column/details/suski-pattern.html?time=1506557027.63565','《大话设计模式》读后感',15645),('设计模式','http://blog.csdn.net/column/details/mydesignpattern35.html?time=1506557027.635682','设计模式之全解析',15036),('设计模式','http://blog.csdn.net/column/details/gof-design-patterns.html?time=1506557027.63569','GoF设计模式',14913),('设计模式','http://blog.csdn.net/column/details/shms520.html?time=1506557027.635695','设计模式',14814),('设计模式','http://blog.csdn.net/column/details/javadesignpattern.html?time=1506557080.9905','设计模式',17180),('设计模式','http://blog.csdn.net/column/details/mdmcsdn1.html?time=1506557080.990529','设计模式',16771),('设计模式','http://blog.csdn.net/column/details/design-pattern-hxm.html?time=1506557080.990537','设计模式之android',16767),('设计模式','http://blog.csdn.net/column/details/16401.html?time=1506557080.990559','24种设计模式',16763),('设计模式','http://blog.csdn.net/column/details/ourdesignpattern.html?time=1506557080.990566','设计模式',16427),('设计模式','http://blog.csdn.net/column/details/huohuo.html?time=1506557081.927047','大话设计模式',19400),('设计模式','http://blog.csdn.net/column/details/extenddesignpattern.html?time=1506557081.927092','可扩展性与设计模式',19122),('设计模式','http://blog.csdn.net/column/details/designpatterns-night.html?time=1506557081.927108','设计模式',18314),('设计模式','http://blog.csdn.net/column/details/design-pattern.html?time=1506557081.927114','设计模式在实际项目中的应用',18242),('设计模式','http://blog.csdn.net/column/details/cainiaojava.html?time=1506557082.941521','菜鸟版JAVA设计模式',21242),('设计模式','http://blog.csdn.net/column/details/designpatterns-qt.html?time=1506557082.941546','设计模式(Qt版)',21097),('设计模式','http://blog.csdn.net/column/details/dhsjms.html?time=1506557082.941556','大话设计模式',20284),('设计模式','http://blog.csdn.net/column/details/sjms.html?time=1506557082.941564','设计模式',19656),('设计模式','http://blog.csdn.net/column/details/design-pattern-java.html?time=1506557083.942958','设计模式（JAVA）',28346),('设计模式','http://blog.csdn.net/column/details/design--pattern.html?time=1506557083.94299','设计模式',28339),('设计模式','http://blog.csdn.net/column/details/ds-1.html?time=1506557083.942998','大话设计模式',28252),('设计模式','http://blog.csdn.net/column/details/14308.html?time=1506557083.943006','设计模式之美',27654),('设计模式','http://blog.csdn.net/column/details/designaction.html?time=1506557083.943014','设计模式',27441),('设计模式','http://blog.csdn.net/column/details/baadf00df00dabadfds0.html?time=1506557083.943026','初探设计模式（C++实现）',26120),('设计模式','http://blog.csdn.net/column/details/16366.html?time=1506557083.943033','设计模式讲解与代码实践',26011),('设计模式','http://blog.csdn.net/column/details/ef3c5ec0-f3c9-48af.html?time=1506557083.943039','设计模式精解',25897),('设计模式','http://blog.csdn.net/column/details/12906.html?time=1506557129.373528','小话设计模式',23065),('设计模式','http://blog.csdn.net/column/details/12848.html?time=1506557129.373557','一天一个设计模式',22809),('设计模式','http://blog.csdn.net/column/details/lxq-shejimoshi.html?time=1506557129.373565','设计模式--Java描述',22733),('设计模式','http://blog.csdn.net/column/details/designpattern-cassie.html?time=1506557129.373589','设计模式',22489),('设计模式','http://blog.csdn.net/column/details/sjmsxuexibiji.html?time=1506557129.373595','设计模式学习笔记',22485),('设计模式','http://blog.csdn.net/column/details/designpattern32.html?time=1506557129.373601','设计模式',22439),('设计模式','http://blog.csdn.net/column/details/dhsjms-cplusplus.html?time=1506557131.485401','《大话设计模式》C++实现',28813),('设计模式','http://blog.csdn.net/column/details/17017.html?time=1506557131.485426','快速扩展和迭代 - 设计模式',28570),('设计模式','http://blog.csdn.net/column/details/softwaredesign.html?time=1506557154.713617','设计模式',38918),('设计模式','http://blog.csdn.net/column/details/wenqiang.html?time=1506557154.713675','设计模式之禅',38135),('设计模式','http://blog.csdn.net/column/details/gof-design-pattern.html?time=1506557154.713685','小清新GoF23种设计模式',37665),('设计模式','http://blog.csdn.net/column/details/13856.html?time=1506557154.713691','设计模式',37468),('设计模式','http://blog.csdn.net/column/details/my-designpatterns.html?time=1506557154.713701','设计模式之禅',36559),('设计模式','http://blog.csdn.net/column/details/14788.html?time=1506557155.600699','设计模式(Java)',44404),('设计模式','http://blog.csdn.net/column/details/xing-designpattern.html?time=1506557155.600727','写最好的设计模式专栏',43856),('设计模式','http://blog.csdn.net/column/details/patternsdesign.html?time=1506557155.600742','设计模式笔记',40747),('设计模式','http://blog.csdn.net/column/details/design-pattern23.html?time=1506557155.600749','C#设计模式',40535),('设计模式','http://blog.csdn.net/column/details/oodesign.html?time=1506557156.700333','设计模式攻略',51075),('设计模式','http://blog.csdn.net/column/details/my-designpattern.html?time=1506557156.700361','设计模式与系统架构',46449),('设计模式','http://blog.csdn.net/column/details/designpatterns4java.html?time=1506557156.700369','23种设计模式 (java通俗演义)',45631),('设计模式','http://blog.csdn.net/column/details/design-pattern-homer.html?time=1506557156.700376','设计模式',45441),('设计模式','http://blog.csdn.net/column/details/shuangde800-design.html?time=1506557197.012313','设计模式征途',56626),('设计模式','http://blog.csdn.net/column/details/designmodels.html?time=1506557197.012344','Java设计模式菜鸟系列',56225),('设计模式','http://blog.csdn.net/column/details/dahua.html?time=1506557197.012358','大话设计模式',53281),('设计模式','http://blog.csdn.net/column/details/phpdesign.html?time=1506557197.012365','PHP设计模式',52832),('设计模式','http://blog.csdn.net/column/details/hacke2-designpatter.html?time=1506557197.012373','设计模式读书笔记与总结',52174),('设计模式','http://blog.csdn.net/column/details/oodm.html?time=1506557197.926054','面向对象设计模式',88979),('设计模式','http://blog.csdn.net/column/details/cpp-design-pattern.html?time=1506557215.20107','C++设计模式',302666),('设计模式','http://blog.csdn.net/column/details/designpattern-xt.html?time=1506557215.201106','DesignPattern(设计模式)',248093),('设计模式','http://blog.csdn.net/column/details/mydesignpattern.html?time=1506557215.201116','我所理解的设计模式',233138),('设计模式','http://blog.csdn.net/column/details/code-design.html?time=1506557216.210922','设计模式融入生活',127953),('设计模式','http://blog.csdn.net/column/details/designpatternforb.html?time=1506557216.210964','\"围观\"设计模式',112837),('nginx','http://blog.csdn.net/column/details/nginx.html?time=1506729601.627249','Nginx高性能Web服务器',385135),('设计模式','http://blog.csdn.net/column/details/pattern.html?time=1506729601.667924','设计模式',1297591),('设计模式','http://blog.csdn.net/column/details/design.html?time=1506729601.667996','设计模式C++实现',466552),('设计模式','http://blog.csdn.net/column/details/designpatternzh.html?time=1506729601.668029','跟着ZHONGHuan学习设计模式',370398),('设计模式','http://blog.csdn.net/column/details/design-patterns.html?time=1506729601.742386','设计模式',163198),('设计模式','http://blog.csdn.net/column/details/csharpdesignpattern.html?time=1506729601.742422','C#设计模式',148476),('设计模式','http://blog.csdn.net/column/details/chenssy-design.html?time=1506729601.742433','设计模式读书笔记',133846),('nginx','http://blog.csdn.net/column/details/code-for-nginx.html?time=1506729601.78968','nginx源码学习笔记',137988),('设计模式','http://blog.csdn.net/column/details/13826.html?time=1506729601.819507','云设计模式',64912),('设计模式','http://blog.csdn.net/column/details/eat-designpattern.html?time=1506729601.819556','硬啃设计模式',63428),('设计模式','http://blog.csdn.net/column/details/clouddesignpattern.html?time=1506729601.81958','云计算设计模式',61054),('设计模式','http://blog.csdn.net/column/details/headfirst.html?time=1506729601.819587','HeadFirst 设计模式学习笔记',60980),('设计模式','http://blog.csdn.net/column/details/12698.html?time=1506729601.819597','Java设计模式实战',57478),('mysql','http://blog.csdn.net/column/details/mysqlcentury.html?time=1506729601.859277','MySQL进阶',1228155),('mysql','http://blog.csdn.net/column/details/mysql-in-action.html?time=1506729601.859311','mysql 由浅入深',366027),('mysql','http://blog.csdn.net/column/details/mysqltw.html?time=1506729601.85932','MySQL图文进阶',358982),('mysql','http://blog.csdn.net/column/details/mysqldba.html?time=1506729601.85933','MySQL管理开发由浅入深',223142),('mysql','http://blog.csdn.net/column/details/evermysql.html?time=1506729601.859337','MySQL',192948),('mysql','http://blog.csdn.net/column/details/13794.html?time=1506729601.859344','MySQL',177234),('mysql','http://blog.csdn.net/column/details/mysql-tzx.html?time=1506729601.901752','mysql知识汇总和提高',110553),('mysql','http://blog.csdn.net/column/details/zhy-study-mysql.html?time=1506729601.901781','Mysql',94157),('mysql','http://blog.csdn.net/column/details/14121.html?time=1506729601.901791','如何让Mysql跑的更快',86619),('mysql','http://blog.csdn.net/column/details/mysqlzl544434558.html?time=1506729601.901799','项目中积累的mysql使用经验',81572),('mysql','http://blog.csdn.net/column/details/mysqlstudy.html?time=1506729601.935356','mysql学习',28250),('mysql','http://blog.csdn.net/column/details/14507.html?time=1506729601.935378','MySQL学习记录',26400),('设计模式','http://blog.csdn.net/column/details/designpatternbylmb.html?time=1506729602.257709','大话设计模式',25339),('设计模式','http://blog.csdn.net/column/details/cppdesignpattern.html?time=1506729602.257729','C++设计模式',24508),('设计模式','http://blog.csdn.net/column/details/designpatternforios.html?time=1506729602.257736','设计模式之深入学习IOS版',24452),('设计模式','http://blog.csdn.net/column/details/feihedp.html?time=1506729602.257745','浅显易懂的设计模式',23747),('mysql','http://blog.csdn.net/column/details/14622.html?time=1506729602.365494','MySQL',4092),('mysql','http://blog.csdn.net/column/details/16135.html?time=1506729602.365541','Mysql架构设计',2887),('mysql','http://blog.csdn.net/column/details/16687.html?time=1506729602.365552','Mysql学习与实践笔记',2790),('设计模式','http://blog.csdn.net/column/details/shejimoshi1.html?time=1506729603.283263','设计模式',4741),('设计模式','http://blog.csdn.net/column/details/qkcoder.html?time=1506729603.28332','C++设计模式',4472),('设计模式','http://blog.csdn.net/column/details/15604.html?time=1506729603.28333','Head First设计模式',4446),('mysql','http://blog.csdn.net/column/details/mysql56-refer.html?time=1506729603.349904','MySQL 5.6 参考',6011),('mysql','http://blog.csdn.net/column/details/shenruqianchu-mysql.html?time=1506729603.34994','深入浅出Mysql',5492),('mysql','http://blog.csdn.net/column/details/15343.html?time=1506729603.349952','史上最全的MySQL基础教程',5090),('mysql','http://blog.csdn.net/column/details/13738.html?time=1506729603.349965','MySql及NoSQL相关',4765),('mysql','http://blog.csdn.net/column/details/16578.html?time=1506729603.349977','MYSQL',4560),('设计模式','http://blog.csdn.net/column/details/16088.html?time=1506729604.295491','设计模式',1354),('设计模式','http://blog.csdn.net/column/details/zhdldesignpattern.html?time=1506729604.295535','设计模式之木叶村之旅',1221),('设计模式','http://blog.csdn.net/column/details/15600.html?time=1506729604.295542','设计模式小解',1128),('设计模式','http://blog.csdn.net/column/details/14268.html?time=1506729604.295552','C# 设计模式',868),('mysql','http://blog.csdn.net/column/details/15364.html?time=1506729604.400256','MySQL',2540),('mysql','http://blog.csdn.net/column/details/17229.html?time=1506729604.400292','mysql',2420),('mysql','http://blog.csdn.net/column/details/13213.html?time=1506729604.400303','Mysql基本使用',2249),('mysql','http://blog.csdn.net/column/details/15133.html?time=1506729604.40031','MySQL基本知识',2228),('mysql','http://blog.csdn.net/column/details/16190.html?time=1506729604.400319','mysql',1849),('mysql','http://blog.csdn.net/column/details/15775.html?time=1506729604.400329','MySQL详解',1315),('设计模式','http://blog.csdn.net/column/details/14187.html?time=1506729605.343444','设计模式-java',1868),('设计模式','http://blog.csdn.net/column/details/15050.html?time=1506729605.343474','设计模式',1836),('设计模式','http://blog.csdn.net/column/details/13865.html?time=1506729605.343485','java设计模式',1686),('设计模式','http://blog.csdn.net/column/details/15456.html?time=1506729605.343493','常用Java设计模式系列',1680),('设计模式','http://blog.csdn.net/column/details/15026.html?time=1506729605.343499','Java 设计模式',1593),('设计模式','http://blog.csdn.net/column/details/16040.html?time=1506729605.343508','java设计模式',1456),('设计模式','http://blog.csdn.net/column/details/13662.html?time=1506729605.343514','Java设计模式学习',1433),('mysql','http://blog.csdn.net/column/details/mysql1209.html?time=1506729605.392975','mysql优化',7884),('mysql','http://blog.csdn.net/column/details/16983.html?time=1506729605.393011','MySQL从入门到精通',7056),('mysql','http://blog.csdn.net/column/details/mysql1.html?time=1506729605.393022','踟蹰MySQL',6765),('mysql','http://blog.csdn.net/column/details/13369.html?time=1506729605.393029','mysql的使用',6547),('mysql','http://blog.csdn.net/column/details/13509.html?time=1506729605.393036','MySQl数据库嵌入式开发',6459),('设计模式','http://blog.csdn.net/column/details/15028.html?time=1506729606.318828','设计模式',2632),('设计模式','http://blog.csdn.net/column/details/14288.html?time=1506729606.318866','设计模式',2554),('设计模式','http://blog.csdn.net/column/details/12965.html?time=1506729606.318892','设计模式',2286),('设计模式','http://blog.csdn.net/column/details/14987.html?time=1506729606.318898','设计模式',2225),('设计模式','http://blog.csdn.net/column/details/17223.html?time=1506729606.318906','设计模式篇',2004),('设计模式','http://blog.csdn.net/column/details/15839.html?time=1506729607.43557','设计模式',3452),('设计模式','http://blog.csdn.net/column/details/design-pattern-zen.html?time=1506729607.435602','《设计模式之禅》读书笔记',3385),('设计模式','http://blog.csdn.net/column/details/yrp-design-pattern.html?time=1506729607.435614','设计模式与应用',3041),('设计模式','http://blog.csdn.net/column/details/java-design-pattern.html?time=1506729607.435619','Java设计模式',3029),('设计模式','http://blog.csdn.net/column/details/16553.html?time=1506729607.435625','设计模式',2905),('设计模式','http://blog.csdn.net/column/details/16218.html?time=1506729607.435632','设计模式',2826),('nginx','http://blog.csdn.net/column/details/spch2008-nginx.html?time=1506729618.780625','NGINX',8488),('设计模式','http://blog.csdn.net/column/details/15193.html?time=1506729627.456369','赵建银-设计模式学习',3868),('设计模式','http://blog.csdn.net/column/details/16632.html?time=1506729627.456415','设计模式学习笔记',3852),('设计模式','http://blog.csdn.net/column/details/designpatternnotewyj.html?time=1506729627.456424','设计模式笔记整理',3750),('设计模式','http://blog.csdn.net/column/details/javamodel.html?time=1506729627.45643','JAVA设计模式',3738),('设计模式','http://blog.csdn.net/column/details/13164.html?time=1506729627.456436','设计模式',3694),('设计模式','http://blog.csdn.net/column/details/javascriptdesgin.html?time=1506729627.456441','javascript设计模式',3658),('nginx','http://blog.csdn.net/column/details/mynginx.html?time=1506729634.857623','Nginx',32917),('nginx','http://blog.csdn.net/column/details/niginxsourcelearning.html?time=1506729644.070418','nginx源码剖析',257959),('mysql','http://blog.csdn.net/column/details/wenniuwuren-mysql.html?time=1506729672.426276','MySQL 入门到调优',15692),('mysql','http://blog.csdn.net/column/details/14861.html?time=1506729672.426301','高性能MySQL',15423),('mysql','http://blog.csdn.net/column/details/yinfeng-mysql.html?time=1506729686.464885','MySQL内核与性能优化',9982),('mysql','http://blog.csdn.net/column/details/13281.html?time=1506729686.464969','MySQL-数据库-JDBC',9347),('mysql','http://blog.csdn.net/column/details/16623.html?time=1506729686.464979','MySQL源码研究',8558),('mysql','http://blog.csdn.net/column/details/13516.html?time=1506729686.464986','MySQL路线',8473),('mysql','http://blog.csdn.net/column/details/13337.html?time=1506729688.602499','mysql数据库',12171),('mysql','http://blog.csdn.net/column/details/mysqlbywangjianan.html?time=1506729688.602532','mysql数据库',11794),('mysql','http://blog.csdn.net/column/details/13489.html?time=1506729688.602932','MySQL基础知识大全',11333),('mysql','http://blog.csdn.net/column/details/13534.html?time=1506729688.602946','Mysql系列',11254),('mysql','http://blog.csdn.net/column/details/studymysql.html?time=1506729705.747537','MySQL数据库学习',15407),('mysql','http://blog.csdn.net/column/details/13301.html?time=1506729705.747581','MySQL',12481),('设计模式','http://blog.csdn.net/column/details/16634.html?time=1506729708.646627','设计模式',5906),('设计模式','http://blog.csdn.net/column/details/14723.html?time=1506729708.646659','设计模式',5860),('设计模式','http://blog.csdn.net/column/details/gof-23design.html?time=1506729708.646671','Gof 设计模式',5754),('设计模式','http://blog.csdn.net/column/details/design-patterns-xue.html?time=1506729708.646683','设计模式',5704),('设计模式','http://blog.csdn.net/column/details/hgbshejimoshi.html?time=1506729708.646692','设计模式',5690),('设计模式','http://blog.csdn.net/column/details/17558.html?time=1506729708.646702','设计模式',5485),('设计模式','http://blog.csdn.net/column/details/12992.html?time=1506729708.646712','设计模式备忘录',5353),('设计模式','http://blog.csdn.net/column/details/designpatternsjiange.html?time=1506729708.646723','设计模式',5158),('设计模式','http://blog.csdn.net/column/details/designpatterns-haoz.html?time=1506729708.646732','设计模式解析',5155),('设计模式','http://blog.csdn.net/column/details/12906.html?time=1506729709.545407','小话设计模式',23148),('设计模式','http://blog.csdn.net/column/details/12848.html?time=1506729709.54544','一天一个设计模式',22873),('设计模式','http://blog.csdn.net/column/details/lxq-shejimoshi.html?time=1506729709.545449','设计模式--Java描述',22751),('设计模式','http://blog.csdn.net/column/details/sjmsxuexibiji.html?time=1506729709.545457','设计模式学习笔记',22511),('设计模式','http://blog.csdn.net/column/details/designpattern-cassie.html?time=1506729709.545462','设计模式',22508),('设计模式','http://blog.csdn.net/column/details/designpattern32.html?time=1506729709.545467','设计模式',22482),('mysql','http://blog.csdn.net/column/details/mysqlsummary.html?time=1506729711.772527','Mysql数据库总结',75886),('mysql','http://blog.csdn.net/column/details/mysqlpri.html?time=1506729711.772566','思考mysql内核之初级系列',67289),('mysql','http://blog.csdn.net/column/details/15260.html?time=1506729711.772576','MySQL技术',60811),('mysql','http://blog.csdn.net/column/details/16138.html?time=1506729711.772587','史上最简单的 MySQL 教程',55127),('mysql','http://blog.csdn.net/column/details/tangowl-mysql-intro.html?time=1506729712.833672','MySQL 入门教程',21050),('mysql','http://blog.csdn.net/column/details/mysql-dablelv.html?time=1506729712.833704','MySQL基础',21002),('mysql','http://blog.csdn.net/column/details/15548.html?time=1506729712.833712','数据库(MySQL)',20762),('mysql','http://blog.csdn.net/column/details/13881.html?time=1506729712.833719','mysql索引与优化',20012),('mysql','http://blog.csdn.net/column/details/mysqlwu.html?time=1506729712.833724','MySQL必知必会学习笔记',19892),('mysql','http://blog.csdn.net/column/details/13220.html?time=1506729734.54882','mysql',34244),('mysql','http://blog.csdn.net/column/details/mysql-001.html?time=1506729734.54886','高性能MySQL',32117),('mysql','http://blog.csdn.net/column/details/15651.html?time=1506729734.548881','MySql数据库调优',29632),('mysql','http://blog.csdn.net/column/details/conquermysql.html?time=1506729736.171844','征服数据库之mysql',51586),('mysql','http://blog.csdn.net/column/details/detailofmysql.html?time=1506729736.171875','MySQL详解',50471),('mysql','http://blog.csdn.net/column/details/13005.html?time=1506729736.171892','MySQL必知必会',47022),('mysql','http://blog.csdn.net/column/details/oracle2mysql.html?time=1506729736.171897','从Oracle到MySQL',46023),('mysql','http://blog.csdn.net/column/details/cppformysqlpro.html?time=1506729736.171928','visual c++ 2008进行MySQL编程（ODBC）',44574),('mysql','http://blog.csdn.net/column/details/mysqlnote.html?time=1506729737.186153','MySQL进阶指南',149871),('mysql','http://blog.csdn.net/column/details/mysql-1.html?time=1506729737.186187','MySQL从入门到精通',130380),('mysql','http://blog.csdn.net/column/details/mysql-daydayup.html?time=1506729737.186199','Mysql提升',120953),('设计模式','http://blog.csdn.net/column/details/shuangde800-design.html?time=1506729764.604896','设计模式征途',56651),('设计模式','http://blog.csdn.net/column/details/designmodels.html?time=1506729764.604924','Java设计模式菜鸟系列',56299),('设计模式','http://blog.csdn.net/column/details/dahua.html?time=1506729764.604938','大话设计模式',53315),('设计模式','http://blog.csdn.net/column/details/phpdesign.html?time=1506729764.604946','PHP设计模式',52950),('设计模式','http://blog.csdn.net/column/details/hacke2-designpatter.html?time=1506729764.604974','设计模式读书笔记与总结',52208),('设计模式','http://blog.csdn.net/column/details/14533.html?time=1506729767.469043','23种设计模式',6795),('设计模式','http://blog.csdn.net/column/details/designpattern2.html?time=1506729767.469074','设计模式',6751),('设计模式','http://blog.csdn.net/column/details/javadesign-pattern.html?time=1506729767.469083','JAVA设计模式笔记',6445),('设计模式','http://blog.csdn.net/column/details/tuimo.html?time=1506729767.469091','设计模式',6326),('设计模式','http://blog.csdn.net/column/details/14351.html?time=1506729767.469099','java23种设计模式',6192),('设计模式','http://blog.csdn.net/column/details/14410.html?time=1506729767.469105','设计模式',6143),('设计模式','http://blog.csdn.net/column/details/13439.html?time=1506729768.490767','JavaScript设计模式',7422),('设计模式','http://blog.csdn.net/column/details/14875.html?time=1506729768.490794','设计模式',7410),('设计模式','http://blog.csdn.net/column/details/design-pattern-123.html?time=1506729768.490803','设计模式',7322),('设计模式','http://blog.csdn.net/column/details/chaogeshejimoshi.html?time=1506729768.49081','Java设计模式简明教程',7273),('设计模式','http://blog.csdn.net/column/details/pattern23.html?time=1506729768.490817','设计模式',7177),('设计模式','http://blog.csdn.net/column/details/design-pattern-lin.html?time=1506729768.490824','设计模式',7162),('设计模式','http://blog.csdn.net/column/details/14948.html?time=1506729768.49083','php，java实现设计模式',7159),('设计模式','http://blog.csdn.net/column/details/xfzsjms.html?time=1506729768.490838','设计模式',6902),('设计模式','http://blog.csdn.net/column/details/learnofdesignpattern.html?time=1506729813.953876','设计模式',8495),('设计模式','http://blog.csdn.net/column/details/design--mode.html?time=1506729813.953904','大话设计模式',8044),('设计模式','http://blog.csdn.net/column/details/14866.html?time=1506729813.953911','设计模式之(C++实现)',7994),('设计模式','http://blog.csdn.net/column/details/shejimoshismile.html?time=1506729813.953918','设计模式',7930),('设计模式','http://blog.csdn.net/column/details/guus-sjms.html?time=1506729813.953924','设计模式大全',7877),('设计模式','http://blog.csdn.net/column/details/designpattern1.html?time=1506729814.915651','设计模式',9389),('设计模式','http://blog.csdn.net/column/details/dahua-shejimoshi.html?time=1506729814.915674','大话设计模式',9363),('设计模式','http://blog.csdn.net/column/details/designpattern001.html?time=1506729814.915684','设计模式实战',9237),('设计模式','http://blog.csdn.net/column/details/habren-design-patter.html?time=1506729814.915692','跟着Jason学 设计模式',8893),('设计模式','http://blog.csdn.net/column/details/dpatterns.html?time=1506729814.915698','设计模式',8758),('设计模式','http://blog.csdn.net/column/details/learn-design-pattern.html?time=1506729814.915705','初识设计模式',8596),('设计模式','http://blog.csdn.net/column/details/sjmsjc.html?time=1506729815.97871','设计模式',10145),('设计模式','http://blog.csdn.net/column/details/designpatternsummary.html?time=1506729815.978779','大话设计模式',9862),('设计模式','http://blog.csdn.net/column/details/shenruqianchu-design.html?time=1506729815.978786','深入浅出设计模式',9862),('设计模式','http://blog.csdn.net/column/details/desginpattern.html?time=1506729847.236504','设计模式',11568),('设计模式','http://blog.csdn.net/column/details/design-patterns001.html?time=1506729847.236574','设计模式的六大原则',11562),('设计模式','http://blog.csdn.net/column/details/13758.html?time=1506729847.236584','java设计模式学习',11444),('设计模式','http://blog.csdn.net/column/details/zysjms.html?time=1506729847.236593','设计模式',11206),('设计模式','http://blog.csdn.net/column/details/designmodel.html?time=1506729847.2366','设计模式',10912),('设计模式','http://blog.csdn.net/column/details/javapatternexample.html?time=1506729847.236608','java设计模式实例',10695),('设计模式','http://blog.csdn.net/column/details/code-design.html?time=1506729848.256915','设计模式融入生活',128193),('设计模式','http://blog.csdn.net/column/details/designpatternforb.html?time=1506729848.256947','\"围观\"设计模式',112906),('设计模式','http://blog.csdn.net/column/details/lxydahua.html?time=1506729851.143622','大话设计模式',13103),('设计模式','http://blog.csdn.net/column/details/walker1.html?time=1506729851.143648','设计模式C++实现',12881),('设计模式','http://blog.csdn.net/column/details/patternofjie.html?time=1506729851.143673','设计模式',12753),('设计模式','http://blog.csdn.net/column/details/13400.html?time=1506729851.143708','设计模式',12708),('设计模式','http://blog.csdn.net/column/details/13891.html?time=1506729851.143717','《设计模式》',12407),('设计模式','http://blog.csdn.net/column/details/zhenghaozhuanlan.html?time=1506729851.143725','设计模式',12334),('设计模式','http://blog.csdn.net/column/details/14788.html?time=1506729879.366026','设计模式(Java)',44515),('设计模式','http://blog.csdn.net/column/details/xing-designpattern.html?time=1506729879.366071','写最好的设计模式专栏',43972),('设计模式','http://blog.csdn.net/column/details/patternsdesign.html?time=1506729879.366106','设计模式笔记',40797),('设计模式','http://blog.csdn.net/column/details/design-pattern23.html?time=1506729879.366113','C#设计模式',40584),('设计模式','http://blog.csdn.net/column/details/oodm.html?time=1506729880.414816','面向对象设计模式',89025),('设计模式','http://blog.csdn.net/column/details/huohuo.html?time=1506729899.546796','大话设计模式',19407),('设计模式','http://blog.csdn.net/column/details/extenddesignpattern.html?time=1506729899.546822','可扩展性与设计模式',19153),('设计模式','http://blog.csdn.net/column/details/designpatterns-night.html?time=1506729899.546836','设计模式',18359),('设计模式','http://blog.csdn.net/column/details/xiaomaolv.html?time=1506729899.546842','设计模式',18269),('设计模式','http://blog.csdn.net/column/details/design-pattern.html?time=1506729899.546848','设计模式在实际项目中的应用',18244),('设计模式','http://blog.csdn.net/column/details/cainiaojava.html?time=1506729900.687808','菜鸟版JAVA设计模式',21271),('设计模式','http://blog.csdn.net/column/details/designpatterns-qt.html?time=1506729900.687842','设计模式(Qt版)',21101),('设计模式','http://blog.csdn.net/column/details/dhsjms.html?time=1506729900.687853','大话设计模式',20384),('设计模式','http://blog.csdn.net/column/details/sjms.html?time=1506729900.687862','设计模式',19664),('设计模式','http://blog.csdn.net/column/details/design-pattern-java.html?time=1506729901.732227','设计模式（JAVA）',28472),('设计模式','http://blog.csdn.net/column/details/design--pattern.html?time=1506729901.732259','设计模式',28377),('设计模式','http://blog.csdn.net/column/details/ds-1.html?time=1506729901.732266','大话设计模式',28274),('设计模式','http://blog.csdn.net/column/details/14308.html?time=1506729901.732274','设计模式之美',27672),('设计模式','http://blog.csdn.net/column/details/designaction.html?time=1506729901.732288','设计模式',27448),('设计模式','http://blog.csdn.net/column/details/16366.html?time=1506729901.732295','设计模式讲解与代码实践',27191),('设计模式','http://blog.csdn.net/column/details/baadf00df00dabadfds0.html?time=1506729901.732305','初探设计模式（C++实现）',26140),('设计模式','http://blog.csdn.net/column/details/ef3c5ec0-f3c9-48af.html?time=1506729901.732312','设计模式精解',25921),('设计模式','http://blog.csdn.net/column/details/cpp-design-pattern.html?time=1506729902.612751','C++设计模式',302713),('设计模式','http://blog.csdn.net/column/details/designpattern-xt.html?time=1506729902.612784','DesignPattern(设计模式)',248117),('设计模式','http://blog.csdn.net/column/details/mydesignpattern.html?time=1506729902.612795','我所理解的设计模式',233305),('设计模式','http://blog.csdn.net/column/details/designerpattern.html?time=1506729948.05106','IOS设计模式浅析',34363),('设计模式','http://blog.csdn.net/column/details/phpusedesignpattern.html?time=1506729948.051097','设计模式之PHP项目应用',33529),('设计模式','http://blog.csdn.net/column/details/artofdesignpattern.html?time=1506729948.051108','设计模式的艺术',32659),('设计模式','http://blog.csdn.net/column/details/shejimoshishengsheng.html?time=1506729948.090054','设计模式',31803),('设计模式','http://blog.csdn.net/column/details/dhsjms-cplusplus.html?time=1506729948.09009','《大话设计模式》C++实现',28867),('设计模式','http://blog.csdn.net/column/details/17017.html?time=1506729948.090099','快速扩展和迭代 - 设计模式',28607),('设计模式','http://blog.csdn.net/column/details/13196.html?time=1506729949.130654','设计模式',15988),('设计模式','http://blog.csdn.net/column/details/suski-pattern.html?time=1506729949.130685','《大话设计模式》读后感',15671),('设计模式','http://blog.csdn.net/column/details/mydesignpattern35.html?time=1506729949.130697','设计模式之全解析',15070),('设计模式','http://blog.csdn.net/column/details/gof-design-patterns.html?time=1506729949.130704','GoF设计模式',14938),('设计模式','http://blog.csdn.net/column/details/shms520.html?time=1506729949.130711','设计模式',14825),('设计模式','http://blog.csdn.net/column/details/note-design-pattern.html?time=1506729950.10813','设计模式笔记',14771),('设计模式','http://blog.csdn.net/column/details/13088.html?time=1506729950.108183','设计模式',14198),('设计模式','http://blog.csdn.net/column/details/javadesignmodel.html?time=1506729950.108194','23天征服--23种设计模式',13813),('设计模式','http://blog.csdn.net/column/details/oodesign.html?time=1506729951.078006','设计模式攻略',51151),('设计模式','http://blog.csdn.net/column/details/my-designpattern.html?time=1506729951.078034','设计模式与系统架构',46480),('设计模式','http://blog.csdn.net/column/details/designpatterns4java.html?time=1506729951.078043','23种设计模式 (java通俗演义)',45653),('设计模式','http://blog.csdn.net/column/details/design-pattern-homer.html?time=1506729951.07805','设计模式',45447),('设计模式','http://blog.csdn.net/column/details/designpatterns.html?time=1506730001.555068','大话设计模式',75070),('设计模式','http://blog.csdn.net/column/details/design2.html?time=1506730001.555092','乱砍设计模式',74622),('设计模式','http://blog.csdn.net/column/details/lius0011.html?time=1506730025.011134','设计模式实例',12210),('设计模式','http://blog.csdn.net/column/details/designpattern-qiu.html?time=1506730025.01117','设计模式',12127),('设计模式','http://blog.csdn.net/column/details/mydesignpatterns.html?time=1506730025.011179','设计模式通俗讲解&&C++实现',12085),('设计模式','http://blog.csdn.net/column/details/designpatternsharing.html?time=1506730025.011185','设计模式',12008),('设计模式','http://blog.csdn.net/column/details/java-design-mode.html?time=1506730025.011206','java设计模式',11981),('设计模式','http://blog.csdn.net/column/details/theonegis-design.html?time=1506730025.011215','设计模式学习笔记',11645),('设计模式','http://blog.csdn.net/column/details/softwaredesign.html?time=1506730026.114767','设计模式',38936),('设计模式','http://blog.csdn.net/column/details/wenqiang.html?time=1506730026.114822','设计模式之禅',38237),('设计模式','http://blog.csdn.net/column/details/gof-design-pattern.html?time=1506730026.114837','小清新GoF23种设计模式',37685),('设计模式','http://blog.csdn.net/column/details/13856.html?time=1506730026.114849','设计模式',37641),('设计模式','http://blog.csdn.net/column/details/my-designpatterns.html?time=1506730026.114861','设计模式之禅',36662),('设计模式','http://blog.csdn.net/column/details/javadesignpattern.html?time=1506730054.345197','设计模式',17195),('设计模式','http://blog.csdn.net/column/details/16401.html?time=1506730054.345222','24种设计模式',16858),('设计模式','http://blog.csdn.net/column/details/design-pattern-hxm.html?time=1506730054.345231','设计模式之android',16819),('设计模式','http://blog.csdn.net/column/details/mdmcsdn1.html?time=1506730054.345237','设计模式',16788),('设计模式','http://blog.csdn.net/column/details/ourdesignpattern.html?time=1506730054.345243','设计模式',16469);
/*!40000 ALTER TABLE `t_csdn_columns` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `t_user`
--

DROP TABLE IF EXISTS `t_user`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `t_user` (
  `uid` bigint(20) NOT NULL AUTO_INCREMENT,
  `name` varchar(128) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `login_pwd` varchar(128) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `email` varchar(512) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `email_status` tinyint(4) DEFAULT NULL,
  `avatar` varchar(256) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `status` tinyint(4) DEFAULT NULL,
  `create_time` bigint(20) DEFAULT NULL,
  `last_login_time` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`uid`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `t_user`
--

LOCK TABLES `t_user` WRITE;
/*!40000 ALTER TABLE `t_user` DISABLE KEYS */;
/*!40000 ALTER TABLE `t_user` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2017-11-08 10:54:48
