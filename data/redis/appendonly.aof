*2
$6
SELECT
$1
0
*3
$3
set
$5
hello
$5
world
*2
$6
SELECT
$1
0
*2
$3
del
$5
hello
*2
$6
SELECT
$1
0
*4
$4
HSET
$18
hash:category:by:1
$2
id
$1
1
*4
$4
HSET
$18
hash:category:by:1
$4
name
$12
设计模式
*3
$4
SADD
$12
set:category
$1
1
*4
$4
HSET
$18
hash:category:by:2
$2
id
$1
2
*4
$4
HSET
$18
hash:category:by:2
$4
name
$4
Java
*3
$4
SADD
$12
set:category
$1
2
*4
$4
HSET
$18
hash:category:by:3
$2
id
$1
3
*4
$4
HSET
$18
hash:category:by:3
$4
name
$5
MySQL
*3
$4
SADD
$12
set:category
$1
3
*4
$4
HSET
$18
hash:category:by:4
$2
id
$1
4
*4
$4
HSET
$18
hash:category:by:4
$4
name
$5
Linux
*3
$4
SADD
$12
set:category
$1
4
*4
$4
HSET
$18
hash:category:by:5
$2
id
$1
5
*4
$4
HSET
$18
hash:category:by:5
$4
name
$5
Nginx
*3
$4
SADD
$12
set:category
$1
5
*4
$4
HSET
$18
hash:category:by:6
$2
id
$1
6
*4
$4
HSET
$18
hash:category:by:6
$4
name
$3
UML
*3
$4
SADD
$12
set:category
$1
6
*4
$4
HSET
$18
hash:category:by:7
$2
id
$1
7
*4
$4
HSET
$18
hash:category:by:7
$4
name
$5
redis
*3
$4
SADD
$12
set:category
$1
7
*4
$4
HSET
$17
hash:menCacheKeys
$16
article_category
$4
true
*4
$4
HSET
$22
hash:article:by:100822
$2
id
$6
100822
*4
$4
HSET
$22
hash:article:by:100822
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100822
$9
articleId
$4
2809
*4
$4
HSET
$22
hash:article:by:100822
$5
title
$41
Java设计模式_(结构型)_装饰模式
*4
$4
HSET
$22
hash:article:by:100822
$10
categoryId
$1
1
*4
$4
HSET
$22
hash:article:by:100822
$8
labelIds
$8
[53,493]
*4
$4
HSET
$22
hash:article:by:100822
$6
digest
$297
引用百科	装饰模式指的是在不必改变原类文件和使用继承的情况下，动态地扩展一个对象的功能。它是通过创建一个包装对象，也就是装饰来包裹真实的对象。特点（1） 装饰对象和真实对象有相同的接口。这样客户端对象...
*4
$4
HSET
$22
hash:article:by:100822
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100822
$7
content
$41
csdn/mode/37_4_1_0_1506729620.506558.html
*4
$4
HSET
$22
hash:article:by:100822
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100822
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100822
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100822
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100822
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100822
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100822
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100822
$10
createTime
$13
1506693638000
*4
$4
HSET
$22
hash:article:by:100822
$11
releaseTime
$13
1506693638000
*4
$4
HSET
$22
hash:article:by:100822
$10
updateTime
$13
1506693638000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100822
*4
$4
ZADD
$28
zset:article:category:read:1
$3
0.0
$6
100822
*3
$5
LPUSH
$15
list:article:id
$6
100822
*3
$5
LPUSH
$29
list:article:by:category:id:1
$6
100822
*4
$4
HSET
$22
hash:article:by:100821
$2
id
$6
100821
*4
$4
HSET
$22
hash:article:by:100821
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100821
$9
articleId
$4
2807
*4
$4
HSET
$22
hash:article:by:100821
$5
title
$41
Java设计模式_(结构型)_代理模式
*4
$4
HSET
$22
hash:article:by:100821
$10
categoryId
$1
1
*4
$4
HSET
$22
hash:article:by:100821
$8
labelIds
$7
[53,39]
*4
$4
HSET
$22
hash:article:by:100821
$6
digest
$273
引用百科即Proxy Pattern，23种常用的面向对象软件的设计模式之一。代理模式的定义：为其他对象提供一种代理以控制对这个对象的访问。在某些情况下，一个对象不适合或者不能直接引用另一个对象，而代...
*4
$4
HSET
$22
hash:article:by:100821
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100821
$7
content
$41
csdn/mode/37_2_1_0_1506556848.581732.html
*4
$4
HSET
$22
hash:article:by:100821
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100821
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100821
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100821
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100821
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100821
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100821
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100821
$10
createTime
$13
1506459644000
*4
$4
HSET
$22
hash:article:by:100821
$11
releaseTime
$13
1506459644000
*4
$4
HSET
$22
hash:article:by:100821
$10
updateTime
$13
1506459644000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100821
*4
$4
ZADD
$28
zset:article:category:read:1
$3
0.0
$6
100821
*3
$5
LPUSH
$15
list:article:id
$6
100821
*3
$5
LPUSH
$29
list:article:by:category:id:1
$6
100821
*4
$4
HSET
$22
hash:article:by:100820
$2
id
$6
100820
*4
$4
HSET
$22
hash:article:by:100820
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100820
$9
articleId
$4
2808
*4
$4
HSET
$22
hash:article:by:100820
$5
title
$41
Java设计模式_(结构型)_桥接模式
*4
$4
HSET
$22
hash:article:by:100820
$10
categoryId
$1
1
*4
$4
HSET
$22
hash:article:by:100820
$8
labelIds
$10
[12,53,89]
*4
$4
HSET
$22
hash:article:by:100820
$6
digest
$245
引用百科	桥接模式是将抽象部分与它的实现部分分离，使它们都可以独立地变化。它是一种对象结构型模式，又称为柄体(Handle and Body)模式或接口(Interface)模式。在软件系统中，某些类...
*4
$4
HSET
$22
hash:article:by:100820
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100820
$7
content
$41
csdn/mode/37_2_1_1_1506556849.585141.html
*4
$4
HSET
$22
hash:article:by:100820
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100820
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100820
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100820
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100820
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100820
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100820
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100820
$10
createTime
$13
1506412844000
*4
$4
HSET
$22
hash:article:by:100820
$11
releaseTime
$13
1506412844000
*4
$4
HSET
$22
hash:article:by:100820
$10
updateTime
$13
1506412844000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100820
*4
$4
ZADD
$28
zset:article:category:read:1
$3
0.0
$6
100820
*3
$5
LPUSH
$15
list:article:id
$6
100820
*3
$5
LPUSH
$29
list:article:by:category:id:1
$6
100820
*4
$4
HSET
$22
hash:article:by:100819
$2
id
$6
100819
*4
$4
HSET
$22
hash:article:by:100819
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100819
$9
articleId
$4
2806
*4
$4
HSET
$22
hash:article:by:100819
$5
title
$41
Java设计模式_(结构型)_外观模式
*4
$4
HSET
$22
hash:article:by:100819
$10
categoryId
$1
1
*4
$4
HSET
$22
hash:article:by:100819
$8
labelIds
$14
[18,53,55,522]
*4
$4
HSET
$22
hash:article:by:100819
$6
digest
$265
引用百科外观模式（Facade），为子系统中的一组接口提供一个一致的界面，定义一个高层接口，这个接口使得这一子系统更加容易使用。Facade这个外观类为子系统提供一个共同的对外接口Clients客户对...
*4
$4
HSET
$22
hash:article:by:100819
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100819
$7
content
$41
csdn/mode/37_5_1_0_1506384042.670113.html
*4
$4
HSET
$22
hash:article:by:100819
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100819
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100819
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100819
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100819
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100819
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100819
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100819
$10
createTime
$13
1506344454000
*4
$4
HSET
$22
hash:article:by:100819
$11
releaseTime
$13
1506344454000
*4
$4
HSET
$22
hash:article:by:100819
$10
updateTime
$13
1506344454000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100819
*4
$4
ZADD
$28
zset:article:category:read:1
$3
0.0
$6
100819
*3
$5
LPUSH
$15
list:article:id
$6
100819
*3
$5
LPUSH
$29
list:article:by:category:id:1
$6
100819
*4
$4
HSET
$22
hash:article:by:100817
$2
id
$6
100817
*4
$4
HSET
$22
hash:article:by:100817
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100817
$9
articleId
$4
2804
*4
$4
HSET
$22
hash:article:by:100817
$5
title
$43
架构师入门笔记十 Netty5快速入门
*4
$4
HSET
$22
hash:article:by:100817
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100817
$8
labelIds
$5
[350]
*4
$4
HSET
$22
hash:article:by:100817
$6
digest
$223
架构师入门笔记十 Netty5快速入门


在了解IO，NIO，AIO知识后，学习Netty5便会轻松很多，本章节主要介绍Netty是如何接收，反馈数据和拆包粘包的问题。



1 Netty基础知识...
*4
$4
HSET
$22
hash:article:by:100817
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100817
$7
content
$41
csdn/java/37_3_1_0_1506094316.615497.html
*4
$4
HSET
$22
hash:article:by:100817
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100817
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100817
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100817
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100817
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100817
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100817
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100817
$10
createTime
$13
1506088840000
*4
$4
HSET
$22
hash:article:by:100817
$11
releaseTime
$13
1506088840000
*4
$4
HSET
$22
hash:article:by:100817
$10
updateTime
$13
1506088840000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100817
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100817
*3
$5
LPUSH
$15
list:article:id
$6
100817
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100817
*4
$4
HSET
$22
hash:article:by:100818
$2
id
$6
100818
*4
$4
HSET
$22
hash:article:by:100818
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100818
$9
articleId
$4
2805
*4
$4
HSET
$22
hash:article:by:100818
$5
title
$41
Java设计模式_(结构型)_组合模式
*4
$4
HSET
$22
hash:article:by:100818
$10
categoryId
$1
1
*4
$4
HSET
$22
hash:article:by:100818
$8
labelIds
$5
[448]
*4
$4
HSET
$22
hash:article:by:100818
$6
digest
$287
引用百科组合模式，将对象组合成树形结构以表示“部分-整体”的层次结构，组合模式使得用户对单个对象和组合对象的使用具有一致性。掌握组合模式的重点是要理解清楚 “部分/整体” 还有 ”单个对象“ 与 "组...
*4
$4
HSET
$22
hash:article:by:100818
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100818
$7
content
$41
csdn/mode/37_0_1_0_1506211257.721213.html
*4
$4
HSET
$22
hash:article:by:100818
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100818
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100818
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100818
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100818
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100818
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100818
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100818
$10
createTime
$13
1506088837000
*4
$4
HSET
$22
hash:article:by:100818
$11
releaseTime
$13
1506088837000
*4
$4
HSET
$22
hash:article:by:100818
$10
updateTime
$13
1506088837000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100818
*4
$4
ZADD
$28
zset:article:category:read:1
$3
0.0
$6
100818
*3
$5
LPUSH
$15
list:article:id
$6
100818
*3
$5
LPUSH
$29
list:article:by:category:id:1
$6
100818
*4
$4
HSET
$22
hash:article:by:100810
$2
id
$6
100810
*4
$4
HSET
$22
hash:article:by:100810
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100810
$9
articleId
$4
2797
*4
$4
HSET
$22
hash:article:by:100810
$5
title
$44
Java设计模式_(结构型)_适配器模式
*4
$4
HSET
$22
hash:article:by:100810
$10
categoryId
$1
1
*4
$4
HSET
$22
hash:article:by:100810
$8
labelIds
$10
[53,12,77]
*4
$4
HSET
$22
hash:article:by:100810
$6
digest
$301
引用百科	在计算机编程中，适配器模式（有时候也称包装样式或者包装）将一个类的接口适配成用户所期待的。一个适配允许通常因为接口不兼容而不能在一起工作的类工作在一起，做法是将类自己的接口包裹在一个已存在的...
*4
$4
HSET
$22
hash:article:by:100810
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100810
$7
content
$40
csdn/mode/37_2_1_0_1506038455.68991.html
*4
$4
HSET
$22
hash:article:by:100810
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100810
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100810
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100810
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100810
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100810
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100810
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100810
$10
createTime
$13
1506002454000
*4
$4
HSET
$22
hash:article:by:100810
$11
releaseTime
$13
1506002454000
*4
$4
HSET
$22
hash:article:by:100810
$10
updateTime
$13
1506002454000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100810
*4
$4
ZADD
$28
zset:article:category:read:1
$3
0.0
$6
100810
*3
$5
LPUSH
$15
list:article:id
$6
100810
*3
$5
LPUSH
$29
list:article:by:category:id:1
$6
100810
*4
$4
HSET
$22
hash:article:by:100811
$2
id
$6
100811
*4
$4
HSET
$22
hash:article:by:100811
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100811
$9
articleId
$4
2798
*4
$4
HSET
$22
hash:article:by:100811
$5
title
$44
Java设计模式_(创建型)_建造者模式
*4
$4
HSET
$22
hash:article:by:100811
$10
categoryId
$1
1
*4
$4
HSET
$22
hash:article:by:100811
$8
labelIds
$11
[12,53,176]
*4
$4
HSET
$22
hash:article:by:100811
$6
digest
$291
引用百科   建造者模式是设计模式的一种，将一个复杂对象的构建与它的表示分离，使得同样的构建过程可以创建不同的表示。实用范围1 当创建复杂对象的算法应该独立于该对象的组成部分以及它们的装配方式时。2 ...
*4
$4
HSET
$22
hash:article:by:100811
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100811
$7
content
$41
csdn/mode/37_2_1_1_1506038456.749904.html
*4
$4
HSET
$22
hash:article:by:100811
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100811
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100811
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100811
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100811
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100811
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100811
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100811
$10
createTime
$13
1505919640000
*4
$4
HSET
$22
hash:article:by:100811
$11
releaseTime
$13
1505919640000
*4
$4
HSET
$22
hash:article:by:100811
$10
updateTime
$13
1505919640000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100811
*4
$4
ZADD
$28
zset:article:category:read:1
$3
0.0
$6
100811
*3
$5
LPUSH
$15
list:article:id
$6
100811
*3
$5
LPUSH
$29
list:article:by:category:id:1
$6
100811
*4
$4
HSET
$22
hash:article:by:100816
$2
id
$6
100816
*4
$4
HSET
$22
hash:article:by:100816
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100816
$9
articleId
$4
2799
*4
$4
HSET
$22
hash:article:by:100816
$5
title
$41
Java设计模式_(创建型)_原型模式
*4
$4
HSET
$22
hash:article:by:100816
$10
categoryId
$1
1
*4
$4
HSET
$22
hash:article:by:100816
$8
labelIds
$11
[18,53,467]
*4
$4
HSET
$22
hash:article:by:100816
$6
digest
$267
引用百科：用原型实例指定创建对象的种类，并且通过拷贝这些原型创建新的对象。Prototype原型模式是一种创建型设计模式，Prototype模式允许一个对象再创建另外一个可定制的对象，根本无需知道任何...
*4
$4
HSET
$22
hash:article:by:100816
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100816
$7
content
$41
csdn/mode/37_2_1_2_1506038457.690015.html
*4
$4
HSET
$22
hash:article:by:100816
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100816
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100816
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100816
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100816
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100816
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100816
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100816
$10
createTime
$13
1505836819000
*4
$4
HSET
$22
hash:article:by:100816
$11
releaseTime
$13
1505836819000
*4
$4
HSET
$22
hash:article:by:100816
$10
updateTime
$13
1505836819000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100816
*4
$4
ZADD
$28
zset:article:category:read:1
$3
0.0
$6
100816
*3
$5
LPUSH
$15
list:article:id
$6
100816
*3
$5
LPUSH
$29
list:article:by:category:id:1
$6
100816
*4
$4
HSET
$22
hash:article:by:100814
$2
id
$6
100814
*4
$4
HSET
$22
hash:article:by:100814
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100814
$9
articleId
$4
2801
*4
$4
HSET
$22
hash:article:by:100814
$5
title
$47
Java设计模式_(创建型)_抽象工厂模式
*4
$4
HSET
$22
hash:article:by:100814
$10
categoryId
$1
1
*4
$4
HSET
$22
hash:article:by:100814
$8
labelIds
$8
[478,12]
*4
$4
HSET
$22
hash:article:by:100814
$6
digest
$301
引用百科：	抽象工厂模式是所有形态的工厂模式中最为抽象和最具一般性的一种形态。抽象工厂模式是指当有多个抽象角色时，使用的一种工厂模式。抽象工厂模式可以向客户端提供一个接口，使客户端在不必指定产品的具体...
*4
$4
HSET
$22
hash:article:by:100814
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100814
$7
content
$41
csdn/mode/37_2_1_6_1506038459.745736.html
*4
$4
HSET
$22
hash:article:by:100814
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100814
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100814
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100814
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100814
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100814
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100814
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100814
$10
createTime
$13
1505768420000
*4
$4
HSET
$22
hash:article:by:100814
$11
releaseTime
$13
1505768420000
*4
$4
HSET
$22
hash:article:by:100814
$10
updateTime
$13
1505768420000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100814
*4
$4
ZADD
$28
zset:article:category:read:1
$3
0.0
$6
100814
*3
$5
LPUSH
$15
list:article:id
$6
100814
*3
$5
LPUSH
$29
list:article:by:category:id:1
$6
100814
*4
$4
HSET
$22
hash:article:by:100812
$2
id
$6
100812
*4
$4
HSET
$22
hash:article:by:100812
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100812
$9
articleId
$4
2802
*4
$4
HSET
$22
hash:article:by:100812
$5
title
$41
Java设计模式_(创建型)_工厂模式
*4
$4
HSET
$22
hash:article:by:100812
$10
categoryId
$1
1
*4
$4
HSET
$22
hash:article:by:100812
$8
labelIds
$11
[18,53,361]
*4
$4
HSET
$22
hash:article:by:100812
$6
digest
$273
引用百科：  	工厂模式是我们最常用的实例化对象模式了，是用工厂方法代替new操作的一种模式。著名的Jive论坛 ,就大量使用了工厂模式，工厂模式在Java程序系统可以说是随处可见。因为工厂模式就相当...
*4
$4
HSET
$22
hash:article:by:100812
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100812
$7
content
$41
csdn/mode/37_2_1_5_1506038460.410604.html
*4
$4
HSET
$22
hash:article:by:100812
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100812
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100812
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100812
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100812
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100812
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100812
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100812
$10
createTime
$13
1505322009000
*4
$4
HSET
$22
hash:article:by:100812
$11
releaseTime
$13
1505322009000
*4
$4
HSET
$22
hash:article:by:100812
$10
updateTime
$13
1505322009000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100812
*4
$4
ZADD
$28
zset:article:category:read:1
$3
0.0
$6
100812
*3
$5
LPUSH
$15
list:article:id
$6
100812
*3
$5
LPUSH
$29
list:article:by:category:id:1
$6
100812
*4
$4
HSET
$22
hash:article:by:100806
$2
id
$6
100806
*4
$4
HSET
$22
hash:article:by:100806
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100806
$9
articleId
$4
2793
*4
$4
HSET
$22
hash:article:by:100806
$5
title
$28
设计模式-中介者模式
*4
$4
HSET
$22
hash:article:by:100806
$10
categoryId
$1
1
*4
$4
HSET
$22
hash:article:by:100806
$8
labelIds
$14
[12,85,53,818]
*4
$4
HSET
$22
hash:article:by:100806
$6
digest
$303
在我们的日常生活中经常需要购买各种各样的东西，房子、车子、生活用品等等。那么我们并不会对各个产品都了解，所以销售人员应运而生，他们了解产品，然后他们根据你的需求在向你们推荐符合你们要求的产品。这些销售...
*4
$4
HSET
$22
hash:article:by:100806
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100806
$7
content
$41
csdn/mode/37_4_1_0_1505174526.090284.html
*4
$4
HSET
$22
hash:article:by:100806
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100806
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100806
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100806
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100806
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100806
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100806
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100806
$10
createTime
$13
1505073609000
*4
$4
HSET
$22
hash:article:by:100806
$11
releaseTime
$13
1505073609000
*4
$4
HSET
$22
hash:article:by:100806
$10
updateTime
$13
1505073609000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100806
*4
$4
ZADD
$28
zset:article:category:read:1
$3
0.0
$6
100806
*3
$5
LPUSH
$15
list:article:id
$6
100806
*3
$5
LPUSH
$29
list:article:by:category:id:1
$6
100806
*4
$4
HSET
$22
hash:article:by:100808
$2
id
$6
100808
*4
$4
HSET
$22
hash:article:by:100808
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100808
$9
articleId
$4
2795
*4
$4
HSET
$22
hash:article:by:100808
$5
title
$58
架构师入门笔记八 并发框架Disruptor场景应用
*4
$4
HSET
$22
hash:article:by:100808
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100808
$8
labelIds
$9
[350,665]
*4
$4
HSET
$22
hash:article:by:100808
$6
digest
$261
架构师入门笔记八 并发框架Disruptor场景应用
今天用一个停车场问题来加深对Disruptor的理解。一个有关汽车进入停车场的问题。当汽车进入停车场时，系统首先会记录汽车信息。同时也会发送消息...
*4
$4
HSET
$22
hash:article:by:100808
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100808
$7
content
$40
csdn/java/37_1_1_0_1505260887.14977.html
*4
$4
HSET
$22
hash:article:by:100808
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100808
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100808
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100808
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100808
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100808
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100808
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100808
$10
createTime
$13
1504969231000
*4
$4
HSET
$22
hash:article:by:100808
$11
releaseTime
$13
1504969231000
*4
$4
HSET
$22
hash:article:by:100808
$10
updateTime
$13
1504969231000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100808
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100808
*3
$5
LPUSH
$15
list:article:id
$6
100808
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100808
*4
$4
HSET
$22
hash:article:by:100802
$2
id
$6
100802
*4
$4
HSET
$22
hash:article:by:100802
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100802
$9
articleId
$4
2792
*4
$4
HSET
$22
hash:article:by:100802
$5
title
$28
设计模式-观察者模式
*4
$4
HSET
$22
hash:article:by:100802
$10
categoryId
$1
1
*4
$4
HSET
$22
hash:article:by:100802
$8
labelIds
$11
[12,349,18]
*4
$4
HSET
$22
hash:article:by:100802
$6
digest
$299
在我们日常生活中，有些人会有订阅报纸的经历，当我们订阅时，都能定时的收到报纸，当我么取消订阅时，就不会再收到报纸。 
当然，互联网普及之后，报纸逐渐减少。但是类似的也有许多，例如微信的公众号，当我们订...
*4
$4
HSET
$22
hash:article:by:100802
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100802
$7
content
$41
csdn/mode/37_5_1_0_1505001777.996892.html
*4
$4
HSET
$22
hash:article:by:100802
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100802
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100802
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100802
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100802
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100802
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100802
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100802
$10
createTime
$13
1504958415000
*4
$4
HSET
$22
hash:article:by:100802
$11
releaseTime
$13
1504958415000
*4
$4
HSET
$22
hash:article:by:100802
$10
updateTime
$13
1504958415000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100802
*4
$4
ZADD
$28
zset:article:category:read:1
$3
0.0
$6
100802
*3
$5
LPUSH
$15
list:article:id
$6
100802
*3
$5
LPUSH
$29
list:article:by:category:id:1
$6
100802
*4
$4
HSET
$22
hash:article:by:100807
$2
id
$6
100807
*4
$4
HSET
$22
hash:article:by:100807
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100807
$9
articleId
$4
2794
*4
$4
HSET
$22
hash:article:by:100807
$5
title
$67
史上最简单的 MySQL 教程（三十四）「视图（下）」
*4
$4
HSET
$22
hash:article:by:100807
$10
categoryId
$1
3
*4
$4
HSET
$22
hash:article:by:100807
$8
labelIds
$15
[7,444,445,143]
*4
$4
HSET
$22
hash:article:by:100807
$6
digest
$96
视图操作视图操作：视图是可以进行数据写操作的，只不过有很多限制。
*4
$4
HSET
$22
hash:article:by:100807
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100807
$7
content
$42
csdn/mysql/17_3_1_0_1505174540.535324.html
*4
$4
HSET
$22
hash:article:by:100807
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100807
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100807
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100807
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100807
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100807
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100807
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100807
$10
createTime
$13
1504954852000
*4
$4
HSET
$22
hash:article:by:100807
$11
releaseTime
$13
1504954852000
*4
$4
HSET
$22
hash:article:by:100807
$10
updateTime
$13
1504954852000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100807
*4
$4
ZADD
$28
zset:article:category:read:3
$3
0.0
$6
100807
*3
$5
LPUSH
$15
list:article:id
$6
100807
*3
$5
LPUSH
$29
list:article:by:category:id:3
$6
100807
*4
$4
HSET
$22
hash:article:by:100804
$2
id
$6
100804
*4
$4
HSET
$22
hash:article:by:100804
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100804
$9
articleId
$4
2777
*4
$4
HSET
$22
hash:article:by:100804
$5
title
$32
mysql七表查询实例（二）
*4
$4
HSET
$22
hash:article:by:100804
$10
categoryId
$1
3
*4
$4
HSET
$22
hash:article:by:100804
$8
labelIds
$19
[7,812,813,814,815]
*4
$4
HSET
$22
hash:article:by:100804
$6
digest
$289
而这个语句，这个结果的出现令我彻底蒙圈了。最后想了一个以毒攻毒的办法终于将之拿下。
然而并没有什么卵用......当然还是有正解的：出于科学严谨的态度（呃，好吧，是偶搞错太多次了，怕了），让我们一起来...
*4
$4
HSET
$22
hash:article:by:100804
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100804
$7
content
$42
csdn/mysql/17_4_1_0_1505001635.936508.html
*4
$4
HSET
$22
hash:article:by:100804
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100804
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100804
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100804
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100804
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100804
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100804
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100804
$10
createTime
$13
1504893659000
*4
$4
HSET
$22
hash:article:by:100804
$11
releaseTime
$13
1504893659000
*4
$4
HSET
$22
hash:article:by:100804
$10
updateTime
$13
1504893659000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100804
*4
$4
ZADD
$28
zset:article:category:read:3
$3
0.0
$6
100804
*3
$5
LPUSH
$15
list:article:id
$6
100804
*3
$5
LPUSH
$29
list:article:by:category:id:3
$6
100804
*4
$4
HSET
$22
hash:article:by:100805
$2
id
$6
100805
*4
$4
HSET
$22
hash:article:by:100805
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100805
$9
articleId
$4
2778
*4
$4
HSET
$22
hash:article:by:100805
$5
title
$32
mysql七表查询实例（一）
*4
$4
HSET
$22
hash:article:by:100805
$10
categoryId
$1
3
*4
$4
HSET
$22
hash:article:by:100805
$8
labelIds
$18
[7,63,816,679,817]
*4
$4
HSET
$22
hash:article:by:100805
$6
digest
$287
开始之前先说点有趣的事：经常听说没有主键就无法进行多表查询，其实这太过于片面了。实际上有些情况没有主键也是可以进行多表查询的（例一，所用到的表格也都是下面的表格，先来个4表查询热热身）。
mysql>...
*4
$4
HSET
$22
hash:article:by:100805
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100805
$7
content
$42
csdn/mysql/17_4_1_1_1505001637.016838.html
*4
$4
HSET
$22
hash:article:by:100805
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100805
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100805
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100805
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100805
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100805
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100805
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100805
$10
createTime
$13
1504890035000
*4
$4
HSET
$22
hash:article:by:100805
$11
releaseTime
$13
1504890035000
*4
$4
HSET
$22
hash:article:by:100805
$10
updateTime
$13
1504890035000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100805
*4
$4
ZADD
$28
zset:article:category:read:3
$3
0.0
$6
100805
*3
$5
LPUSH
$15
list:article:id
$6
100805
*3
$5
LPUSH
$29
list:article:by:category:id:3
$6
100805
*4
$4
HSET
$22
hash:article:by:100803
$2
id
$6
100803
*4
$4
HSET
$22
hash:article:by:100803
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100803
$9
articleId
$4
2785
*4
$4
HSET
$22
hash:article:by:100803
$5
title
$35
mysql中条件限制语句（二）
*4
$4
HSET
$22
hash:article:by:100803
$10
categoryId
$1
3
*4
$4
HSET
$22
hash:article:by:100803
$8
labelIds
$19
[7,808,809,810,811]
*4
$4
HSET
$22
hash:article:by:100803
$6
digest
$255
可以看出双百分号%%是全匹配，可以匹配表中的所有记录。那么，即便是NULL值也能够匹配吗？
可以看出当作用于多列的时候distinct就不再返回唯一记录了。
另外distinct还可以和一些数学运算的...
*4
$4
HSET
$22
hash:article:by:100803
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100803
$7
content
$42
csdn/mysql/17_4_1_2_1505001645.161407.html
*4
$4
HSET
$22
hash:article:by:100803
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100803
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100803
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100803
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100803
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100803
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100803
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100803
$10
createTime
$13
1504796442000
*4
$4
HSET
$22
hash:article:by:100803
$11
releaseTime
$13
1504796442000
*4
$4
HSET
$22
hash:article:by:100803
$10
updateTime
$13
1504796442000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100803
*4
$4
ZADD
$28
zset:article:category:read:3
$3
0.0
$6
100803
*3
$5
LPUSH
$15
list:article:id
$6
100803
*3
$5
LPUSH
$29
list:article:by:category:id:3
$6
100803
*4
$4
HSET
$22
hash:article:by:100800
$2
id
$6
100800
*4
$4
HSET
$22
hash:article:by:100800
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100800
$9
articleId
$4
2790
*4
$4
HSET
$22
hash:article:by:100800
$5
title
$35
mysql中条件限制语句（一）
*4
$4
HSET
$22
hash:article:by:100800
$10
categoryId
$1
3
*4
$4
HSET
$22
hash:article:by:100800
$8
labelIds
$19
[7,802,803,804,805]
*4
$4
HSET
$22
hash:article:by:100800
$6
digest
$249
显然where的功能要比in强大得多，因此where的命令优先级也比高一些。而相同条件下where的搜寻范围也比in要大一点---毕竟功能多了，要搜寻的东西就多了。所以，相同的查询条件下where的效...
*4
$4
HSET
$22
hash:article:by:100800
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100800
$7
content
$42
csdn/mysql/17_4_1_3_1505001649.911091.html
*4
$4
HSET
$22
hash:article:by:100800
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100800
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100800
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100800
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100800
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100800
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100800
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100800
$10
createTime
$13
1504778401000
*4
$4
HSET
$22
hash:article:by:100800
$11
releaseTime
$13
1504778401000
*4
$4
HSET
$22
hash:article:by:100800
$10
updateTime
$13
1504778401000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100800
*4
$4
ZADD
$28
zset:article:category:read:3
$3
0.0
$6
100800
*3
$5
LPUSH
$15
list:article:id
$6
100800
*3
$5
LPUSH
$29
list:article:by:category:id:3
$6
100800
*4
$4
HSET
$22
hash:article:by:100799
$2
id
$6
100799
*4
$4
HSET
$22
hash:article:by:100799
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100799
$9
articleId
$4
2791
*4
$4
HSET
$22
hash:article:by:100799
$5
title
$66
mysql加减乘除，求余，求平均值,查询不等于某数值
*4
$4
HSET
$22
hash:article:by:100799
$10
categoryId
$1
3
*4
$4
HSET
$22
hash:article:by:100799
$8
labelIds
$19
[7,798,799,800,801]
*4
$4
HSET
$22
hash:article:by:100799
$6
digest
$117
1.mysql加减乘除操作：
mysql> select score,score+5,score-5,score*5,score/5 from 4a;
+-------+---------+---...
*4
$4
HSET
$22
hash:article:by:100799
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100799
$7
content
$42
csdn/mysql/17_4_1_4_1505001650.292154.html
*4
$4
HSET
$22
hash:article:by:100799
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100799
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100799
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100799
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100799
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100799
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100799
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100799
$10
createTime
$13
1504774825000
*4
$4
HSET
$22
hash:article:by:100799
$11
releaseTime
$13
1504774825000
*4
$4
HSET
$22
hash:article:by:100799
$10
updateTime
$13
1504774825000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100799
*4
$4
ZADD
$28
zset:article:category:read:3
$3
0.0
$6
100799
*3
$5
LPUSH
$15
list:article:id
$6
100799
*3
$5
LPUSH
$29
list:article:by:category:id:3
$6
100799
*4
$4
HSET
$22
hash:article:by:100790
$2
id
$6
100790
*4
$4
HSET
$22
hash:article:by:100790
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100790
$9
articleId
$4
2786
*4
$4
HSET
$22
hash:article:by:100790
$5
title
$56
mysql最大值，最小值，总和查询与计数查询
*4
$4
HSET
$22
hash:article:by:100790
$10
categoryId
$1
3
*4
$4
HSET
$22
hash:article:by:100790
$8
labelIds
$19
[7,765,766,767,768]
*4
$4
HSET
$22
hash:article:by:100790
$6
digest
$253
我们可以看到尽管SNAME有很多记录，但是如果用SUM去查询它的总和，虽然语法上，并没有错误，但是结果显然是"错误的"。
而换用count来对SNAME来进行计数则没有问题。当然，NULL记录是不会被...
*4
$4
HSET
$22
hash:article:by:100790
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100790
$7
content
$42
csdn/mysql/17_4_1_5_1505001645.585119.html
*4
$4
HSET
$22
hash:article:by:100790
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100790
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100790
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100790
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100790
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100790
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100790
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100790
$10
createTime
$13
1504735226000
*4
$4
HSET
$22
hash:article:by:100790
$11
releaseTime
$13
1504735226000
*4
$4
HSET
$22
hash:article:by:100790
$10
updateTime
$13
1504735226000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100790
*4
$4
ZADD
$28
zset:article:category:read:3
$3
0.0
$6
100790
*3
$5
LPUSH
$15
list:article:id
$6
100790
*3
$5
LPUSH
$29
list:article:by:category:id:3
$6
100790
*4
$4
HSET
$22
hash:article:by:100714
$2
id
$6
100714
*4
$4
HSET
$22
hash:article:by:100714
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100714
$9
articleId
$4
2773
*4
$4
HSET
$22
hash:article:by:100714
$5
title
$26
Union和Union All的区别
*4
$4
HSET
$22
hash:article:by:100714
$10
categoryId
$1
3
*4
$4
HSET
$22
hash:article:by:100714
$8
labelIds
$19
[7,143,679,680,681]
*4
$4
HSET
$22
hash:article:by:100714
$6
digest
$153
假设我们有一个表Student，包括以下字段与数据： [c-sharp] view plain copy drop table student;    create table student  ( ...
*4
$4
HSET
$22
hash:article:by:100714
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100714
$7
content
$41
csdn/mysql/17_2_1_0_1504742555.28375.html
*4
$4
HSET
$22
hash:article:by:100714
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100714
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100714
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100714
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100714
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100714
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100714
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100714
$10
createTime
$13
1504713625000
*4
$4
HSET
$22
hash:article:by:100714
$11
releaseTime
$13
1504713625000
*4
$4
HSET
$22
hash:article:by:100714
$10
updateTime
$13
1504713625000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100714
*4
$4
ZADD
$28
zset:article:category:read:3
$3
0.0
$6
100714
*3
$5
LPUSH
$15
list:article:id
$6
100714
*3
$5
LPUSH
$29
list:article:by:category:id:3
$6
100714
*4
$4
HSET
$22
hash:article:by:100801
$2
id
$6
100801
*4
$4
HSET
$22
hash:article:by:100801
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100801
$9
articleId
$4
2789
*4
$4
HSET
$22
hash:article:by:100801
$5
title
$32
mysql删除语句大全（下）
*4
$4
HSET
$22
hash:article:by:100801
$10
categoryId
$1
3
*4
$4
HSET
$22
hash:article:by:100801
$8
labelIds
$19
[7,792,806,807,779]
*4
$4
HSET
$22
hash:article:by:100801
$6
digest
$235
4.update set 语句是mysql最常用的修改和更新语句，它更新信息时也会覆盖（删除）旧的信息。
注意：如果变更信息后面没有加where子句指定其变更的内容，那么update set语句就会把...
*4
$4
HSET
$22
hash:article:by:100801
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100801
$7
content
$42
csdn/mysql/17_4_1_6_1505001648.643907.html
*4
$4
HSET
$22
hash:article:by:100801
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100801
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100801
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100801
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100801
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100801
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100801
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100801
$10
createTime
$13
1504702848000
*4
$4
HSET
$22
hash:article:by:100801
$11
releaseTime
$13
1504702848000
*4
$4
HSET
$22
hash:article:by:100801
$10
updateTime
$13
1504702848000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100801
*4
$4
ZADD
$28
zset:article:category:read:3
$3
0.0
$6
100801
*3
$5
LPUSH
$15
list:article:id
$6
100801
*3
$5
LPUSH
$29
list:article:by:category:id:3
$6
100801
*4
$4
HSET
$22
hash:article:by:100793
$2
id
$6
100793
*4
$4
HSET
$22
hash:article:by:100793
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100793
$9
articleId
$4
2787
*4
$4
HSET
$22
hash:article:by:100793
$5
title
$32
mysql删除语句大全（上）
*4
$4
HSET
$22
hash:article:by:100793
$10
categoryId
$1
3
*4
$4
HSET
$22
hash:article:by:100793
$8
labelIds
$19
[7,777,533,778,779]
*4
$4
HSET
$22
hash:article:by:100793
$6
digest
$239
1.drop语句。可以用来删除数据库和表。2.delete语句。用来删除表中的字段：
A通过where子句来指定删除表中的某个记录：注意：如果delete语句中没有加入where就会把表中的所有记录全...
*4
$4
HSET
$22
hash:article:by:100793
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100793
$7
content
$42
csdn/mysql/17_4_1_7_1505001646.441938.html
*4
$4
HSET
$22
hash:article:by:100793
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100793
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100793
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100793
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100793
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100793
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100793
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100793
$10
createTime
$13
1504684858000
*4
$4
HSET
$22
hash:article:by:100793
$11
releaseTime
$13
1504684858000
*4
$4
HSET
$22
hash:article:by:100793
$10
updateTime
$13
1504684858000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100793
*4
$4
ZADD
$28
zset:article:category:read:3
$3
0.0
$6
100793
*3
$5
LPUSH
$15
list:article:id
$6
100793
*3
$5
LPUSH
$29
list:article:by:category:id:3
$6
100793
*4
$4
HSET
$22
hash:article:by:100713
$2
id
$6
100713
*4
$4
HSET
$22
hash:article:by:100713
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100713
$9
articleId
$4
2775
*4
$4
HSET
$22
hash:article:by:100713
$5
title
$21
SQL语句优化技巧
*4
$4
HSET
$22
hash:article:by:100713
$10
categoryId
$1
3
*4
$4
HSET
$22
hash:article:by:100713
$8
labelIds
$21
[146,147,676,677,678]
*4
$4
HSET
$22
hash:article:by:100713
$6
digest
$231
1、应尽量避免在 where 子句中使用!=或2、对查询进行优化，应尽量避免全表扫描，首先应考虑在 where 及 order by 涉及的列上建立索引。3、应尽量避免在 where 子句中对字段进行...
*4
$4
HSET
$22
hash:article:by:100713
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100713
$7
content
$42
csdn/mysql/17_2_1_1_1504742557.120616.html
*4
$4
HSET
$22
hash:article:by:100713
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100713
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100713
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100713
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100713
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100713
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100713
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100713
$10
createTime
$13
1504648805000
*4
$4
HSET
$22
hash:article:by:100713
$11
releaseTime
$13
1504648805000
*4
$4
HSET
$22
hash:article:by:100713
$10
updateTime
$13
1504648805000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100713
*4
$4
ZADD
$28
zset:article:category:read:3
$3
0.0
$6
100713
*3
$5
LPUSH
$15
list:article:id
$6
100713
*3
$5
LPUSH
$29
list:article:by:category:id:3
$6
100713
*4
$4
HSET
$22
hash:article:by:100823
$2
id
$6
100823
*4
$4
HSET
$22
hash:article:by:100823
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100823
$9
articleId
$4
2810
*4
$4
HSET
$22
hash:article:by:100823
$5
title
$32
MySQL之——集群的那些事
*4
$4
HSET
$22
hash:article:by:100823
$10
categoryId
$1
3
*4
$4
HSET
$22
hash:article:by:100823
$8
labelIds
$3
[7]
*4
$4
HSET
$22
hash:article:by:100823
$6
digest
$295
1   数据复制技术简介
数据库复制是指频繁的将数据从一个节点（服务器上的一个数据库）复制到另一个节点，可以将数据库复制系统看作一个分布式数据库，但是其中所有节点共享相同的信息。这类系统也称为数据库集...
*4
$4
HSET
$22
hash:article:by:100823
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100823
$7
content
$39
csdn/mysql/17_5_1_0_1506729669.112.html
*4
$4
HSET
$22
hash:article:by:100823
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100823
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100823
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100823
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100823
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100823
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100823
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100823
$10
createTime
$13
1504645239000
*4
$4
HSET
$22
hash:article:by:100823
$11
releaseTime
$13
1504645239000
*4
$4
HSET
$22
hash:article:by:100823
$10
updateTime
$13
1504645239000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100823
*4
$4
ZADD
$28
zset:article:category:read:3
$3
0.0
$6
100823
*3
$5
LPUSH
$15
list:article:id
$6
100823
*3
$5
LPUSH
$29
list:article:by:category:id:3
$6
100823
*4
$4
HSET
$22
hash:article:by:100711
$2
id
$6
100711
*4
$4
HSET
$22
hash:article:by:100711
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100711
$9
articleId
$4
2776
*4
$4
HSET
$22
hash:article:by:100711
$5
title
$29
mysql乐观锁总结和实践
*4
$4
HSET
$22
hash:article:by:100711
$10
categoryId
$1
3
*4
$4
HSET
$22
hash:article:by:100711
$8
labelIds
$17
[7,143,33,34,650]
*4
$4
HSET
$22
hash:article:by:100711
$6
digest
$283
上一篇文章《MySQL悲观锁总结和实践》谈到了MySQL悲观锁，但是悲观锁并不是适用于任何场景，它也有它存在的一些不足，因为悲观锁大多数情况下依靠数据库的锁机制实现，以保证操作最大程度的独占性。如果加...
*4
$4
HSET
$22
hash:article:by:100711
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100711
$7
content
$42
csdn/mysql/17_2_1_2_1504742558.153256.html
*4
$4
HSET
$22
hash:article:by:100711
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100711
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100711
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100711
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100711
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100711
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100711
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100711
$10
createTime
$13
1504630806000
*4
$4
HSET
$22
hash:article:by:100711
$11
releaseTime
$13
1504630806000
*4
$4
HSET
$22
hash:article:by:100711
$10
updateTime
$13
1504630806000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100711
*4
$4
ZADD
$28
zset:article:category:read:3
$3
0.0
$6
100711
*3
$5
LPUSH
$15
list:article:id
$6
100711
*3
$5
LPUSH
$29
list:article:by:category:id:3
$6
100711
*4
$4
HSET
$22
hash:article:by:100710
$2
id
$6
100710
*4
$4
HSET
$22
hash:article:by:100710
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100710
$9
articleId
$4
2774
*4
$4
HSET
$22
hash:article:by:100710
$5
title
$29
mysql悲观锁总结和实践
*4
$4
HSET
$22
hash:article:by:100710
$10
categoryId
$1
3
*4
$4
HSET
$22
hash:article:by:100710
$8
labelIds
$17
[7,143,34,33,675]
*4
$4
HSET
$22
hash:article:by:100710
$6
digest
$302
最近学习了一下数据库的悲观锁和乐观锁，根据自己的理解和网上参考资料总结如下： 悲观锁介绍（百科）：悲观锁，正如其名，它指的是对数据被外界（包括本系统当前的其他事务，以及来自外部系统的事务处理）修改持保...
*4
$4
HSET
$22
hash:article:by:100710
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100710
$7
content
$42
csdn/mysql/17_2_1_3_1504742556.145474.html
*4
$4
HSET
$22
hash:article:by:100710
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100710
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100710
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100710
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100710
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100710
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100710
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100710
$10
createTime
$13
1504630805000
*4
$4
HSET
$22
hash:article:by:100710
$11
releaseTime
$13
1504630805000
*4
$4
HSET
$22
hash:article:by:100710
$10
updateTime
$13
1504630805000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100710
*4
$4
ZADD
$28
zset:article:category:read:3
$3
0.0
$6
100710
*3
$5
LPUSH
$15
list:article:id
$6
100710
*3
$5
LPUSH
$29
list:article:by:category:id:3
$6
100710
*4
$4
HSET
$22
hash:article:by:100712
$2
id
$6
100712
*4
$4
HSET
$22
hash:article:by:100712
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100712
$9
articleId
$4
2772
*4
$4
HSET
$22
hash:article:by:100712
$5
title
$25
设计模式-装饰模式
*4
$4
HSET
$22
hash:article:by:100712
$10
categoryId
$1
1
*4
$4
HSET
$22
hash:article:by:100712
$8
labelIds
$14
[12,68,61,493]
*4
$4
HSET
$22
hash:article:by:100712
$6
digest
$265
介绍装饰器模式（Decorator Pattern）允许向一个现有的对象添加新的功能，同时又不改变其结构。 
继承机制同样可以给现有类增加功能，通过继承一个现有类可以使得子类在拥有自身方法的同时还拥有...
*4
$4
HSET
$22
hash:article:by:100712
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100712
$7
content
$41
csdn/mode/37_7_1_0_1504742538.707862.html
*4
$4
HSET
$22
hash:article:by:100712
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100712
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100712
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100712
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100712
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100712
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100712
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100712
$10
createTime
$13
1504623628000
*4
$4
HSET
$22
hash:article:by:100712
$11
releaseTime
$13
1504623628000
*4
$4
HSET
$22
hash:article:by:100712
$10
updateTime
$13
1504623628000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100712
*4
$4
ZADD
$28
zset:article:category:read:1
$3
0.0
$6
100712
*3
$5
LPUSH
$15
list:article:id
$6
100712
*3
$5
LPUSH
$29
list:article:by:category:id:1
$6
100712
*4
$4
HSET
$22
hash:article:by:100815
$2
id
$6
100815
*4
$4
HSET
$22
hash:article:by:100815
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100815
$9
articleId
$4
2800
*4
$4
HSET
$22
hash:article:by:100815
$5
title
$41
Java设计模式_(创建型)_单例模式
*4
$4
HSET
$22
hash:article:by:100815
$10
categoryId
$1
1
*4
$4
HSET
$22
hash:article:by:100815
$8
labelIds
$7
[12,84]
*4
$4
HSET
$22
hash:article:by:100815
$6
digest
$279
1  概述单例模式，是一种常用的软件设计模式。在它的核心结构中只包含一个被称为单例的特殊类。通过单例模式可以保证系统中一个类只有一个实例。即一个类只有一个对象实例.数学与逻辑学中，singleton定...
*4
$4
HSET
$22
hash:article:by:100815
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100815
$7
content
$41
csdn/mode/37_2_1_4_1506038458.703667.html
*4
$4
HSET
$22
hash:article:by:100815
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100815
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100815
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100815
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100815
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100815
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100815
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100815
$10
createTime
$13
1504620057000
*4
$4
HSET
$22
hash:article:by:100815
$11
releaseTime
$13
1504620057000
*4
$4
HSET
$22
hash:article:by:100815
$10
updateTime
$13
1504620057000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100815
*4
$4
ZADD
$28
zset:article:category:read:1
$3
0.0
$6
100815
*3
$5
LPUSH
$15
list:article:id
$6
100815
*3
$5
LPUSH
$29
list:article:by:category:id:1
$6
100815
*4
$4
HSET
$22
hash:article:by:100813
$2
id
$6
100813
*4
$4
HSET
$22
hash:article:by:100813
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100813
$9
articleId
$4
2803
*4
$4
HSET
$22
hash:article:by:100813
$5
title
$23
Java设计模式_描述
*4
$4
HSET
$22
hash:article:by:100813
$10
categoryId
$1
1
*4
$4
HSET
$22
hash:article:by:100813
$8
labelIds
$4
[12]
*4
$4
HSET
$22
hash:article:by:100813
$6
digest
$273
概述：设计模式（Design Pattern）是一套被反复使用、多数人知晓的、经过分类的、代码设计经验的总结。使用设计模式的目的：为了代码可重用性、让代码更容易被他人理解、保证代码可靠性。 设计模式使...
*4
$4
HSET
$22
hash:article:by:100813
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100813
$7
content
$41
csdn/mode/37_2_1_3_1506038461.703039.html
*4
$4
HSET
$22
hash:article:by:100813
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100813
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100813
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100813
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100813
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100813
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100813
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100813
$10
createTime
$13
1504620050000
*4
$4
HSET
$22
hash:article:by:100813
$11
releaseTime
$13
1504620050000
*4
$4
HSET
$22
hash:article:by:100813
$10
updateTime
$13
1504620050000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100813
*4
$4
ZADD
$28
zset:article:category:read:1
$3
0.0
$6
100813
*3
$5
LPUSH
$15
list:article:id
$6
100813
*3
$5
LPUSH
$29
list:article:by:category:id:1
$6
100813
*4
$4
HSET
$22
hash:article:by:100791
$2
id
$6
100791
*4
$4
HSET
$22
hash:article:by:100791
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100791
$9
articleId
$4
2784
*4
$4
HSET
$22
hash:article:by:100791
$5
title
$40
mysql中insert into语句详解（上）
*4
$4
HSET
$22
hash:article:by:100791
$10
categoryId
$1
3
*4
$4
HSET
$22
hash:article:by:100791
$8
labelIds
$19
[7,769,770,771,772]
*4
$4
HSET
$22
hash:article:by:100791
$6
digest
$227
insert into是mysql中最常用的插入语句，它有5种写法。下面让我们一起来看一看吧：
1向原表中某些字段中插入一条记录。
语法：insert into +表名（表中的字段，，）value（字...
*4
$4
HSET
$22
hash:article:by:100791
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100791
$7
content
$43
csdn/mysql/17_4_1_12_1505001644.163164.html
*4
$4
HSET
$22
hash:article:by:100791
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100791
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100791
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100791
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100791
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100791
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100791
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100791
$10
createTime
$13
1504551635000
*4
$4
HSET
$22
hash:article:by:100791
$11
releaseTime
$13
1504551635000
*4
$4
HSET
$22
hash:article:by:100791
$10
updateTime
$13
1504551635000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100791
*4
$4
ZADD
$28
zset:article:category:read:3
$3
0.0
$6
100791
*3
$5
LPUSH
$15
list:article:id
$6
100791
*3
$5
LPUSH
$29
list:article:by:category:id:3
$6
100791
*4
$4
HSET
$22
hash:article:by:100470
$2
id
$6
100470
*4
$4
HSET
$22
hash:article:by:100470
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100470
$9
articleId
$4
2767
*4
$4
HSET
$22
hash:article:by:100470
$5
title
$25
设计模式-状态模式
*4
$4
HSET
$22
hash:article:by:100470
$10
categoryId
$1
1
*4
$4
HSET
$22
hash:article:by:100470
$8
labelIds
$19
[12,71,164,442,131]
*4
$4
HSET
$22
hash:article:by:100470
$6
digest
$303
介绍状态模式和策略模式是一对双胞胎，他们都属于行为设计模式。状态模式和策略模式都是为具有多种可能情形设计的模式，把不同的处理情形抽象为一个相同的接口，符合对扩展开放，对修改封闭的原则。策略模式封装了一...
*4
$4
HSET
$22
hash:article:by:100470
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100470
$7
content
$41
csdn/mode/37_0_1_0_1504569660.601471.html
*4
$4
HSET
$22
hash:article:by:100470
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100470
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100470
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100470
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100470
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100470
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100470
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100470
$10
createTime
$13
1504548008000
*4
$4
HSET
$22
hash:article:by:100470
$11
releaseTime
$13
1504548008000
*4
$4
HSET
$22
hash:article:by:100470
$10
updateTime
$13
1504548008000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100470
*4
$4
ZADD
$28
zset:article:category:read:1
$3
0.0
$6
100470
*3
$5
LPUSH
$15
list:article:id
$6
100470
*3
$5
LPUSH
$29
list:article:by:category:id:1
$6
100470
*4
$4
HSET
$22
hash:article:by:100797
$2
id
$6
100797
*4
$4
HSET
$22
hash:article:by:100797
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100797
$9
articleId
$4
2780
*4
$4
HSET
$22
hash:article:by:100797
$5
title
$50
mysql更新，修改语句汇总--update set,alter
*4
$4
HSET
$22
hash:article:by:100797
$10
categoryId
$1
3
*4
$4
HSET
$22
hash:article:by:100797
$8
labelIds
$19
[7,790,791,792,793]
*4
$4
HSET
$22
hash:article:by:100797
$6
digest
$201
update set 语句是mysql最常用的修改和更新语句。
其语法为：
update +表名 +set+ 变更后的信息 +where子句；
alter语句也具有修改的功能。而且alter的功能远远...
*4
$4
HSET
$22
hash:article:by:100797
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100797
$7
content
$43
csdn/mysql/17_4_1_15_1505001640.079859.html
*4
$4
HSET
$22
hash:article:by:100797
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100797
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100797
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100797
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100797
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100797
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100797
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100797
$10
createTime
$13
1504540824000
*4
$4
HSET
$22
hash:article:by:100797
$11
releaseTime
$13
1504540824000
*4
$4
HSET
$22
hash:article:by:100797
$10
updateTime
$13
1504540824000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100797
*4
$4
ZADD
$28
zset:article:category:read:3
$3
0.0
$6
100797
*3
$5
LPUSH
$15
list:article:id
$6
100797
*3
$5
LPUSH
$29
list:article:by:category:id:3
$6
100797
*4
$4
HSET
$22
hash:article:by:100792
$2
id
$6
100792
*4
$4
HSET
$22
hash:article:by:100792
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100792
$9
articleId
$4
2781
*4
$4
HSET
$22
hash:article:by:100792
$5
title
$42
mysql的4种复制操作详解（下篇）
*4
$4
HSET
$22
hash:article:by:100792
$10
categoryId
$1
3
*4
$4
HSET
$22
hash:article:by:100792
$8
labelIds
$19
[7,773,774,775,776]
*4
$4
HSET
$22
hash:article:by:100792
$6
digest
$146
3.复制旧表的数据到新表（假设两个表的结构一样）：
4.复制旧表的数据到新表（假设两个表的结构不一样）：
*4
$4
HSET
$22
hash:article:by:100792
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100792
$7
content
$43
csdn/mysql/17_4_1_13_1505001640.150769.html
*4
$4
HSET
$22
hash:article:by:100792
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100792
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100792
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100792
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100792
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100792
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100792
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100792
$10
createTime
$13
1504519232000
*4
$4
HSET
$22
hash:article:by:100792
$11
releaseTime
$13
1504519232000
*4
$4
HSET
$22
hash:article:by:100792
$10
updateTime
$13
1504519232000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100792
*4
$4
ZADD
$28
zset:article:category:read:3
$3
0.0
$6
100792
*3
$5
LPUSH
$15
list:article:id
$6
100792
*3
$5
LPUSH
$29
list:article:by:category:id:3
$6
100792
*4
$4
HSET
$22
hash:article:by:100794
$2
id
$6
100794
*4
$4
HSET
$22
hash:article:by:100794
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100794
$9
articleId
$4
2782
*4
$4
HSET
$22
hash:article:by:100794
$5
title
$42
mysql的4种复制操作详解（上篇）
*4
$4
HSET
$22
hash:article:by:100794
$10
categoryId
$1
3
*4
$4
HSET
$22
hash:article:by:100794
$8
labelIds
$18
[7,776,780,781,61]
*4
$4
HSET
$22
hash:article:by:100794
$6
digest
$179
1.只复制表结构到新表
 
 2.复制表结构及数据到新表
 
 
 
 
 
 
 
 
 
 
 
 



1 CREATE TABLE 新表 LIKE 旧表 ;
 
 
 
 
 
 
 
 
...
*4
$4
HSET
$22
hash:article:by:100794
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100794
$7
content
$43
csdn/mysql/17_4_1_14_1505001641.068557.html
*4
$4
HSET
$22
hash:article:by:100794
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100794
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100794
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100794
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100794
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100794
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100794
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100794
$10
createTime
$13
1504519202000
*4
$4
HSET
$22
hash:article:by:100794
$11
releaseTime
$13
1504519202000
*4
$4
HSET
$22
hash:article:by:100794
$10
updateTime
$13
1504519202000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100794
*4
$4
ZADD
$28
zset:article:category:read:3
$3
0.0
$6
100794
*3
$5
LPUSH
$15
list:article:id
$6
100794
*3
$5
LPUSH
$29
list:article:by:category:id:3
$6
100794
*4
$4
HSET
$22
hash:article:by:100795
$2
id
$6
100795
*4
$4
HSET
$22
hash:article:by:100795
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100795
$9
articleId
$4
2783
*4
$4
HSET
$22
hash:article:by:100795
$5
title
$56
mysql中几个不用结尾符号也能够执行的语句
*4
$4
HSET
$22
hash:article:by:100795
$10
categoryId
$1
3
*4
$4
HSET
$22
hash:article:by:100795
$8
labelIds
$19
[7,782,783,784,785]
*4
$4
HSET
$22
hash:article:by:100795
$6
digest
$255
众所周知mysql执行每一个可执行语句都是以分号结尾的,也就是说mysql识别语句是否结束，是根据分号决定的。
当然，你也可以用DELIMITER自定义一个语句的结束符号。
不知道大家有没有发现，...
*4
$4
HSET
$22
hash:article:by:100795
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100795
$7
content
$43
csdn/mysql/17_4_1_10_1505001642.031782.html
*4
$4
HSET
$22
hash:article:by:100795
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100795
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100795
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100795
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100795
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100795
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100795
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100795
$10
createTime
$13
1504515626000
*4
$4
HSET
$22
hash:article:by:100795
$11
releaseTime
$13
1504515626000
*4
$4
HSET
$22
hash:article:by:100795
$10
updateTime
$13
1504515626000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100795
*4
$4
ZADD
$28
zset:article:category:read:3
$3
0.0
$6
100795
*3
$5
LPUSH
$15
list:article:id
$6
100795
*3
$5
LPUSH
$29
list:article:by:category:id:3
$6
100795
*4
$4
HSET
$22
hash:article:by:100471
$2
id
$6
100471
*4
$4
HSET
$22
hash:article:by:100471
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100471
$9
articleId
$4
2768
*4
$4
HSET
$22
hash:article:by:100471
$5
title
$25
设计模式-享元模式
*4
$4
HSET
$22
hash:article:by:100471
$10
categoryId
$1
1
*4
$4
HSET
$22
hash:article:by:100471
$8
labelIds
$14
[12,443,75,71]
*4
$4
HSET
$22
hash:article:by:100471
$6
digest
$303
介绍享元模式简单的来说就是把一些重复的抽取出来提供给其他类使用。它使用共享物件，用来尽可能减少内存使用量以及分享资讯给尽可能多的相似物件；它适合用于当大量物件只是重复因而导致无法令人接受的使用大量内存...
*4
$4
HSET
$22
hash:article:by:100471
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100471
$7
content
$41
csdn/mode/37_0_1_1_1504569661.633582.html
*4
$4
HSET
$22
hash:article:by:100471
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100471
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100471
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100471
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100471
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100471
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100471
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100471
$10
createTime
$13
1504461623000
*4
$4
HSET
$22
hash:article:by:100471
$11
releaseTime
$13
1504461623000
*4
$4
HSET
$22
hash:article:by:100471
$10
updateTime
$13
1504461623000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100471
*4
$4
ZADD
$28
zset:article:category:read:1
$3
0.0
$6
100471
*3
$5
LPUSH
$15
list:article:id
$6
100471
*3
$5
LPUSH
$29
list:article:by:category:id:1
$6
100471
*4
$4
HSET
$22
hash:article:by:100473
$2
id
$6
100473
*4
$4
HSET
$22
hash:article:by:100473
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100473
$9
articleId
$4
2770
*4
$4
HSET
$22
hash:article:by:100473
$5
title
$67
史上最简单的 MySQL 教程（三十三）「视图（上）」
*4
$4
HSET
$22
hash:article:by:100473
$10
categoryId
$1
3
*4
$4
HSET
$22
hash:article:by:100473
$8
labelIds
$15
[444,7,445,143]
*4
$4
HSET
$22
hash:article:by:100473
$6
digest
$295
视图视图：view，是一种有结构（有行有列），但没有结果（结构中不真实存放数据）的虚拟表，虚拟表的结构来源不是自己定义的，而是从对应的基表（视图的数据来源）中产生的。创建视图首先，给出创建视图的基本语...
*4
$4
HSET
$22
hash:article:by:100473
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100473
$7
content
$41
csdn/mysql/17_1_1_0_1504569767.51514.html
*4
$4
HSET
$22
hash:article:by:100473
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100473
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100473
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100473
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100473
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100473
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100473
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100473
$10
createTime
$13
1504454443000
*4
$4
HSET
$22
hash:article:by:100473
$11
releaseTime
$13
1504454443000
*4
$4
HSET
$22
hash:article:by:100473
$10
updateTime
$13
1504454443000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100473
*4
$4
ZADD
$28
zset:article:category:read:3
$3
0.0
$6
100473
*3
$5
LPUSH
$15
list:article:id
$6
100473
*3
$5
LPUSH
$29
list:article:by:category:id:3
$6
100473
*4
$4
HSET
$22
hash:article:by:100472
$2
id
$6
100472
*4
$4
HSET
$22
hash:article:by:100472
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100472
$9
articleId
$4
2769
*4
$4
HSET
$22
hash:article:by:100472
$5
title
$25
设计模式-原型模式
*4
$4
HSET
$22
hash:article:by:100472
$10
categoryId
$1
1
*4
$4
HSET
$22
hash:article:by:100472
$8
labelIds
$11
[274,12,71]
*4
$4
HSET
$22
hash:article:by:100472
$6
digest
$265
介绍原型模式（Prototype Pattern）是用于创建重复的对象，同时又能保证性能。这种类型的设计模式属于创建型模式，它提供了一种创建对象的最佳方式。 
原型模式多用于创建复杂的或者耗时的实例，...
*4
$4
HSET
$22
hash:article:by:100472
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100472
$7
content
$41
csdn/mode/37_0_1_2_1504569662.539871.html
*4
$4
HSET
$22
hash:article:by:100472
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100472
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100472
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100472
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100472
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100472
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100472
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100472
$10
createTime
$13
1504450805000
*4
$4
HSET
$22
hash:article:by:100472
$11
releaseTime
$13
1504450805000
*4
$4
HSET
$22
hash:article:by:100472
$10
updateTime
$13
1504450805000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100472
*4
$4
ZADD
$28
zset:article:category:read:1
$3
0.0
$6
100472
*3
$5
LPUSH
$15
list:article:id
$6
100472
*3
$5
LPUSH
$29
list:article:by:category:id:1
$6
100472
*4
$4
HSET
$22
hash:article:by:100218
$2
id
$6
100218
*4
$4
HSET
$22
hash:article:by:100218
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100218
$9
articleId
$4
2766
*4
$4
HSET
$22
hash:article:by:100218
$5
title
$25
设计模式-策略模式
*4
$4
HSET
$22
hash:article:by:100218
$10
categoryId
$1
1
*4
$4
HSET
$22
hash:article:by:100218
$8
labelIds
$19
[12,179,178,195,31]
*4
$4
HSET
$22
hash:article:by:100218
$6
digest
$299
介绍在项目开发中，经常会碰到需要根据不同的条件采用不同的算法，但是这些不同的算法又有些类似。例如商城下单中的打折功能（打八折、五折、一折），满减功能等等。 
地图中根据采用不同的出行方式计算时间、金额...
*4
$4
HSET
$22
hash:article:by:100218
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100218
$7
content
$41
csdn/mode/37_1_1_0_1504396836.119458.html
*4
$4
HSET
$22
hash:article:by:100218
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100218
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100218
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100218
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100218
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100218
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100218
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100218
$10
createTime
$13
1504371608000
*4
$4
HSET
$22
hash:article:by:100218
$11
releaseTime
$13
1504371608000
*4
$4
HSET
$22
hash:article:by:100218
$10
updateTime
$13
1504371608000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100218
*4
$4
ZADD
$28
zset:article:category:read:1
$3
0.0
$6
100218
*3
$5
LPUSH
$15
list:article:id
$6
100218
*3
$5
LPUSH
$29
list:article:by:category:id:1
$6
100218
*4
$4
HSET
$22
hash:article:by:100796
$2
id
$6
100796
*4
$4
HSET
$22
hash:article:by:100796
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100796
$9
articleId
$4
2779
*4
$4
HSET
$22
hash:article:by:100796
$5
title
$58
MYSQL 中group by，order by用法详解及其特殊用法
*4
$4
HSET
$22
hash:article:by:100796
$10
categoryId
$1
3
*4
$4
HSET
$22
hash:article:by:100796
$8
labelIds
$19
[7,786,787,788,789]
*4
$4
HSET
$22
hash:article:by:100796
$6
digest
$251
我们可以看到GROUP BY 是优先对跟在他后面的第一个字段进行排序的并且也只对这一个字段进行排序，而且如果GROUP BY 后面跟的字段不只一个的话，那么GROUP BY就不会再对排序后的结果进行去...
*4
$4
HSET
$22
hash:article:by:100796
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100796
$7
content
$42
csdn/mysql/17_4_1_9_1505001638.053811.html
*4
$4
HSET
$22
hash:article:by:100796
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100796
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100796
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100796
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100796
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100796
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100796
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100796
$10
createTime
$13
1504346414000
*4
$4
HSET
$22
hash:article:by:100796
$11
releaseTime
$13
1504346414000
*4
$4
HSET
$22
hash:article:by:100796
$10
updateTime
$13
1504346414000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100796
*4
$4
ZADD
$28
zset:article:category:read:3
$3
0.0
$6
100796
*3
$5
LPUSH
$15
list:article:id
$6
100796
*3
$5
LPUSH
$29
list:article:by:category:id:3
$6
100796
*4
$4
HSET
$22
hash:article:by:100809
$2
id
$6
100809
*4
$4
HSET
$22
hash:article:by:100809
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100809
$9
articleId
$4
2796
*4
$4
HSET
$22
hash:article:by:100809
$5
title
$58
架构师入门笔记七 并发框架Disruptor快速入门
*4
$4
HSET
$22
hash:article:by:100809
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100809
$8
labelIds
$9
[350,665]
*4
$4
HSET
$22
hash:article:by:100809
$6
digest
$223
架构师入门笔记七 并发框架Disruptor快速入门
1. 什么是Disruptor
Disruptor它是一个高性能的异步处理的开源并发框架，能够在无锁的情况下实现网络的Queue并发操作。可以...
*4
$4
HSET
$22
hash:article:by:100809
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100809
$7
content
$41
csdn/java/37_1_1_1_1505260888.359308.html
*4
$4
HSET
$22
hash:article:by:100809
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100809
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100809
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100809
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100809
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100809
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100809
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100809
$10
createTime
$13
1504296046000
*4
$4
HSET
$22
hash:article:by:100809
$11
releaseTime
$13
1504296046000
*4
$4
HSET
$22
hash:article:by:100809
$10
updateTime
$13
1504296046000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100809
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100809
*3
$5
LPUSH
$15
list:article:id
$6
100809
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100809
*4
$4
HSET
$22
hash:article:by:100798
$2
id
$6
100798
*4
$4
HSET
$22
hash:article:by:100798
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100798
$9
articleId
$4
2788
*4
$4
HSET
$22
hash:article:by:100798
$5
title
$37
mysql中char与varchar的区别分析
*4
$4
HSET
$22
hash:article:by:100798
$10
categoryId
$1
3
*4
$4
HSET
$22
hash:article:by:100798
$8
labelIds
$19
[7,794,795,796,797]
*4
$4
HSET
$22
hash:article:by:100798
$6
digest
$249
char是一种固定长度的类型，varchar则是一种可变长度的类型 
　　char(M)类型的数据列里，每个值都占用M个字节，如果某个长度小于M，MySQL就会在它的右边用空格字符补足．（在检索操作中...
*4
$4
HSET
$22
hash:article:by:100798
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100798
$7
content
$42
csdn/mysql/17_4_1_8_1505001647.319842.html
*4
$4
HSET
$22
hash:article:by:100798
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100798
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100798
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100798
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100798
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100798
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100798
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100798
$10
createTime
$13
1504281619000
*4
$4
HSET
$22
hash:article:by:100798
$11
releaseTime
$13
1504281619000
*4
$4
HSET
$22
hash:article:by:100798
$10
updateTime
$13
1504281619000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100798
*4
$4
ZADD
$28
zset:article:category:read:3
$3
0.0
$6
100798
*3
$5
LPUSH
$15
list:article:id
$6
100798
*3
$5
LPUSH
$29
list:article:by:category:id:3
$6
100798
*4
$4
HSET
$22
hash:article:by:100031
$2
id
$6
100031
*4
$4
HSET
$22
hash:article:by:100031
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100031
$9
articleId
$4
2020
*4
$4
HSET
$22
hash:article:by:100031
$5
title
$62
MySQL之——表数据文件损坏导致数据库无法启动
*4
$4
HSET
$22
hash:article:by:100031
$10
categoryId
$1
3
*4
$4
HSET
$22
hash:article:by:100031
$8
labelIds
$3
[7]
*4
$4
HSET
$22
hash:article:by:100031
$6
digest
$115
一、问题日志

2017-08-31 14:18:05 4122 [Note] InnoDB: Database was not shutdown normally!
2017-08-31 14:18...
*4
$4
HSET
$22
hash:article:by:100031
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100031
$7
content
$42
csdn/mysql/17_0_1_0_1504235155.096132.html
*4
$4
HSET
$22
hash:article:by:100031
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100031
$10
readAmount
$1
3
*4
$4
HSET
$22
hash:article:by:100031
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100031
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100031
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100031
$9
topStatus
$1
1
*4
$4
HSET
$22
hash:article:by:100031
$10
topEndTime
$13
1509465600000
*4
$4
HSET
$22
hash:article:by:100031
$10
createTime
$13
1504155619000
*4
$4
HSET
$22
hash:article:by:100031
$11
releaseTime
$13
1504155619000
*4
$4
HSET
$22
hash:article:by:100031
$10
updateTime
$13
1504155619000
*4
$4
ZADD
$17
zset:article:read
$3
3.0
$6
100031
*4
$4
ZADD
$28
zset:article:category:read:3
$3
3.0
$6
100031
*3
$5
LPUSH
$15
list:article:id
$6
100031
*3
$5
LPUSH
$29
list:article:by:category:id:3
$6
100031
*4
$4
HSET
$22
hash:article:by:100032
$2
id
$6
100032
*4
$4
HSET
$22
hash:article:by:100032
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100032
$9
articleId
$4
2019
*4
$4
HSET
$22
hash:article:by:100032
$5
title
$70
史上最简单的 MySQL 教程（三十二）「子查询（下）」
*4
$4
HSET
$22
hash:article:by:100032
$10
categoryId
$1
3
*4
$4
HSET
$22
hash:article:by:100032
$8
labelIds
$13
[7,8,9,10,11]
*4
$4
HSET
$22
hash:article:by:100032
$6
digest
$261
子查询子查询：sub query，查询是在某个查询结果之上进行的，一条select语句内部包含了另外一条select语句。行子查询行子查询，返回的结果可以使一行多列或者多行多列。需求：查询学生表中，年...
*4
$4
HSET
$22
hash:article:by:100032
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100032
$7
content
$41
csdn/mysql/17_0_1_0_1504235138.68905.html
*4
$4
HSET
$22
hash:article:by:100032
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100032
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100032
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100032
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100032
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100032
$9
topStatus
$1
1
*4
$4
HSET
$22
hash:article:by:100032
$10
topEndTime
$13
1509465600000
*4
$4
HSET
$22
hash:article:by:100032
$10
createTime
$13
1503802800000
*4
$4
HSET
$22
hash:article:by:100032
$11
releaseTime
$13
1503802800000
*4
$4
HSET
$22
hash:article:by:100032
$10
updateTime
$13
1503802800000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100032
*4
$4
ZADD
$28
zset:article:category:read:3
$3
0.0
$6
100032
*3
$5
LPUSH
$15
list:article:id
$6
100032
*3
$5
LPUSH
$29
list:article:by:category:id:3
$6
100032
*4
$4
HSET
$22
hash:article:by:100350
$2
id
$6
100350
*4
$4
HSET
$22
hash:article:by:100350
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100350
$9
articleId
$4
2661
*4
$4
HSET
$22
hash:article:by:100350
$5
title
$46
架构师入门笔记六 初识线程安全锁
*4
$4
HSET
$22
hash:article:by:100350
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100350
$8
labelIds
$9
[350,351]
*4
$4
HSET
$22
hash:article:by:100350
$6
digest
$177
架构师入门笔记六 初识线程安全锁
这章主要介绍Synchronized，ThreadLock，Lock，Concurrent.util等方法。


1 Lock 锁
在java多线程中，可以...
*4
$4
HSET
$22
hash:article:by:100350
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100350
$7
content
$39
csdn/java/1_0_1_5_1504265253.53683.html
*4
$4
HSET
$22
hash:article:by:100350
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100350
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100350
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100350
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100350
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100350
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100350
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100350
$10
createTime
$13
1503734437000
*4
$4
HSET
$22
hash:article:by:100350
$11
releaseTime
$13
1503734437000
*4
$4
HSET
$22
hash:article:by:100350
$10
updateTime
$13
1503734437000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100350
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100350
*3
$5
LPUSH
$15
list:article:id
$6
100350
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100350
*4
$4
HSET
$22
hash:article:by:100067
$2
id
$6
100067
*4
$4
HSET
$22
hash:article:by:100067
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100067
$9
articleId
$4
2026
*4
$4
HSET
$22
hash:article:by:100067
$5
title
$48
内核源码阅读（九）进程优先级处理
*4
$4
HSET
$22
hash:article:by:100067
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100067
$8
labelIds
$7
[35,36]
*4
$4
HSET
$22
hash:article:by:100067
$6
digest
$213
1.进程优先级内核表示 
进程的优先级的nice值在-20~+19之间。0~139表示内部优先级，0~99的范围专供实时进程使用。nice值在[-20,+19]映射到100~139之间。如下图所示。 ...
*4
$4
HSET
$22
hash:article:by:100067
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100067
$7
content
$41
csdn/linux/1_0_1_0_1504264380.637233.html
*4
$4
HSET
$22
hash:article:by:100067
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100067
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100067
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100067
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100067
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100067
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100067
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100067
$10
createTime
$13
1503234014000
*4
$4
HSET
$22
hash:article:by:100067
$11
releaseTime
$13
1503234014000
*4
$4
HSET
$22
hash:article:by:100067
$10
updateTime
$13
1503234014000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100067
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100067
*3
$5
LPUSH
$15
list:article:id
$6
100067
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100067
*4
$4
HSET
$22
hash:article:by:100065
$2
id
$6
100065
*4
$4
HSET
$22
hash:article:by:100065
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100065
$9
articleId
$4
2027
*4
$4
HSET
$22
hash:article:by:100065
$5
title
$51
内核源码阅读（八）进程调度器的实现
*4
$4
HSET
$22
hash:article:by:100065
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100065
$8
labelIds
$10
[35,36,21]
*4
$4
HSET
$22
hash:article:by:100065
$6
digest
$277
调度器的任务就是使程序之间共享CPU时间，创造并行执行的假象。其可分为两个方面：一是调度策略；二是上下文切换。 
1.总览一般原理：按所能分配的计算能力，向系统中每个进程提供最大的公正性。 
    ...
*4
$4
HSET
$22
hash:article:by:100065
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100065
$7
content
$41
csdn/linux/1_0_1_1_1504264381.617691.html
*4
$4
HSET
$22
hash:article:by:100065
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100065
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100065
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100065
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100065
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100065
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100065
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100065
$10
createTime
$13
1503226826000
*4
$4
HSET
$22
hash:article:by:100065
$11
releaseTime
$13
1503226826000
*4
$4
HSET
$22
hash:article:by:100065
$10
updateTime
$13
1503226826000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100065
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100065
*3
$5
LPUSH
$15
list:article:id
$6
100065
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100065
*4
$4
HSET
$22
hash:article:by:100353
$2
id
$6
100353
*4
$4
HSET
$22
hash:article:by:100353
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100353
$9
articleId
$4
2663
*4
$4
HSET
$22
hash:article:by:100353
$5
title
$40
架构师入门笔记五 初识线程池
*4
$4
HSET
$22
hash:article:by:100353
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100353
$8
labelIds
$9
[350,353]
*4
$4
HSET
$22
hash:article:by:100353
$6
digest
$295
架构师入门笔记五 初识线程池


线程池，顾名思义是线程的池子。当任务提交给线程池的时候，线程池会安排一个空闲的线程去执行任务，当任务执行结束后返回到线程池中。若没有空闲的线程去执行任务，则该任务就会...
*4
$4
HSET
$22
hash:article:by:100353
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100353
$7
content
$40
csdn/java/1_0_1_4_1504265255.543954.html
*4
$4
HSET
$22
hash:article:by:100353
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100353
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100353
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100353
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100353
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100353
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100353
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100353
$10
createTime
$13
1503212444000
*4
$4
HSET
$22
hash:article:by:100353
$11
releaseTime
$13
1503212444000
*4
$4
HSET
$22
hash:article:by:100353
$10
updateTime
$13
1503212444000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100353
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100353
*3
$5
LPUSH
$15
list:article:id
$6
100353
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100353
*4
$4
HSET
$22
hash:article:by:100077
$2
id
$6
100077
*4
$4
HSET
$22
hash:article:by:100077
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100077
$9
articleId
$4
2037
*4
$4
HSET
$22
hash:article:by:100077
$5
title
$63
内核源码阅读（七）新程序的启动与进程的退出
*4
$4
HSET
$22
hash:article:by:100077
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100077
$8
labelIds
$7
[35,36]
*4
$4
HSET
$22
hash:article:by:100077
$6
digest
$225
通过用新代码替换现存程序，即可启动新程序。在Linux下这是通过execve系统调用实现的。 
该系统调用的入口点是sys_execve函数，然后委托给do_execve函数。其原型如下:kernel...
*4
$4
HSET
$22
hash:article:by:100077
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100077
$7
content
$40
csdn/linux/1_0_1_2_1504264386.81561.html
*4
$4
HSET
$22
hash:article:by:100077
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100077
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100077
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100077
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100077
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100077
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100077
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100077
$10
createTime
$13
1503010848000
*4
$4
HSET
$22
hash:article:by:100077
$11
releaseTime
$13
1503010848000
*4
$4
HSET
$22
hash:article:by:100077
$10
updateTime
$13
1503010848000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100077
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100077
*3
$5
LPUSH
$15
list:article:id
$6
100077
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100077
*4
$4
HSET
$22
hash:article:by:100074
$2
id
$6
100074
*4
$4
HSET
$22
hash:article:by:100074
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100074
$9
articleId
$4
2039
*4
$4
HSET
$22
hash:article:by:100074
$5
title
$39
内核源码阅读（六）内核线程
*4
$4
HSET
$22
hash:article:by:100074
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100074
$8
labelIds
$13
[36,49,35,32]
*4
$4
HSET
$22
hash:article:by:100074
$6
digest
$291
内核线程 
内核线程是直接由内核本身启动的进程，也经常称之为守护进程。主要用于执行下列任务：
周期性地将修改的内存页与页来源块设备同步；
如果内存页很少使用，则写入交换区；
管理延时操作；
实现文件系...
*4
$4
HSET
$22
hash:article:by:100074
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100074
$7
content
$41
csdn/linux/1_0_1_3_1504264387.861542.html
*4
$4
HSET
$22
hash:article:by:100074
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100074
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100074
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100074
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100074
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100074
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100074
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100074
$10
createTime
$13
1503010819000
*4
$4
HSET
$22
hash:article:by:100074
$11
releaseTime
$13
1503010819000
*4
$4
HSET
$22
hash:article:by:100074
$10
updateTime
$13
1503010819000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100074
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100074
*3
$5
LPUSH
$15
list:article:id
$6
100074
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100074
*4
$4
HSET
$22
hash:article:by:100098
$2
id
$6
100098
*4
$4
HSET
$22
hash:article:by:100098
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100098
$9
articleId
$4
2041
*4
$4
HSET
$22
hash:article:by:100098
$5
title
$35
内核源码阅读（五）进程ID
*4
$4
HSET
$22
hash:article:by:100098
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100098
$8
labelIds
$10
[36,35,75]
*4
$4
HSET
$22
hash:article:by:100098
$6
digest
$281
接着上一节我们继续学习进程ID。 
在上一节中我们提到了node是一个散列表元素，对于这个散列表并未做过多解释，在这里我们给出更加详细的描述。这个散列表是为了在给定的命名空间中查找对应与指定PID数值...
*4
$4
HSET
$22
hash:article:by:100098
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100098
$7
content
$41
csdn/linux/1_0_1_4_1504264388.683879.html
*4
$4
HSET
$22
hash:article:by:100098
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100098
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100098
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100098
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100098
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100098
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100098
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100098
$10
createTime
$13
1502924445000
*4
$4
HSET
$22
hash:article:by:100098
$11
releaseTime
$13
1502924445000
*4
$4
HSET
$22
hash:article:by:100098
$10
updateTime
$13
1502924445000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100098
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100098
*3
$5
LPUSH
$15
list:article:id
$6
100098
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100098
*4
$4
HSET
$22
hash:article:by:100083
$2
id
$6
100083
*4
$4
HSET
$22
hash:article:by:100083
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100083
$9
articleId
$4
2029
*4
$4
HSET
$22
hash:article:by:100083
$5
title
$35
内核源码阅读（四）进程ID
*4
$4
HSET
$22
hash:article:by:100083
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100083
$8
labelIds
$13
[56,35,36,57]
*4
$4
HSET
$22
hash:article:by:100083
$6
digest
$215
1）进程ID 
        进程ID，简称PID，是进程在命名空间的唯一表示。 
        线程组ID：每个进程除了PID这个特征值外，还有线程组ID(TGID)，若没有使用线程，则PID和...
*4
$4
HSET
$22
hash:article:by:100083
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100083
$7
content
$41
csdn/linux/1_0_1_5_1504264382.642756.html
*4
$4
HSET
$22
hash:article:by:100083
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100083
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100083
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100083
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100083
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100083
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100083
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100083
$10
createTime
$13
1502838049000
*4
$4
HSET
$22
hash:article:by:100083
$11
releaseTime
$13
1502838049000
*4
$4
HSET
$22
hash:article:by:100083
$10
updateTime
$13
1502838049000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100083
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100083
*3
$5
LPUSH
$15
list:article:id
$6
100083
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100083
*4
$4
HSET
$22
hash:article:by:100362
$2
id
$6
100362
*4
$4
HSET
$22
hash:article:by:100362
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100362
$9
articleId
$4
2664
*4
$4
HSET
$22
hash:article:by:100362
$5
title
$52
架构师入门笔记四 初识多线程设计模式
*4
$4
HSET
$22
hash:article:by:100362
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100362
$8
labelIds
$8
[350,12]
*4
$4
HSET
$22
hash:article:by:100362
$6
digest
$249
架构师入门笔记四 初识多线程设计模式


这章讲解常用的并行设计模式，为后续的多线程打基础。常用的并行设计模式有：Future 模式、Master-Worker模式 和 生产者-消费者模式。其中生产者...
*4
$4
HSET
$22
hash:article:by:100362
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100362
$7
content
$40
csdn/java/1_0_1_3_1504265256.639035.html
*4
$4
HSET
$22
hash:article:by:100362
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100362
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100362
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100362
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100362
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100362
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100362
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100362
$10
createTime
$13
1502816452000
*4
$4
HSET
$22
hash:article:by:100362
$11
releaseTime
$13
1502816452000
*4
$4
HSET
$22
hash:article:by:100362
$10
updateTime
$13
1502816452000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100362
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100362
*3
$5
LPUSH
$15
list:article:id
$6
100362
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100362
*4
$4
HSET
$22
hash:article:by:100079
$2
id
$6
100079
*4
$4
HSET
$22
hash:article:by:100079
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100079
$9
articleId
$4
2035
*4
$4
HSET
$22
hash:article:by:100079
$5
title
$69
内核源码阅读（三）进程命名空间和用户命名的实现
*4
$4
HSET
$22
hash:article:by:100079
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100079
$8
labelIds
$10
[36,21,35]
*4
$4
HSET
$22
hash:article:by:100079
$6
digest
$243
（1）进程的命名空间1.基本概念 
        传统上Linux及其衍生版的UNIX变体中，许多资源都是全局管理的。例如进程PID和用户的UID等全局ID。为了节约成本并且能够保证用户之间的权限不...
*4
$4
HSET
$22
hash:article:by:100079
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100079
$7
content
$41
csdn/linux/1_0_1_6_1504264385.799985.html
*4
$4
HSET
$22
hash:article:by:100079
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100079
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100079
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100079
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100079
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100079
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100079
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100079
$10
createTime
$13
1502751606000
*4
$4
HSET
$22
hash:article:by:100079
$11
releaseTime
$13
1502751606000
*4
$4
HSET
$22
hash:article:by:100079
$10
updateTime
$13
1502751606000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100079
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100079
*3
$5
LPUSH
$15
list:article:id
$6
100079
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100079
*4
$4
HSET
$22
hash:article:by:100070
$2
id
$6
100070
*4
$4
HSET
$22
hash:article:by:100070
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100070
$9
articleId
$4
2711
*4
$4
HSET
$22
hash:article:by:100070
$5
title
$38
Java8学习记录(一)-函数式接口
*4
$4
HSET
$22
hash:article:by:100070
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100070
$8
labelIds
$10
[42,43,18]
*4
$4
HSET
$22
hash:article:by:100070
$6
digest
$259
实习前只是粗略的看了下Java8的一些基本语法,但是没有系统的学习过.在使用一段时间后决定系统的对其进行一次分析,加深对Java8函数式编程的理解,提高自己的编码技巧.另外kotlin崛起,感兴趣的朋...
*4
$4
HSET
$22
hash:article:by:100070
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100070
$7
content
$40
csdn/java/1_0_1_0_1504265315.624839.html
*4
$4
HSET
$22
hash:article:by:100070
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100070
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100070
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100070
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100070
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100070
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100070
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100070
$10
createTime
$13
1502452806000
*4
$4
HSET
$22
hash:article:by:100070
$11
releaseTime
$13
1502452806000
*4
$4
HSET
$22
hash:article:by:100070
$10
updateTime
$13
1502452806000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100070
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100070
*3
$5
LPUSH
$15
list:article:id
$6
100070
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100070
*4
$4
HSET
$22
hash:article:by:100076
$2
id
$6
100076
*4
$4
HSET
$22
hash:article:by:100076
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100076
$9
articleId
$4
2712
*4
$4
HSET
$22
hash:article:by:100076
$5
title
$35
Java8学习记录(二)-Stream原理
*4
$4
HSET
$22
hash:article:by:100076
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100076
$8
labelIds
$7
[18,43]
*4
$4
HSET
$22
hash:article:by:100076
$6
digest
$179
推荐一篇博文,很好的介绍了Stream的原理.本文对其进行一些补充更加详细的讲解.
  作者: 李豪 
  地址: https://github.com/CarpenterLee/JavaLambda...
*4
$4
HSET
$22
hash:article:by:100076
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100076
$7
content
$40
csdn/java/1_0_1_1_1504265316.419101.html
*4
$4
HSET
$22
hash:article:by:100076
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100076
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100076
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100076
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100076
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100076
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100076
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100076
$10
createTime
$13
1502452806000
*4
$4
HSET
$22
hash:article:by:100076
$11
releaseTime
$13
1502452806000
*4
$4
HSET
$22
hash:article:by:100076
$10
updateTime
$13
1502452806000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100076
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100076
*3
$5
LPUSH
$15
list:article:id
$6
100076
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100076
*4
$4
HSET
$22
hash:article:by:100036
$2
id
$6
100036
*4
$4
HSET
$22
hash:article:by:100036
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100036
$9
articleId
$4
2031
*4
$4
HSET
$22
hash:article:by:100036
$5
title
$39
内核源码阅读（二）进程复制
*4
$4
HSET
$22
hash:article:by:100036
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100036
$8
labelIds
$7
[13,14]
*4
$4
HSET
$22
hash:article:by:100036
$6
digest
$239
进程复制
1.三种常见进程复制API:



1）fork()是一个重量级调用，因为它建立了一个父进程的完整副本，然后作为子进程执行。Linux后来采用了写时复制技术对其进行了优化。

...
*4
$4
HSET
$22
hash:article:by:100036
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100036
$7
content
$41
csdn/linux/1_0_1_7_1504264383.654236.html
*4
$4
HSET
$22
hash:article:by:100036
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100036
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100036
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100036
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100036
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100036
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100036
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100036
$10
createTime
$13
1502406008000
*4
$4
HSET
$22
hash:article:by:100036
$11
releaseTime
$13
1502406008000
*4
$4
HSET
$22
hash:article:by:100036
$10
updateTime
$13
1502406008000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100036
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100036
*3
$5
LPUSH
$15
list:article:id
$6
100036
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100036
*4
$4
HSET
$22
hash:article:by:100369
$2
id
$6
100369
*4
$4
HSET
$22
hash:article:by:100369
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100369
$9
articleId
$4
2662
*4
$4
HSET
$22
hash:article:by:100369
$5
title
$42
架构师入门笔记三 初识Queue队列
*4
$4
HSET
$22
hash:article:by:100369
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100369
$8
labelIds
$9
[350,359]
*4
$4
HSET
$22
hash:article:by:100369
$6
digest
$210
架构师入门笔记三 初识Queue队列


1. wait和notify模拟Queue
1.1 wait / notify 基础知识
线程通信概念：线程是操作系统中独立的个体，但这些个体如果不经过特殊的...
*4
$4
HSET
$22
hash:article:by:100369
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100369
$7
content
$40
csdn/java/1_0_1_2_1504265254.615425.html
*4
$4
HSET
$22
hash:article:by:100369
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100369
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100369
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100369
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100369
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100369
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100369
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100369
$10
createTime
$13
1502370030000
*4
$4
HSET
$22
hash:article:by:100369
$11
releaseTime
$13
1502370030000
*4
$4
HSET
$22
hash:article:by:100369
$10
updateTime
$13
1502370030000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100369
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100369
*3
$5
LPUSH
$15
list:article:id
$6
100369
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100369
*4
$4
HSET
$22
hash:article:by:100039
$2
id
$6
100039
*4
$4
HSET
$22
hash:article:by:100039
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100039
$9
articleId
$4
2033
*4
$4
HSET
$22
hash:article:by:100039
$5
title
$33
内核源码阅读（一）进程
*4
$4
HSET
$22
hash:article:by:100039
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100039
$8
labelIds
$10
[15,16,17]
*4
$4
HSET
$22
hash:article:by:100039
$6
digest
$279
1.进程分为实时进程和非实时进程。
        硬实时进程有严格的时间限制，某些任务必须在指定的时限内完成。软实时进程是硬实时进程的一种弱化形式。大多数进程没有特定时间约束的普通进程。CPU时间分...
*4
$4
HSET
$22
hash:article:by:100039
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100039
$7
content
$41
csdn/linux/1_0_1_8_1504264384.727372.html
*4
$4
HSET
$22
hash:article:by:100039
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100039
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100039
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100039
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100039
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100039
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100039
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100039
$10
createTime
$13
1502305251000
*4
$4
HSET
$22
hash:article:by:100039
$11
releaseTime
$13
1502305251000
*4
$4
HSET
$22
hash:article:by:100039
$10
updateTime
$13
1502305251000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100039
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100039
*3
$5
LPUSH
$15
list:article:id
$6
100039
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100039
*4
$4
HSET
$22
hash:article:by:100102
$2
id
$6
100102
*4
$4
HSET
$22
hash:article:by:100102
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100102
$9
articleId
$4
2726
*4
$4
HSET
$22
hash:article:by:100102
$5
title
$61
Spring Security学习记录(四) -- JSON Web Token实践(下)
*4
$4
HSET
$22
hash:article:by:100102
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100102
$8
labelIds
$7
[58,59]
*4
$4
HSET
$22
hash:article:by:100102
$6
digest
$271
前提接着上篇的内容,了解了JWT Token后,发现这东西就是一个可信的用户信息存储方式,那么可信的话就可以省去验证这个步骤,只有当需要用户的详细信息时候才会去DB中查询用户的详细信息.那么现在的流程...
*4
$4
HSET
$22
hash:article:by:100102
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100102
$7
content
$40
csdn/java/1_0_1_5_1504265330.542141.html
*4
$4
HSET
$22
hash:article:by:100102
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100102
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100102
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100102
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100102
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100102
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100102
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100102
$10
createTime
$13
1502226058000
*4
$4
HSET
$22
hash:article:by:100102
$11
releaseTime
$13
1502226058000
*4
$4
HSET
$22
hash:article:by:100102
$10
updateTime
$13
1502226058000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100102
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100102
*3
$5
LPUSH
$15
list:article:id
$6
100102
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100102
*4
$4
HSET
$22
hash:article:by:100084
$2
id
$6
100084
*4
$4
HSET
$22
hash:article:by:100084
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100084
$9
articleId
$4
2728
*4
$4
HSET
$22
hash:article:by:100084
$5
title
$60
Spring Security学习记录(二) -- Spring Security的Filter
*4
$4
HSET
$22
hash:article:by:100084
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100084
$8
labelIds
$7
[58,59]
*4
$4
HSET
$22
hash:article:by:100084
$6
digest
$229
上一篇学习了Spring Security是如何拦截请求,并把请求转向到Filter链的,该篇就主要学习下这些Filter链的节点的作用.下面是之前配置的内容,本文也是对这些内容 的执行分析.
   ...
*4
$4
HSET
$22
hash:article:by:100084
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100084
$7
content
$39
csdn/java/1_0_1_3_1504265332.68888.html
*4
$4
HSET
$22
hash:article:by:100084
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100084
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100084
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100084
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100084
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100084
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100084
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100084
$10
createTime
$13
1502226057000
*4
$4
HSET
$22
hash:article:by:100084
$11
releaseTime
$13
1502226057000
*4
$4
HSET
$22
hash:article:by:100084
$10
updateTime
$13
1502226057000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100084
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100084
*3
$5
LPUSH
$15
list:article:id
$6
100084
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100084
*4
$4
HSET
$22
hash:article:by:100088
$2
id
$6
100088
*4
$4
HSET
$22
hash:article:by:100088
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100088
$9
articleId
$4
2725
*4
$4
HSET
$22
hash:article:by:100088
$5
title
$61
Spring Security学习记录(三) -- JSON Web Token实践(上)
*4
$4
HSET
$22
hash:article:by:100088
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100088
$8
labelIds
$7
[58,59]
*4
$4
HSET
$22
hash:article:by:100088
$6
digest
$187
JWT实际上与Spring Security没多大关系,本文打算使用Spring Security配合JWT这种方式完成用户的认证和授权.JSON Web Token(JWT),是一个开放安全的行业标...
*4
$4
HSET
$22
hash:article:by:100088
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100088
$7
content
$40
csdn/java/1_0_1_4_1504265329.528519.html
*4
$4
HSET
$22
hash:article:by:100088
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100088
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100088
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100088
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100088
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100088
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100088
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100088
$10
createTime
$13
1502226057000
*4
$4
HSET
$22
hash:article:by:100088
$11
releaseTime
$13
1502226057000
*4
$4
HSET
$22
hash:article:by:100088
$10
updateTime
$13
1502226057000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100088
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100088
*3
$5
LPUSH
$15
list:article:id
$6
100088
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100088
*4
$4
HSET
$22
hash:article:by:100090
$2
id
$6
100090
*4
$4
HSET
$22
hash:article:by:100090
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100090
$9
articleId
$4
2724
*4
$4
HSET
$22
hash:article:by:100090
$5
title
$57
Spring Security学习记录(一) -- 初识Spring Security
*4
$4
HSET
$22
hash:article:by:100090
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100090
$8
labelIds
$7
[59,58]
*4
$4
HSET
$22
hash:article:by:100090
$6
digest
$155
Spring Security是什么?Spring Security是一套认证授权框架,支持认证模式如HTTP BASIC 认证头 (基于 IETF RFC-based 标准),HTTP Digest...
*4
$4
HSET
$22
hash:article:by:100090
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100090
$7
content
$40
csdn/java/1_0_1_2_1504265328.541416.html
*4
$4
HSET
$22
hash:article:by:100090
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100090
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100090
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100090
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100090
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100090
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100090
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100090
$10
createTime
$13
1502226056000
*4
$4
HSET
$22
hash:article:by:100090
$11
releaseTime
$13
1502226056000
*4
$4
HSET
$22
hash:article:by:100090
$10
updateTime
$13
1502226056000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100090
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100090
*3
$5
LPUSH
$15
list:article:id
$6
100090
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100090
*4
$4
HSET
$22
hash:article:by:100071
$2
id
$6
100071
*4
$4
HSET
$22
hash:article:by:100071
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100071
$9
articleId
$4
2574
*4
$4
HSET
$22
hash:article:by:100071
$5
title
$54
关于web项目log日志指定输出文件位置配置
*4
$4
HSET
$22
hash:article:by:100071
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100071
$8
labelIds
$7
[26,24]
*4
$4
HSET
$22
hash:article:by:100071
$6
digest
$209
首先我们定义一个可以在运行时动态的找出项目的路径WebAppRootKey,这么做的原因是为了在后面配置log4j输出文件路径的时候能随心配置。
         webAppRootKey
    ...
*4
$4
HSET
$22
hash:article:by:100071
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100071
$7
content
$40
csdn/java/1_1_2_2_1504265009.444733.html
*4
$4
HSET
$22
hash:article:by:100071
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100071
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100071
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100071
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100071
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100071
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100071
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100071
$10
createTime
$13
1502114434000
*4
$4
HSET
$22
hash:article:by:100071
$11
releaseTime
$13
1502114434000
*4
$4
HSET
$22
hash:article:by:100071
$10
updateTime
$13
1502114434000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100071
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100071
*3
$5
LPUSH
$15
list:article:id
$6
100071
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100071
*4
$4
HSET
$22
hash:article:by:100378
$2
id
$6
100378
*4
$4
HSET
$22
hash:article:by:100378
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100378
$9
articleId
$4
2660
*4
$4
HSET
$22
hash:article:by:100378
$5
title
$41
架构师入门笔记二 初识java容器
*4
$4
HSET
$22
hash:article:by:100378
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100378
$8
labelIds
$9
[350,364]
*4
$4
HSET
$22
hash:article:by:100378
$6
digest
$233
架构师入门笔记二 初识java容器
上一章简单介绍了 线程的关键字 synchronized 和 volatile 的用法及其注意事项。这章来讲解一下同步类容器，并发类容器，COW容器的原理和优缺点...
*4
$4
HSET
$22
hash:article:by:100378
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100378
$7
content
$40
csdn/java/1_0_1_1_1504265252.589416.html
*4
$4
HSET
$22
hash:article:by:100378
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100378
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100378
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100378
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100378
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100378
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100378
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100378
$10
createTime
$13
1502085607000
*4
$4
HSET
$22
hash:article:by:100378
$11
releaseTime
$13
1502085607000
*4
$4
HSET
$22
hash:article:by:100378
$10
updateTime
$13
1502085607000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100378
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100378
*3
$5
LPUSH
$15
list:article:id
$6
100378
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100378
*4
$4
HSET
$22
hash:article:by:100055
$2
id
$6
100055
*4
$4
HSET
$22
hash:article:by:100055
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100055
$9
articleId
$4
2573
*4
$4
HSET
$22
hash:article:by:100055
$5
title
$44
web项目Log4j日志输出路径配置问题
*4
$4
HSET
$22
hash:article:by:100055
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100055
$8
labelIds
$10
[24,25,26]
*4
$4
HSET
$22
hash:article:by:100055
$6
digest
$259
问题描述：一个web项目想在一个tomcat下运行多个实例（通过修改war包名称的实现），然后每个实例都将日志输出到tomcat的logs目录下实例名命名的文件夹下进行区分查看每个实例日志，要求通过尽...
*4
$4
HSET
$22
hash:article:by:100055
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100055
$7
content
$40
csdn/java/1_1_2_1_1504265008.421972.html
*4
$4
HSET
$22
hash:article:by:100055
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100055
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100055
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100055
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100055
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100055
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100055
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100055
$10
createTime
$13
1501851650000
*4
$4
HSET
$22
hash:article:by:100055
$11
releaseTime
$13
1501851650000
*4
$4
HSET
$22
hash:article:by:100055
$10
updateTime
$13
1501851650000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100055
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100055
*3
$5
LPUSH
$15
list:article:id
$6
100055
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100055
*4
$4
HSET
$22
hash:article:by:100056
$2
id
$6
100056
*4
$4
HSET
$22
hash:article:by:100056
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100056
$9
articleId
$4
2572
*4
$4
HSET
$22
hash:article:by:100056
$5
title
$33
Maven Web项目解决跨域问题
*4
$4
HSET
$22
hash:article:by:100056
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100056
$8
labelIds
$10
[27,28,26]
*4
$4
HSET
$22
hash:article:by:100056
$6
digest
$201
跨域问题目前笔者所用到的方案大致有三种:jsonp,SpringMVC 4以上注解方式和cros三方过滤器。JsonpJSONP(JSON with Padding)是一个非官方的协议，它允许在服务器...
*4
$4
HSET
$22
hash:article:by:100056
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100056
$7
content
$40
csdn/java/1_1_2_0_1504265007.453906.html
*4
$4
HSET
$22
hash:article:by:100056
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100056
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100056
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100056
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100056
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100056
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100056
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100056
$10
createTime
$13
1501851611000
*4
$4
HSET
$22
hash:article:by:100056
$11
releaseTime
$13
1501851611000
*4
$4
HSET
$22
hash:article:by:100056
$10
updateTime
$13
1501851611000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100056
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100056
*3
$5
LPUSH
$15
list:article:id
$6
100056
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100056
*4
$4
HSET
$22
hash:article:by:100467
$2
id
$6
100467
*4
$4
HSET
$22
hash:article:by:100467
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100467
$9
articleId
$4
2659
*4
$4
HSET
$22
hash:article:by:100467
$5
title
$46
架构师入门笔记一 初识线程关键字
*4
$4
HSET
$22
hash:article:by:100467
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100467
$8
labelIds
$8
[350,32]
*4
$4
HSET
$22
hash:article:by:100467
$6
digest
$248
架构师入门笔记一 初识线程关键字
本章主要介绍线程的关键字 synchronized，volatile  的含义，使用方法和使用场景，以及注意事项。下一章介绍线程的队列知识。
首先要了解线程安全概...
*4
$4
HSET
$22
hash:article:by:100467
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100467
$7
content
$40
csdn/java/1_0_1_0_1504265251.594849.html
*4
$4
HSET
$22
hash:article:by:100467
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100467
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100467
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100467
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100467
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100467
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100467
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100467
$10
createTime
$13
1501851608000
*4
$4
HSET
$22
hash:article:by:100467
$11
releaseTime
$13
1501851608000
*4
$4
HSET
$22
hash:article:by:100467
$10
updateTime
$13
1501851608000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100467
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100467
*3
$5
LPUSH
$15
list:article:id
$6
100467
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100467
*4
$4
HSET
$22
hash:article:by:100345
$2
id
$6
100345
*4
$4
HSET
$22
hash:article:by:100345
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100345
$9
articleId
$4
2533
*4
$4
HSET
$22
hash:article:by:100345
$5
title
$120
Spring整合Quartz实现定时任务的时间更新，暂停和启用（不需要重启项目并且配置多数据源）
*4
$4
HSET
$22
hash:article:by:100345
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100345
$8
labelIds
$15
[347,59,78,118]
*4
$4
HSET
$22
hash:article:by:100345
$6
digest
$221
这是一套独立的定时系统，暂时不涉及与外界三方系统的交互，如有需求可自己根据场景来修改。配置项目基于spring4+mybatis3+quartz2.2.1来构建的，pom文件如下：<project x...
*4
$4
HSET
$22
hash:article:by:100345
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100345
$7
content
$41
csdn/java/1_1_1_19_1504264889.419407.html
*4
$4
HSET
$22
hash:article:by:100345
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100345
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100345
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100345
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100345
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100345
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100345
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100345
$10
createTime
$13
1501254052000
*4
$4
HSET
$22
hash:article:by:100345
$11
releaseTime
$13
1501254052000
*4
$4
HSET
$22
hash:article:by:100345
$10
updateTime
$13
1501254052000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100345
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100345
*3
$5
LPUSH
$15
list:article:id
$6
100345
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100345
*4
$4
HSET
$22
hash:article:by:100073
$2
id
$6
100073
*4
$4
HSET
$22
hash:article:by:100073
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100073
$9
articleId
$4
2560
*4
$4
HSET
$22
hash:article:by:100073
$5
title
$36
mongo driver类加载导致的错误
*4
$4
HSET
$22
hash:article:by:100073
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100073
$8
labelIds
$13
[18,46,47,48]
*4
$4
HSET
$22
hash:article:by:100073
$6
digest
$285
摘要一次类加载导致的错误，之所以要记录下来，是因为错误的发现不是在本地开发环境或者预部署环境，而是在生产环境。这应该是个易于重现的问题，但是不知道为什么直到生产环境部署时才报错。问题Unsatisfi...
*4
$4
HSET
$22
hash:article:by:100073
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100073
$7
content
$40
csdn/java/1_1_1_0_1504264958.186124.html
*4
$4
HSET
$22
hash:article:by:100073
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100073
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100073
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100073
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100073
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100073
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100073
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100073
$10
createTime
$13
1500714040000
*4
$4
HSET
$22
hash:article:by:100073
$11
releaseTime
$13
1500714040000
*4
$4
HSET
$22
hash:article:by:100073
$10
updateTime
$13
1500714040000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100073
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100073
*3
$5
LPUSH
$15
list:article:id
$6
100073
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100073
*4
$4
HSET
$22
hash:article:by:100747
$2
id
$6
100747
*4
$4
HSET
$22
hash:article:by:100747
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100747
$9
articleId
$4
2028
*4
$4
HSET
$22
hash:article:by:100747
$5
title
$63
Java项目框架搭建系列（Java学习路线）-博客提纲
*4
$4
HSET
$22
hash:article:by:100747
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100747
$8
labelIds
$16
[18,102,305,441]
*4
$4
HSET
$22
hash:article:by:100747
$6
digest
$297
前言：已经毕业两年，真是时间飞逝。其实当你在一间公司工作一两年之后，公司用到的开发框架的基本使用你应该都会了。你会根据一个现有项目A复制一下搭建出另外一个类似框架的项目B，然后在项目B上进行业务逻辑开...
*4
$4
HSET
$22
hash:article:by:100747
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100747
$7
content
$40
csdn/java/1_1_1_0_1504264382.322517.html
*4
$4
HSET
$22
hash:article:by:100747
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100747
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100747
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100747
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100747
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100747
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100747
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100747
$10
createTime
$13
1500645641000
*4
$4
HSET
$22
hash:article:by:100747
$11
releaseTime
$13
1500645641000
*4
$4
HSET
$22
hash:article:by:100747
$10
updateTime
$13
1500645641000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100747
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100747
*3
$5
LPUSH
$15
list:article:id
$6
100747
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100747
*4
$4
HSET
$22
hash:article:by:100478
$2
id
$6
100478
*4
$4
HSET
$22
hash:article:by:100478
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100478
$9
articleId
$4
2628
*4
$4
HSET
$22
hash:article:by:100478
$5
title
$93
Java web Filter, Strurs2 Interceptor 和 SpringMVC Interceptor 三者之间的联系与区别
*4
$4
HSET
$22
hash:article:by:100478
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100478
$8
labelIds
$21
[101,449,450,345,451]
*4
$4
HSET
$22
hash:article:by:100478
$6
digest
$169
无论是Filter、Strurs2 Interceptor还是SpringMVC Interceptor，它们都是AOP理念的实现，本文结合源码详细解剖了三者在具体实现上的异同。
*4
$4
HSET
$22
hash:article:by:100478
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100478
$7
content
$40
csdn/java/1_0_1_0_1504265174.375248.html
*4
$4
HSET
$22
hash:article:by:100478
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100478
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100478
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100478
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100478
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100478
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100478
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100478
$10
createTime
$13
1499781658000
*4
$4
HSET
$22
hash:article:by:100478
$11
releaseTime
$13
1499781658000
*4
$4
HSET
$22
hash:article:by:100478
$10
updateTime
$13
1499781658000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100478
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100478
*3
$5
LPUSH
$15
list:article:id
$6
100478
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100478
*4
$4
HSET
$22
hash:article:by:100732
$2
id
$6
100732
*4
$4
HSET
$22
hash:article:by:100732
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100732
$9
articleId
$4
2630
*4
$4
HSET
$22
hash:article:by:100732
$5
title
$64
REST风格框架实战：从MVC到前后端分离(附完整Demo)
*4
$4
HSET
$22
hash:article:by:100732
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100732
$8
labelIds
$21
[701,702,703,451,704]
*4
$4
HSET
$22
hash:article:by:100732
$6
digest
$253
本人在前辈《从MVC到前后端分离（REST-个人也认为是目前比较流行和比较好的方式）》一文的基础上，实现了一个基于Spring的符合REST风格的完整Demo，具有MVC分层结构并实现前后端分离，该项...
*4
$4
HSET
$22
hash:article:by:100732
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100732
$7
content
$40
csdn/java/1_0_1_2_1504265176.371813.html
*4
$4
HSET
$22
hash:article:by:100732
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100732
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100732
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100732
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100732
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100732
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100732
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100732
$10
createTime
$13
1499245204000
*4
$4
HSET
$22
hash:article:by:100732
$11
releaseTime
$13
1499245204000
*4
$4
HSET
$22
hash:article:by:100732
$10
updateTime
$13
1499245204000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100732
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100732
*3
$5
LPUSH
$15
list:article:id
$6
100732
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100732
*4
$4
HSET
$22
hash:article:by:100069
$2
id
$6
100069
*4
$4
HSET
$22
hash:article:by:100069
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100069
$9
articleId
$4
2527
*4
$4
HSET
$22
hash:article:by:100069
$5
title
$78
SpringMVC项目中偶尔用到servlet，如何在servlet中注入service笔记
*4
$4
HSET
$22
hash:article:by:100069
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100069
$8
labelIds
$7
[41,27]
*4
$4
HSET
$22
hash:article:by:100069
$6
digest
$149
仅此做个笔记，防止注入时而成功时而失败的问题。package com.zhy.spdb.sso;import java.io.IOException;import javax.servlet.Serv...
*4
$4
HSET
$22
hash:article:by:100069
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100069
$7
content
$39
csdn/java/1_1_1_18_1504264883.5146.html
*4
$4
HSET
$22
hash:article:by:100069
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100069
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100069
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100069
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100069
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100069
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100069
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100069
$10
createTime
$13
1499180419000
*4
$4
HSET
$22
hash:article:by:100069
$11
releaseTime
$13
1499180419000
*4
$4
HSET
$22
hash:article:by:100069
$10
updateTime
$13
1499180419000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100069
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100069
*3
$5
LPUSH
$15
list:article:id
$6
100069
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100069
*4
$4
HSET
$22
hash:article:by:100768
$2
id
$6
100768
*4
$4
HSET
$22
hash:article:by:100768
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100768
$9
articleId
$4
2629
*4
$4
HSET
$22
hash:article:by:100768
$5
title
$57
简述Spring容器与SpringMVC的容器的联系与区别
*4
$4
HSET
$22
hash:article:by:100768
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100768
$8
labelIds
$19
[59,27,756,757,758]
*4
$4
HSET
$22
hash:article:by:100768
$6
digest
$241
在Spring整体框架的核心概念中，容器的核心思想是管理Bean的整个生命周期。但在一个项目中，Spring容器往往不止一个，最常见的场景就是在一个项目中引入Spring和SpringMVC这两个框架...
*4
$4
HSET
$22
hash:article:by:100768
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100768
$7
content
$40
csdn/java/1_0_1_1_1504265175.316187.html
*4
$4
HSET
$22
hash:article:by:100768
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100768
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100768
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100768
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100768
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100768
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100768
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100768
$10
createTime
$13
1499158855000
*4
$4
HSET
$22
hash:article:by:100768
$11
releaseTime
$13
1499158855000
*4
$4
HSET
$22
hash:article:by:100768
$10
updateTime
$13
1499158855000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100768
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100768
*3
$5
LPUSH
$15
list:article:id
$6
100768
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100768
*4
$4
HSET
$22
hash:article:by:100101
$2
id
$6
100101
*4
$4
HSET
$22
hash:article:by:100101
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100101
$9
articleId
$4
2561
*4
$4
HSET
$22
hash:article:by:100101
$5
title
$41
Warning maven relocated xml-apis to 1.0.b
*4
$4
HSET
$22
hash:article:by:100101
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100101
$8
labelIds
$13
[79,80,81,82]
*4
$4
HSET
$22
hash:article:by:100101
$6
digest
$259
maven 依赖在ｍａｖｅｎ项目中，一些基础的ｊａｒ包被引用多次是很常见的事情。ｍａｖｅｎ选择ｊａｒ的版本是基于 
－　依赖深度浅的　比如Ｃ项目依赖xml.jar。Ｃ依赖的Ｂ也引入了xml.jar。那...
*4
$4
HSET
$22
hash:article:by:100101
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100101
$7
content
$40
csdn/java/1_1_1_1_1504264959.303324.html
*4
$4
HSET
$22
hash:article:by:100101
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100101
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100101
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100101
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100101
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100101
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100101
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100101
$10
createTime
$13
1498903229000
*4
$4
HSET
$22
hash:article:by:100101
$11
releaseTime
$13
1498903229000
*4
$4
HSET
$22
hash:article:by:100101
$10
updateTime
$13
1498903229000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100101
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100101
*3
$5
LPUSH
$15
list:article:id
$6
100101
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100101
*4
$4
HSET
$22
hash:article:by:100339
$2
id
$6
100339
*4
$4
HSET
$22
hash:article:by:100339
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100339
$9
articleId
$4
2534
*4
$4
HSET
$22
hash:article:by:100339
$5
title
$54
关于Spring项目配置多个数据源的实例演示
*4
$4
HSET
$22
hash:article:by:100339
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100339
$8
labelIds
$11
[59,143,63]
*4
$4
HSET
$22
hash:article:by:100339
$6
digest
$295
一、多数据源动态切换原理项目中我们经常会遇到多数据源的问题，尤其是数据同步或定时任务等项目更是如此；又例如：读写分离数据库配置的系统。1、多数据源设置： 
1）静态数据源切换：一般情况下，我们可以配置...
*4
$4
HSET
$22
hash:article:by:100339
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100339
$7
content
$41
csdn/java/1_1_1_17_1504264891.550587.html
*4
$4
HSET
$22
hash:article:by:100339
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100339
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100339
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100339
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100339
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100339
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100339
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100339
$10
createTime
$13
1498568434000
*4
$4
HSET
$22
hash:article:by:100339
$11
releaseTime
$13
1498568434000
*4
$4
HSET
$22
hash:article:by:100339
$10
updateTime
$13
1498568434000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100339
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100339
*3
$5
LPUSH
$15
list:article:id
$6
100339
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100339
*4
$4
HSET
$22
hash:article:by:100719
$2
id
$6
100719
*4
$4
HSET
$22
hash:article:by:100719
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100719
$9
articleId
$4
2640
*4
$4
HSET
$22
hash:article:by:100719
$5
title
$31
Spring 事务管理机制概述
*4
$4
HSET
$22
hash:article:by:100719
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100719
$8
labelIds
$21
[687,688,689,690,691]
*4
$4
HSET
$22
hash:article:by:100719
$6
digest
$293
用户的每次请求都对应一个业务逻辑方法，而一个业务逻辑方法往往包括一系列数据库原子访问操作，并且这些操作应绑定成一个事务来执行。使用传统事务编程策略时，程序代码必然和具体的事务操作代码耦合，而Sprin...
*4
$4
HSET
$22
hash:article:by:100719
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100719
$7
content
$40
csdn/java/1_0_1_3_1504265186.429273.html
*4
$4
HSET
$22
hash:article:by:100719
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100719
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100719
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100719
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100719
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100719
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100719
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100719
$10
createTime
$13
1498467655000
*4
$4
HSET
$22
hash:article:by:100719
$11
releaseTime
$13
1498467655000
*4
$4
HSET
$22
hash:article:by:100719
$10
updateTime
$13
1498467655000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100719
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100719
*3
$5
LPUSH
$15
list:article:id
$6
100719
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100719
*4
$4
HSET
$22
hash:article:by:100480
$2
id
$6
100480
*4
$4
HSET
$22
hash:article:by:100480
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100480
$9
articleId
$4
2645
*4
$4
HSET
$22
hash:article:by:100480
$5
title
$19
理解RESTful架构
*4
$4
HSET
$22
hash:article:by:100480
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100480
$8
labelIds
$21
[452,453,454,455,456]
*4
$4
HSET
$22
hash:article:by:100480
$6
digest
$303
越来越多的人开始意识到，网站即软件，而且是一种新型的软件。但是传统上，软件和网络是两个不同的领域，很少有交集；软件开发主要针对单机环境，网络则主要研究系统之间的通信。互联网的兴起，使得这两个领域开始融...
*4
$4
HSET
$22
hash:article:by:100480
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100480
$7
content
$40
csdn/java/1_0_1_4_1504265191.628746.html
*4
$4
HSET
$22
hash:article:by:100480
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100480
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100480
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100480
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100480
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100480
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100480
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100480
$10
createTime
$13
1498201238000
*4
$4
HSET
$22
hash:article:by:100480
$11
releaseTime
$13
1498201238000
*4
$4
HSET
$22
hash:article:by:100480
$10
updateTime
$13
1498201238000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100480
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100480
*3
$5
LPUSH
$15
list:article:id
$6
100480
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100480
*4
$4
HSET
$22
hash:article:by:100040
$2
id
$6
100040
*4
$4
HSET
$22
hash:article:by:100040
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100040
$9
articleId
$4
2271
*4
$4
HSET
$22
hash:article:by:100040
$5
title
$30
设计模式之迭代器模式
*4
$4
HSET
$22
hash:article:by:100040
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100040
$8
labelIds
$4
[12]
*4
$4
HSET
$22
hash:article:by:100040
$6
digest
$257
例题：两个菜馆合并后的菜单问题蛋糕店与餐厅合并后，怎么统一管理菜单项目 
问题：一个用ArrayList管理菜单，一个用数组管理迭代器模式的原理和设计关键代码：1. 实现迭代器额接口
public c...
*4
$4
HSET
$22
hash:article:by:100040
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100040
$7
content
$41
csdn/java/1_2_1_13_1504264576.612209.html
*4
$4
HSET
$22
hash:article:by:100040
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100040
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100040
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100040
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100040
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100040
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100040
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100040
$10
createTime
$13
1497808804000
*4
$4
HSET
$22
hash:article:by:100040
$11
releaseTime
$13
1497808804000
*4
$4
HSET
$22
hash:article:by:100040
$10
updateTime
$13
1497808804000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100040
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100040
*3
$5
LPUSH
$15
list:article:id
$6
100040
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100040
*4
$4
HSET
$22
hash:article:by:100048
$2
id
$6
100048
*4
$4
HSET
$22
hash:article:by:100048
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100048
$9
articleId
$4
2270
*4
$4
HSET
$22
hash:article:by:100048
$5
title
$27
设计模式之模板模式
*4
$4
HSET
$22
hash:article:by:100048
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100048
$8
labelIds
$4
[12]
*4
$4
HSET
$22
hash:article:by:100048
$6
digest
$149
例题：泡咖啡和泡茶的步骤泡咖啡                                       泡茶 
水烧开                                    水烧开...
*4
$4
HSET
$22
hash:article:by:100048
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100048
$7
content
$41
csdn/java/1_2_1_12_1504264575.460372.html
*4
$4
HSET
$22
hash:article:by:100048
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100048
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100048
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100048
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100048
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100048
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100048
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100048
$10
createTime
$13
1497798026000
*4
$4
HSET
$22
hash:article:by:100048
$11
releaseTime
$13
1497798026000
*4
$4
HSET
$22
hash:article:by:100048
$10
updateTime
$13
1497798026000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100048
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100048
*3
$5
LPUSH
$15
list:article:id
$6
100048
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100048
*4
$4
HSET
$22
hash:article:by:100042
$2
id
$6
100042
*4
$4
HSET
$22
hash:article:by:100042
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100042
$9
articleId
$4
2272
*4
$4
HSET
$22
hash:article:by:100042
$5
title
$21
设计模式之外观
*4
$4
HSET
$22
hash:article:by:100042
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100042
$8
labelIds
$4
[12]
*4
$4
HSET
$22
hash:article:by:100042
$6
digest
$289
例题：一个家庭影院项目组建一个家庭影院： 
DVD播放器、投影仪、自动屏幕、环绕立体声、爆米花机外观模式的原理和设计外观模式：提供一个统一的接口，来访问子系统中一群功能相关接口 
外观模式定义了一个高...
*4
$4
HSET
$22
hash:article:by:100042
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100042
$7
content
$41
csdn/java/1_2_1_11_1504264577.579647.html
*4
$4
HSET
$22
hash:article:by:100042
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100042
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100042
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100042
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100042
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100042
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100042
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100042
$10
createTime
$13
1497787202000
*4
$4
HSET
$22
hash:article:by:100042
$11
releaseTime
$13
1497787202000
*4
$4
HSET
$22
hash:article:by:100042
$10
updateTime
$13
1497787202000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100042
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100042
*3
$5
LPUSH
$15
list:article:id
$6
100042
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100042
*4
$4
HSET
$22
hash:article:by:100034
$2
id
$6
100034
*4
$4
HSET
$22
hash:article:by:100034
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100034
$9
articleId
$4
2269
*4
$4
HSET
$22
hash:article:by:100034
$5
title
$30
设计模式之适配器模式
*4
$4
HSET
$22
hash:article:by:100034
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100034
$8
labelIds
$4
[12]
*4
$4
HSET
$22
hash:article:by:100034
$6
digest
$279
现实生活中一些适配器例子例题：用火鸡冒充鸭子 
适配器模式原理： 
适配器模式：将一个类的接口转换成另一种接口.让原本接口不兼容的类可以兼容. 
 
从用户的角度看不到被适配者，是解耦的 
用户调用适...
*4
$4
HSET
$22
hash:article:by:100034
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100034
$7
content
$41
csdn/java/1_2_1_10_1504264574.475593.html
*4
$4
HSET
$22
hash:article:by:100034
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100034
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100034
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100034
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100034
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100034
$9
topStatus
$1
1
*4
$4
HSET
$22
hash:article:by:100034
$10
topEndTime
$13
1509465600000
*4
$4
HSET
$22
hash:article:by:100034
$10
createTime
$13
1497729617000
*4
$4
HSET
$22
hash:article:by:100034
$11
releaseTime
$13
1497729617000
*4
$4
HSET
$22
hash:article:by:100034
$10
updateTime
$13
1497729617000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100034
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100034
*3
$5
LPUSH
$15
list:article:id
$6
100034
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100034
*4
$4
HSET
$22
hash:article:by:100038
$2
id
$6
100038
*4
$4
HSET
$22
hash:article:by:100038
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100038
$9
articleId
$4
2275
*4
$4
HSET
$22
hash:article:by:100038
$5
title
$27
设计模式之命令模式
*4
$4
HSET
$22
hash:article:by:100038
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100038
$8
labelIds
$4
[12]
*4
$4
HSET
$22
hash:article:by:100038
$6
digest
$205
例题：家电自动化遥控器API各家电API 
遥控器接口 
要求自动化遥控器：扩展性好、维护性好 
命令模式原理遥控器例题的类图code Address:http://download.csdn.net...
*4
$4
HSET
$22
hash:article:by:100038
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100038
$7
content
$40
csdn/java/1_2_1_9_1504264579.681577.html
*4
$4
HSET
$22
hash:article:by:100038
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100038
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100038
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100038
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100038
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100038
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100038
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100038
$10
createTime
$13
1497722454000
*4
$4
HSET
$22
hash:article:by:100038
$11
releaseTime
$13
1497722454000
*4
$4
HSET
$22
hash:article:by:100038
$10
updateTime
$13
1497722454000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100038
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100038
*3
$5
LPUSH
$15
list:article:id
$6
100038
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100038
*4
$4
HSET
$22
hash:article:by:100041
$2
id
$6
100041
*4
$4
HSET
$22
hash:article:by:100041
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100041
$9
articleId
$4
2274
*4
$4
HSET
$22
hash:article:by:100041
$5
title
$27
设计模式之工厂系列
*4
$4
HSET
$22
hash:article:by:100041
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100041
$8
labelIds
$4
[12]
*4
$4
HSET
$22
hash:article:by:100041
$6
digest
$295
例题：披萨项目：要方便披萨品种的扩展、要便于维护、要能运行时扩展简单工厂模式 — 简单工厂模式的设计方案简单工厂模式的设计方案：定义一个实例化披萨对象的类，封装创建对象的代码 
简单工厂模式：定义了一...
*4
$4
HSET
$22
hash:article:by:100041
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100041
$7
content
$40
csdn/java/1_2_1_8_1504264578.819403.html
*4
$4
HSET
$22
hash:article:by:100041
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100041
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100041
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100041
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100041
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100041
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100041
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100041
$10
createTime
$13
1497711628000
*4
$4
HSET
$22
hash:article:by:100041
$11
releaseTime
$13
1497711628000
*4
$4
HSET
$22
hash:article:by:100041
$10
updateTime
$13
1497711628000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100041
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100041
*3
$5
LPUSH
$15
list:article:id
$6
100041
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100041
*4
$4
HSET
$22
hash:article:by:100033
$2
id
$6
100033
*4
$4
HSET
$22
hash:article:by:100033
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100033
$9
articleId
$4
2273
*4
$4
HSET
$22
hash:article:by:100033
$5
title
$21
设计模式之单例
*4
$4
HSET
$22
hash:article:by:100033
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100033
$8
labelIds
$4
[12]
*4
$4
HSET
$22
hash:article:by:100033
$6
digest
$287
单例模式的意义有些对象我们只需要一个：线程池、缓存、硬件设备等 
如果多个实例会有造成冲突、结果的不一致性等问题 
是否可以用静态变量方式来实现？ 
或者程序员之间协商个全局变量？ 
单例模式：确保一...
*4
$4
HSET
$22
hash:article:by:100033
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100033
$7
content
$40
csdn/java/1_2_1_7_1504264578.775785.html
*4
$4
HSET
$22
hash:article:by:100033
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100033
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100033
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100033
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100033
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100033
$9
topStatus
$1
1
*4
$4
HSET
$22
hash:article:by:100033
$10
topEndTime
$13
1509465600000
*4
$4
HSET
$22
hash:article:by:100033
$10
createTime
$13
1497628835000
*4
$4
HSET
$22
hash:article:by:100033
$11
releaseTime
$13
1497628835000
*4
$4
HSET
$22
hash:article:by:100033
$10
updateTime
$13
1497628835000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100033
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100033
*3
$5
LPUSH
$15
list:article:id
$6
100033
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100033
*4
$4
HSET
$22
hash:article:by:100046
$2
id
$6
100046
*4
$4
HSET
$22
hash:article:by:100046
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100046
$9
articleId
$4
2268
*4
$4
HSET
$22
hash:article:by:100046
$5
title
$24
设计模式之观察者
*4
$4
HSET
$22
hash:article:by:100046
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100046
$8
labelIds
$4
[12]
*4
$4
HSET
$22
hash:article:by:100046
$6
digest
$245
Internet气象站例题： 
    提供温度、气压和湿度的接口 
    测量数据更新时需时时通知给第三方 
    需要设计开放型API，便于其他第三方公司也能接入气象站获取数据观察者模式原理：...
*4
$4
HSET
$22
hash:article:by:100046
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100046
$7
content
$40
csdn/java/1_2_1_6_1504264573.534878.html
*4
$4
HSET
$22
hash:article:by:100046
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100046
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100046
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100046
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100046
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100046
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100046
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100046
$10
createTime
$13
1497614436000
*4
$4
HSET
$22
hash:article:by:100046
$11
releaseTime
$13
1497614436000
*4
$4
HSET
$22
hash:article:by:100046
$10
updateTime
$13
1497614436000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100046
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100046
*3
$5
LPUSH
$15
list:article:id
$6
100046
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100046
*4
$4
HSET
$22
hash:article:by:100035
$2
id
$6
100035
*4
$4
HSET
$22
hash:article:by:100035
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100035
$9
articleId
$4
2279
*4
$4
HSET
$22
hash:article:by:100035
$5
title
$21
设计模式之策略
*4
$4
HSET
$22
hash:article:by:100035
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100035
$8
labelIds
$4
[12]
*4
$4
HSET
$22
hash:article:by:100035
$6
digest
$249
例题：模拟鸭子 
          各种颜色，各种不同动作，如飞，叫，游泳 
    1）分析项目变化与不变部分，提取变化部分，抽象成接口+实现； 
    2）鸭子哪些功能是会根据新需求变化的？叫...
*4
$4
HSET
$22
hash:article:by:100035
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100035
$7
content
$40
csdn/java/1_2_1_5_1504264583.994671.html
*4
$4
HSET
$22
hash:article:by:100035
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100035
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100035
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100035
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100035
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100035
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100035
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100035
$10
createTime
$13
1497600059000
*4
$4
HSET
$22
hash:article:by:100035
$11
releaseTime
$13
1497600059000
*4
$4
HSET
$22
hash:article:by:100035
$10
updateTime
$13
1497600059000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100035
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100035
*3
$5
LPUSH
$15
list:article:id
$6
100035
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100035
*4
$4
HSET
$22
hash:article:by:100037
$2
id
$6
100037
*4
$4
HSET
$22
hash:article:by:100037
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100037
$9
articleId
$4
2277
*4
$4
HSET
$22
hash:article:by:100037
$5
title
$24
设计模式之装饰器
*4
$4
HSET
$22
hash:article:by:100037
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100037
$8
labelIds
$4
[12]
*4
$4
HSET
$22
hash:article:by:100037
$6
digest
$155
案例： 
   咖啡馆订单： 
    1）、咖啡种类：Espresso、ShortBlack、LongBlack、Decaf 
    2）、调料：Milk、Soy、Chocolate 
    3...
*4
$4
HSET
$22
hash:article:by:100037
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100037
$7
content
$40
csdn/java/1_2_1_3_1504264581.926302.html
*4
$4
HSET
$22
hash:article:by:100037
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100037
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100037
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100037
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100037
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100037
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100037
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100037
$10
createTime
$13
1497560445000
*4
$4
HSET
$22
hash:article:by:100037
$11
releaseTime
$13
1497560445000
*4
$4
HSET
$22
hash:article:by:100037
$10
updateTime
$13
1497560445000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100037
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100037
*3
$5
LPUSH
$15
list:article:id
$6
100037
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100037
*4
$4
HSET
$22
hash:article:by:100659
$2
id
$6
100659
*4
$4
HSET
$22
hash:article:by:100659
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100659
$9
articleId
$4
2646
*4
$4
HSET
$22
hash:article:by:100659
$5
title
$30
Spring 核心技术概览(一)
*4
$4
HSET
$22
hash:article:by:100659
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100659
$8
labelIds
$21
[612,613,614,615,616]
*4
$4
HSET
$22
hash:article:by:100659
$6
digest
$249
Spring是一个分层的Java SE/EE应用一站式的轻量级开源框架，其从持久层、业务层到表现层都拥有相应的支持，几乎为企业应用提供了所需的一切。本文首先概述了Spring容器的IoC控制反转和DI...
*4
$4
HSET
$22
hash:article:by:100659
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100659
$7
content
$40
csdn/java/1_0_1_5_1504265192.862015.html
*4
$4
HSET
$22
hash:article:by:100659
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100659
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100659
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100659
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100659
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100659
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100659
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100659
$10
createTime
$13
1497297614000
*4
$4
HSET
$22
hash:article:by:100659
$11
releaseTime
$13
1497297614000
*4
$4
HSET
$22
hash:article:by:100659
$10
updateTime
$13
1497297614000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100659
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100659
*3
$5
LPUSH
$15
list:article:id
$6
100659
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100659
*4
$4
HSET
$22
hash:article:by:100338
$2
id
$6
100338
*4
$4
HSET
$22
hash:article:by:100338
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100338
$9
articleId
$4
2658
*4
$4
HSET
$22
hash:article:by:100338
$5
title
$37
设计模式（三）— 设计原则
*4
$4
HSET
$22
hash:article:by:100338
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100338
$8
labelIds
$4
[12]
*4
$4
HSET
$22
hash:article:by:100338
$6
digest
$275
设计原则：
1.逻辑代码独立到单独的方法中，注重封装性--易读，易复用。

   不要在一个方法中，写下上百行的逻辑代码。把各小逻辑代码独立出来，写于其它方法中，易读其可重复调用。


2.写类，写方...
*4
$4
HSET
$22
hash:article:by:100338
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100338
$7
content
$40
csdn/java/1_1_1_2_1504265221.133612.html
*4
$4
HSET
$22
hash:article:by:100338
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100338
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100338
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100338
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100338
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100338
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100338
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100338
$10
createTime
$13
1497020415000
*4
$4
HSET
$22
hash:article:by:100338
$11
releaseTime
$13
1497020415000
*4
$4
HSET
$22
hash:article:by:100338
$10
updateTime
$13
1497020415000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100338
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100338
*3
$5
LPUSH
$15
list:article:id
$6
100338
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100338
*4
$4
HSET
$22
hash:article:by:100340
$2
id
$6
100340
*4
$4
HSET
$22
hash:article:by:100340
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100340
$9
articleId
$4
2657
*4
$4
HSET
$22
hash:article:by:100340
$5
title
$52
设计模式（二）— 为什么要用设计模式
*4
$4
HSET
$22
hash:article:by:100340
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100340
$8
labelIds
$4
[12]
*4
$4
HSET
$22
hash:article:by:100340
$6
digest
$238
使用设计模式的目的：为了代码可重用性、让代码更容易被他人理解、保证代码可靠性。 设计模式使代码编写真正工程化；设计模式是软件工程的基石脉络，如同大厦的结构一样。
*4
$4
HSET
$22
hash:article:by:100340
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100340
$7
content
$40
csdn/java/1_1_1_1_1504265220.150674.html
*4
$4
HSET
$22
hash:article:by:100340
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100340
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100340
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100340
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100340
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100340
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100340
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100340
$10
createTime
$13
1496995240000
*4
$4
HSET
$22
hash:article:by:100340
$11
releaseTime
$13
1496995240000
*4
$4
HSET
$22
hash:article:by:100340
$10
updateTime
$13
1496995240000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100340
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100340
*3
$5
LPUSH
$15
list:article:id
$6
100340
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100340
*4
$4
HSET
$22
hash:article:by:100337
$2
id
$6
100337
*4
$4
HSET
$22
hash:article:by:100337
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100337
$9
articleId
$4
2656
*4
$4
HSET
$22
hash:article:by:100337
$5
title
$46
设计模式（一）— 什么是设计模式
*4
$4
HSET
$22
hash:article:by:100337
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100337
$8
labelIds
$4
[12]
*4
$4
HSET
$22
hash:article:by:100337
$6
digest
$128
设计模式（Design Pattern）是一套被反复使用、多数人知晓的、经过分类的、代码设计经验的总结。
*4
$4
HSET
$22
hash:article:by:100337
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100337
$7
content
$40
csdn/java/1_1_1_0_1504265219.060817.html
*4
$4
HSET
$22
hash:article:by:100337
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100337
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100337
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100337
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100337
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100337
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100337
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100337
$10
createTime
$13
1496995238000
*4
$4
HSET
$22
hash:article:by:100337
$11
releaseTime
$13
1496995238000
*4
$4
HSET
$22
hash:article:by:100337
$10
updateTime
$13
1496995238000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100337
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100337
*3
$5
LPUSH
$15
list:article:id
$6
100337
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100337
*4
$4
HSET
$22
hash:article:by:100764
$2
id
$6
100764
*4
$4
HSET
$22
hash:article:by:100764
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100764
$9
articleId
$4
2644
*4
$4
HSET
$22
hash:article:by:100764
$5
title
$59
Spring MVC 简述：从MVC框架普遍关注的问题说起
*4
$4
HSET
$22
hash:article:by:100764
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100764
$8
labelIds
$21
[451,751,752,753,754]
*4
$4
HSET
$22
hash:article:by:100764
$6
digest
$253
任何一个完备的MVC框架都需要解决Web开发过程中的一些共性的问题，比如请求的收集与分发、数据前后台流转与转换，当前最流行的SpringMVC和Struts2也不例外。本文首先概述MVC模式的分层思想...
*4
$4
HSET
$22
hash:article:by:100764
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100764
$7
content
$40
csdn/java/1_0_1_6_1504265190.747879.html
*4
$4
HSET
$22
hash:article:by:100764
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100764
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100764
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100764
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100764
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100764
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100764
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100764
$10
createTime
$13
1496350819000
*4
$4
HSET
$22
hash:article:by:100764
$11
releaseTime
$13
1496350819000
*4
$4
HSET
$22
hash:article:by:100764
$10
updateTime
$13
1496350819000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100764
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100764
*3
$5
LPUSH
$15
list:article:id
$6
100764
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100764
*4
$4
HSET
$22
hash:article:by:100075
$2
id
$6
100075
*4
$4
HSET
$22
hash:article:by:100075
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100075
$9
articleId
$4
2532
*4
$4
HSET
$22
hash:article:by:100075
$5
title
$26
浅谈对ActiveMQ的理解
*4
$4
HSET
$22
hash:article:by:100075
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100075
$8
labelIds
$7
[50,51]
*4
$4
HSET
$22
hash:article:by:100075
$6
digest
$303
现如今项目开发过程中由于功能多，流程长，机制繁多且复杂，让一个线程去跑完一个业务的整个流程的话会显得非常繁琐且耦合性太强，代码量很大，这个时候我们就可以用到一款技术叫做消息队列，我们可以通过定义好发送...
*4
$4
HSET
$22
hash:article:by:100075
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100075
$7
content
$41
csdn/java/1_1_1_15_1504264888.550877.html
*4
$4
HSET
$22
hash:article:by:100075
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100075
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100075
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100075
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100075
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100075
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100075
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100075
$10
createTime
$13
1495198857000
*4
$4
HSET
$22
hash:article:by:100075
$11
releaseTime
$13
1495198857000
*4
$4
HSET
$22
hash:article:by:100075
$10
updateTime
$13
1495198857000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100075
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100075
*3
$5
LPUSH
$15
list:article:id
$6
100075
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100075
*4
$4
HSET
$22
hash:article:by:100113
$2
id
$6
100113
*4
$4
HSET
$22
hash:article:by:100113
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100113
$9
articleId
$4
2398
*4
$4
HSET
$22
hash:article:by:100113
$5
title
$28
php、java实现桥接模式
*4
$4
HSET
$22
hash:article:by:100113
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100113
$8
labelIds
$10
[89,18,19]
*4
$4
HSET
$22
hash:article:by:100113
$6
digest
$173
该模式主要目的在于解耦，将模块的粒度分隔的更细，便于需求的更改类图 
java实现public interface Implementor {
    public void doSomething(...
*4
$4
HSET
$22
hash:article:by:100113
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100113
$7
content
$40
csdn/java/1_0_1_0_1504264710.849243.html
*4
$4
HSET
$22
hash:article:by:100113
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100113
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100113
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100113
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100113
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100113
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100113
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100113
$10
createTime
$13
1495180823000
*4
$4
HSET
$22
hash:article:by:100113
$11
releaseTime
$13
1495180823000
*4
$4
HSET
$22
hash:article:by:100113
$10
updateTime
$13
1495180823000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100113
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100113
*3
$5
LPUSH
$15
list:article:id
$6
100113
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100113
*4
$4
HSET
$22
hash:article:by:100060
$2
id
$6
100060
*4
$4
HSET
$22
hash:article:by:100060
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100060
$9
articleId
$4
2531
*4
$4
HSET
$22
hash:article:by:100060
$5
title
$39
线程中的乐观与悲观锁的区别
*4
$4
HSET
$22
hash:article:by:100060
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100060
$8
labelIds
$10
[32,33,34]
*4
$4
HSET
$22
hash:article:by:100060
$6
digest
$299
线程中的锁可以分为乐观锁和悲观锁，这两个都是实现锁机制的两种办法。 
悲观锁：根据字面意思，悲观，就是不是太好的。当一个线程访问这个数据的时候，悲观锁会把这个数据给锁住，不被其他线程所访问，直到这个线...
*4
$4
HSET
$22
hash:article:by:100060
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100060
$7
content
$40
csdn/java/1_1_1_7_1504264887.453092.html
*4
$4
HSET
$22
hash:article:by:100060
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100060
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100060
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100060
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100060
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100060
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100060
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100060
$10
createTime
$13
1495015220000
*4
$4
HSET
$22
hash:article:by:100060
$11
releaseTime
$13
1495015220000
*4
$4
HSET
$22
hash:article:by:100060
$10
updateTime
$13
1495015220000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100060
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100060
*3
$5
LPUSH
$15
list:article:id
$6
100060
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100060
*4
$4
HSET
$22
hash:article:by:100107
$2
id
$6
100107
*4
$4
HSET
$22
hash:article:by:100107
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100107
$9
articleId
$4
2153
*4
$4
HSET
$22
hash:article:by:100107
$5
title
$31
Java设计模式之单例模式
*4
$4
HSET
$22
hash:article:by:100107
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100107
$8
labelIds
$7
[12,84]
*4
$4
HSET
$22
hash:article:by:100107
$6
digest
$257
单例模式的概念:单例模式的意思就是只有一个实例,单例模式确保某一个类只有一个实例,而且自行实例化并向整个系统提供这个实例,这个类称为单例类懒汉模式(类加载时不初始化):public class Laz...
*4
$4
HSET
$22
hash:article:by:100107
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100107
$7
content
$40
csdn/java/1_0_1_0_1504264477.390083.html
*4
$4
HSET
$22
hash:article:by:100107
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100107
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100107
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100107
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100107
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100107
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100107
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100107
$10
createTime
$13
1494594031000
*4
$4
HSET
$22
hash:article:by:100107
$11
releaseTime
$13
1494594031000
*4
$4
HSET
$22
hash:article:by:100107
$10
updateTime
$13
1494594031000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100107
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100107
*3
$5
LPUSH
$15
list:article:id
$6
100107
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100107
*4
$4
HSET
$22
hash:article:by:100058
$2
id
$6
100058
*4
$4
HSET
$22
hash:article:by:100058
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100058
$9
articleId
$4
2530
*4
$4
HSET
$22
hash:article:by:100058
$5
title
$25
Java自定义注解解析
*4
$4
HSET
$22
hash:article:by:100058
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100058
$8
labelIds
$7
[18,30]
*4
$4
HSET
$22
hash:article:by:100058
$6
digest
$239
什么是注解Annotation（注解）就是Java提供了一种元程序中的元素关联任何信息和着任何元数据（metadata）的途径和方法。Annotion(注解)是一个接口，程序可以通过反射来获取指定程序...
*4
$4
HSET
$22
hash:article:by:100058
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100058
$7
content
$41
csdn/java/1_1_1_14_1504264886.823559.html
*4
$4
HSET
$22
hash:article:by:100058
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100058
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100058
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100058
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100058
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100058
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100058
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100058
$10
createTime
$13
1494518454000
*4
$4
HSET
$22
hash:article:by:100058
$11
releaseTime
$13
1494518454000
*4
$4
HSET
$22
hash:article:by:100058
$10
updateTime
$13
1494518454000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100058
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100058
*3
$5
LPUSH
$15
list:article:id
$6
100058
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100058
*4
$4
HSET
$22
hash:article:by:100078
$2
id
$6
100078
*4
$4
HSET
$22
hash:article:by:100078
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100078
$9
articleId
$4
2526
*4
$4
HSET
$22
hash:article:by:100078
$5
title
$54
Java多线程wait,notify以及同步锁的运用实例
*4
$4
HSET
$22
hash:article:by:100078
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100078
$8
labelIds
$10
[18,52,32]
*4
$4
HSET
$22
hash:article:by:100078
$6
digest
$171
一个开多线程打印10次ABC的小Demo,如何保证线程执行的有序性，以下面这个Demo来做说明：package com.lyt.usermanage.test;public class MyThrea...
*4
$4
HSET
$22
hash:article:by:100078
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100078
$7
content
$40
csdn/java/1_1_1_6_1504264882.327227.html
*4
$4
HSET
$22
hash:article:by:100078
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100078
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100078
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100078
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100078
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100078
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100078
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100078
$10
createTime
$13
1494504035000
*4
$4
HSET
$22
hash:article:by:100078
$11
releaseTime
$13
1494504035000
*4
$4
HSET
$22
hash:article:by:100078
$10
updateTime
$13
1494504035000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100078
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100078
*3
$5
LPUSH
$15
list:article:id
$6
100078
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100078
*4
$4
HSET
$22
hash:article:by:100754
$2
id
$6
100754
*4
$4
HSET
$22
hash:article:by:100754
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100754
$9
articleId
$4
2525
*4
$4
HSET
$22
hash:article:by:100754
$5
title
$40
Java中如何优雅正确的终止线程
*4
$4
HSET
$22
hash:article:by:100754
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100754
$8
labelIds
$7
[18,32]
*4
$4
HSET
$22
hash:article:by:100754
$6
digest
$269
Java中终止线程的方式主要有三种：1、使用stop()方法，已被弃用。原因是：stop()是立即终止，会导致一些数据被到处理一部分就会被终止，而用户并不知道哪些数据被处理，哪些没有被处理，产生了不完...
*4
$4
HSET
$22
hash:article:by:100754
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100754
$7
content
$40
csdn/java/1_1_1_5_1504264881.342659.html
*4
$4
HSET
$22
hash:article:by:100754
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100754
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100754
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100754
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100754
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100754
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100754
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100754
$10
createTime
$13
1494428453000
*4
$4
HSET
$22
hash:article:by:100754
$11
releaseTime
$13
1494428453000
*4
$4
HSET
$22
hash:article:by:100754
$10
updateTime
$13
1494428453000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100754
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100754
*3
$5
LPUSH
$15
list:article:id
$6
100754
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100754
*4
$4
HSET
$22
hash:article:by:100108
$2
id
$6
100108
*4
$4
HSET
$22
hash:article:by:100108
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100108
$9
articleId
$4
2406
*4
$4
HSET
$22
hash:article:by:100108
$5
title
$29
php、java 实现享元模式
*4
$4
HSET
$22
hash:article:by:100108
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100108
$8
labelIds
$7
[18,19]
*4
$4
HSET
$22
hash:article:by:100108
$6
digest
$177
避免无限制的创建对象，建立一个对象池，将可以共享的对象存起来复用。类图 
java实现public abstract class Flyweight {    private String intri...
*4
$4
HSET
$22
hash:article:by:100108
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100108
$7
content
$39
csdn/java/1_0_1_1_1504264716.88968.html
*4
$4
HSET
$22
hash:article:by:100108
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100108
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100108
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100108
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100108
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100108
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100108
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100108
$10
createTime
$13
1494417618000
*4
$4
HSET
$22
hash:article:by:100108
$11
releaseTime
$13
1494417618000
*4
$4
HSET
$22
hash:article:by:100108
$10
updateTime
$13
1494417618000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100108
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100108
*3
$5
LPUSH
$15
list:article:id
$6
100108
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100108
*4
$4
HSET
$22
hash:article:by:100094
$2
id
$6
100094
*4
$4
HSET
$22
hash:article:by:100094
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100094
$9
articleId
$4
2537
*4
$4
HSET
$22
hash:article:by:100094
$5
title
$68
Java多线程Thread类和Runable接口的区别以及线程类详解
*4
$4
HSET
$22
hash:article:by:100094
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100094
$8
labelIds
$13
[18,52,32,68]
*4
$4
HSET
$22
hash:article:by:100094
$6
digest
$215
在Java中可有两种方式实现多线程，一种是继承Thread类，一种是实现Runnable接口；Thread类是在java.lang包中定义的。一个类只要继承了Thread类同时覆写了本类中的run()...
*4
$4
HSET
$22
hash:article:by:100094
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100094
$7
content
$40
csdn/java/1_1_1_13_1504264894.60784.html
*4
$4
HSET
$22
hash:article:by:100094
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100094
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100094
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100094
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100094
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100094
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100094
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100094
$10
createTime
$13
1494410452000
*4
$4
HSET
$22
hash:article:by:100094
$11
releaseTime
$13
1494410452000
*4
$4
HSET
$22
hash:article:by:100094
$10
updateTime
$13
1494410452000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100094
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100094
*3
$5
LPUSH
$15
list:article:id
$6
100094
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100094
*4
$4
HSET
$22
hash:article:by:100111
$2
id
$6
100111
*4
$4
HSET
$22
hash:article:by:100111
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100111
$9
articleId
$4
2416
*4
$4
HSET
$22
hash:article:by:100111
$5
title
$28
php、java实现状态模式
*4
$4
HSET
$22
hash:article:by:100111
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100111
$8
labelIds
$7
[19,18]
*4
$4
HSET
$22
hash:article:by:100111
$6
digest
$191
个人理解：根据事物状态的不同，导致其行为的不同，切换状态，相应的行为也会发生变化类图 
php实现abstract class Status
{
    protected $context;    ...
*4
$4
HSET
$22
hash:article:by:100111
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100111
$7
content
$40
csdn/java/1_0_1_2_1504264726.190857.html
*4
$4
HSET
$22
hash:article:by:100111
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100111
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100111
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100111
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100111
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100111
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100111
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100111
$10
createTime
$13
1493888401000
*4
$4
HSET
$22
hash:article:by:100111
$11
releaseTime
$13
1493888401000
*4
$4
HSET
$22
hash:article:by:100111
$10
updateTime
$13
1493888401000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100111
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100111
*3
$5
LPUSH
$15
list:article:id
$6
100111
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100111
*4
$4
HSET
$22
hash:article:by:100743
$2
id
$6
100743
*4
$4
HSET
$22
hash:article:by:100743
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100743
$9
articleId
$4
2641
*4
$4
HSET
$22
hash:article:by:100743
$5
title
$33
简述数据库事务并发机制
*4
$4
HSET
$22
hash:article:by:100743
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100743
$8
labelIds
$21
[715,716,717,718,719]
*4
$4
HSET
$22
hash:article:by:100743
$6
digest
$303
事务是最小的逻辑执行单元，也是数据库并发控制的基本单位，其执行的结果必须使数据库从一种一致性状态变到另一种一致性状态。事务具有四个重要特征，即原子性、一致性、隔离性和持久性。本文首先叙述了数据库中事务...
*4
$4
HSET
$22
hash:article:by:100743
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100743
$7
content
$40
csdn/java/1_0_1_7_1504265187.462082.html
*4
$4
HSET
$22
hash:article:by:100743
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100743
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100743
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100743
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100743
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100743
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100743
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100743
$10
createTime
$13
1492768817000
*4
$4
HSET
$22
hash:article:by:100743
$11
releaseTime
$13
1492768817000
*4
$4
HSET
$22
hash:article:by:100743
$10
updateTime
$13
1492768817000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100743
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100743
*3
$5
LPUSH
$15
list:article:id
$6
100743
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100743
*4
$4
HSET
$22
hash:article:by:100217
$2
id
$6
100217
*4
$4
HSET
$22
hash:article:by:100217
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100217
$9
articleId
$4
2528
*4
$4
HSET
$22
hash:article:by:100217
$5
title
$63
Java 判断一个时间段（YYYY-MM-DD）是否在一个区间
*4
$4
HSET
$22
hash:article:by:100217
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100217
$8
labelIds
$4
[18]
*4
$4
HSET
$22
hash:article:by:100217
$6
digest
$135
/** 
    * @Title: isInDate 
    * @Description: 判断一个时间段（YYYY-MM-DD）是否在一个区间 
    * @param @param dat...
*4
$4
HSET
$22
hash:article:by:100217
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100217
$7
content
$39
csdn/java/1_1_1_4_1504264884.25655.html
*4
$4
HSET
$22
hash:article:by:100217
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100217
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100217
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100217
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100217
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100217
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100217
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100217
$10
createTime
$13
1491933603000
*4
$4
HSET
$22
hash:article:by:100217
$11
releaseTime
$13
1491933603000
*4
$4
HSET
$22
hash:article:by:100217
$10
updateTime
$13
1491933603000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100217
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100217
*3
$5
LPUSH
$15
list:article:id
$6
100217
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100217
*4
$4
HSET
$22
hash:article:by:100087
$2
id
$6
100087
*4
$4
HSET
$22
hash:article:by:100087
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100087
$9
articleId
$4
2418
*4
$4
HSET
$22
hash:article:by:100087
$5
title
$29
php,java实现访问者模式
*4
$4
HSET
$22
hash:article:by:100087
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100087
$8
labelIds
$7
[18,19]
*4
$4
HSET
$22
hash:article:by:100087
$6
digest
$219
定义一个类，使用它对数据类进行访问，可以减少对数据类的污染，并且可以随意定制数据展示和计算等。类图 
java实现： 
数据源抽象类public abstract class Element {   ...
*4
$4
HSET
$22
hash:article:by:100087
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100087
$7
content
$40
csdn/java/1_0_1_3_1504264727.480649.html
*4
$4
HSET
$22
hash:article:by:100087
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100087
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100087
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100087
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100087
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100087
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100087
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100087
$10
createTime
$13
1491897659000
*4
$4
HSET
$22
hash:article:by:100087
$11
releaseTime
$13
1491897659000
*4
$4
HSET
$22
hash:article:by:100087
$10
updateTime
$13
1491897659000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100087
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100087
*3
$5
LPUSH
$15
list:article:id
$6
100087
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100087
*4
$4
HSET
$22
hash:article:by:100100
$2
id
$6
100100
*4
$4
HSET
$22
hash:article:by:100100
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100100
$9
articleId
$4
2524
*4
$4
HSET
$22
hash:article:by:100100
$5
title
$107
List集合切割实现对已有数据的分页显示（LIST容器数据量不大的情况下推荐使用）
*4
$4
HSET
$22
hash:article:by:100100
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100100
$8
labelIds
$10
[45,44,78]
*4
$4
HSET
$22
hash:article:by:100100
$6
digest
$103
package com.lyt.usermanage.utils;import java.util.ArrayList;
import java.util.LinkedList;
import jav...
*4
$4
HSET
$22
hash:article:by:100100
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100100
$7
content
$40
csdn/java/1_1_1_3_1504264880.244732.html
*4
$4
HSET
$22
hash:article:by:100100
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100100
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100100
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100100
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100100
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100100
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100100
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100100
$10
createTime
$13
1491832806000
*4
$4
HSET
$22
hash:article:by:100100
$11
releaseTime
$13
1491832806000
*4
$4
HSET
$22
hash:article:by:100100
$10
updateTime
$13
1491832806000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100100
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100100
*3
$5
LPUSH
$15
list:article:id
$6
100100
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100100
*4
$4
HSET
$22
hash:article:by:100096
$2
id
$6
100096
*4
$4
HSET
$22
hash:article:by:100096
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100096
$9
articleId
$4
2421
*4
$4
HSET
$22
hash:article:by:100096
$5
title
$31
php，java实现备忘录模式
*4
$4
HSET
$22
hash:article:by:100096
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100096
$8
labelIds
$7
[18,19]
*4
$4
HSET
$22
hash:article:by:100096
$6
digest
$173
适用于想要回复某个时间点的数据，类似于数据库的恢复。类图： 
java实现： 
原始类public class Originator {    private String status = ""; ...
*4
$4
HSET
$22
hash:article:by:100096
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100096
$7
content
$40
csdn/java/1_0_1_4_1504264730.608431.html
*4
$4
HSET
$22
hash:article:by:100096
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100096
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100096
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100096
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100096
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100096
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100096
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100096
$10
createTime
$13
1491807656000
*4
$4
HSET
$22
hash:article:by:100096
$11
releaseTime
$13
1491807656000
*4
$4
HSET
$22
hash:article:by:100096
$10
updateTime
$13
1491807656000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100096
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100096
*3
$5
LPUSH
$15
list:article:id
$6
100096
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100096
*4
$4
HSET
$22
hash:article:by:100149
$2
id
$6
100149
*4
$4
HSET
$22
hash:article:by:100149
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100149
$9
articleId
$4
2562
*4
$4
HSET
$22
hash:article:by:100149
$5
title
$28
cassandra 堆外内存管理
*4
$4
HSET
$22
hash:article:by:100149
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100149
$8
labelIds
$20
[133,18,134,135,136]
*4
$4
HSET
$22
hash:article:by:100149
$6
digest
$241
为什么需要堆外内存呢单有一些大内存对象的时候，JVM进行垃圾回收时需要收集所有的这些对象的内存也。增加了GC压力。因此需要使用堆外内存。java 分配堆外内存org.apache.cassandra....
*4
$4
HSET
$22
hash:article:by:100149
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100149
$7
content
$40
csdn/java/1_1_1_2_1504264960.115355.html
*4
$4
HSET
$22
hash:article:by:100149
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100149
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100149
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100149
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100149
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100149
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100149
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100149
$10
createTime
$13
1491746411000
*4
$4
HSET
$22
hash:article:by:100149
$11
releaseTime
$13
1491746411000
*4
$4
HSET
$22
hash:article:by:100149
$10
updateTime
$13
1491746411000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100149
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100149
*3
$5
LPUSH
$15
list:article:id
$6
100149
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100149
*4
$4
HSET
$22
hash:article:by:100669
$2
id
$6
100669
*4
$4
HSET
$22
hash:article:by:100669
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100669
$9
articleId
$4
2643
*4
$4
HSET
$22
hash:article:by:100669
$5
title
$42
计算机网络体系结构综述（下）
*4
$4
HSET
$22
hash:article:by:100669
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100669
$8
labelIds
$21
[626,627,628,629,630]
*4
$4
HSET
$22
hash:article:by:100669
$6
digest
$257
我们知道TCP/IP与OSI最大的不同在于OSI是一个理论上的网络通信模型，而TCP/IP则是实际上的网络通信标准。在上篇[《高频笔试面试干货：计算机网络体系结构综述（上）》][1]的基础上，本文着重...
*4
$4
HSET
$22
hash:article:by:100669
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100669
$7
content
$40
csdn/java/1_0_1_8_1504265189.468613.html
*4
$4
HSET
$22
hash:article:by:100669
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100669
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100669
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100669
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100669
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100669
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100669
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100669
$10
createTime
$13
1491584459000
*4
$4
HSET
$22
hash:article:by:100669
$11
releaseTime
$13
1491584459000
*4
$4
HSET
$22
hash:article:by:100669
$10
updateTime
$13
1491584459000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100669
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100669
*3
$5
LPUSH
$15
list:article:id
$6
100669
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100669
*4
$4
HSET
$22
hash:article:by:100763
$2
id
$6
100763
*4
$4
HSET
$22
hash:article:by:100763
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100763
$9
articleId
$4
2642
*4
$4
HSET
$22
hash:article:by:100763
$5
title
$42
计算机网络体系结构综述（上）
*4
$4
HSET
$22
hash:article:by:100763
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100763
$8
labelIds
$21
[748,626,627,749,750]
*4
$4
HSET
$22
hash:article:by:100763
$6
digest
$303
计算机网络体系结构标准的制定使得两台计算机能够像两个知心朋友那样能够互相准确理解对方的意思并做出优雅的回应。本文首先概述了计算机网络体系结构的提出动机，并结合日常生活中的邮政系统介绍了设计的理念，并给...
*4
$4
HSET
$22
hash:article:by:100763
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100763
$7
content
$40
csdn/java/1_0_1_9_1504265188.466111.html
*4
$4
HSET
$22
hash:article:by:100763
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100763
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100763
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100763
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100763
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100763
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100763
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100763
$10
createTime
$13
1491584454000
*4
$4
HSET
$22
hash:article:by:100763
$11
releaseTime
$13
1491584454000
*4
$4
HSET
$22
hash:article:by:100763
$10
updateTime
$13
1491584454000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100763
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100763
*3
$5
LPUSH
$15
list:article:id
$6
100763
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100763
*4
$4
HSET
$22
hash:article:by:100105
$2
id
$6
100105
*4
$4
HSET
$22
hash:article:by:100105
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100105
$9
articleId
$4
2419
*4
$4
HSET
$22
hash:article:by:100105
$5
title
$38
php,java实现门面（外观）模式
*4
$4
HSET
$22
hash:article:by:100105
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100105
$8
labelIds
$7
[18,19]
*4
$4
HSET
$22
hash:article:by:100105
$6
digest
$229
外观模式，就是将负复杂的业务路基统一到一个类中，该类提供了一个简易的访问接口，只需要调用该接口，就可以完成复杂的逻辑。类图: 
java实现public class BusinessClass1 { ...
*4
$4
HSET
$22
hash:article:by:100105
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100105
$7
content
$40
csdn/java/1_0_1_5_1504264728.344539.html
*4
$4
HSET
$22
hash:article:by:100105
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100105
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100105
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100105
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100105
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100105
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100105
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100105
$10
createTime
$13
1491552014000
*4
$4
HSET
$22
hash:article:by:100105
$11
releaseTime
$13
1491552014000
*4
$4
HSET
$22
hash:article:by:100105
$10
updateTime
$13
1491552014000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100105
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100105
*3
$5
LPUSH
$15
list:article:id
$6
100105
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100105
*4
$4
HSET
$22
hash:article:by:100518
$2
id
$6
100518
*4
$4
HSET
$22
hash:article:by:100518
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100518
$9
articleId
$4
2639
*4
$4
HSET
$22
hash:article:by:100518
$5
title
$53
Struts1与Struts2的区别和对比（深度好文）
*4
$4
HSET
$22
hash:article:by:100518
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100518
$8
labelIds
$21
[473,474,475,476,477]
*4
$4
HSET
$22
hash:article:by:100518
$6
digest
$199
本文介绍了Struts2的起源，详细对比了Struts2和Struts1.x的差异，并穿插概述了Struts2框架和请求流程。本文详细介绍了Struts1.x和Struts2两者之间在Action方面...
*4
$4
HSET
$22
hash:article:by:100518
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100518
$7
content
$41
csdn/java/1_0_1_10_1504265185.537105.html
*4
$4
HSET
$22
hash:article:by:100518
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100518
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100518
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100518
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100518
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100518
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100518
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100518
$10
createTime
$13
1491426031000
*4
$4
HSET
$22
hash:article:by:100518
$11
releaseTime
$13
1491426031000
*4
$4
HSET
$22
hash:article:by:100518
$10
updateTime
$13
1491426031000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100518
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100518
*3
$5
LPUSH
$15
list:article:id
$6
100518
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100518
*4
$4
HSET
$22
hash:article:by:100115
$2
id
$6
100115
*4
$4
HSET
$22
hash:article:by:100115
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100115
$9
articleId
$4
2420
*4
$4
HSET
$22
hash:article:by:100115
$5
title
$29
php,java实现观察者模式
*4
$4
HSET
$22
hash:article:by:100115
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100115
$8
labelIds
$7
[18,19]
*4
$4
HSET
$22
hash:article:by:100115
$6
digest
$121
类图： 
java实现 
被观察者public abstract class Observable extends java.util.Observable{    private ArrayList...
*4
$4
HSET
$22
hash:article:by:100115
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100115
$7
content
$39
csdn/java/1_0_1_6_1504264729.44845.html
*4
$4
HSET
$22
hash:article:by:100115
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100115
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100115
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100115
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100115
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100115
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100115
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100115
$10
createTime
$13
1491379233000
*4
$4
HSET
$22
hash:article:by:100115
$11
releaseTime
$13
1491379233000
*4
$4
HSET
$22
hash:article:by:100115
$10
updateTime
$13
1491379233000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100115
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100115
*3
$5
LPUSH
$15
list:article:id
$6
100115
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100115
*4
$4
HSET
$22
hash:article:by:100144
$2
id
$6
100144
*4
$4
HSET
$22
hash:article:by:100144
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100144
$9
articleId
$4
2408
*4
$4
HSET
$22
hash:article:by:100144
$5
title
$26
php,java实现组合模式
*4
$4
HSET
$22
hash:article:by:100144
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100144
$8
labelIds
$13
[19,18,75,61]
*4
$4
HSET
$22
hash:article:by:100144
$6
digest
$165
组合模式强调整体与部分的关系，如数据结构中的树结构等类图： 
java实现public abstract class AbsPart {    public abstract void getInfo...
*4
$4
HSET
$22
hash:article:by:100144
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100144
$7
content
$40
csdn/java/1_0_1_7_1504264718.094249.html
*4
$4
HSET
$22
hash:article:by:100144
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100144
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100144
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100144
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100144
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100144
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100144
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100144
$10
createTime
$13
1491296411000
*4
$4
HSET
$22
hash:article:by:100144
$11
releaseTime
$13
1491296411000
*4
$4
HSET
$22
hash:article:by:100144
$10
updateTime
$13
1491296411000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100144
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100144
*3
$5
LPUSH
$15
list:article:id
$6
100144
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100144
*4
$4
HSET
$22
hash:article:by:100702
$2
id
$6
100702
*4
$4
HSET
$22
hash:article:by:100702
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100702
$9
articleId
$4
2635
*4
$4
HSET
$22
hash:article:by:100702
$5
title
$36
再述 OGNL：在Struts2中的应用
*4
$4
HSET
$22
hash:article:by:100702
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100702
$8
labelIds
$21
[659,660,661,577,662]
*4
$4
HSET
$22
hash:article:by:100702
$6
digest
$281
MVC框架的分层结构提高了程序的可维护性、可移植性、可扩展性与可重用性，降低了程序的开发难度，但是也引来了一些新的问题，比如不同层次间的数据流转问题。OGNL的出现填平了这条沟壑，成为字符串与Java...
*4
$4
HSET
$22
hash:article:by:100702
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100702
$7
content
$41
csdn/java/1_0_1_11_1504265181.331975.html
*4
$4
HSET
$22
hash:article:by:100702
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100702
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100702
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100702
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100702
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100702
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100702
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100702
$10
createTime
$13
1491231619000
*4
$4
HSET
$22
hash:article:by:100702
$11
releaseTime
$13
1491231619000
*4
$4
HSET
$22
hash:article:by:100702
$10
updateTime
$13
1491231619000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100702
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100702
*3
$5
LPUSH
$15
list:article:id
$6
100702
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100702
*4
$4
HSET
$22
hash:article:by:100620
$2
id
$6
100620
*4
$4
HSET
$22
hash:article:by:100620
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100620
$9
articleId
$4
2638
*4
$4
HSET
$22
hash:article:by:100620
$5
title
$58
与MVC框架解耦的OGNL：前世今生及其基本用法
*4
$4
HSET
$22
hash:article:by:100620
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100620
$8
labelIds
$21
[573,574,575,576,577]
*4
$4
HSET
$22
hash:article:by:100620
$6
digest
$267
虽然我们通过MVC框架而结缘OGNL，但它并未与MVC框架耦合在一起，而是一个以独立的库文件出现的功能强大的表达式语言，是字符串与Java对象之间沟通的桥梁。它通过简单一致的语法，可以存取Java对象...
*4
$4
HSET
$22
hash:article:by:100620
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100620
$7
content
$41
csdn/java/1_0_1_12_1504265184.350144.html
*4
$4
HSET
$22
hash:article:by:100620
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100620
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100620
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100620
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100620
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100620
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100620
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100620
$10
createTime
$13
1491202811000
*4
$4
HSET
$22
hash:article:by:100620
$11
releaseTime
$13
1491202811000
*4
$4
HSET
$22
hash:article:by:100620
$10
updateTime
$13
1491202811000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100620
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100620
*3
$5
LPUSH
$15
list:article:id
$6
100620
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100620
*4
$4
HSET
$22
hash:article:by:100250
$2
id
$6
100250
*4
$4
HSET
$22
hash:article:by:100250
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100250
$9
articleId
$4
2720
*4
$4
HSET
$22
hash:article:by:100250
$5
title
$44
redis学习记录(四)-SpringDataRedis分析
*4
$4
HSET
$22
hash:article:by:100250
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100250
$8
labelIds
$4
[98]
*4
$4
HSET
$22
hash:article:by:100250
$6
digest
$173
redis学习记录(四)-SpringDataRedis分析标签（空格分隔）： redis
  个人独立博客: http://mrdear.cn
Redis学习记录(一)–入门知识 
Redis学习记...
*4
$4
HSET
$22
hash:article:by:100250
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100250
$7
content
$40
csdn/java/1_0_1_7_1504265324.427872.html
*4
$4
HSET
$22
hash:article:by:100250
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100250
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100250
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100250
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100250
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100250
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100250
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100250
$10
createTime
$13
1491123619000
*4
$4
HSET
$22
hash:article:by:100250
$11
releaseTime
$13
1491123619000
*4
$4
HSET
$22
hash:article:by:100250
$10
updateTime
$13
1491123619000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100250
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100250
*3
$5
LPUSH
$15
list:article:id
$6
100250
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100250
*4
$4
HSET
$22
hash:article:by:100121
$2
id
$6
100121
*4
$4
HSET
$22
hash:article:by:100121
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100121
$9
articleId
$4
2719
*4
$4
HSET
$22
hash:article:by:100121
$5
title
$46
redis学习记录(三)-redis中的数据结构
*4
$4
HSET
$22
hash:article:by:100121
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100121
$8
labelIds
$4
[98]
*4
$4
HSET
$22
hash:article:by:100121
$6
digest
$191
redis学习记录(三)-redis中的数据结构标签（空格分隔）： redis
  个人独立博客:http://mrdear.cn
Redis学习记录(一)–入门知识 
Redis学习记录(二)–使用...
*4
$4
HSET
$22
hash:article:by:100121
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100121
$7
content
$40
csdn/java/1_0_1_6_1504265323.288971.html
*4
$4
HSET
$22
hash:article:by:100121
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100121
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100121
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100121
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100121
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100121
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100121
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100121
$10
createTime
$13
1491123618000
*4
$4
HSET
$22
hash:article:by:100121
$11
releaseTime
$13
1491123618000
*4
$4
HSET
$22
hash:article:by:100121
$10
updateTime
$13
1491123618000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100121
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100121
*3
$5
LPUSH
$15
list:article:id
$6
100121
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100121
*4
$4
HSET
$22
hash:article:by:100119
$2
id
$6
100119
*4
$4
HSET
$22
hash:article:by:100119
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100119
$9
articleId
$4
2730
*4
$4
HSET
$22
hash:article:by:100119
$5
title
$60
Docker学习记录(三)-构建非跨平台项目编译环境
*4
$4
HSET
$22
hash:article:by:100119
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100119
$8
labelIds
$4
[92]
*4
$4
HSET
$22
hash:article:by:100119
$6
digest
$213
Docker学习记录(三)-构建非跨平台项目编译环境标签（空格分隔）： docker
  个人独立博客: http://mrdear.cn
因为毕业设计的问题所以去学了docker,本文描述这个问题解...
*4
$4
HSET
$22
hash:article:by:100119
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100119
$7
content
$41
csdn/java/1_0_1_10_1504265334.472737.html
*4
$4
HSET
$22
hash:article:by:100119
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100119
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100119
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100119
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100119
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100119
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100119
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100119
$10
createTime
$13
1491123614000
*4
$4
HSET
$22
hash:article:by:100119
$11
releaseTime
$13
1491123614000
*4
$4
HSET
$22
hash:article:by:100119
$10
updateTime
$13
1491123614000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100119
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100119
*3
$5
LPUSH
$15
list:article:id
$6
100119
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100119
*4
$4
HSET
$22
hash:article:by:100132
$2
id
$6
100132
*4
$4
HSET
$22
hash:article:by:100132
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100132
$9
articleId
$4
2714
*4
$4
HSET
$22
hash:article:by:100132
$5
title
$46
Docker学习记录(二)-Dockerfile创建镜像
*4
$4
HSET
$22
hash:article:by:100132
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100132
$8
labelIds
$4
[92]
*4
$4
HSET
$22
hash:article:by:100132
$6
digest
$185
Docker学习记录(二)-Dockerfile创建镜像标签（空格分隔）： docker
  个人独立博客: http://mrdear.cn
本文学习Dcokerfile的基本命令,并且创建一个支持...
*4
$4
HSET
$22
hash:article:by:100132
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100132
$7
content
$40
csdn/java/1_0_1_9_1504265318.328153.html
*4
$4
HSET
$22
hash:article:by:100132
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100132
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100132
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100132
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100132
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100132
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100132
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100132
$10
createTime
$13
1491123611000
*4
$4
HSET
$22
hash:article:by:100132
$11
releaseTime
$13
1491123611000
*4
$4
HSET
$22
hash:article:by:100132
$10
updateTime
$13
1491123611000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100132
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100132
*3
$5
LPUSH
$15
list:article:id
$6
100132
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100132
*4
$4
HSET
$22
hash:article:by:100117
$2
id
$6
100117
*4
$4
HSET
$22
hash:article:by:100117
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100117
$9
articleId
$4
2713
*4
$4
HSET
$22
hash:article:by:100117
$5
title
$36
Docker学习记录(一)-基本概念
*4
$4
HSET
$22
hash:article:by:100117
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100117
$8
labelIds
$7
[91,92]
*4
$4
HSET
$22
hash:article:by:100117
$6
digest
$211
Docker学习记录(一)-基本概念标签（空格分隔）： docker因为做的项目用到了docker,所以开始学习下这方面的知识.1.基本概念docker虚拟机:docker环境,docker的操作都要...
*4
$4
HSET
$22
hash:article:by:100117
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100117
$7
content
$40
csdn/java/1_0_1_8_1504265317.234873.html
*4
$4
HSET
$22
hash:article:by:100117
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100117
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100117
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100117
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100117
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100117
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100117
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100117
$10
createTime
$13
1491120055000
*4
$4
HSET
$22
hash:article:by:100117
$11
releaseTime
$13
1491120055000
*4
$4
HSET
$22
hash:article:by:100117
$10
updateTime
$13
1491120055000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100117
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100117
*3
$5
LPUSH
$15
list:article:id
$6
100117
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100117
*4
$4
HSET
$22
hash:article:by:100667
$2
id
$6
100667
*4
$4
HSET
$22
hash:article:by:100667
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100667
$9
articleId
$4
2636
*4
$4
HSET
$22
hash:article:by:100667
$5
title
$33
Java Web 基础 --- Filter 综述
*4
$4
HSET
$22
hash:article:by:100667
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100667
$8
labelIds
$21
[622,623,345,624,625]
*4
$4
HSET
$22
hash:article:by:100667
$6
digest
$253
伴随J2EE一起发布的Servlet规范中还包括一个重要的组件——过滤器，其主要用于对用户请求进的预处理以及对服务器响应的后处理，是个典型的处理链，并且Servlet规范使用了三个接口Filter，F...
*4
$4
HSET
$22
hash:article:by:100667
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100667
$7
content
$41
csdn/java/1_0_1_13_1504265182.327436.html
*4
$4
HSET
$22
hash:article:by:100667
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100667
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100667
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100667
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100667
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100667
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100667
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100667
$10
createTime
$13
1490950809000
*4
$4
HSET
$22
hash:article:by:100667
$11
releaseTime
$13
1490950809000
*4
$4
HSET
$22
hash:article:by:100667
$10
updateTime
$13
1490950809000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100667
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100667
*3
$5
LPUSH
$15
list:article:id
$6
100667
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100667
*4
$4
HSET
$22
hash:article:by:100761
$2
id
$6
100761
*4
$4
HSET
$22
hash:article:by:100761
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100761
$9
articleId
$4
2637
*4
$4
HSET
$22
hash:article:by:100761
$5
title
$54
责任链模式进阶：与AOP思想的融合与应用
*4
$4
HSET
$22
hash:article:by:100761
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100761
$8
labelIds
$21
[623,345,742,449,743]
*4
$4
HSET
$22
hash:article:by:100761
$6
digest
$261
AOP的理念可以很容易抽象出横切关注点，基于AOP理念我们可以将责任链模式中各具体处理角色中共同逻辑抽象出来并将其模块化以便提高代码复用率和系统可维护性。Java Web中的过滤器和Struts2中的...
*4
$4
HSET
$22
hash:article:by:100761
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100761
$7
content
$41
csdn/java/1_0_1_14_1504265183.415267.html
*4
$4
HSET
$22
hash:article:by:100761
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100761
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100761
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100761
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100761
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100761
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100761
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100761
$10
createTime
$13
1490893215000
*4
$4
HSET
$22
hash:article:by:100761
$11
releaseTime
$13
1490893215000
*4
$4
HSET
$22
hash:article:by:100761
$10
updateTime
$13
1490893215000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100761
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100761
*3
$5
LPUSH
$15
list:article:id
$6
100761
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100761
*4
$4
HSET
$22
hash:article:by:100081
$2
id
$6
100081
*4
$4
HSET
$22
hash:article:by:100081
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100081
$9
articleId
$4
2154
*4
$4
HSET
$22
hash:article:by:100081
$5
title
$37
Java设计模式之模板方法模式
*4
$4
HSET
$22
hash:article:by:100081
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100081
$8
labelIds
$7
[18,12]
*4
$4
HSET
$22
hash:article:by:100081
$6
digest
$247
模板方法概念的简单介绍:在抽象基类定义final修饰的方法封装算法骨架,并实现其中的共性的步骤,某些没有共性的步骤(可定义为protected或默认的abstract方法)延迟到子类实现,这样做可以在...
*4
$4
HSET
$22
hash:article:by:100081
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100081
$7
content
$40
csdn/java/1_0_1_1_1504264478.400955.html
*4
$4
HSET
$22
hash:article:by:100081
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100081
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100081
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100081
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100081
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100081
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100081
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100081
$10
createTime
$13
1490871647000
*4
$4
HSET
$22
hash:article:by:100081
$11
releaseTime
$13
1490871647000
*4
$4
HSET
$22
hash:article:by:100081
$10
updateTime
$13
1490871647000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100081
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100081
*3
$5
LPUSH
$15
list:article:id
$6
100081
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100081
*4
$4
HSET
$22
hash:article:by:100054
$2
id
$6
100054
*4
$4
HSET
$22
hash:article:by:100054
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100054
$9
articleId
$4
2158
*4
$4
HSET
$22
hash:article:by:100054
$5
title
$34
Java设计模式之责任链模式
*4
$4
HSET
$22
hash:article:by:100054
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100054
$8
labelIds
$7
[18,12]
*4
$4
HSET
$22
hash:article:by:100054
$6
digest
$259
比如我们去奔驰4S店买车,一般4S店都会有销售人员,经理,总监,老板这样的层级,消费者肯定希望买车能给予一定的折扣,比如5%,20%甚至50%等,消费者提出不同比例的折扣,销售员不一定能直接同意,这时...
*4
$4
HSET
$22
hash:article:by:100054
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100054
$7
content
$40
csdn/java/1_0_1_2_1504264482.456185.html
*4
$4
HSET
$22
hash:article:by:100054
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100054
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100054
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100054
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100054
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100054
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100054
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100054
$10
createTime
$13
1490781639000
*4
$4
HSET
$22
hash:article:by:100054
$11
releaseTime
$13
1490781639000
*4
$4
HSET
$22
hash:article:by:100054
$10
updateTime
$13
1490781639000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100054
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100054
*3
$5
LPUSH
$15
list:article:id
$6
100054
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100054
*4
$4
HSET
$22
hash:article:by:100062
$2
id
$6
100062
*4
$4
HSET
$22
hash:article:by:100062
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100062
$9
articleId
$4
2157
*4
$4
HSET
$22
hash:article:by:100062
$5
title
$34
Java设计模式之适配器模式
*4
$4
HSET
$22
hash:article:by:100062
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100062
$8
labelIds
$7
[18,12]
*4
$4
HSET
$22
hash:article:by:100062
$6
digest
$259
生活中适配的例子到处都是,比如说,国内居民用电是220伏,而给手机充电只需要5伏左右,那么将220伏转化为手机的5伏,就需要适配器进行降压处理,某某公司招聘Android开发,而作为应聘者需要制作一份...
*4
$4
HSET
$22
hash:article:by:100062
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100062
$7
content
$40
csdn/java/1_0_1_7_1504264481.325033.html
*4
$4
HSET
$22
hash:article:by:100062
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100062
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100062
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100062
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100062
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100062
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100062
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100062
$10
createTime
$13
1490684456000
*4
$4
HSET
$22
hash:article:by:100062
$11
releaseTime
$13
1490684456000
*4
$4
HSET
$22
hash:article:by:100062
$10
updateTime
$13
1490684456000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100062
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100062
*3
$5
LPUSH
$15
list:article:id
$6
100062
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100062
*4
$4
HSET
$22
hash:article:by:100061
$2
id
$6
100061
*4
$4
HSET
$22
hash:article:by:100061
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100061
$9
articleId
$4
2156
*4
$4
HSET
$22
hash:article:by:100061
$5
title
$31
Java设计模式之策略模式
*4
$4
HSET
$22
hash:article:by:100061
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100061
$8
labelIds
$7
[18,12]
*4
$4
HSET
$22
hash:article:by:100061
$6
digest
$293
策略模式的简单定义和生活例子:策略模式将可变的部分从程序中抽象分离成算法接口,在该接口下分别封装一系列算法实现并使他们可以相互替换,从而导致客户端程序独立于算法的改变生活中例子:网上购物,当进行支付页...
*4
$4
HSET
$22
hash:article:by:100061
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100061
$7
content
$40
csdn/java/1_0_1_6_1504264480.383006.html
*4
$4
HSET
$22
hash:article:by:100061
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100061
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100061
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100061
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100061
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100061
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100061
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100061
$10
createTime
$13
1490612407000
*4
$4
HSET
$22
hash:article:by:100061
$11
releaseTime
$13
1490612407000
*4
$4
HSET
$22
hash:article:by:100061
$10
updateTime
$13
1490612407000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100061
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100061
*3
$5
LPUSH
$15
list:article:id
$6
100061
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100061
*4
$4
HSET
$22
hash:article:by:100086
$2
id
$6
100086
*4
$4
HSET
$22
hash:article:by:100086
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100086
$9
articleId
$4
2410
*4
$4
HSET
$22
hash:article:by:100086
$5
title
$29
php,java实现责任链模式
*4
$4
HSET
$22
hash:article:by:100086
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100086
$8
labelIds
$7
[19,18]
*4
$4
HSET
$22
hash:article:by:100086
$6
digest
$287
当我们的请求根据不同的情况需要不同的处理者处理的时候，可以使用该模式，将多个处理者和请求者隔离，只暴露一个处理者，当满足处理条件时处理，不满足时将请求传递，类似于Android的事件分发机制。类图： ...
*4
$4
HSET
$22
hash:article:by:100086
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100086
$7
content
$41
csdn/java/1_0_1_11_1504264719.067131.html
*4
$4
HSET
$22
hash:article:by:100086
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100086
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100086
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100086
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100086
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100086
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100086
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100086
$10
createTime
$13
1490601629000
*4
$4
HSET
$22
hash:article:by:100086
$11
releaseTime
$13
1490601629000
*4
$4
HSET
$22
hash:article:by:100086
$10
updateTime
$13
1490601629000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100086
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100086
*3
$5
LPUSH
$15
list:article:id
$6
100086
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100086
*4
$4
HSET
$22
hash:article:by:100043
$2
id
$6
100043
*4
$4
HSET
$22
hash:article:by:100043
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100043
$9
articleId
$4
2155
*4
$4
HSET
$22
hash:article:by:100043
$5
title
$34
Java设计模式之观察者模式
*4
$4
HSET
$22
hash:article:by:100043
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100043
$8
labelIds
$7
[18,12]
*4
$4
HSET
$22
hash:article:by:100043
$6
digest
$183
观察者模式的简单定义:定义对象间的一种一对多的依赖关系,当一个对象的状态发生改变时,所以依赖于它的对象都得到通知并且被自动更新
*4
$4
HSET
$22
hash:article:by:100043
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100043
$7
content
$40
csdn/java/1_0_1_5_1504264479.380816.html
*4
$4
HSET
$22
hash:article:by:100043
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100043
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100043
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100043
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100043
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100043
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100043
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100043
$10
createTime
$13
1490533238000
*4
$4
HSET
$22
hash:article:by:100043
$11
releaseTime
$13
1490533238000
*4
$4
HSET
$22
hash:article:by:100043
$10
updateTime
$13
1490533238000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100043
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100043
*3
$5
LPUSH
$15
list:article:id
$6
100043
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100043
*4
$4
HSET
$22
hash:article:by:100089
$2
id
$6
100089
*4
$4
HSET
$22
hash:article:by:100089
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100089
$9
articleId
$4
2411
*4
$4
HSET
$22
hash:article:by:100089
$5
title
$31
php，java实现中介者模式
*4
$4
HSET
$22
hash:article:by:100089
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100089
$8
labelIds
$7
[18,19]
*4
$4
HSET
$22
hash:article:by:100089
$6
digest
$207
当多个对象之间产生网状的关系时，适合中介者模式，把多对多的依赖转化为只对中介者的依赖类图 
java实现中介者抽象类public abstract class AbsMediation {    pr...
*4
$4
HSET
$22
hash:article:by:100089
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100089
$7
content
$41
csdn/java/1_0_1_13_1504264720.089487.html
*4
$4
HSET
$22
hash:article:by:100089
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100089
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100089
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100089
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100089
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100089
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100089
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100089
$10
createTime
$13
1490454047000
*4
$4
HSET
$22
hash:article:by:100089
$11
releaseTime
$13
1490454047000
*4
$4
HSET
$22
hash:article:by:100089
$10
updateTime
$13
1490454047000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100089
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100089
*3
$5
LPUSH
$15
list:article:id
$6
100089
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100089
*4
$4
HSET
$22
hash:article:by:100049
$2
id
$6
100049
*4
$4
HSET
$22
hash:article:by:100049
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100049
$9
articleId
$4
2160
*4
$4
HSET
$22
hash:article:by:100049
$5
title
$31
Java设计模式之工厂模式
*4
$4
HSET
$22
hash:article:by:100049
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100049
$8
labelIds
$7
[18,12]
*4
$4
HSET
$22
hash:article:by:100049
$6
digest
$175
工厂模式的概念:实例化对象,用工厂方法代替new操作,工厂模式包括工厂方法模式和抽象工厂模式,抽象工厂模式是工厂方法模式的扩展
*4
$4
HSET
$22
hash:article:by:100049
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100049
$7
content
$40
csdn/java/1_0_1_4_1504264484.668021.html
*4
$4
HSET
$22
hash:article:by:100049
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100049
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100049
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100049
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100049
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100049
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100049
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100049
$10
createTime
$13
1490356854000
*4
$4
HSET
$22
hash:article:by:100049
$11
releaseTime
$13
1490356854000
*4
$4
HSET
$22
hash:article:by:100049
$10
updateTime
$13
1490356854000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100049
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100049
*3
$5
LPUSH
$15
list:article:id
$6
100049
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100049
*4
$4
HSET
$22
hash:article:by:100051
$2
id
$6
100051
*4
$4
HSET
$22
hash:article:by:100051
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100051
$9
articleId
$4
2413
*4
$4
HSET
$22
hash:article:by:100051
$5
title
$26
php,java实现原型模式
*4
$4
HSET
$22
hash:article:by:100051
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100051
$8
labelIds
$7
[18,19]
*4
$4
HSET
$22
hash:article:by:100051
$6
digest
$227
当我们要使用或者批量使用一个对象，他们完全相同，并且该对象的初始化过程十分复杂，可以使用该模式克隆出对个对象。类图 
java代码实现：public class Subject implements ...
*4
$4
HSET
$22
hash:article:by:100051
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100051
$7
content
$41
csdn/java/1_0_1_14_1504264721.048636.html
*4
$4
HSET
$22
hash:article:by:100051
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100051
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100051
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100051
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100051
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100051
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100051
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100051
$10
createTime
$13
1490346047000
*4
$4
HSET
$22
hash:article:by:100051
$11
releaseTime
$13
1490346047000
*4
$4
HSET
$22
hash:article:by:100051
$10
updateTime
$13
1490346047000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100051
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100051
*3
$5
LPUSH
$15
list:article:id
$6
100051
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100051
*4
$4
HSET
$22
hash:article:by:100047
$2
id
$6
100047
*4
$4
HSET
$22
hash:article:by:100047
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100047
$9
articleId
$4
2399
*4
$4
HSET
$22
hash:article:by:100047
$5
title
$26
php,java实现代理模式
*4
$4
HSET
$22
hash:article:by:100047
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100047
$8
labelIds
$4
[19]
*4
$4
HSET
$22
hash:article:by:100047
$6
digest
$215
普通代理模式类似于装饰者模式，将真实的实现逻辑的对象包装起来，外界通过访问其代理来调用真是的逻辑代码类图 
java代码实现public interface Subject {    public v...
*4
$4
HSET
$22
hash:article:by:100047
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100047
$7
content
$41
csdn/java/1_0_1_15_1504264712.009188.html
*4
$4
HSET
$22
hash:article:by:100047
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100047
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100047
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100047
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100047
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100047
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100047
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100047
$10
createTime
$13
1490266846000
*4
$4
HSET
$22
hash:article:by:100047
$11
releaseTime
$13
1490266846000
*4
$4
HSET
$22
hash:article:by:100047
$10
updateTime
$13
1490266846000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100047
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100047
*3
$5
LPUSH
$15
list:article:id
$6
100047
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100047
*4
$4
HSET
$22
hash:article:by:100044
$2
id
$6
100044
*4
$4
HSET
$22
hash:article:by:100044
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100044
$9
articleId
$4
2400
*4
$4
HSET
$22
hash:article:by:100044
$5
title
$29
php,java实现建造者模式
*4
$4
HSET
$22
hash:article:by:100044
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100044
$8
labelIds
$7
[19,18]
*4
$4
HSET
$22
hash:article:by:100044
$6
digest
$303
很容易将建造者模式和工厂方法模式混淆，他们的区别是工厂方法模式侧重生产出相同的对象实例，而建造者模式强调的是对同一个对象实例的生产，不同的生产工艺（方法的执行顺序和对属性的赋值）将产生不同效果的对象类...
*4
$4
HSET
$22
hash:article:by:100044
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100044
$7
content
$40
csdn/java/1_0_1_16_1504264712.97503.html
*4
$4
HSET
$22
hash:article:by:100044
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100044
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100044
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100044
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100044
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100044
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100044
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100044
$10
createTime
$13
1490086854000
*4
$4
HSET
$22
hash:article:by:100044
$11
releaseTime
$13
1490086854000
*4
$4
HSET
$22
hash:article:by:100044
$10
updateTime
$13
1490086854000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100044
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100044
*3
$5
LPUSH
$15
list:article:id
$6
100044
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100044
*4
$4
HSET
$22
hash:article:by:100045
$2
id
$6
100045
*4
$4
HSET
$22
hash:article:by:100045
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100045
$9
articleId
$4
2404
*4
$4
HSET
$22
hash:article:by:100045
$5
title
$34
php，java实现抽象工厂模式
*4
$4
HSET
$22
hash:article:by:100045
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100045
$8
labelIds
$4
[12]
*4
$4
HSET
$22
hash:article:by:100045
$6
digest
$303
概念理解抽象工厂模式：生产出不同业务品种的不同业务分类，强调的是每个不同品种下的分类，而他的生产类中是按照业务分类来区别的，就像《设计模式之禅》举的例子，有奔驰车和宝马车，这个车强调的就是业务品种，要...
*4
$4
HSET
$22
hash:article:by:100045
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100045
$7
content
$41
csdn/java/1_0_1_18_1504264715.849239.html
*4
$4
HSET
$22
hash:article:by:100045
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100045
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100045
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100045
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100045
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100045
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100045
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100045
$10
createTime
$13
1489914048000
*4
$4
HSET
$22
hash:article:by:100045
$11
releaseTime
$13
1489914048000
*4
$4
HSET
$22
hash:article:by:100045
$10
updateTime
$13
1489914048000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100045
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100045
*3
$5
LPUSH
$15
list:article:id
$6
100045
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100045
*4
$4
HSET
$22
hash:article:by:100068
$2
id
$6
100068
*4
$4
HSET
$22
hash:article:by:100068
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100068
$9
articleId
$4
2159
*4
$4
HSET
$22
hash:article:by:100068
$5
title
$31
Java代理模式和动态代理
*4
$4
HSET
$22
hash:article:by:100068
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100068
$8
labelIds
$10
[18,39,40]
*4
$4
HSET
$22
hash:article:by:100068
$6
digest
$293
代理模式和动态代理的简单介绍首先看看代理模式的概念及分类:代理模式就是为其他对象提供一种代理以控制对这个对象的访问,代理对象起到中介的作用,可以去掉功能服务或怎么额外的服务代理模式的分类:远程代理,智...
*4
$4
HSET
$22
hash:article:by:100068
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100068
$7
content
$40
csdn/java/1_0_1_3_1504264483.809119.html
*4
$4
HSET
$22
hash:article:by:100068
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100068
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100068
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100068
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100068
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100068
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100068
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100068
$10
createTime
$13
1489856426000
*4
$4
HSET
$22
hash:article:by:100068
$11
releaseTime
$13
1489856426000
*4
$4
HSET
$22
hash:article:by:100068
$10
updateTime
$13
1489856426000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100068
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100068
*3
$5
LPUSH
$15
list:article:id
$6
100068
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100068
*4
$4
HSET
$22
hash:article:by:100717
$2
id
$6
100717
*4
$4
HSET
$22
hash:article:by:100717
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100717
$9
articleId
$4
2651
*4
$4
HSET
$22
hash:article:by:100717
$5
title
$44
Java Web基础 --- Servlet 综述(理论篇)
*4
$4
HSET
$22
hash:article:by:100717
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100717
$8
labelIds
$21
[683,684,685,686,306]
*4
$4
HSET
$22
hash:article:by:100717
$6
digest
$229
Web 技术成为当今主流的互联网Web应用技术之一，而Servlet是Java Web技术的核心基础。本文首先从请求/响应架构应用的大背景谈起Servlet的由来，明确Servlet的产生动机，揭示了...
*4
$4
HSET
$22
hash:article:by:100717
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100717
$7
content
$40
csdn/java/1_0_2_3_1504265198.755073.html
*4
$4
HSET
$22
hash:article:by:100717
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100717
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100717
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100717
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100717
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100717
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100717
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100717
$10
createTime
$13
1489082409000
*4
$4
HSET
$22
hash:article:by:100717
$11
releaseTime
$13
1489082409000
*4
$4
HSET
$22
hash:article:by:100717
$10
updateTime
$13
1489082409000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100717
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100717
*3
$5
LPUSH
$15
list:article:id
$6
100717
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100717
*4
$4
HSET
$22
hash:article:by:100541
$2
id
$6
100541
*4
$4
HSET
$22
hash:article:by:100541
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100541
$9
articleId
$4
2650
*4
$4
HSET
$22
hash:article:by:100541
$5
title
$44
Java Web基础 --- Servlet 综述(实践篇)
*4
$4
HSET
$22
hash:article:by:100541
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100541
$8
labelIds
$21
[499,500,501,502,503]
*4
$4
HSET
$22
hash:article:by:100541
$6
digest
$219
摘要：　　伴随 J2EE 6一起发布的Servlet 3.0规范是Servlet规范历史上最重要的变革之一，它的许多新的特性都极大的简化了 Java Web 应用的开发。本文从一个简单的 Servle...
*4
$4
HSET
$22
hash:article:by:100541
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100541
$7
content
$40
csdn/java/1_0_2_2_1504265197.751627.html
*4
$4
HSET
$22
hash:article:by:100541
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100541
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100541
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100541
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100541
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100541
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100541
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100541
$10
createTime
$13
1489082400000
*4
$4
HSET
$22
hash:article:by:100541
$11
releaseTime
$13
1489082400000
*4
$4
HSET
$22
hash:article:by:100541
$10
updateTime
$13
1489082400000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100541
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100541
*3
$5
LPUSH
$15
list:article:id
$6
100541
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100541
*4
$4
HSET
$22
hash:article:by:100753
$2
id
$6
100753
*4
$4
HSET
$22
hash:article:by:100753
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100753
$9
articleId
$4
2293
*4
$4
HSET
$22
hash:article:by:100753
$5
title
$75
Android 使用Java8新特性之Lambda expression (附命令者模式简化)
*4
$4
HSET
$22
hash:article:by:100753
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100753
$8
labelIds
$13
[287,732,733]
*4
$4
HSET
$22
hash:article:by:100753
$6
digest
$211
前言Lambda expression，java8的新特性。使用Lambda expression，可以替代只有一个函数的接口实现，告别匿名内部类，代码看起来更简洁易懂。 
java8还有其它一些新特...
*4
$4
HSET
$22
hash:article:by:100753
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100753
$7
content
$40
csdn/java/1_0_2_6_1504264607.985195.html
*4
$4
HSET
$22
hash:article:by:100753
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100753
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100753
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100753
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100753
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100753
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100753
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100753
$10
createTime
$13
1488988855000
*4
$4
HSET
$22
hash:article:by:100753
$11
releaseTime
$13
1488988855000
*4
$4
HSET
$22
hash:article:by:100753
$10
updateTime
$13
1488988855000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100753
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100753
*3
$5
LPUSH
$15
list:article:id
$6
100753
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100753
*4
$4
HSET
$22
hash:article:by:100220
$2
id
$6
100220
*4
$4
HSET
$22
hash:article:by:100220
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100220
$9
articleId
$4
2538
*4
$4
HSET
$22
hash:article:by:100220
$5
title
$31
JAVA SDK 极光推送后台DEMO
*4
$4
HSET
$22
hash:article:by:100220
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100220
$8
labelIds
$8
[199,18]
*4
$4
HSET
$22
hash:article:by:100220
$6
digest
$92
pom导依赖 
        1.1.1
       
       
            cn.jpush.api
            jpush-clien
*4
$4
HSET
$22
hash:article:by:100220
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100220
$7
content
$41
csdn/java/1_1_1_12_1504264895.589071.html
*4
$4
HSET
$22
hash:article:by:100220
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100220
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100220
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100220
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100220
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100220
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100220
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100220
$10
createTime
$13
1488286843000
*4
$4
HSET
$22
hash:article:by:100220
$11
releaseTime
$13
1488286843000
*4
$4
HSET
$22
hash:article:by:100220
$10
updateTime
$13
1488286843000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100220
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100220
*3
$5
LPUSH
$15
list:article:id
$6
100220
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100220
*4
$4
HSET
$22
hash:article:by:100665
$2
id
$6
100665
*4
$4
HSET
$22
hash:article:by:100665
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100665
$9
articleId
$4
2649
*4
$4
HSET
$22
hash:article:by:100665
$5
title
$44
JSP中文乱码问题终极解决方案(上)
*4
$4
HSET
$22
hash:article:by:100665
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100665
$8
labelIds
$21
[618,619,620,510,621]
*4
$4
HSET
$22
hash:article:by:100665
$6
digest
$275
本文首先介绍了一个JSP的源文件执行过程，即需要经过三个阶段，两次编码，才能完成一次完整的输出。特别需要注意的是，在这个过程中，编码问题贯穿始终。在JSP/Servlet中，主要有以下四种方式可以设置...
*4
$4
HSET
$22
hash:article:by:100665
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100665
$7
content
$40
csdn/java/1_0_2_1_1504265196.738196.html
*4
$4
HSET
$22
hash:article:by:100665
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100665
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100665
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100665
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100665
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100665
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100665
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100665
$10
createTime
$13
1488196803000
*4
$4
HSET
$22
hash:article:by:100665
$11
releaseTime
$13
1488196803000
*4
$4
HSET
$22
hash:article:by:100665
$10
updateTime
$13
1488196803000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100665
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100665
*3
$5
LPUSH
$15
list:article:id
$6
100665
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100665
*4
$4
HSET
$22
hash:article:by:100543
$2
id
$6
100543
*4
$4
HSET
$22
hash:article:by:100543
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100543
$9
articleId
$4
2648
*4
$4
HSET
$22
hash:article:by:100543
$5
title
$69
使用 URLDecoder 和 URLEncoder 对中文字符进行编码和解码
*4
$4
HSET
$22
hash:article:by:100543
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100543
$8
labelIds
$21
[506,507,508,509,510]
*4
$4
HSET
$22
hash:article:by:100543
$6
digest
$167
URLDecoder 和 URLEncoder 用于完成普通字符串 和 application/x-www-form-urlencoded MIME 字符串之间的相互转换。在本文中，我们以使用URLD...
*4
$4
HSET
$22
hash:article:by:100543
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100543
$7
content
$40
csdn/java/1_0_2_0_1504265195.748848.html
*4
$4
HSET
$22
hash:article:by:100543
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100543
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100543
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100543
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100543
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100543
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100543
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100543
$10
createTime
$13
1488063617000
*4
$4
HSET
$22
hash:article:by:100543
$11
releaseTime
$13
1488063617000
*4
$4
HSET
$22
hash:article:by:100543
$10
updateTime
$13
1488063617000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100543
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100543
*3
$5
LPUSH
$15
list:article:id
$6
100543
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100543
*4
$4
HSET
$22
hash:article:by:100762
$2
id
$6
100762
*4
$4
HSET
$22
hash:article:by:100762
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100762
$9
articleId
$4
2647
*4
$4
HSET
$22
hash:article:by:100762
$5
title
$34
Java Web基础 --- Jsp 综述(下)
*4
$4
HSET
$22
hash:article:by:100762
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100762
$8
labelIds
$21
[744,745,247,746,747]
*4
$4
HSET
$22
hash:article:by:100762
$6
digest
$255
JSP脚本中包含九个内置对象，它们都是Servlet-API接口的实例，并且JSP规范对它们进行了默认初始化。本文首先通过一个JSP实例来认识JSP内置对象的实质，紧接着以基于请求/响应架构应用的运行...
*4
$4
HSET
$22
hash:article:by:100762
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100762
$7
content
$41
csdn/java/1_0_1_19_1504265193.763499.html
*4
$4
HSET
$22
hash:article:by:100762
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100762
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100762
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100762
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100762
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100762
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100762
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100762
$10
createTime
$13
1488063613000
*4
$4
HSET
$22
hash:article:by:100762
$11
releaseTime
$13
1488063613000
*4
$4
HSET
$22
hash:article:by:100762
$10
updateTime
$13
1488063613000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100762
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100762
*3
$5
LPUSH
$15
list:article:id
$6
100762
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100762
*4
$4
HSET
$22
hash:article:by:100610
$2
id
$6
100610
*4
$4
HSET
$22
hash:article:by:100610
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100610
$9
articleId
$4
2053
*4
$4
HSET
$22
hash:article:by:100610
$5
title
$15
迭代器模式
*4
$4
HSET
$22
hash:article:by:100610
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100610
$8
labelIds
$19
[54,12,565,566,567]
*4
$4
HSET
$22
hash:article:by:100610
$6
digest
$181
迭代器模式: 提供一种方法顺序访问聚合对象(如List、Set)内的每个元素, 而又不暴露聚合对象的内部实现. 
   
- 可复用面向对象软件的基础
*4
$4
HSET
$22
hash:article:by:100610
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100610
$7
content
$40
csdn/java/1_0_1_0_1504264402.417503.html
*4
$4
HSET
$22
hash:article:by:100610
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100610
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100610
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100610
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100610
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100610
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100610
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100610
$10
createTime
$13
1487854820000
*4
$4
HSET
$22
hash:article:by:100610
$11
releaseTime
$13
1487854820000
*4
$4
HSET
$22
hash:article:by:100610
$10
updateTime
$13
1487854820000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100610
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100610
*3
$5
LPUSH
$15
list:article:id
$6
100610
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100610
*4
$4
HSET
$22
hash:article:by:100706
$2
id
$6
100706
*4
$4
HSET
$22
hash:article:by:100706
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100706
$9
articleId
$4
2632
*4
$4
HSET
$22
hash:article:by:100706
$5
title
$44
JSP中文乱码问题终极解决方案(下)
*4
$4
HSET
$22
hash:article:by:100706
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100706
$8
labelIds
$21
[668,669,670,671,672]
*4
$4
HSET
$22
hash:article:by:100706
$6
digest
$263
本文首先从四个方面给出了在使用JSP过程中可能出现中文乱码的情形，具体包括JSP页面中文乱码、JSP源文件中文乱码、GET 请求的请求参数为中文乱码 和 POST 请求的请求参数为中文乱码四种情形，并...
*4
$4
HSET
$22
hash:article:by:100706
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100706
$7
content
$41
csdn/java/1_0_1_18_1504265178.349719.html
*4
$4
HSET
$22
hash:article:by:100706
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100706
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100706
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100706
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100706
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100706
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100706
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100706
$10
createTime
$13
1487541642000
*4
$4
HSET
$22
hash:article:by:100706
$11
releaseTime
$13
1487541642000
*4
$4
HSET
$22
hash:article:by:100706
$10
updateTime
$13
1487541642000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100706
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100706
*3
$5
LPUSH
$15
list:article:id
$6
100706
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100706
*4
$4
HSET
$22
hash:article:by:100745
$2
id
$6
100745
*4
$4
HSET
$22
hash:article:by:100745
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100745
$9
articleId
$4
2631
*4
$4
HSET
$22
hash:article:by:100745
$5
title
$34
Java Web基础 --- Jsp 综述(上)
*4
$4
HSET
$22
hash:article:by:100745
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100745
$8
labelIds
$21
[721,722,723,724,725]
*4
$4
HSET
$22
hash:article:by:100745
$6
digest
$225
Servlet/Jsp是J2EE规范的一部分，是Tomcat的主要实现部分。当用户发送请求时，Servlet利用输出流动态生成HTML，这导致其开发效率极为低下。JSP技术通过实现普通静态HTML和动...
*4
$4
HSET
$22
hash:article:by:100745
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100745
$7
content
$41
csdn/java/1_0_1_17_1504265177.400789.html
*4
$4
HSET
$22
hash:article:by:100745
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100745
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100745
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100745
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100745
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100745
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100745
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100745
$10
createTime
$13
1487541614000
*4
$4
HSET
$22
hash:article:by:100745
$11
releaseTime
$13
1487541614000
*4
$4
HSET
$22
hash:article:by:100745
$10
updateTime
$13
1487541614000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100745
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100745
*3
$5
LPUSH
$15
list:article:id
$6
100745
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100745
*4
$4
HSET
$22
hash:article:by:100696
$2
id
$6
100696
*4
$4
HSET
$22
hash:article:by:100696
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100696
$9
articleId
$4
2071
*4
$4
HSET
$22
hash:article:by:100696
$5
title
$15
备忘录模式
*4
$4
HSET
$22
hash:article:by:100696
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100696
$8
labelIds
$20
[12,290,652,653,654]
*4
$4
HSET
$22
hash:article:by:100696
$6
digest
$253
备忘录模式标签 ： Java与设计模式
  备忘录模式: 在不破坏封装性的前提下, 捕获一个对象的内部状态( or 拷贝), 并在该对象之外保存这个状态, 这样以后就可 将该对象恢复到原先保存的状态....
*4
$4
HSET
$22
hash:article:by:100696
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100696
$7
content
$40
csdn/java/1_0_1_1_1504264414.643844.html
*4
$4
HSET
$22
hash:article:by:100696
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100696
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100696
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100696
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100696
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100696
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100696
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100696
$10
createTime
$13
1487340034000
*4
$4
HSET
$22
hash:article:by:100696
$11
releaseTime
$13
1487340034000
*4
$4
HSET
$22
hash:article:by:100696
$10
updateTime
$13
1487340034000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100696
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100696
*3
$5
LPUSH
$15
list:article:id
$6
100696
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100696
*4
$4
HSET
$22
hash:article:by:100092
$2
id
$6
100092
*4
$4
HSET
$22
hash:article:by:100092
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100092
$9
articleId
$4
2597
*4
$4
HSET
$22
hash:article:by:100092
$5
title
$39
javaEE防盗版-class文件加密思路
*4
$4
HSET
$22
hash:article:by:100092
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100092
$8
labelIds
$7
[64,65]
*4
$4
HSET
$22
hash:article:by:100092
$6
digest
$47
本文介绍class文件加密技术的思路。
*4
$4
HSET
$22
hash:article:by:100092
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100092
$7
content
$40
csdn/java/1_0_1_4_1504265072.782587.html
*4
$4
HSET
$22
hash:article:by:100092
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100092
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100092
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100092
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100092
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100092
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100092
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100092
$10
createTime
$13
1487023239000
*4
$4
HSET
$22
hash:article:by:100092
$11
releaseTime
$13
1487023239000
*4
$4
HSET
$22
hash:article:by:100092
$10
updateTime
$13
1487023239000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100092
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100092
*3
$5
LPUSH
$15
list:article:id
$6
100092
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100092
*4
$4
HSET
$22
hash:article:by:100724
$2
id
$6
100724
*4
$4
HSET
$22
hash:article:by:100724
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100724
$9
articleId
$4
2596
*4
$4
HSET
$22
hash:article:by:100724
$5
title
$29
javaEE防盗版-License开发
*4
$4
HSET
$22
hash:article:by:100724
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100724
$8
labelIds
$8
[697,64]
*4
$4
HSET
$22
hash:article:by:100724
$6
digest
$33
介绍java license的基本使用
*4
$4
HSET
$22
hash:article:by:100724
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100724
$7
content
$40
csdn/java/1_0_1_3_1504265070.943946.html
*4
$4
HSET
$22
hash:article:by:100724
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100724
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100724
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100724
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100724
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100724
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100724
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100724
$10
createTime
$13
1487023222000
*4
$4
HSET
$22
hash:article:by:100724
$11
releaseTime
$13
1487023222000
*4
$4
HSET
$22
hash:article:by:100724
$10
updateTime
$13
1487023222000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100724
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100724
*3
$5
LPUSH
$15
list:article:id
$6
100724
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100724
*4
$4
HSET
$22
hash:article:by:100527
$2
id
$6
100527
*4
$4
HSET
$22
hash:article:by:100527
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100527
$9
articleId
$4
2633
*4
$4
HSET
$22
hash:article:by:100527
$5
title
$56
Struts2 实战：从 登录Demo 看 Struts2 应用开发
*4
$4
HSET
$22
hash:article:by:100527
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100527
$8
labelIds
$21
[484,485,426,486,487]
*4
$4
HSET
$22
hash:article:by:100527
$6
digest
$221
作为 Struts2 的首篇文章，本文首先以登录Demo为例介绍了创建一个简单的 Struts2 应用的一般步骤和流程，紧接着以该 Demo 为出发点概述了 Struts2 的运行机制，揭示了 Str...
*4
$4
HSET
$22
hash:article:by:100527
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100527
$7
content
$41
csdn/java/1_0_1_15_1504265179.676994.html
*4
$4
HSET
$22
hash:article:by:100527
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100527
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100527
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100527
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100527
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100527
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100527
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100527
$10
createTime
$13
1486915219000
*4
$4
HSET
$22
hash:article:by:100527
$11
releaseTime
$13
1486915219000
*4
$4
HSET
$22
hash:article:by:100527
$10
updateTime
$13
1486915219000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100527
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100527
*3
$5
LPUSH
$15
list:article:id
$6
100527
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100527
*4
$4
HSET
$22
hash:article:by:100346
$2
id
$6
100346
*4
$4
HSET
$22
hash:article:by:100346
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100346
$9
articleId
$4
2627
*4
$4
HSET
$22
hash:article:by:100346
$5
title
$35
JavaWeb开发模式1：JSP+JavaBean
*4
$4
HSET
$22
hash:article:by:100346
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100346
$8
labelIds
$11
[37,74,348]
*4
$4
HSET
$22
hash:article:by:100346
$6
digest
$259
看了几天web开发，说一下体会吧：
开发分层：界面层（View）业务逻辑层，数据库层，但是单纯的JSP开发是将这个三层混在一起了，使得代码的维护性太差，如何解决？
分层，JavaBean封装业务逻...
*4
$4
HSET
$22
hash:article:by:100346
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100346
$7
content
$40
csdn/java/1_0_1_2_1504265133.282985.html
*4
$4
HSET
$22
hash:article:by:100346
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100346
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100346
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100346
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100346
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100346
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100346
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100346
$10
createTime
$13
1485460826000
*4
$4
HSET
$22
hash:article:by:100346
$11
releaseTime
$13
1485460826000
*4
$4
HSET
$22
hash:article:by:100346
$10
updateTime
$13
1485460826000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100346
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100346
*3
$5
LPUSH
$15
list:article:id
$6
100346
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100346
*4
$4
HSET
$22
hash:article:by:100341
$2
id
$6
100341
*4
$4
HSET
$22
hash:article:by:100341
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100341
$9
articleId
$4
2626
*4
$4
HSET
$22
hash:article:by:100341
$5
title
$8
JavaBean
*4
$4
HSET
$22
hash:article:by:100341
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100341
$8
labelIds
$4
[37]
*4
$4
HSET
$22
hash:article:by:100341
$6
digest
$229
一,JavaBean是什么
JavaBean 是一种JAVA语言写成的可重用组件。本质上是一组具有特殊规范的公共类。

为写成JavaBean，类必须是具体的和公共的，并且具有无参数的构造器。Java...
*4
$4
HSET
$22
hash:article:by:100341
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100341
$7
content
$40
csdn/java/1_0_1_1_1504265132.494839.html
*4
$4
HSET
$22
hash:article:by:100341
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100341
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100341
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100341
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100341
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100341
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100341
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100341
$10
createTime
$13
1485460804000
*4
$4
HSET
$22
hash:article:by:100341
$11
releaseTime
$13
1485460804000
*4
$4
HSET
$22
hash:article:by:100341
$10
updateTime
$13
1485460804000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100341
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100341
*3
$5
LPUSH
$15
list:article:id
$6
100341
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100341
*4
$4
HSET
$22
hash:article:by:100066
$2
id
$6
100066
*4
$4
HSET
$22
hash:article:by:100066
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100066
$9
articleId
$4
2625
*4
$4
HSET
$22
hash:article:by:100066
$5
title
$30
提交表单--get与post方式
*4
$4
HSET
$22
hash:article:by:100066
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100066
$8
labelIds
$7
[37,38]
*4
$4
HSET
$22
hash:article:by:100066
$6
digest
$248
我们经常在网页上输入信息，然后通过按钮提交，有两种提交方式，get和post
get方式效率高但安全性低，post是封装后进行提交安全性高。
get方式经常用于搜索，查询   post常用与用户注...
*4
$4
HSET
$22
hash:article:by:100066
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100066
$7
content
$40
csdn/java/1_0_1_0_1504265131.510718.html
*4
$4
HSET
$22
hash:article:by:100066
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100066
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100066
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100066
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100066
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100066
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100066
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100066
$10
createTime
$13
1485442849000
*4
$4
HSET
$22
hash:article:by:100066
$11
releaseTime
$13
1485442849000
*4
$4
HSET
$22
hash:article:by:100066
$10
updateTime
$13
1485442849000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100066
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100066
*3
$5
LPUSH
$15
list:article:id
$6
100066
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100066
*4
$4
HSET
$22
hash:article:by:100357
$2
id
$6
100357
*4
$4
HSET
$22
hash:article:by:100357
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100357
$9
articleId
$4
2600
*4
$4
HSET
$22
hash:article:by:100357
$5
title
$42
给我一张名片——工厂方法模式
*4
$4
HSET
$22
hash:article:by:100357
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100357
$8
labelIds
$11
[12,69,356]
*4
$4
HSET
$22
hash:article:by:100357
$6
digest
$269
工厂方法模式（Factory Method）:通过对产品类的抽象使其创建业务主要负责用于创建多类产品的实例。广告是一个公司主要的一个经济来源，这不，很多企业等着要来公司首页打广告呢。广告展现“小白, ...
*4
$4
HSET
$22
hash:article:by:100357
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100357
$7
content
$40
csdn/java/1_0_1_0_1504265076.062304.html
*4
$4
HSET
$22
hash:article:by:100357
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100357
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100357
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100357
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100357
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100357
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100357
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100357
$10
createTime
$13
1485342039000
*4
$4
HSET
$22
hash:article:by:100357
$11
releaseTime
$13
1485342039000
*4
$4
HSET
$22
hash:article:by:100357
$10
updateTime
$13
1485342039000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100357
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100357
*3
$5
LPUSH
$15
list:article:id
$6
100357
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100357
*4
$4
HSET
$22
hash:article:by:100097
$2
id
$6
100097
*4
$4
HSET
$22
hash:article:by:100097
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100097
$9
articleId
$4
2595
*4
$4
HSET
$22
hash:article:by:100097
$5
title
$22
javaEE防盗版-前言
*4
$4
HSET
$22
hash:article:by:100097
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100097
$8
labelIds
$10
[72,73,74]
*4
$4
HSET
$22
hash:article:by:100097
$6
digest
$275
本专栏主要是提供一个思路，用于设计javaWeb项目的防盗版技术（针对付费产品的防盗版）。研究背景在于没有一家公司愿意将自己的产品项目被目标客户破解使用，造成研发公司的重大产品损失。
        ...
*4
$4
HSET
$22
hash:article:by:100097
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100097
$7
content
$40
csdn/java/1_0_1_0_1504265069.687502.html
*4
$4
HSET
$22
hash:article:by:100097
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100097
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100097
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100097
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100097
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100097
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100097
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100097
$10
createTime
$13
1484910055000
*4
$4
HSET
$22
hash:article:by:100097
$11
releaseTime
$13
1484910055000
*4
$4
HSET
$22
hash:article:by:100097
$10
updateTime
$13
1484910055000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100097
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100097
*3
$5
LPUSH
$15
list:article:id
$6
100097
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100097
*4
$4
HSET
$22
hash:article:by:100103
$2
id
$6
100103
*4
$4
HSET
$22
hash:article:by:100103
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100103
$9
articleId
$4
2598
*4
$4
HSET
$22
hash:article:by:100103
$5
title
$32
javaEE防盗版-java之类加载
*4
$4
HSET
$22
hash:article:by:100103
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100103
$8
labelIds
$4
[46]
*4
$4
HSET
$22
hash:article:by:100103
$6
digest
$267
前言
        类加载技术是java运行的核心部分之一，虽然对于开发来说运用到此技术的地方不多，但是作为JAVAEE防盗版技术的组成部分之一，这一部分对于研发来说也需要着重了解。
本文分析对象针...
*4
$4
HSET
$22
hash:article:by:100103
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100103
$7
content
$39
csdn/java/1_0_1_1_1504265073.71474.html
*4
$4
HSET
$22
hash:article:by:100103
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100103
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100103
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100103
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100103
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100103
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100103
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100103
$10
createTime
$13
1484744453000
*4
$4
HSET
$22
hash:article:by:100103
$11
releaseTime
$13
1484744453000
*4
$4
HSET
$22
hash:article:by:100103
$10
updateTime
$13
1484744453000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100103
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100103
*3
$5
LPUSH
$15
list:article:id
$6
100103
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100103
*4
$4
HSET
$22
hash:article:by:100099
$2
id
$6
100099
*4
$4
HSET
$22
hash:article:by:100099
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100099
$9
articleId
$4
2103
*4
$4
HSET
$22
hash:article:by:100099
$5
title
$70
接口型设计模式（Interface patterns）之adapter（适配器）
*4
$4
HSET
$22
hash:article:by:100099
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100099
$8
labelIds
$7
[76,77]
*4
$4
HSET
$22
hash:article:by:100099
$6
digest
$133
接口型设计模式（Interface patterns）之adapter（适配器）


The intent of
ADAPTER is to provide the interface that a ...
*4
$4
HSET
$22
hash:article:by:100099
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100099
$7
content
$40
csdn/java/1_0_1_1_1504264442.335647.html
*4
$4
HSET
$22
hash:article:by:100099
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100099
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100099
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100099
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100099
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100099
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100099
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100099
$10
createTime
$13
1483894844000
*4
$4
HSET
$22
hash:article:by:100099
$11
releaseTime
$13
1483894844000
*4
$4
HSET
$22
hash:article:by:100099
$10
updateTime
$13
1483894844000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100099
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100099
*3
$5
LPUSH
$15
list:article:id
$6
100099
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100099
*4
$4
HSET
$22
hash:article:by:100106
$2
id
$6
100106
*4
$4
HSET
$22
hash:article:by:100106
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100106
$9
articleId
$4
2105
*4
$4
HSET
$22
hash:article:by:100106
$5
title
$46
接口型设计模式（Interface  patterns）
*4
$4
HSET
$22
hash:article:by:100106
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100106
$8
labelIds
$4
[12]
*4
$4
HSET
$22
hash:article:by:100106
$6
digest
$122
接口型设计模式（Interface  patterns）
Interface-oriented patterns address contexts in which you need to defin...
*4
$4
HSET
$22
hash:article:by:100106
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100106
$7
content
$40
csdn/java/1_0_1_2_1504264443.454268.html
*4
$4
HSET
$22
hash:article:by:100106
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100106
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100106
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100106
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100106
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100106
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100106
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100106
$10
createTime
$13
1483887627000
*4
$4
HSET
$22
hash:article:by:100106
$11
releaseTime
$13
1483887627000
*4
$4
HSET
$22
hash:article:by:100106
$10
updateTime
$13
1483887627000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100106
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100106
*3
$5
LPUSH
$15
list:article:id
$6
100106
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100106
*4
$4
HSET
$22
hash:article:by:100625
$2
id
$6
100625
*4
$4
HSET
$22
hash:article:by:100625
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100625
$9
articleId
$4
2021
*4
$4
HSET
$22
hash:article:by:100625
$5
title
$46
RedisCluser(v-3.2.0)与Tomcat7的Session整合
*4
$4
HSET
$22
hash:article:by:100625
$10
categoryId
$1
7
*4
$4
HSET
$22
hash:article:by:100625
$8
labelIds
$12
[579,580,56]
*4
$4
HSET
$22
hash:article:by:100625
$6
digest
$227
一般情况下,一个web系统的架构是类似这样的:
一个或多个nginx做负载均衡,后面连多个tomcat(或别的类型的web服务器)。
nginx做负载的时候,关于request的分流,至少就有两种策略...
*4
$4
HSET
$22
hash:article:by:100625
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100625
$7
content
$41
csdn/redis/1_0_1_0_1504263693.227526.html
*4
$4
HSET
$22
hash:article:by:100625
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100625
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100625
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100625
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100625
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100625
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100625
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100625
$10
createTime
$13
1482879639000
*4
$4
HSET
$22
hash:article:by:100625
$11
releaseTime
$13
1482879639000
*4
$4
HSET
$22
hash:article:by:100625
$10
updateTime
$13
1482879639000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100625
*4
$4
ZADD
$28
zset:article:category:read:7
$3
0.0
$6
100625
*3
$5
LPUSH
$15
list:article:id
$6
100625
*3
$5
LPUSH
$29
list:article:by:category:id:7
$6
100625
*4
$4
HSET
$22
hash:article:by:100072
$2
id
$6
100072
*4
$4
HSET
$22
hash:article:by:100072
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100072
$9
articleId
$4
2536
*4
$4
HSET
$22
hash:article:by:100072
$5
title
$63
封装通用分页工具，通过反射指定具体的实现类
*4
$4
HSET
$22
hash:article:by:100072
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100072
$8
labelIds
$7
[44,45]
*4
$4
HSET
$22
hash:article:by:100072
$6
digest
$117
分页具体实现类
import java.util.ArrayList;
import java.util.List;public class NavPageInfo {
    private sta...
*4
$4
HSET
$22
hash:article:by:100072
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100072
$7
content
$40
csdn/java/1_1_1_11_1504264893.66129.html
*4
$4
HSET
$22
hash:article:by:100072
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100072
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100072
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100072
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100072
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100072
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100072
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100072
$10
createTime
$13
1482573649000
*4
$4
HSET
$22
hash:article:by:100072
$11
releaseTime
$13
1482573649000
*4
$4
HSET
$22
hash:article:by:100072
$10
updateTime
$13
1482573649000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100072
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100072
*3
$5
LPUSH
$15
list:article:id
$6
100072
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100072
*4
$4
HSET
$22
hash:article:by:100741
$2
id
$6
100741
*4
$4
HSET
$22
hash:article:by:100741
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100741
$9
articleId
$4
2073
*4
$4
HSET
$22
hash:article:by:100741
$5
title
$15
责任链模式
*4
$4
HSET
$22
hash:article:by:100741
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100741
$8
labelIds
$16
[12,711,712,713]
*4
$4
HSET
$22
hash:article:by:100741
$6
digest
$269
责任链模式
将能够处理某一类请求的对象串成一条链, 请求沿链传递, 链上的对象逐个判断是否有能力处理该请求. 使多个对象都有机会处理请求, 从而避免请求发送者和接收者之间的耦合关系.  

  优势:...
*4
$4
HSET
$22
hash:article:by:100741
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100741
$7
content
$40
csdn/java/1_0_1_2_1504264415.743141.html
*4
$4
HSET
$22
hash:article:by:100741
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100741
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100741
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100741
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100741
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100741
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100741
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100741
$10
createTime
$13
1482526857000
*4
$4
HSET
$22
hash:article:by:100741
$11
releaseTime
$13
1482526857000
*4
$4
HSET
$22
hash:article:by:100741
$10
updateTime
$13
1482526857000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100741
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100741
*3
$5
LPUSH
$15
list:article:id
$6
100741
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100741
*4
$4
HSET
$22
hash:article:by:100052
$2
id
$6
100052
*4
$4
HSET
$22
hash:article:by:100052
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100052
$9
articleId
$4
2529
*4
$4
HSET
$22
hash:article:by:100052
$5
title
$63
linux+tomcat配置域名访问指定项目，不用接项目名
*4
$4
HSET
$22
hash:article:by:100052
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100052
$8
labelIds
$4
[21]
*4
$4
HSET
$22
hash:article:by:100052
$6
digest
$68
直接上码，tomcat/conf/server.xml配置如下：

  
  <Listener
*4
$4
HSET
$22
hash:article:by:100052
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100052
$7
content
$40
csdn/java/1_1_1_2_1504264886.195514.html
*4
$4
HSET
$22
hash:article:by:100052
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100052
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100052
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100052
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100052
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100052
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100052
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100052
$10
createTime
$13
1482354010000
*4
$4
HSET
$22
hash:article:by:100052
$11
releaseTime
$13
1482354010000
*4
$4
HSET
$22
hash:article:by:100052
$10
updateTime
$13
1482354010000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100052
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100052
*3
$5
LPUSH
$15
list:article:id
$6
100052
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100052
*4
$4
HSET
$22
hash:article:by:100053
$2
id
$6
100053
*4
$4
HSET
$22
hash:article:by:100053
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100053
$9
articleId
$4
2523
*4
$4
HSET
$22
hash:article:by:100053
$5
title
$38
linux环境下配置tomcat HTTPS协议
*4
$4
HSET
$22
hash:article:by:100053
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100053
$8
labelIds
$10
[22,23,21]
*4
$4
HSET
$22
hash:article:by:100053
$6
digest
$229
https简介    它是由Netscape开发并内置于其浏览器中，用于对数据进行压缩和解压操作，并返回网络上传送回的结果。HTTPS实际上应用了Netscape的安全套接字层（SSL）作为HTTP应...
*4
$4
HSET
$22
hash:article:by:100053
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100053
$7
content
$40
csdn/java/1_1_1_1_1504264879.495232.html
*4
$4
HSET
$22
hash:article:by:100053
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100053
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100053
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100053
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100053
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100053
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100053
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100053
$10
createTime
$13
1481994026000
*4
$4
HSET
$22
hash:article:by:100053
$11
releaseTime
$13
1481994026000
*4
$4
HSET
$22
hash:article:by:100053
$10
updateTime
$13
1481994026000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100053
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100053
*3
$5
LPUSH
$15
list:article:id
$6
100053
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100053
*4
$4
HSET
$22
hash:article:by:100195
$2
id
$6
100195
*4
$4
HSET
$22
hash:article:by:100195
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100195
$9
articleId
$4
2580
*4
$4
HSET
$22
hash:article:by:100195
$5
title
$30
设计模式之建造者模式
*4
$4
HSET
$22
hash:article:by:100195
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100195
$8
labelIds
$11
[18,176,12]
*4
$4
HSET
$22
hash:article:by:100195
$6
digest
$109
单例模式(Singleton Pattern)是最简单的一种设计模式。下面让我们开始学习单例模式。
*4
$4
HSET
$22
hash:article:by:100195
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100195
$7
content
$40
csdn/java/1_1_1_0_1504265017.644817.html
*4
$4
HSET
$22
hash:article:by:100195
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100195
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100195
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100195
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100195
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100195
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100195
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100195
$10
createTime
$13
1481626837000
*4
$4
HSET
$22
hash:article:by:100195
$11
releaseTime
$13
1481626837000
*4
$4
HSET
$22
hash:article:by:100195
$10
updateTime
$13
1481626837000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100195
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100195
*3
$5
LPUSH
$15
list:article:id
$6
100195
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100195
*4
$4
HSET
$22
hash:article:by:100140
$2
id
$6
100140
*4
$4
HSET
$22
hash:article:by:100140
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100140
$9
articleId
$4
2581
*4
$4
HSET
$22
hash:article:by:100140
$5
title
$27
设计模式之单例模式
*4
$4
HSET
$22
hash:article:by:100140
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100140
$8
labelIds
$10
[12,66,18]
*4
$4
HSET
$22
hash:article:by:100140
$6
digest
$109
单例模式(Singleton Pattern)是最简单的一种设计模式。下面让我们开始学习单例模式。
*4
$4
HSET
$22
hash:article:by:100140
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100140
$7
content
$39
csdn/java/1_1_1_1_1504265018.57862.html
*4
$4
HSET
$22
hash:article:by:100140
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100140
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100140
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100140
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100140
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100140
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100140
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100140
$10
createTime
$13
1481392810000
*4
$4
HSET
$22
hash:article:by:100140
$11
releaseTime
$13
1481392810000
*4
$4
HSET
$22
hash:article:by:100140
$10
updateTime
$13
1481392810000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100140
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100140
*3
$5
LPUSH
$15
list:article:id
$6
100140
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100140
*4
$4
HSET
$22
hash:article:by:100638
$2
id
$6
100638
*4
$4
HSET
$22
hash:article:by:100638
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100638
$9
articleId
$4
2083
*4
$4
HSET
$22
hash:article:by:100638
$5
title
$12
策略模式
*4
$4
HSET
$22
hash:article:by:100638
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100638
$8
labelIds
$16
[178,12,591,592]
*4
$4
HSET
$22
hash:article:by:100638
$6
digest
$259
Java与设计模式: 定义一系列的算法, 将其一个个封装起来, 并使它们可相互替换, 使得算法可独立于使用它的客户而变化.  
 
  策略模式对应于解决某一问题的一个算法族, 允许用户从该算法族中任...
*4
$4
HSET
$22
hash:article:by:100638
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100638
$7
content
$40
csdn/java/1_0_1_3_1504264420.809085.html
*4
$4
HSET
$22
hash:article:by:100638
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100638
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100638
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100638
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100638
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100638
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100638
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100638
$10
createTime
$13
1481306447000
*4
$4
HSET
$22
hash:article:by:100638
$11
releaseTime
$13
1481306447000
*4
$4
HSET
$22
hash:article:by:100638
$10
updateTime
$13
1481306447000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100638
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100638
*3
$5
LPUSH
$15
list:article:id
$6
100638
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100638
*4
$4
HSET
$22
hash:article:by:100122
$2
id
$6
100122
*4
$4
HSET
$22
hash:article:by:100122
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100122
$9
articleId
$4
2092
*4
$4
HSET
$22
hash:article:by:100122
$5
title
$37
java类反射读取项目内的文件
*4
$4
HSET
$22
hash:article:by:100122
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100122
$8
labelIds
$7
[18,99]
*4
$4
HSET
$22
hash:article:by:100122
$6
digest
$63
文件加载的一点心得，希望能给大家带来帮助。
*4
$4
HSET
$22
hash:article:by:100122
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100122
$7
content
$40
csdn/java/1_3_1_2_1504264426.832455.html
*4
$4
HSET
$22
hash:article:by:100122
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100122
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100122
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100122
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100122
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100122
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100122
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100122
$10
createTime
$13
1480676456000
*4
$4
HSET
$22
hash:article:by:100122
$11
releaseTime
$13
1480676456000
*4
$4
HSET
$22
hash:article:by:100122
$10
updateTime
$13
1480676456000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100122
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100122
*3
$5
LPUSH
$15
list:article:id
$6
100122
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100122
*4
$4
HSET
$22
hash:article:by:100344
$2
id
$6
100344
*4
$4
HSET
$22
hash:article:by:100344
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100344
$9
articleId
$4
2501
*4
$4
HSET
$22
hash:article:by:100344
$5
title
$34
Java设计模式20-备忘录模式
*4
$4
HSET
$22
hash:article:by:100344
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100344
$8
labelIds
$8
[53,346]
*4
$4
HSET
$22
hash:article:by:100344
$6
digest
$291
一、场景当我们使用文本编译器记录一些内容时，发现这一步写错了，往往可以使用Ctrl+Z的方式会退到上一个状态，其中运用到的知识就是备忘录模式。二、定义备忘录模式，即保存某个对象内部状态的拷贝，这样以后...
*4
$4
HSET
$22
hash:article:by:100344
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100344
$7
content
$41
csdn/java/1_1_1_19_1504264853.003265.html
*4
$4
HSET
$22
hash:article:by:100344
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100344
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100344
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100344
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100344
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100344
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100344
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100344
$10
createTime
$13
1480672834000
*4
$4
HSET
$22
hash:article:by:100344
$11
releaseTime
$13
1480672834000
*4
$4
HSET
$22
hash:article:by:100344
$10
updateTime
$13
1480672834000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100344
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100344
*3
$5
LPUSH
$15
list:article:id
$6
100344
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100344
*4
$4
HSET
$22
hash:article:by:100692
$2
id
$6
100692
*4
$4
HSET
$22
hash:article:by:100692
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100692
$9
articleId
$4
2723
*4
$4
HSET
$22
hash:article:by:100692
$5
title
$54
SpringMVC学习记录(九)--RequestContextHolder分析
*4
$4
HSET
$22
hash:article:by:100692
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100692
$8
labelIds
$4
[27]
*4
$4
HSET
$22
hash:article:by:100692
$6
digest
$171
SpringMVC学习记录(九)–RequestContextHolder分析标签（空格分隔）： javaWEB最近遇到的问题是在service获取request和response,正常来说在serv...
*4
$4
HSET
$22
hash:article:by:100692
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100692
$7
content
$41
csdn/java/1_0_1_11_1504265327.428434.html
*4
$4
HSET
$22
hash:article:by:100692
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100692
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100692
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100692
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100692
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100692
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100692
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100692
$10
createTime
$13
1480672818000
*4
$4
HSET
$22
hash:article:by:100692
$11
releaseTime
$13
1480672818000
*4
$4
HSET
$22
hash:article:by:100692
$10
updateTime
$13
1480672818000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100692
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100692
*3
$5
LPUSH
$15
list:article:id
$6
100692
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100692
*4
$4
HSET
$22
hash:article:by:100484
$2
id
$6
100484
*4
$4
HSET
$22
hash:article:by:100484
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100484
$9
articleId
$4
2729
*4
$4
HSET
$22
hash:article:by:100484
$5
title
$51
JavaWEB学习记录--Jenkins自动部署Maven项目
*4
$4
HSET
$22
hash:article:by:100484
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100484
$8
labelIds
$5
[458]
*4
$4
HSET
$22
hash:article:by:100484
$6
digest
$223
JavaWEB学习记录–Jenkins自动部署Maven项目标签（空格分隔）： javaWEB最近在研究jenkins的自动部署方案,有一些心得,记录下来以帮助其他人.如果对你有帮助记得点下赞哈.1....
*4
$4
HSET
$22
hash:article:by:100484
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100484
$7
content
$41
csdn/java/1_0_1_12_1504265333.401332.html
*4
$4
HSET
$22
hash:article:by:100484
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100484
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100484
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100484
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100484
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100484
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100484
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100484
$10
createTime
$13
1480600804000
*4
$4
HSET
$22
hash:article:by:100484
$11
releaseTime
$13
1480600804000
*4
$4
HSET
$22
hash:article:by:100484
$10
updateTime
$13
1480600804000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100484
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100484
*3
$5
LPUSH
$15
list:article:id
$6
100484
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100484
*4
$4
HSET
$22
hash:article:by:100676
$2
id
$6
100676
*4
$4
HSET
$22
hash:article:by:100676
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100676
$9
articleId
$4
2075
*4
$4
HSET
$22
hash:article:by:100676
$5
title
$12
状态模式
*4
$4
HSET
$22
hash:article:by:100676
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100676
$8
labelIds
$20
[12,131,637,638,639]
*4
$4
HSET
$22
hash:article:by:100676
$6
digest
$250
允许一个对象在其内部状态改变时改变其行为, 其对象看起来像是改变了其类. 
 解决系统中复杂对象的状态流转以及不同状态下的行为封装问题.
(来源: 设计模式:可复用面向对象软件的基础)
*4
$4
HSET
$22
hash:article:by:100676
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100676
$7
content
$40
csdn/java/1_0_1_4_1504264416.857213.html
*4
$4
HSET
$22
hash:article:by:100676
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100676
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100676
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100676
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100676
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100676
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100676
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100676
$10
createTime
$13
1480100408000
*4
$4
HSET
$22
hash:article:by:100676
$11
releaseTime
$13
1480100408000
*4
$4
HSET
$22
hash:article:by:100676
$10
updateTime
$13
1480100408000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100676
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100676
*3
$5
LPUSH
$15
list:article:id
$6
100676
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100676
*4
$4
HSET
$22
hash:article:by:100628
$2
id
$6
100628
*4
$4
HSET
$22
hash:article:by:100628
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100628
$9
articleId
$4
2540
*4
$4
HSET
$22
hash:article:by:100628
$5
title
$40
Spring集成HttpClient实现跨域请求
*4
$4
HSET
$22
hash:article:by:100628
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100628
$8
labelIds
$4
[59]
*4
$4
HSET
$22
hash:article:by:100628
$6
digest
$213
在配置spring集成httpclient之前我们先说一下Jsonp，这是一种基于页面script标签的src属性实现的跨域请求，相比于httpclient，jsonp有两点很大的缺点，首先，它只能发...
*4
$4
HSET
$22
hash:article:by:100628
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100628
$7
content
$40
csdn/java/1_1_1_10_1504264897.74515.html
*4
$4
HSET
$22
hash:article:by:100628
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100628
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100628
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100628
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100628
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100628
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100628
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100628
$10
createTime
$13
1479985225000
*4
$4
HSET
$22
hash:article:by:100628
$11
releaseTime
$13
1479985225000
*4
$4
HSET
$22
hash:article:by:100628
$10
updateTime
$13
1479985225000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100628
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100628
*3
$5
LPUSH
$15
list:article:id
$6
100628
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100628
*4
$4
HSET
$22
hash:article:by:100487
$2
id
$6
100487
*4
$4
HSET
$22
hash:article:by:100487
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100487
$9
articleId
$4
2539
*4
$4
HSET
$22
hash:article:by:100487
$5
title
$45
集成通用Mapper，单表操作从此轻松
*4
$4
HSET
$22
hash:article:by:100487
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100487
$8
labelIds
$8
[79,204]
*4
$4
HSET
$22
hash:article:by:100487
$6
digest
$183
如果你使用的Maven开发，你只需在pom.xml文件中加入如下依赖：
    com.github.abel533
    mapper
    2.3.4
如果你想导入架包：下面是连接，由于Map...
*4
$4
HSET
$22
hash:article:by:100487
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100487
$7
content
$40
csdn/java/1_1_1_9_1504264896.509379.html
*4
$4
HSET
$22
hash:article:by:100487
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100487
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100487
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100487
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100487
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100487
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100487
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100487
$10
createTime
$13
1479902400000
*4
$4
HSET
$22
hash:article:by:100487
$11
releaseTime
$13
1479902400000
*4
$4
HSET
$22
hash:article:by:100487
$10
updateTime
$13
1479902400000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100487
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100487
*3
$5
LPUSH
$15
list:article:id
$6
100487
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100487
*4
$4
HSET
$22
hash:article:by:100358
$2
id
$6
100358
*4
$4
HSET
$22
hash:article:by:100358
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100358
$9
articleId
$4
2458
*4
$4
HSET
$22
hash:article:by:100358
$5
title
$42
一天一个设计模式---迭代器模式
*4
$4
HSET
$22
hash:article:by:100358
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100358
$8
labelIds
$7
[12,54]
*4
$4
HSET
$22
hash:article:by:100358
$6
digest
$117
使用Array、List、Map我们一般都会进行迭代操作，现在照着源码，来实现自定义的迭代器。
*4
$4
HSET
$22
hash:article:by:100358
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100358
$7
content
$40
csdn/java/1_0_1_2_1504264767.120785.html
*4
$4
HSET
$22
hash:article:by:100358
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100358
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100358
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100358
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100358
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100358
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100358
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100358
$10
createTime
$13
1479852014000
*4
$4
HSET
$22
hash:article:by:100358
$11
releaseTime
$13
1479852014000
*4
$4
HSET
$22
hash:article:by:100358
$10
updateTime
$13
1479852014000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100358
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100358
*3
$5
LPUSH
$15
list:article:id
$6
100358
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100358
*4
$4
HSET
$22
hash:article:by:100356
$2
id
$6
100356
*4
$4
HSET
$22
hash:article:by:100356
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100356
$9
articleId
$4
2454
*4
$4
HSET
$22
hash:article:by:100356
$5
title
$42
一天一个设计模式---中介者模式
*4
$4
HSET
$22
hash:article:by:100356
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100356
$8
labelIds
$4
[12]
*4
$4
HSET
$22
hash:article:by:100356
$6
digest
$303
我们去租房子时，每次价格变动的时候，房东通知下面的各个有意向的房客，而我们又需要对每个房东进行反馈。这样，一个房客和每个房东，以及一个房东和每个房客的关系都紧密相连。如果我们通过中介，中介会帮我们处理...
*4
$4
HSET
$22
hash:article:by:100356
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100356
$7
content
$39
csdn/java/1_0_1_1_1504264762.85544.html
*4
$4
HSET
$22
hash:article:by:100356
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100356
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100356
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100356
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100356
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100356
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100356
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100356
$10
createTime
$13
1479852009000
*4
$4
HSET
$22
hash:article:by:100356
$11
releaseTime
$13
1479852009000
*4
$4
HSET
$22
hash:article:by:100356
$10
updateTime
$13
1479852009000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100356
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100356
*3
$5
LPUSH
$15
list:article:id
$6
100356
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100356
*4
$4
HSET
$22
hash:article:by:100135
$2
id
$6
100135
*4
$4
HSET
$22
hash:article:by:100135
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100135
$9
articleId
$4
2535
*4
$4
HSET
$22
hash:article:by:100135
$5
title
$19
mybatis级联查询
*4
$4
HSET
$22
hash:article:by:100135
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100135
$8
labelIds
$8
[118,61]
*4
$4
HSET
$22
hash:article:by:100135
$6
digest
$297
关联有嵌套查询和嵌套结果两种方式，本文是按照 嵌套结果 这种方式来说明的上一章介绍了多对一的关系，用到了，这是一个复杂类型的关联。我们选择一个示例来回顾下,比如：一个博客有一个用户，关联映射就工作于这...
*4
$4
HSET
$22
hash:article:by:100135
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100135
$7
content
$40
csdn/java/1_1_1_8_1504264892.540249.html
*4
$4
HSET
$22
hash:article:by:100135
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100135
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100135
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100135
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100135
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100135
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100135
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100135
$10
createTime
$13
1479830432000
*4
$4
HSET
$22
hash:article:by:100135
$11
releaseTime
$13
1479830432000
*4
$4
HSET
$22
hash:article:by:100135
$10
updateTime
$13
1479830432000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100135
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100135
*3
$5
LPUSH
$15
list:article:id
$6
100135
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100135
*4
$4
HSET
$22
hash:article:by:100349
$2
id
$6
100349
*4
$4
HSET
$22
hash:article:by:100349
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100349
$9
articleId
$4
2500
*4
$4
HSET
$22
hash:article:by:100349
$5
title
$39
Java设计模式19——观察者模式
*4
$4
HSET
$22
hash:article:by:100349
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100349
$8
labelIds
$8
[53,349]
*4
$4
HSET
$22
hash:article:by:100349
$6
digest
$301
一、定义观察者模式定义了一个一对多的依赖关系，让多个观察者对象同时监听同一个主题对象。当这个主题状态发生改变时，会通知所有观察者对象，让它们自动更新自己。二、类似场景
聊天室程序的创建。服务器创建好后...
*4
$4
HSET
$22
hash:article:by:100349
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100349
$7
content
$41
csdn/java/1_1_1_18_1504264851.909149.html
*4
$4
HSET
$22
hash:article:by:100349
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100349
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100349
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100349
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100349
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100349
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100349
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100349
$10
createTime
$13
1479664837000
*4
$4
HSET
$22
hash:article:by:100349
$11
releaseTime
$13
1479664837000
*4
$4
HSET
$22
hash:article:by:100349
$10
updateTime
$13
1479664837000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100349
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100349
*3
$5
LPUSH
$15
list:article:id
$6
100349
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100349
*4
$4
HSET
$22
hash:article:by:100639
$2
id
$6
100639
*4
$4
HSET
$22
hash:article:by:100639
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100639
$9
articleId
$4
2721
*4
$4
HSET
$22
hash:article:by:100639
$5
title
$41
Java学习记录--ThreadLocal使用案例
*4
$4
HSET
$22
hash:article:by:100639
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100639
$8
labelIds
$4
[18]
*4
$4
HSET
$22
hash:article:by:100639
$6
digest
$193
java学习记录–ThreadLocal使用案例标签（空格分隔）： java最近整理公司项目,发现不少写的比较糟糕的地方,比如下面这个:public class DateUtil {    priva...
*4
$4
HSET
$22
hash:article:by:100639
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100639
$7
content
$41
csdn/java/1_0_1_13_1504265325.577254.html
*4
$4
HSET
$22
hash:article:by:100639
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100639
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100639
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100639
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100639
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100639
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100639
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100639
$10
createTime
$13
1479571226000
*4
$4
HSET
$22
hash:article:by:100639
$11
releaseTime
$13
1479571226000
*4
$4
HSET
$22
hash:article:by:100639
$10
updateTime
$13
1479571226000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100639
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100639
*3
$5
LPUSH
$15
list:article:id
$6
100639
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100639
*4
$4
HSET
$22
hash:article:by:100403
$2
id
$6
100403
*4
$4
HSET
$22
hash:article:by:100403
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100403
$9
articleId
$4
2602
*4
$4
HSET
$22
hash:article:by:100403
$5
title
$42
神奇的魔术师——简单工厂模式
*4
$4
HSET
$22
hash:article:by:100403
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100403
$8
labelIds
$15
[361,290,12,69]
*4
$4
HSET
$22
hash:article:by:100403
$6
digest
$275
简单工厂模式（Simple Factory）：又叫静态工厂方法：由一个工厂对象决定创建某一产品对象的实例。主要用来创建同一类对象。小白经过几天对团队代码的学习，终于对面向对象思想有所认识，自己跳动的小...
*4
$4
HSET
$22
hash:article:by:100403
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100403
$7
content
$40
csdn/java/1_0_1_1_1504265078.124825.html
*4
$4
HSET
$22
hash:article:by:100403
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100403
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100403
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100403
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100403
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100403
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100403
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100403
$10
createTime
$13
1479553218000
*4
$4
HSET
$22
hash:article:by:100403
$11
releaseTime
$13
1479553218000
*4
$4
HSET
$22
hash:article:by:100403
$10
updateTime
$13
1479553218000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100403
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100403
*3
$5
LPUSH
$15
list:article:id
$6
100403
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100403
*4
$4
HSET
$22
hash:article:by:100633
$2
id
$6
100633
*4
$4
HSET
$22
hash:article:by:100633
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100633
$9
articleId
$4
2717
*4
$4
HSET
$22
hash:article:by:100633
$5
title
$53
SpringDataJPA学习记录(三)--复杂查询的封装
*4
$4
HSET
$22
hash:article:by:100633
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100633
$8
labelIds
$8
[59,204]
*4
$4
HSET
$22
hash:article:by:100633
$6
digest
$163
SpringDataJPA学习记录(三)–复杂查询的封装标签（空格分隔）： springJPA1.使用CriteriaBuilder构建JPQL在UserRepositoryImpl中使用Criter...
*4
$4
HSET
$22
hash:article:by:100633
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100633
$7
content
$41
csdn/java/1_0_1_16_1504265321.541024.html
*4
$4
HSET
$22
hash:article:by:100633
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100633
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100633
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100633
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100633
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100633
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100633
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100633
$10
createTime
$13
1479484813000
*4
$4
HSET
$22
hash:article:by:100633
$11
releaseTime
$13
1479484813000
*4
$4
HSET
$22
hash:article:by:100633
$10
updateTime
$13
1479484813000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100633
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100633
*3
$5
LPUSH
$15
list:article:id
$6
100633
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100633
*4
$4
HSET
$22
hash:article:by:100615
$2
id
$6
100615
*4
$4
HSET
$22
hash:article:by:100615
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100615
$9
articleId
$4
2718
*4
$4
HSET
$22
hash:article:by:100615
$5
title
$44
SpringDataJPA学习记录(二)--增删改查
*4
$4
HSET
$22
hash:article:by:100615
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100615
$8
labelIds
$8
[59,204]
*4
$4
HSET
$22
hash:article:by:100615
$6
digest
$211
SpringDataJPA学习记录(二)–增删改查标签（空格分隔）： springJPA环境配置后,开始增删改查,查是用的最多的,放在最后.1.增加增加可以使用JpaRepository接口里面的sa...
*4
$4
HSET
$22
hash:article:by:100615
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100615
$7
content
$41
csdn/java/1_0_1_15_1504265322.639915.html
*4
$4
HSET
$22
hash:article:by:100615
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100615
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100615
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100615
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100615
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100615
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100615
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100615
$10
createTime
$13
1479484811000
*4
$4
HSET
$22
hash:article:by:100615
$11
releaseTime
$13
1479484811000
*4
$4
HSET
$22
hash:article:by:100615
$10
updateTime
$13
1479484811000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100615
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100615
*3
$5
LPUSH
$15
list:article:id
$6
100615
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100615
*4
$4
HSET
$22
hash:article:by:100227
$2
id
$6
100227
*4
$4
HSET
$22
hash:article:by:100227
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100227
$9
articleId
$4
2727
*4
$4
HSET
$22
hash:article:by:100227
$5
title
$44
SpringDataJPA学习记录(一)--环境配置
*4
$4
HSET
$22
hash:article:by:100227
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100227
$8
labelIds
$8
[204,59]
*4
$4
HSET
$22
hash:article:by:100227
$6
digest
$193
SpringDataJPA学习记录(一)–环境配置标签（空格分隔）： springJPA1.maven配置首先需要spring相关架包,其实spring-data-jpa里面已经依赖了,如果你想用自己...
*4
$4
HSET
$22
hash:article:by:100227
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100227
$7
content
$41
csdn/java/1_0_1_14_1504265331.497898.html
*4
$4
HSET
$22
hash:article:by:100227
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100227
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100227
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100227
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100227
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100227
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100227
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100227
$10
createTime
$13
1479484809000
*4
$4
HSET
$22
hash:article:by:100227
$11
releaseTime
$13
1479484809000
*4
$4
HSET
$22
hash:article:by:100227
$10
updateTime
$13
1479484809000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100227
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100227
*3
$5
LPUSH
$15
list:article:id
$6
100227
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100227
*4
$4
HSET
$22
hash:article:by:100399
$2
id
$6
100399
*4
$4
HSET
$22
hash:article:by:100399
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100399
$9
articleId
$4
2603
*4
$4
HSET
$22
hash:article:by:100399
$5
title
$54
写的都是看到的——面向对象编程（二）
*4
$4
HSET
$22
hash:article:by:100399
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100399
$8
labelIds
$14
[390,69,12,71]
*4
$4
HSET
$22
hash:article:by:100399
$6
digest
$301
传宗接代——继承“小白，看继承呢？”小铭忙完自己的事情走过来。“是呀，刚才学习类，发现每个类都有3个部分，第一部分是构造函数内的，这是供实例化对象复制用的，第二部分是构造函数外的，直接通过点语法添加的...
*4
$4
HSET
$22
hash:article:by:100399
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100399
$7
content
$40
csdn/java/1_0_1_2_1504265079.176344.html
*4
$4
HSET
$22
hash:article:by:100399
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100399
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100399
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100399
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100399
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100399
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100399
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100399
$10
createTime
$13
1479322849000
*4
$4
HSET
$22
hash:article:by:100399
$11
releaseTime
$13
1479322849000
*4
$4
HSET
$22
hash:article:by:100399
$10
updateTime
$13
1479322849000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100399
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100399
*3
$5
LPUSH
$15
list:article:id
$6
100399
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100399
*4
$4
HSET
$22
hash:article:by:100727
$2
id
$6
100727
*4
$4
HSET
$22
hash:article:by:100727
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100727
$9
articleId
$4
2497
*4
$4
HSET
$22
hash:article:by:100727
$5
title
$36
Java设计模式18——状态模式
*4
$4
HSET
$22
hash:article:by:100727
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100727
$8
labelIds
$8
[53,131]
*4
$4
HSET
$22
hash:article:by:100727
$6
digest
$227
一、定义状态(State)模式又称为状态对象模式(Pattern of Objects for State),状态模式是对象的行为模式。状态模式允许一个对象在其内部状态改变时改变其行为，用于解决系统中...
*4
$4
HSET
$22
hash:article:by:100727
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100727
$7
content
$41
csdn/java/1_1_1_17_1504264848.931682.html
*4
$4
HSET
$22
hash:article:by:100727
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100727
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100727
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100727
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100727
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100727
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100727
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100727
$10
createTime
$13
1479322846000
*4
$4
HSET
$22
hash:article:by:100727
$11
releaseTime
$13
1479322846000
*4
$4
HSET
$22
hash:article:by:100727
$10
updateTime
$13
1479322846000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100727
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100727
*3
$5
LPUSH
$15
list:article:id
$6
100727
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100727
*4
$4
HSET
$22
hash:article:by:100555
$2
id
$6
100555
*4
$4
HSET
$22
hash:article:by:100555
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100555
$9
articleId
$4
2522
*4
$4
HSET
$22
hash:article:by:100555
$5
title
$30
tomcat配置默认显示页面
*4
$4
HSET
$22
hash:article:by:100555
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100555
$8
labelIds
$7
[23,28]
*4
$4
HSET
$22
hash:article:by:100555
$6
digest
$231
所谓的修改tomcat的默认主页，就是在tomcat服务器开启时输入ip：port能直接进入你自己定义的主页而不是tomcat主页，具体有以下几个步骤：①首先进入tomcat 下的conf目录，修改s...
*4
$4
HSET
$22
hash:article:by:100555
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100555
$7
content
$39
csdn/java/1_1_1_0_1504264878.31873.html
*4
$4
HSET
$22
hash:article:by:100555
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100555
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100555
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100555
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100555
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100555
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100555
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100555
$10
createTime
$13
1479294052000
*4
$4
HSET
$22
hash:article:by:100555
$11
releaseTime
$13
1479294052000
*4
$4
HSET
$22
hash:article:by:100555
$10
updateTime
$13
1479294052000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100555
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100555
*3
$5
LPUSH
$15
list:article:id
$6
100555
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100555
*4
$4
HSET
$22
hash:article:by:100063
$2
id
$6
100063
*4
$4
HSET
$22
hash:article:by:100063
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100063
$9
articleId
$4
2090
*4
$4
HSET
$22
hash:article:by:100063
$5
title
$24
数据库基本sql语句
*4
$4
HSET
$22
hash:article:by:100063
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100063
$8
labelIds
$3
[7]
*4
$4
HSET
$22
hash:article:by:100063
$6
digest
$146
mysql的基本语句，由于本人不是经常写，于是开个博客给自己记录，方便以后查看，也希望能给大家带来方便！
*4
$4
HSET
$22
hash:article:by:100063
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100063
$7
content
$40
csdn/java/1_3_1_1_1504264425.647223.html
*4
$4
HSET
$22
hash:article:by:100063
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100063
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100063
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100063
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100063
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100063
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100063
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100063
$10
createTime
$13
1479294012000
*4
$4
HSET
$22
hash:article:by:100063
$11
releaseTime
$13
1479294012000
*4
$4
HSET
$22
hash:article:by:100063
$10
updateTime
$13
1479294012000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100063
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100063
*3
$5
LPUSH
$15
list:article:id
$6
100063
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100063
*4
$4
HSET
$22
hash:article:by:100157
$2
id
$6
100157
*4
$4
HSET
$22
hash:article:by:100157
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100157
$9
articleId
$4
2467
*4
$4
HSET
$22
hash:article:by:100157
$5
title
$42
一天一个设计模式---解释器模式
*4
$4
HSET
$22
hash:article:by:100157
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100157
$8
labelIds
$4
[12]
*4
$4
HSET
$22
hash:article:by:100157
$6
digest
$177
对于语法的解释，是十分复杂的，比如打造一款计算器，我们需要让程序知道加减乘除和数字的关系，这个时候就可以用到解释器模式
*4
$4
HSET
$22
hash:article:by:100157
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100157
$7
content
$40
csdn/java/1_0_1_3_1504264775.981779.html
*4
$4
HSET
$22
hash:article:by:100157
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100157
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100157
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100157
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100157
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100157
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100157
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100157
$10
createTime
$13
1479294009000
*4
$4
HSET
$22
hash:article:by:100157
$11
releaseTime
$13
1479294009000
*4
$4
HSET
$22
hash:article:by:100157
$10
updateTime
$13
1479294009000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100157
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100157
*3
$5
LPUSH
$15
list:article:id
$6
100157
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100157
*4
$4
HSET
$22
hash:article:by:100057
$2
id
$6
100057
*4
$4
HSET
$22
hash:article:by:100057
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100057
$9
articleId
$4
2088
*4
$4
HSET
$22
hash:article:by:100057
$5
title
$81
使用AJAX技术做一个无页面刷新的会员登录功能--解决中文乱码
*4
$4
HSET
$22
hash:article:by:100057
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100057
$8
labelIds
$7
[29,18]
*4
$4
HSET
$22
hash:article:by:100057
$6
digest
$36
使用双重编码和双重解码。
*4
$4
HSET
$22
hash:article:by:100057
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100057
$7
content
$40
csdn/java/1_3_1_0_1504264424.851471.html
*4
$4
HSET
$22
hash:article:by:100057
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100057
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100057
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100057
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100057
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100057
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100057
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100057
$10
createTime
$13
1479290444000
*4
$4
HSET
$22
hash:article:by:100057
$11
releaseTime
$13
1479290444000
*4
$4
HSET
$22
hash:article:by:100057
$10
updateTime
$13
1479290444000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100057
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100057
*3
$5
LPUSH
$15
list:article:id
$6
100057
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100057
*4
$4
HSET
$22
hash:article:by:100112
$2
id
$6
100112
*4
$4
HSET
$22
hash:article:by:100112
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100112
$9
articleId
$4
2504
*4
$4
HSET
$22
hash:article:by:100112
$5
title
$42
Java设计模式17——模板方法模式
*4
$4
HSET
$22
hash:article:by:100112
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100112
$8
labelIds
$7
[53,88]
*4
$4
HSET
$22
hash:article:by:100112
$6
digest
$303
一、介绍模板方法模式是编程中经常用到的模式。它定义了一个操作中的算法骨架，将某些步骤延迟到子类中实现。这样，新的子类可以在不改变一个算法结构的前提下重新定义该算法的某些特定步骤。二、场景举例当一个客户...
*4
$4
HSET
$22
hash:article:by:100112
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100112
$7
content
$41
csdn/java/1_1_1_16_1504264856.125967.html
*4
$4
HSET
$22
hash:article:by:100112
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100112
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100112
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100112
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100112
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100112
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100112
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100112
$10
createTime
$13
1479232820000
*4
$4
HSET
$22
hash:article:by:100112
$11
releaseTime
$13
1479232820000
*4
$4
HSET
$22
hash:article:by:100112
$10
updateTime
$13
1479232820000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100112
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100112
*3
$5
LPUSH
$15
list:article:id
$6
100112
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100112
*4
$4
HSET
$22
hash:article:by:100722
$2
id
$6
100722
*4
$4
HSET
$22
hash:article:by:100722
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100722
$9
articleId
$4
2503
*4
$4
HSET
$22
hash:article:by:100722
$5
title
$36
Java设计模式16——策略模式
*4
$4
HSET
$22
hash:article:by:100722
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100722
$8
labelIds
$8
[53,178]
*4
$4
HSET
$22
hash:article:by:100722
$6
digest
$281
一、定义　　策略(strategy)模式属于对象的行为模式。其用途是针对一组算法，将每个不同算法封装到具有共同接口的独立类中，从而使他们可以相互替换。即使 算法和对象分开来，使得算法可以独立于使用它的...
*4
$4
HSET
$22
hash:article:by:100722
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100722
$7
content
$41
csdn/java/1_1_1_15_1504264855.032455.html
*4
$4
HSET
$22
hash:article:by:100722
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100722
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100722
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100722
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100722
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100722
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100722
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100722
$10
createTime
$13
1479110430000
*4
$4
HSET
$22
hash:article:by:100722
$11
releaseTime
$13
1479110430000
*4
$4
HSET
$22
hash:article:by:100722
$10
updateTime
$13
1479110430000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100722
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100722
*3
$5
LPUSH
$15
list:article:id
$6
100722
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100722
*4
$4
HSET
$22
hash:article:by:100342
$2
id
$6
100342
*4
$4
HSET
$22
hash:article:by:100342
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100342
$9
articleId
$4
2499
*4
$4
HSET
$22
hash:article:by:100342
$5
title
$36
Java设计模式15——命令模式
*4
$4
HSET
$22
hash:article:by:100342
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100342
$8
labelIds
$8
[53,344]
*4
$4
HSET
$22
hash:article:by:100342
$6
digest
$261
一、介绍命令模式：将一个请求封装为对象，从而使我们可用不同的请求对客户进行参数化；对请求排队或者记录请求日志，以及支持可撤销的操作。也称为：动作(Action)模式、事务(transaction)模式...
*4
$4
HSET
$22
hash:article:by:100342
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100342
$7
content
$41
csdn/java/1_1_1_14_1504264850.947705.html
*4
$4
HSET
$22
hash:article:by:100342
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100342
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100342
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100342
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100342
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100342
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100342
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100342
$10
createTime
$13
1478984449000
*4
$4
HSET
$22
hash:article:by:100342
$11
releaseTime
$13
1478984449000
*4
$4
HSET
$22
hash:article:by:100342
$10
updateTime
$13
1478984449000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100342
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100342
*3
$5
LPUSH
$15
list:article:id
$6
100342
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100342
*4
$4
HSET
$22
hash:article:by:100414
$2
id
$6
100414
*4
$4
HSET
$22
hash:article:by:100414
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100414
$9
articleId
$4
2604
*4
$4
HSET
$22
hash:article:by:100414
$5
title
$54
写的都是看到的——面向对象编程（一）
*4
$4
HSET
$22
hash:article:by:100414
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100414
$8
labelIds
$18
[390,70,290,12,69]
*4
$4
HSET
$22
hash:article:by:100414
$6
digest
$303
第一天的经历使小白深深认识到校园学到的知识与实际工作中的偏差，所以想见识见识公司团队里大家都是如何书写代码并完成需求的。早晨走进公司的时候恰巧遇见了项目经理。两种编程风格——面向过程与面向对象“早！小...
*4
$4
HSET
$22
hash:article:by:100414
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100414
$7
content
$40
csdn/java/1_0_1_3_1504265080.343787.html
*4
$4
HSET
$22
hash:article:by:100414
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100414
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100414
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100414
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100414
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100414
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100414
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100414
$10
createTime
$13
1478966436000
*4
$4
HSET
$22
hash:article:by:100414
$11
releaseTime
$13
1478966436000
*4
$4
HSET
$22
hash:article:by:100414
$10
updateTime
$13
1478966436000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100414
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100414
*3
$5
LPUSH
$15
list:article:id
$6
100414
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100414
*4
$4
HSET
$22
hash:article:by:100109
$2
id
$6
100109
*4
$4
HSET
$22
hash:article:by:100109
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100109
$9
articleId
$4
2502
*4
$4
HSET
$22
hash:article:by:100109
$5
title
$49
Java设计模式14——中介者(Mediator)模式
*4
$4
HSET
$22
hash:article:by:100109
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100109
$8
labelIds
$7
[53,85]
*4
$4
HSET
$22
hash:article:by:100109
$6
digest
$303
一、定义用一个中介对象封装一系列对象的交互，中介者是多个对象不需要显示的相互作用，而且可以独立的改变他们的交互。二、举例通过上述定义可能不好理解，下面举一个例子，假如在一个没有总经理的公司中，有三个部...
*4
$4
HSET
$22
hash:article:by:100109
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100109
$7
content
$40
csdn/java/1_1_1_13_1504264854.22654.html
*4
$4
HSET
$22
hash:article:by:100109
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100109
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100109
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100109
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100109
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100109
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100109
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100109
$10
createTime
$13
1478898006000
*4
$4
HSET
$22
hash:article:by:100109
$11
releaseTime
$13
1478898006000
*4
$4
HSET
$22
hash:article:by:100109
$10
updateTime
$13
1478898006000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100109
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100109
*3
$5
LPUSH
$15
list:article:id
$6
100109
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100109
*4
$4
HSET
$22
hash:article:by:100644
$2
id
$6
100644
*4
$4
HSET
$22
hash:article:by:100644
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100644
$9
articleId
$4
2601
*4
$4
HSET
$22
hash:article:by:100644
$5
title
$28
灵活的语言---JavaScript
*4
$4
HSET
$22
hash:article:by:100644
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100644
$8
labelIds
$14
[70,597,12,69]
*4
$4
HSET
$22
hash:article:by:100644
$6
digest
$299
结束了4年的大学学习生活，小白信心满满地来到应聘的M公司。今天是入职的第一天，项目经理分下来一个验证表单功能的任务，内容不多，仅需要验证用户名、邮箱、密码等。入职第一天小白接到需求看了看，感觉很简单，...
*4
$4
HSET
$22
hash:article:by:100644
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100644
$7
content
$40
csdn/java/1_0_1_4_1504265077.135193.html
*4
$4
HSET
$22
hash:article:by:100644
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100644
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100644
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100644
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100644
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100644
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100644
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100644
$10
createTime
$13
1478883653000
*4
$4
HSET
$22
hash:article:by:100644
$11
releaseTime
$13
1478883653000
*4
$4
HSET
$22
hash:article:by:100644
$10
updateTime
$13
1478883653000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100644
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100644
*3
$5
LPUSH
$15
list:article:id
$6
100644
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100644
*4
$4
HSET
$22
hash:article:by:100080
$2
id
$6
100080
*4
$4
HSET
$22
hash:article:by:100080
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100080
$9
articleId
$4
2507
*4
$4
HSET
$22
hash:article:by:100080
$5
title
$39
Java设计模式13——迭代器模式
*4
$4
HSET
$22
hash:article:by:100080
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100080
$8
labelIds
$7
[53,54]
*4
$4
HSET
$22
hash:article:by:100080
$6
digest
$207
一、场景对于学习了Java的同学来说，“迭代”这个词并不会陌生，我们经常使用Iterator接口对Collection下的集合类进行遍历，常见代码：Iterator iterator=list.ite...
*4
$4
HSET
$22
hash:article:by:100080
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100080
$7
content
$41
csdn/java/1_1_1_12_1504264859.056061.html
*4
$4
HSET
$22
hash:article:by:100080
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100080
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100080
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100080
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100080
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100080
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100080
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100080
$10
createTime
$13
1478718015000
*4
$4
HSET
$22
hash:article:by:100080
$11
releaseTime
$13
1478718015000
*4
$4
HSET
$22
hash:article:by:100080
$10
updateTime
$13
1478718015000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100080
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100080
*3
$5
LPUSH
$15
list:article:id
$6
100080
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100080
*4
$4
HSET
$22
hash:article:by:100368
$2
id
$6
100368
*4
$4
HSET
$22
hash:article:by:100368
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100368
$9
articleId
$4
2471
*4
$4
HSET
$22
hash:article:by:100368
$5
title
$39
一天一个设计模式---命令模式
*4
$4
HSET
$22
hash:article:by:100368
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100368
$8
labelIds
$4
[12]
*4
$4
HSET
$22
hash:article:by:100368
$6
digest
$116
用命令模式来实现一个2D飞行射击游戏，能左右按钮躲避敌人的子弹，切换武器，射击。
*4
$4
HSET
$22
hash:article:by:100368
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100368
$7
content
$40
csdn/java/1_0_1_4_1504264780.053803.html
*4
$4
HSET
$22
hash:article:by:100368
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100368
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100368
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100368
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100368
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100368
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100368
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100368
$10
createTime
$13
1478581250000
*4
$4
HSET
$22
hash:article:by:100368
$11
releaseTime
$13
1478581250000
*4
$4
HSET
$22
hash:article:by:100368
$10
updateTime
$13
1478581250000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100368
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100368
*3
$5
LPUSH
$15
list:article:id
$6
100368
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100368
*4
$4
HSET
$22
hash:article:by:100343
$2
id
$6
100343
*4
$4
HSET
$22
hash:article:by:100343
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100343
$9
articleId
$4
2508
*4
$4
HSET
$22
hash:article:by:100343
$5
title
$39
Java设计模式12——责任链模式
*4
$4
HSET
$22
hash:article:by:100343
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100343
$8
labelIds
$8
[53,345]
*4
$4
HSET
$22
hash:article:by:100343
$6
digest
$297
一、定义　　将能够处理同一类请求的对象连成一条链，所提交的请求将沿着这条链传递，链上的对象逐个判断是否有能力处理该请求，如果有则处理，如果没有则将请求传递给下一个对象处理。二、场景举例1.生活中场景 ...
*4
$4
HSET
$22
hash:article:by:100343
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100343
$7
content
$41
csdn/java/1_1_1_11_1504264860.123131.html
*4
$4
HSET
$22
hash:article:by:100343
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100343
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100343
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100343
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100343
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100343
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100343
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100343
$10
createTime
$13
1478548807000
*4
$4
HSET
$22
hash:article:by:100343
$11
releaseTime
$13
1478548807000
*4
$4
HSET
$22
hash:article:by:100343
$10
updateTime
$13
1478548807000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100343
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100343
*3
$5
LPUSH
$15
list:article:id
$6
100343
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100343
*4
$4
HSET
$22
hash:article:by:100677
$2
id
$6
100677
*4
$4
HSET
$22
hash:article:by:100677
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100677
$9
articleId
$4
2506
*4
$4
HSET
$22
hash:article:by:100677
$5
title
$36
Java设计模式11——享元模式
*4
$4
HSET
$22
hash:article:by:100677
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100677
$8
labelIds
$8
[53,443]
*4
$4
HSET
$22
hash:article:by:100677
$6
digest
$301
一、适用场景　　内存属于稀缺资源，不能随意浪费。如果在一个系统中有很多个完全相同或相似的对象，我们就可以使用享元模式，让他们共享一份内存即可，不必每个都去实例化对象，从而节省内存空间。二、模式核心
享...
*4
$4
HSET
$22
hash:article:by:100677
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100677
$7
content
$41
csdn/java/1_1_1_10_1504264858.090727.html
*4
$4
HSET
$22
hash:article:by:100677
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100677
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100677
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100677
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100677
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100677
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100677
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100677
$10
createTime
$13
1478440858000
*4
$4
HSET
$22
hash:article:by:100677
$11
releaseTime
$13
1478440858000
*4
$4
HSET
$22
hash:article:by:100677
$10
updateTime
$13
1478440858000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100677
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100677
*3
$5
LPUSH
$15
list:article:id
$6
100677
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100677
*4
$4
HSET
$22
hash:article:by:100082
$2
id
$6
100082
*4
$4
HSET
$22
hash:article:by:100082
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100082
$9
articleId
$4
2510
*4
$4
HSET
$22
hash:article:by:100082
$5
title
$36
Java设计模式10——外观模式
*4
$4
HSET
$22
hash:article:by:100082
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100082
$8
labelIds
$10
[53,12,55]
*4
$4
HSET
$22
hash:article:by:100082
$6
digest
$197
外观模式是最简单的设计模式之一，所以我就不再去重写了，简单的总结转载看到的一篇文章，原文链接：http://blog.csdn.net/jason0539/article/details/227753...
*4
$4
HSET
$22
hash:article:by:100082
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100082
$7
content
$40
csdn/java/1_1_1_9_1504264862.165889.html
*4
$4
HSET
$22
hash:article:by:100082
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100082
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100082
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100082
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100082
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100082
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100082
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100082
$10
createTime
$13
1478379609000
*4
$4
HSET
$22
hash:article:by:100082
$11
releaseTime
$13
1478379609000
*4
$4
HSET
$22
hash:article:by:100082
$10
updateTime
$13
1478379609000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100082
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100082
*3
$5
LPUSH
$15
list:article:id
$6
100082
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100082
*4
$4
HSET
$22
hash:article:by:100686
$2
id
$6
100686
*4
$4
HSET
$22
hash:article:by:100686
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100686
$9
articleId
$4
2509
*4
$4
HSET
$22
hash:article:by:100686
$5
title
$42
Java设计模式学习09——装饰模式
*4
$4
HSET
$22
hash:article:by:100686
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100686
$8
labelIds
$8
[53,493]
*4
$4
HSET
$22
hash:article:by:100686
$6
digest
$261
一、定义装饰(Decorate)模式又称为包装(Wrapper)模式。装饰模式是以对客户端透明的方式扩展对象的功能，是继承关系的一个替代方案。二、职责
动态的为一个对象增加新的功能。
装饰模式是一种用...
*4
$4
HSET
$22
hash:article:by:100686
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100686
$7
content
$40
csdn/java/1_1_1_8_1504264861.092748.html
*4
$4
HSET
$22
hash:article:by:100686
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100686
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100686
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100686
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100686
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100686
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100686
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100686
$10
createTime
$13
1478199611000
*4
$4
HSET
$22
hash:article:by:100686
$11
releaseTime
$13
1478199611000
*4
$4
HSET
$22
hash:article:by:100686
$10
updateTime
$13
1478199611000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100686
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100686
*3
$5
LPUSH
$15
list:article:id
$6
100686
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100686
*4
$4
HSET
$22
hash:article:by:100164
$2
id
$6
100164
*4
$4
HSET
$22
hash:article:by:100164
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100164
$9
articleId
$4
2472
*4
$4
HSET
$22
hash:article:by:100164
$5
title
$42
一天一个设计模式---责任链模式
*4
$4
HSET
$22
hash:article:by:100164
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100164
$8
labelIds
$4
[12]
*4
$4
HSET
$22
hash:article:by:100164
$6
digest
$97
当时学习时，十分神秘的拦截器/过滤器，现在我也终于有思路去实现了！
*4
$4
HSET
$22
hash:article:by:100164
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100164
$7
content
$40
csdn/java/1_0_1_5_1504264781.274046.html
*4
$4
HSET
$22
hash:article:by:100164
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100164
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100164
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100164
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100164
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100164
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100164
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100164
$10
createTime
$13
1478188800000
*4
$4
HSET
$22
hash:article:by:100164
$11
releaseTime
$13
1478188800000
*4
$4
HSET
$22
hash:article:by:100164
$10
updateTime
$13
1478188800000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100164
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100164
*3
$5
LPUSH
$15
list:article:id
$6
100164
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100164
*4
$4
HSET
$22
hash:article:by:100477
$2
id
$6
100477
*4
$4
HSET
$22
hash:article:by:100477
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100477
$9
articleId
$4
2505
*4
$4
HSET
$22
hash:article:by:100477
$5
title
$42
Java设计模式学习08——组合模式
*4
$4
HSET
$22
hash:article:by:100477
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100477
$8
labelIds
$8
[53,448]
*4
$4
HSET
$22
hash:article:by:100477
$6
digest
$279
一、组合模式适用场景把部分和整体的关系用树形结构来表示，从而使客户端可以使用统一的方式对部分对象和整体对象进行管理。二、组合模式结构
抽象构件(Conponent)角色：所有类的共有接口，定义了叶子和...
*4
$4
HSET
$22
hash:article:by:100477
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100477
$7
content
$40
csdn/java/1_1_1_7_1504264857.111527.html
*4
$4
HSET
$22
hash:article:by:100477
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100477
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100477
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100477
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100477
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100477
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100477
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100477
$10
createTime
$13
1478113244000
*4
$4
HSET
$22
hash:article:by:100477
$11
releaseTime
$13
1478113244000
*4
$4
HSET
$22
hash:article:by:100477
$10
updateTime
$13
1478113244000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100477
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100477
*3
$5
LPUSH
$15
list:article:id
$6
100477
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100477
*4
$4
HSET
$22
hash:article:by:100479
$2
id
$6
100479
*4
$4
HSET
$22
hash:article:by:100479
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100479
$9
articleId
$4
2498
*4
$4
HSET
$22
hash:article:by:100479
$5
title
$42
Java设计模式学习07——桥接模式
*4
$4
HSET
$22
hash:article:by:100479
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100479
$8
labelIds
$7
[53,89]
*4
$4
HSET
$22
hash:article:by:100479
$6
digest
$231
一、场景商城系统中常见的商品分类，以电脑为例，如何良好的处理商品分类销售的问题？
我们可以用多层继承实现下图的关系：
实现代码如下：public interface Computer {
    vo...
*4
$4
HSET
$22
hash:article:by:100479
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100479
$7
content
$40
csdn/java/1_1_1_6_1504264850.037878.html
*4
$4
HSET
$22
hash:article:by:100479
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100479
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100479
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100479
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100479
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100479
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100479
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100479
$10
createTime
$13
1478030403000
*4
$4
HSET
$22
hash:article:by:100479
$11
releaseTime
$13
1478030403000
*4
$4
HSET
$22
hash:article:by:100479
$10
updateTime
$13
1478030403000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100479
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100479
*3
$5
LPUSH
$15
list:article:id
$6
100479
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100479
*4
$4
HSET
$22
hash:article:by:100729
$2
id
$6
100729
*4
$4
HSET
$22
hash:article:by:100729
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100729
$9
articleId
$4
2716
*4
$4
HSET
$22
hash:article:by:100729
$5
title
$48
JavaWEB后端支付银联,支付宝,微信对接
*4
$4
HSET
$22
hash:article:by:100729
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100729
$8
labelIds
$8
[18,700]
*4
$4
HSET
$22
hash:article:by:100729
$6
digest
$249
JavaWEB后端支付银联,支付宝,微信对接标签（空格分隔）： java项目概述最近项目需要后端打通支付,所以对接部分做成了一个小模块. 
先说下项目要求: 
后端要对接银联无跳转Token支付,支付...
*4
$4
HSET
$22
hash:article:by:100729
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100729
$7
content
$41
csdn/java/1_0_1_17_1504265320.234071.html
*4
$4
HSET
$22
hash:article:by:100729
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100729
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100729
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100729
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100729
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100729
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100729
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100729
$10
createTime
$13
1477954832000
*4
$4
HSET
$22
hash:article:by:100729
$11
releaseTime
$13
1477954832000
*4
$4
HSET
$22
hash:article:by:100729
$10
updateTime
$13
1477954832000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100729
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100729
*3
$5
LPUSH
$15
list:article:id
$6
100729
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100729
*4
$4
HSET
$22
hash:article:by:100513
$2
id
$6
100513
*4
$4
HSET
$22
hash:article:by:100513
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100513
$9
articleId
$4
2634
*4
$4
HSET
$22
hash:article:by:100513
$5
title
$94
领域驱动设计系列文章（1）——通过现实例子显示领域驱动设计的威力
*4
$4
HSET
$22
hash:article:by:100513
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100513
$8
labelIds
$20
[468,469,470,93,471]
*4
$4
HSET
$22
hash:article:by:100513
$6
digest
$303
在本文中，将会拿出一个显示的例子，先用传统的面向过程方式，使用贫血模型进行设计，然后再逐步加入需求变更，让读者发现，随着系统的不断变更，基于贫血模型的设计将会让系统慢慢陷入泥潭，越来越难于维护，然后再...
*4
$4
HSET
$22
hash:article:by:100513
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100513
$7
content
$41
csdn/java/1_0_1_16_1504265180.370828.html
*4
$4
HSET
$22
hash:article:by:100513
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100513
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100513
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100513
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100513
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100513
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100513
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100513
$10
createTime
$13
1477832407000
*4
$4
HSET
$22
hash:article:by:100513
$11
releaseTime
$13
1477832407000
*4
$4
HSET
$22
hash:article:by:100513
$10
updateTime
$13
1477832407000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100513
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100513
*3
$5
LPUSH
$15
list:article:id
$6
100513
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100513
*4
$4
HSET
$22
hash:article:by:100611
$2
id
$6
100611
*4
$4
HSET
$22
hash:article:by:100611
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100611
$9
articleId
$4
2495
*4
$4
HSET
$22
hash:article:by:100611
$5
title
$57
Java设计模式学习06——静态代理与动态代理
*4
$4
HSET
$22
hash:article:by:100611
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100611
$8
labelIds
$8
[53,568]
*4
$4
HSET
$22
hash:article:by:100611
$6
digest
$303
一、代理模式为某个对象提供一个代理，从而控制这个代理的访问。代理类和委托类具有共同的父类或父接口，这样在任何使用委托类对象的地方都可以使用代理类对象替代。代理类负责请求的预处理、过滤、将请求分配给委托...
*4
$4
HSET
$22
hash:article:by:100611
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100611
$7
content
$40
csdn/java/1_1_1_5_1504264846.887893.html
*4
$4
HSET
$22
hash:article:by:100611
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100611
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100611
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100611
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100611
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100611
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100611
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100611
$10
createTime
$13
1477818057000
*4
$4
HSET
$22
hash:article:by:100611
$11
releaseTime
$13
1477818057000
*4
$4
HSET
$22
hash:article:by:100611
$10
updateTime
$13
1477818057000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100611
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100611
*3
$5
LPUSH
$15
list:article:id
$6
100611
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100611
*4
$4
HSET
$22
hash:article:by:100574
$2
id
$6
100574
*4
$4
HSET
$22
hash:article:by:100574
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100574
$9
articleId
$4
2494
*4
$4
HSET
$22
hash:article:by:100574
$5
title
$45
Java设计模式学习05——适配器模式
*4
$4
HSET
$22
hash:article:by:100574
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100574
$8
labelIds
$10
[53,18,77]
*4
$4
HSET
$22
hash:article:by:100574
$6
digest
$299
之前讲的几种模式都是创建型模式，现在开始讲结构型模式。何为结构型模式？结构型模式的 核心作用， 是从程序结构上实现松耦合，从而可以扩大整体的类结构，用来解决更大的问题。一、适配器模式定义适配器模式，把...
*4
$4
HSET
$22
hash:article:by:100574
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100574
$7
content
$40
csdn/java/1_1_1_4_1504264845.942677.html
*4
$4
HSET
$22
hash:article:by:100574
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100574
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100574
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100574
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100574
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100574
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100574
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100574
$10
createTime
$13
1477587655000
*4
$4
HSET
$22
hash:article:by:100574
$11
releaseTime
$13
1477587655000
*4
$4
HSET
$22
hash:article:by:100574
$10
updateTime
$13
1477587655000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100574
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100574
*3
$5
LPUSH
$15
list:article:id
$6
100574
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100574
*4
$4
HSET
$22
hash:article:by:100512
$2
id
$6
100512
*4
$4
HSET
$22
hash:article:by:100512
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100512
$9
articleId
$4
2496
*4
$4
HSET
$22
hash:article:by:100512
$5
title
$42
Java设计模式学习04——原型模式
*4
$4
HSET
$22
hash:article:by:100512
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100512
$8
labelIds
$11
[18,53,467]
*4
$4
HSET
$22
hash:article:by:100512
$6
digest
$289
原型模式　　当我们需要构建一个与已经存在对象相似时，再通过new去产生一个新对象需要非常繁琐的数据准备或访问权限，而这时就可以用到原型模式，原型模式实现就是Java中的克隆技术，以某个对象为原型，复制...
*4
$4
HSET
$22
hash:article:by:100512
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100512
$7
content
$40
csdn/java/1_1_1_3_1504264847.964694.html
*4
$4
HSET
$22
hash:article:by:100512
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100512
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100512
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100512
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100512
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100512
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100512
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100512
$10
createTime
$13
1477472438000
*4
$4
HSET
$22
hash:article:by:100512
$11
releaseTime
$13
1477472438000
*4
$4
HSET
$22
hash:article:by:100512
$10
updateTime
$13
1477472438000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100512
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100512
*3
$5
LPUSH
$15
list:article:id
$6
100512
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100512
*4
$4
HSET
$22
hash:article:by:100609
$2
id
$6
100609
*4
$4
HSET
$22
hash:article:by:100609
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100609
$9
articleId
$4
2493
*4
$4
HSET
$22
hash:article:by:100609
$5
title
$45
Java设计模式学习03——建造者模式
*4
$4
HSET
$22
hash:article:by:100609
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100609
$8
labelIds
$8
[53,176]
*4
$4
HSET
$22
hash:article:by:100609
$6
digest
$253
一、场景 
        当需要生产一辆汽车时，我们需要为其装配发动机、轮胎、座椅等等部件，这个装配过程是比较复杂的而且也需要较高的组装技术。而建造者模式（Builder Pattern）就是为了将...
*4
$4
HSET
$22
hash:article:by:100609
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100609
$7
content
$40
csdn/java/1_1_1_2_1504264844.946896.html
*4
$4
HSET
$22
hash:article:by:100609
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100609
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100609
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100609
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100609
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100609
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100609
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100609
$10
createTime
$13
1477407624000
*4
$4
HSET
$22
hash:article:by:100609
$11
releaseTime
$13
1477407624000
*4
$4
HSET
$22
hash:article:by:100609
$10
updateTime
$13
1477407624000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100609
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100609
*3
$5
LPUSH
$15
list:article:id
$6
100609
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100609
*4
$4
HSET
$22
hash:article:by:100483
$2
id
$6
100483
*4
$4
HSET
$22
hash:article:by:100483
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100483
$9
articleId
$4
2468
*4
$4
HSET
$22
hash:article:by:100483
$5
title
$39
一天一个设计模式---外观模式
*4
$4
HSET
$22
hash:article:by:100483
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100483
$8
labelIds
$4
[12]
*4
$4
HSET
$22
hash:article:by:100483
$6
digest
$261
如果让我们来制作一个苹果手机，我们需要实现拍照、视频聊天、通话的功能。通过外观模式，相当于对外提供了几个接口，拍照、视频聊天、通话的接口，而具体的内部处理，用户并不需要关心。
*4
$4
HSET
$22
hash:article:by:100483
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100483
$7
content
$40
csdn/java/1_0_1_6_1504264777.154181.html
*4
$4
HSET
$22
hash:article:by:100483
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100483
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100483
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100483
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100483
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100483
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100483
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100483
$10
createTime
$13
1477386000000
*4
$4
HSET
$22
hash:article:by:100483
$11
releaseTime
$13
1477386000000
*4
$4
HSET
$22
hash:article:by:100483
$10
updateTime
$13
1477386000000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100483
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100483
*3
$5
LPUSH
$15
list:article:id
$6
100483
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100483
*4
$4
HSET
$22
hash:article:by:100514
$2
id
$6
100514
*4
$4
HSET
$22
hash:article:by:100514
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100514
$9
articleId
$4
2492
*4
$4
HSET
$22
hash:article:by:100514
$5
title
$42
Java设计模式学习02——工厂模式
*4
$4
HSET
$22
hash:article:by:100514
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100514
$8
labelIds
$11
[53,361,18]
*4
$4
HSET
$22
hash:article:by:100514
$6
digest
$289
工厂模式工厂模式主要是为创建对象提供接口，将创建对象的过程隔离起来，实现了创建者与调用者的分离，提高了程序的灵活性。 
核心本质：
实例化对象，用工厂方法代替new操作。
将选择实现类、创建对象统一管...
*4
$4
HSET
$22
hash:article:by:100514
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100514
$7
content
$39
csdn/java/1_1_1_1_1504264843.98766.html
*4
$4
HSET
$22
hash:article:by:100514
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100514
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100514
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100514
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100514
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100514
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100514
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100514
$10
createTime
$13
1477306839000
*4
$4
HSET
$22
hash:article:by:100514
$11
releaseTime
$13
1477306839000
*4
$4
HSET
$22
hash:article:by:100514
$10
updateTime
$13
1477306839000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100514
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100514
*3
$5
LPUSH
$15
list:article:id
$6
100514
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100514
*4
$4
HSET
$22
hash:article:by:100575
$2
id
$6
100575
*4
$4
HSET
$22
hash:article:by:100575
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100575
$9
articleId
$4
2491
*4
$4
HSET
$22
hash:article:by:100575
$5
title
$43
Java设计模式学习——前言与介绍
*4
$4
HSET
$22
hash:article:by:100575
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100575
$8
labelIds
$7
[53,12]
*4
$4
HSET
$22
hash:article:by:100575
$6
digest
$303
前言　　在我平时的学习与项目工作中，经常会纠结于类的框架搭建，以及类间的关系梳理，而当我通过查看一些牛人的代码解释时总会有一种有一种豁然开朗之感，感觉别人写的代码层次清晰，易于理解。久而久之，我确实感...
*4
$4
HSET
$22
hash:article:by:100575
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100575
$7
content
$40
csdn/java/1_1_1_0_1504264842.918989.html
*4
$4
HSET
$22
hash:article:by:100575
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100575
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100575
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100575
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100575
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100575
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100575
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100575
$10
createTime
$13
1477227604000
*4
$4
HSET
$22
hash:article:by:100575
$11
releaseTime
$13
1477227604000
*4
$4
HSET
$22
hash:article:by:100575
$10
updateTime
$13
1477227604000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100575
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100575
*3
$5
LPUSH
$15
list:article:id
$6
100575
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100575
*4
$4
HSET
$22
hash:article:by:100183
$2
id
$6
100183
*4
$4
HSET
$22
hash:article:by:100183
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100183
$9
articleId
$4
2722
*4
$4
HSET
$22
hash:article:by:100183
$5
title
$27
Linux下搭建JavaWEB环境
*4
$4
HSET
$22
hash:article:by:100183
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100183
$8
labelIds
$7
[74,21]
*4
$4
HSET
$22
hash:article:by:100183
$6
digest
$169
Linux下搭建JavaWEB环境标签（空格分隔）： web1.安装JDK8首先使用wget下载jdk的安装包.这里下载tar.gz格式的.wget http://download.oracle.co...
*4
$4
HSET
$22
hash:article:by:100183
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100183
$7
content
$41
csdn/java/1_0_1_18_1504265326.645923.html
*4
$4
HSET
$22
hash:article:by:100183
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100183
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100183
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100183
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100183
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100183
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100183
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100183
$10
createTime
$13
1476946823000
*4
$4
HSET
$22
hash:article:by:100183
$11
releaseTime
$13
1476946823000
*4
$4
HSET
$22
hash:article:by:100183
$10
updateTime
$13
1476946823000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100183
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100183
*3
$5
LPUSH
$15
list:article:id
$6
100183
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100183
*4
$4
HSET
$22
hash:article:by:100210
$2
id
$6
100210
*4
$4
HSET
$22
hash:article:by:100210
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100210
$9
articleId
$4
2470
*4
$4
HSET
$22
hash:article:by:100210
$5
title
$39
一天一个设计模式---组合模式
*4
$4
HSET
$22
hash:article:by:100210
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100210
$8
labelIds
$11
[12,97,188]
*4
$4
HSET
$22
hash:article:by:100210
$6
digest
$149
我们平时常用的dom4j框架其实其中就使用了组合模式来实现各个节点。我们就大致模仿，制作一个简单的xml框架。
*4
$4
HSET
$22
hash:article:by:100210
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100210
$7
content
$40
csdn/java/1_0_1_7_1504264778.995822.html
*4
$4
HSET
$22
hash:article:by:100210
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100210
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100210
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100210
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100210
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100210
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100210
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100210
$10
createTime
$13
1476712837000
*4
$4
HSET
$22
hash:article:by:100210
$11
releaseTime
$13
1476712837000
*4
$4
HSET
$22
hash:article:by:100210
$10
updateTime
$13
1476712837000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100210
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100210
*3
$5
LPUSH
$15
list:article:id
$6
100210
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100210
*4
$4
HSET
$22
hash:article:by:100505
$2
id
$6
100505
*4
$4
HSET
$22
hash:article:by:100505
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100505
$9
articleId
$4
2715
*4
$4
HSET
$22
hash:article:by:100505
$5
title
$42
Spring Boot学习记录(四)--问题记录
*4
$4
HSET
$22
hash:article:by:100505
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100505
$8
labelIds
$4
[59]
*4
$4
HSET
$22
hash:article:by:100505
$6
digest
$173
记录spring boot出现的一些奇奇怪怪的问题解决方案.1.文件上传,临时文件夹无效问题异常信息:Caused by: java.io.IOException: The temporary upl...
*4
$4
HSET
$22
hash:article:by:100505
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100505
$7
content
$41
csdn/java/1_0_1_19_1504265319.165465.html
*4
$4
HSET
$22
hash:article:by:100505
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100505
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100505
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100505
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100505
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100505
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100505
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100505
$10
createTime
$13
1476651632000
*4
$4
HSET
$22
hash:article:by:100505
$11
releaseTime
$13
1476651632000
*4
$4
HSET
$22
hash:article:by:100505
$10
updateTime
$13
1476651632000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100505
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100505
*3
$5
LPUSH
$15
list:article:id
$6
100505
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100505
*4
$4
HSET
$22
hash:article:by:100616
$2
id
$6
100616
*4
$4
HSET
$22
hash:article:by:100616
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100616
$9
articleId
$4
2081
*4
$4
HSET
$22
hash:article:by:100616
$5
title
$18
模板方法模式
*4
$4
HSET
$22
hash:article:by:100616
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100616
$8
labelIds
$19
[88,570,571,572,41]
*4
$4
HSET
$22
hash:article:by:100616
$6
digest
$281
定义一个操作中的算法的骨架, 而将一些步骤延迟到子类中. 模板方法使得子类可以在不改变一个算法的结构的前提下重定义该算法的某些特定步骤. 
 
处理某个流程的骨架代码已经具备, 但其中某节点的具体实现...
*4
$4
HSET
$22
hash:article:by:100616
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100616
$7
content
$40
csdn/java/1_0_1_5_1504264419.681913.html
*4
$4
HSET
$22
hash:article:by:100616
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100616
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100616
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100616
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100616
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100616
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100616
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100616
$10
createTime
$13
1476630018000
*4
$4
HSET
$22
hash:article:by:100616
$11
releaseTime
$13
1476630018000
*4
$4
HSET
$22
hash:article:by:100616
$10
updateTime
$13
1476630018000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100616
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100616
*3
$5
LPUSH
$15
list:article:id
$6
100616
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100616
*4
$4
HSET
$22
hash:article:by:100165
$2
id
$6
100165
*4
$4
HSET
$22
hash:article:by:100165
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100165
$9
articleId
$4
2469
*4
$4
HSET
$22
hash:article:by:100165
$5
title
$39
一天一个设计模式---桥接模式
*4
$4
HSET
$22
hash:article:by:100165
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100165
$8
labelIds
$11
[89,12,151]
*4
$4
HSET
$22
hash:article:by:100165
$6
digest
$267
举个桥梁的例子来说明。首先，说下原来的业务，中国建筑师只会造中国桥，美国建筑师会造美国桥。但是中国建筑师牛逼啊，学会了美国桥的建造。如果没有使用桥接模式，可能代码上会有很多问题。
*4
$4
HSET
$22
hash:article:by:100165
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100165
$7
content
$40
csdn/java/1_0_1_8_1504264777.991631.html
*4
$4
HSET
$22
hash:article:by:100165
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100165
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100165
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100165
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100165
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100165
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100165
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100165
$10
createTime
$13
1476453608000
*4
$4
HSET
$22
hash:article:by:100165
$11
releaseTime
$13
1476453608000
*4
$4
HSET
$22
hash:article:by:100165
$10
updateTime
$13
1476453608000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100165
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100165
*3
$5
LPUSH
$15
list:article:id
$6
100165
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100165
*4
$4
HSET
$22
hash:article:by:100597
$2
id
$6
100597
*4
$4
HSET
$22
hash:article:by:100597
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100597
$9
articleId
$4
2077
*4
$4
HSET
$22
hash:article:by:100597
$5
title
$12
命令模式
*4
$4
HSET
$22
hash:article:by:100597
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100597
$8
labelIds
$19
[12,18,555,556,557]
*4
$4
HSET
$22
hash:article:by:100597
$6
digest
$275
在对象的结构和创建问题都解决了之后,就剩下对象的行为问题了: 如果对象的行为设计的好,那么对象的行为就会更清晰,它们之间的协作效率就会提高. 
  行为型模式共有11个可供研究,它们分别是:命令模式、...
*4
$4
HSET
$22
hash:article:by:100597
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100597
$7
content
$40
csdn/java/1_0_1_6_1504264417.688749.html
*4
$4
HSET
$22
hash:article:by:100597
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100597
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100597
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100597
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100597
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100597
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100597
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100597
$10
createTime
$13
1476079228000
*4
$4
HSET
$22
hash:article:by:100597
$11
releaseTime
$13
1476079228000
*4
$4
HSET
$22
hash:article:by:100597
$10
updateTime
$13
1476079228000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100597
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100597
*3
$5
LPUSH
$15
list:article:id
$6
100597
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100597
*4
$4
HSET
$22
hash:article:by:100180
$2
id
$6
100180
*4
$4
HSET
$22
hash:article:by:100180
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100180
$9
articleId
$4
2466
*4
$4
HSET
$22
hash:article:by:100180
$5
title
$39
一天一个设计模式---原型模式
*4
$4
HSET
$22
hash:article:by:100180
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100180
$8
labelIds
$4
[12]
*4
$4
HSET
$22
hash:article:by:100180
$6
digest
$225
小米买了PSP，如果小明买的PSP和小米的使用的是同个对象，那么小明对其操作会导致小米的PSP也造成同样的改变。为了改变这种局面，我们就应该在应用中使用原型模式。
*4
$4
HSET
$22
hash:article:by:100180
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100180
$7
content
$40
csdn/java/1_0_1_9_1504264774.898729.html
*4
$4
HSET
$22
hash:article:by:100180
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100180
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100180
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100180
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100180
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100180
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100180
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100180
$10
createTime
$13
1475956834000
*4
$4
HSET
$22
hash:article:by:100180
$11
releaseTime
$13
1475956834000
*4
$4
HSET
$22
hash:article:by:100180
$10
updateTime
$13
1475956834000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100180
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100180
*3
$5
LPUSH
$15
list:article:id
$6
100180
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100180
*4
$4
HSET
$22
hash:article:by:100319
$2
id
$6
100319
*4
$4
HSET
$22
hash:article:by:100319
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100319
$9
articleId
$4
2599
*4
$4
HSET
$22
hash:article:by:100319
$5
title
$37
javaEE防盗版-ProGuard 混淆技术
*4
$4
HSET
$22
hash:article:by:100319
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100319
$8
labelIds
$15
[321,322,18,79]
*4
$4
HSET
$22
hash:article:by:100319
$6
digest
$253
这里介绍一些java的混淆技术。混淆主要是为了保护产权，增加代码反编译后的阅读难度。


本文介绍的是ProGuard来进行代码混淆，集成在Maven环境中。常规环境的混淆技术以后再做介绍了


PO...
*4
$4
HSET
$22
hash:article:by:100319
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100319
$7
content
$40
csdn/java/1_0_1_2_1504265074.009081.html
*4
$4
HSET
$22
hash:article:by:100319
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100319
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100319
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100319
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100319
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100319
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100319
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100319
$10
createTime
$13
1475067603000
*4
$4
HSET
$22
hash:article:by:100319
$11
releaseTime
$13
1475067603000
*4
$4
HSET
$22
hash:article:by:100319
$10
updateTime
$13
1475067603000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100319
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100319
*3
$5
LPUSH
$15
list:article:id
$6
100319
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100319
*4
$4
HSET
$22
hash:article:by:100643
$2
id
$6
100643
*4
$4
HSET
$22
hash:article:by:100643
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100643
$9
articleId
$4
2459
*4
$4
HSET
$22
hash:article:by:100643
$5
title
$42
一天一个设计模式---生成器模式
*4
$4
HSET
$22
hash:article:by:100643
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100643
$8
labelIds
$4
[12]
*4
$4
HSET
$22
hash:article:by:100643
$6
digest
$303
玩过《我的世界》这类沙盒游戏的玩家，很多都是冲着其开放式的制作功能去的。比如，我们要建造一个房子就需要很多东西。使得同样的构建过程可以创建不同的表示场景：我们在创建对象时可能会碰到过一个问题，比如，如...
*4
$4
HSET
$22
hash:article:by:100643
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100643
$7
content
$41
csdn/java/1_0_1_10_1504264768.147976.html
*4
$4
HSET
$22
hash:article:by:100643
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100643
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100643
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100643
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100643
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100643
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100643
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100643
$10
createTime
$13
1475006433000
*4
$4
HSET
$22
hash:article:by:100643
$11
releaseTime
$13
1475006433000
*4
$4
HSET
$22
hash:article:by:100643
$10
updateTime
$13
1475006433000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100643
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100643
*3
$5
LPUSH
$15
list:article:id
$6
100643
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100643
*4
$4
HSET
$22
hash:article:by:100247
$2
id
$6
100247
*4
$4
HSET
$22
hash:article:by:100247
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100247
$9
articleId
$4
2464
*4
$4
HSET
$22
hash:article:by:100247
$5
title
$45
一天一个设计模式---模板方法模式
*4
$4
HSET
$22
hash:article:by:100247
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100247
$8
labelIds
$4
[12]
*4
$4
HSET
$22
hash:article:by:100247
$6
digest
$225
对于多个业务，它们的业务中有很多功能是相似的，有部分功能需要独自实现。这样我们就可以使用模板方法模式，将功能打散，抽取出更小的功能块，并减少重复代码。
*4
$4
HSET
$22
hash:article:by:100247
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100247
$7
content
$40
csdn/java/1_0_1_11_1504264773.11834.html
*4
$4
HSET
$22
hash:article:by:100247
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100247
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100247
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100247
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100247
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100247
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100247
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100247
$10
createTime
$13
1474902021000
*4
$4
HSET
$22
hash:article:by:100247
$11
releaseTime
$13
1474902021000
*4
$4
HSET
$22
hash:article:by:100247
$10
updateTime
$13
1474902021000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100247
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100247
*3
$5
LPUSH
$15
list:article:id
$6
100247
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100247
*4
$4
HSET
$22
hash:article:by:100733
$2
id
$6
100733
*4
$4
HSET
$22
hash:article:by:100733
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100733
$9
articleId
$4
2391
*4
$4
HSET
$22
hash:article:by:100733
$5
title
$31
SSM整合+Dubbo+zookeeper-3.4.6
*4
$4
HSET
$22
hash:article:by:100733
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100733
$8
labelIds
$14
[695,7,304,18]
*4
$4
HSET
$22
hash:article:by:100733
$6
digest
$253
最近刚好有点时间，特意来整合一下项目，以后会陆续把前端框架和一些组件也给整合进去，今天就先来整合一下SSM+mysql+dubbo+zookeeper来做一个用户列表功能。关于理论性的知识，大家可以自...
*4
$4
HSET
$22
hash:article:by:100733
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100733
$7
content
$40
csdn/java/1_2_1_10_1504264699.23045.html
*4
$4
HSET
$22
hash:article:by:100733
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100733
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100733
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100733
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100733
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100733
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100733
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100733
$10
createTime
$13
1474642807000
*4
$4
HSET
$22
hash:article:by:100733
$11
releaseTime
$13
1474642807000
*4
$4
HSET
$22
hash:article:by:100733
$10
updateTime
$13
1474642807000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100733
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100733
*3
$5
LPUSH
$15
list:article:id
$6
100733
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100733
*4
$4
HSET
$22
hash:article:by:100660
$2
id
$6
100660
*4
$4
HSET
$22
hash:article:by:100660
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100660
$9
articleId
$4
2465
*4
$4
HSET
$22
hash:article:by:100660
$5
title
$39
一天一个设计模式---策略模式
*4
$4
HSET
$22
hash:article:by:100660
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100660
$8
labelIds
$4
[12]
*4
$4
HSET
$22
hash:article:by:100660
$6
digest
$262
一套好的VR设备是十分昂贵的，在初期设备的价格高于官方报价。过了一段时间，卖家会降价，再过段时间，VR的势头过去，堆积的商品会进行促销。这里就可以使用策略模式来解决价格变动的问题。
*4
$4
HSET
$22
hash:article:by:100660
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100660
$7
content
$41
csdn/java/1_0_1_12_1504264773.966487.html
*4
$4
HSET
$22
hash:article:by:100660
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100660
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100660
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100660
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100660
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100660
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100660
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100660
$10
createTime
$13
1474473650000
*4
$4
HSET
$22
hash:article:by:100660
$11
releaseTime
$13
1474473650000
*4
$4
HSET
$22
hash:article:by:100660
$10
updateTime
$13
1474473650000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100660
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100660
*3
$5
LPUSH
$15
list:article:id
$6
100660
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100660
*4
$4
HSET
$22
hash:article:by:100194
$2
id
$6
100194
*4
$4
HSET
$22
hash:article:by:100194
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100194
$9
articleId
$4
2463
*4
$4
HSET
$22
hash:article:by:100194
$5
title
$39
一天一个设计模式---状态模式
*4
$4
HSET
$22
hash:article:by:100194
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100194
$8
labelIds
$4
[12]
*4
$4
HSET
$22
hash:article:by:100194
$6
digest
$138
有些生存类游戏，比如《饥荒》中树木生长就是一个非常复杂的过程。现在我们就来模拟树木生长过程。
*4
$4
HSET
$22
hash:article:by:100194
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100194
$7
content
$41
csdn/java/1_0_1_13_1504264771.998414.html
*4
$4
HSET
$22
hash:article:by:100194
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100194
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100194
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100194
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100194
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100194
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100194
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100194
$10
createTime
$13
1474401639000
*4
$4
HSET
$22
hash:article:by:100194
$11
releaseTime
$13
1474401639000
*4
$4
HSET
$22
hash:article:by:100194
$10
updateTime
$13
1474401639000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100194
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100194
*3
$5
LPUSH
$15
list:article:id
$6
100194
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100194
*4
$4
HSET
$22
hash:article:by:100656
$2
id
$6
100656
*4
$4
HSET
$22
hash:article:by:100656
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100656
$9
articleId
$4
2079
*4
$4
HSET
$22
hash:article:by:100656
$5
title
$12
享元模式
*4
$4
HSET
$22
hash:article:by:100656
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100656
$8
labelIds
$20
[609,215,12,610,611]
*4
$4
HSET
$22
hash:article:by:100656
$6
digest
$227
享元模式标签 ： Java与设计模式
  内存属于稀缺资源, 不能随便浪费. 如果有很多相同/相似的对象, 我们可以通过享元节省内存.
内部状态 vs. 外部状态
  享元模式(Flyweight):...
*4
$4
HSET
$22
hash:article:by:100656
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100656
$7
content
$40
csdn/java/1_0_1_7_1504264418.595442.html
*4
$4
HSET
$22
hash:article:by:100656
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100656
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100656
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100656
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100656
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100656
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100656
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100656
$10
createTime
$13
1474351247000
*4
$4
HSET
$22
hash:article:by:100656
$11
releaseTime
$13
1474351247000
*4
$4
HSET
$22
hash:article:by:100656
$10
updateTime
$13
1474351247000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100656
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100656
*3
$5
LPUSH
$15
list:article:id
$6
100656
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100656
*4
$4
HSET
$22
hash:article:by:100156
$2
id
$6
100156
*4
$4
HSET
$22
hash:article:by:100156
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100156
$9
articleId
$4
2460
*4
$4
HSET
$22
hash:article:by:100156
$5
title
$42
一天一个设计模式---适配器模式
*4
$4
HSET
$22
hash:article:by:100156
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100156
$8
labelIds
$4
[12]
*4
$4
HSET
$22
hash:article:by:100156
$6
digest
$129
小明从香港买了港版的iphone7 puls，回家发现插头用不了，但是通过转换头我们就能解决这个问题。
*4
$4
HSET
$22
hash:article:by:100156
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100156
$7
content
$41
csdn/java/1_0_1_14_1504264768.983949.html
*4
$4
HSET
$22
hash:article:by:100156
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100156
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100156
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100156
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100156
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100156
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100156
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100156
$10
createTime
$13
1473840040000
*4
$4
HSET
$22
hash:article:by:100156
$11
releaseTime
$13
1473840040000
*4
$4
HSET
$22
hash:article:by:100156
$10
updateTime
$13
1473840040000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100156
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100156
*3
$5
LPUSH
$15
list:article:id
$6
100156
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100156
*4
$4
HSET
$22
hash:article:by:100186
$2
id
$6
100186
*4
$4
HSET
$22
hash:article:by:100186
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100186
$9
articleId
$4
2462
*4
$4
HSET
$22
hash:article:by:100186
$5
title
$42
一天一个设计模式---观察者模式
*4
$4
HSET
$22
hash:article:by:100186
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100186
$8
labelIds
$4
[12]
*4
$4
HSET
$22
hash:article:by:100186
$6
digest
$81
班里的同学在玩手机，聊天，而殊不知老师就在窗边观察着。
*4
$4
HSET
$22
hash:article:by:100186
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100186
$7
content
$40
csdn/java/1_0_1_15_1504264770.91447.html
*4
$4
HSET
$22
hash:article:by:100186
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100186
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100186
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100186
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100186
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100186
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100186
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100186
$10
createTime
$13
1473627656000
*4
$4
HSET
$22
hash:article:by:100186
$11
releaseTime
$13
1473627656000
*4
$4
HSET
$22
hash:article:by:100186
$10
updateTime
$13
1473627656000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100186
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100186
*3
$5
LPUSH
$15
list:article:id
$6
100186
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100186
*4
$4
HSET
$22
hash:article:by:100116
$2
id
$6
100116
*4
$4
HSET
$22
hash:article:by:100116
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100116
$9
articleId
$4
2297
*4
$4
HSET
$22
hash:article:by:100116
$5
title
$29
HeadFirst 设计模式 笔记
*4
$4
HSET
$22
hash:article:by:100116
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100116
$8
labelIds
$4
[12]
*4
$4
HSET
$22
hash:article:by:100116
$6
digest
$263
设计原则
1. 找出应用中可能需要变化之处，把它们独立出来，不要和那些不需要变化的代码混在一起。
2. 针对接口编程，而不是针对实现编程。
       针对接口编程，实质上是指针对超类型(su...
*4
$4
HSET
$22
hash:article:by:100116
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100116
$7
content
$40
csdn/java/1_0_2_5_1504264612.047209.html
*4
$4
HSET
$22
hash:article:by:100116
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100116
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100116
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100116
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100116
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100116
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100116
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100116
$10
createTime
$13
1473526800000
*4
$4
HSET
$22
hash:article:by:100116
$11
releaseTime
$13
1473526800000
*4
$4
HSET
$22
hash:article:by:100116
$10
updateTime
$13
1473526800000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100116
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100116
*3
$5
LPUSH
$15
list:article:id
$6
100116
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100116
*4
$4
HSET
$22
hash:article:by:100150
$2
id
$6
100150
*4
$4
HSET
$22
hash:article:by:100150
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100150
$9
articleId
$4
2563
*4
$4
HSET
$22
hash:article:by:100150
$5
title
$39
Spring Boot 中应用Spring data mongdb
*4
$4
HSET
$22
hash:article:by:100150
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100150
$8
labelIds
$17
[137,138,139,140]
*4
$4
HSET
$22
hash:article:by:100150
$6
digest
$205
摘要本文主要简单介绍下如何在Spring Boot 项目中使用Spring data mongdb.没有深入探究，仅供入门参考。 
文末有代码链接准备安装mongodb 
需要连接mongodb，所以...
*4
$4
HSET
$22
hash:article:by:100150
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100150
$7
content
$40
csdn/java/1_1_1_3_1504264961.317322.html
*4
$4
HSET
$22
hash:article:by:100150
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100150
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100150
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100150
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100150
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100150
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100150
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100150
$10
createTime
$13
1473505248000
*4
$4
HSET
$22
hash:article:by:100150
$11
releaseTime
$13
1473505248000
*4
$4
HSET
$22
hash:article:by:100150
$10
updateTime
$13
1473505248000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100150
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100150
*3
$5
LPUSH
$15
list:article:id
$6
100150
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100150
*4
$4
HSET
$22
hash:article:by:100123
$2
id
$6
100123
*4
$4
HSET
$22
hash:article:by:100123
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100123
$9
articleId
$4
2461
*4
$4
HSET
$22
hash:article:by:100123
$5
title
$42
一天一个设计模式---装饰者模式
*4
$4
HSET
$22
hash:article:by:100123
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100123
$8
labelIds
$4
[12]
*4
$4
HSET
$22
hash:article:by:100123
$6
digest
$63
通过奶茶哥哥开奶茶店的例子来说说装饰者模式
*4
$4
HSET
$22
hash:article:by:100123
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100123
$7
content
$41
csdn/java/1_0_1_16_1504264769.980433.html
*4
$4
HSET
$22
hash:article:by:100123
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100123
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100123
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100123
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100123
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100123
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100123
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100123
$10
createTime
$13
1473433218000
*4
$4
HSET
$22
hash:article:by:100123
$11
releaseTime
$13
1473433218000
*4
$4
HSET
$22
hash:article:by:100123
$10
updateTime
$13
1473433218000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100123
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100123
*3
$5
LPUSH
$15
list:article:id
$6
100123
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100123
*4
$4
HSET
$22
hash:article:by:100703
$2
id
$6
100703
*4
$4
HSET
$22
hash:article:by:100703
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100703
$9
articleId
$4
2054
*4
$4
HSET
$22
hash:article:by:100703
$5
title
$15
观察者模式
*4
$4
HSET
$22
hash:article:by:100703
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100703
$8
labelIds
$21
[663,664,665,666,667]
*4
$4
HSET
$22
hash:article:by:100703
$6
digest
$235
观察者模式标签 ： Java与设计模式
  观察者模式: 又称‘发布-订阅’模式, 定义一种对象间的一对多依赖关系(多个观察者Observer监听某一主题Subject). 当主题状态发生改变时,所有...
*4
$4
HSET
$22
hash:article:by:100703
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100703
$7
content
$40
csdn/java/1_0_1_8_1504264403.443837.html
*4
$4
HSET
$22
hash:article:by:100703
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100703
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100703
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100703
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100703
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100703
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100703
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100703
$10
createTime
$13
1473408048000
*4
$4
HSET
$22
hash:article:by:100703
$11
releaseTime
$13
1473408048000
*4
$4
HSET
$22
hash:article:by:100703
$10
updateTime
$13
1473408048000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100703
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100703
*3
$5
LPUSH
$15
list:article:id
$6
100703
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100703
*4
$4
HSET
$22
hash:article:by:100374
$2
id
$6
100374
*4
$4
HSET
$22
hash:article:by:100374
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100374
$9
articleId
$4
2457
*4
$4
HSET
$22
hash:article:by:100374
$5
title
$45
一天一个设计模式---抽象工厂模式
*4
$4
HSET
$22
hash:article:by:100374
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100374
$8
labelIds
$8
[361,12]
*4
$4
HSET
$22
hash:article:by:100374
$6
digest
$59
继续上篇文章讲述Pizza供应商和工厂的故事。
*4
$4
HSET
$22
hash:article:by:100374
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100374
$7
content
$41
csdn/java/1_0_1_17_1504264765.932739.html
*4
$4
HSET
$22
hash:article:by:100374
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100374
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100374
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100374
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100374
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100374
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100374
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100374
$10
createTime
$13
1473339655000
*4
$4
HSET
$22
hash:article:by:100374
$11
releaseTime
$13
1473339655000
*4
$4
HSET
$22
hash:article:by:100374
$10
updateTime
$13
1473339655000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100374
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100374
*3
$5
LPUSH
$15
list:article:id
$6
100374
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100374
*4
$4
HSET
$22
hash:article:by:100151
$2
id
$6
100151
*4
$4
HSET
$22
hash:article:by:100151
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100151
$9
articleId
$4
2455
*4
$4
HSET
$22
hash:article:by:100151
$5
title
$39
一天一个设计模式---享元模式
*4
$4
HSET
$22
hash:article:by:100151
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100151
$8
labelIds
$8
[12,141]
*4
$4
HSET
$22
hash:article:by:100151
$6
digest
$246
这是在这么多种设计模式中极少的以提高程序性能为目的的模式。其主要思想为—如果系统中存在多个相同对象，那么只需要一份对象的拷贝，而不必在每次使用的时候去新建一个对象。
*4
$4
HSET
$22
hash:article:by:100151
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100151
$7
content
$41
csdn/java/1_0_1_18_1504264764.008791.html
*4
$4
HSET
$22
hash:article:by:100151
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100151
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100151
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100151
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100151
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100151
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100151
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100151
$10
createTime
$13
1473249627000
*4
$4
HSET
$22
hash:article:by:100151
$11
releaseTime
$13
1473249627000
*4
$4
HSET
$22
hash:article:by:100151
$10
updateTime
$13
1473249627000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100151
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100151
*3
$5
LPUSH
$15
list:article:id
$6
100151
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100151
*4
$4
HSET
$22
hash:article:by:100492
$2
id
$6
100492
*4
$4
HSET
$22
hash:article:by:100492
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100492
$9
articleId
$4
2746
*4
$4
HSET
$22
hash:article:by:100492
$5
title
$46
SpringBoot实战记录(一)--MarkdownViewTools
*4
$4
HSET
$22
hash:article:by:100492
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100492
$8
labelIds
$5
[137]
*4
$4
HSET
$22
hash:article:by:100492
$6
digest
$207
SpringBoot实战记录(一)–MarkdownViewTools标签（空格分隔）： spring-boot在公司开发过程中,后端人员维护接口文档,前端妹子只看文档,两者通过SVN中转,一来一去每...
*4
$4
HSET
$22
hash:article:by:100492
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100492
$7
content
$40
csdn/java/1_0_2_0_1504265356.667764.html
*4
$4
HSET
$22
hash:article:by:100492
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100492
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100492
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100492
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100492
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100492
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100492
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100492
$10
createTime
$13
1473199250000
*4
$4
HSET
$22
hash:article:by:100492
$11
releaseTime
$13
1473199250000
*4
$4
HSET
$22
hash:article:by:100492
$10
updateTime
$13
1473199250000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100492
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100492
*3
$5
LPUSH
$15
list:article:id
$6
100492
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100492
*4
$4
HSET
$22
hash:article:by:100303
$2
id
$6
100303
*4
$4
HSET
$22
hash:article:by:100303
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100303
$9
articleId
$4
2118
*4
$4
HSET
$22
hash:article:by:100303
$5
title
$106
JavaEE框架——Springmvc入门(注解URL核心类详解、文件上传和下载）、和Spring的整合
*4
$4
HSET
$22
hash:article:by:100303
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100303
$8
labelIds
$19
[27,304,305,306,59]
*4
$4
HSET
$22
hash:article:by:100303
$6
digest
$185
一、简介：

Spring MVC属于SpringFrameWork的后续产品，已经融合在Spring Web Flow里面。Spring 框架提供了构建 Web 应用程序的全功能 MVC 模块。使用...
*4
$4
HSET
$22
hash:article:by:100303
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100303
$7
content
$40
csdn/java/1_0_1_0_1504264454.950341.html
*4
$4
HSET
$22
hash:article:by:100303
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100303
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100303
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100303
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100303
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100303
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100303
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100303
$10
createTime
$13
1472983233000
*4
$4
HSET
$22
hash:article:by:100303
$11
releaseTime
$13
1472983233000
*4
$4
HSET
$22
hash:article:by:100303
$10
updateTime
$13
1472983233000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100303
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100303
*3
$5
LPUSH
$15
list:article:id
$6
100303
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100303
*4
$4
HSET
$22
hash:article:by:100648
$2
id
$6
100648
*4
$4
HSET
$22
hash:article:by:100648
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100648
$9
articleId
$4
2060
*4
$4
HSET
$22
hash:article:by:100648
$5
title
$12
外观模式
*4
$4
HSET
$22
hash:article:by:100648
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100648
$8
labelIds
$20
[12,245,601,602,603]
*4
$4
HSET
$22
hash:article:by:100648
$6
digest
$259
外观模式标签 ： Java与设计模式
  外观模式: 又称门面模式: 外观Facade为子系统的一组接口提供一个一致界面,使得这组子系统易于使用(通过引入一个新的外观角色降低原系统复杂度,同时降低客户...
*4
$4
HSET
$22
hash:article:by:100648
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100648
$7
content
$40
csdn/java/1_0_1_9_1504264408.638618.html
*4
$4
HSET
$22
hash:article:by:100648
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100648
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100648
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100648
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100648
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100648
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100648
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100648
$10
createTime
$13
1472878853000
*4
$4
HSET
$22
hash:article:by:100648
$11
releaseTime
$13
1472878853000
*4
$4
HSET
$22
hash:article:by:100648
$10
updateTime
$13
1472878853000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100648
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100648
*3
$5
LPUSH
$15
list:article:id
$6
100648
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100648
*4
$4
HSET
$22
hash:article:by:100142
$2
id
$6
100142
*4
$4
HSET
$22
hash:article:by:100142
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100142
$9
articleId
$4
2456
*4
$4
HSET
$22
hash:article:by:100142
$5
title
$39
一天一个设计模式---代理模式
*4
$4
HSET
$22
hash:article:by:100142
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100142
$8
labelIds
$4
[12]
*4
$4
HSET
$22
hash:article:by:100142
$6
digest
$152
让我通过成龙大哥和经纪人的故事来讲解静态代理。通过JDK动态代理和CGLIB动态代理详细说明动态代理的实现方法。
*4
$4
HSET
$22
hash:article:by:100142
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100142
$7
content
$41
csdn/java/1_0_1_19_1504264764.951108.html
*4
$4
HSET
$22
hash:article:by:100142
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100142
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100142
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100142
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100142
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100142
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100142
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100142
$10
createTime
$13
1472857253000
*4
$4
HSET
$22
hash:article:by:100142
$11
releaseTime
$13
1472857253000
*4
$4
HSET
$22
hash:article:by:100142
$10
updateTime
$13
1472857253000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100142
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100142
*3
$5
LPUSH
$15
list:article:id
$6
100142
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100142
*4
$4
HSET
$22
hash:article:by:100584
$2
id
$6
100584
*4
$4
HSET
$22
hash:article:by:100584
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100584
$9
articleId
$4
2069
*4
$4
HSET
$22
hash:article:by:100584
$5
title
$12
组合模式
*4
$4
HSET
$22
hash:article:by:100584
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100584
$8
labelIds
$20
[12,540,541,364,542]
*4
$4
HSET
$22
hash:article:by:100584
$6
digest
$269
组合模式标签 ： Java与设计模式
  组合模式: 将对象组合成树形结构以表示‘部分-整体’的层次结构, 使得用户对单个对象和组合对象的使用具有一致性.解析 
组合模式描述了如何将容器和叶子节点进行...
*4
$4
HSET
$22
hash:article:by:100584
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100584
$7
content
$41
csdn/java/1_0_1_10_1504264412.817709.html
*4
$4
HSET
$22
hash:article:by:100584
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100584
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100584
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100584
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100584
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100584
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100584
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100584
$10
createTime
$13
1472792418000
*4
$4
HSET
$22
hash:article:by:100584
$11
releaseTime
$13
1472792418000
*4
$4
HSET
$22
hash:article:by:100584
$10
updateTime
$13
1472792418000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100584
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100584
*3
$5
LPUSH
$15
list:article:id
$6
100584
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100584
*4
$4
HSET
$22
hash:article:by:100161
$2
id
$6
100161
*4
$4
HSET
$22
hash:article:by:100161
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100161
$9
articleId
$4
2473
*4
$4
HSET
$22
hash:article:by:100161
$5
title
$39
一天一个设计模式---单例模式
*4
$4
HSET
$22
hash:article:by:100161
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100161
$8
labelIds
$4
[12]
*4
$4
HSET
$22
hash:article:by:100161
$6
digest
$117
介绍单利模式的主要思想、优点。使用基本的懒汉式和饿汉式的相关实例代码具体说明。
*4
$4
HSET
$22
hash:article:by:100161
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100161
$7
content
$40
csdn/java/1_0_2_0_1504264783.117375.html
*4
$4
HSET
$22
hash:article:by:100161
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100161
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100161
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100161
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100161
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100161
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100161
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100161
$10
createTime
$13
1472673612000
*4
$4
HSET
$22
hash:article:by:100161
$11
releaseTime
$13
1472673612000
*4
$4
HSET
$22
hash:article:by:100161
$10
updateTime
$13
1472673612000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100161
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100161
*3
$5
LPUSH
$15
list:article:id
$6
100161
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100161
*4
$4
HSET
$22
hash:article:by:100460
$2
id
$6
100460
*4
$4
HSET
$22
hash:article:by:100460
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100460
$9
articleId
$4
2453
*4
$4
HSET
$22
hash:article:by:100460
$5
title
$48
一天一个设计模式---分类与六大原则
*4
$4
HSET
$22
hash:article:by:100460
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100460
$8
labelIds
$4
[12]
*4
$4
HSET
$22
hash:article:by:100460
$6
digest
$176
介绍23中设计模式的分类方式，结合《设计模式》一书的插图更加明显。详细说明设计模式中的六大原则，结合场景分析其解决方案。
*4
$4
HSET
$22
hash:article:by:100460
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100460
$7
content
$40
csdn/java/1_0_1_0_1504264761.935354.html
*4
$4
HSET
$22
hash:article:by:100460
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100460
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100460
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100460
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100460
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100460
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100460
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100460
$10
createTime
$13
1472648437000
*4
$4
HSET
$22
hash:article:by:100460
$11
releaseTime
$13
1472648437000
*4
$4
HSET
$22
hash:article:by:100460
$10
updateTime
$13
1472648437000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100460
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100460
*3
$5
LPUSH
$15
list:article:id
$6
100460
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100460
*4
$4
HSET
$22
hash:article:by:100169
$2
id
$6
100169
*4
$4
HSET
$22
hash:article:by:100169
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100169
$9
articleId
$4
2135
*4
$4
HSET
$22
hash:article:by:100169
$5
title
$75
JavaEE框架——Spring入门基础（控制反转Ioc和切面技术Aop）
*4
$4
HSET
$22
hash:article:by:100169
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100169
$8
labelIds
$15
[59,72,115,102]
*4
$4
HSET
$22
hash:article:by:100169
$6
digest
$211
一.简介：
     
Spring在英语中含义是春天，对于JavaEE开发者来说，Spring框架出现确实带来了一股全新的春天的气息。早在2002年，Rod
 Johson在其编著的《Expert ...
*4
$4
HSET
$22
hash:article:by:100169
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100169
$7
content
$40
csdn/java/1_0_1_1_1504264465.014702.html
*4
$4
HSET
$22
hash:article:by:100169
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100169
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100169
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100169
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100169
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100169
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100169
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100169
$10
createTime
$13
1472601626000
*4
$4
HSET
$22
hash:article:by:100169
$11
releaseTime
$13
1472601626000
*4
$4
HSET
$22
hash:article:by:100169
$10
updateTime
$13
1472601626000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100169
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100169
*3
$5
LPUSH
$15
list:article:id
$6
100169
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100169
*4
$4
HSET
$22
hash:article:by:100270
$2
id
$6
100270
*4
$4
HSET
$22
hash:article:by:100270
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100270
$9
articleId
$4
2151
*4
$4
HSET
$22
hash:article:by:100270
$5
title
$31
JavaEE框架——struts2入门
*4
$4
HSET
$22
hash:article:by:100270
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100270
$8
labelIds
$20
[72,128,268,115,102]
*4
$4
HSET
$22
hash:article:by:100270
$6
digest
$173
1.strust简介（发展）：
大概的流行时间：2010前后各3年
※有两个版本：Struts1，Struts2
       Struts1: 采用servlet机制，JSP+Action(Serv...
*4
$4
HSET
$22
hash:article:by:100270
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100270
$7
content
$40
csdn/java/1_0_1_2_1504264474.623054.html
*4
$4
HSET
$22
hash:article:by:100270
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100270
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100270
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100270
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100270
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100270
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100270
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100270
$10
createTime
$13
1472565600000
*4
$4
HSET
$22
hash:article:by:100270
$11
releaseTime
$13
1472565600000
*4
$4
HSET
$22
hash:article:by:100270
$10
updateTime
$13
1472565600000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100270
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100270
*3
$5
LPUSH
$15
list:article:id
$6
100270
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100270
*4
$4
HSET
$22
hash:article:by:100159
$2
id
$6
100159
*4
$4
HSET
$22
hash:article:by:100159
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100159
$9
articleId
$4
2124
*4
$4
HSET
$22
hash:article:by:100159
$5
title
$48
JavaEE框架——hibernate框架的综合使用
*4
$4
HSET
$22
hash:article:by:100159
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100159
$8
labelIds
$16
[142,72,143,102]
*4
$4
HSET
$22
hash:article:by:100159
$6
digest
$205
hibernate框架的综合使用——通过使用hibernate框架多数据库的单表和多表进行增删改查，下面是详细代码1.先通过蚂蚁搬家Ant建立数据库 
 createTables.sqlCREATE ...
*4
$4
HSET
$22
hash:article:by:100159
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100159
$7
content
$41
csdn/java/1_0_1_13_1504264457.873037.html
*4
$4
HSET
$22
hash:article:by:100159
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100159
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100159
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100159
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100159
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100159
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100159
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100159
$10
createTime
$13
1472482858000
*4
$4
HSET
$22
hash:article:by:100159
$11
releaseTime
$13
1472482858000
*4
$4
HSET
$22
hash:article:by:100159
$10
updateTime
$13
1472482858000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100159
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100159
*3
$5
LPUSH
$15
list:article:id
$6
100159
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100159
*4
$4
HSET
$22
hash:article:by:100701
$2
id
$6
100701
*4
$4
HSET
$22
hash:article:by:100701
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100701
$9
articleId
$4
2070
*4
$4
HSET
$22
hash:article:by:100701
$5
title
$15
中介者模式
*4
$4
HSET
$22
hash:article:by:100701
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100701
$8
labelIds
$20
[656,566,12,657,658]
*4
$4
HSET
$22
hash:article:by:100701
$6
digest
$273
中介者模式标签 ： Java与设计模式面向对象设计鼓励将行为分布到各个对象中, 这种分布可能会导致对象间有许多连接. 在最坏的情况下, 每一个对象都需要知道其他所有对象. 
虽然将一个系统分割成许多对...
*4
$4
HSET
$22
hash:article:by:100701
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100701
$7
content
$41
csdn/java/1_0_1_11_1504264413.581088.html
*4
$4
HSET
$22
hash:article:by:100701
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100701
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100701
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100701
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100701
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100701
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100701
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100701
$10
createTime
$13
1472457607000
*4
$4
HSET
$22
hash:article:by:100701
$11
releaseTime
$13
1472457607000
*4
$4
HSET
$22
hash:article:by:100701
$10
updateTime
$13
1472457607000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100701
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100701
*3
$5
LPUSH
$15
list:article:id
$6
100701
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100701
*4
$4
HSET
$22
hash:article:by:100173
$2
id
$6
100173
*4
$4
HSET
$22
hash:article:by:100173
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100173
$9
articleId
$4
2700
*4
$4
HSET
$22
hash:article:by:100173
$5
title
$15
中介者模式
*4
$4
HSET
$22
hash:article:by:100173
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100173
$8
labelIds
$18
[18,130,12,85,156]
*4
$4
HSET
$22
hash:article:by:100173
$6
digest
$15
中介者模式
*4
$4
HSET
$22
hash:article:by:100173
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100173
$7
content
$40
csdn/java/1_1_1_0_1504265300.115889.html
*4
$4
HSET
$22
hash:article:by:100173
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100173
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100173
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100173
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100173
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100173
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100173
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100173
$10
createTime
$13
1472392813000
*4
$4
HSET
$22
hash:article:by:100173
$11
releaseTime
$13
1472392813000
*4
$4
HSET
$22
hash:article:by:100173
$10
updateTime
$13
1472392813000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100173
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100173
*3
$5
LPUSH
$15
list:article:id
$6
100173
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100173
*4
$4
HSET
$22
hash:article:by:100668
$2
id
$6
100668
*4
$4
HSET
$22
hash:article:by:100668
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100668
$9
articleId
$4
2062
*4
$4
HSET
$22
hash:article:by:100668
$5
title
$15
装饰者模式
*4
$4
HSET
$22
hash:article:by:100668
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100668
$8
labelIds
$17
[12,164,68,71,18]
*4
$4
HSET
$22
hash:article:by:100668
$6
digest
$243
装饰者模式(Decorator): 又称包装器(Wrapper), 可以动态地为一个对象添加一些额外的职责. 就增加功能来说, 装饰者模式是一种用于替代继承的技术, 他无须通过增加子类继承就能扩展对象...
*4
$4
HSET
$22
hash:article:by:100668
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100668
$7
content
$41
csdn/java/1_0_1_12_1504264409.581979.html
*4
$4
HSET
$22
hash:article:by:100668
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100668
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100668
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100668
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100668
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100668
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100668
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100668
$10
createTime
$13
1472367617000
*4
$4
HSET
$22
hash:article:by:100668
$11
releaseTime
$13
1472367617000
*4
$4
HSET
$22
hash:article:by:100668
$10
updateTime
$13
1472367617000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100668
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100668
*3
$5
LPUSH
$15
list:article:id
$6
100668
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100668
*4
$4
HSET
$22
hash:article:by:100307
$2
id
$6
100307
*4
$4
HSET
$22
hash:article:by:100307
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100307
$9
articleId
$4
2120
*4
$4
HSET
$22
hash:article:by:100307
$5
title
$87
JavaEE框架——hibernate的使用（关于hibernate事务的必须开启的问题）
*4
$4
HSET
$22
hash:article:by:100307
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100307
$8
labelIds
$20
[72,142,102,114,143]
*4
$4
HSET
$22
hash:article:by:100307
$6
digest
$210
一、与数据库的交互（增删改查）
注意：1.写hql语言是是对于对象操作，而不是表数据
            2.注意hibernate中的缓存

1.Hibernate 查询方式

     Hib...
*4
$4
HSET
$22
hash:article:by:100307
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100307
$7
content
$41
csdn/java/1_0_1_12_1504264455.710939.html
*4
$4
HSET
$22
hash:article:by:100307
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100307
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100307
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100307
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100307
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100307
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100307
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100307
$10
createTime
$13
1472320815000
*4
$4
HSET
$22
hash:article:by:100307
$11
releaseTime
$13
1472320815000
*4
$4
HSET
$22
hash:article:by:100307
$10
updateTime
$13
1472320815000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100307
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100307
*3
$5
LPUSH
$15
list:article:id
$6
100307
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100307
*4
$4
HSET
$22
hash:article:by:100147
$2
id
$6
100147
*4
$4
HSET
$22
hash:article:by:100147
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100147
$9
articleId
$4
2701
*4
$4
HSET
$22
hash:article:by:100147
$5
title
$12
状态模式
*4
$4
HSET
$22
hash:article:by:100147
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100147
$8
labelIds
$15
[18,130,12,131]
*4
$4
HSET
$22
hash:article:by:100147
$6
digest
$12
状态模式
*4
$4
HSET
$22
hash:article:by:100147
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100147
$7
content
$40
csdn/java/1_1_1_1_1504265301.078278.html
*4
$4
HSET
$22
hash:article:by:100147
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100147
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100147
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100147
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100147
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100147
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100147
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100147
$10
createTime
$13
1472320806000
*4
$4
HSET
$22
hash:article:by:100147
$11
releaseTime
$13
1472320806000
*4
$4
HSET
$22
hash:article:by:100147
$10
updateTime
$13
1472320806000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100147
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100147
*3
$5
LPUSH
$15
list:article:id
$6
100147
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100147
*4
$4
HSET
$22
hash:article:by:100148
$2
id
$6
100148
*4
$4
HSET
$22
hash:article:by:100148
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100148
$9
articleId
$4
2474
*4
$4
HSET
$22
hash:article:by:100148
$5
title
$27
泛型让代码安全简单
*4
$4
HSET
$22
hash:article:by:100148
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100148
$8
labelIds
$8
[18,132]
*4
$4
HSET
$22
hash:article:by:100148
$6
digest
$114
合理的使用泛型，能让代码中的类型转换更加安全，而且在写代码的时候会更加简单。
*4
$4
HSET
$22
hash:article:by:100148
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100148
$7
content
$40
csdn/java/1_0_2_1_1504264784.082509.html
*4
$4
HSET
$22
hash:article:by:100148
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100148
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100148
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100148
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100148
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100148
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100148
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100148
$10
createTime
$13
1472310050000
*4
$4
HSET
$22
hash:article:by:100148
$11
releaseTime
$13
1472310050000
*4
$4
HSET
$22
hash:article:by:100148
$10
updateTime
$13
1472310050000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100148
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100148
*3
$5
LPUSH
$15
list:article:id
$6
100148
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100148
*4
$4
HSET
$22
hash:article:by:100201
$2
id
$6
100201
*4
$4
HSET
$22
hash:article:by:100201
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100201
$9
articleId
$4
2708
*4
$4
HSET
$22
hash:article:by:100201
$5
title
$12
策略模式
*4
$4
HSET
$22
hash:article:by:100201
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100201
$8
labelIds
$18
[18,60,12,178,179]
*4
$4
HSET
$22
hash:article:by:100201
$6
digest
$12
策略模式
*4
$4
HSET
$22
hash:article:by:100201
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100201
$7
content
$40
csdn/java/1_1_1_2_1504265308.254673.html
*4
$4
HSET
$22
hash:article:by:100201
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100201
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100201
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100201
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100201
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100201
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100201
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100201
$10
createTime
$13
1472212820000
*4
$4
HSET
$22
hash:article:by:100201
$11
releaseTime
$13
1472212820000
*4
$4
HSET
$22
hash:article:by:100201
$10
updateTime
$13
1472212820000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100201
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100201
*3
$5
LPUSH
$15
list:article:id
$6
100201
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100201
*4
$4
HSET
$22
hash:article:by:100361
$2
id
$6
100361
*4
$4
HSET
$22
hash:article:by:100361
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100361
$9
articleId
$4
2475
*4
$4
HSET
$22
hash:article:by:100361
$5
title
$40
你知道这Java类型转换问题么？
*4
$4
HSET
$22
hash:article:by:100361
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100361
$8
labelIds
$4
[18]
*4
$4
HSET
$22
hash:article:by:100361
$6
digest
$84
一些我们忽视的类型转换问题，有你知道的，也有你不知道的。
*4
$4
HSET
$22
hash:article:by:100361
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100361
$7
content
$40
csdn/java/1_0_2_2_1504264785.118414.html
*4
$4
HSET
$22
hash:article:by:100361
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100361
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100361
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100361
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100361
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100361
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100361
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100361
$10
createTime
$13
1472166045000
*4
$4
HSET
$22
hash:article:by:100361
$11
releaseTime
$13
1472166045000
*4
$4
HSET
$22
hash:article:by:100361
$10
updateTime
$13
1472166045000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100361
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100361
*3
$5
LPUSH
$15
list:article:id
$6
100361
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100361
*4
$4
HSET
$22
hash:article:by:100384
$2
id
$6
100384
*4
$4
HSET
$22
hash:article:by:100384
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100384
$9
articleId
$4
2132
*4
$4
HSET
$22
hash:article:by:100384
$5
title
$33
JavaEE框架——hibernate入门
*4
$4
HSET
$22
hash:article:by:100384
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100384
$8
labelIds
$20
[72,142,115,343,374]
*4
$4
HSET
$22
hash:article:by:100384
$6
digest
$219
一、hibernate入门

1.hibernate简介：


Hibernate是一个开放源代码的对象关系映射框架，它对JDBC进行了非常轻量级的对象封装，它将POJO与数据库表建立映射关系，是一个...
*4
$4
HSET
$22
hash:article:by:100384
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100384
$7
content
$41
csdn/java/1_0_1_14_1504264462.859768.html
*4
$4
HSET
$22
hash:article:by:100384
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100384
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100384
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100384
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100384
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100384
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100384
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100384
$10
createTime
$13
1472148009000
*4
$4
HSET
$22
hash:article:by:100384
$11
releaseTime
$13
1472148009000
*4
$4
HSET
$22
hash:article:by:100384
$10
updateTime
$13
1472148009000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100384
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100384
*3
$5
LPUSH
$15
list:article:id
$6
100384
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100384
*4
$4
HSET
$22
hash:article:by:100124
$2
id
$6
100124
*4
$4
HSET
$22
hash:article:by:100124
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100124
$9
articleId
$4
2710
*4
$4
HSET
$22
hash:article:by:100124
$5
title
$18
模板方法模式
*4
$4
HSET
$22
hash:article:by:100124
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100124
$8
labelIds
$16
[18,60,12,88,61]
*4
$4
HSET
$22
hash:article:by:100124
$6
digest
$18
模板方法模式
*4
$4
HSET
$22
hash:article:by:100124
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100124
$7
content
$40
csdn/java/1_1_1_3_1504265310.346879.html
*4
$4
HSET
$22
hash:article:by:100124
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100124
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100124
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100124
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100124
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100124
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100124
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100124
$10
createTime
$13
1472133649000
*4
$4
HSET
$22
hash:article:by:100124
$11
releaseTime
$13
1472133649000
*4
$4
HSET
$22
hash:article:by:100124
$10
updateTime
$13
1472133649000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100124
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100124
*3
$5
LPUSH
$15
list:article:id
$6
100124
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100124
*4
$4
HSET
$22
hash:article:by:100198
$2
id
$6
100198
*4
$4
HSET
$22
hash:article:by:100198
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100198
$9
articleId
$4
2707
*4
$4
HSET
$22
hash:article:by:100198
$5
title
$15
适配器模式
*4
$4
HSET
$22
hash:article:by:100198
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100198
$8
labelIds
$16
[18,60,12,61,77]
*4
$4
HSET
$22
hash:article:by:100198
$6
digest
$15
适配器模式
*4
$4
HSET
$22
hash:article:by:100198
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100198
$7
content
$40
csdn/java/1_1_1_4_1504265307.313251.html
*4
$4
HSET
$22
hash:article:by:100198
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100198
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100198
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100198
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100198
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100198
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100198
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100198
$10
createTime
$13
1472115635000
*4
$4
HSET
$22
hash:article:by:100198
$11
releaseTime
$13
1472115635000
*4
$4
HSET
$22
hash:article:by:100198
$10
updateTime
$13
1472115635000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100198
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100198
*3
$5
LPUSH
$15
list:article:id
$6
100198
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100198
*4
$4
HSET
$22
hash:article:by:100347
$2
id
$6
100347
*4
$4
HSET
$22
hash:article:by:100347
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100347
$9
articleId
$4
2702
*4
$4
HSET
$22
hash:article:by:100347
$5
title
$12
外观模式
*4
$4
HSET
$22
hash:article:by:100347
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100347
$8
labelIds
$16
[18,60,12,71,61]
*4
$4
HSET
$22
hash:article:by:100347
$6
digest
$12
外观模式
*4
$4
HSET
$22
hash:article:by:100347
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100347
$7
content
$40
csdn/java/1_1_1_5_1504265302.101505.html
*4
$4
HSET
$22
hash:article:by:100347
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100347
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100347
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100347
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100347
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100347
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100347
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100347
$10
createTime
$13
1472025658000
*4
$4
HSET
$22
hash:article:by:100347
$11
releaseTime
$13
1472025658000
*4
$4
HSET
$22
hash:article:by:100347
$10
updateTime
$13
1472025658000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100347
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100347
*3
$5
LPUSH
$15
list:article:id
$6
100347
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100347
*4
$4
HSET
$22
hash:article:by:100131
$2
id
$6
100131
*4
$4
HSET
$22
hash:article:by:100131
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100131
$9
articleId
$4
2142
*4
$4
HSET
$22
hash:article:by:100131
$5
title
$39
用Ant工具管理你的Web应用程序
*4
$4
HSET
$22
hash:article:by:100131
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100131
$8
labelIds
$15
[96,18,114,115]
*4
$4
HSET
$22
hash:article:by:100131
$6
digest
$213
Ant是一种基于Java的build工具。理论上来说，它有些类似于（Unix）C中的make ，但没有make的缺陷。目前的最新版本为：Ant 1.8.1。 使用，创建一个build.xml放在项目的...
*4
$4
HSET
$22
hash:article:by:100131
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100131
$7
content
$41
csdn/java/1_0_1_11_1504264469.277065.html
*4
$4
HSET
$22
hash:article:by:100131
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100131
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100131
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100131
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100131
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100131
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100131
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100131
$10
createTime
$13
1471993253000
*4
$4
HSET
$22
hash:article:by:100131
$11
releaseTime
$13
1471993253000
*4
$4
HSET
$22
hash:article:by:100131
$10
updateTime
$13
1471993253000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100131
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100131
*3
$5
LPUSH
$15
list:article:id
$6
100131
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100131
*4
$4
HSET
$22
hash:article:by:100128
$2
id
$6
100128
*4
$4
HSET
$22
hash:article:by:100128
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100128
$9
articleId
$4
2140
*4
$4
HSET
$22
hash:article:by:100128
$5
title
$13
Ajax的使用
*4
$4
HSET
$22
hash:article:by:100128
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100128
$8
labelIds
$15
[69,108,97,109]
*4
$4
HSET
$22
hash:article:by:100128
$6
digest
$193
XmlHttp是什么？
最通用的定义为：XmlHttp是一套可以在Javascript、VbScript、Jscript等脚本语言中通过http协议传送或从接收XML及其他数据的一套API。XmlHt...
*4
$4
HSET
$22
hash:article:by:100128
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100128
$7
content
$40
csdn/java/1_0_1_10_1504264468.16971.html
*4
$4
HSET
$22
hash:article:by:100128
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100128
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100128
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100128
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100128
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100128
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100128
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100128
$10
createTime
$13
1471960825000
*4
$4
HSET
$22
hash:article:by:100128
$11
releaseTime
$13
1471960825000
*4
$4
HSET
$22
hash:article:by:100128
$10
updateTime
$13
1471960825000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100128
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100128
*3
$5
LPUSH
$15
list:article:id
$6
100128
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100128
*4
$4
HSET
$22
hash:article:by:100386
$2
id
$6
100386
*4
$4
HSET
$22
hash:article:by:100386
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100386
$9
articleId
$4
2143
*4
$4
HSET
$22
hash:article:by:100386
$5
title
$41
JavaEE——使用log4j进行日志管理
*4
$4
HSET
$22
hash:article:by:100386
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100386
$8
labelIds
$19
[24,114,72,377,143]
*4
$4
HSET
$22
hash:article:by:100386
$6
digest
$206
1、Log4j简介

  作用：
1、 跟踪代码的运行轨迹。
2、 输出调试信息

三大组成：

1、 Logger类-生成日志。
2、 Appender类-定义日志输出的目的地。...
*4
$4
HSET
$22
hash:article:by:100386
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100386
$7
content
$40
csdn/java/1_0_1_9_1504264470.231177.html
*4
$4
HSET
$22
hash:article:by:100386
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100386
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100386
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100386
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100386
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100386
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100386
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100386
$10
createTime
$13
1471903253000
*4
$4
HSET
$22
hash:article:by:100386
$11
releaseTime
$13
1471903253000
*4
$4
HSET
$22
hash:article:by:100386
$10
updateTime
$13
1471903253000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100386
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100386
*3
$5
LPUSH
$15
list:article:id
$6
100386
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100386
*4
$4
HSET
$22
hash:article:by:100225
$2
id
$6
100225
*4
$4
HSET
$22
hash:article:by:100225
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100225
$9
articleId
$4
2139
*4
$4
HSET
$22
hash:article:by:100225
$5
title
$48
JavaEE——账号注册模拟网站邮箱激活
*4
$4
HSET
$22
hash:article:by:100225
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100225
$8
labelIds
$15
[72,143,203,74]
*4
$4
HSET
$22
hash:article:by:100225
$6
digest
$173
本项目是javaWeb和email结合的项目，模拟网站必须要激活邮箱账号才可以使用，创建数据库create table user(
id varchar(32) primary key,
name v...
*4
$4
HSET
$22
hash:article:by:100225
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100225
$7
content
$40
csdn/java/1_0_1_8_1504264467.039334.html
*4
$4
HSET
$22
hash:article:by:100225
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100225
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100225
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100225
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100225
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100225
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100225
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100225
$10
createTime
$13
1471874431000
*4
$4
HSET
$22
hash:article:by:100225
$11
releaseTime
$13
1471874431000
*4
$4
HSET
$22
hash:article:by:100225
$10
updateTime
$13
1471874431000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100225
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100225
*3
$5
LPUSH
$15
list:article:id
$6
100225
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100225
*4
$4
HSET
$22
hash:article:by:100093
$2
id
$6
100093
*4
$4
HSET
$22
hash:article:by:100093
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100093
$9
articleId
$4
2709
*4
$4
HSET
$22
hash:article:by:100093
$5
title
$12
单例模式
*4
$4
HSET
$22
hash:article:by:100093
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100093
$8
labelIds
$16
[18,60,12,66,67]
*4
$4
HSET
$22
hash:article:by:100093
$6
digest
$12
单例模式
*4
$4
HSET
$22
hash:article:by:100093
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100093
$7
content
$40
csdn/java/1_1_1_6_1504265309.220137.html
*4
$4
HSET
$22
hash:article:by:100093
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100093
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100093
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100093
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100093
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100093
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100093
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100093
$10
createTime
$13
1471867221000
*4
$4
HSET
$22
hash:article:by:100093
$11
releaseTime
$13
1471867221000
*4
$4
HSET
$22
hash:article:by:100093
$10
updateTime
$13
1471867221000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100093
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100093
*3
$5
LPUSH
$15
list:article:id
$6
100093
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100093
*4
$4
HSET
$22
hash:article:by:100091
$2
id
$6
100091
*4
$4
HSET
$22
hash:article:by:100091
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100091
$9
articleId
$4
2706
*4
$4
HSET
$22
hash:article:by:100091
$5
title
$18
工厂方法模式
*4
$4
HSET
$22
hash:article:by:100091
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100091
$8
labelIds
$16
[18,60,12,63,61]
*4
$4
HSET
$22
hash:article:by:100091
$6
digest
$18
工厂方法模式
*4
$4
HSET
$22
hash:article:by:100091
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100091
$7
content
$40
csdn/java/1_1_1_7_1504265306.311073.html
*4
$4
HSET
$22
hash:article:by:100091
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100091
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100091
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100091
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100091
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100091
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100091
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100091
$10
createTime
$13
1471860027000
*4
$4
HSET
$22
hash:article:by:100091
$11
releaseTime
$13
1471860027000
*4
$4
HSET
$22
hash:article:by:100091
$10
updateTime
$13
1471860027000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100091
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100091
*3
$5
LPUSH
$15
list:article:id
$6
100091
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100091
*4
$4
HSET
$22
hash:article:by:100129
$2
id
$6
100129
*4
$4
HSET
$22
hash:article:by:100129
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100129
$9
articleId
$4
2150
*4
$4
HSET
$22
hash:article:by:100129
$5
title
$78
JavaEE——Java和DOS下收发邮件（SMTP和POP3协议）、E-Mail协议）
*4
$4
HSET
$22
hash:article:by:100129
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100129
$8
labelIds
$19
[72,18,110,111,112]
*4
$4
HSET
$22
hash:article:by:100129
$6
digest
$271
E-Mail协议简介：
邮件服务器，按照提供的服务类型，可以分为发送邮件的服务器我接收邮件的服务器。
发送邮件的服务器使用发送协议，现在常用的是SMTP协议。所以，通常发邮件的服务器也称为SMTP服务...
*4
$4
HSET
$22
hash:article:by:100129
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100129
$7
content
$38
csdn/java/1_0_1_7_1504264473.6432.html
*4
$4
HSET
$22
hash:article:by:100129
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100129
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100129
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100129
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100129
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100129
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100129
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100129
$10
createTime
$13
1471744804000
*4
$4
HSET
$22
hash:article:by:100129
$11
releaseTime
$13
1471744804000
*4
$4
HSET
$22
hash:article:by:100129
$10
updateTime
$13
1471744804000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100129
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100129
*3
$5
LPUSH
$15
list:article:id
$6
100129
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100129
*4
$4
HSET
$22
hash:article:by:100172
$2
id
$6
100172
*4
$4
HSET
$22
hash:article:by:100172
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100172
$9
articleId
$4
2148
*4
$4
HSET
$22
hash:article:by:100172
$5
title
$99
JavaEE——在线人管理系统（显示在线人数、在线人详细信息、管理员踢人）
*4
$4
HSET
$22
hash:article:by:100172
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100172
$8
labelIds
$18
[41,101,114,25,72]
*4
$4
HSET
$22
hash:article:by:100172
$6
digest
$203
这篇博客是filter、listener和servlet技术的相关总结，实现了简单的显示在线人数、在线人详细信息、管理员踢人功能下面是详细代码web.xml
<web-app version="3.0...
*4
$4
HSET
$22
hash:article:by:100172
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100172
$7
content
$40
csdn/java/1_0_1_6_1504264472.456188.html
*4
$4
HSET
$22
hash:article:by:100172
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100172
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100172
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100172
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100172
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100172
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100172
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100172
$10
createTime
$13
1471701628000
*4
$4
HSET
$22
hash:article:by:100172
$11
releaseTime
$13
1471701628000
*4
$4
HSET
$22
hash:article:by:100172
$10
updateTime
$13
1471701628000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100172
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100172
*3
$5
LPUSH
$15
list:article:id
$6
100172
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100172
*4
$4
HSET
$22
hash:article:by:100085
$2
id
$6
100085
*4
$4
HSET
$22
hash:article:by:100085
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100085
$9
articleId
$4
2705
*4
$4
HSET
$22
hash:article:by:100085
$5
title
$18
抽象工厂模式
*4
$4
HSET
$22
hash:article:by:100085
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100085
$8
labelIds
$16
[18,60,12,61,62]
*4
$4
HSET
$22
hash:article:by:100085
$6
digest
$36
抽象工厂模式根据实例讲述
*4
$4
HSET
$22
hash:article:by:100085
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100085
$7
content
$40
csdn/java/1_1_1_8_1504265305.285235.html
*4
$4
HSET
$22
hash:article:by:100085
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100085
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100085
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100085
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100085
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100085
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100085
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100085
$10
createTime
$13
1471694427000
*4
$4
HSET
$22
hash:article:by:100085
$11
releaseTime
$13
1471694427000
*4
$4
HSET
$22
hash:article:by:100085
$10
updateTime
$13
1471694427000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100085
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100085
*3
$5
LPUSH
$15
list:article:id
$6
100085
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100085
*4
$4
HSET
$22
hash:article:by:100190
$2
id
$6
100190
*4
$4
HSET
$22
hash:article:by:100190
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100190
$9
articleId
$4
2145
*4
$4
HSET
$22
hash:article:by:100190
$5
title
$107
JavaEE框架类——监听器（观察者模式）和Servlet技术的监听器session沌化与活化技术
*4
$4
HSET
$22
hash:article:by:100190
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100190
$8
labelIds
$17
[41,72,18,102,51]
*4
$4
HSET
$22
hash:article:by:100190
$6
digest
$289
监听器
监听器－就是一个实现待定接口的普通Java程序，此程序专门用于监听别一个类的方法调用。
什么是观察者模式：
定义对象间一对多的依赖关系，当一个对象的状态发生改变时，所有依赖于它的对象都得到通知...
*4
$4
HSET
$22
hash:article:by:100190
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100190
$7
content
$40
csdn/java/1_0_1_5_1504264471.166283.html
*4
$4
HSET
$22
hash:article:by:100190
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100190
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100190
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100190
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100190
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100190
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100190
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100190
$10
createTime
$13
1471568419000
*4
$4
HSET
$22
hash:article:by:100190
$11
releaseTime
$13
1471568419000
*4
$4
HSET
$22
hash:article:by:100190
$10
updateTime
$13
1471568419000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100190
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100190
*3
$5
LPUSH
$15
list:article:id
$6
100190
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100190
*4
$4
HSET
$22
hash:article:by:100126
$2
id
$6
100126
*4
$4
HSET
$22
hash:article:by:100126
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100126
$9
articleId
$4
2137
*4
$4
HSET
$22
hash:article:by:100126
$5
title
$112
JavaEE框架类——全站压缩——对网站内容进行数据压缩（Filter和GzipOutputStream二合一）
*4
$4
HSET
$22
hash:article:by:100126
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100126
$8
labelIds
$20
[101,72,102,103,104]
*4
$4
HSET
$22
hash:article:by:100126
$6
digest
$283
GZIP压缩：将压缩后的文本文件，发送给浏览器，减少流量。
全站压缩：将一个项目（网站内）的所有响应（数据）进行gzip压缩，减少流量。
压缩目的：减少流量，提高运行速度，贴吧是在手机客户端是，减少流...
*4
$4
HSET
$22
hash:article:by:100126
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100126
$7
content
$40
csdn/java/1_0_1_4_1504264466.130842.html
*4
$4
HSET
$22
hash:article:by:100126
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100126
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100126
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100126
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100126
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100126
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100126
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100126
$10
createTime
$13
1471532428000
*4
$4
HSET
$22
hash:article:by:100126
$11
releaseTime
$13
1471532428000
*4
$4
HSET
$22
hash:article:by:100126
$10
updateTime
$13
1471532428000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100126
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100126
*3
$5
LPUSH
$15
list:article:id
$6
100126
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100126
*4
$4
HSET
$22
hash:article:by:100185
$2
id
$6
100185
*4
$4
HSET
$22
hash:article:by:100185
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100185
$9
articleId
$4
2152
*4
$4
HSET
$22
hash:article:by:100185
$5
title
$42
javaEE框架类——过滤器（Filter）
*4
$4
HSET
$22
hash:article:by:100185
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100185
$8
labelIds
$18
[101,72,41,26,102]
*4
$4
HSET
$22
hash:article:by:100185
$6
digest
$211
1简介： - 过虑器能对客户的请求进行预先处理，然后再将请求转发给其他web组件。
 - 过虑器是在Servlet2.3规范中定义的，它可以对Web组件的,ServletRequest和Servlet...
*4
$4
HSET
$22
hash:article:by:100185
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100185
$7
content
$40
csdn/java/1_0_1_3_1504264475.363893.html
*4
$4
HSET
$22
hash:article:by:100185
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100185
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100185
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100185
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100185
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100185
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100185
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100185
$10
createTime
$13
1471446035000
*4
$4
HSET
$22
hash:article:by:100185
$11
releaseTime
$13
1471446035000
*4
$4
HSET
$22
hash:article:by:100185
$10
updateTime
$13
1471446035000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100185
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100185
*3
$5
LPUSH
$15
list:article:id
$6
100185
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100185
*4
$4
HSET
$22
hash:article:by:100104
$2
id
$6
100104
*4
$4
HSET
$22
hash:article:by:100104
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100104
$9
articleId
$4
2704
*4
$4
HSET
$22
hash:article:by:100104
$5
title
$18
简单工厂模式
*4
$4
HSET
$22
hash:article:by:100104
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100104
$8
labelIds
$13
[18,60,83,12]
*4
$4
HSET
$22
hash:article:by:100104
$6
digest
$18
简单工厂模式
*4
$4
HSET
$22
hash:article:by:100104
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100104
$7
content
$40
csdn/java/1_1_1_9_1504265304.142167.html
*4
$4
HSET
$22
hash:article:by:100104
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100104
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100104
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100104
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100104
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100104
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100104
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100104
$10
createTime
$13
1471348849000
*4
$4
HSET
$22
hash:article:by:100104
$11
releaseTime
$13
1471348849000
*4
$4
HSET
$22
hash:article:by:100104
$10
updateTime
$13
1471348849000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100104
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100104
*3
$5
LPUSH
$15
list:article:id
$6
100104
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100104
*4
$4
HSET
$22
hash:article:by:100351
$2
id
$6
100351
*4
$4
HSET
$22
hash:article:by:100351
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100351
$9
articleId
$4
2703
*4
$4
HSET
$22
hash:article:by:100351
$5
title
$27
如何学好设计模式？
*4
$4
HSET
$22
hash:article:by:100351
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100351
$8
labelIds
$14
[18,60,12,352]
*4
$4
HSET
$22
hash:article:by:100351
$6
digest
$27
如何学好设计模式？
*4
$4
HSET
$22
hash:article:by:100351
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100351
$7
content
$41
csdn/java/1_1_1_10_1504265303.915875.html
*4
$4
HSET
$22
hash:article:by:100351
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100351
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100351
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100351
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100351
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100351
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100351
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100351
$10
createTime
$13
1471348832000
*4
$4
HSET
$22
hash:article:by:100351
$11
releaseTime
$13
1471348832000
*4
$4
HSET
$22
hash:article:by:100351
$10
updateTime
$13
1471348832000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100351
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100351
*3
$5
LPUSH
$15
list:article:id
$6
100351
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100351
*4
$4
HSET
$22
hash:article:by:100621
$2
id
$6
100621
*4
$4
HSET
$22
hash:article:by:100621
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100621
$9
articleId
$4
2764
*4
$4
HSET
$22
hash:article:by:100621
$5
title
$43
Spring Boot学习记录(三)--整合Mybatis
*4
$4
HSET
$22
hash:article:by:100621
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100621
$8
labelIds
$5
[137]
*4
$4
HSET
$22
hash:article:by:100621
$6
digest
$213
Spring Boot学习记录(三)–整合Mybatis标签（空格分隔）： spring-boot控制器,视图解析器前面两篇都已弄好,这一篇学习持久层框架整合.1.数据源配置数据源使用druid,ma...
*4
$4
HSET
$22
hash:article:by:100621
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100621
$7
content
$40
csdn/java/1_0_2_2_1504265374.932814.html
*4
$4
HSET
$22
hash:article:by:100621
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100621
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100621
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100621
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100621
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100621
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100621
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100621
$10
createTime
$13
1471086018000
*4
$4
HSET
$22
hash:article:by:100621
$11
releaseTime
$13
1471086018000
*4
$4
HSET
$22
hash:article:by:100621
$10
updateTime
$13
1471086018000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100621
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100621
*3
$5
LPUSH
$15
list:article:id
$6
100621
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100621
*4
$4
HSET
$22
hash:article:by:100455
$2
id
$6
100455
*4
$4
HSET
$22
hash:article:by:100455
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100455
$9
articleId
$4
2763
*4
$4
HSET
$22
hash:article:by:100455
$5
title
$50
JSON工具学习记录--FastJSON循环引用问题
*4
$4
HSET
$22
hash:article:by:100455
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100455
$8
labelIds
$5
[428]
*4
$4
HSET
$22
hash:article:by:100455
$6
digest
$231
JSON工具学习记录–FastJSON循环引用问题标签（空格分隔）： fastjson最近基于他人项目做二次开发,遇到了循环引用的问题,简单来说A引用了B,B引用了C,C引用了A,那么转换json就会...
*4
$4
HSET
$22
hash:article:by:100455
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100455
$7
content
$40
csdn/java/1_0_2_1_1504265374.034113.html
*4
$4
HSET
$22
hash:article:by:100455
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100455
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100455
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100455
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100455
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100455
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100455
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100455
$10
createTime
$13
1471003233000
*4
$4
HSET
$22
hash:article:by:100455
$11
releaseTime
$13
1471003233000
*4
$4
HSET
$22
hash:article:by:100455
$10
updateTime
$13
1471003233000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100455
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100455
*3
$5
LPUSH
$15
list:article:id
$6
100455
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100455
*4
$4
HSET
$22
hash:article:by:100772
$2
id
$6
100772
*4
$4
HSET
$22
hash:article:by:100772
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100772
$9
articleId
$4
2747
*4
$4
HSET
$22
hash:article:by:100772
$5
title
$45
Spring Boot学习记录(二)--thymeleaf模板
*4
$4
HSET
$22
hash:article:by:100772
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100772
$8
labelIds
$5
[137]
*4
$4
HSET
$22
hash:article:by:100772
$6
digest
$213
Spring Boot学习记录(二)–thymeleaf模板标签（空格分隔）： spring-boot自从来公司后都没用过jsp当界面渲染了,因为前后端分离不是很好,反而模板引擎用的比较多,thyme...
*4
$4
HSET
$22
hash:article:by:100772
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100772
$7
content
$40
csdn/java/1_0_2_3_1504265357.661839.html
*4
$4
HSET
$22
hash:article:by:100772
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100772
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100772
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100772
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100772
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100772
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100772
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100772
$10
createTime
$13
1470934820000
*4
$4
HSET
$22
hash:article:by:100772
$11
releaseTime
$13
1470934820000
*4
$4
HSET
$22
hash:article:by:100772
$10
updateTime
$13
1470934820000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100772
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100772
*3
$5
LPUSH
$15
list:article:id
$6
100772
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100772
*4
$4
HSET
$22
hash:article:by:100704
$2
id
$6
100704
*4
$4
HSET
$22
hash:article:by:100704
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100704
$9
articleId
$4
2748
*4
$4
HSET
$22
hash:article:by:100704
$5
title
$42
Spring Boot学习记录(一)--环境搭建
*4
$4
HSET
$22
hash:article:by:100704
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100704
$8
labelIds
$5
[137]
*4
$4
HSET
$22
hash:article:by:100704
$6
digest
$217
Spring Boot学习记录(一)–环境搭建标签（空格分隔）： spring-boot最近趁着下班闲时间学习spring-boot,记录下学习历程,最后打算实战一个API管理平台,下面开始环境配置....
*4
$4
HSET
$22
hash:article:by:100704
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100704
$7
content
$39
csdn/java/1_0_2_4_1504265358.69176.html
*4
$4
HSET
$22
hash:article:by:100704
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100704
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100704
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100704
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100704
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100704
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100704
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100704
$10
createTime
$13
1470816028000
*4
$4
HSET
$22
hash:article:by:100704
$11
releaseTime
$13
1470816028000
*4
$4
HSET
$22
hash:article:by:100704
$10
updateTime
$13
1470816028000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100704
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100704
*3
$5
LPUSH
$15
list:article:id
$6
100704
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100704
*4
$4
HSET
$22
hash:article:by:100718
$2
id
$6
100718
*4
$4
HSET
$22
hash:article:by:100718
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100718
$9
articleId
$4
2765
*4
$4
HSET
$22
hash:article:by:100718
$5
title
$36
SSM实战记录(二)--在线OJ系统
*4
$4
HSET
$22
hash:article:by:100718
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100718
$8
labelIds
$4
[74]
*4
$4
HSET
$22
hash:article:by:100718
$6
digest
$273
简介: 
学习SSM框架后,做出来的一个比较系统的项目,前端,数据库,后台全部自己完成,借鉴了很多前辈的经验,完成后颇有成就感,当然也学到了很多东西,至于能不能上线给学校用,还要看领导了…项目主要是类...
*4
$4
HSET
$22
hash:article:by:100718
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100718
$7
content
$40
csdn/java/1_0_2_5_1504265375.974983.html
*4
$4
HSET
$22
hash:article:by:100718
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100718
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100718
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100718
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100718
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100718
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100718
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100718
$10
createTime
$13
1470578426000
*4
$4
HSET
$22
hash:article:by:100718
$11
releaseTime
$13
1470578426000
*4
$4
HSET
$22
hash:article:by:100718
$10
updateTime
$13
1470578426000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100718
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100718
*3
$5
LPUSH
$15
list:article:id
$6
100718
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100718
*4
$4
HSET
$22
hash:article:by:100239
$2
id
$6
100239
*4
$4
HSET
$22
hash:article:by:100239
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100239
$9
articleId
$4
2565
*4
$4
HSET
$22
hash:article:by:100239
$5
title
$32
JDK 源码学习——ByteBuffer
*4
$4
HSET
$22
hash:article:by:100239
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100239
$8
labelIds
$15
[30,18,230,231]
*4
$4
HSET
$22
hash:article:by:100239
$6
digest
$175
ByteBuffer 在NIO的作用Java SE4 开始引入Java NIO,相比较于老的IO，更加依赖底层实现。引入通道(Channels)，选择器(selector)，缓冲(Buffers).都...
*4
$4
HSET
$22
hash:article:by:100239
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100239
$7
content
$38
csdn/java/1_1_1_4_1504264963.2659.html
*4
$4
HSET
$22
hash:article:by:100239
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100239
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100239
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100239
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100239
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100239
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100239
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100239
$10
createTime
$13
1470571233000
*4
$4
HSET
$22
hash:article:by:100239
$11
releaseTime
$13
1470571233000
*4
$4
HSET
$22
hash:article:by:100239
$10
updateTime
$13
1470571233000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100239
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100239
*3
$5
LPUSH
$15
list:article:id
$6
100239
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100239
*4
$4
HSET
$22
hash:article:by:100385
$2
id
$6
100385
*4
$4
HSET
$22
hash:article:by:100385
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100385
$9
articleId
$4
2101
*4
$4
HSET
$22
hash:article:by:100385
$5
title
$54
java设计模式之单例模式（Singleton pattern）
*4
$4
HSET
$22
hash:article:by:100385
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100385
$8
labelIds
$9
[375,376]
*4
$4
HSET
$22
hash:article:by:100385
$6
digest
$141
java设计模式之单例模式（Singleton pattern）


单例模式的定义：
Singleton pattern restricts the instantiation of a class...
*4
$4
HSET
$22
hash:article:by:100385
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100385
$7
content
$40
csdn/java/1_0_1_0_1504264441.245252.html
*4
$4
HSET
$22
hash:article:by:100385
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100385
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100385
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100385
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100385
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100385
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100385
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100385
$10
createTime
$13
1470049242000
*4
$4
HSET
$22
hash:article:by:100385
$11
releaseTime
$13
1470049242000
*4
$4
HSET
$22
hash:article:by:100385
$10
updateTime
$13
1470049242000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100385
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100385
*3
$5
LPUSH
$15
list:article:id
$6
100385
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100385
*4
$4
HSET
$22
hash:article:by:100626
$2
id
$6
100626
*4
$4
HSET
$22
hash:article:by:100626
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100626
$9
articleId
$4
2133
*4
$4
HSET
$22
hash:article:by:100626
$5
title
$36
Struts1.3——文件上传和下载
*4
$4
HSET
$22
hash:article:by:100626
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100626
$8
labelIds
$13
[128,304,503]
*4
$4
HSET
$22
hash:article:by:100626
$6
digest
$57
本文介绍了Struts实现文件上传和下载的方法
*4
$4
HSET
$22
hash:article:by:100626
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100626
$7
content
$40
csdn/java/1_0_1_0_1504264463.805058.html
*4
$4
HSET
$22
hash:article:by:100626
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100626
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100626
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100626
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100626
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100626
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100626
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100626
$10
createTime
$13
1469725216000
*4
$4
HSET
$22
hash:article:by:100626
$11
releaseTime
$13
1469725216000
*4
$4
HSET
$22
hash:article:by:100626
$10
updateTime
$13
1469725216000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100626
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100626
*3
$5
LPUSH
$15
list:article:id
$6
100626
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100626
*4
$4
HSET
$22
hash:article:by:100760
$2
id
$6
100760
*4
$4
HSET
$22
hash:article:by:100760
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100760
$9
articleId
$4
2761
*4
$4
HSET
$22
hash:article:by:100760
$5
title
$55
Jersey学习记录(三)--过滤拦截器与异常处理
*4
$4
HSET
$22
hash:article:by:100760
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100760
$8
labelIds
$5
[302]
*4
$4
HSET
$22
hash:article:by:100760
$6
digest
$245
本文记录全局异常返回,过滤器,拦截器.一.全局异常处理器webservice定义全局返回错误码是很重要的一个功能,jersey正好就能实现这一功能.整个流程就是当jersey托管的类发现了异常,抛出给...
*4
$4
HSET
$22
hash:article:by:100760
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100760
$7
content
$40
csdn/java/1_0_2_6_1504265371.854454.html
*4
$4
HSET
$22
hash:article:by:100760
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100760
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100760
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100760
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100760
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100760
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100760
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100760
$10
createTime
$13
1469703620000
*4
$4
HSET
$22
hash:article:by:100760
$11
releaseTime
$13
1469703620000
*4
$4
HSET
$22
hash:article:by:100760
$10
updateTime
$13
1469703620000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100760
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100760
*3
$5
LPUSH
$15
list:article:id
$6
100760
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100760
*4
$4
HSET
$22
hash:article:by:100311
$2
id
$6
100311
*4
$4
HSET
$22
hash:article:by:100311
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100311
$9
articleId
$4
2760
*4
$4
HSET
$22
hash:article:by:100311
$5
title
$52
Jersey学习记录(二)--请求映射和页面传值
*4
$4
HSET
$22
hash:article:by:100311
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100311
$8
labelIds
$5
[302]
*4
$4
HSET
$22
hash:article:by:100311
$6
digest
$159
jersey的webservice开发基本上都是使用注解,接下来学习常用注解.一.根资源类1.@PATH注解@Path("/hello")
public class HelloWorldControl...
*4
$4
HSET
$22
hash:article:by:100311
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100311
$7
content
$40
csdn/java/1_0_2_7_1504265370.857547.html
*4
$4
HSET
$22
hash:article:by:100311
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100311
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100311
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100311
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100311
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100311
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100311
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100311
$10
createTime
$13
1469703620000
*4
$4
HSET
$22
hash:article:by:100311
$11
releaseTime
$13
1469703620000
*4
$4
HSET
$22
hash:article:by:100311
$10
updateTime
$13
1469703620000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100311
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100311
*3
$5
LPUSH
$15
list:article:id
$6
100311
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100311
*4
$4
HSET
$22
hash:article:by:100301
$2
id
$6
100301
*4
$4
HSET
$22
hash:article:by:100301
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100301
$9
articleId
$4
2759
*4
$4
HSET
$22
hash:article:by:100301
$5
title
$37
Jersey学习记录(一)--环境配置
*4
$4
HSET
$22
hash:article:by:100301
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100301
$8
labelIds
$5
[302]
*4
$4
HSET
$22
hash:article:by:100301
$6
digest
$251
最近公司项目在用jersey做api接口,遂来学习一下,学习的第一步,先运行起来一个项目,也就是环境配置好.1.环境配置对于IDEA来说可以直接引用包方式建立,这样的话在新建项目的时候勾选上WEB A...
*4
$4
HSET
$22
hash:article:by:100301
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100301
$7
content
$40
csdn/java/1_0_2_8_1504265369.890049.html
*4
$4
HSET
$22
hash:article:by:100301
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100301
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100301
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100301
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100301
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100301
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100301
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100301
$10
createTime
$13
1469703619000
*4
$4
HSET
$22
hash:article:by:100301
$11
releaseTime
$13
1469703619000
*4
$4
HSET
$22
hash:article:by:100301
$10
updateTime
$13
1469703619000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100301
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100301
*3
$5
LPUSH
$15
list:article:id
$6
100301
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100301
*4
$4
HSET
$22
hash:article:by:100411
$2
id
$6
100411
*4
$4
HSET
$22
hash:article:by:100411
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100411
$9
articleId
$4
2126
*4
$4
HSET
$22
hash:article:by:100411
$5
title
$58
Struts1.3——DispatchAction、DynamicForm和全局跳转
*4
$4
HSET
$22
hash:article:by:100411
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100411
$8
labelIds
$9
[128,102]
*4
$4
HSET
$22
hash:article:by:100411
$6
digest
$80
本文介绍了Struts1中的DispatchAction、DynamicForm和全局跳转的用法
*4
$4
HSET
$22
hash:article:by:100411
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100411
$7
content
$40
csdn/java/1_0_1_1_1504264458.838667.html
*4
$4
HSET
$22
hash:article:by:100411
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100411
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100411
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100411
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100411
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100411
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100411
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100411
$10
createTime
$13
1469386833000
*4
$4
HSET
$22
hash:article:by:100411
$11
releaseTime
$13
1469386833000
*4
$4
HSET
$22
hash:article:by:100411
$10
updateTime
$13
1469386833000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100411
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100411
*3
$5
LPUSH
$15
list:article:id
$6
100411
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100411
*4
$4
HSET
$22
hash:article:by:100212
$2
id
$6
100212
*4
$4
HSET
$22
hash:article:by:100212
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100212
$9
articleId
$4
2131
*4
$4
HSET
$22
hash:article:by:100212
$5
title
$27
Struts1.3——Struts标签
*4
$4
HSET
$22
hash:article:by:100212
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100212
$8
labelIds
$9
[128,190]
*4
$4
HSET
$22
hash:article:by:100212
$6
digest
$77
本文介绍了Struts1中的标签，有html标签、bean标签和logic标签
*4
$4
HSET
$22
hash:article:by:100212
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100212
$7
content
$40
csdn/java/1_0_1_2_1504264461.792532.html
*4
$4
HSET
$22
hash:article:by:100212
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100212
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100212
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100212
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100212
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100212
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100212
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100212
$10
createTime
$13
1469289612000
*4
$4
HSET
$22
hash:article:by:100212
$11
releaseTime
$13
1469289612000
*4
$4
HSET
$22
hash:article:by:100212
$10
updateTime
$13
1469289612000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100212
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100212
*3
$5
LPUSH
$15
list:article:id
$6
100212
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100212
*4
$4
HSET
$22
hash:article:by:100243
$2
id
$6
100243
*4
$4
HSET
$22
hash:article:by:100243
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100243
$9
articleId
$4
2567
*4
$4
HSET
$22
hash:article:by:100243
$5
title
$19
gradle 入门介绍
*4
$4
HSET
$22
hash:article:by:100243
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100243
$8
labelIds
$17
[235,236,237,238]
*4
$4
HSET
$22
hash:article:by:100243
$6
digest
$103
gradle ????Groovy??????????,?maven????????????xml?????script????gradle ???????build.gradle ????,buil...
*4
$4
HSET
$22
hash:article:by:100243
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100243
$7
content
$40
csdn/java/1_1_1_8_1504264965.187355.html
*4
$4
HSET
$22
hash:article:by:100243
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100243
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100243
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100243
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100243
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100243
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100243
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100243
$10
createTime
$13
1469203240000
*4
$4
HSET
$22
hash:article:by:100243
$11
releaseTime
$13
1469203240000
*4
$4
HSET
$22
hash:article:by:100243
$10
updateTime
$13
1469203240000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100243
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100243
*3
$5
LPUSH
$15
list:article:id
$6
100243
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100243
*4
$4
HSET
$22
hash:article:by:100534
$2
id
$6
100534
*4
$4
HSET
$22
hash:article:by:100534
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100534
$9
articleId
$4
2757
*4
$4
HSET
$22
hash:article:by:100534
$5
title
$33
JavaWEB小知识学习--Java Mail
*4
$4
HSET
$22
hash:article:by:100534
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100534
$8
labelIds
$4
[74]
*4
$4
HSET
$22
hash:article:by:100534
$6
digest
$223
本文主要使用java mail和spring mail来发送邮件教程,比较啰嗦,因为除了发邮件还写了其他工具类,不过很详细.1.使用java mail发送邮件首先把相关账号密码信息保存到一个prope...
*4
$4
HSET
$22
hash:article:by:100534
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100534
$7
content
$40
csdn/java/1_0_2_9_1504265368.077865.html
*4
$4
HSET
$22
hash:article:by:100534
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100534
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100534
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100534
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100534
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100534
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100534
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100534
$10
createTime
$13
1468706428000
*4
$4
HSET
$22
hash:article:by:100534
$11
releaseTime
$13
1468706428000
*4
$4
HSET
$22
hash:article:by:100534
$10
updateTime
$13
1468706428000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100534
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100534
*3
$5
LPUSH
$15
list:article:id
$6
100534
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100534
*4
$4
HSET
$22
hash:article:by:100589
$2
id
$6
100589
*4
$4
HSET
$22
hash:article:by:100589
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100589
$9
articleId
$4
2758
*4
$4
HSET
$22
hash:article:by:100589
$5
title
$34
JavaWEB小知识学习--原生AJAX
*4
$4
HSET
$22
hash:article:by:100589
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100589
$8
labelIds
$5
[108]
*4
$4
HSET
$22
hash:article:by:100589
$6
digest
$239
AJAX的作用局部刷新,作为提升页面体验还是很重要的,不过大家都说对SEO不是很友好,一直使用jQuery封装的AJAX,没有了解过原生的是什么样子的,特此学习下,补充知识1.原生AJAX的Get方式...
*4
$4
HSET
$22
hash:article:by:100589
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100589
$7
content
$41
csdn/java/1_0_2_10_1504265368.857493.html
*4
$4
HSET
$22
hash:article:by:100589
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100589
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100589
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100589
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100589
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100589
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100589
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100589
$10
createTime
$13
1468659623000
*4
$4
HSET
$22
hash:article:by:100589
$11
releaseTime
$13
1468659623000
*4
$4
HSET
$22
hash:article:by:100589
$10
updateTime
$13
1468659623000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100589
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100589
*3
$5
LPUSH
$15
list:article:id
$6
100589
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100589
*4
$4
HSET
$22
hash:article:by:100775
$2
id
$6
100775
*4
$4
HSET
$22
hash:article:by:100775
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100775
$9
articleId
$4
2756
*4
$4
HSET
$22
hash:article:by:100775
$5
title
$39
JavaWEB小知识学习--验证码生成
*4
$4
HSET
$22
hash:article:by:100775
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100775
$8
labelIds
$7
[74,27]
*4
$4
HSET
$22
hash:article:by:100775
$6
digest
$269
验证码是现在必不可少的一个小功能,可以放爆破,防垃圾请求,总之还是有一定约束力的SpringMVC实现验证码功能主要是提供一个URL请求,该请求对应的方法可以生成一张验证码图片,然后把该验证码数值存入...
*4
$4
HSET
$22
hash:article:by:100775
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100775
$7
content
$41
csdn/java/1_0_2_11_1504265366.809937.html
*4
$4
HSET
$22
hash:article:by:100775
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100775
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100775
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100775
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100775
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100775
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100775
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100775
$10
createTime
$13
1468522810000
*4
$4
HSET
$22
hash:article:by:100775
$11
releaseTime
$13
1468522810000
*4
$4
HSET
$22
hash:article:by:100775
$10
updateTime
$13
1468522810000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100775
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100775
*3
$5
LPUSH
$15
list:article:id
$6
100775
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100775
*4
$4
HSET
$22
hash:article:by:100608
$2
id
$6
100608
*4
$4
HSET
$22
hash:article:by:100608
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100608
$9
articleId
$4
2749
*4
$4
HSET
$22
hash:article:by:100608
$5
title
$25
近期javaWEB项目总结
*4
$4
HSET
$22
hash:article:by:100608
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100608
$8
labelIds
$4
[74]
*4
$4
HSET
$22
hash:article:by:100608
$6
digest
$285
找工作前把最近做的项目总结一下,面试的时候也好说说,虽然都不是什么很难得项目,但是对于最近学习的知识做到了一个很好的总结和巩固.1.微信后台开发这是学校老师接的一个项目,然后找我来做的,顺便吐槽下,老...
*4
$4
HSET
$22
hash:article:by:100608
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100608
$7
content
$41
csdn/java/1_0_2_12_1504265359.720861.html
*4
$4
HSET
$22
hash:article:by:100608
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100608
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100608
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100608
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100608
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100608
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100608
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100608
$10
createTime
$13
1467500414000
*4
$4
HSET
$22
hash:article:by:100608
$11
releaseTime
$13
1467500414000
*4
$4
HSET
$22
hash:article:by:100608
$10
updateTime
$13
1467500414000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100608
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100608
*3
$5
LPUSH
$15
list:article:id
$6
100608
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100608
*4
$4
HSET
$22
hash:article:by:100731
$2
id
$6
100731
*4
$4
HSET
$22
hash:article:by:100731
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100731
$9
articleId
$4
2128
*4
$4
HSET
$22
hash:article:by:100731
$5
title
$54
Struts1.3——使用MyEclipse集成工具开发Struts
*4
$4
HSET
$22
hash:article:by:100731
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100731
$8
labelIds
$9
[128,239]
*4
$4
HSET
$22
hash:article:by:100731
$6
digest
$69
本文介绍了通过MyEclipse集成工具开发Struts的一般流程
*4
$4
HSET
$22
hash:article:by:100731
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100731
$7
content
$40
csdn/java/1_0_1_3_1504264459.786712.html
*4
$4
HSET
$22
hash:article:by:100731
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100731
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100731
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100731
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100731
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100731
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100731
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100731
$10
createTime
$13
1466683209000
*4
$4
HSET
$22
hash:article:by:100731
$11
releaseTime
$13
1466683209000
*4
$4
HSET
$22
hash:article:by:100731
$10
updateTime
$13
1466683209000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100731
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100731
*3
$5
LPUSH
$15
list:article:id
$6
100731
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100731
*4
$4
HSET
$22
hash:article:by:100453
$2
id
$6
100453
*4
$4
HSET
$22
hash:article:by:100453
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100453
$9
articleId
$4
2130
*4
$4
HSET
$22
hash:article:by:100453
$5
title
$36
Struts1.3——登录案例的改进
*4
$4
HSET
$22
hash:article:by:100453
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100453
$8
labelIds
$5
[128]
*4
$4
HSET
$22
hash:article:by:100453
$6
digest
$109
本文简要介绍了struts的scope属性、中文乱码处理以及struts-config.xml文件等几个知识点
*4
$4
HSET
$22
hash:article:by:100453
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100453
$7
content
$40
csdn/java/1_0_1_4_1504264460.871704.html
*4
$4
HSET
$22
hash:article:by:100453
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100453
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100453
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100453
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100453
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100453
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100453
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100453
$10
createTime
$13
1466586049000
*4
$4
HSET
$22
hash:article:by:100453
$11
releaseTime
$13
1466586049000
*4
$4
HSET
$22
hash:article:by:100453
$10
updateTime
$13
1466586049000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100453
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100453
*3
$5
LPUSH
$15
list:article:id
$6
100453
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100453
*4
$4
HSET
$22
hash:article:by:100715
$2
id
$6
100715
*4
$4
HSET
$22
hash:article:by:100715
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100715
$9
articleId
$4
2122
*4
$4
HSET
$22
hash:article:by:100715
$5
title
$27
Struts1.3——Struts入门
*4
$4
HSET
$22
hash:article:by:100715
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100715
$8
labelIds
$13
[128,306,682]
*4
$4
HSET
$22
hash:article:by:100715
$6
digest
$120
本文介绍了struts的入门知识，通过手工配置实现一个struts项目介绍了struts的工作原理和流程
*4
$4
HSET
$22
hash:article:by:100715
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100715
$7
content
$40
csdn/java/1_0_1_5_1504264456.703628.html
*4
$4
HSET
$22
hash:article:by:100715
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100715
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100715
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100715
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100715
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100715
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100715
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100715
$10
createTime
$13
1466535648000
*4
$4
HSET
$22
hash:article:by:100715
$11
releaseTime
$13
1466535648000
*4
$4
HSET
$22
hash:article:by:100715
$10
updateTime
$13
1466535648000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100715
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100715
*3
$5
LPUSH
$15
list:article:id
$6
100715
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100715
*4
$4
HSET
$22
hash:article:by:100320
$2
id
$6
100320
*4
$4
HSET
$22
hash:article:by:100320
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100320
$9
articleId
$4
2762
*4
$4
HSET
$22
hash:article:by:100320
$5
title
$43
nginx学习记录--安装和转发到tomcat
*4
$4
HSET
$22
hash:article:by:100320
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100320
$8
labelIds
$5
[323]
*4
$4
HSET
$22
hash:article:by:100320
$6
digest
$283
有一段时间没写博客了,因为接了几个项目,并且临近期末,还要准备考试,比较忙.最近项目上线,项目主要是微信智能硬件管理,所以需要两个服务器,一个用来处理微信上传的消息,一个用来处理智能设备上传的消息,所...
*4
$4
HSET
$22
hash:article:by:100320
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100320
$7
content
$41
csdn/java/1_0_2_13_1504265372.909351.html
*4
$4
HSET
$22
hash:article:by:100320
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100320
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100320
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100320
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100320
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100320
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100320
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100320
$10
createTime
$13
1466510421000
*4
$4
HSET
$22
hash:article:by:100320
$11
releaseTime
$13
1466510421000
*4
$4
HSET
$22
hash:article:by:100320
$10
updateTime
$13
1466510421000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100320
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100320
*3
$5
LPUSH
$15
list:article:id
$6
100320
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100320
*4
$4
HSET
$22
hash:article:by:100463
$2
id
$6
100463
*4
$4
HSET
$22
hash:article:by:100463
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100463
$9
articleId
$4
2755
*4
$4
HSET
$22
hash:article:by:100463
$5
title
$45
Maven学习记录(四)--多模块开发配置
*4
$4
HSET
$22
hash:article:by:100463
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100463
$8
labelIds
$4
[79]
*4
$4
HSET
$22
hash:article:by:100463
$6
digest
$277
多模块的好处就是协同开发,对于大的项目这样分工可以提高效率,同时减轻代码耦合,看起来也一目了然,maven多模块还解决了不同人开发使用的架包版本冲突等问题一.创建项目1.创建父级容器不要使用模板,直接...
*4
$4
HSET
$22
hash:article:by:100463
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100463
$7
content
$41
csdn/java/1_0_2_14_1504265365.665069.html
*4
$4
HSET
$22
hash:article:by:100463
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100463
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100463
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100463
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100463
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100463
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100463
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100463
$10
createTime
$13
1464901240000
*4
$4
HSET
$22
hash:article:by:100463
$11
releaseTime
$13
1464901240000
*4
$4
HSET
$22
hash:article:by:100463
$10
updateTime
$13
1464901240000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100463
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100463
*3
$5
LPUSH
$15
list:article:id
$6
100463
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100463
*4
$4
HSET
$22
hash:article:by:100537
$2
id
$6
100537
*4
$4
HSET
$22
hash:article:by:100537
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100537
$9
articleId
$4
2753
*4
$4
HSET
$22
hash:article:by:100537
$5
title
$48
Maven学习记录(三)--实战引入Spring支持
*4
$4
HSET
$22
hash:article:by:100537
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100537
$8
labelIds
$4
[79]
*4
$4
HSET
$22
hash:article:by:100537
$6
digest
$255
一.创建项目maven项目在IDEA下创建是相当容易然后给定项目坐标,确定即可二.完善项目目录结构IDEA创建完项目结构和标准的maven项目有些差异,这个时候就需要我们手动调整一下更改前结构 
更改...
*4
$4
HSET
$22
hash:article:by:100537
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100537
$7
content
$40
csdn/java/1_0_2_15_1504265364.75726.html
*4
$4
HSET
$22
hash:article:by:100537
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100537
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100537
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100537
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100537
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100537
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100537
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100537
$10
createTime
$13
1464872449000
*4
$4
HSET
$22
hash:article:by:100537
$11
releaseTime
$13
1464872449000
*4
$4
HSET
$22
hash:article:by:100537
$10
updateTime
$13
1464872449000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100537
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100537
*3
$5
LPUSH
$15
list:article:id
$6
100537
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100537
*4
$4
HSET
$22
hash:article:by:100515
$2
id
$6
100515
*4
$4
HSET
$22
hash:article:by:100515
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100515
$9
articleId
$4
2754
*4
$4
HSET
$22
hash:article:by:100515
$5
title
$41
Maven学习记录(二)--Maven核心概念
*4
$4
HSET
$22
hash:article:by:100515
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100515
$8
labelIds
$4
[79]
*4
$4
HSET
$22
hash:article:by:100515
$6
digest
$171
转载自 http://www.cnblogs.com/xdp-gacl/p/4051819.html   
博主写的很好,所以直接转载过来了    一、Maven坐标
1.1、什么是坐标？
　　在平面...
*4
$4
HSET
$22
hash:article:by:100515
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100515
$7
content
$41
csdn/java/1_0_2_16_1504265364.802409.html
*4
$4
HSET
$22
hash:article:by:100515
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100515
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100515
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100515
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100515
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100515
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100515
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100515
$10
createTime
$13
1464861614000
*4
$4
HSET
$22
hash:article:by:100515
$11
releaseTime
$13
1464861614000
*4
$4
HSET
$22
hash:article:by:100515
$10
updateTime
$13
1464861614000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100515
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100515
*3
$5
LPUSH
$15
list:article:id
$6
100515
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100515
*4
$4
HSET
$22
hash:article:by:100360
$2
id
$6
100360
*4
$4
HSET
$22
hash:article:by:100360
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100360
$9
articleId
$4
2478
*4
$4
HSET
$22
hash:article:by:100360
$5
title
$39
Socket编程(六)---TCP/NIO实例讲解
*4
$4
HSET
$22
hash:article:by:100360
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100360
$8
labelIds
$15
[123,63,62,357]
*4
$4
HSET
$22
hash:article:by:100360
$6
digest
$105
本文将通过Channel(通道)、Buffer(缓冲区)以及Selector(选择器)来实现TCP下NIO的实例。
*4
$4
HSET
$22
hash:article:by:100360
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100360
$7
content
$40
csdn/java/1_0_2_4_1504264788.124652.html
*4
$4
HSET
$22
hash:article:by:100360
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100360
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100360
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100360
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100360
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100360
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100360
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100360
$10
createTime
$13
1464012049000
*4
$4
HSET
$22
hash:article:by:100360
$11
releaseTime
$13
1464012049000
*4
$4
HSET
$22
hash:article:by:100360
$10
updateTime
$13
1464012049000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100360
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100360
*3
$5
LPUSH
$15
list:article:id
$6
100360
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100360
*4
$4
HSET
$22
hash:article:by:100355
$2
id
$6
100355
*4
$4
HSET
$22
hash:article:by:100355
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100355
$9
articleId
$4
2482
*4
$4
HSET
$22
hash:article:by:100355
$5
title
$35
Socket编程(五)---NIO原理解读
*4
$4
HSET
$22
hash:article:by:100355
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100355
$8
labelIds
$16
[123,62,354,355]
*4
$4
HSET
$22
hash:article:by:100355
$6
digest
$113
参考文章： 
http://www.cnblogs.com/flyoung2008/p/3251826.html 
http://weixiaolu.iteye.com/blog/14796561.I...
*4
$4
HSET
$22
hash:article:by:100355
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100355
$7
content
$40
csdn/java/1_0_2_5_1504264792.082337.html
*4
$4
HSET
$22
hash:article:by:100355
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100355
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100355
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100355
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100355
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100355
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100355
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100355
$10
createTime
$13
1463997620000
*4
$4
HSET
$22
hash:article:by:100355
$11
releaseTime
$13
1463997620000
*4
$4
HSET
$22
hash:article:by:100355
$10
updateTime
$13
1463997620000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100355
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100355
*3
$5
LPUSH
$15
list:article:id
$6
100355
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100355
*4
$4
HSET
$22
hash:article:by:100392
$2
id
$6
100392
*4
$4
HSET
$22
hash:article:by:100392
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100392
$9
articleId
$4
2483
*4
$4
HSET
$22
hash:article:by:100392
$5
title
$50
Socket编程(四)---使用线程池优化服务端
*4
$4
HSET
$22
hash:article:by:100392
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100392
$8
labelIds
$20
[123,134,353,146,62]
*4
$4
HSET
$22
hash:article:by:100392
$6
digest
$66
在服务端使用线程池，来优化服务端处理的能力。
*4
$4
HSET
$22
hash:article:by:100392
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100392
$7
content
$40
csdn/java/1_0_2_6_1504264793.311422.html
*4
$4
HSET
$22
hash:article:by:100392
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100392
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100392
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100392
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100392
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100392
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100392
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100392
$10
createTime
$13
1463990419000
*4
$4
HSET
$22
hash:article:by:100392
$11
releaseTime
$13
1463990419000
*4
$4
HSET
$22
hash:article:by:100392
$10
updateTime
$13
1463990419000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100392
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100392
*3
$5
LPUSH
$15
list:article:id
$6
100392
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100392
*4
$4
HSET
$22
hash:article:by:100499
$2
id
$6
100499
*4
$4
HSET
$22
hash:article:by:100499
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100499
$9
articleId
$4
2479
*4
$4
HSET
$22
hash:article:by:100499
$5
title
$43
Socket编程(三)---仿QQ多人聊天实例
*4
$4
HSET
$22
hash:article:by:100499
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100499
$8
labelIds
$15
[123,461,62,63]
*4
$4
HSET
$22
hash:article:by:100499
$6
digest
$164
这次的实例，目的是为了模仿QQ上和好友聊天的功能，也就是用户登录后，点击用户头像，发送信息，好友就会接受到信息。
*4
$4
HSET
$22
hash:article:by:100499
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100499
$7
content
$40
csdn/java/1_0_2_7_1504264789.165158.html
*4
$4
HSET
$22
hash:article:by:100499
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100499
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100499
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100499
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100499
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100499
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100499
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100499
$10
createTime
$13
1463839247000
*4
$4
HSET
$22
hash:article:by:100499
$11
releaseTime
$13
1463839247000
*4
$4
HSET
$22
hash:article:by:100499
$10
updateTime
$13
1463839247000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100499
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100499
*3
$5
LPUSH
$15
list:article:id
$6
100499
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100499
*4
$4
HSET
$22
hash:article:by:100367
$2
id
$6
100367
*4
$4
HSET
$22
hash:article:by:100367
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100367
$9
articleId
$4
2481
*4
$4
HSET
$22
hash:article:by:100367
$5
title
$35
Socket编程(二)---TCP简单实例
*4
$4
HSET
$22
hash:article:by:100367
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100367
$8
labelIds
$19
[123,62,355,324,63]
*4
$4
HSET
$22
hash:article:by:100367
$6
digest
$120
从上篇文章我们已经对Socket有了初步的认识，现在我们就通过一个例子来实现TCP简单实例。
*4
$4
HSET
$22
hash:article:by:100367
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100367
$7
content
$40
csdn/java/1_0_2_8_1504264791.147888.html
*4
$4
HSET
$22
hash:article:by:100367
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100367
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100367
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100367
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100367
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100367
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100367
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100367
$10
createTime
$13
1463749242000
*4
$4
HSET
$22
hash:article:by:100367
$11
releaseTime
$13
1463749242000
*4
$4
HSET
$22
hash:article:by:100367
$10
updateTime
$13
1463749242000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100367
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100367
*3
$5
LPUSH
$15
list:article:id
$6
100367
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100367
*4
$4
HSET
$22
hash:article:by:100425
$2
id
$6
100425
*4
$4
HSET
$22
hash:article:by:100425
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100425
$9
articleId
$4
2480
*4
$4
HSET
$22
hash:article:by:100425
$5
title
$32
Socket编程(一)---图解Socket
*4
$4
HSET
$22
hash:article:by:100425
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100425
$8
labelIds
$12
[123,62,125]
*4
$4
HSET
$22
hash:article:by:100425
$6
digest
$55
TCP/UDP基本概念介绍，socket相关行为的解释
*4
$4
HSET
$22
hash:article:by:100425
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100425
$7
content
$40
csdn/java/1_0_2_9_1504264790.099086.html
*4
$4
HSET
$22
hash:article:by:100425
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100425
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100425
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100425
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100425
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100425
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100425
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100425
$10
createTime
$13
1463734846000
*4
$4
HSET
$22
hash:article:by:100425
$11
releaseTime
$13
1463734846000
*4
$4
HSET
$22
hash:article:by:100425
$10
updateTime
$13
1463734846000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100425
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100425
*3
$5
LPUSH
$15
list:article:id
$6
100425
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100425
*4
$4
HSET
$22
hash:article:by:100535
$2
id
$6
100535
*4
$4
HSET
$22
hash:article:by:100535
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100535
$9
articleId
$4
2752
*4
$4
HSET
$22
hash:article:by:100535
$5
title
$23
Log4j使用学习记录
*4
$4
HSET
$22
hash:article:by:100535
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100535
$8
labelIds
$4
[24]
*4
$4
HSET
$22
hash:article:by:100535
$6
digest
$247
这是一篇Log4j使用教程,并不是一篇配置文件详解教程,主要的使用是按照需求来使用,所以随着我的需求增加会不断更新使用方法的.1.环境配置直接导入JAR就可以了,这里使用maven导入 
      ...
*4
$4
HSET
$22
hash:article:by:100535
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100535
$7
content
$41
csdn/java/1_0_2_17_1504265362.842853.html
*4
$4
HSET
$22
hash:article:by:100535
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100535
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100535
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100535
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100535
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100535
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100535
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100535
$10
createTime
$13
1463608840000
*4
$4
HSET
$22
hash:article:by:100535
$11
releaseTime
$13
1463608840000
*4
$4
HSET
$22
hash:article:by:100535
$10
updateTime
$13
1463608840000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100535
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100535
*3
$5
LPUSH
$15
list:article:id
$6
100535
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100535
*4
$4
HSET
$22
hash:article:by:100598
$2
id
$6
100598
*4
$4
HSET
$22
hash:article:by:100598
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100598
$9
articleId
$4
2751
*4
$4
HSET
$22
hash:article:by:100598
$5
title
$32
JSON工具学习记录--FastJSON
*4
$4
HSET
$22
hash:article:by:100598
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100598
$8
labelIds
$5
[428]
*4
$4
HSET
$22
hash:article:by:100598
$6
digest
$227
最近做项目,总是与json打交道,在用了即可json工具后,个人认为fastJson最好用,很方便,API也清晰可见,所以记录下使用方法,给需要的人提供帮助.(部分摘抄自网络)一.API入口Fastj...
*4
$4
HSET
$22
hash:article:by:100598
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100598
$7
content
$41
csdn/java/1_0_2_18_1504265361.690523.html
*4
$4
HSET
$22
hash:article:by:100598
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100598
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100598
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100598
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100598
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100598
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100598
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100598
$10
createTime
$13
1463212855000
*4
$4
HSET
$22
hash:article:by:100598
$11
releaseTime
$13
1463212855000
*4
$4
HSET
$22
hash:article:by:100598
$10
updateTime
$13
1463212855000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100598
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100598
*3
$5
LPUSH
$15
list:article:id
$6
100598
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100598
*4
$4
HSET
$22
hash:article:by:100137
$2
id
$6
100137
*4
$4
HSET
$22
hash:article:by:100137
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100137
$9
articleId
$4
2547
*4
$4
HSET
$22
hash:article:by:100137
$5
title
$36
javascript设计模式--单例模式
*4
$4
HSET
$22
hash:article:by:100137
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100137
$8
labelIds
$7
[69,12]
*4
$4
HSET
$22
hash:article:by:100137
$6
digest
$221
单例模式：只允许实例化一次的对象类 
这种在基本的编程中可能已经经常的用到，只是不知道是单例模式 
比如config.js文件，service.js里都会经常用到：app.factory('payIn...
*4
$4
HSET
$22
hash:article:by:100137
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100137
$7
content
$39
csdn/java/1_1_1_0_1504264924.56747.html
*4
$4
HSET
$22
hash:article:by:100137
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100137
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100137
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100137
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100137
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100137
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100137
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100137
$10
createTime
$13
1462615243000
*4
$4
HSET
$22
hash:article:by:100137
$11
releaseTime
$13
1462615243000
*4
$4
HSET
$22
hash:article:by:100137
$10
updateTime
$13
1462615243000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100137
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100137
*3
$5
LPUSH
$15
list:article:id
$6
100137
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100137
*4
$4
HSET
$22
hash:article:by:100688
$2
id
$6
100688
*4
$4
HSET
$22
hash:article:by:100688
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100688
$9
articleId
$4
2048
*4
$4
HSET
$22
hash:article:by:100688
$5
title
$31
到底什么是集群&分布式
*4
$4
HSET
$22
hash:article:by:100688
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100688
$8
labelIds
$9
[648,649]
*4
$4
HSET
$22
hash:article:by:100688
$6
digest
$303
对于楼主这样工作一年的菜鸟，是不是会看到一些文章标题带有“分布式”“集群”关键字，然后就觉得自己应该看不懂（如下图）。最近对这些概念进行了一定的了解，整理了一下思路，在这里分享给各位猿友。不足之处还望...
*4
$4
HSET
$22
hash:article:by:100688
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100688
$7
content
$40
csdn/java/1_1_1_1_1504264395.253414.html
*4
$4
HSET
$22
hash:article:by:100688
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100688
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100688
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100688
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100688
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100688
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100688
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100688
$10
createTime
$13
1462298449000
*4
$4
HSET
$22
hash:article:by:100688
$11
releaseTime
$13
1462298449000
*4
$4
HSET
$22
hash:article:by:100688
$10
updateTime
$13
1462298449000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100688
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100688
*3
$5
LPUSH
$15
list:article:id
$6
100688
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100688
*4
$4
HSET
$22
hash:article:by:100742
$2
id
$6
100742
*4
$4
HSET
$22
hash:article:by:100742
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100742
$9
articleId
$4
2750
*4
$4
HSET
$22
hash:article:by:100742
$5
title
$49
SSM实战记录(一)--一个大体的分页流程
*4
$4
HSET
$22
hash:article:by:100742
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100742
$8
labelIds
$11
[714,44,27]
*4
$4
HSET
$22
hash:article:by:100742
$6
digest
$213
这是一个使用springMVC+spring+mybatis+bootstrap table做的分页流程,网上之前搜到的类似的教程实在太少了,所以就想着写一个大体的过程(没写的很详细),能帮助到一些人...
*4
$4
HSET
$22
hash:article:by:100742
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100742
$7
content
$41
csdn/java/1_0_2_19_1504265360.730294.html
*4
$4
HSET
$22
hash:article:by:100742
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100742
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100742
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100742
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100742
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100742
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100742
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100742
$10
createTime
$13
1461614429000
*4
$4
HSET
$22
hash:article:by:100742
$11
releaseTime
$13
1461614429000
*4
$4
HSET
$22
hash:article:by:100742
$10
updateTime
$13
1461614429000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100742
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100742
*3
$5
LPUSH
$15
list:article:id
$6
100742
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100742
*4
$4
HSET
$22
hash:article:by:100348
$2
id
$6
100348
*4
$4
HSET
$22
hash:article:by:100348
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100348
$9
articleId
$4
2548
*4
$4
HSET
$22
hash:article:by:100348
$5
title
$36
javascript设计模式--原型模式
*4
$4
HSET
$22
hash:article:by:100348
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100348
$8
labelIds
$11
[69,274,12]
*4
$4
HSET
$22
hash:article:by:100348
$6
digest
$203
Prototype:用原型实例指向创建对象的类，使用于创建新的对象的类共享原型对象的属性及方法．创建一个焦点图//图片轮播类
var LoopImages = function(imgArr,cont...
*4
$4
HSET
$22
hash:article:by:100348
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100348
$7
content
$40
csdn/java/1_1_1_1_1504264925.508514.html
*4
$4
HSET
$22
hash:article:by:100348
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100348
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100348
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100348
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100348
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100348
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100348
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100348
$10
createTime
$13
1461574840000
*4
$4
HSET
$22
hash:article:by:100348
$11
releaseTime
$13
1461574840000
*4
$4
HSET
$22
hash:article:by:100348
$10
updateTime
$13
1461574840000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100348
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100348
*3
$5
LPUSH
$15
list:article:id
$6
100348
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100348
*4
$4
HSET
$22
hash:article:by:100134
$2
id
$6
100134
*4
$4
HSET
$22
hash:article:by:100134
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100134
$9
articleId
$4
2549
*4
$4
HSET
$22
hash:article:by:100134
$5
title
$31
javascript设计模式--Builder
*4
$4
HSET
$22
hash:article:by:100134
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100134
$8
labelIds
$4
[12]
*4
$4
HSET
$22
hash:article:by:100134
$6
digest
$189
Builder:将一个复杂对象的构建层与其表示层相互分离，同样的构件过程可采用不同的表示．    //创建一位人类
    var Human = function(param){
        /...
*4
$4
HSET
$22
hash:article:by:100134
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100134
$7
content
$40
csdn/java/1_1_1_2_1504264926.537561.html
*4
$4
HSET
$22
hash:article:by:100134
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100134
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100134
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100134
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100134
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100134
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100134
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100134
$10
createTime
$13
1461409235000
*4
$4
HSET
$22
hash:article:by:100134
$11
releaseTime
$13
1461409235000
*4
$4
HSET
$22
hash:article:by:100134
$10
updateTime
$13
1461409235000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100134
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100134
*3
$5
LPUSH
$15
list:article:id
$6
100134
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100134
*4
$4
HSET
$22
hash:article:by:100520
$2
id
$6
100520
*4
$4
HSET
$22
hash:article:by:100520
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100520
$9
articleId
$4
2731
*4
$4
HSET
$22
hash:article:by:100520
$5
title
$49
SpringMVC学习记录(八)--开发中的小问题
*4
$4
HSET
$22
hash:article:by:100520
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100520
$8
labelIds
$4
[27]
*4
$4
HSET
$22
hash:article:by:100520
$6
digest
$259
最近在做项目,用此贴记录遇到的一些小问题1.关于json首先需要引入3个包,我看网上有人说只需要两个,但是我没成功,引入3个之后才没问题的 
关于json的返回格式,如果想增加内容的话最好用一个map...
*4
$4
HSET
$22
hash:article:by:100520
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100520
$7
content
$40
csdn/java/1_0_3_0_1504265341.453147.html
*4
$4
HSET
$22
hash:article:by:100520
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100520
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100520
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100520
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100520
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100520
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100520
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100520
$10
createTime
$13
1461351638000
*4
$4
HSET
$22
hash:article:by:100520
$11
releaseTime
$13
1461351638000
*4
$4
HSET
$22
hash:article:by:100520
$10
updateTime
$13
1461351638000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100520
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100520
*3
$5
LPUSH
$15
list:article:id
$6
100520
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100520
*4
$4
HSET
$22
hash:article:by:100465
$2
id
$6
100465
*4
$4
HSET
$22
hash:article:by:100465
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100465
$9
articleId
$4
2741
*4
$4
HSET
$22
hash:article:by:100465
$5
title
$47
Mybatis学习记录(六)--开发中的小问题
*4
$4
HSET
$22
hash:article:by:100465
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100465
$8
labelIds
$5
[118]
*4
$4
HSET
$22
hash:article:by:100465
$6
digest
$223
最近开始做项目,期间遇到一些小问题,开此贴记录一下1.关于order by今天写一个sql查询语句,用了order by但是一直没效果,后来才发现用了#{}取值,mybatis使用这个的话对于Stri...
*4
$4
HSET
$22
hash:article:by:100465
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100465
$7
content
$40
csdn/java/1_0_3_1_1504265350.723321.html
*4
$4
HSET
$22
hash:article:by:100465
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100465
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100465
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100465
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100465
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100465
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100465
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100465
$10
createTime
$13
1461351626000
*4
$4
HSET
$22
hash:article:by:100465
$11
releaseTime
$13
1461351626000
*4
$4
HSET
$22
hash:article:by:100465
$10
updateTime
$13
1461351626000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100465
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100465
*3
$5
LPUSH
$15
list:article:id
$6
100465
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100465
*4
$4
HSET
$22
hash:article:by:100674
$2
id
$6
100674
*4
$4
HSET
$22
hash:article:by:100674
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100674
$9
articleId
$4
2550
*4
$4
HSET
$22
hash:article:by:100674
$5
title
$42
javascript设计模式--抽象工厂模式
*4
$4
HSET
$22
hash:article:by:100674
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100674
$8
labelIds
$11
[361,69,12]
*4
$4
HSET
$22
hash:article:by:100674
$6
digest
$243
抽象工厂模式（abstract Fctory）:通过对类的工厂抽象使其业务用于对产品类鏃的创建，而不负责创建某一类产品的实例．    //汽车抽象类，当使用其实例对象的方法时会抛出错误
    var...
*4
$4
HSET
$22
hash:article:by:100674
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100674
$7
content
$40
csdn/java/1_1_1_3_1504264927.538513.html
*4
$4
HSET
$22
hash:article:by:100674
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100674
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100674
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100674
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100674
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100674
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100674
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100674
$10
createTime
$13
1461315646000
*4
$4
HSET
$22
hash:article:by:100674
$11
releaseTime
$13
1461315646000
*4
$4
HSET
$22
hash:article:by:100674
$10
updateTime
$13
1461315646000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100674
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100674
*3
$5
LPUSH
$15
list:article:id
$6
100674
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100674
*4
$4
HSET
$22
hash:article:by:100705
$2
id
$6
100705
*4
$4
HSET
$22
hash:article:by:100705
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100705
$9
articleId
$4
2239
*4
$4
HSET
$22
hash:article:by:100705
$5
title
$77
Java-单机版的书店管理系统(练习设计模块和思想_系列汇总)
*4
$4
HSET
$22
hash:article:by:100705
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100705
$8
labelIds
$20
[18,116,114,390,209]
*4
$4
HSET
$22
hash:article:by:100705
$6
digest
$251
介绍：本软件系列到此，我已经全部写完了。项目练习目标 ：1、Java应用程序基本分析  
2、培养面向对象编程的基本思想  
3、Java基本设计模式综合应用  
4、掌握分层和接口的基本设计  
5...
*4
$4
HSET
$22
hash:article:by:100705
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100705
$7
content
$40
csdn/java/1_0_1_8_1504264536.851537.html
*4
$4
HSET
$22
hash:article:by:100705
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100705
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100705
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100705
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100705
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100705
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100705
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100705
$10
createTime
$13
1461168026000
*4
$4
HSET
$22
hash:article:by:100705
$11
releaseTime
$13
1461168026000
*4
$4
HSET
$22
hash:article:by:100705
$10
updateTime
$13
1461168026000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100705
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100705
*3
$5
LPUSH
$15
list:article:id
$6
100705
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100705
*4
$4
HSET
$22
hash:article:by:100476
$2
id
$6
100476
*4
$4
HSET
$22
hash:article:by:100476
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100476
$9
articleId
$4
2246
*4
$4
HSET
$22
hash:article:by:100476
$5
title
$76
Java-单机版的书店管理系统(练习设计模块和思想_系列 八 )
*4
$4
HSET
$22
hash:article:by:100476
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100476
$8
labelIds
$12
[150,18,447]
*4
$4
HSET
$22
hash:article:by:100476
$6
digest
$169
本系列前面博客的链接：Java-单机版的书店管理系统(练习设计模块和思想_系列 七 ) 
http://blog.csdn.net/qq_26525215/article/details/511906...
*4
$4
HSET
$22
hash:article:by:100476
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100476
$7
content
$40
csdn/java/1_0_1_9_1504264540.103925.html
*4
$4
HSET
$22
hash:article:by:100476
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100476
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100476
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100476
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100476
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100476
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100476
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100476
$10
createTime
$13
1461106846000
*4
$4
HSET
$22
hash:article:by:100476
$11
releaseTime
$13
1461106846000
*4
$4
HSET
$22
hash:article:by:100476
$10
updateTime
$13
1461106846000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100476
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100476
*3
$5
LPUSH
$15
list:article:id
$6
100476
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100476
*4
$4
HSET
$22
hash:article:by:100469
$2
id
$6
100469
*4
$4
HSET
$22
hash:article:by:100469
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100469
$9
articleId
$4
2241
*4
$4
HSET
$22
hash:article:by:100469
$5
title
$76
Java-单机版的书店管理系统(练习设计模块和思想_系列 七 )
*4
$4
HSET
$22
hash:article:by:100469
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100469
$8
labelIds
$13
[441,116,114]
*4
$4
HSET
$22
hash:article:by:100469
$6
digest
$169
本系列前面博客的链接：Java-单机版的书店管理系统(练习设计模块和思想_系列 六 ) 
http://blog.csdn.net/qq_26525215/article/details/511692...
*4
$4
HSET
$22
hash:article:by:100469
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100469
$7
content
$41
csdn/java/1_0_1_10_1504264537.805061.html
*4
$4
HSET
$22
hash:article:by:100469
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100469
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100469
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100469
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100469
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100469
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100469
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100469
$10
createTime
$13
1461074409000
*4
$4
HSET
$22
hash:article:by:100469
$11
releaseTime
$13
1461074409000
*4
$4
HSET
$22
hash:article:by:100469
$10
updateTime
$13
1461074409000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100469
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100469
*3
$5
LPUSH
$15
list:article:id
$6
100469
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100469
*4
$4
HSET
$22
hash:article:by:100095
$2
id
$6
100095
*4
$4
HSET
$22
hash:article:by:100095
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100095
$9
articleId
$4
2551
*4
$4
HSET
$22
hash:article:by:100095
$5
title
$46
javascript设计模式－－工厂方法模式
*4
$4
HSET
$22
hash:article:by:100095
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100095
$8
labelIds
$13
[69,12,70,71]
*4
$4
HSET
$22
hash:article:by:100095
$6
digest
$191
工厂方法模式将实际创建对象工作推迟到子类当中。 
1.安全模式类，用new和不用new都能够得到预期的对象。    var Demo = function(){}
    Demo.prototype...
*4
$4
HSET
$22
hash:article:by:100095
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100095
$7
content
$40
csdn/java/1_1_1_4_1504264928.482445.html
*4
$4
HSET
$22
hash:article:by:100095
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100095
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100095
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100095
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100095
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100095
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100095
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100095
$10
createTime
$13
1461056451000
*4
$4
HSET
$22
hash:article:by:100095
$11
releaseTime
$13
1461056451000
*4
$4
HSET
$22
hash:article:by:100095
$10
updateTime
$13
1461056451000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100095
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100095
*3
$5
LPUSH
$15
list:article:id
$6
100095
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100095
*4
$4
HSET
$22
hash:article:by:100525
$2
id
$6
100525
*4
$4
HSET
$22
hash:article:by:100525
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100525
$9
articleId
$4
2732
*4
$4
HSET
$22
hash:article:by:100525
$5
title
$47
Mybatis学习记录(五)--整合spring开发Dao
*4
$4
HSET
$22
hash:article:by:100525
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100525
$8
labelIds
$8
[118,59]
*4
$4
HSET
$22
hash:article:by:100525
$6
digest
$185
mybatis和spring整合,也就是通过spring管理SqlSessionFactory、mapper接口。一.导入架包除了spring的包和mybatis的包,还需要导入两者的整合包,目前这个...
*4
$4
HSET
$22
hash:article:by:100525
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100525
$7
content
$39
csdn/java/1_0_3_2_1504265342.50696.html
*4
$4
HSET
$22
hash:article:by:100525
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100525
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100525
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100525
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100525
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100525
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100525
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100525
$10
createTime
$13
1461013241000
*4
$4
HSET
$22
hash:article:by:100525
$11
releaseTime
$13
1461013241000
*4
$4
HSET
$22
hash:article:by:100525
$10
updateTime
$13
1461013241000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100525
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100525
*3
$5
LPUSH
$15
list:article:id
$6
100525
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100525
*4
$4
HSET
$22
hash:article:by:100658
$2
id
$6
100658
*4
$4
HSET
$22
hash:article:by:100658
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100658
$9
articleId
$4
2733
*4
$4
HSET
$22
hash:article:by:100658
$5
title
$47
Mybatis学习记录(四)--高级查询和缓存
*4
$4
HSET
$22
hash:article:by:100658
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100658
$8
labelIds
$9
[118,153]
*4
$4
HSET
$22
hash:article:by:100658
$6
digest
$285
这些都是连贯的学习笔记,所以有的地方因为之前都说过,所以也就没怎么写详细了,看不太明白的可以看看之前的笔记.一.高级查询高级查询主要是一对一查询,一对多查询,多对多查询1.一对一查询有用户和订单两个表...
*4
$4
HSET
$22
hash:article:by:100658
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100658
$7
content
$40
csdn/java/1_0_3_3_1504265343.018769.html
*4
$4
HSET
$22
hash:article:by:100658
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100658
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100658
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100658
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100658
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100658
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100658
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100658
$10
createTime
$13
1460984431000
*4
$4
HSET
$22
hash:article:by:100658
$11
releaseTime
$13
1460984431000
*4
$4
HSET
$22
hash:article:by:100658
$10
updateTime
$13
1460984431000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100658
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100658
*3
$5
LPUSH
$15
list:article:id
$6
100658
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100658
*4
$4
HSET
$22
hash:article:by:100739
$2
id
$6
100739
*4
$4
HSET
$22
hash:article:by:100739
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100739
$9
articleId
$4
2243
*4
$4
HSET
$22
hash:article:by:100739
$5
title
$76
Java-单机版的书店管理系统(练习设计模块和思想_系列 六 )
*4
$4
HSET
$22
hash:article:by:100739
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100739
$8
labelIds
$21
[116,441,114,709,710]
*4
$4
HSET
$22
hash:article:by:100739
$6
digest
$169
本系列前面博客的链接：Java-单机版的书店管理系统(练习设计模块和思想_系列 五 ) 
http://blog.csdn.net/qq_26525215/article/details/511368...
*4
$4
HSET
$22
hash:article:by:100739
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100739
$7
content
$41
csdn/java/1_0_1_11_1504264538.972116.html
*4
$4
HSET
$22
hash:article:by:100739
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100739
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100739
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100739
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100739
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100739
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100739
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100739
$10
createTime
$13
1460822448000
*4
$4
HSET
$22
hash:article:by:100739
$11
releaseTime
$13
1460822448000
*4
$4
HSET
$22
hash:article:by:100739
$10
updateTime
$13
1460822448000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100739
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100739
*3
$5
LPUSH
$15
list:article:id
$6
100739
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100739
*4
$4
HSET
$22
hash:article:by:100475
$2
id
$6
100475
*4
$4
HSET
$22
hash:article:by:100475
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100475
$9
articleId
$4
2745
*4
$4
HSET
$22
hash:article:by:100475
$5
title
$51
Mybatis学习记录(三)--Mybatis配置文件详解
*4
$4
HSET
$22
hash:article:by:100475
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100475
$8
labelIds
$9
[118,446]
*4
$4
HSET
$22
hash:article:by:100475
$6
digest
$181
关于mybatis的配置文件,主要有两个,一个是SqlMapperConfig.xml文件一个是mapper.xml文件,分别对这两个进行深入全面学习.一.SqlMapperConfig.xml文件1...
*4
$4
HSET
$22
hash:article:by:100475
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100475
$7
content
$40
csdn/java/1_0_3_4_1504265354.740856.html
*4
$4
HSET
$22
hash:article:by:100475
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100475
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100475
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100475
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100475
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100475
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100475
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100475
$10
createTime
$13
1460761227000
*4
$4
HSET
$22
hash:article:by:100475
$11
releaseTime
$13
1460761227000
*4
$4
HSET
$22
hash:article:by:100475
$10
updateTime
$13
1460761227000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100475
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100475
*3
$5
LPUSH
$15
list:article:id
$6
100475
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100475
*4
$4
HSET
$22
hash:article:by:100510
$2
id
$6
100510
*4
$4
HSET
$22
hash:article:by:100510
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100510
$9
articleId
$4
2743
*4
$4
HSET
$22
hash:article:by:100510
$5
title
$48
Mybatis学习记录(二)--Mybatis开发DAO方式
*4
$4
HSET
$22
hash:article:by:100510
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100510
$8
labelIds
$9
[118,465]
*4
$4
HSET
$22
hash:article:by:100510
$6
digest
$217
mybatis开发dao的方法通常用两种,一种是传统DAO的方法,一种是基于mapper代理的方法,下面学习这两种开发模式.写dao之前应该要对SqlSession有一个更加细致的了解一.mybati...
*4
$4
HSET
$22
hash:article:by:100510
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100510
$7
content
$40
csdn/java/1_0_3_5_1504265352.617573.html
*4
$4
HSET
$22
hash:article:by:100510
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100510
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100510
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100510
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100510
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100510
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100510
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100510
$10
createTime
$13
1460671234000
*4
$4
HSET
$22
hash:article:by:100510
$11
releaseTime
$13
1460671234000
*4
$4
HSET
$22
hash:article:by:100510
$10
updateTime
$13
1460671234000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100510
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100510
*3
$5
LPUSH
$15
list:article:id
$6
100510
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100510
*4
$4
HSET
$22
hash:article:by:100661
$2
id
$6
100661
*4
$4
HSET
$22
hash:article:by:100661
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100661
$9
articleId
$4
2742
*4
$4
HSET
$22
hash:article:by:100661
$5
title
$39
Mybatis学习记录(一)--Mybatis入门
*4
$4
HSET
$22
hash:article:by:100661
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100661
$8
labelIds
$9
[118,143]
*4
$4
HSET
$22
hash:article:by:100661
$6
digest
$233
一.传统数据库解决方案对于数据库的连接,在java中简单的就是直接使用JDBC来控制数据库.传统的jdbc方式按照以下几步来操作数据库.1.加载驱动 2. 创建并获取连接 3. 创建jdbc stat...
*4
$4
HSET
$22
hash:article:by:100661
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100661
$7
content
$40
csdn/java/1_0_3_6_1504265351.607775.html
*4
$4
HSET
$22
hash:article:by:100661
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100661
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100661
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100661
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100661
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100661
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100661
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100661
$10
createTime
$13
1460584836000
*4
$4
HSET
$22
hash:article:by:100661
$11
releaseTime
$13
1460584836000
*4
$4
HSET
$22
hash:article:by:100661
$10
updateTime
$13
1460584836000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100661
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100661
*3
$5
LPUSH
$15
list:article:id
$6
100661
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100661
*4
$4
HSET
$22
hash:article:by:100466
$2
id
$6
100466
*4
$4
HSET
$22
hash:article:by:100466
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100466
$9
articleId
$4
2571
*4
$4
HSET
$22
hash:article:by:100466
$5
title
$24
Eclipse中设置VM参数
*4
$4
HSET
$22
hash:article:by:100466
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100466
$8
labelIds
$13
[437,438,439]
*4
$4
HSET
$22
hash:article:by:100466
$6
digest
$189
eclipse.ini
-Xms256m //设置堆最小值
-Xmx1024m //设置堆最大值



Eclipse
做JVM 的分析时,需要动态设置JVM的参数来进行各种测试，
可以在下图地方进行...
*4
$4
HSET
$22
hash:article:by:100466
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100466
$7
content
$40
csdn/java/1_1_1_7_1504264969.060317.html
*4
$4
HSET
$22
hash:article:by:100466
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100466
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100466
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100466
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100466
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100466
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100466
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100466
$10
createTime
$13
1460581200000
*4
$4
HSET
$22
hash:article:by:100466
$11
releaseTime
$13
1460581200000
*4
$4
HSET
$22
hash:article:by:100466
$10
updateTime
$13
1460581200000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100466
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100466
*3
$5
LPUSH
$15
list:article:id
$6
100466
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100466
*4
$4
HSET
$22
hash:article:by:100749
$2
id
$6
100749
*4
$4
HSET
$22
hash:article:by:100749
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100749
$9
articleId
$4
2223
*4
$4
HSET
$22
hash:article:by:100749
$5
title
$76
Java-单机版的书店管理系统(练习设计模块和思想_系列 五 )
*4
$4
HSET
$22
hash:article:by:100749
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100749
$8
labelIds
$19
[116,114,78,18,336]
*4
$4
HSET
$22
hash:article:by:100749
$6
digest
$225
经过前几次的发博客。。 
我发现这样发代码太费劲了。。所以我把目前我完成的源代码上传到百度云里面去了。 
百度云链接： 
http://pan.baidu.com/s/1o7X1Kk6 
链接如果失效...
*4
$4
HSET
$22
hash:article:by:100749
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100749
$7
content
$41
csdn/java/1_0_1_12_1504264527.374729.html
*4
$4
HSET
$22
hash:article:by:100749
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100749
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100749
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100749
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100749
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100749
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100749
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100749
$10
createTime
$13
1460487654000
*4
$4
HSET
$22
hash:article:by:100749
$11
releaseTime
$13
1460487654000
*4
$4
HSET
$22
hash:article:by:100749
$10
updateTime
$13
1460487654000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100749
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100749
*3
$5
LPUSH
$15
list:article:id
$6
100749
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100749
*4
$4
HSET
$22
hash:article:by:100511
$2
id
$6
100511
*4
$4
HSET
$22
hash:article:by:100511
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100511
$9
articleId
$4
2740
*4
$4
HSET
$22
hash:article:by:100511
$5
title
$43
Maven学习记录(一)--IDEA下环境配置
*4
$4
HSET
$22
hash:article:by:100511
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100511
$8
labelIds
$8
[79,466]
*4
$4
HSET
$22
hash:article:by:100511
$6
digest
$251
一.什么是Maven?Maven 是一个项目管理和整合工具。Maven 为开发者提供了一套完整的构建生命周期框架。开发团队几乎不用花多少时间就能够自动完成工程的基础构建配置，因为 Maven 使用了一...
*4
$4
HSET
$22
hash:article:by:100511
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100511
$7
content
$40
csdn/java/1_0_3_7_1504265349.480813.html
*4
$4
HSET
$22
hash:article:by:100511
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100511
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100511
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100511
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100511
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100511
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100511
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100511
$10
createTime
$13
1460412051000
*4
$4
HSET
$22
hash:article:by:100511
$11
releaseTime
$13
1460412051000
*4
$4
HSET
$22
hash:article:by:100511
$10
updateTime
$13
1460412051000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100511
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100511
*3
$5
LPUSH
$15
list:article:id
$6
100511
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100511
*4
$4
HSET
$22
hash:article:by:100474
$2
id
$6
100474
*4
$4
HSET
$22
hash:article:by:100474
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100474
$9
articleId
$4
2225
*4
$4
HSET
$22
hash:article:by:100474
$5
title
$79
Java-单机版的书店管理系统(练习设计模块和思想_系列 四(2) )
*4
$4
HSET
$22
hash:article:by:100474
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100474
$8
labelIds
$16
[116,114,441,45]
*4
$4
HSET
$22
hash:article:by:100474
$6
digest
$267
说明：本博客为补全上篇-Java-单机版的书店管理系统(练习设计模块和思想_系列 四(1) )的，所以如果不懂，请先看上一篇。 
本系列都是我一步一步学习来的， 
所以，可能比较适合初学设计模块的人来...
*4
$4
HSET
$22
hash:article:by:100474
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100474
$7
content
$40
csdn/java/1_0_1_13_1504264528.61916.html
*4
$4
HSET
$22
hash:article:by:100474
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100474
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100474
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100474
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100474
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100474
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100474
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100474
$10
createTime
$13
1460329236000
*4
$4
HSET
$22
hash:article:by:100474
$11
releaseTime
$13
1460329236000
*4
$4
HSET
$22
hash:article:by:100474
$10
updateTime
$13
1460329236000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100474
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100474
*3
$5
LPUSH
$15
list:article:id
$6
100474
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100474
*4
$4
HSET
$22
hash:article:by:100468
$2
id
$6
100468
*4
$4
HSET
$22
hash:article:by:100468
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100468
$9
articleId
$4
2235
*4
$4
HSET
$22
hash:article:by:100468
$5
title
$79
Java-单机版的书店管理系统(练习设计模块和思想_系列 四(1) )
*4
$4
HSET
$22
hash:article:by:100468
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100468
$8
labelIds
$21
[116,245,113,440,114]
*4
$4
HSET
$22
hash:article:by:100468
$6
digest
$279
本系列四介绍说明：主要是添加了Uuid模块，现在的uuid并不是由用户输入，而是我们通过软件内部自动生成（通过唱票模式），uuid是不会产生重复的！还有把主界面改了下，以后会改成登录页面的（待完善）。...
*4
$4
HSET
$22
hash:article:by:100468
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100468
$7
content
$41
csdn/java/1_0_1_14_1504264532.720198.html
*4
$4
HSET
$22
hash:article:by:100468
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100468
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100468
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100468
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100468
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100468
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100468
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100468
$10
createTime
$13
1460329211000
*4
$4
HSET
$22
hash:article:by:100468
$11
releaseTime
$13
1460329211000
*4
$4
HSET
$22
hash:article:by:100468
$10
updateTime
$13
1460329211000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100468
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100468
*3
$5
LPUSH
$15
list:article:id
$6
100468
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100468
*4
$4
HSET
$22
hash:article:by:100333
$2
id
$6
100333
*4
$4
HSET
$22
hash:article:by:100333
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100333
$9
articleId
$4
2738
*4
$4
HSET
$22
hash:article:by:100333
$5
title
$46
SpringMVC学习记录(七)--拦截器的使用
*4
$4
HSET
$22
hash:article:by:100333
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100333
$8
labelIds
$8
[27,342]
*4
$4
HSET
$22
hash:article:by:100333
$6
digest
$191
SpringMVC的请求如下面这种图所示: 
可以看出所有的请求都要通过Dispatherservlet来接收,然后通过Handlermapping来决定使用哪个控制器,再根据ViewResolver...
*4
$4
HSET
$22
hash:article:by:100333
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100333
$7
content
$40
csdn/java/1_0_3_8_1504265347.457533.html
*4
$4
HSET
$22
hash:article:by:100333
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100333
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100333
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100333
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100333
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100333
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100333
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100333
$10
createTime
$13
1460152846000
*4
$4
HSET
$22
hash:article:by:100333
$11
releaseTime
$13
1460152846000
*4
$4
HSET
$22
hash:article:by:100333
$10
updateTime
$13
1460152846000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100333
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100333
*3
$5
LPUSH
$15
list:article:id
$6
100333
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100333
*4
$4
HSET
$22
hash:article:by:100650
$2
id
$6
100650
*4
$4
HSET
$22
hash:article:by:100650
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100650
$9
articleId
$4
2237
*4
$4
HSET
$22
hash:article:by:100650
$5
title
$76
Java-单机版的书店管理系统(练习设计模块和思想_系列 三 )
*4
$4
HSET
$22
hash:article:by:100650
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100650
$8
labelIds
$8
[116,18]
*4
$4
HSET
$22
hash:article:by:100650
$6
digest
$271
介绍今天对系列二的一个添加用户的输入小bug进行了解决， 
增加了用户模块的，删除用户，和修改用户模块。下面的代码是相对于系列二来说进行了修改或者是增加的类.先看AddPanel类的修改： 
在收集参...
*4
$4
HSET
$22
hash:article:by:100650
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100650
$7
content
$41
csdn/java/1_0_1_15_1504264533.700442.html
*4
$4
HSET
$22
hash:article:by:100650
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100650
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100650
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100650
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100650
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100650
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100650
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100650
$10
createTime
$13
1460138453000
*4
$4
HSET
$22
hash:article:by:100650
$11
releaseTime
$13
1460138453000
*4
$4
HSET
$22
hash:article:by:100650
$10
updateTime
$13
1460138453000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100650
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100650
*3
$5
LPUSH
$15
list:article:id
$6
100650
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100650
*4
$4
HSET
$22
hash:article:by:100330
$2
id
$6
100330
*4
$4
HSET
$22
hash:article:by:100330
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100330
$9
articleId
$4
2228
*4
$4
HSET
$22
hash:article:by:100330
$5
title
$76
Java-单机版的书店管理系统(练习设计模块和思想_系列 二 )
*4
$4
HSET
$22
hash:article:by:100330
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100330
$8
labelIds
$20
[245,114,18,336,337]
*4
$4
HSET
$22
hash:article:by:100330
$6
digest
$279
今天对前面的代码有了小小的修改，让代码更加完善了一点。 
至于用户唯一标识码uuid，会在以后修改成程序内部生成的， 
现在的uuid还是由用户自己设置。今天对这个程序，添加了用户界面的表现层的一部分...
*4
$4
HSET
$22
hash:article:by:100330
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100330
$7
content
$41
csdn/java/1_0_1_16_1504264529.684558.html
*4
$4
HSET
$22
hash:article:by:100330
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100330
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100330
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100330
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100330
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100330
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100330
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100330
$10
createTime
$13
1460059240000
*4
$4
HSET
$22
hash:article:by:100330
$11
releaseTime
$13
1460059240000
*4
$4
HSET
$22
hash:article:by:100330
$10
updateTime
$13
1460059240000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100330
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100330
*3
$5
LPUSH
$15
list:article:id
$6
100330
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100330
*4
$4
HSET
$22
hash:article:by:100664
$2
id
$6
100664
*4
$4
HSET
$22
hash:article:by:100664
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100664
$9
articleId
$4
2739
*4
$4
HSET
$22
hash:article:by:100664
$5
title
$43
SpringMVC学习记录(六)--Validator验证
*4
$4
HSET
$22
hash:article:by:100664
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100664
$8
labelIds
$8
[27,617]
*4
$4
HSET
$22
hash:article:by:100664
$6
digest
$211
SpringMVC服务器验证一种是有两种方式,一种是基于Validator接口,一种是使用Annotaion JSR-303标准的验证,下面主要是学习这两种,工作中推荐后者,方便很多一.基于Valid...
*4
$4
HSET
$22
hash:article:by:100664
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100664
$7
content
$40
csdn/java/1_0_3_9_1504265348.548521.html
*4
$4
HSET
$22
hash:article:by:100664
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100664
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100664
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100664
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100664
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100664
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100664
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100664
$10
createTime
$13
1459980023000
*4
$4
HSET
$22
hash:article:by:100664
$11
releaseTime
$13
1459980023000
*4
$4
HSET
$22
hash:article:by:100664
$10
updateTime
$13
1459980023000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100664
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100664
*3
$5
LPUSH
$15
list:article:id
$6
100664
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100664
*4
$4
HSET
$22
hash:article:by:100746
$2
id
$6
100746
*4
$4
HSET
$22
hash:article:by:100746
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100746
$9
articleId
$4
2233
*4
$4
HSET
$22
hash:article:by:100746
$5
title
$76
Java-单机版的书店管理系统(练习设计模块和思想_系列 一 )
*4
$4
HSET
$22
hash:article:by:100746
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100746
$8
labelIds
$15
[18,390,12,114]
*4
$4
HSET
$22
hash:article:by:100746
$6
digest
$247
书店管理系统：项目练习目标 ： 
1、Java应用程序基本分析 
2、培养面向对象编程的基本思想 
3、Java基本设计模式综合应用 
4、掌握分层和接口的基本设计 
5、构建合理的Java应用程序包...
*4
$4
HSET
$22
hash:article:by:100746
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100746
$7
content
$41
csdn/java/1_0_1_17_1504264531.657311.html
*4
$4
HSET
$22
hash:article:by:100746
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100746
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100746
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100746
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100746
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100746
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100746
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100746
$10
createTime
$13
1459947605000
*4
$4
HSET
$22
hash:article:by:100746
$11
releaseTime
$13
1459947605000
*4
$4
HSET
$22
hash:article:by:100746
$10
updateTime
$13
1459947605000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100746
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100746
*3
$5
LPUSH
$15
list:article:id
$6
100746
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100746
*4
$4
HSET
$22
hash:article:by:100524
$2
id
$6
100524
*4
$4
HSET
$22
hash:article:by:100524
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100524
$9
articleId
$4
2230
*4
$4
HSET
$22
hash:article:by:100524
$5
title
$43
Java---设计模式app小软件汇总应用
*4
$4
HSET
$22
hash:article:by:100524
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100524
$8
labelIds
$14
[12,18,209,61]
*4
$4
HSET
$22
hash:article:by:100524
$6
digest
$261
写了一个app小软件，重点不在于软件，软件bug挺多，也没去修改。 
这个小软件只是为了更好的说明和了解设计模块而做的。 
Java 程序设计–包结构 
Java程序设计的系统体系结构很大一部分都体现...
*4
$4
HSET
$22
hash:article:by:100524
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100524
$7
content
$41
csdn/java/1_0_1_18_1504264530.630782.html
*4
$4
HSET
$22
hash:article:by:100524
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100524
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100524
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100524
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100524
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100524
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100524
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100524
$10
createTime
$13
1459904421000
*4
$4
HSET
$22
hash:article:by:100524
$11
releaseTime
$13
1459904421000
*4
$4
HSET
$22
hash:article:by:100524
$10
updateTime
$13
1459904421000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100524
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100524
*3
$5
LPUSH
$15
list:article:id
$6
100524
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100524
*4
$4
HSET
$22
hash:article:by:100657
$2
id
$6
100657
*4
$4
HSET
$22
hash:article:by:100657
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100657
$9
articleId
$4
2737
*4
$4
HSET
$22
hash:article:by:100657
$5
title
$40
SpringMVC学习记录(五)--表单标签
*4
$4
HSET
$22
hash:article:by:100657
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100657
$8
labelIds
$8
[27,190]
*4
$4
HSET
$22
hash:article:by:100657
$6
digest
$235
在使用SpringMVC的时候我们可以使用Spring封装的一系列表单标签，这些标签都可以访问到ModelMap中的内容。下面将对这些标签一一介绍。1.引入标签头文件在正式介绍SpringMVC的表单...
*4
$4
HSET
$22
hash:article:by:100657
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100657
$7
content
$41
csdn/java/1_0_3_10_1504265346.536141.html
*4
$4
HSET
$22
hash:article:by:100657
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100657
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100657
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100657
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100657
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100657
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100657
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100657
$10
createTime
$13
1459897232000
*4
$4
HSET
$22
hash:article:by:100657
$11
releaseTime
$13
1459897232000
*4
$4
HSET
$22
hash:article:by:100657
$10
updateTime
$13
1459897232000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100657
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100657
*3
$5
LPUSH
$15
list:article:id
$6
100657
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100657
*4
$4
HSET
$22
hash:article:by:100735
$2
id
$6
100735
*4
$4
HSET
$22
hash:article:by:100735
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100735
$9
articleId
$4
2734
*4
$4
HSET
$22
hash:article:by:100735
$5
title
$49
SpringMVC学习记录(四)--文件上传与下载
*4
$4
HSET
$22
hash:article:by:100735
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100735
$8
labelIds
$12
[27,503,706]
*4
$4
HSET
$22
hash:article:by:100735
$6
digest
$263
学习一个框架少不了学习文件上传和下载,原理来说上传和下载都是基本二进制流的转换,所以搞清楚了这一点就很容易理解上传和下载了在使用springMVC进行系统实现时，springMVC默认的解析器里面是没...
*4
$4
HSET
$22
hash:article:by:100735
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100735
$7
content
$41
csdn/java/1_0_3_11_1504265343.564121.html
*4
$4
HSET
$22
hash:article:by:100735
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100735
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100735
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100735
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100735
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100735
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100735
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100735
$10
createTime
$13
1459807217000
*4
$4
HSET
$22
hash:article:by:100735
$11
releaseTime
$13
1459807217000
*4
$4
HSET
$22
hash:article:by:100735
$10
updateTime
$13
1459807217000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100735
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100735
*3
$5
LPUSH
$15
list:article:id
$6
100735
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100735
*4
$4
HSET
$22
hash:article:by:100531
$2
id
$6
100531
*4
$4
HSET
$22
hash:article:by:100531
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100531
$9
articleId
$4
2744
*4
$4
HSET
$22
hash:article:by:100531
$5
title
$40
SpringMVC学习记录(三)--异常处理
*4
$4
HSET
$22
hash:article:by:100531
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100531
$8
labelIds
$8
[27,272]
*4
$4
HSET
$22
hash:article:by:100531
$6
digest
$207
学习springMVC从大牛那借鉴了很多经验,感谢ITEYE的大牛springMVC提供的异常处理主要有两种方式，一种是直接实现自己的HandlerExceptionResolver，当然这也包括使用...
*4
$4
HSET
$22
hash:article:by:100531
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100531
$7
content
$41
csdn/java/1_0_3_12_1504265353.872469.html
*4
$4
HSET
$22
hash:article:by:100531
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100531
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100531
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100531
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100531
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100531
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100531
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100531
$10
createTime
$13
1459792831000
*4
$4
HSET
$22
hash:article:by:100531
$11
releaseTime
$13
1459792831000
*4
$4
HSET
$22
hash:article:by:100531
$10
updateTime
$13
1459792831000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100531
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100531
*3
$5
LPUSH
$15
list:article:id
$6
100531
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100531
*4
$4
HSET
$22
hash:article:by:100728
$2
id
$6
100728
*4
$4
HSET
$22
hash:article:by:100728
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100728
$9
articleId
$4
2736
*4
$4
HSET
$22
hash:article:by:100728
$5
title
$54
SpringMVC学习记录(二)--controller和view的联系
*4
$4
HSET
$22
hash:article:by:100728
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100728
$8
labelIds
$8
[27,102]
*4
$4
HSET
$22
hash:article:by:100728
$6
digest
$215
对于SpringMVC来说,controller由两个部分构成,分别是分发器和控制器,分发器DispatcherServlet决定着请求使用哪个控制器,并且决定着控制器返回哪个视图,整体结构如下. 
...
*4
$4
HSET
$22
hash:article:by:100728
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100728
$7
content
$41
csdn/java/1_0_3_13_1504265345.493061.html
*4
$4
HSET
$22
hash:article:by:100728
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100728
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100728
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100728
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100728
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100728
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100728
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100728
$10
createTime
$13
1459782051000
*4
$4
HSET
$22
hash:article:by:100728
$11
releaseTime
$13
1459782051000
*4
$4
HSET
$22
hash:article:by:100728
$10
updateTime
$13
1459782051000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100728
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100728
*3
$5
LPUSH
$15
list:article:id
$6
100728
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100728
*4
$4
HSET
$22
hash:article:by:100613
$2
id
$6
100613
*4
$4
HSET
$22
hash:article:by:100613
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100613
$9
articleId
$4
2735
*4
$4
HSET
$22
hash:article:by:100613
$5
title
$40
SpringMVC学习记录(一)--环境配置
*4
$4
HSET
$22
hash:article:by:100613
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100613
$8
labelIds
$8
[27,569]
*4
$4
HSET
$22
hash:article:by:100613
$6
digest
$189
在IDEA下配置SpringMVC环境是相当简单的,这里强烈推荐Intellij IDEA开发javaWEB简直完爆eclipse.1.创建项目创建项目很简单,直接选择SpringMVC即可,并且ID...
*4
$4
HSET
$22
hash:article:by:100613
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100613
$7
content
$41
csdn/java/1_0_3_14_1504265344.553381.html
*4
$4
HSET
$22
hash:article:by:100613
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100613
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100613
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100613
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100613
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100613
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100613
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100613
$10
createTime
$13
1459778404000
*4
$4
HSET
$22
hash:article:by:100613
$11
releaseTime
$13
1459778404000
*4
$4
HSET
$22
hash:article:by:100613
$10
updateTime
$13
1459778404000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100613
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100613
*3
$5
LPUSH
$15
list:article:id
$6
100613
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100613
*4
$4
HSET
$22
hash:article:by:100314
$2
id
$6
100314
*4
$4
HSET
$22
hash:article:by:100314
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100314
$9
articleId
$4
2229
*4
$4
HSET
$22
hash:article:by:100314
$5
title
$33
Java---设计模块(装饰模式)
*4
$4
HSET
$22
hash:article:by:100314
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100314
$8
labelIds
$12
[314,116,71]
*4
$4
HSET
$22
hash:article:by:100314
$6
digest
$233
★ 场景和问题在不对原有对象类进行修改的基础上，如何给一个或多个已有的类对象提供增强额外的功能？★ 引例 
写一个MyBufferedReader类，使它能够对字符流(如FileReader、Inpu...
*4
$4
HSET
$22
hash:article:by:100314
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100314
$7
content
$41
csdn/java/1_0_1_19_1504264530.578956.html
*4
$4
HSET
$22
hash:article:by:100314
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100314
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100314
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100314
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100314
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100314
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100314
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100314
$10
createTime
$13
1459724458000
*4
$4
HSET
$22
hash:article:by:100314
$11
releaseTime
$13
1459724458000
*4
$4
HSET
$22
hash:article:by:100314
$10
updateTime
$13
1459724458000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100314
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100314
*3
$5
LPUSH
$15
list:article:id
$6
100314
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100314
*4
$4
HSET
$22
hash:article:by:100163
$2
id
$6
100163
*4
$4
HSET
$22
hash:article:by:100163
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100163
$9
articleId
$4
2582
*4
$4
HSET
$22
hash:article:by:100163
$5
title
$30
Java---设计模块(值对象)
*4
$4
HSET
$22
hash:article:by:100163
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100163
$8
labelIds
$12
[149,18,150]
*4
$4
HSET
$22
hash:article:by:100163
$6
digest
$281
★ 场景和问题 
在Java开发时，需要来回交换大量的数据，比如要为方法传入参数，也要获取方法的返回值，该如何能更好的进行数据的交互？★ 基本的编写步骤 
◎第1步：写一个类，实现可序列化（如果以后数...
*4
$4
HSET
$22
hash:article:by:100163
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100163
$7
content
$40
csdn/java/1_0_2_0_1504265033.605077.html
*4
$4
HSET
$22
hash:article:by:100163
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100163
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100163
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100163
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100163
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100163
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100163
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100163
$10
createTime
$13
1459720832000
*4
$4
HSET
$22
hash:article:by:100163
$11
releaseTime
$13
1459720832000
*4
$4
HSET
$22
hash:article:by:100163
$10
updateTime
$13
1459720832000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100163
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100163
*3
$5
LPUSH
$15
list:article:id
$6
100163
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100163
*4
$4
HSET
$22
hash:article:by:100133
$2
id
$6
100133
*4
$4
HSET
$22
hash:article:by:100133
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100133
$9
articleId
$4
2583
*4
$4
HSET
$22
hash:article:by:100133
$5
title
$33
Java---设计模块(工厂方法)
*4
$4
HSET
$22
hash:article:by:100133
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100133
$8
labelIds
$12
[18,116,117]
*4
$4
HSET
$22
hash:article:by:100133
$6
digest
$239
★ 场景和问题 
Java程序开发讲究面向接口编程，隐藏具体的实现类，可是如何得到接口呢？工厂类的命名规范：***Factory 
单例工厂方法的命名规范：getInstance()工厂的本质是“选择...
*4
$4
HSET
$22
hash:article:by:100133
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100133
$7
content
$40
csdn/java/1_0_2_1_1504265034.674185.html
*4
$4
HSET
$22
hash:article:by:100133
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100133
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100133
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100133
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100133
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100133
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100133
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100133
$10
createTime
$13
1459720807000
*4
$4
HSET
$22
hash:article:by:100133
$11
releaseTime
$13
1459720807000
*4
$4
HSET
$22
hash:article:by:100133
$10
updateTime
$13
1459720807000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100133
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100133
*3
$5
LPUSH
$15
list:article:id
$6
100133
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100133
*4
$4
HSET
$22
hash:article:by:100334
$2
id
$6
100334
*4
$4
HSET
$22
hash:article:by:100334
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100334
$9
articleId
$4
2584
*4
$4
HSET
$22
hash:article:by:100334
$5
title
$44
Java---设计模块(单例的变形)(多例)
*4
$4
HSET
$22
hash:article:by:100334
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100334
$8
labelIds
$19
[12,116,209,71,153]
*4
$4
HSET
$22
hash:article:by:100334
$6
digest
$287
设计模式1——单例变形(多例) 
★ 缓存在单例中的使用 
缓存在编程中使用很频繁，有着非常重要的作用，它能够帮助程序实现以空间换取时间，通常被设计成整个应用程序所共享的一个空间，现要求实现一个用缓存...
*4
$4
HSET
$22
hash:article:by:100334
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100334
$7
content
$39
csdn/java/1_0_2_2_1504265035.78254.html
*4
$4
HSET
$22
hash:article:by:100334
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100334
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100334
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100334
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100334
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100334
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100334
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100334
$10
createTime
$13
1459620021000
*4
$4
HSET
$22
hash:article:by:100334
$11
releaseTime
$13
1459620021000
*4
$4
HSET
$22
hash:article:by:100334
$10
updateTime
$13
1459620021000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100334
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100334
*3
$5
LPUSH
$15
list:article:id
$6
100334
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100334
*4
$4
HSET
$22
hash:article:by:100335
$2
id
$6
100335
*4
$4
HSET
$22
hash:article:by:100335
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100335
$9
articleId
$4
2585
*4
$4
HSET
$22
hash:article:by:100335
$5
title
$88
Java---设计模块（设计模块的简介及最简单的俩个单例代码加测试）
*4
$4
HSET
$22
hash:article:by:100335
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100335
$8
labelIds
$16
[197,116,12,343]
*4
$4
HSET
$22
hash:article:by:100335
$6
digest
$291
设计模式学习概述： 
★ 为什么要学习设计模式 
1、设计模式都是一些相对优秀的解决方案，很多问题都是典型的、有代表性的问题，学习设计模式，我们就不用自己从头来解决这些问题，相当于在巨人的肩膀上，复用...
*4
$4
HSET
$22
hash:article:by:100335
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100335
$7
content
$40
csdn/java/1_0_2_3_1504265036.665518.html
*4
$4
HSET
$22
hash:article:by:100335
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100335
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100335
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100335
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100335
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100335
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100335
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100335
$10
createTime
$13
1459616442000
*4
$4
HSET
$22
hash:article:by:100335
$11
releaseTime
$13
1459616442000
*4
$4
HSET
$22
hash:article:by:100335
$10
updateTime
$13
1459616442000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100335
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100335
*3
$5
LPUSH
$15
list:article:id
$6
100335
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100335
*4
$4
HSET
$22
hash:article:by:100332
$2
id
$6
100332
*4
$4
HSET
$22
hash:article:by:100332
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100332
$9
articleId
$4
2254
*4
$4
HSET
$22
hash:article:by:100332
$5
title
$70
【5】JAVA---地址App小软件（DeletePanel.class）（表现层）
*4
$4
HSET
$22
hash:article:by:100332
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100332
$8
labelIds
$19
[113,337,245,78,45]
*4
$4
HSET
$22
hash:article:by:100332
$6
digest
$207
删除地址的表现层类。 
如果没有选中要删除的地址信息，会出现窗口提示： 
删除地址界面：（无法修改数据，只能看） 
/*
 * DeletePanel.java
 *
 */package cn.hn...
*4
$4
HSET
$22
hash:article:by:100332
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100332
$7
content
$40
csdn/java/1_0_1_3_1504264545.240339.html
*4
$4
HSET
$22
hash:article:by:100332
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100332
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100332
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100332
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100332
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100332
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100332
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100332
$10
createTime
$13
1459378817000
*4
$4
HSET
$22
hash:article:by:100332
$11
releaseTime
$13
1459378817000
*4
$4
HSET
$22
hash:article:by:100332
$10
updateTime
$13
1459378817000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100332
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100332
*3
$5
LPUSH
$15
list:article:id
$6
100332
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100332
*4
$4
HSET
$22
hash:article:by:100130
$2
id
$6
100130
*4
$4
HSET
$22
hash:article:by:100130
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100130
$9
articleId
$4
2247
*4
$4
HSET
$22
hash:article:by:100130
$5
title
$67
【3】JAVA---地址App小软件（AddPanel.class）（表现层）
*4
$4
HSET
$22
hash:article:by:100130
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100130
$8
labelIds
$5
[113]
*4
$4
HSET
$22
hash:article:by:100130
$6
digest
$181
添加地址信息界面。年龄和地址必须是数字，否则会弹出窗口提示。 
地址信息不能为空。 
/*
 * AddPanel.java
 *
 * Created on __DATE__, __TIME__
 ...
*4
$4
HSET
$22
hash:article:by:100130
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100130
$7
content
$40
csdn/java/1_0_1_5_1504264540.935691.html
*4
$4
HSET
$22
hash:article:by:100130
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100130
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100130
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100130
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100130
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100130
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100130
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100130
$10
createTime
$13
1459378807000
*4
$4
HSET
$22
hash:article:by:100130
$11
releaseTime
$13
1459378807000
*4
$4
HSET
$22
hash:article:by:100130
$10
updateTime
$13
1459378807000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100130
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100130
*3
$5
LPUSH
$15
list:article:id
$6
100130
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100130
*4
$4
HSET
$22
hash:article:by:100359
$2
id
$6
100359
*4
$4
HSET
$22
hash:article:by:100359
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100359
$9
articleId
$4
2251
*4
$4
HSET
$22
hash:article:by:100359
$5
title
$114
【1】JAVA---地址App小软件（AddressApp.class）（初步接触项目开发的分层思想）（表现层）
*4
$4
HSET
$22
hash:article:by:100359
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100359
$8
labelIds
$9
[113,337]
*4
$4
HSET
$22
hash:article:by:100359
$6
digest
$267
这个是表现层的main方法。 
实现的地址信息有： 
姓名，性别，年龄，电话，地址。 
实现的功能有： 
增加地址； 
删除地址； 
修改地址； 
查找地址：其中年龄的查找为年龄段的查找。数据存储的方...
*4
$4
HSET
$22
hash:article:by:100359
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100359
$7
content
$40
csdn/java/1_0_1_7_1504264543.184161.html
*4
$4
HSET
$22
hash:article:by:100359
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100359
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100359
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100359
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100359
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100359
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100359
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100359
$10
createTime
$13
1459375245000
*4
$4
HSET
$22
hash:article:by:100359
$11
releaseTime
$13
1459375245000
*4
$4
HSET
$22
hash:article:by:100359
$10
updateTime
$13
1459375245000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100359
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100359
*3
$5
LPUSH
$15
list:article:id
$6
100359
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100359
*4
$4
HSET
$22
hash:article:by:100321
$2
id
$6
100321
*4
$4
HSET
$22
hash:article:by:100321
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100321
$9
articleId
$4
2022
*4
$4
HSET
$22
hash:article:by:100321
$5
title
$75
进程间通信之-共享内存Shared Memory--linux内核剖析（十一）
*4
$4
HSET
$22
hash:article:by:100321
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100321
$8
labelIds
$19
[70,324,35,215,311]
*4
$4
HSET
$22
hash:article:by:100321
$6
digest
$283
共享内存共享内存是进程间通信中最简单的方式之一。共享内存是系统出于多个进程之间通讯的考虑，而预留的的一块内存区。共享内存允许两个或更多进程访问同一块内存，就如同 malloc() 函数向不同进程返回了...
*4
$4
HSET
$22
hash:article:by:100321
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100321
$7
content
$41
csdn/linux/1_0_1_0_1504264159.265574.html
*4
$4
HSET
$22
hash:article:by:100321
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100321
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100321
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100321
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100321
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100321
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100321
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100321
$10
createTime
$13
1459260011000
*4
$4
HSET
$22
hash:article:by:100321
$11
releaseTime
$13
1459260011000
*4
$4
HSET
$22
hash:article:by:100321
$10
updateTime
$13
1459260011000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100321
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100321
*3
$5
LPUSH
$15
list:article:id
$6
100321
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100321
*4
$4
HSET
$22
hash:article:by:100322
$2
id
$6
100322
*4
$4
HSET
$22
hash:article:by:100322
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100322
$9
articleId
$4
2301
*4
$4
HSET
$22
hash:article:by:100322
$5
title
$75
进程间通信之-共享内存Shared Memory--linux内核剖析（十一）
*4
$4
HSET
$22
hash:article:by:100322
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100322
$8
labelIds
$19
[70,324,35,215,311]
*4
$4
HSET
$22
hash:article:by:100322
$6
digest
$283
共享内存共享内存是进程间通信中最简单的方式之一。共享内存是系统出于多个进程之间通讯的考虑，而预留的的一块内存区。共享内存允许两个或更多进程访问同一块内存，就如同 malloc() 函数向不同进程返回了...
*4
$4
HSET
$22
hash:article:by:100322
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100322
$7
content
$41
csdn/linux/1_0_1_0_1504264616.416295.html
*4
$4
HSET
$22
hash:article:by:100322
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100322
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100322
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100322
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100322
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100322
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100322
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100322
$10
createTime
$13
1459260011000
*4
$4
HSET
$22
hash:article:by:100322
$11
releaseTime
$13
1459260011000
*4
$4
HSET
$22
hash:article:by:100322
$10
updateTime
$13
1459260011000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100322
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100322
*3
$5
LPUSH
$15
list:article:id
$6
100322
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100322
*4
$4
HSET
$22
hash:article:by:100326
$2
id
$6
100326
*4
$4
HSET
$22
hash:article:by:100326
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100326
$9
articleId
$4
2302
*4
$4
HSET
$22
hash:article:by:100326
$5
title
$65
进程间通信之-信号量semaphore--linux内核剖析（十）
*4
$4
HSET
$22
hash:article:by:100326
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100326
$8
labelIds
$19
[324,32,197,35,259]
*4
$4
HSET
$22
hash:article:by:100326
$6
digest
$295
信号量什么是信号量信号量的使用主要是用来保护共享资源，使得资源在一个时刻只有一个进程（线程）所拥有。
  信号量的值为正的时候，说明它空闲。所测试的线程可以锁定而使用它。若为0，说明它被占用，测试的线...
*4
$4
HSET
$22
hash:article:by:100326
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100326
$7
content
$41
csdn/linux/1_0_1_1_1504264617.428158.html
*4
$4
HSET
$22
hash:article:by:100326
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100326
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100326
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100326
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100326
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100326
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100326
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100326
$10
createTime
$13
1459202437000
*4
$4
HSET
$22
hash:article:by:100326
$11
releaseTime
$13
1459202437000
*4
$4
HSET
$22
hash:article:by:100326
$10
updateTime
$13
1459202437000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100326
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100326
*3
$5
LPUSH
$15
list:article:id
$6
100326
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100326
*4
$4
HSET
$22
hash:article:by:100459
$2
id
$6
100459
*4
$4
HSET
$22
hash:article:by:100459
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100459
$9
articleId
$4
2305
*4
$4
HSET
$22
hash:article:by:100459
$5
title
$59
进程间通信之-信号signal--linux内核剖析（九）
*4
$4
HSET
$22
hash:article:by:100459
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100459
$8
labelIds
$20
[211,324,162,35,113]
*4
$4
HSET
$22
hash:article:by:100459
$6
digest
$285
信号及信号来源什么是信号信号是UNIX和Linux系统响应某些条件而产生的一个事件，接收到该信号的进程会相应地采取一些行动。通常信号是由一个错误产生的。但它们还可以作为进程间通信或修改行为的一种方式，...
*4
$4
HSET
$22
hash:article:by:100459
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100459
$7
content
$41
csdn/linux/1_0_1_2_1504264621.664224.html
*4
$4
HSET
$22
hash:article:by:100459
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100459
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100459
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100459
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100459
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100459
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100459
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100459
$10
createTime
$13
1459080022000
*4
$4
HSET
$22
hash:article:by:100459
$11
releaseTime
$13
1459080022000
*4
$4
HSET
$22
hash:article:by:100459
$10
updateTime
$13
1459080022000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100459
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100459
*3
$5
LPUSH
$15
list:article:id
$6
100459
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100459
*4
$4
HSET
$22
hash:article:by:100690
$2
id
$6
100690
*4
$4
HSET
$22
hash:article:by:100690
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100690
$9
articleId
$4
2049
*4
$4
HSET
$22
hash:article:by:100690
$5
title
$41
Java Web前端到后台常用框架介绍
*4
$4
HSET
$22
hash:article:by:100690
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100690
$8
labelIds
$11
[102,18,74]
*4
$4
HSET
$22
hash:article:by:100690
$6
digest
$127
一、SpringMVChttp://blog.csdn.net/evankaka/article/details/45501811Spring Web MVC是一种基于Java的实现了Web MVC设...
*4
$4
HSET
$22
hash:article:by:100690
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100690
$7
content
$40
csdn/java/1_1_1_2_1504264396.341853.html
*4
$4
HSET
$22
hash:article:by:100690
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100690
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100690
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100690
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100690
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100690
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100690
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100690
$10
createTime
$13
1458298844000
*4
$4
HSET
$22
hash:article:by:100690
$11
releaseTime
$13
1458298844000
*4
$4
HSET
$22
hash:article:by:100690
$10
updateTime
$13
1458298844000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100690
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100690
*3
$5
LPUSH
$15
list:article:id
$6
100690
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100690
*4
$4
HSET
$22
hash:article:by:100507
$2
id
$6
100507
*4
$4
HSET
$22
hash:article:by:100507
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100507
$9
articleId
$4
2312
*4
$4
HSET
$22
hash:article:by:100507
$5
title
$89
linux系统启动过程详解-开机加电后发生了什么 --linux内核剖析（零）
*4
$4
HSET
$22
hash:article:by:100507
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100507
$8
labelIds
$18
[119,70,21,35,463]
*4
$4
HSET
$22
hash:article:by:100507
$6
digest
$179
http://www.mamicode.com/info-detail-243819.html总的来说在操作系统加电启动之后到main函数执行之前操作系统经历了以下3个大步骤 
*   启动BIOS。...
*4
$4
HSET
$22
hash:article:by:100507
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100507
$7
content
$41
csdn/linux/1_0_1_3_1504264625.911022.html
*4
$4
HSET
$22
hash:article:by:100507
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100507
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100507
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100507
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100507
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100507
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100507
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100507
$10
createTime
$13
1458230435000
*4
$4
HSET
$22
hash:article:by:100507
$11
releaseTime
$13
1458230435000
*4
$4
HSET
$22
hash:article:by:100507
$10
updateTime
$13
1458230435000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100507
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100507
*3
$5
LPUSH
$15
list:article:id
$6
100507
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100507
*4
$4
HSET
$22
hash:article:by:100563
$2
id
$6
100563
*4
$4
HSET
$22
hash:article:by:100563
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100563
$9
articleId
$4
2282
*4
$4
HSET
$22
hash:article:by:100563
$5
title
$41
Linux内核工程导论——内核种类
*4
$4
HSET
$22
hash:article:by:100563
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100563
$8
labelIds
$5
[100]
*4
$4
HSET
$22
hash:article:by:100563
$6
digest
$213
内核概览linux内核并不是唯一的内核，也并不是唯一的一种内核。实际上linux内核属于Monolithic kernel的一个实现，这种内核还包括Unix系列（BSD、SunOS等），dos和win...
*4
$4
HSET
$22
hash:article:by:100563
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100563
$7
content
$42
csdn/linux/1_0_2_18_1504264587.061601.html
*4
$4
HSET
$22
hash:article:by:100563
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100563
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100563
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100563
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100563
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100563
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100563
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100563
$10
createTime
$13
1458219621000
*4
$4
HSET
$22
hash:article:by:100563
$11
releaseTime
$13
1458219621000
*4
$4
HSET
$22
hash:article:by:100563
$10
updateTime
$13
1458219621000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100563
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100563
*3
$5
LPUSH
$15
list:article:id
$6
100563
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100563
*4
$4
HSET
$22
hash:article:by:100442
$2
id
$6
100442
*4
$4
HSET
$22
hash:article:by:100442
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100442
$9
articleId
$4
2313
*4
$4
HSET
$22
hash:article:by:100442
$5
title
$53
进程间通信之-管道--linux内核剖析（八）
*4
$4
HSET
$22
hash:article:by:100442
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100442
$8
labelIds
$18
[211,324,78,35,21]
*4
$4
HSET
$22
hash:article:by:100442
$6
digest
$275
管道管道是一种两个进程间进行单向通信的机制。因为管道传递数据的单向性，管道又称为半双工管道。管道的这一特点决定了器使用的局限性。管道是Linux支持的最初Unix IPC形式之一，具有以下特点：
数据...
*4
$4
HSET
$22
hash:article:by:100442
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100442
$7
content
$40
csdn/linux/1_0_1_4_1504264626.85974.html
*4
$4
HSET
$22
hash:article:by:100442
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100442
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100442
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100442
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100442
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100442
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100442
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100442
$10
createTime
$13
1458169230000
*4
$4
HSET
$22
hash:article:by:100442
$11
releaseTime
$13
1458169230000
*4
$4
HSET
$22
hash:article:by:100442
$10
updateTime
$13
1458169230000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100442
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100442
*3
$5
LPUSH
$15
list:article:id
$6
100442
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100442
*4
$4
HSET
$22
hash:article:by:100545
$2
id
$6
100545
*4
$4
HSET
$22
hash:article:by:100545
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100545
$9
articleId
$4
2310
*4
$4
HSET
$22
hash:article:by:100545
$5
title
$69
Linux进程间通信的几种方式总结--linux内核剖析（七）
*4
$4
HSET
$22
hash:article:by:100545
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100545
$8
labelIds
$18
[324,21,78,35,512]
*4
$4
HSET
$22
hash:article:by:100545
$6
digest
$283
进程间通信概述进程通信的目的
数据传输 
一个进程需要将它的数据发送给另一个进程，发送的数据量在一个字节到几M字节之间
共享数据 
多个进程想要操作共享数据，一个进程对共享数据
通知事 
一个进程需要...
*4
$4
HSET
$22
hash:article:by:100545
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100545
$7
content
$41
csdn/linux/1_0_1_5_1504264624.994248.html
*4
$4
HSET
$22
hash:article:by:100545
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100545
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100545
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100545
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100545
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100545
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100545
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100545
$10
createTime
$13
1458165609000
*4
$4
HSET
$22
hash:article:by:100545
$11
releaseTime
$13
1458165609000
*4
$4
HSET
$22
hash:article:by:100545
$10
updateTime
$13
1458165609000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100545
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100545
*3
$5
LPUSH
$15
list:article:id
$6
100545
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100545
*4
$4
HSET
$22
hash:article:by:100684
$2
id
$6
100684
*4
$4
HSET
$22
hash:article:by:100684
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100684
$9
articleId
$4
2023
*4
$4
HSET
$22
hash:article:by:100684
$5
title
$21
Spring 实践 -拾遗
*4
$4
HSET
$22
hash:article:by:100684
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100684
$8
labelIds
$14
[59,12,18,643]
*4
$4
HSET
$22
hash:article:by:100684
$6
digest
$191
Spring 实践标签： Java与设计模式Junit集成前面多次用到@RunWith与@ContextConfiguration,在测试类添加这两个注解,程序就会自动加载Spring配置并初始化Sp...
*4
$4
HSET
$22
hash:article:by:100684
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100684
$7
content
$40
csdn/java/1_0_2_0_1504264378.229469.html
*4
$4
HSET
$22
hash:article:by:100684
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100684
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100684
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100684
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100684
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100684
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100684
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100684
$10
createTime
$13
1457769652000
*4
$4
HSET
$22
hash:article:by:100684
$11
releaseTime
$13
1457769652000
*4
$4
HSET
$22
hash:article:by:100684
$10
updateTime
$13
1457769652000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100684
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100684
*3
$5
LPUSH
$15
list:article:id
$6
100684
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100684
*4
$4
HSET
$22
hash:article:by:100670
$2
id
$6
100670
*4
$4
HSET
$22
hash:article:by:100670
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100670
$9
articleId
$4
2025
*4
$4
HSET
$22
hash:article:by:100670
$5
title
$18
Spring 实践 -IoC
*4
$4
HSET
$22
hash:article:by:100670
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100670
$8
labelIds
$18
[59,631,12,117,18]
*4
$4
HSET
$22
hash:article:by:100670
$6
digest
$159
Spring 实践标签： Java与设计模式Spring简介
  Spring是分层的JavaSE/EE Full-Stack轻量级开源框架.以IoC(Inverse of Control 控制反转)...
*4
$4
HSET
$22
hash:article:by:100670
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100670
$7
content
$40
csdn/java/1_0_2_2_1504264380.404581.html
*4
$4
HSET
$22
hash:article:by:100670
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100670
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100670
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100670
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100670
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100670
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100670
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100670
$10
createTime
$13
1457506843000
*4
$4
HSET
$22
hash:article:by:100670
$11
releaseTime
$13
1457506843000
*4
$4
HSET
$22
hash:article:by:100670
$10
updateTime
$13
1457506843000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100670
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100670
*3
$5
LPUSH
$15
list:article:id
$6
100670
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100670
*4
$4
HSET
$22
hash:article:by:100619
$2
id
$6
100619
*4
$4
HSET
$22
hash:article:by:100619
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100619
$9
articleId
$4
2024
*4
$4
HSET
$22
hash:article:by:100619
$5
title
$18
Spring 实践 -AOP
*4
$4
HSET
$22
hash:article:by:100619
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100619
$8
labelIds
$14
[59,12,18,450]
*4
$4
HSET
$22
hash:article:by:100619
$6
digest
$205
Spring 实践标签： Java与设计模式AOP引介AOP(Aspect Oriented Programing)面向切面编程采用横向抽取机制,以取代传统的纵向继承体系的重复性代码(如性能监控/事务...
*4
$4
HSET
$22
hash:article:by:100619
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100619
$7
content
$40
csdn/java/1_0_2_1_1504264379.277687.html
*4
$4
HSET
$22
hash:article:by:100619
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100619
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100619
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100619
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100619
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100619
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100619
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100619
$10
createTime
$13
1457337632000
*4
$4
HSET
$22
hash:article:by:100619
$11
releaseTime
$13
1457337632000
*4
$4
HSET
$22
hash:article:by:100619
$10
updateTime
$13
1457337632000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100619
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100619
*3
$5
LPUSH
$15
list:article:id
$6
100619
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100619
*4
$4
HSET
$22
hash:article:by:100663
$2
id
$6
100663
*4
$4
HSET
$22
hash:article:by:100663
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100663
$9
articleId
$4
2306
*4
$4
HSET
$22
hash:article:by:100663
$5
title
$75
Linux系统调用详解（实现机制分析）--linux内核剖析（六）
*4
$4
HSET
$22
hash:article:by:100663
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100663
$8
labelIds
$19
[70,365,21,100,209]
*4
$4
HSET
$22
hash:article:by:100663
$6
digest
$283
本文介绍了系统调用的一些实现细节。首先分析了系统调用的意义，它们与库函数和应用程序接口(API)有怎样的关系。然后，我们考察了Linux内核如何实现系统调用，以及执行系统调用的连锁反应：陷入内核，传递...
*4
$4
HSET
$22
hash:article:by:100663
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100663
$7
content
$41
csdn/linux/1_0_1_6_1504264622.743798.html
*4
$4
HSET
$22
hash:article:by:100663
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100663
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100663
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100663
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100663
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100663
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100663
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100663
$10
createTime
$13
1456952458000
*4
$4
HSET
$22
hash:article:by:100663
$11
releaseTime
$13
1456952458000
*4
$4
HSET
$22
hash:article:by:100663
$10
updateTime
$13
1456952458000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100663
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100663
*3
$5
LPUSH
$15
list:article:id
$6
100663
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100663
*4
$4
HSET
$22
hash:article:by:100600
$2
id
$6
100600
*4
$4
HSET
$22
hash:article:by:100600
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100600
$9
articleId
$4
2452
*4
$4
HSET
$22
hash:article:by:100600
$5
title
$29
JAVA设计模式-代理模式
*4
$4
HSET
$22
hash:article:by:100600
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100600
$8
labelIds
$4
[53]
*4
$4
HSET
$22
hash:article:by:100600
$6
digest
$303
代理模式代理模式使用代理对象完成用户请求，屏蔽用户对真实对象的访问。现实世界的代理人被授权执行当事人的一些事宜，无需当事人出面，从第三方的角度看，似乎当事人并不存在，因为他只和代理人通信。而事实上代理...
*4
$4
HSET
$22
hash:article:by:100600
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100600
$7
content
$40
csdn/java/1_0_1_0_1504264756.611221.html
*4
$4
HSET
$22
hash:article:by:100600
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100600
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100600
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100600
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100600
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100600
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100600
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100600
$10
createTime
$13
1456941608000
*4
$4
HSET
$22
hash:article:by:100600
$11
releaseTime
$13
1456941608000
*4
$4
HSET
$22
hash:article:by:100600
$10
updateTime
$13
1456941608000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100600
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100600
*3
$5
LPUSH
$15
list:article:id
$6
100600
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100600
*4
$4
HSET
$22
hash:article:by:100751
$2
id
$6
100751
*4
$4
HSET
$22
hash:article:by:100751
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100751
$9
articleId
$4
2138
*4
$4
HSET
$22
hash:article:by:100751
$5
title
$100
Linux内核工程导论——linux学习和职业曲线（初学者，中级，高级都可参考）
*4
$4
HSET
$22
hash:article:by:100751
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100751
$8
labelIds
$12
[119,100,21]
*4
$4
HSET
$22
hash:article:by:100751
$6
digest
$243
Linux世界介绍



给自己定级

门外汉：不会安装操作系统、不会用虚拟机（安装和使用）、没有自己选择并安装的linux发行版，只是听人说linux很牛逼，但觉得linux打不了游戏开不了offi...
*4
$4
HSET
$22
hash:article:by:100751
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100751
$7
content
$40
csdn/linux/1_0_3_9_1504264466.40902.html
*4
$4
HSET
$22
hash:article:by:100751
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100751
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100751
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100751
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100751
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100751
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100751
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100751
$10
createTime
$13
1456923649000
*4
$4
HSET
$22
hash:article:by:100751
$11
releaseTime
$13
1456923649000
*4
$4
HSET
$22
hash:article:by:100751
$10
updateTime
$13
1456923649000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100751
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100751
*3
$5
LPUSH
$15
list:article:id
$6
100751
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100751
*4
$4
HSET
$22
hash:article:by:100050
$2
id
$6
100050
*4
$4
HSET
$22
hash:article:by:100050
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100050
$9
articleId
$4
2276
*4
$4
HSET
$22
hash:article:by:100050
$5
title
$39
设计模式之分析和需求的概念
*4
$4
HSET
$22
hash:article:by:100050
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100050
$8
labelIds
$7
[12,20]
*4
$4
HSET
$22
hash:article:by:100050
$6
digest
$72
要实现怎样的功能？？怎样去实现我们所要的功能？？
*4
$4
HSET
$22
hash:article:by:100050
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100050
$7
content
$40
csdn/java/1_2_1_2_1504264580.744653.html
*4
$4
HSET
$22
hash:article:by:100050
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100050
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100050
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100050
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100050
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100050
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100050
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100050
$10
createTime
$13
1455642055000
*4
$4
HSET
$22
hash:article:by:100050
$11
releaseTime
$13
1455642055000
*4
$4
HSET
$22
hash:article:by:100050
$10
updateTime
$13
1455642055000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100050
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100050
*3
$5
LPUSH
$15
list:article:id
$6
100050
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100050
*4
$4
HSET
$22
hash:article:by:100059
$2
id
$6
100059
*4
$4
HSET
$22
hash:article:by:100059
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100059
$9
articleId
$4
2267
*4
$4
HSET
$22
hash:article:by:100059
$5
title
$33
设计模式之简单工厂模式
*4
$4
HSET
$22
hash:article:by:100059
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100059
$8
labelIds
$7
[12,31]
*4
$4
HSET
$22
hash:article:by:100059
$6
digest
$103
Moveable.java:public interface Moveable
{
    void Run();
}
VehicleFactory.java:public abstract clas...
*4
$4
HSET
$22
hash:article:by:100059
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100059
$7
content
$40
csdn/java/1_2_1_1_1504264572.452242.html
*4
$4
HSET
$22
hash:article:by:100059
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100059
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100059
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100059
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100059
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100059
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100059
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100059
$10
createTime
$13
1455642026000
*4
$4
HSET
$22
hash:article:by:100059
$11
releaseTime
$13
1455642026000
*4
$4
HSET
$22
hash:article:by:100059
$10
updateTime
$13
1455642026000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100059
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100059
*3
$5
LPUSH
$15
list:article:id
$6
100059
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100059
*4
$4
HSET
$22
hash:article:by:100064
$2
id
$6
100064
*4
$4
HSET
$22
hash:article:by:100064
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100064
$9
articleId
$4
2266
*4
$4
HSET
$22
hash:article:by:100064
$5
title
$27
设计模式之单例模式
*4
$4
HSET
$22
hash:article:by:100064
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100064
$8
labelIds
$4
[12]
*4
$4
HSET
$22
hash:article:by:100064
$6
digest
$107
Car.java文件package com.bjsxt.dp.factory;public class Car
{
    *private static Car car=new Car();*   ...
*4
$4
HSET
$22
hash:article:by:100064
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100064
$7
content
$40
csdn/java/1_2_1_0_1504264571.316743.html
*4
$4
HSET
$22
hash:article:by:100064
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100064
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100064
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100064
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100064
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100064
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100064
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100064
$10
createTime
$13
1455638413000
*4
$4
HSET
$22
hash:article:by:100064
$11
releaseTime
$13
1455638413000
*4
$4
HSET
$22
hash:article:by:100064
$10
updateTime
$13
1455638413000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100064
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100064
*3
$5
LPUSH
$15
list:article:id
$6
100064
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100064
*4
$4
HSET
$22
hash:article:by:100614
$2
id
$6
100614
*4
$4
HSET
$22
hash:article:by:100614
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100614
$9
articleId
$4
2050
*4
$4
HSET
$22
hash:article:by:100614
$5
title
$36
Spring Security安全框架入门篇
*4
$4
HSET
$22
hash:article:by:100614
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100614
$8
labelIds
$11
[58,67,102]
*4
$4
HSET
$22
hash:article:by:100614
$6
digest
$193
一、Spring Security相关概念1.1.、Spring Security介绍：Spring Security是一个能够为基于Spring的企业应用系统提供声明式的安全访问控制解决方案的安全框...
*4
$4
HSET
$22
hash:article:by:100614
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100614
$7
content
$40
csdn/java/1_1_1_3_1504264397.420073.html
*4
$4
HSET
$22
hash:article:by:100614
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100614
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100614
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100614
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100614
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100614
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100614
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100614
$10
createTime
$13
1454544002000
*4
$4
HSET
$22
hash:article:by:100614
$11
releaseTime
$13
1454544002000
*4
$4
HSET
$22
hash:article:by:100614
$10
updateTime
$13
1454544002000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100614
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100614
*3
$5
LPUSH
$15
list:article:id
$6
100614
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100614
*4
$4
HSET
$22
hash:article:by:100771
$2
id
$6
100771
*4
$4
HSET
$22
hash:article:by:100771
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100771
$9
articleId
$4
2051
*4
$4
HSET
$22
hash:article:by:100771
$5
title
$65
Shiro安全框架入门篇（登录验证实例详解与源码）
*4
$4
HSET
$22
hash:article:by:100771
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100771
$8
labelIds
$15
[760,102,67,18]
*4
$4
HSET
$22
hash:article:by:100771
$6
digest
$227
一、Shiro框架简单介绍Apache Shiro是Java的一个安全框架，旨在简化身份验证和授权。Shiro在JavaSE和JavaEE项目中都可以使用。它主要用来处理身份认证，授权，企业会话管理和...
*4
$4
HSET
$22
hash:article:by:100771
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100771
$7
content
$40
csdn/java/1_1_1_4_1504264398.304014.html
*4
$4
HSET
$22
hash:article:by:100771
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100771
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100771
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100771
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100771
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100771
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100771
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100771
$10
createTime
$13
1454511623000
*4
$4
HSET
$22
hash:article:by:100771
$11
releaseTime
$13
1454511623000
*4
$4
HSET
$22
hash:article:by:100771
$10
updateTime
$13
1454511623000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100771
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100771
*3
$5
LPUSH
$15
list:article:id
$6
100771
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100771
*4
$4
HSET
$22
hash:article:by:100605
$2
id
$6
100605
*4
$4
HSET
$22
hash:article:by:100605
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100605
$9
articleId
$4
2283
*4
$4
HSET
$22
hash:article:by:100605
$5
title
$59
Linux内核工程导论——网络：路由：路由原理
*4
$4
HSET
$22
hash:article:by:100605
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100605
$8
labelIds
$9
[124,100]
*4
$4
HSET
$22
hash:article:by:100605
$6
digest
$287
背景与概览

路由表

IP层通过路由将数据包送达该送达的目的地址，这就要求在整个网络中建立正确的路由表。路由表的内容是记录要到达哪里下一跳需要发到哪里（可以是端口可以是ip），如此整个网络在单个节点...
*4
$4
HSET
$22
hash:article:by:100605
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100605
$7
content
$42
csdn/linux/1_0_2_15_1504264590.334454.html
*4
$4
HSET
$22
hash:article:by:100605
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100605
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100605
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100605
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100605
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100605
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100605
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100605
$10
createTime
$13
1453748450000
*4
$4
HSET
$22
hash:article:by:100605
$11
releaseTime
$13
1453748450000
*4
$4
HSET
$22
hash:article:by:100605
$10
updateTime
$13
1453748450000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100605
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100605
*3
$5
LPUSH
$15
list:article:id
$6
100605
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100605
*4
$4
HSET
$22
hash:article:by:100352
$2
id
$6
100352
*4
$4
HSET
$22
hash:article:by:100352
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100352
$9
articleId
$4
2477
*4
$4
HSET
$22
hash:article:by:100352
$5
title
$21
java--多线程与juc
*4
$4
HSET
$22
hash:article:by:100352
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100352
$8
labelIds
$4
[52]
*4
$4
HSET
$22
hash:article:by:100352
$6
digest
$155
刚刚研究多线程和juc发现一个写的比较不错的地址。多线程：http://www.cnblogs.com/skywang12345/p/java_threads_category.htmljuc:htt...
*4
$4
HSET
$22
hash:article:by:100352
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100352
$7
content
$40
csdn/java/1_0_2_3_1504264787.278852.html
*4
$4
HSET
$22
hash:article:by:100352
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100352
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100352
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100352
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100352
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100352
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100352
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100352
$10
createTime
$13
1453280458000
*4
$4
HSET
$22
hash:article:by:100352
$11
releaseTime
$13
1453280458000
*4
$4
HSET
$22
hash:article:by:100352
$10
updateTime
$13
1453280458000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100352
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100352
*3
$5
LPUSH
$15
list:article:id
$6
100352
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100352
*4
$4
HSET
$22
hash:article:by:100778
$2
id
$6
100778
*4
$4
HSET
$22
hash:article:by:100778
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100778
$9
articleId
$4
2052
*4
$4
HSET
$22
hash:article:by:100778
$5
title
$33
程序员一年工作经验之谈
*4
$4
HSET
$22
hash:article:by:100778
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100778
$8
labelIds
$16
[18,417,762,160]
*4
$4
HSET
$22
hash:article:by:100778
$6
digest
$287
将本篇文章放到专栏 Java后台框架系列 里面也是实属无奈，只是为了能分享给更多的猿友，望谅解。今晚本来想写一篇技术博客，由于素材还没有准备好，又刚好写完公司年终总结，博主是15届本科毕业生，加上实习...
*4
$4
HSET
$22
hash:article:by:100778
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100778
$7
content
$40
csdn/java/1_1_1_5_1504264399.473761.html
*4
$4
HSET
$22
hash:article:by:100778
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100778
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100778
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100778
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100778
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100778
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100778
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100778
$10
createTime
$13
1453244418000
*4
$4
HSET
$22
hash:article:by:100778
$11
releaseTime
$13
1453244418000
*4
$4
HSET
$22
hash:article:by:100778
$10
updateTime
$13
1453244418000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100778
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100778
*3
$5
LPUSH
$15
list:article:id
$6
100778
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100778
*4
$4
HSET
$22
hash:article:by:100672
$2
id
$6
100672
*4
$4
HSET
$22
hash:article:by:100672
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100672
$9
articleId
$4
2030
*4
$4
HSET
$22
hash:article:by:100672
$5
title
$58
VMware Tools （ubuntu系统）安装详细过程与使用
*4
$4
HSET
$22
hash:article:by:100672
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100672
$8
labelIds
$16
[105,634,635,91]
*4
$4
HSET
$22
hash:article:by:100672
$6
digest
$235
前一段时间博主在VMware虚拟机上安装了Ubuntu系统，如果还没有安装的同学可以参考博主上一篇文章：VMware Ubuntu安装详细过程。猿友们都知道linux不太好用，如果你想将你主机Wind...
*4
$4
HSET
$22
hash:article:by:100672
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100672
$7
content
$40
csdn/java/1_1_1_6_1504264383.275762.html
*4
$4
HSET
$22
hash:article:by:100672
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100672
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100672
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100672
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100672
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100672
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100672
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100672
$10
createTime
$13
1453154426000
*4
$4
HSET
$22
hash:article:by:100672
$11
releaseTime
$13
1453154426000
*4
$4
HSET
$22
hash:article:by:100672
$10
updateTime
$13
1453154426000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100672
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100672
*3
$5
LPUSH
$15
list:article:id
$6
100672
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100672
*4
$4
HSET
$22
hash:article:by:100777
$2
id
$6
100777
*4
$4
HSET
$22
hash:article:by:100777
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100777
$9
articleId
$4
2040
*4
$4
HSET
$22
hash:article:by:100777
$5
title
$31
VMware Ubuntu安装详细过程
*4
$4
HSET
$22
hash:article:by:100777
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100777
$8
labelIds
$13
[105,634,761]
*4
$4
HSET
$22
hash:article:by:100777
$6
digest
$283
不是每一个程序员都必须玩过linux，只是博主觉得现在的很多服务器都是linux系统的，而自己属于那种前端也搞，后台也搞，对框架搭建也感兴趣，但是很多生产上的框架和工具都是安装在服务器上的，而且有不少...
*4
$4
HSET
$22
hash:article:by:100777
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100777
$7
content
$40
csdn/java/1_1_1_7_1504264388.317387.html
*4
$4
HSET
$22
hash:article:by:100777
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100777
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100777
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100777
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100777
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100777
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100777
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100777
$10
createTime
$13
1452963647000
*4
$4
HSET
$22
hash:article:by:100777
$11
releaseTime
$13
1452963647000
*4
$4
HSET
$22
hash:article:by:100777
$10
updateTime
$13
1452963647000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100777
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100777
*3
$5
LPUSH
$15
list:article:id
$6
100777
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100777
*4
$4
HSET
$22
hash:article:by:100765
$2
id
$6
100765
*4
$4
HSET
$22
hash:article:by:100765
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100765
$9
articleId
$4
2046
*4
$4
HSET
$22
hash:article:by:100765
$5
title
$70
Redis+Spring缓存实例（windows环境，附实例源码及详解）
*4
$4
HSET
$22
hash:article:by:100765
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100765
$8
labelIds
$11
[59,98,755]
*4
$4
HSET
$22
hash:article:by:100765
$6
digest
$187
一、Redis了解1.1、Redis介绍：redis是一个key-value存储系统。和Memcached类似，它支持存储的value类型相对更多，包括string(字符串)、list(链表)、set...
*4
$4
HSET
$22
hash:article:by:100765
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100765
$7
content
$40
csdn/java/1_1_1_8_1504264393.335841.html
*4
$4
HSET
$22
hash:article:by:100765
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100765
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100765
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100765
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100765
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100765
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100765
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100765
$10
createTime
$13
1452765612000
*4
$4
HSET
$22
hash:article:by:100765
$11
releaseTime
$13
1452765612000
*4
$4
HSET
$22
hash:article:by:100765
$10
updateTime
$13
1452765612000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100765
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100765
*3
$5
LPUSH
$15
list:article:id
$6
100765
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100765
*4
$4
HSET
$22
hash:article:by:100734
$2
id
$6
100734
*4
$4
HSET
$22
hash:article:by:100734
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100734
$9
articleId
$4
2047
*4
$4
HSET
$22
hash:article:by:100734
$5
title
$57
Spring+EhCache缓存实例（详细讲解+源码下载）
*4
$4
HSET
$22
hash:article:by:100734
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100734
$8
labelIds
$11
[59,705,18]
*4
$4
HSET
$22
hash:article:by:100734
$6
digest
$201
一、ehcahe的介绍EhCache 是一个纯Java的进程内缓存框架，具有快速、精干等特点，是Hibernate中默认的CacheProvider。Ehcache是一种广泛使用的开源Java分布式缓...
*4
$4
HSET
$22
hash:article:by:100734
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100734
$7
content
$40
csdn/java/1_1_1_9_1504264394.387904.html
*4
$4
HSET
$22
hash:article:by:100734
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100734
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100734
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100734
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100734
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100734
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100734
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100734
$10
createTime
$13
1452639656000
*4
$4
HSET
$22
hash:article:by:100734
$11
releaseTime
$13
1452639656000
*4
$4
HSET
$22
hash:article:by:100734
$10
updateTime
$13
1452639656000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100734
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100734
*3
$5
LPUSH
$15
list:article:id
$6
100734
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100734
*4
$4
HSET
$22
hash:article:by:100612
$2
id
$6
100612
*4
$4
HSET
$22
hash:article:by:100612
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100612
$9
articleId
$4
2068
*4
$4
HSET
$22
hash:article:by:100612
$5
title
$12
桥接模式
*4
$4
HSET
$22
hash:article:by:100612
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100612
$8
labelIds
$10
[89,18,12]
*4
$4
HSET
$22
hash:article:by:100612
$6
digest
$277
桥接模式标签： Java与设计模式场景在商城系统中商品是分类摆放的,以电脑为例我们有以下商品分类, 该如何良好的处理商品分类销售的问题: 
直观上我们会认为该商品分类以继承来实现:电脑作为根类,台式机...
*4
$4
HSET
$22
hash:article:by:100612
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100612
$7
content
$41
csdn/java/1_0_1_13_1504264411.836239.html
*4
$4
HSET
$22
hash:article:by:100612
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100612
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100612
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100612
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100612
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100612
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100612
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100612
$10
createTime
$13
1452416448000
*4
$4
HSET
$22
hash:article:by:100612
$11
releaseTime
$13
1452416448000
*4
$4
HSET
$22
hash:article:by:100612
$10
updateTime
$13
1452416448000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100612
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100612
*3
$5
LPUSH
$15
list:article:id
$6
100612
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100612
*4
$4
HSET
$22
hash:article:by:100757
$2
id
$6
100757
*4
$4
HSET
$22
hash:article:by:100757
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100757
$9
articleId
$4
2042
*4
$4
HSET
$22
hash:article:by:100757
$5
title
$71
RabbitMQ消息队列入门篇（环境配置+Java实例+基础概念）
*4
$4
HSET
$22
hash:article:by:100757
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100757
$8
labelIds
$20
[18,735,736,737,738]
*4
$4
HSET
$22
hash:article:by:100757
$6
digest
$303
一、消息队列使用场景或者其好处消息队列一般是在项目中，将一些无需即时返回且耗时的操作提取出来，进行了异步处理，而这种异步处理的方式大大的节省了服务器的请求响应时间，从而提高了系统的吞吐量。在项目启动之...
*4
$4
HSET
$22
hash:article:by:100757
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100757
$7
content
$41
csdn/java/1_1_1_10_1504264389.339141.html
*4
$4
HSET
$22
hash:article:by:100757
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100757
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100757
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100757
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100757
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100757
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100757
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100757
$10
createTime
$13
1452333623000
*4
$4
HSET
$22
hash:article:by:100757
$11
releaseTime
$13
1452333623000
*4
$4
HSET
$22
hash:article:by:100757
$10
updateTime
$13
1452333623000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100757
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100757
*3
$5
LPUSH
$15
list:article:id
$6
100757
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100757
*4
$4
HSET
$22
hash:article:by:100120
$2
id
$6
100120
*4
$4
HSET
$22
hash:article:by:100120
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100120
$9
articleId
$4
2566
*4
$4
HSET
$22
hash:article:by:100120
$5
title
$37
Anakia 转换xml文档为其他格式
*4
$4
HSET
$22
hash:article:by:100120
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100120
$8
labelIds
$13
[94,95,96,97]
*4
$4
HSET
$22
hash:article:by:100120
$6
digest
$183
一.简介 
Anakia 使用JDOM 和Velocity将XML文档转换为特定格式的文档二.解析xml文档方法1.DOMjava jdk,xml-api.jar 
需要加载整个xml文档来构建层次结...
*4
$4
HSET
$22
hash:article:by:100120
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100120
$7
content
$40
csdn/java/1_1_1_5_1504264964.259007.html
*4
$4
HSET
$22
hash:article:by:100120
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100120
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100120
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100120
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100120
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100120
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100120
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100120
$10
createTime
$13
1452016823000
*4
$4
HSET
$22
hash:article:by:100120
$11
releaseTime
$13
1452016823000
*4
$4
HSET
$22
hash:article:by:100120
$10
updateTime
$13
1452016823000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100120
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100120
*3
$5
LPUSH
$15
list:article:id
$6
100120
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100120
*4
$4
HSET
$22
hash:article:by:100636
$2
id
$6
100636
*4
$4
HSET
$22
hash:article:by:100636
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100636
$9
articleId
$4
2435
*4
$4
HSET
$22
hash:article:by:100636
$5
title
$39
静态代理和动态代理的再学习
*4
$4
HSET
$22
hash:article:by:100636
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100636
$8
labelIds
$14
[18,12,299,59]
*4
$4
HSET
$22
hash:article:by:100636
$6
digest
$289
学过设计模式的编友们，一定对代理模式很熟悉，最近在学习中发现Spring中更好的使用了动态带来来降低耦合，提高代码复用性，那么为什么要使用动态代理？动态代理和我们之前使用的普通代理有什么区别和好处？
...
*4
$4
HSET
$22
hash:article:by:100636
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100636
$7
content
$40
csdn/java/1_1_1_4_1504264737.929776.html
*4
$4
HSET
$22
hash:article:by:100636
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100636
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100636
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100636
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100636
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100636
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100636
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100636
$10
createTime
$13
1452013230000
*4
$4
HSET
$22
hash:article:by:100636
$11
releaseTime
$13
1452013230000
*4
$4
HSET
$22
hash:article:by:100636
$10
updateTime
$13
1452013230000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100636
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100636
*3
$5
LPUSH
$15
list:article:id
$6
100636
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100636
*4
$4
HSET
$22
hash:article:by:100276
$2
id
$6
100276
*4
$4
HSET
$22
hash:article:by:100276
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100276
$9
articleId
$4
2290
*4
$4
HSET
$22
hash:article:by:100276
$5
title
$53
Linux内核工程导论——网络：Netfilter概览
*4
$4
HSET
$22
hash:article:by:100276
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100276
$8
labelIds
$15
[21,35,101,278]
*4
$4
HSET
$22
hash:article:by:100276
$6
digest
$189
简介最早的内核包过滤机制是ipfwadm，后来是ipchains，再后来就是iptables/netfilter了。再往后，也就是现在是nftables。不过nftables与iptables还处于争...
*4
$4
HSET
$22
hash:article:by:100276
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100276
$7
content
$42
csdn/linux/1_0_2_14_1504264605.957549.html
*4
$4
HSET
$22
hash:article:by:100276
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100276
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100276
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100276
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100276
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100276
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100276
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100276
$10
createTime
$13
1451934052000
*4
$4
HSET
$22
hash:article:by:100276
$11
releaseTime
$13
1451934052000
*4
$4
HSET
$22
hash:article:by:100276
$10
updateTime
$13
1451934052000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100276
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100276
*3
$5
LPUSH
$15
list:article:id
$6
100276
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100276
*4
$4
HSET
$22
hash:article:by:100114
$2
id
$6
100114
*4
$4
HSET
$22
hash:article:by:100114
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100114
$9
articleId
$4
2570
*4
$4
HSET
$22
hash:article:by:100114
$5
title
$24
introduction of velocity
*4
$4
HSET
$22
hash:article:by:100114
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100114
$8
labelIds
$7
[90,18]
*4
$4
HSET
$22
hash:article:by:100114
$6
digest
$205
introduction of velocity一.velocity 简介基于java 的模板引擎，apache 旗下的开源软件项目。 
目的在于隔离 表示层和业务逻辑层，当然现在做的不仅仅是这些。二...
*4
$4
HSET
$22
hash:article:by:100114
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100114
$7
content
$40
csdn/java/1_1_1_6_1504264968.296471.html
*4
$4
HSET
$22
hash:article:by:100114
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100114
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100114
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100114
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100114
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100114
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100114
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100114
$10
createTime
$13
1451912455000
*4
$4
HSET
$22
hash:article:by:100114
$11
releaseTime
$13
1451912455000
*4
$4
HSET
$22
hash:article:by:100114
$10
updateTime
$13
1451912455000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100114
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100114
*3
$5
LPUSH
$15
list:article:id
$6
100114
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100114
*4
$4
HSET
$22
hash:article:by:100366
$2
id
$6
100366
*4
$4
HSET
$22
hash:article:by:100366
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100366
$9
articleId
$4
2072
*4
$4
HSET
$22
hash:article:by:100366
$5
title
$74
【Linux探索之旅】第四部分第五课：源码编译，安装便利
*4
$4
HSET
$22
hash:article:by:100366
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100366
$8
labelIds
$20
[358,107,160,62,161]
*4
$4
HSET
$22
hash:article:by:100366
$6
digest
$229
这一课相对轻松，毕竟刚跨年（2015-2016）么，新年怎么能让大家一个头两个大呢~ 小编怎么可能这么坏呢？小编是这样的人吗？（是啊 -_-#）。我们一步步来探究软件的编译。
*4
$4
HSET
$22
hash:article:by:100366
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100366
$7
content
$41
csdn/linux/1_1_1_0_1504264415.312715.html
*4
$4
HSET
$22
hash:article:by:100366
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100366
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100366
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100366
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100366
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100366
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100366
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100366
$10
createTime
$13
1451790043000
*4
$4
HSET
$22
hash:article:by:100366
$11
releaseTime
$13
1451790043000
*4
$4
HSET
$22
hash:article:by:100366
$10
updateTime
$13
1451790043000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100366
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100366
*3
$5
LPUSH
$15
list:article:id
$6
100366
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100366
*4
$4
HSET
$22
hash:article:by:100396
$2
id
$6
100396
*4
$4
HSET
$22
hash:article:by:100396
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100396
$9
articleId
$4
2089
*4
$4
HSET
$22
hash:article:by:100396
$5
title
$74
【Linux探索之旅】第四部分第四课：分析网络，隔离防火
*4
$4
HSET
$22
hash:article:by:100396
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100396
$8
labelIds
$20
[21,385,278,386,387]
*4
$4
HSET
$22
hash:article:by:100396
$6
digest
$237
俗语说得好：爱国爱家爱师妹!  防火防盗防师兄！


虽然说，Linux本身很安全，至少比Windows安全多了。你看Linux发行版哪有安装杀毒软件的，同样基于修改的Unix系统的苹果的Mac OS...
*4
$4
HSET
$22
hash:article:by:100396
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100396
$7
content
$41
csdn/linux/1_1_1_1_1504264425.395543.html
*4
$4
HSET
$22
hash:article:by:100396
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100396
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100396
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100396
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100396
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100396
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100396
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100396
$10
createTime
$13
1451707203000
*4
$4
HSET
$22
hash:article:by:100396
$11
releaseTime
$13
1451707203000
*4
$4
HSET
$22
hash:article:by:100396
$10
updateTime
$13
1451707203000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100396
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100396
*3
$5
LPUSH
$15
list:article:id
$6
100396
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100396
*4
$4
HSET
$22
hash:article:by:100536
$2
id
$6
100536
*4
$4
HSET
$22
hash:article:by:100536
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100536
$9
articleId
$4
2136
*4
$4
HSET
$22
hash:article:by:100536
$5
title
$66
Linux内核工程导论——网络：Filter（LSF、BPF、eBPF）
*4
$4
HSET
$22
hash:article:by:100536
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100536
$8
labelIds
$20
[101,123,100,124,78]
*4
$4
HSET
$22
hash:article:by:100536
$6
digest
$167
概览    LSF(Linux socket filter)起源于BPF（Berkeley Packet Filter），基础从架构一致，但使用更简单。LSF内部的BPF最早是cBPF（classic...
*4
$4
HSET
$22
hash:article:by:100536
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100536
$7
content
$41
csdn/linux/1_0_3_5_1504264465.181855.html
*4
$4
HSET
$22
hash:article:by:100536
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100536
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100536
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100536
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100536
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100536
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100536
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100536
$10
createTime
$13
1451674858000
*4
$4
HSET
$22
hash:article:by:100536
$11
releaseTime
$13
1451674858000
*4
$4
HSET
$22
hash:article:by:100536
$10
updateTime
$13
1451674858000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100536
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100536
*3
$5
LPUSH
$15
list:article:id
$6
100536
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100536
*4
$4
HSET
$22
hash:article:by:100416
$2
id
$6
100416
*4
$4
HSET
$22
hash:article:by:100416
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100416
$9
articleId
$4
2284
*4
$4
HSET
$22
hash:article:by:100416
$5
title
$44
Linux内核工程导论——安全：概览
*4
$4
HSET
$22
hash:article:by:100416
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100416
$8
labelIds
$8
[100,67]
*4
$4
HSET
$22
hash:article:by:100416
$6
digest
$237
linux从unix和posix那里继承了最基本的安全机制：用户、文件权限、进程capabilities。但是仅有这些是不够的，很多第三方实现了新的机制，通过补丁的形式提供。如安全增强Linux（SE...
*4
$4
HSET
$22
hash:article:by:100416
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100416
$7
content
$42
csdn/linux/1_0_2_13_1504264591.502612.html
*4
$4
HSET
$22
hash:article:by:100416
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100416
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100416
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100416
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100416
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100416
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100416
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100416
$10
createTime
$13
1451638808000
*4
$4
HSET
$22
hash:article:by:100416
$11
releaseTime
$13
1451638808000
*4
$4
HSET
$22
hash:article:by:100416
$10
updateTime
$13
1451638808000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100416
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100416
*3
$5
LPUSH
$15
list:article:id
$6
100416
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100416
*4
$4
HSET
$22
hash:article:by:100393
$2
id
$6
100393
*4
$4
HSET
$22
hash:article:by:100393
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100393
$9
articleId
$4
2096
*4
$4
HSET
$22
hash:article:by:100393
$5
title
$74
【Linux探索之旅】第四部分第三课：文件传输，潇洒同步
*4
$4
HSET
$22
hash:article:by:100393
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100393
$8
labelIds
$20
[21,383,384,107,161]
*4
$4
HSET
$22
hash:article:by:100393
$6
digest
$287
我们继续探究Linux的奇幻网络世界。这个网络世界比较特别，也许你已经有所体会：前辈们做了大量努力，靠加密方法来保证网络间传输的数据的安全，以防我们私人的信息泄露，例如密码。


这一课我们来学习文件...
*4
$4
HSET
$22
hash:article:by:100393
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100393
$7
content
$41
csdn/linux/1_1_1_2_1504264430.193949.html
*4
$4
HSET
$22
hash:article:by:100393
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100393
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100393
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100393
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100393
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100393
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100393
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100393
$10
createTime
$13
1451494842000
*4
$4
HSET
$22
hash:article:by:100393
$11
releaseTime
$13
1451494842000
*4
$4
HSET
$22
hash:article:by:100393
$10
updateTime
$13
1451494842000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100393
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100393
*3
$5
LPUSH
$15
list:article:id
$6
100393
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100393
*4
$4
HSET
$22
hash:article:by:100689
$2
id
$6
100689
*4
$4
HSET
$22
hash:article:by:100689
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100689
$9
articleId
$4
2034
*4
$4
HSET
$22
hash:article:by:100689
$5
title
$74
Spring中@Transactional事务回滚（含实例详细讲解，附源码）
*4
$4
HSET
$22
hash:article:by:100689
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100689
$8
labelIds
$18
[59,650,63,36,212]
*4
$4
HSET
$22
hash:article:by:100689
$6
digest
$247
一、使用场景举例在了解@Transactional怎么用之前我们必须要先知道@Transactional有什么用。下面举个栗子：比如一个部门里面有很多成员，这两者分别保存在部门表和成员表里面，在删除某...
*4
$4
HSET
$22
hash:article:by:100689
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100689
$7
content
$41
csdn/java/1_1_1_15_1504264385.270197.html
*4
$4
HSET
$22
hash:article:by:100689
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100689
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100689
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100689
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100689
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100689
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100689
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100689
$10
createTime
$13
1451340017000
*4
$4
HSET
$22
hash:article:by:100689
$11
releaseTime
$13
1451340017000
*4
$4
HSET
$22
hash:article:by:100689
$10
updateTime
$13
1451340017000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100689
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100689
*3
$5
LPUSH
$15
list:article:id
$6
100689
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100689
*4
$4
HSET
$22
hash:article:by:100413
$2
id
$6
100413
*4
$4
HSET
$22
hash:article:by:100413
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100413
$9
articleId
$4
2097
*4
$4
HSET
$22
hash:article:by:100413
$5
title
$71
【Linux探索之旅】第四部分第二课：SSH连接，安全快捷
*4
$4
HSET
$22
hash:article:by:100413
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100413
$8
labelIds
$20
[21,299,402,107,161]
*4
$4
HSET
$22
hash:article:by:100413
$6
digest
$271
这一课的内容肯定会让你大呼过瘾，也许是《Linux探索之旅》中到目前为止最有意思的课之一。 我们会聊很多内容，会学习如何连接到远程的一台安装有Linux的机器。 我们不仅仅会学习如何远程连接到Linu...
*4
$4
HSET
$22
hash:article:by:100413
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100413
$7
content
$41
csdn/linux/1_1_1_3_1504264431.418579.html
*4
$4
HSET
$22
hash:article:by:100413
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100413
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100413
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100413
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100413
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100413
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100413
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100413
$10
createTime
$13
1451325623000
*4
$4
HSET
$22
hash:article:by:100413
$11
releaseTime
$13
1451325623000
*4
$4
HSET
$22
hash:article:by:100413
$10
updateTime
$13
1451325623000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100413
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100413
*3
$5
LPUSH
$15
list:article:id
$6
100413
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100413
*4
$4
HSET
$22
hash:article:by:100748
$2
id
$6
100748
*4
$4
HSET
$22
hash:article:by:100748
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100748
$9
articleId
$4
2443
*4
$4
HSET
$22
hash:article:by:100748
$5
title
$27
数字溢出的那点事儿
*4
$4
HSET
$22
hash:article:by:100748
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100748
$8
labelIds
$12
[726,18,727]
*4
$4
HSET
$22
hash:article:by:100748
$6
digest
$277
近期的工作中，使用报表的频度越来越高，虽然展示数据更加方便了，但是报表加载数据时的各种问题也就迎之而来，最典型的问题：数字溢出；
      先来看一下运行的错误日志：   
    ❦故事背景：
 ...
*4
$4
HSET
$22
hash:article:by:100748
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100748
$7
content
$40
csdn/java/1_1_1_3_1504264741.909615.html
*4
$4
HSET
$22
hash:article:by:100748
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100748
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100748
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100748
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100748
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100748
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100748
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100748
$10
createTime
$13
1451296812000
*4
$4
HSET
$22
hash:article:by:100748
$11
releaseTime
$13
1451296812000
*4
$4
HSET
$22
hash:article:by:100748
$10
updateTime
$13
1451296812000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100748
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100748
*3
$5
LPUSH
$15
list:article:id
$6
100748
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100748
*4
$4
HSET
$22
hash:article:by:100766
$2
id
$6
100766
*4
$4
HSET
$22
hash:article:by:100766
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100766
$9
articleId
$4
2064
*4
$4
HSET
$22
hash:article:by:100766
$5
title
$12
代理模式
*4
$4
HSET
$22
hash:article:by:100766
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100766
$8
labelIds
$14
[12,39,18,650]
*4
$4
HSET
$22
hash:article:by:100766
$6
digest
$265
代理模式标签： Java与设计模式代理模式
  为其他对象提供一种代理以控制对这个对象的访问(可以详细控制访问某个对象的方法, 在调用这个方法[前/后]做[前/后]置处理, 从而实现将统一流程放到代理...
*4
$4
HSET
$22
hash:article:by:100766
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100766
$7
content
$41
csdn/java/1_0_1_14_1504264410.542722.html
*4
$4
HSET
$22
hash:article:by:100766
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100766
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100766
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100766
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100766
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100766
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100766
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100766
$10
createTime
$13
1451214027000
*4
$4
HSET
$22
hash:article:by:100766
$11
releaseTime
$13
1451214027000
*4
$4
HSET
$22
hash:article:by:100766
$10
updateTime
$13
1451214027000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100766
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100766
*3
$5
LPUSH
$15
list:article:id
$6
100766
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100766
*4
$4
HSET
$22
hash:article:by:100716
$2
id
$6
100716
*4
$4
HSET
$22
hash:article:by:100716
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100716
$9
articleId
$4
2036
*4
$4
HSET
$22
hash:article:by:100716
$5
title
$63
Maven+Mybatis+Spring+SpringMVC实现分页查询（附源码）
*4
$4
HSET
$22
hash:article:by:100716
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100716
$8
labelIds
$16
[59,7,27,118,79]
*4
$4
HSET
$22
hash:article:by:100716
$6
digest
$271
下面小宝鸽将分享一篇Mybatis分页功能的博文,下面将给出详细的步骤，跟着博主的节奏肯定能实现。另外最后还会附上整个工程的源码。如果是没有使用过maven的猿友可自行下载相关的jar包即可。一、项目...
*4
$4
HSET
$22
hash:article:by:100716
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100716
$7
content
$41
csdn/java/1_1_1_16_1504264386.259112.html
*4
$4
HSET
$22
hash:article:by:100716
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100716
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100716
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100716
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100716
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100716
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100716
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100716
$10
createTime
$13
1451163618000
*4
$4
HSET
$22
hash:article:by:100716
$11
releaseTime
$13
1451163618000
*4
$4
HSET
$22
hash:article:by:100716
$10
updateTime
$13
1451163618000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100716
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100716
*3
$5
LPUSH
$15
list:article:id
$6
100716
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100716
*4
$4
HSET
$22
hash:article:by:100654
$2
id
$6
100654
*4
$4
HSET
$22
hash:article:by:100654
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100654
$9
articleId
$4
2067
*4
$4
HSET
$22
hash:article:by:100654
$5
title
$15
适配器模式
*4
$4
HSET
$22
hash:article:by:100654
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100654
$8
labelIds
$14
[18,77,12,608]
*4
$4
HSET
$22
hash:article:by:100654
$6
digest
$287
适配器模式标签： Java与设计模式结构型模式
  在解决了对象的创建问题之后，对象的组成以及对象之间的依赖关系就成了开发人员关注的焦点，因为如何设计对象的结构、继承和依赖关系会影响到后续程序的维护性...
*4
$4
HSET
$22
hash:article:by:100654
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100654
$7
content
$41
csdn/java/1_0_1_15_1504264411.680154.html
*4
$4
HSET
$22
hash:article:by:100654
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100654
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100654
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100654
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100654
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100654
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100654
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100654
$10
createTime
$13
1451073607000
*4
$4
HSET
$22
hash:article:by:100654
$11
releaseTime
$13
1451073607000
*4
$4
HSET
$22
hash:article:by:100654
$10
updateTime
$13
1451073607000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100654
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100654
*3
$5
LPUSH
$15
list:article:id
$6
100654
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100654
*4
$4
HSET
$22
hash:article:by:100721
$2
id
$6
100721
*4
$4
HSET
$22
hash:article:by:100721
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100721
$9
articleId
$4
2045
*4
$4
HSET
$22
hash:article:by:100721
$5
title
$30
Zookeeper注册中心的搭建
*4
$4
HSET
$22
hash:article:by:100721
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100721
$8
labelIds
$17
[693,694,648,695]
*4
$4
HSET
$22
hash:article:by:100721
$6
digest
$239
Zookeeper是一个分布式的，开放源码的分布式应用程序协调服务，是Google的Chubby一个开源的实现，是Hadoop和Hbase的重要组件。它是一个为分布式应用提供一致性服务的软件，提供的功...
*4
$4
HSET
$22
hash:article:by:100721
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100721
$7
content
$41
csdn/java/1_1_1_11_1504264392.448564.html
*4
$4
HSET
$22
hash:article:by:100721
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100721
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100721
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100721
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100721
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100721
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100721
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100721
$10
createTime
$13
1450976404000
*4
$4
HSET
$22
hash:article:by:100721
$11
releaseTime
$13
1450976404000
*4
$4
HSET
$22
hash:article:by:100721
$10
updateTime
$13
1450976404000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100721
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100721
*3
$5
LPUSH
$15
list:article:id
$6
100721
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100721
*4
$4
HSET
$22
hash:article:by:100354
$2
id
$6
100354
*4
$4
HSET
$22
hash:article:by:100354
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100354
$9
articleId
$4
2476
*4
$4
HSET
$22
hash:article:by:100354
$5
title
$18
类和对象理解
*4
$4
HSET
$22
hash:article:by:100354
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100354
$8
labelIds
$8
[18,290]
*4
$4
HSET
$22
hash:article:by:100354
$6
digest
$257
最近看了TIOBE排行，java居然已经超过了c语言，排在了第一位。心理莫名的激动了一下，不是想说java有多牛逼，只是感慨现在java程序员越来越多，竞争压力加大。java区别于c语言，很重要的一点...
*4
$4
HSET
$22
hash:article:by:100354
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100354
$7
content
$41
csdn/java/1_0_2_10_1504264786.360581.html
*4
$4
HSET
$22
hash:article:by:100354
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100354
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100354
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100354
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100354
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100354
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100354
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100354
$10
createTime
$13
1450911659000
*4
$4
HSET
$22
hash:article:by:100354
$11
releaseTime
$13
1450911659000
*4
$4
HSET
$22
hash:article:by:100354
$10
updateTime
$13
1450911659000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100354
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100354
*3
$5
LPUSH
$15
list:article:id
$6
100354
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100354
*4
$4
HSET
$22
hash:article:by:100687
$2
id
$6
100687
*4
$4
HSET
$22
hash:article:by:100687
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100687
$9
articleId
$4
2044
*4
$4
HSET
$22
hash:article:by:100687
$5
title
$43
mybaits入门（含实例教程和源码）
*4
$4
HSET
$22
hash:article:by:100687
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100687
$8
labelIds
$21
[118,645,646,165,647]
*4
$4
HSET
$22
hash:article:by:100687
$6
digest
$247
前言：mybatis是一个非常优秀的存储过程和高级映射的优秀持久层框架。大大简化了，数据库操作中的常用操作。下面将介绍mybatis的一些概念和在eclipse上的实际项目搭建使用。一、mybatis...
*4
$4
HSET
$22
hash:article:by:100687
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100687
$7
content
$41
csdn/java/1_1_1_13_1504264391.362608.html
*4
$4
HSET
$22
hash:article:by:100687
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100687
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100687
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100687
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100687
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100687
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100687
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100687
$10
createTime
$13
1450886447000
*4
$4
HSET
$22
hash:article:by:100687
$11
releaseTime
$13
1450886447000
*4
$4
HSET
$22
hash:article:by:100687
$10
updateTime
$13
1450886447000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100687
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100687
*3
$5
LPUSH
$15
list:article:id
$6
100687
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100687
*4
$4
HSET
$22
hash:article:by:100776
$2
id
$6
100776
*4
$4
HSET
$22
hash:article:by:100776
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100776
$9
articleId
$4
2043
*4
$4
HSET
$22
hash:article:by:100776
$5
title
$47
Dubbo分布式服务框架入门（附工程）
*4
$4
HSET
$22
hash:article:by:100776
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100776
$8
labelIds
$13
[695,102,648]
*4
$4
HSET
$22
hash:article:by:100776
$6
digest
$148
本文介绍了dubbo的一些概念，并对zookeeper、dubbo-admin、提供者、消费者的搭建进行了详细的讲解，且附有工程源码
*4
$4
HSET
$22
hash:article:by:100776
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100776
$7
content
$41
csdn/java/1_1_1_12_1504264390.329236.html
*4
$4
HSET
$22
hash:article:by:100776
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100776
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100776
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100776
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100776
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100776
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100776
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100776
$10
createTime
$13
1450882849000
*4
$4
HSET
$22
hash:article:by:100776
$11
releaseTime
$13
1450882849000
*4
$4
HSET
$22
hash:article:by:100776
$10
updateTime
$13
1450882849000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100776
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100776
*3
$5
LPUSH
$15
list:article:id
$6
100776
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100776
*4
$4
HSET
$22
hash:article:by:100784
$2
id
$6
100784
*4
$4
HSET
$22
hash:article:by:100784
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100784
$9
articleId
$4
2038
*4
$4
HSET
$22
hash:article:by:100784
$5
title
$48
Spirng+SpringMVC+Maven+Mybatis+MySQL项目搭建
*4
$4
HSET
$22
hash:article:by:100784
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100784
$8
labelIds
$16
[7,27,118,79,59]
*4
$4
HSET
$22
hash:article:by:100784
$6
digest
$217
这篇文章主要讲解使用eclipse对Spirng+SpringMVC+Maven+Mybatis+MySQL项目搭建过程，包括里面步骤和里面的配置文件如何配置等等都会详细说明。如果还没有搭建好环境（主...
*4
$4
HSET
$22
hash:article:by:100784
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100784
$7
content
$41
csdn/java/1_1_1_17_1504264387.248106.html
*4
$4
HSET
$22
hash:article:by:100784
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100784
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100784
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100784
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100784
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100784
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100784
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100784
$10
createTime
$13
1450800044000
*4
$4
HSET
$22
hash:article:by:100784
$11
releaseTime
$13
1450800044000
*4
$4
HSET
$22
hash:article:by:100784
$10
updateTime
$13
1450800044000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100784
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100784
*3
$5
LPUSH
$15
list:article:id
$6
100784
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100784
*4
$4
HSET
$22
hash:article:by:100750
$2
id
$6
100750
*4
$4
HSET
$22
hash:article:by:100750
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100750
$9
articleId
$4
2055
*4
$4
HSET
$22
hash:article:by:100750
$5
title
$15
建造者模式
*4
$4
HSET
$22
hash:article:by:100750
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100750
$8
labelIds
$19
[12,728,18,729,730]
*4
$4
HSET
$22
hash:article:by:100750
$6
digest
$285
建造者模式: 又称生成器模式, 可以将一个产品的内部表象与产品的生成过程分割开来, 从而可以使一个建造过程生成具有不同的内部表象的产品(将一个复杂对象的构建与它的表示分离, 使得同样的构建过程可以创建...
*4
$4
HSET
$22
hash:article:by:100750
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100750
$7
content
$41
csdn/java/1_0_1_16_1504264404.533823.html
*4
$4
HSET
$22
hash:article:by:100750
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100750
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100750
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100750
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100750
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100750
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100750
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100750
$10
createTime
$13
1450630843000
*4
$4
HSET
$22
hash:article:by:100750
$11
releaseTime
$13
1450630843000
*4
$4
HSET
$22
hash:article:by:100750
$10
updateTime
$13
1450630843000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100750
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100750
*3
$5
LPUSH
$15
list:article:id
$6
100750
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100750
*4
$4
HSET
$22
hash:article:by:100680
$2
id
$6
100680
*4
$4
HSET
$22
hash:article:by:100680
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100680
$9
articleId
$4
2056
*4
$4
HSET
$22
hash:article:by:100680
$5
title
$12
原型模式
*4
$4
HSET
$22
hash:article:by:100680
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100680
$8
labelIds
$18
[12,18,467,63,641]
*4
$4
HSET
$22
hash:article:by:100680
$6
digest
$267
原型模式标签： Java与设计模式
  原型模式 
  用原型实例指定创建对象的种类, 并通过拷贝这些原型创建新的对象.
原型模式就是通过一个对象再创建另一个可定制的对象, 而且不需要知道任何创建的细...
*4
$4
HSET
$22
hash:article:by:100680
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100680
$7
content
$41
csdn/java/1_0_1_17_1504264405.610795.html
*4
$4
HSET
$22
hash:article:by:100680
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100680
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100680
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100680
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100680
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100680
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100680
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100680
$10
createTime
$13
1450630838000
*4
$4
HSET
$22
hash:article:by:100680
$11
releaseTime
$13
1450630838000
*4
$4
HSET
$22
hash:article:by:100680
$10
updateTime
$13
1450630838000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100680
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100680
*3
$5
LPUSH
$15
list:article:id
$6
100680
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100680
*4
$4
HSET
$22
hash:article:by:100752
$2
id
$6
100752
*4
$4
HSET
$22
hash:article:by:100752
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100752
$9
articleId
$4
2032
*4
$4
HSET
$22
hash:article:by:100752
$5
title
$32
Maven入门（含实例教程）
*4
$4
HSET
$22
hash:article:by:100752
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100752
$8
labelIds
$20
[438,79,608,466,731]
*4
$4
HSET
$22
hash:article:by:100752
$6
digest
$243
Maven这个个项目管理和构建自动化工具，越来越多的开发人员使用它来管理项目中的jar包。接下来小宝鸽，将从下面几个方向介绍maven：（1）Maven简单介绍 
（2）Maven安装与配置 
（3）...
*4
$4
HSET
$22
hash:article:by:100752
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100752
$7
content
$41
csdn/java/1_1_1_14_1504264384.185583.html
*4
$4
HSET
$22
hash:article:by:100752
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100752
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100752
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100752
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100752
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100752
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100752
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100752
$10
createTime
$13
1450191641000
*4
$4
HSET
$22
hash:article:by:100752
$11
releaseTime
$13
1450191641000
*4
$4
HSET
$22
hash:article:by:100752
$10
updateTime
$13
1450191641000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100752
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100752
*3
$5
LPUSH
$15
list:article:id
$6
100752
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100752
*4
$4
HSET
$22
hash:article:by:100756
$2
id
$6
100756
*4
$4
HSET
$22
hash:article:by:100756
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100756
$9
articleId
$4
2057
*4
$4
HSET
$22
hash:article:by:100756
$5
title
$12
工厂模式
*4
$4
HSET
$22
hash:article:by:100756
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100756
$8
labelIds
$15
[361,18,12,734]
*4
$4
HSET
$22
hash:article:by:100756
$6
digest
$243
工厂模式标签： Java与设计模式
  工厂模式 
  用工厂方法代替了new操作, 将选择实现类, 创建对象统一管理和控制.从而将调用者(Client)与实现类进行解耦.实现了创建者与调用者分离;使...
*4
$4
HSET
$22
hash:article:by:100756
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100756
$7
content
$41
csdn/java/1_0_1_18_1504264406.537905.html
*4
$4
HSET
$22
hash:article:by:100756
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100756
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100756
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100756
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100756
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100756
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100756
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100756
$10
createTime
$13
1450015215000
*4
$4
HSET
$22
hash:article:by:100756
$11
releaseTime
$13
1450015215000
*4
$4
HSET
$22
hash:article:by:100756
$10
updateTime
$13
1450015215000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100756
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100756
*3
$5
LPUSH
$15
list:article:id
$6
100756
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100756
*4
$4
HSET
$22
hash:article:by:100736
$2
id
$6
100736
*4
$4
HSET
$22
hash:article:by:100736
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100736
$9
articleId
$4
2058
*4
$4
HSET
$22
hash:article:by:100736
$5
title
$12
单例模式
*4
$4
HSET
$22
hash:article:by:100736
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100736
$8
labelIds
$15
[18,12,707,708]
*4
$4
HSET
$22
hash:article:by:100736
$6
digest
$211
static, enum, 内部类与单例模式标签： Java与设计模式Java static与初始化块拾忆
  static关键字的作用是把类的成员变成类相关,而不是实例相关.普通初始化块
  当Ja...
*4
$4
HSET
$22
hash:article:by:100736
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100736
$7
content
$41
csdn/java/1_0_1_19_1504264407.594785.html
*4
$4
HSET
$22
hash:article:by:100736
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100736
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100736
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100736
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100736
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100736
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100736
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100736
$10
createTime
$13
1449669626000
*4
$4
HSET
$22
hash:article:by:100736
$11
releaseTime
$13
1449669626000
*4
$4
HSET
$22
hash:article:by:100736
$10
updateTime
$13
1449669626000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100736
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100736
*3
$5
LPUSH
$15
list:article:id
$6
100736
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100736
*4
$4
HSET
$22
hash:article:by:100779
$2
id
$6
100779
*4
$4
HSET
$22
hash:article:by:100779
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100779
$9
articleId
$4
2425
*4
$4
HSET
$22
hash:article:by:100779
$5
title
$24
润乾报表实用教程
*4
$4
HSET
$22
hash:article:by:100779
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100779
$8
labelIds
$12
[18,727,726]
*4
$4
HSET
$22
hash:article:by:100779
$6
digest
$264
我们都知道在Java领域的开发中，有一个常用的报表--润乾报表。但是对于新手来讲，我们究竟如何在一个较短的时间内最高效的使用它呢？下面一起来看：
☁ 报表设计步骤
                ...
*4
$4
HSET
$22
hash:article:by:100779
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100779
$7
content
$40
csdn/java/1_1_1_0_1504264733.399085.html
*4
$4
HSET
$22
hash:article:by:100779
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100779
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100779
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100779
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100779
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100779
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100779
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100779
$10
createTime
$13
1448812859000
*4
$4
HSET
$22
hash:article:by:100779
$11
releaseTime
$13
1448812859000
*4
$4
HSET
$22
hash:article:by:100779
$10
updateTime
$13
1448812859000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100779
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100779
*3
$5
LPUSH
$15
list:article:id
$6
100779
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100779
*4
$4
HSET
$22
hash:article:by:100769
$2
id
$6
100769
*4
$4
HSET
$22
hash:article:by:100769
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100769
$9
articleId
$4
2433
*4
$4
HSET
$22
hash:article:by:100769
$5
title
$32
Oracle语句的再深化--转码
*4
$4
HSET
$22
hash:article:by:100769
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100769
$8
labelIds
$17
[726,759,417,147]
*4
$4
HSET
$22
hash:article:by:100769
$6
digest
$137
当我们面对一个数据表，且表结构为：
create table R_ExtSubFina_Month
(
        rptdate date not null,
        rptname v...
*4
$4
HSET
$22
hash:article:by:100769
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100769
$7
content
$40
csdn/java/1_1_1_2_1504264736.722254.html
*4
$4
HSET
$22
hash:article:by:100769
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100769
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100769
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100769
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100769
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100769
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100769
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100769
$10
createTime
$13
1448578811000
*4
$4
HSET
$22
hash:article:by:100769
$11
releaseTime
$13
1448578811000
*4
$4
HSET
$22
hash:article:by:100769
$10
updateTime
$13
1448578811000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100769
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100769
*3
$5
LPUSH
$15
list:article:id
$6
100769
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100769
*4
$4
HSET
$22
hash:article:by:100289
$2
id
$6
100289
*4
$4
HSET
$22
hash:article:by:100289
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100289
$9
articleId
$4
2292
*4
$4
HSET
$22
hash:article:by:100289
$5
title
$44
Linux内核工程导论–网络：TCP连接
*4
$4
HSET
$22
hash:article:by:100289
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100289
$8
labelIds
$9
[100,125]
*4
$4
HSET
$22
hash:article:by:100289
$6
digest
$245
Linux内核工程导论–网络：TCPTCP存在原因       TCP希望达成数据按序的，无损失的传输。 
       只要有TCP这个协议的需求，就有其带来的问题。其问题是，既然要保证按序到达和完...
*4
$4
HSET
$22
hash:article:by:100289
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100289
$7
content
$42
csdn/linux/1_0_2_12_1504264607.027887.html
*4
$4
HSET
$22
hash:article:by:100289
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100289
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100289
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100289
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100289
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100289
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100289
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100289
$10
createTime
$13
1447448441000
*4
$4
HSET
$22
hash:article:by:100289
$11
releaseTime
$13
1447448441000
*4
$4
HSET
$22
hash:article:by:100289
$10
updateTime
$13
1447448441000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100289
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100289
*3
$5
LPUSH
$15
list:article:id
$6
100289
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100289
*4
$4
HSET
$22
hash:article:by:100263
$2
id
$6
100263
*4
$4
HSET
$22
hash:article:by:100263
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100263
$9
articleId
$4
2285
*4
$4
HSET
$22
hash:article:by:100263
$5
title
$44
Linux内核工程导论——进程社会学
*4
$4
HSET
$22
hash:article:by:100263
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100263
$8
labelIds
$12
[21,260,119]
*4
$4
HSET
$22
hash:article:by:100263
$6
digest
$297
服务与进程	进程是满足用户需求的一系列任务，有的为了提供一个交互的界面，有的为了提供一个后台的演算，有的为了提供一个网络服务，有的为了利用磁盘资源做存储。归根到底，进程就是需求的承载体。PC本身就是通...
*4
$4
HSET
$22
hash:article:by:100263
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100263
$7
content
$42
csdn/linux/1_0_2_11_1504264595.653467.html
*4
$4
HSET
$22
hash:article:by:100263
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100263
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100263
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100263
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100263
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100263
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100263
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100263
$10
createTime
$13
1446674443000
*4
$4
HSET
$22
hash:article:by:100263
$11
releaseTime
$13
1446674443000
*4
$4
HSET
$22
hash:article:by:100263
$10
updateTime
$13
1446674443000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100263
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100263
*3
$5
LPUSH
$15
list:article:id
$6
100263
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100263
*4
$4
HSET
$22
hash:article:by:100586
$2
id
$6
100586
*4
$4
HSET
$22
hash:article:by:100586
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100586
$9
articleId
$4
2286
*4
$4
HSET
$22
hash:article:by:100586
$5
title
$55
Linux内核工程导论——网络：下半部分:core
*4
$4
HSET
$22
hash:article:by:100586
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100586
$8
labelIds
$20
[21,100,546,123,124]
*4
$4
HSET
$22
hash:article:by:100586
$6
digest
$209
总览         最外层是3个文件:socket、compat；、sysctl_net。socket文件定义了操作系统暴漏给用户程序的接口，compat是兼容性考虑的特殊socket接口（主要服务...
*4
$4
HSET
$22
hash:article:by:100586
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100586
$7
content
$42
csdn/linux/1_0_2_10_1504264596.937889.html
*4
$4
HSET
$22
hash:article:by:100586
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100586
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100586
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100586
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100586
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100586
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100586
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100586
$10
createTime
$13
1446505202000
*4
$4
HSET
$22
hash:article:by:100586
$11
releaseTime
$13
1446505202000
*4
$4
HSET
$22
hash:article:by:100586
$10
updateTime
$13
1446505202000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100586
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100586
*3
$5
LPUSH
$15
list:article:id
$6
100586
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100586
*4
$4
HSET
$22
hash:article:by:100601
$2
id
$6
100601
*4
$4
HSET
$22
hash:article:by:100601
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100601
$9
articleId
$4
2091
*4
$4
HSET
$22
hash:article:by:100601
$5
title
$77
【Linux探索之旅】第四部分第一课：压缩文件，解压无压力
*4
$4
HSET
$22
hash:article:by:100601
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100601
$8
labelIds
$20
[21,119,107,558,104]
*4
$4
HSET
$22
hash:article:by:100601
$6
digest
$285
最近小编因为换工作，从南法搬到巴黎。折腾了很久。
网络一直用的是公共的无线网，信号不行。无线上网的box盒子已经说通网了，但我觉得墙上的线有问题。反正就是用不了自己的告诉WiFI盒子。
而且还要继续找...
*4
$4
HSET
$22
hash:article:by:100601
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100601
$7
content
$41
csdn/linux/1_1_1_4_1504264426.428432.html
*4
$4
HSET
$22
hash:article:by:100601
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100601
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100601
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100601
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100601
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100601
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100601
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100601
$10
createTime
$13
1445439620000
*4
$4
HSET
$22
hash:article:by:100601
$11
releaseTime
$13
1445439620000
*4
$4
HSET
$22
hash:article:by:100601
$10
updateTime
$13
1445439620000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100601
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100601
*3
$5
LPUSH
$15
list:article:id
$6
100601
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100601
*4
$4
HSET
$22
hash:article:by:100617
$2
id
$6
100617
*4
$4
HSET
$22
hash:article:by:100617
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100617
$9
articleId
$4
2149
*4
$4
HSET
$22
hash:article:by:100617
$5
title
$54
Linux内核工程导论——内核为何使用C语言
*4
$4
HSET
$22
hash:article:by:100617
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100617
$8
labelIds
$15
[100,21,35,250]
*4
$4
HSET
$22
hash:article:by:100617
$6
digest
$255
C与C++的对比无数人说过，都说C效率高，但很多人做过实验如果C++不适用RTTI，C++的效率也不会低太多（25%左右）。还有人说C++强大的STL，但是对效率讲究点的话那个真的不能用，具体我后面说...
*4
$4
HSET
$22
hash:article:by:100617
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100617
$7
content
$40
csdn/linux/1_0_3_4_1504264473.38145.html
*4
$4
HSET
$22
hash:article:by:100617
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100617
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100617
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100617
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100617
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100617
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100617
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100617
$10
createTime
$13
1444676453000
*4
$4
HSET
$22
hash:article:by:100617
$11
releaseTime
$13
1444676453000
*4
$4
HSET
$22
hash:article:by:100617
$10
updateTime
$13
1444676453000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100617
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100617
*3
$5
LPUSH
$15
list:article:id
$6
100617
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100617
*4
$4
HSET
$22
hash:article:by:100737
$2
id
$6
100737
*4
$4
HSET
$22
hash:article:by:100737
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100737
$9
articleId
$4
2287
*4
$4
HSET
$22
hash:article:by:100737
$5
title
$47
Linux内核工程导论——内核架构概览
*4
$4
HSET
$22
hash:article:by:100737
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100737
$8
labelIds
$11
[100,21,35]
*4
$4
HSET
$22
hash:article:by:100737
$6
digest
$251
Linux内核通用技术
linux内核技巧与手段
linux内核上下层通信方式
         定义一个接口体，包含各种函数指针，并且管理其列表。下层通过生成一个这样的结构体，将自己的操作函数...
*4
$4
HSET
$22
hash:article:by:100737
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100737
$7
content
$40
csdn/linux/1_0_2_9_1504264597.39283.html
*4
$4
HSET
$22
hash:article:by:100737
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100737
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100737
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100737
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100737
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100737
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100737
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100737
$10
createTime
$13
1444330845000
*4
$4
HSET
$22
hash:article:by:100737
$11
releaseTime
$13
1444330845000
*4
$4
HSET
$22
hash:article:by:100737
$10
updateTime
$13
1444330845000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100737
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100737
*3
$5
LPUSH
$15
list:article:id
$6
100737
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100737
*4
$4
HSET
$22
hash:article:by:100637
$2
id
$6
100637
*4
$4
HSET
$22
hash:article:by:100637
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100637
$9
articleId
$4
2296
*4
$4
HSET
$22
hash:article:by:100637
$5
title
$41
Linux内核工程导论——存储：USB
*4
$4
HSET
$22
hash:article:by:100637
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100637
$8
labelIds
$19
[546,590,100,21,35]
*4
$4
HSET
$22
hash:article:by:100637
$6
digest
$211
kernel USB驱动层
         首先USB（UniversalSerial Bus）是一种传输协议，并不是一种数据协议，也没有任何语义上的指令意义。USB传输协议所传输的SCSI命令才...
*4
$4
HSET
$22
hash:article:by:100637
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100637
$7
content
$41
csdn/linux/1_0_2_8_1504264611.504934.html
*4
$4
HSET
$22
hash:article:by:100637
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100637
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100637
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100637
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100637
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100637
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100637
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100637
$10
createTime
$13
1444330844000
*4
$4
HSET
$22
hash:article:by:100637
$11
releaseTime
$13
1444330844000
*4
$4
HSET
$22
hash:article:by:100637
$10
updateTime
$13
1444330844000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100637
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100637
*3
$5
LPUSH
$15
list:article:id
$6
100637
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100637
*4
$4
HSET
$22
hash:article:by:100309
$2
id
$6
100309
*4
$4
HSET
$22
hash:article:by:100309
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100309
$9
articleId
$4
2288
*4
$4
HSET
$22
hash:article:by:100309
$5
title
$50
Linux内核工程导论——存储：通用块层
*4
$4
HSET
$22
hash:article:by:100309
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100309
$8
labelIds
$18
[100,153,75,21,35]
*4
$4
HSET
$22
hash:article:by:100309
$6
digest
$261
通用块层抽象
         通用块层位于scsi的上层，文件系统的下层，系统主要的内存管理和读写优化都是在这里完成的。DIRECT_IO是跳过这一层的。这一层不是驱动，而是一种机制。其代码位于l...
*4
$4
HSET
$22
hash:article:by:100309
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100309
$7
content
$40
csdn/linux/1_0_2_7_1504264598.68181.html
*4
$4
HSET
$22
hash:article:by:100309
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100309
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100309
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100309
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100309
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100309
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100309
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100309
$10
createTime
$13
1444330843000
*4
$4
HSET
$22
hash:article:by:100309
$11
releaseTime
$13
1444330843000
*4
$4
HSET
$22
hash:article:by:100309
$10
updateTime
$13
1444330843000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100309
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100309
*3
$5
LPUSH
$15
list:article:id
$6
100309
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100309
*4
$4
HSET
$22
hash:article:by:100278
$2
id
$6
100278
*4
$4
HSET
$22
hash:article:by:100278
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100278
$9
articleId
$4
2299
*4
$4
HSET
$22
hash:article:by:100278
$5
title
$47
Linux内核工程导论——存储：缓存层
*4
$4
HSET
$22
hash:article:by:100278
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100278
$8
labelIds
$19
[153,188,100,21,35]
*4
$4
HSET
$22
hash:article:by:100278
$6
digest
$229
缓存层
bdi：缓存设备
         bdi是对块设备层的内存支持，相关代码页位于mm目录下。bdi的全称是backing device info，后备设备是非易失性存储器，但是这种存储器都比较...
*4
$4
HSET
$22
hash:article:by:100278
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100278
$7
content
$41
csdn/linux/1_0_2_5_1504264614.346526.html
*4
$4
HSET
$22
hash:article:by:100278
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100278
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100278
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100278
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100278
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100278
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100278
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100278
$10
createTime
$13
1444330841000
*4
$4
HSET
$22
hash:article:by:100278
$11
releaseTime
$13
1444330841000
*4
$4
HSET
$22
hash:article:by:100278
$10
updateTime
$13
1444330841000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100278
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100278
*3
$5
LPUSH
$15
list:article:id
$6
100278
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100278
*4
$4
HSET
$22
hash:article:by:100215
$2
id
$6
100215
*4
$4
HSET
$22
hash:article:by:100215
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100215
$9
articleId
$4
2298
*4
$4
HSET
$22
hash:article:by:100215
$5
title
$50
Linux内核工程导论——存储：文件系统
*4
$4
HSET
$22
hash:article:by:100215
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100215
$8
labelIds
$19
[100,21,35,188,165]
*4
$4
HSET
$22
hash:article:by:100215
$6
digest
$267
文件系统层
文件系统的种类和选用
         文件系统有很多种，linux内核是个大杂烩，同时满足企业和个人的需求，文件系统也是如此，发行版也是如此。其中原因自己分析。
         我们最...
*4
$4
HSET
$22
hash:article:by:100215
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100215
$7
content
$41
csdn/linux/1_0_2_6_1504264613.337916.html
*4
$4
HSET
$22
hash:article:by:100215
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100215
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100215
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100215
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100215
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100215
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100215
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100215
$10
createTime
$13
1444330839000
*4
$4
HSET
$22
hash:article:by:100215
$11
releaseTime
$13
1444330839000
*4
$4
HSET
$22
hash:article:by:100215
$10
updateTime
$13
1444330839000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100215
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100215
*3
$5
LPUSH
$15
list:article:id
$6
100215
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100215
*4
$4
HSET
$22
hash:article:by:100176
$2
id
$6
100176
*4
$4
HSET
$22
hash:article:by:100176
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100176
$9
articleId
$4
2280
*4
$4
HSET
$22
hash:article:by:100176
$5
title
$53
Linux内核工程导论——硬件：音频子系统
*4
$4
HSET
$22
hash:article:by:100176
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100176
$8
labelIds
$11
[100,21,35]
*4
$4
HSET
$22
hash:article:by:100176
$6
digest
$285
音频子系统
音频框架
音频设备是非常常用，但又最容易在linux下出现问题的设备之一。音频设备种类和芯片繁多，所以必须提供足够多的驱动，并且有内核有足够的驱动与设备的匹配能力。也正是由于多样性，内...
*4
$4
HSET
$22
hash:article:by:100176
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100176
$7
content
$41
csdn/linux/1_0_2_2_1504264584.039919.html
*4
$4
HSET
$22
hash:article:by:100176
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100176
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100176
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100176
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100176
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100176
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100176
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100176
$10
createTime
$13
1444330837000
*4
$4
HSET
$22
hash:article:by:100176
$11
releaseTime
$13
1444330837000
*4
$4
HSET
$22
hash:article:by:100176
$10
updateTime
$13
1444330837000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100176
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100176
*3
$5
LPUSH
$15
list:article:id
$6
100176
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100176
*4
$4
HSET
$22
hash:article:by:100279
$2
id
$6
100279
*4
$4
HSET
$22
hash:article:by:100279
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100279
$9
articleId
$4
2281
*4
$4
HSET
$22
hash:article:by:100279
$5
title
$53
Linux内核工程导论——硬件：无线子系统
*4
$4
HSET
$22
hash:article:by:100279
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100279
$8
labelIds
$11
[21,35,100]
*4
$4
HSET
$22
hash:article:by:100279
$6
digest
$259
WiMax
Wifi
内核中有一个rfkill子系统，使用这个可以关闭任何一个射频收发器。Linux中倾向于通用架构子系统，各个设备其实都是实现这个子系统规定的函数。这些子系统向上就提供操作同类函数的...
*4
$4
HSET
$22
hash:article:by:100279
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100279
$7
content
$41
csdn/linux/1_0_2_3_1504264585.010362.html
*4
$4
HSET
$22
hash:article:by:100279
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100279
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100279
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100279
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100279
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100279
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100279
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100279
$10
createTime
$13
1444330837000
*4
$4
HSET
$22
hash:article:by:100279
$11
releaseTime
$13
1444330837000
*4
$4
HSET
$22
hash:article:by:100279
$10
updateTime
$13
1444330837000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100279
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100279
*3
$5
LPUSH
$15
list:article:id
$6
100279
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100279
*4
$4
HSET
$22
hash:article:by:100139
$2
id
$6
100139
*4
$4
HSET
$22
hash:article:by:100139
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100139
$9
articleId
$4
2278
*4
$4
HSET
$22
hash:article:by:100139
$5
title
$50
Linux内核工程导论——电源管理子系统
*4
$4
HSET
$22
hash:article:by:100139
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100139
$8
labelIds
$8
[100,35]
*4
$4
HSET
$22
hash:article:by:100139
$6
digest
$48
电源管理子系统
ACPI
温度监测与控制
*4
$4
HSET
$22
hash:article:by:100139
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100139
$7
content
$41
csdn/linux/1_0_2_0_1504264583.049149.html
*4
$4
HSET
$22
hash:article:by:100139
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100139
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100139
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100139
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100139
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100139
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100139
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100139
$10
createTime
$13
1444330831000
*4
$4
HSET
$22
hash:article:by:100139
$11
releaseTime
$13
1444330831000
*4
$4
HSET
$22
hash:article:by:100139
$10
updateTime
$13
1444330831000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100139
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100139
*3
$5
LPUSH
$15
list:article:id
$6
100139
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100139
*4
$4
HSET
$22
hash:article:by:100486
$2
id
$6
100486
*4
$4
HSET
$22
hash:article:by:100486
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100486
$9
articleId
$4
2386
*4
$4
HSET
$22
hash:article:by:100486
$5
title
$49
Linux内核工程导论——网络：IP：隧道
*4
$4
HSET
$22
hash:article:by:100486
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100486
$8
labelIds
$15
[21,100,35,124]
*4
$4
HSET
$22
hash:article:by:100486
$6
digest
$253
Linux中IP隧道
为什么需要IP隧道？
没有接触过这个概念的人自然提出这样的疑问。实际上概念最初的提出很简单，为了在TCP/IP网络中传输其他协议的数据包。设想IPX协议或 X.25封装的数据包如...
*4
$4
HSET
$22
hash:article:by:100486
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100486
$7
content
$42
csdn/linux/1_0_1_18_1504264693.149691.html
*4
$4
HSET
$22
hash:article:by:100486
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100486
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100486
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100486
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100486
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100486
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100486
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100486
$10
createTime
$13
1444330815000
*4
$4
HSET
$22
hash:article:by:100486
$11
releaseTime
$13
1444330815000
*4
$4
HSET
$22
hash:article:by:100486
$10
updateTime
$13
1444330815000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100486
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100486
*3
$5
LPUSH
$15
list:article:id
$6
100486
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100486
*4
$4
HSET
$22
hash:article:by:100481
$2
id
$6
100481
*4
$4
HSET
$22
hash:article:by:100481
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100481
$9
articleId
$4
2380
*4
$4
HSET
$22
hash:article:by:100481
$5
title
$50
Linux内核工程导论——网络：网络特性
*4
$4
HSET
$22
hash:article:by:100481
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100481
$8
labelIds
$12
[21,100,124]
*4
$4
HSET
$22
hash:article:by:100481
$6
digest
$131
网络特性
       QoS and/orfair queueing
IP层以下
802.1d以太网桥
802.1Q/802.1ad VLAN Support
ANSI/IEEE 802.2 LLC...
*4
$4
HSET
$22
hash:article:by:100481
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100481
$7
content
$42
csdn/linux/1_0_1_17_1504264687.147456.html
*4
$4
HSET
$22
hash:article:by:100481
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100481
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100481
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100481
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100481
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100481
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100481
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100481
$10
createTime
$13
1444330809000
*4
$4
HSET
$22
hash:article:by:100481
$11
releaseTime
$13
1444330809000
*4
$4
HSET
$22
hash:article:by:100481
$10
updateTime
$13
1444330809000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100481
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100481
*3
$5
LPUSH
$15
list:article:id
$6
100481
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100481
*4
$4
HSET
$22
hash:article:by:100125
$2
id
$6
100125
*4
$4
HSET
$22
hash:article:by:100125
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100125
$9
articleId
$4
2381
*4
$4
HSET
$22
hash:article:by:100125
$5
title
$59
Linux内核工程导论——进程：用户进程间通信
*4
$4
HSET
$22
hash:article:by:100125
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100125
$8
labelIds
$11
[100,21,35]
*4
$4
HSET
$22
hash:article:by:100125
$6
digest
$135
应用程序间通信
writev/readv
System V IPC
管道
fifo
dbus
unix domain
信号
POSIX IPC
mailbox
         模...
*4
$4
HSET
$22
hash:article:by:100125
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100125
$7
content
$42
csdn/linux/1_0_1_16_1504264687.947007.html
*4
$4
HSET
$22
hash:article:by:100125
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100125
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100125
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100125
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100125
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100125
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100125
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100125
$10
createTime
$13
1444320032000
*4
$4
HSET
$22
hash:article:by:100125
$11
releaseTime
$13
1444320032000
*4
$4
HSET
$22
hash:article:by:100125
$10
updateTime
$13
1444320032000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100125
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100125
*3
$5
LPUSH
$15
list:article:id
$6
100125
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100125
*4
$4
HSET
$22
hash:article:by:100138
$2
id
$6
100138
*4
$4
HSET
$22
hash:article:by:100138
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100138
$9
articleId
$4
2382
*4
$4
HSET
$22
hash:article:by:100138
$5
title
$74
Linux内核工程导论——进程：内核与用户空间的进程通信
*4
$4
HSET
$22
hash:article:by:100138
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100138
$8
labelIds
$15
[21,100,35,123]
*4
$4
HSET
$22
hash:article:by:100138
$6
digest
$204
内核与用户程序通信
netlink
用户端使用

    netlink被纳入socket操作的框架中，确切的说是在socket框架中设计的netlink通信接口。用户态创建、销毁socket...
*4
$4
HSET
$22
hash:article:by:100138
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100138
$7
content
$42
csdn/linux/1_0_1_15_1504264689.022733.html
*4
$4
HSET
$22
hash:article:by:100138
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100138
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100138
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100138
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100138
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100138
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100138
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100138
$10
createTime
$13
1444320030000
*4
$4
HSET
$22
hash:article:by:100138
$11
releaseTime
$13
1444320030000
*4
$4
HSET
$22
hash:article:by:100138
$10
updateTime
$13
1444320030000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100138
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100138
*3
$5
LPUSH
$15
list:article:id
$6
100138
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100138
*4
$4
HSET
$22
hash:article:by:100166
$2
id
$6
100166
*4
$4
HSET
$22
hash:article:by:100166
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100166
$9
articleId
$4
2144
*4
$4
HSET
$22
hash:article:by:100166
$5
title
$50
Linux内核工程导论——数据结构：其他
*4
$4
HSET
$22
hash:article:by:100166
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100166
$8
labelIds
$14
[100,21,35,75]
*4
$4
HSET
$22
hash:article:by:100166
$6
digest
$273
KFIFO
缓冲区在文件系统中经常用到，通过缓冲区缓解cpu读写内存和读写磁盘的速度。例如一个进程A产生数据发给另外一个进程B，进程B需要对进程A传的数据进行处理并写入文件，如果B没有处理完，则A要延...
*4
$4
HSET
$22
hash:article:by:100166
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100166
$7
content
$41
csdn/linux/1_0_3_1_1504264470.272899.html
*4
$4
HSET
$22
hash:article:by:100166
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100166
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100166
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100166
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100166
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100166
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100166
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100166
$10
createTime
$13
1444320011000
*4
$4
HSET
$22
hash:article:by:100166
$11
releaseTime
$13
1444320011000
*4
$4
HSET
$22
hash:article:by:100166
$10
updateTime
$13
1444320011000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100166
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100166
*3
$5
LPUSH
$15
list:article:id
$6
100166
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100166
*4
$4
HSET
$22
hash:article:by:100306
$2
id
$6
100306
*4
$4
HSET
$22
hash:article:by:100306
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100306
$9
articleId
$4
2307
*4
$4
HSET
$22
hash:article:by:100306
$5
title
$56
Linux内核的构建过程----Linux内核剖析（五）
*4
$4
HSET
$22
hash:article:by:100306
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100306
$8
labelIds
$13
[163,100,308]
*4
$4
HSET
$22
hash:article:by:100306
$6
digest
$193
参考 
  一次实验引发的故事 – kernel build system探索—vmlinux是如何炼成的– kernel makefile
问题在前面的博文中，我们先是为自己的Ubuntu安装了一套...
*4
$4
HSET
$22
hash:article:by:100306
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100306
$7
content
$41
csdn/linux/1_0_1_7_1504264623.988499.html
*4
$4
HSET
$22
hash:article:by:100306
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100306
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100306
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100306
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100306
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100306
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100306
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100306
$10
createTime
$13
1444312853000
*4
$4
HSET
$22
hash:article:by:100306
$11
releaseTime
$13
1444312853000
*4
$4
HSET
$22
hash:article:by:100306
$10
updateTime
$13
1444312853000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100306
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100306
*3
$5
LPUSH
$15
list:article:id
$6
100306
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100306
*4
$4
HSET
$22
hash:article:by:100286
$2
id
$6
100286
*4
$4
HSET
$22
hash:article:by:100286
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100286
$9
articleId
$4
2308
*4
$4
HSET
$22
hash:article:by:100286
$5
title
$57
为arm内核构建源码树----Linux内核剖析（四）
*4
$4
HSET
$22
hash:article:by:100286
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100286
$8
labelIds
$19
[163,35,36,100,289]
*4
$4
HSET
$22
hash:article:by:100286
$6
digest
$261
前面说到要做linux底层开发或者编写Linux的驱动，必须建立内核源码树，之前我们提到过在本机上构建源码树—-Linux内核剖析（三），其建立的源码树是针对i686平台的，但是我么嵌入式系统用的是a...
*4
$4
HSET
$22
hash:article:by:100286
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100286
$7
content
$40
csdn/linux/1_0_1_8_1504264624.03277.html
*4
$4
HSET
$22
hash:article:by:100286
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100286
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100286
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100286
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100286
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100286
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100286
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100286
$10
createTime
$13
1443715224000
*4
$4
HSET
$22
hash:article:by:100286
$11
releaseTime
$13
1443715224000
*4
$4
HSET
$22
hash:article:by:100286
$10
updateTime
$13
1443715224000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100286
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100286
*3
$5
LPUSH
$15
list:article:id
$6
100286
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100286
*4
$4
HSET
$22
hash:article:by:100191
$2
id
$6
100191
*4
$4
HSET
$22
hash:article:by:100191
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100191
$9
articleId
$4
2095
*4
$4
HSET
$22
hash:article:by:100191
$5
title
$44
【Linux探索之旅】第三部分测验题
*4
$4
HSET
$22
hash:article:by:100191
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100191
$8
labelIds
$20
[21,119,107,173,161]
*4
$4
HSET
$22
hash:article:by:100191
$6
digest
$81
第三部分测试题，共10题。如果做对5题以下请回炉重造。。。
*4
$4
HSET
$22
hash:article:by:100191
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100191
$7
content
$41
csdn/linux/1_1_1_5_1504264429.209585.html
*4
$4
HSET
$22
hash:article:by:100191
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100191
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100191
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100191
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100191
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100191
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100191
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100191
$10
createTime
$13
1442800824000
*4
$4
HSET
$22
hash:article:by:100191
$11
releaseTime
$13
1442800824000
*4
$4
HSET
$22
hash:article:by:100191
$10
updateTime
$13
1442800824000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100191
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100191
*3
$5
LPUSH
$15
list:article:id
$6
100191
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100191
*4
$4
HSET
$22
hash:article:by:100391
$2
id
$6
100391
*4
$4
HSET
$22
hash:article:by:100391
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100391
$9
articleId
$4
2093
*4
$4
HSET
$22
hash:article:by:100391
$5
title
$74
【Linux探索之旅】第三部分第五课：延时执行，唯慢不破
*4
$4
HSET
$22
hash:article:by:100391
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100391
$8
labelIds
$20
[21,119,107,161,382]
*4
$4
HSET
$22
hash:article:by:100391
$6
digest
$291
到目前为止，我们所运行的命令都是立即执行，也就是我们按下回车键的那一刻，命令就开始执行了。
其实Linux中命令还可以延时执行。这一课我们就来学习几个命令，可以帮助我们《稍后》执行程序。比如我们即将学...
*4
$4
HSET
$22
hash:article:by:100391
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100391
$7
content
$41
csdn/linux/1_1_1_6_1504264427.207673.html
*4
$4
HSET
$22
hash:article:by:100391
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100391
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100391
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100391
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100391
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100391
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100391
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100391
$10
createTime
$13
1442800801000
*4
$4
HSET
$22
hash:article:by:100391
$11
releaseTime
$13
1442800801000
*4
$4
HSET
$22
hash:article:by:100391
$10
updateTime
$13
1442800801000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100391
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100391
*3
$5
LPUSH
$15
list:article:id
$6
100391
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100391
*4
$4
HSET
$22
hash:article:by:100256
$2
id
$6
100256
*4
$4
HSET
$22
hash:article:by:100256
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100256
$9
articleId
$4
2094
*4
$4
HSET
$22
hash:article:by:100256
$5
title
$80
【Linux探索之旅】第三部分第四课：后台运行及合并多个终端
*4
$4
HSET
$22
hash:article:by:100256
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100256
$8
labelIds
$20
[21,252,119,107,160]
*4
$4
HSET
$22
hash:article:by:100256
$6
digest
$295
我们使用的终端让我们难免有一种感觉：我们每次只能在一个终端中运行一个进程。但其实这是大错特错的。

终端还可以运行后台进程。要使进程一个在后台运行，有几种方法，我们都将学习。

这一课的第三节还将学习...
*4
$4
HSET
$22
hash:article:by:100256
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100256
$7
content
$41
csdn/linux/1_1_1_7_1504264428.196223.html
*4
$4
HSET
$22
hash:article:by:100256
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100256
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100256
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100256
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100256
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100256
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100256
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100256
$10
createTime
$13
1442552449000
*4
$4
HSET
$22
hash:article:by:100256
$11
releaseTime
$13
1442552449000
*4
$4
HSET
$22
hash:article:by:100256
$10
updateTime
$13
1442552449000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100256
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100256
*3
$5
LPUSH
$15
list:article:id
$6
100256
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100256
*4
$4
HSET
$22
hash:article:by:100141
$2
id
$6
100141
*4
$4
HSET
$22
hash:article:by:100141
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100141
$9
articleId
$4
2390
*4
$4
HSET
$22
hash:article:by:100141
$5
title
$62
Linux内核工程导论——网络：服务质量与安全性
*4
$4
HSET
$22
hash:article:by:100141
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100141
$8
labelIds
$19
[21,100,35,124,125]
*4
$4
HSET
$22
hash:article:by:100141
$6
digest
$273
TCP

TCP希望达成数据按序的，无损失的传输。

只要有TCP这个协议的需求，就有其带来的问题。其问题是，既然要保证按序到达和完全到达，如何保证？不但要保证，还要保证速度，又如何设计机制？最终TC...
*4
$4
HSET
$22
hash:article:by:100141
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100141
$7
content
$42
csdn/linux/1_0_1_14_1504264698.433545.html
*4
$4
HSET
$22
hash:article:by:100141
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100141
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100141
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100141
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100141
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100141
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100141
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100141
$10
createTime
$13
1442512816000
*4
$4
HSET
$22
hash:article:by:100141
$11
releaseTime
$13
1442512816000
*4
$4
HSET
$22
hash:article:by:100141
$10
updateTime
$13
1442512816000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100141
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100141
*3
$5
LPUSH
$15
list:article:id
$6
100141
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100141
*4
$4
HSET
$22
hash:article:by:100152
$2
id
$6
100152
*4
$4
HSET
$22
hash:article:by:100152
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100152
$9
articleId
$4
2385
*4
$4
HSET
$22
hash:article:by:100152
$5
title
$40
Linux内核工程导论——网络：IP
*4
$4
HSET
$22
hash:article:by:100152
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100152
$8
labelIds
$15
[21,100,35,124]
*4
$4
HSET
$22
hash:article:by:100152
$6
digest
$255
TCP/IP网络
IP
         TCP/IP是目前通用性最高的网络系统，本来各个硬件体系大都会定义自己的通信协议，并且以太网上也是曾经存在很多通信协议（例如IPX），但是随着产业的发展，所有...
*4
$4
HSET
$22
hash:article:by:100152
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100152
$7
content
$42
csdn/linux/1_0_1_13_1504264692.099775.html
*4
$4
HSET
$22
hash:article:by:100152
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100152
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100152
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100152
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100152
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100152
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100152
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100152
$10
createTime
$13
1442512809000
*4
$4
HSET
$22
hash:article:by:100152
$11
releaseTime
$13
1442512809000
*4
$4
HSET
$22
hash:article:by:100152
$10
updateTime
$13
1442512809000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100152
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100152
*3
$5
LPUSH
$15
list:article:id
$6
100152
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100152
*4
$4
HSET
$22
hash:article:by:100554
$2
id
$6
100554
*4
$4
HSET
$22
hash:article:by:100554
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100554
$9
articleId
$4
2392
*4
$4
HSET
$22
hash:article:by:100554
$5
title
$46
Linux内核工程导论——总线：Platform
*4
$4
HSET
$22
hash:article:by:100554
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100554
$8
labelIds
$15
[100,21,35,525]
*4
$4
HSET
$22
hash:article:by:100554
$6
digest
$243
Platform总线
         PCI总线只是一种USB挂载的总线选择。USB总线虽然是慢速总线，需要挂载在较快的总线上作为缓存，但也有例外的情况，例如CPU中直接集成USB控制模块，这在很...
*4
$4
HSET
$22
hash:article:by:100554
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100554
$7
content
$42
csdn/linux/1_0_1_12_1504264700.444713.html
*4
$4
HSET
$22
hash:article:by:100554
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100554
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100554
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100554
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100554
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100554
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100554
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100554
$10
createTime
$13
1442350857000
*4
$4
HSET
$22
hash:article:by:100554
$11
releaseTime
$13
1442350857000
*4
$4
HSET
$22
hash:article:by:100554
$10
updateTime
$13
1442350857000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100554
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100554
*3
$5
LPUSH
$15
list:article:id
$6
100554
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100554
*4
$4
HSET
$22
hash:article:by:100302
$2
id
$6
100302
*4
$4
HSET
$22
hash:article:by:100302
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100302
$9
articleId
$4
2387
*4
$4
HSET
$22
hash:article:by:100302
$5
title
$54
Linux内核工程导论——存储：SCSI、ATA与SAS
*4
$4
HSET
$22
hash:article:by:100302
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100302
$8
labelIds
$15
[100,35,21,303]
*4
$4
HSET
$22
hash:article:by:100302
$6
digest
$207
SCSI、ATA与T10的SAS
         1981年SCSI产生。后一致与ATA并行竞争发展。例如串行的SATA的出现就导致了串行的SCSI：SAS的出现。SCSI目前的最新标准是T10，而...
*4
$4
HSET
$22
hash:article:by:100302
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100302
$7
content
$42
csdn/linux/1_0_1_11_1504264694.257685.html
*4
$4
HSET
$22
hash:article:by:100302
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100302
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100302
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100302
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100302
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100302
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100302
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100302
$10
createTime
$13
1442350848000
*4
$4
HSET
$22
hash:article:by:100302
$11
releaseTime
$13
1442350848000
*4
$4
HSET
$22
hash:article:by:100302
$10
updateTime
$13
1442350848000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100302
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100302
*3
$5
LPUSH
$15
list:article:id
$6
100302
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100302
*4
$4
HSET
$22
hash:article:by:100780
$2
id
$6
100780
*4
$4
HSET
$22
hash:article:by:100780
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100780
$9
articleId
$4
2427
*4
$4
HSET
$22
hash:article:by:100780
$5
title
$39
小荷才露尖尖角之struts的秘密
*4
$4
HSET
$22
hash:article:by:100780
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100780
$8
labelIds
$12
[299,18,268]
*4
$4
HSET
$22
hash:article:by:100780
$6
digest
$252
我们都知道SSH是目前比较流行的一个Web应用程序开源框架，而struts又是之中的领头框架，究竟它有怎样的力量竟然可以博客IT界的眼球，下面请听我一一道来：
 一、MVC
要了解struts必须先来...
*4
$4
HSET
$22
hash:article:by:100780
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100780
$7
content
$40
csdn/java/1_1_1_1_1504264734.670927.html
*4
$4
HSET
$22
hash:article:by:100780
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100780
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100780
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100780
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100780
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100780
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100780
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100780
$10
createTime
$13
1442343600000
*4
$4
HSET
$22
hash:article:by:100780
$11
releaseTime
$13
1442343600000
*4
$4
HSET
$22
hash:article:by:100780
$10
updateTime
$13
1442343600000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100780
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100780
*3
$5
LPUSH
$15
list:article:id
$6
100780
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100780
*4
$4
HSET
$22
hash:article:by:100200
$2
id
$6
100200
*4
$4
HSET
$22
hash:article:by:100200
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100200
$9
articleId
$4
2074
*4
$4
HSET
$22
hash:article:by:100200
$5
title
$80
【Linux探索之旅】第三部分第三课：监视系统活动，滴水不漏
*4
$4
HSET
$22
hash:article:by:100200
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100200
$8
labelIds
$19
[62,119,161,107,21]
*4
$4
HSET
$22
hash:article:by:100200
$6
digest
$269
放眼现在的操作系统，基本都是多任务操作系统了，Linux当然也不例外。因此，Linux可以管理多个同时运行的程序。

通过之前的课程（《【Linux探索之旅】第二部分第五课：用户和权限，有权就任性》）...
*4
$4
HSET
$22
hash:article:by:100200
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100200
$7
content
$41
csdn/linux/1_1_1_8_1504264416.039383.html
*4
$4
HSET
$22
hash:article:by:100200
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100200
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100200
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100200
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100200
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100200
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100200
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100200
$10
createTime
$13
1442332844000
*4
$4
HSET
$22
hash:article:by:100200
$11
releaseTime
$13
1442332844000
*4
$4
HSET
$22
hash:article:by:100200
$10
updateTime
$13
1442332844000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100200
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100200
*3
$5
LPUSH
$15
list:article:id
$6
100200
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100200
*4
$4
HSET
$22
hash:article:by:100252
$2
id
$6
100252
*4
$4
HSET
$22
hash:article:by:100252
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100252
$9
articleId
$4
2085
*4
$4
HSET
$22
hash:article:by:100252
$5
title
$86
【Linux探索之旅】第三部分第二课：流、管道、重定向，三管齐下
*4
$4
HSET
$22
hash:article:by:100252
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100252
$8
labelIds
$20
[21,247,107,248,249]
*4
$4
HSET
$22
hash:article:by:100252
$6
digest
$303
这一课我们来学一些非常有用的内容，而且相当有意思，而且内容很多，而且有可能颠覆你的三《观》（毕竟三管齐下，不颠覆三观也难）。今天的标题中的三个名称，听上去就怪怪的。什么流，管道，重定向，都啥玩意啊。不...
*4
$4
HSET
$22
hash:article:by:100252
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100252
$7
content
$41
csdn/linux/1_1_1_9_1504264422.513841.html
*4
$4
HSET
$22
hash:article:by:100252
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100252
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100252
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100252
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100252
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100252
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100252
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100252
$10
createTime
$13
1442196033000
*4
$4
HSET
$22
hash:article:by:100252
$11
releaseTime
$13
1442196033000
*4
$4
HSET
$22
hash:article:by:100252
$10
updateTime
$13
1442196033000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100252
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100252
*3
$5
LPUSH
$15
list:article:id
$6
100252
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100252
*4
$4
HSET
$22
hash:article:by:100420
$2
id
$6
100420
*4
$4
HSET
$22
hash:article:by:100420
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100420
$9
articleId
$4
2147
*4
$4
HSET
$22
hash:article:by:100420
$5
title
$59
Linux内核工程导论——数据结构：链表与哈希
*4
$4
HSET
$22
hash:article:by:100420
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100420
$8
labelIds
$18
[100,35,21,75,270]
*4
$4
HSET
$22
hash:article:by:100420
$6
digest
$287
1 链表与哈希表
链表可以把离散时间到达的数据结构串起来，使其可以被更容易的索引。Linux内核中全部使用双向链表。那为何链表要与哈希表放在一起介绍呢？因为哈希表室友链表群组成的，其每一个哈希桶都是一...
*4
$4
HSET
$22
hash:article:by:100420
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100420
$7
content
$40
csdn/linux/1_0_3_3_1504264472.30341.html
*4
$4
HSET
$22
hash:article:by:100420
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100420
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100420
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100420
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100420
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100420
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100420
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100420
$10
createTime
$13
1442044856000
*4
$4
HSET
$22
hash:article:by:100420
$11
releaseTime
$13
1442044856000
*4
$4
HSET
$22
hash:article:by:100420
$10
updateTime
$13
1442044856000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100420
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100420
*3
$5
LPUSH
$15
list:article:id
$6
100420
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100420
*4
$4
HSET
$22
hash:article:by:100145
$2
id
$6
100145
*4
$4
HSET
$22
hash:article:by:100145
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100145
$9
articleId
$4
2393
*4
$4
HSET
$22
hash:article:by:100145
$5
title
$50
Linux内核工程导论——网络：内核特性
*4
$4
HSET
$22
hash:article:by:100145
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100145
$8
labelIds
$15
[100,35,21,124]
*4
$4
HSET
$22
hash:article:by:100145
$6
digest
$255
TCP/IP网络
IP
         TCP/IP是目前通用性最高的网络系统，本来各个硬件体系大都会定义自己的通信协议，并且以太网上也是曾经存在很多通信协议（例如IPX），但是随着产业的发展，所有...
*4
$4
HSET
$22
hash:article:by:100145
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100145
$7
content
$42
csdn/linux/1_0_1_10_1504264701.522136.html
*4
$4
HSET
$22
hash:article:by:100145
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100145
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100145
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100145
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100145
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100145
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100145
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100145
$10
createTime
$13
1442005229000
*4
$4
HSET
$22
hash:article:by:100145
$11
releaseTime
$13
1442005229000
*4
$4
HSET
$22
hash:article:by:100145
$10
updateTime
$13
1442005229000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100145
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100145
*3
$5
LPUSH
$15
list:article:id
$6
100145
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100145
*4
$4
HSET
$22
hash:article:by:100599
$2
id
$6
100599
*4
$4
HSET
$22
hash:article:by:100599
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100599
$9
articleId
$4
2379
*4
$4
HSET
$22
hash:article:by:100599
$5
title
$44
Linux内核工程导论——网络：Socket
*4
$4
HSET
$22
hash:article:by:100599
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100599
$8
labelIds
$19
[100,35,21,124,123]
*4
$4
HSET
$22
hash:article:by:100599
$6
digest
$251
网络架构
         我们通常见到的网络是以太网络和无线网络，但是linux是个大而全的操作系统，其支持的无线网络很多。主要有：业余无线电、CAN网络、红外线（IrDA）、蓝牙（Bluetoo...
*4
$4
HSET
$22
hash:article:by:100599
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100599
$7
content
$41
csdn/linux/1_0_1_9_1504264685.005995.html
*4
$4
HSET
$22
hash:article:by:100599
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100599
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100599
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100599
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100599
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100599
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100599
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100599
$10
createTime
$13
1442005226000
*4
$4
HSET
$22
hash:article:by:100599
$11
releaseTime
$13
1442005226000
*4
$4
HSET
$22
hash:article:by:100599
$10
updateTime
$13
1442005226000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100599
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100599
*3
$5
LPUSH
$15
list:article:id
$6
100599
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100599
*4
$4
HSET
$22
hash:article:by:100205
$2
id
$6
100205
*4
$4
HSET
$22
hash:article:by:100205
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100205
$9
articleId
$4
2086
*4
$4
HSET
$22
hash:article:by:100205
$5
title
$74
【Linux探索之旅】第三部分第一课：数据处理，慢条斯理
*4
$4
HSET
$22
hash:article:by:100205
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100205
$8
labelIds
$20
[21,119,107,160,161]
*4
$4
HSET
$22
hash:article:by:100205
$6
digest
$295
哈哈，终于到了第三部分了。不知不觉两个部分已经学完了，可喜可贺，掌声给自己！

此时读者内心独白：“我想静静，也不要问我小编是谁。”

好了好了，小编重回淡定。咳咳，看到今天的标题应该会对这一课的内容...
*4
$4
HSET
$22
hash:article:by:100205
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100205
$7
content
$42
csdn/linux/1_1_1_10_1504264422.979924.html
*4
$4
HSET
$22
hash:article:by:100205
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100205
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100205
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100205
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100205
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100205
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100205
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100205
$10
createTime
$13
1441767608000
*4
$4
HSET
$22
hash:article:by:100205
$11
releaseTime
$13
1441767608000
*4
$4
HSET
$22
hash:article:by:100205
$10
updateTime
$13
1441767608000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100205
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100205
*3
$5
LPUSH
$15
list:article:id
$6
100205
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100205
*4
$4
HSET
$22
hash:article:by:100671
$2
id
$6
100671
*4
$4
HSET
$22
hash:article:by:100671
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100671
$9
articleId
$4
2389
*4
$4
HSET
$22
hash:article:by:100671
$5
title
$24
spring入门实例详解
*4
$4
HSET
$22
hash:article:by:100671
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100671
$8
labelIds
$12
[59,632,633]
*4
$4
HSET
$22
hash:article:by:100671
$6
digest
$261
spring框架在我们的开发中用到的很多,前面几篇博客也理解了一下spring的基本概念，现在准备写一个spring框架的入门实例，以一个登陆认证签到模块为例子；
实例说明：
登陆签到模块其实很简单，...
*4
$4
HSET
$22
hash:article:by:100671
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100671
$7
content
$41
csdn/java/1_2_1_17_1504264696.025961.html
*4
$4
HSET
$22
hash:article:by:100671
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100671
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100671
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100671
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100671
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100671
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100671
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100671
$10
createTime
$13
1441555214000
*4
$4
HSET
$22
hash:article:by:100671
$11
releaseTime
$13
1441555214000
*4
$4
HSET
$22
hash:article:by:100671
$10
updateTime
$13
1441555214000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100671
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100671
*3
$5
LPUSH
$15
list:article:id
$6
100671
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100671
*4
$4
HSET
$22
hash:article:by:100196
$2
id
$6
100196
*4
$4
HSET
$22
hash:article:by:100196
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100196
$9
articleId
$4
2087
*4
$4
HSET
$22
hash:article:by:100196
$5
title
$44
【Linux探索之旅】第二部分测试题
*4
$4
HSET
$22
hash:article:by:100196
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100196
$8
labelIds
$20
[21,119,107,160,161]
*4
$4
HSET
$22
hash:article:by:100196
$6
digest
$41
10道测试题，测测掌握得如何。
*4
$4
HSET
$22
hash:article:by:100196
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100196
$7
content
$42
csdn/linux/1_1_1_11_1504264424.461559.html
*4
$4
HSET
$22
hash:article:by:100196
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100196
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100196
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100196
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100196
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100196
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100196
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100196
$10
createTime
$13
1441339253000
*4
$4
HSET
$22
hash:article:by:100196
$11
releaseTime
$13
1441339253000
*4
$4
HSET
$22
hash:article:by:100196
$10
updateTime
$13
1441339253000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100196
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100196
*3
$5
LPUSH
$15
list:article:id
$6
100196
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100196
*4
$4
HSET
$22
hash:article:by:100187
$2
id
$6
100187
*4
$4
HSET
$22
hash:article:by:100187
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100187
$9
articleId
$4
2076
*4
$4
HSET
$22
hash:article:by:100187
$5
title
$74
【Linux探索之旅】第二部分第九课：查找文件，无所遁形
*4
$4
HSET
$22
hash:article:by:100187
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100187
$8
labelIds
$20
[21,119,107,160,161]
*4
$4
HSET
$22
hash:article:by:100187
$6
digest
$231
之前的课程我们见识过了Linux下文件的组织形式是很特别的，跟Windows不一样。

我们也用ls / 这个命令来列出根目录下的所有目录，有/bin，/etc，/var，/home，等等。而这些目录...
*4
$4
HSET
$22
hash:article:by:100187
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100187
$7
content
$42
csdn/linux/1_1_1_12_1504264417.343792.html
*4
$4
HSET
$22
hash:article:by:100187
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100187
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100187
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100187
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100187
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100187
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100187
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100187
$10
createTime
$13
1441339249000
*4
$4
HSET
$22
hash:article:by:100187
$11
releaseTime
$13
1441339249000
*4
$4
HSET
$22
hash:article:by:100187
$10
updateTime
$13
1441339249000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100187
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100187
*3
$5
LPUSH
$15
list:article:id
$6
100187
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100187
*4
$4
HSET
$22
hash:article:by:100178
$2
id
$6
100178
*4
$4
HSET
$22
hash:article:by:100178
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100178
$9
articleId
$4
2084
*4
$4
HSET
$22
hash:article:by:100178
$5
title
$76
【Linux探索之旅】第二部分第八课：RTFM 阅读那该死的手册
*4
$4
HSET
$22
hash:article:by:100178
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100178
$8
labelIds
$20
[21,119,107,160,161]
*4
$4
HSET
$22
hash:article:by:100178
$6
digest
$261
一般Windows的用户不太习惯看使用手册。有些Windows下的软件下载后是带有使用手册的，但是谁会花时间看呢？

在Linux下，阅读手册应该成为一个反射动作，一个自然而然的反应。虽说一开始要我们...
*4
$4
HSET
$22
hash:article:by:100178
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100178
$7
content
$42
csdn/linux/1_1_1_13_1504264421.356451.html
*4
$4
HSET
$22
hash:article:by:100178
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100178
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100178
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100178
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100178
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100178
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100178
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100178
$10
createTime
$13
1441339228000
*4
$4
HSET
$22
hash:article:by:100178
$11
releaseTime
$13
1441339228000
*4
$4
HSET
$22
hash:article:by:100178
$10
updateTime
$13
1441339228000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100178
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100178
*3
$5
LPUSH
$15
list:article:id
$6
100178
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100178
*4
$4
HSET
$22
hash:article:by:100370
$2
id
$6
100370
*4
$4
HSET
$22
hash:article:by:100370
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100370
$9
articleId
$4
2078
*4
$4
HSET
$22
hash:article:by:100370
$5
title
$74
【Linux探索之旅】第二部分第七课：软件安装，如虎添翼
*4
$4
HSET
$22
hash:article:by:100370
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100370
$8
labelIds
$20
[21,119,107,160,161]
*4
$4
HSET
$22
hash:article:by:100370
$6
digest
$271
一般提到软件安装，有过Windows系统使用经验的朋友肯定会深有体会，那个麻烦啊，大致流程是这样的：

在搜索引擎（比如百度或google）中搜索我们的软件名称。
看到一个不错的结果，点击进入。如果是...
*4
$4
HSET
$22
hash:article:by:100370
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100370
$7
content
$41
csdn/linux/1_1_1_14_1504264418.08233.html
*4
$4
HSET
$22
hash:article:by:100370
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100370
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100370
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100370
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100370
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100370
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100370
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100370
$10
createTime
$13
1441314014000
*4
$4
HSET
$22
hash:article:by:100370
$11
releaseTime
$13
1441314014000
*4
$4
HSET
$22
hash:article:by:100370
$10
updateTime
$13
1441314014000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100370
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100370
*3
$5
LPUSH
$15
list:article:id
$6
100370
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100370
*4
$4
HSET
$22
hash:article:by:100389
$2
id
$6
100389
*4
$4
HSET
$22
hash:article:by:100389
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100389
$9
articleId
$4
2141
*4
$4
HSET
$22
hash:article:by:100389
$5
title
$47
Linux内核工程导论——总线：Linux PCI
*4
$4
HSET
$22
hash:article:by:100389
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100389
$8
labelIds
$11
[100,35,21]
*4
$4
HSET
$22
hash:article:by:100389
$6
digest
$225
PCI
PCI系列总线介绍
         首先，PCI是一种总线，PCI-e是PCI的升级版，在linux的软件系统中是统一都是driver/pci下。既然是一种总线，物理上就包括总线部分和支持该...
*4
$4
HSET
$22
hash:article:by:100389
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100389
$7
content
$41
csdn/linux/1_0_3_8_1504264469.240642.html
*4
$4
HSET
$22
hash:article:by:100389
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100389
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100389
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100389
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100389
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100389
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100389
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100389
$10
createTime
$13
1440957642000
*4
$4
HSET
$22
hash:article:by:100389
$11
releaseTime
$13
1440957642000
*4
$4
HSET
$22
hash:article:by:100389
$10
updateTime
$13
1440957642000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100389
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100389
*3
$5
LPUSH
$15
list:article:id
$6
100389
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100389
*4
$4
HSET
$22
hash:article:by:100409
$2
id
$6
100409
*4
$4
HSET
$22
hash:article:by:100409
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100409
$9
articleId
$4
2080
*4
$4
HSET
$22
hash:article:by:100409
$5
title
$81
【Linux探索之旅】第二部分第六课：Nano，初学者的文本编辑器
*4
$4
HSET
$22
hash:article:by:100409
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100409
$8
labelIds
$20
[21,119,107,400,161]
*4
$4
HSET
$22
hash:article:by:100409
$6
digest
$295
这一课比较简单，没有什么太难的概念。不过这一课会讲如何配置终端噢。

大家可以泡个泡面，烤只烤鸡；剥个卤蛋，慢慢来看。

之前的课程中，我们已经学会了在终端中用多种不同的方式来查看文件的内容，但是我们...
*4
$4
HSET
$22
hash:article:by:100409
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100409
$7
content
$42
csdn/linux/1_1_1_15_1504264419.247549.html
*4
$4
HSET
$22
hash:article:by:100409
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100409
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100409
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100409
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100409
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100409
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100409
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100409
$10
createTime
$13
1440900026000
*4
$4
HSET
$22
hash:article:by:100409
$11
releaseTime
$13
1440900026000
*4
$4
HSET
$22
hash:article:by:100409
$10
updateTime
$13
1440900026000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100409
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100409
*3
$5
LPUSH
$15
list:article:id
$6
100409
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100409
*4
$4
HSET
$22
hash:article:by:100216
$2
id
$6
100216
*4
$4
HSET
$22
hash:article:by:100216
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100216
$9
articleId
$4
2378
*4
$4
HSET
$22
hash:article:by:100216
$5
title
$53
Linux内核工程导论——用户空间设备管理
*4
$4
HSET
$22
hash:article:by:100216
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100216
$8
labelIds
$11
[100,35,21]
*4
$4
HSET
$22
hash:article:by:100216
$6
digest
$277
用户空间设备管理
         用户空间所能见到的所有设备都放在/dev目录下（当然，只是一个目录，是可以变化的），文件系统所在的分区被当成一个单独的设备也放在该目录下。以前的2.4版本的曾经出现...
*4
$4
HSET
$22
hash:article:by:100216
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100216
$7
content
$41
csdn/linux/1_0_1_8_1504264684.151387.html
*4
$4
HSET
$22
hash:article:by:100216
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100216
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100216
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100216
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100216
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100216
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100216
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100216
$10
createTime
$13
1440799202000
*4
$4
HSET
$22
hash:article:by:100216
$11
releaseTime
$13
1440799202000
*4
$4
HSET
$22
hash:article:by:100216
$10
updateTime
$13
1440799202000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100216
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100216
*3
$5
LPUSH
$15
list:article:id
$6
100216
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100216
*4
$4
HSET
$22
hash:article:by:100588
$2
id
$6
100588
*4
$4
HSET
$22
hash:article:by:100588
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100588
$9
articleId
$4
2384
*4
$4
HSET
$22
hash:article:by:100588
$5
title
$35
Linux内核工程导论——进程
*4
$4
HSET
$22
hash:article:by:100588
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100588
$8
labelIds
$11
[100,35,21]
*4
$4
HSET
$22
hash:article:by:100588
$6
digest
$267
进程
进程调度
概要
         linux是个多进程的环境，不但用户空间可以有多个进程，而且内核内部也可以有内核进程。linux内核中线程与进程没有区别，因此叫线程和进程都是一样的。调度器调度...
*4
$4
HSET
$22
hash:article:by:100588
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100588
$7
content
$40
csdn/linux/1_0_1_7_1504264691.14261.html
*4
$4
HSET
$22
hash:article:by:100588
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100588
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100588
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100588
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100588
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100588
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100588
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100588
$10
createTime
$13
1440795646000
*4
$4
HSET
$22
hash:article:by:100588
$11
releaseTime
$13
1440795646000
*4
$4
HSET
$22
hash:article:by:100588
$10
updateTime
$13
1440795646000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100588
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100588
*3
$5
LPUSH
$15
list:article:id
$6
100588
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100588
*4
$4
HSET
$22
hash:article:by:100291
$2
id
$6
100291
*4
$4
HSET
$22
hash:article:by:100291
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100291
$9
articleId
$4
2383
*4
$4
HSET
$22
hash:article:by:100291
$5
title
$41
Linux内核工程导论——基础架构
*4
$4
HSET
$22
hash:article:by:100291
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100291
$8
labelIds
$11
[100,35,21]
*4
$4
HSET
$22
hash:article:by:100291
$6
digest
$261
基础功能元素
workqueue
         linux下的工作队列时一种将工作推后执行的方式，其可以被睡眠、调度，与内核线程表现基本一致，但又比内核线程使用简单，一般用来处理任务内容比较动态的...
*4
$4
HSET
$22
hash:article:by:100291
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100291
$7
content
$41
csdn/linux/1_0_1_6_1504264690.030737.html
*4
$4
HSET
$22
hash:article:by:100291
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100291
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100291
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100291
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100291
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100291
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100291
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100291
$10
createTime
$13
1440795644000
*4
$4
HSET
$22
hash:article:by:100291
$11
releaseTime
$13
1440795644000
*4
$4
HSET
$22
hash:article:by:100291
$10
updateTime
$13
1440795644000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100291
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100291
*3
$5
LPUSH
$15
list:article:id
$6
100291
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100291
*4
$4
HSET
$22
hash:article:by:100783
$2
id
$6
100783
*4
$4
HSET
$22
hash:article:by:100783
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100783
$9
articleId
$4
2437
*4
$4
HSET
$22
hash:article:by:100783
$5
title
$62
笨鸟先飞之Java--MySql中文数据乱码为哪般？？？
*4
$4
HSET
$22
hash:article:by:100783
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100783
$8
labelIds
$8
[510,18]
*4
$4
HSET
$22
hash:article:by:100783
$6
digest
$141
看问题要全面，在解决问题的过程中要学者全面分析和思考问题，不要犯”头痛医头脚痛医脚“的错误！！
*4
$4
HSET
$22
hash:article:by:100783
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100783
$7
content
$40
csdn/java/1_1_1_6_1504264738.898466.html
*4
$4
HSET
$22
hash:article:by:100783
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100783
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100783
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100783
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100783
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100783
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100783
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100783
$10
createTime
$13
1440702012000
*4
$4
HSET
$22
hash:article:by:100783
$11
releaseTime
$13
1440702012000
*4
$4
HSET
$22
hash:article:by:100783
$10
updateTime
$13
1440702012000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100783
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100783
*3
$5
LPUSH
$15
list:article:id
$6
100783
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100783
*4
$4
HSET
$22
hash:article:by:100209
$2
id
$6
100209
*4
$4
HSET
$22
hash:article:by:100209
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100209
$9
articleId
$4
2388
*4
$4
HSET
$22
hash:article:by:100209
$5
title
$50
Linux内核工程导论——内存管理（三）
*4
$4
HSET
$22
hash:article:by:100209
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100209
$8
labelIds
$8
[100,21]
*4
$4
HSET
$22
hash:article:by:100209
$6
digest
$158
用户端内核内存参数调整
/proc/sys/vm/ （需要根据内核版本调整）
交换相关
swap_token_timeout
 Thisfile contains valid hold tim...
*4
$4
HSET
$22
hash:article:by:100209
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100209
$7
content
$41
csdn/linux/1_0_1_2_1504264695.205697.html
*4
$4
HSET
$22
hash:article:by:100209
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100209
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100209
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100209
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100209
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100209
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100209
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100209
$10
createTime
$13
1440529253000
*4
$4
HSET
$22
hash:article:by:100209
$11
releaseTime
$13
1440529253000
*4
$4
HSET
$22
hash:article:by:100209
$10
updateTime
$13
1440529253000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100209
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100209
*3
$5
LPUSH
$15
list:article:id
$6
100209
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100209
*4
$4
HSET
$22
hash:article:by:100630
$2
id
$6
100630
*4
$4
HSET
$22
hash:article:by:100630
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100630
$9
articleId
$4
2377
*4
$4
HSET
$22
hash:article:by:100630
$5
title
$50
Linux内核工程导论——内存管理（二）
*4
$4
HSET
$22
hash:article:by:100630
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100630
$8
labelIds
$8
[35,100]
*4
$4
HSET
$22
hash:article:by:100630
$6
digest
$281
页面回收算法（PFRA）
请求调页机制，只要用户态进程继续执行，他们就能获得页框，然而，请求调页没有办法强制进程释放不再使用的页框。因此，迟早所有空闲内存将被分配给进程和高速缓存，Linux内核的页...
*4
$4
HSET
$22
hash:article:by:100630
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100630
$7
content
$41
csdn/linux/1_0_1_1_1504264682.933388.html
*4
$4
HSET
$22
hash:article:by:100630
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100630
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100630
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100630
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100630
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100630
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100630
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100630
$10
createTime
$13
1440529249000
*4
$4
HSET
$22
hash:article:by:100630
$11
releaseTime
$13
1440529249000
*4
$4
HSET
$22
hash:article:by:100630
$10
updateTime
$13
1440529249000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100630
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100630
*3
$5
LPUSH
$15
list:article:id
$6
100630
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100630
*4
$4
HSET
$22
hash:article:by:100283
$2
id
$6
100283
*4
$4
HSET
$22
hash:article:by:100283
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100283
$9
articleId
$4
2376
*4
$4
HSET
$22
hash:article:by:100283
$5
title
$50
Linux内核工程导论——内存管理（一）
*4
$4
HSET
$22
hash:article:by:100283
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100283
$8
labelIds
$8
[35,100]
*4
$4
HSET
$22
hash:article:by:100283
$6
digest
$259
Linux内存管理
概要
物理地址管理
很多小型操作系统，例如eCos，vxworks等嵌入式系统，程序中所采用的地址就是实际的物理地址。这里所说的物理地址是CPU所能见到的地址，至于这个地址如何映射...
*4
$4
HSET
$22
hash:article:by:100283
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100283
$7
content
$41
csdn/linux/1_0_1_0_1504264681.929859.html
*4
$4
HSET
$22
hash:article:by:100283
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100283
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100283
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100283
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100283
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100283
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100283
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100283
$10
createTime
$13
1440529243000
*4
$4
HSET
$22
hash:article:by:100283
$11
releaseTime
$13
1440529243000
*4
$4
HSET
$22
hash:article:by:100283
$10
updateTime
$13
1440529243000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100283
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100283
*3
$5
LPUSH
$15
list:article:id
$6
100283
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100283
*4
$4
HSET
$22
hash:article:by:100781
$2
id
$6
100781
*4
$4
HSET
$22
hash:article:by:100781
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100781
$9
articleId
$4
2441
*4
$4
HSET
$22
hash:article:by:100781
$5
title
$52
笨鸟先飞之Java---缠缠绵绵的注解和注释
*4
$4
HSET
$22
hash:article:by:100781
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100781
$8
labelIds
$8
[18,763]
*4
$4
HSET
$22
hash:article:by:100781
$6
digest
$202
在平时的编程中注释一直与我们为伴，但是在Java编程中我们会经常性的使用注解。一字之差，也不知是否会有“失之毫厘差以千里”之说？？一起来看：
*4
$4
HSET
$22
hash:article:by:100781
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100781
$7
content
$40
csdn/java/1_1_1_5_1504264740.836072.html
*4
$4
HSET
$22
hash:article:by:100781
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100781
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100781
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100781
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100781
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100781
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100781
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100781
$10
createTime
$13
1440439229000
*4
$4
HSET
$22
hash:article:by:100781
$11
releaseTime
$13
1440439229000
*4
$4
HSET
$22
hash:article:by:100781
$10
updateTime
$13
1440439229000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100781
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100781
*3
$5
LPUSH
$15
list:article:id
$6
100781
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100781
*4
$4
HSET
$22
hash:article:by:100300
$2
id
$6
100300
*4
$4
HSET
$22
hash:article:by:100300
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100300
$9
articleId
$4
2146
*4
$4
HSET
$22
hash:article:by:100300
$5
title
$47
Linux内核工程导论——数据结构：树
*4
$4
HSET
$22
hash:article:by:100300
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100300
$8
labelIds
$8
[100,35]
*4
$4
HSET
$22
hash:article:by:100300
$6
digest
$271
内核数据结构
链表
待补充
链表
待补充
双向链表
待补充
无锁链表
待补充
树
树作为一种很常用的数据结构，主要包括二叉搜索数（BST）、多路搜索树（B-树）、B树根据叶子节点树分为二叉树和多叉树。...
*4
$4
HSET
$22
hash:article:by:100300
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100300
$7
content
$41
csdn/linux/1_0_3_2_1504264471.319427.html
*4
$4
HSET
$22
hash:article:by:100300
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100300
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100300
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100300
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100300
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100300
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100300
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100300
$10
createTime
$13
1440334853000
*4
$4
HSET
$22
hash:article:by:100300
$11
releaseTime
$13
1440334853000
*4
$4
HSET
$22
hash:article:by:100300
$10
updateTime
$13
1440334853000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100300
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100300
*3
$5
LPUSH
$15
list:article:id
$6
100300
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100300
*4
$4
HSET
$22
hash:article:by:100490
$2
id
$6
100490
*4
$4
HSET
$22
hash:article:by:100490
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100490
$9
articleId
$4
2134
*4
$4
HSET
$22
hash:article:by:100490
$5
title
$35
Linux内核工程导论——前言
*4
$4
HSET
$22
hash:article:by:100490
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100490
$8
labelIds
$8
[100,35]
*4
$4
HSET
$22
hash:article:by:100490
$6
digest
$263
想要研究linux内核，使用linux内核，首先要知道linux内核能做到什么，提供了什么。我看过很多初学者一进入公司就开始使用linux内核开发内核模块，使用的无论是通信方式、内存接口还是设备接口仍...
*4
$4
HSET
$22
hash:article:by:100490
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100490
$7
content
$41
csdn/linux/1_0_3_0_1504264464.146568.html
*4
$4
HSET
$22
hash:article:by:100490
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100490
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100490
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100490
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100490
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100490
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100490
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100490
$10
createTime
$13
1440334827000
*4
$4
HSET
$22
hash:article:by:100490
$11
releaseTime
$13
1440334827000
*4
$4
HSET
$22
hash:article:by:100490
$10
updateTime
$13
1440334827000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100490
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100490
*3
$5
LPUSH
$15
list:article:id
$6
100490
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100490
*4
$4
HSET
$22
hash:article:by:100592
$2
id
$6
100592
*4
$4
HSET
$22
hash:article:by:100592
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100592
$9
articleId
$4
2098
*4
$4
HSET
$22
hash:article:by:100592
$5
title
$80
【Linux探索之旅】第二部分第五课：用户和权限，有权就任性
*4
$4
HSET
$22
hash:article:by:100592
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100592
$8
labelIds
$20
[21,550,119,161,107]
*4
$4
HSET
$22
hash:article:by:100592
$6
digest
$285
今天的标题也挺任性的啊，虽说小编是一个很本分的人（真的吗），起这种标题也是情非得已。

第二部分的前几课我们讲解了终端，命令行，文件和目录，文件操作。都算是Linux的重要基础。

这一课我们来讲一个...
*4
$4
HSET
$22
hash:article:by:100592
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100592
$7
content
$42
csdn/linux/1_1_1_16_1504264432.483683.html
*4
$4
HSET
$22
hash:article:by:100592
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100592
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100592
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100592
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100592
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100592
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100592
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100592
$10
createTime
$13
1440295227000
*4
$4
HSET
$22
hash:article:by:100592
$11
releaseTime
$13
1440295227000
*4
$4
HSET
$22
hash:article:by:100592
$10
updateTime
$13
1440295227000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100592
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100592
*3
$5
LPUSH
$15
list:article:id
$6
100592
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100592
*4
$4
HSET
$22
hash:article:by:100127
$2
id
$6
100127
*4
$4
HSET
$22
hash:article:by:100127
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100127
$9
articleId
$4
2319
*4
$4
HSET
$22
hash:article:by:100127
$5
title
$79
【Linux探索之旅】第一部分第六课：Linux如何安装在虚拟机中
*4
$4
HSET
$22
hash:article:by:100127
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100127
$8
labelIds
$19
[21,91,105,106,107]
*4
$4
HSET
$22
hash:article:by:100127
$6
digest
$267
虽然我们带大家一起在电脑的硬盘上安装了Ubuntu这个Linux发行版，不过有的朋友也许电脑硬盘资源有限（莫不是贡献给了各种大型游戏和xxx，你们懂的。反正小编没有好嘛 :P ），所以要他们再划分一定...
*4
$4
HSET
$22
hash:article:by:100127
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100127
$7
content
$41
csdn/linux/1_1_2_2_1504264631.070954.html
*4
$4
HSET
$22
hash:article:by:100127
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100127
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100127
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100127
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100127
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100127
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100127
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100127
$10
createTime
$13
1439924419000
*4
$4
HSET
$22
hash:article:by:100127
$11
releaseTime
$13
1439924419000
*4
$4
HSET
$22
hash:article:by:100127
$10
updateTime
$13
1439924419000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100127
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100127
*3
$5
LPUSH
$15
list:article:id
$6
100127
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100127
*4
$4
HSET
$22
hash:article:by:100482
$2
id
$6
100482
*4
$4
HSET
$22
hash:article:by:100482
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100482
$9
articleId
$4
2323
*4
$4
HSET
$22
hash:article:by:100482
$5
title
$82
【Linux探索之旅】第一部分第五课：Unity桌面，人生若只如初见
*4
$4
HSET
$22
hash:article:by:100482
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100482
$8
labelIds
$20
[21,119,105,457,107]
*4
$4
HSET
$22
hash:article:by:100482
$6
digest
$247
不容易啊，经过了前几课的学习，我们认识了Linux是什么，以及如何安装Linux系统（我们以Ubuntu这个Linux发行版为以后的演示系统），我们也在上一课终于把Ubuntu安装好了。
“很不错，掌...
*4
$4
HSET
$22
hash:article:by:100482
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100482
$7
content
$41
csdn/linux/1_1_2_3_1504264633.201825.html
*4
$4
HSET
$22
hash:article:by:100482
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100482
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100482
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100482
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100482
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100482
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100482
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100482
$10
createTime
$13
1439924415000
*4
$4
HSET
$22
hash:article:by:100482
$11
releaseTime
$13
1439924415000
*4
$4
HSET
$22
hash:article:by:100482
$10
updateTime
$13
1439924415000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100482
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100482
*3
$5
LPUSH
$15
list:article:id
$6
100482
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100482
*4
$4
HSET
$22
hash:article:by:100516
$2
id
$6
100516
*4
$4
HSET
$22
hash:article:by:100516
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100516
$9
articleId
$4
2100
*4
$4
HSET
$22
hash:article:by:100516
$5
title
$74
【Linux探索之旅】第二部分第四课：文件操纵，鼓掌之中
*4
$4
HSET
$22
hash:article:by:100516
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100516
$8
labelIds
$20
[21,119,107,160,161]
*4
$4
HSET
$22
hash:article:by:100516
$6
digest
$285
既然上一课我们学习了Linux中的文件组织方式，那么现在就该是玩弄，啊不，是操纵它们的时候了。

文件操作有哪些呢？一般就是显示文件内容啦，还有拷贝文件，移动文件，删除文件，等等。

这一课我们还会学...
*4
$4
HSET
$22
hash:article:by:100516
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100516
$7
content
$42
csdn/linux/1_1_1_17_1504264434.418051.html
*4
$4
HSET
$22
hash:article:by:100516
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100516
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100516
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100516
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100516
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100516
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100516
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100516
$10
createTime
$13
1439870411000
*4
$4
HSET
$22
hash:article:by:100516
$11
releaseTime
$13
1439870411000
*4
$4
HSET
$22
hash:article:by:100516
$10
updateTime
$13
1439870411000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100516
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100516
*3
$5
LPUSH
$15
list:article:id
$6
100516
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100516
*4
$4
HSET
$22
hash:article:by:100390
$2
id
$6
100390
*4
$4
HSET
$22
hash:article:by:100390
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100390
$9
articleId
$4
2099
*4
$4
HSET
$22
hash:article:by:100390
$5
title
$86
【Linux探索之旅】第二部分第三课：文件和目录，组织不会亏待你
*4
$4
HSET
$22
hash:article:by:100390
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100390
$8
labelIds
$20
[21,119,107,160,161]
*4
$4
HSET
$22
hash:article:by:100390
$6
digest
$269
上一次课我们讲了命令行，这将成为伴随我们接下来整个Linux课程的一个重要部分。

大宝啊明天见，命令行啊天天见~

今天的标题里的那句“组织不会亏待你”，不是说Linux社群是个非*法组织，不*良帮...
*4
$4
HSET
$22
hash:article:by:100390
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100390
$7
content
$41
csdn/linux/1_1_1_18_1504264433.66917.html
*4
$4
HSET
$22
hash:article:by:100390
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100390
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100390
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100390
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100390
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100390
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100390
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100390
$10
createTime
$13
1439866851000
*4
$4
HSET
$22
hash:article:by:100390
$11
releaseTime
$13
1439866851000
*4
$4
HSET
$22
hash:article:by:100390
$10
updateTime
$13
1439866851000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100390
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100390
*3
$5
LPUSH
$15
list:article:id
$6
100390
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100390
*4
$4
HSET
$22
hash:article:by:100376
$2
id
$6
100376
*4
$4
HSET
$22
hash:article:by:100376
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100376
$9
articleId
$4
2082
*4
$4
HSET
$22
hash:article:by:100376
$5
title
$77
【Linux探索之旅】第二部分第二课：命令行，世界尽在掌握
*4
$4
HSET
$22
hash:article:by:100376
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100376
$8
labelIds
$20
[362,21,160,107,161]
*4
$4
HSET
$22
hash:article:by:100376
$6
digest
$293
今天的标题是不是有点霸气侧漏呢？

读者：“小编，你为什么每次都要起这么非主流的标题呢？不能愉快地玩耍么？”
小编：“那我问你，老子他为什么要写《道德经》咧？”
读者：“为什么咧？”
小编：“因为老子...
*4
$4
HSET
$22
hash:article:by:100376
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100376
$7
content
$42
csdn/linux/1_1_1_19_1504264420.025231.html
*4
$4
HSET
$22
hash:article:by:100376
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100376
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100376
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100376
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100376
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100376
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100376
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100376
$10
createTime
$13
1439859648000
*4
$4
HSET
$22
hash:article:by:100376
$11
releaseTime
$13
1439859648000
*4
$4
HSET
$22
hash:article:by:100376
$10
updateTime
$13
1439859648000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100376
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100376
*3
$5
LPUSH
$15
list:article:id
$6
100376
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100376
*4
$4
HSET
$22
hash:article:by:100583
$2
id
$6
100583
*4
$4
HSET
$22
hash:article:by:100583
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100583
$9
articleId
$4
2161
*4
$4
HSET
$22
hash:article:by:100583
$5
title
$35
把握linux内核设计思想系列
*4
$4
HSET
$22
hash:article:by:100583
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100583
$8
labelIds
$17
[159,119,538,539]
*4
$4
HSET
$22
hash:article:by:100583
$6
digest
$235
【版权声明：尊重原创，转载请保留出处：blog.csdn.net/shallnet，文章仅供学习交流，请勿用于商业用途】
把握linux内核设计思想（一）：系统调用
把握linux内核设计思想（二）：...
*4
$4
HSET
$22
hash:article:by:100583
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100583
$7
content
$41
csdn/linux/1_2_1_0_1504264485.098723.html
*4
$4
HSET
$22
hash:article:by:100583
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100583
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100583
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100583
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100583
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100583
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100583
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100583
$10
createTime
$13
1439848815000
*4
$4
HSET
$22
hash:article:by:100583
$11
releaseTime
$13
1439848815000
*4
$4
HSET
$22
hash:article:by:100583
$10
updateTime
$13
1439848815000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100583
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100583
*3
$5
LPUSH
$15
list:article:id
$6
100583
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100583
*4
$4
HSET
$22
hash:article:by:100603
$2
id
$6
100603
*4
$4
HSET
$22
hash:article:by:100603
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100603
$9
articleId
$4
2170
*4
$4
HSET
$22
hash:article:by:100603
$5
title
$77
把握linux内核设计思想（十三）：内存管理之进程地址空间
*4
$4
HSET
$22
hash:article:by:100603
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100603
$8
labelIds
$17
[159,120,559,560]
*4
$4
HSET
$22
hash:article:by:100603
$6
digest
$234
【版权声明：尊重原创，转载请保留出处：blog.csdn.net/shallnet，文章仅供学习交流，请勿用于商业用途】

        进程地址空间由进程可寻址的虚拟内存组成，Linux 的虚拟地...
*4
$4
HSET
$22
hash:article:by:100603
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100603
$7
content
$41
csdn/linux/1_2_1_1_1504264493.088937.html
*4
$4
HSET
$22
hash:article:by:100603
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100603
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100603
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100603
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100603
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100603
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100603
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100603
$10
createTime
$13
1439719252000
*4
$4
HSET
$22
hash:article:by:100603
$11
releaseTime
$13
1439719252000
*4
$4
HSET
$22
hash:article:by:100603
$10
updateTime
$13
1439719252000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100603
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100603
*3
$5
LPUSH
$15
list:article:id
$6
100603
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100603
*4
$4
HSET
$22
hash:article:by:100678
$2
id
$6
100678
*4
$4
HSET
$22
hash:article:by:100678
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100678
$9
articleId
$4
2171
*4
$4
HSET
$22
hash:article:by:100678
$5
title
$72
把握linux内核设计思想（十二）：内存管理之slab分配器
*4
$4
HSET
$22
hash:article:by:100678
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100678
$8
labelIds
$13
[159,120,640]
*4
$4
HSET
$22
hash:article:by:100678
$6
digest
$246
【版权声明：尊重原创，转载请保留出处：blog.csdn.net/shallnet，文章仅供学习交流，请勿用于商业用途】

       
上一节最后说到对于小内存区的请求，如果采用伙伴系统来进行分配...
*4
$4
HSET
$22
hash:article:by:100678
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100678
$7
content
$41
csdn/linux/1_2_1_2_1504264494.061319.html
*4
$4
HSET
$22
hash:article:by:100678
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100678
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100678
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100678
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100678
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100678
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100678
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100678
$10
createTime
$13
1439650809000
*4
$4
HSET
$22
hash:article:by:100678
$11
releaseTime
$13
1439650809000
*4
$4
HSET
$22
hash:article:by:100678
$10
updateTime
$13
1439650809000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100678
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100678
*3
$5
LPUSH
$15
list:article:id
$6
100678
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100678
*4
$4
HSET
$22
hash:article:by:100585
$2
id
$6
100585
*4
$4
HSET
$22
hash:article:by:100585
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100585
$9
articleId
$4
2172
*4
$4
HSET
$22
hash:article:by:100585
$5
title
$80
把握linux内核设计思想（十一）：内存管理之页的分配与回收
*4
$4
HSET
$22
hash:article:by:100585
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100585
$8
labelIds
$21
[159,120,543,544,545]
*4
$4
HSET
$22
hash:article:by:100585
$6
digest
$239
【版权声明：尊重原创，转载请保留出处：blog.csdn.net/shallnet，文章仅供学习交流，请勿用于商业用途】 

        内存管理单元（MMU）负责将管理内存，在把虚拟地址转换为物...
*4
$4
HSET
$22
hash:article:by:100585
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100585
$7
content
$41
csdn/linux/1_2_1_3_1504264495.103247.html
*4
$4
HSET
$22
hash:article:by:100585
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100585
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100585
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100585
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100585
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100585
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100585
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100585
$10
createTime
$13
1439647251000
*4
$4
HSET
$22
hash:article:by:100585
$11
releaseTime
$13
1439647251000
*4
$4
HSET
$22
hash:article:by:100585
$10
updateTime
$13
1439647251000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100585
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100585
*3
$5
LPUSH
$15
list:article:id
$6
100585
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100585
*4
$4
HSET
$22
hash:article:by:100581
$2
id
$6
100581
*4
$4
HSET
$22
hash:article:by:100581
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100581
$9
articleId
$4
2173
*4
$4
HSET
$22
hash:article:by:100581
$5
title
$53
把握linux内核设计思想（十）：内核同步
*4
$4
HSET
$22
hash:article:by:100581
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100581
$8
labelIds
$21
[159,534,535,536,537]
*4
$4
HSET
$22
hash:article:by:100581
$6
digest
$238
【版权声明：尊重原创，转载请保留出处：blog.csdn.net/shallnet，文章仅供学习交流，请勿用于商业用途】
        如同linux应用一样，内核的共享资源也要防止并发，因为如果多...
*4
$4
HSET
$22
hash:article:by:100581
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100581
$7
content
$40
csdn/linux/1_2_1_4_1504264496.19872.html
*4
$4
HSET
$22
hash:article:by:100581
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100581
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100581
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100581
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100581
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100581
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100581
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100581
$10
createTime
$13
1438376436000
*4
$4
HSET
$22
hash:article:by:100581
$11
releaseTime
$13
1438376436000
*4
$4
HSET
$22
hash:article:by:100581
$10
updateTime
$13
1438376436000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100581
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100581
*3
$5
LPUSH
$15
list:article:id
$6
100581
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100581
*4
$4
HSET
$22
hash:article:by:100642
$2
id
$6
100642
*4
$4
HSET
$22
hash:article:by:100642
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100642
$9
articleId
$4
2162
*4
$4
HSET
$22
hash:article:by:100642
$5
title
$53
把握linux内核设计思想（九）：进程调度
*4
$4
HSET
$22
hash:article:by:100642
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100642
$8
labelIds
$21
[159,266,595,434,596]
*4
$4
HSET
$22
hash:article:by:100642
$6
digest
$236
【版权声明：尊重原创，转载请保留出处：blog.csdn.net/shallnet，文章仅供学习交流，请勿用于商业用途】

       
linux为多任务系统，正常情况下都存在成百上千个任务。由于...
*4
$4
HSET
$22
hash:article:by:100642
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100642
$7
content
$41
csdn/linux/1_2_1_5_1504264485.270394.html
*4
$4
HSET
$22
hash:article:by:100642
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100642
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100642
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100642
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100642
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100642
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100642
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100642
$10
createTime
$13
1438376418000
*4
$4
HSET
$22
hash:article:by:100642
$11
releaseTime
$13
1438376418000
*4
$4
HSET
$22
hash:article:by:100642
$10
updateTime
$13
1438376418000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100642
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100642
*3
$5
LPUSH
$15
list:article:id
$6
100642
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100642
*4
$4
HSET
$22
hash:article:by:100579
$2
id
$6
100579
*4
$4
HSET
$22
hash:article:by:100579
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100579
$9
articleId
$4
2316
*4
$4
HSET
$22
hash:article:by:100579
$5
title
$76
【Linux探索之旅】第二部分第一课：终端Terminal，好戏上场
*4
$4
HSET
$22
hash:article:by:100579
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100579
$8
labelIds
$20
[21,119,107,161,198]
*4
$4
HSET
$22
hash:article:by:100579
$6
digest
$51
领略终端的奇妙世界，命令行就在眼前
*4
$4
HSET
$22
hash:article:by:100579
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100579
$7
content
$41
csdn/linux/1_1_2_0_1504264628.945806.html
*4
$4
HSET
$22
hash:article:by:100579
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100579
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100579
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100579
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100579
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100579
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100579
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100579
$10
createTime
$13
1438300835000
*4
$4
HSET
$22
hash:article:by:100579
$11
releaseTime
$13
1438300835000
*4
$4
HSET
$22
hash:article:by:100579
$10
updateTime
$13
1438300835000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100579
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100579
*3
$5
LPUSH
$15
list:article:id
$6
100579
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100579
*4
$4
HSET
$22
hash:article:by:100485
$2
id
$6
100485
*4
$4
HSET
$22
hash:article:by:100485
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100485
$9
articleId
$4
2318
*4
$4
HSET
$22
hash:article:by:100485
$5
title
$44
【Linux探索之旅】第一部分测试题
*4
$4
HSET
$22
hash:article:by:100485
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100485
$8
labelIds
$20
[21,119,173,107,161]
*4
$4
HSET
$22
hash:article:by:100485
$6
digest
$78
第一部分的测试题，忘了知识点请回去之前的课程复习噢。
*4
$4
HSET
$22
hash:article:by:100485
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100485
$7
content
$41
csdn/linux/1_1_2_1_1504264629.950918.html
*4
$4
HSET
$22
hash:article:by:100485
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100485
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100485
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100485
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100485
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100485
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100485
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100485
$10
createTime
$13
1438300824000
*4
$4
HSET
$22
hash:article:by:100485
$11
releaseTime
$13
1438300824000
*4
$4
HSET
$22
hash:article:by:100485
$10
updateTime
$13
1438300824000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100485
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100485
*3
$5
LPUSH
$15
list:article:id
$6
100485
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100485
*4
$4
HSET
$22
hash:article:by:100560
$2
id
$6
100560
*4
$4
HSET
$22
hash:article:by:100560
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100560
$9
articleId
$4
2167
*4
$4
HSET
$22
hash:article:by:100560
$5
title
$59
把握linux内核设计思想（八）：进程管理分析
*4
$4
HSET
$22
hash:article:by:100560
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100560
$8
labelIds
$14
[159,57,32,15]
*4
$4
HSET
$22
hash:article:by:100560
$6
digest
$237
【版权声明：尊重原创，转载请保留出处：blog.csdn.net/shallnet，文章仅供学习交流，请勿用于商业用途】
        进程其实就是程序的执行时的实例，是处于执行期的程序。在linu...
*4
$4
HSET
$22
hash:article:by:100560
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100560
$7
content
$41
csdn/linux/1_2_1_6_1504264490.017262.html
*4
$4
HSET
$22
hash:article:by:100560
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100560
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100560
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100560
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100560
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100560
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100560
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100560
$10
createTime
$13
1438196434000
*4
$4
HSET
$22
hash:article:by:100560
$11
releaseTime
$13
1438196434000
*4
$4
HSET
$22
hash:article:by:100560
$10
updateTime
$13
1438196434000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100560
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100560
*3
$5
LPUSH
$15
list:article:id
$6
100560
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100560
*4
$4
HSET
$22
hash:article:by:100434
$2
id
$6
100434
*4
$4
HSET
$22
hash:article:by:100434
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100434
$9
articleId
$4
2168
*4
$4
HSET
$22
hash:article:by:100434
$5
title
$71
把握linux内核设计思想（七）：内核定时器和定时执行
*4
$4
HSET
$22
hash:article:by:100434
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100434
$8
labelIds
$13
[159,415,379]
*4
$4
HSET
$22
hash:article:by:100434
$6
digest
$245
【版权声明：尊重原创，转载请保留出处：blog.csdn.net/shallnet，文章仅供学习交流，请勿用于商业用途】
        前面章节说到了把工作推后到除现在以外的时间执行的机制是下半部机...
*4
$4
HSET
$22
hash:article:by:100434
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100434
$7
content
$41
csdn/linux/1_2_1_7_1504264490.999532.html
*4
$4
HSET
$22
hash:article:by:100434
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100434
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100434
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100434
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100434
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100434
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100434
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100434
$10
createTime
$13
1438196418000
*4
$4
HSET
$22
hash:article:by:100434
$11
releaseTime
$13
1438196418000
*4
$4
HSET
$22
hash:article:by:100434
$10
updateTime
$13
1438196418000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100434
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100434
*3
$5
LPUSH
$15
list:article:id
$6
100434
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100434
*4
$4
HSET
$22
hash:article:by:100445
$2
id
$6
100445
*4
$4
HSET
$22
hash:article:by:100445
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100445
$9
articleId
$4
2169
*4
$4
HSET
$22
hash:article:by:100445
$5
title
$59
把握linux内核设计思想（六）：内核时钟中断
*4
$4
HSET
$22
hash:article:by:100445
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100445
$8
labelIds
$17
[159,423,424,415]
*4
$4
HSET
$22
hash:article:by:100445
$6
digest
$245
【版权声明：尊重原创，转载请保留出处：blog.csdn.net/shallnet，文章仅供学习交流，请勿用于商业用途】
        内核中很多函数是基于时间驱动的，其中有些函数需要周期或定期执行...
*4
$4
HSET
$22
hash:article:by:100445
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100445
$7
content
$41
csdn/linux/1_2_1_8_1504264492.120319.html
*4
$4
HSET
$22
hash:article:by:100445
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100445
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100445
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100445
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100445
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100445
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100445
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100445
$10
createTime
$13
1438196403000
*4
$4
HSET
$22
hash:article:by:100445
$11
releaseTime
$13
1438196403000
*4
$4
HSET
$22
hash:article:by:100445
$10
updateTime
$13
1438196403000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100445
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100445
*3
$5
LPUSH
$15
list:article:id
$6
100445
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100445
*4
$4
HSET
$22
hash:article:by:100653
$2
id
$6
100653
*4
$4
HSET
$22
hash:article:by:100653
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100653
$9
articleId
$4
2163
*4
$4
HSET
$22
hash:article:by:100653
$5
title
$95
把握linux内核设计思想（五）：下半部机制之工作队列及几种机制的选择
*4
$4
HSET
$22
hash:article:by:100653
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100653
$8
labelIds
$17
[159,381,606,607]
*4
$4
HSET
$22
hash:article:by:100653
$6
digest
$239
【版权声明：尊重原创，转载请保留出处：blog.csdn.net/shallnet，文章仅供学习交流，请勿用于商业用途】
        工作队列是下半部的另外一种将工作推后执行形式。和软中断、tas...
*4
$4
HSET
$22
hash:article:by:100653
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100653
$7
content
$41
csdn/linux/1_2_1_9_1504264485.889583.html
*4
$4
HSET
$22
hash:article:by:100653
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100653
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100653
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100653
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100653
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100653
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100653
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100653
$10
createTime
$13
1438124400000
*4
$4
HSET
$22
hash:article:by:100653
$11
releaseTime
$13
1438124400000
*4
$4
HSET
$22
hash:article:by:100653
$10
updateTime
$13
1438124400000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100653
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100653
*3
$5
LPUSH
$15
list:article:id
$6
100653
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100653
*4
$4
HSET
$22
hash:article:by:100397
$2
id
$6
100397
*4
$4
HSET
$22
hash:article:by:100397
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100397
$9
articleId
$4
2166
*4
$4
HSET
$22
hash:article:by:100397
$5
title
$66
把握linux内核设计思想（四）：下半部机制之tasklet
*4
$4
HSET
$22
hash:article:by:100397
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100397
$8
labelIds
$17
[159,381,379,388]
*4
$4
HSET
$22
hash:article:by:100397
$6
digest
$218
【版权声明：尊重原创，转载请保留出处：blog.csdn.net/shallnet，文章仅供学习交流，请勿用于商业用途】
       
tasklet是利用软中断实现的一种下半部机制。tasklet...
*4
$4
HSET
$22
hash:article:by:100397
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100397
$7
content
$42
csdn/linux/1_2_1_10_1504264488.898274.html
*4
$4
HSET
$22
hash:article:by:100397
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100397
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100397
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100397
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100397
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100397
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100397
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100397
$10
createTime
$13
1438120846000
*4
$4
HSET
$22
hash:article:by:100397
$11
releaseTime
$13
1438120846000
*4
$4
HSET
$22
hash:article:by:100397
$10
updateTime
$13
1438120846000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100397
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100397
*3
$5
LPUSH
$15
list:article:id
$6
100397
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100397
*4
$4
HSET
$22
hash:article:by:100388
$2
id
$6
100388
*4
$4
HSET
$22
hash:article:by:100388
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100388
$9
articleId
$4
2164
*4
$4
HSET
$22
hash:article:by:100388
$5
title
$68
把握linux内核设计思想（三）：下半部机制之软中断
*4
$4
HSET
$22
hash:article:by:100388
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100388
$8
labelIds
$17
[159,379,380,381]
*4
$4
HSET
$22
hash:article:by:100388
$6
digest
$245
【版权声明：尊重原创，转载请保留出处：blog.csdn.net/shallnet，文章仅供学习交流，请勿用于商业用途】
        中断处理程序以异步方式执行，其会打断其他重要代码，其运行时该中...
*4
$4
HSET
$22
hash:article:by:100388
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100388
$7
content
$41
csdn/linux/1_2_1_11_1504264486.91509.html
*4
$4
HSET
$22
hash:article:by:100388
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100388
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100388
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100388
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100388
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100388
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100388
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100388
$10
createTime
$13
1438120835000
*4
$4
HSET
$22
hash:article:by:100388
$11
releaseTime
$13
1438120835000
*4
$4
HSET
$22
hash:article:by:100388
$10
updateTime
$13
1438120835000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100388
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100388
*3
$5
LPUSH
$15
list:article:id
$6
100388
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100388
*4
$4
HSET
$22
hash:article:by:100404
$2
id
$6
100404
*4
$4
HSET
$22
hash:article:by:100404
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100404
$9
articleId
$4
2165
*4
$4
HSET
$22
hash:article:by:100404
$5
title
$65
把握linux内核设计思想（二）：硬中断及中断处理
*4
$4
HSET
$22
hash:article:by:100404
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100404
$8
labelIds
$21
[159,116,393,394,395]
*4
$4
HSET
$22
hash:article:by:100404
$6
digest
$295
操作系统负责管理硬件设备，为了使系统和硬件设备的协同工作不降低机器性能，系统和硬件的通信使用中断的机制，也就是让硬件在需要的时候向内核发出信号，这样使得内核不用去轮询设备而导致做很多无用功。
    ...
*4
$4
HSET
$22
hash:article:by:100404
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100404
$7
content
$41
csdn/linux/1_2_1_12_1504264487.92553.html
*4
$4
HSET
$22
hash:article:by:100404
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100404
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100404
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100404
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100404
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100404
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100404
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100404
$10
createTime
$13
1438120825000
*4
$4
HSET
$22
hash:article:by:100404
$11
releaseTime
$13
1438120825000
*4
$4
HSET
$22
hash:article:by:100404
$10
updateTime
$13
1438120825000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100404
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100404
*3
$5
LPUSH
$15
list:article:id
$6
100404
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100404
*4
$4
HSET
$22
hash:article:by:100604
$2
id
$6
100604
*4
$4
HSET
$22
hash:article:by:100604
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100604
$9
articleId
$4
2174
*4
$4
HSET
$22
hash:article:by:100604
$5
title
$53
把握linux内核设计思想（一）：系统调用
*4
$4
HSET
$22
hash:article:by:100604
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100604
$8
labelIds
$21
[159,273,561,562,563]
*4
$4
HSET
$22
hash:article:by:100604
$6
digest
$248
【版权声明：尊重原创，转载请保留出处：blog.csdn.net/shallnet，文章仅供学习交流，请勿用于商业用途】
        一般情况下进程不能访问内核所占内存空间也不能调用内核函数。为了...
*4
$4
HSET
$22
hash:article:by:100604
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100604
$7
content
$42
csdn/linux/1_2_1_13_1504264497.211542.html
*4
$4
HSET
$22
hash:article:by:100604
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100604
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100604
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100604
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100604
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100604
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100604
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100604
$10
createTime
$13
1438120807000
*4
$4
HSET
$22
hash:article:by:100604
$11
releaseTime
$13
1438120807000
*4
$4
HSET
$22
hash:article:by:100604
$10
updateTime
$13
1438120807000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100604
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100604
*3
$5
LPUSH
$15
list:article:id
$6
100604
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100604
*4
$4
HSET
$22
hash:article:by:100410
$2
id
$6
100410
*4
$4
HSET
$22
hash:article:by:100410
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100410
$9
articleId
$4
2327
*4
$4
HSET
$22
hash:article:by:100410
$5
title
$83
【Linux探索之旅】第一部分第四课：磁盘分区，并完成Ubuntu安装
*4
$4
HSET
$22
hash:article:by:100410
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100410
$8
labelIds
$20
[21,161,105,119,107]
*4
$4
HSET
$22
hash:article:by:100410
$6
digest
$289
上一课我们正式开始安装Ubuntu了，但是到了分区的那一步，小编却戛然而止。这是什么情况呢？
请读者们千万不要扁我；如果真的要扁，那就请“海扁”，让我一次挨（爱）个够（想到了庾澄庆的《让我一次爱个够》...
*4
$4
HSET
$22
hash:article:by:100410
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100410
$7
content
$40
csdn/linux/1_1_2_4_1504264635.29354.html
*4
$4
HSET
$22
hash:article:by:100410
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100410
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100410
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100410
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100410
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100410
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100410
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100410
$10
createTime
$13
1437879630000
*4
$4
HSET
$22
hash:article:by:100410
$11
releaseTime
$13
1437879630000
*4
$4
HSET
$22
hash:article:by:100410
$10
updateTime
$13
1437879630000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100410
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100410
*3
$5
LPUSH
$15
list:article:id
$6
100410
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100410
*4
$4
HSET
$22
hash:article:by:100364
$2
id
$6
100364
*4
$4
HSET
$22
hash:article:by:100364
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100364
$9
articleId
$4
2328
*4
$4
HSET
$22
hash:article:by:100364
$5
title
$68
【Linux探索之旅】第一部分第三课：测试并安装Ubuntu
*4
$4
HSET
$22
hash:article:by:100364
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100364
$8
labelIds
$20
[21,119,107,105,161]
*4
$4
HSET
$22
hash:article:by:100364
$6
digest
$65
在正式开始Linux之旅前，我们要把操作系统安装好
*4
$4
HSET
$22
hash:article:by:100364
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100364
$7
content
$41
csdn/linux/1_1_2_5_1504264636.339172.html
*4
$4
HSET
$22
hash:article:by:100364
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100364
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100364
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100364
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100364
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100364
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100364
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100364
$10
createTime
$13
1437577214000
*4
$4
HSET
$22
hash:article:by:100364
$11
releaseTime
$13
1437577214000
*4
$4
HSET
$22
hash:article:by:100364
$10
updateTime
$13
1437577214000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100364
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100364
*3
$5
LPUSH
$15
list:article:id
$6
100364
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100364
*4
$4
HSET
$22
hash:article:by:100284
$2
id
$6
100284
*4
$4
HSET
$22
hash:article:by:100284
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100284
$9
articleId
$4
2295
*4
$4
HSET
$22
hash:article:by:100284
$5
title
$32
Android 建造者(Builder)模式
*4
$4
HSET
$22
hash:article:by:100284
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100284
$8
labelIds
$9
[287,288]
*4
$4
HSET
$22
hash:article:by:100284
$6
digest
$138
关于 Builder 模式 详述：http://blog.csdn.net/jjwwmlp456/article/details/39890699


先来张图
  
看到 Android  中 使用...
*4
$4
HSET
$22
hash:article:by:100284
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100284
$7
content
$39
csdn/java/1_0_2_3_1504264610.12015.html
*4
$4
HSET
$22
hash:article:by:100284
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100284
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100284
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100284
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100284
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100284
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100284
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100284
$10
createTime
$13
1435917628000
*4
$4
HSET
$22
hash:article:by:100284
$11
releaseTime
$13
1435917628000
*4
$4
HSET
$22
hash:article:by:100284
$10
updateTime
$13
1435917628000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100284
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100284
*3
$5
LPUSH
$15
list:article:id
$6
100284
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100284
*4
$4
HSET
$22
hash:article:by:100641
$2
id
$6
100641
*4
$4
HSET
$22
hash:article:by:100641
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100641
$9
articleId
$4
2322
*4
$4
HSET
$22
hash:article:by:100641
$5
title
$73
【Linux探索之旅】第一部分第二课：下载Linux，免费的噢
*4
$4
HSET
$22
hash:article:by:100641
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100641
$8
labelIds
$19
[21,119,107,62,594]
*4
$4
HSET
$22
hash:article:by:100641
$6
digest
$48
1. Linux的多面性
2. 下载Ubuntu，烧写之
*4
$4
HSET
$22
hash:article:by:100641
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100641
$7
content
$41
csdn/linux/1_1_2_6_1504264632.114533.html
*4
$4
HSET
$22
hash:article:by:100641
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100641
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100641
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100641
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100641
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100641
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100641
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100641
$10
createTime
$13
1434726059000
*4
$4
HSET
$22
hash:article:by:100641
$11
releaseTime
$13
1434726059000
*4
$4
HSET
$22
hash:article:by:100641
$10
updateTime
$13
1434726059000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100641
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100641
*3
$5
LPUSH
$15
list:article:id
$6
100641
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100641
*4
$4
HSET
$22
hash:article:by:100666
$2
id
$6
100666
*4
$4
HSET
$22
hash:article:by:100666
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100666
$9
articleId
$4
2324
*4
$4
HSET
$22
hash:article:by:100666
$5
title
$77
【Linux探索之旅】开宗明义+第一部分第一课：什么是Linux？
*4
$4
HSET
$22
hash:article:by:100666
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100666
$8
labelIds
$19
[21,119,107,62,594]
*4
$4
HSET
$22
hash:article:by:100666
$6
digest
$102
1、什么是操作系统？
2、天地霸气，爷们落地：Linux诞生
3、不同的Linux发行版
*4
$4
HSET
$22
hash:article:by:100666
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100666
$7
content
$39
csdn/linux/1_1_2_7_1504264634.2024.html
*4
$4
HSET
$22
hash:article:by:100666
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100666
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100666
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100666
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100666
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100666
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100666
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100666
$10
createTime
$13
1434585657000
*4
$4
HSET
$22
hash:article:by:100666
$11
releaseTime
$13
1434585657000
*4
$4
HSET
$22
hash:article:by:100666
$10
updateTime
$13
1434585657000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100666
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100666
*3
$5
LPUSH
$15
list:article:id
$6
100666
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100666
*4
$4
HSET
$22
hash:article:by:100759
$2
id
$6
100759
*4
$4
HSET
$22
hash:article:by:100759
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100759
$9
articleId
$4
2678
*4
$4
HSET
$22
hash:article:by:100759
$5
title
$37
java架构解密——深入再造AOP
*4
$4
HSET
$22
hash:article:by:100759
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100759
$8
labelIds
$21
[740,343,146,741,450]
*4
$4
HSET
$22
hash:article:by:100759
$6
digest
$150
随着AOP研究的深入，我们发现，核心概念变得极其重要，这些概念就是一幅图，指引我们在优化之路上越走越远！
*4
$4
HSET
$22
hash:article:by:100759
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100759
$7
content
$40
csdn/java/1_0_1_1_1504265274.754792.html
*4
$4
HSET
$22
hash:article:by:100759
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100759
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100759
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100759
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100759
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100759
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100759
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100759
$10
createTime
$13
1433080808000
*4
$4
HSET
$22
hash:article:by:100759
$11
releaseTime
$13
1433080808000
*4
$4
HSET
$22
hash:article:by:100759
$10
updateTime
$13
1433080808000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100759
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100759
*3
$5
LPUSH
$15
list:article:id
$6
100759
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100759
*4
$4
HSET
$22
hash:article:by:100770
$2
id
$6
100770
*4
$4
HSET
$22
hash:article:by:100770
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100770
$9
articleId
$4
2677
*4
$4
HSET
$22
hash:article:by:100770
$5
title
$46
java架构解密——AOP之动态代理实现
*4
$4
HSET
$22
hash:article:by:100770
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100770
$8
labelIds
$20
[343,450,59,102,116]
*4
$4
HSET
$22
hash:article:by:100770
$6
digest
$131
深入spring aop 的核心，看看这个神秘的东西是怎么样的一幅面孔，看他是如何由简入难，化难为简！
*4
$4
HSET
$22
hash:article:by:100770
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100770
$7
content
$38
csdn/java/1_0_1_2_1504265271.8805.html
*4
$4
HSET
$22
hash:article:by:100770
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100770
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100770
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100770
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100770
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100770
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100770
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100770
$10
createTime
$13
1433073634000
*4
$4
HSET
$22
hash:article:by:100770
$11
releaseTime
$13
1433073634000
*4
$4
HSET
$22
hash:article:by:100770
$10
updateTime
$13
1433073634000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100770
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100770
*3
$5
LPUSH
$15
list:article:id
$6
100770
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100770
*4
$4
HSET
$22
hash:article:by:100758
$2
id
$6
100758
*4
$4
HSET
$22
hash:article:by:100758
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100758
$9
articleId
$4
2439
*4
$4
HSET
$22
hash:article:by:100758
$5
title
$75
严重：StandardServer.await:create[localhost 8005]:java.net.BindException
*4
$4
HSET
$22
hash:article:by:100758
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100758
$8
labelIds
$16
[739,123,239,23]
*4
$4
HSET
$22
hash:article:by:100758
$6
digest
$254
在使用tomcat服务器运行程序时，我们可能会遇到这样的问题：
 
       由上面的信息可以发现，该问题是由于8005端口号已经被占用，所以我们需要对这样的端口号进行设置，因而找到tomca...
*4
$4
HSET
$22
hash:article:by:100758
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100758
$7
content
$40
csdn/java/1_1_1_7_1504264739.807179.html
*4
$4
HSET
$22
hash:article:by:100758
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100758
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100758
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100758
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100758
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100758
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100758
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100758
$10
createTime
$13
1430510407000
*4
$4
HSET
$22
hash:article:by:100758
$11
releaseTime
$13
1430510407000
*4
$4
HSET
$22
hash:article:by:100758
$10
updateTime
$13
1430510407000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100758
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100758
*3
$5
LPUSH
$15
list:article:id
$6
100758
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100758
*4
$4
HSET
$22
hash:article:by:100160
$2
id
$6
100160
*4
$4
HSET
$22
hash:article:by:100160
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100160
$9
articleId
$4
2362
*4
$4
HSET
$22
hash:article:by:100160
$5
title
$67
［授权发表］如何快速定位 Linux Panic 出错的代码行
*4
$4
HSET
$22
hash:article:by:100160
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100160
$8
labelIds
$12
[21,144,145]
*4
$4
HSET
$22
hash:article:by:100160
$6
digest
$238
内核调试中最常见的一个问题是：内核 Panic 后，如何快速定位到出错的代码行？就是这样一个常见的问题，面试过的大部分同学都未能很好地回答，这里希望能够做很彻底地解答。
*4
$4
HSET
$22
hash:article:by:100160
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100160
$7
content
$40
csdn/linux/1_0_1_1_1504264663.11105.html
*4
$4
HSET
$22
hash:article:by:100160
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100160
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100160
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100160
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100160
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100160
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100160
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100160
$10
createTime
$13
1430204425000
*4
$4
HSET
$22
hash:article:by:100160
$11
releaseTime
$13
1430204425000
*4
$4
HSET
$22
hash:article:by:100160
$10
updateTime
$13
1430204425000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100160
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100160
*3
$5
LPUSH
$15
list:article:id
$6
100160
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100160
*4
$4
HSET
$22
hash:article:by:100197
$2
id
$6
100197
*4
$4
HSET
$22
hash:article:by:100197
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100197
$9
articleId
$4
2358
*4
$4
HSET
$22
hash:article:by:100197
$5
title
$46
［授权发表］用 kGDB 调试 Linux 内核
*4
$4
HSET
$22
hash:article:by:100197
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100197
$8
labelIds
$12
[21,177,145]
*4
$4
HSET
$22
hash:article:by:100197
$6
digest
$199
本文记录了用 kGDB 调试 Linux 内核的全过程，都是在前人工作基础上的一些总结。以下操作都是基于特定板子来进行，但是大部分都能应用于其他平台。
*4
$4
HSET
$22
hash:article:by:100197
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100197
$7
content
$41
csdn/linux/1_0_1_0_1504264661.044641.html
*4
$4
HSET
$22
hash:article:by:100197
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100197
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100197
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100197
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100197
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100197
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100197
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100197
$10
createTime
$13
1430204416000
*4
$4
HSET
$22
hash:article:by:100197
$11
releaseTime
$13
1430204416000
*4
$4
HSET
$22
hash:article:by:100197
$10
updateTime
$13
1430204416000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100197
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100197
*3
$5
LPUSH
$15
list:article:id
$6
100197
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100197
*4
$4
HSET
$22
hash:article:by:100171
$2
id
$6
100171
*4
$4
HSET
$22
hash:article:by:100171
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100171
$9
articleId
$4
2361
*4
$4
HSET
$22
hash:article:by:100171
$5
title
$51
［授权发表］Linux内核Section Mismatch详解
*4
$4
HSET
$22
hash:article:by:100171
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100171
$8
labelIds
$12
[21,154,155]
*4
$4
HSET
$22
hash:article:by:100171
$6
digest
$251
Section Mismatch是非常严重的Bug，可能会导致无法预测的内存访问问题，建议谨慎对待，如果添加的驱动中有类似Warning，可能需要密切关注并解决掉。本文就该问题的检测、原因、解决思路以...
*4
$4
HSET
$22
hash:article:by:100171
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100171
$7
content
$41
csdn/linux/1_0_1_2_1504264662.113645.html
*4
$4
HSET
$22
hash:article:by:100171
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100171
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100171
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100171
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100171
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100171
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100171
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100171
$10
createTime
$13
1430204412000
*4
$4
HSET
$22
hash:article:by:100171
$11
releaseTime
$13
1430204412000
*4
$4
HSET
$22
hash:article:by:100171
$10
updateTime
$13
1430204412000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100171
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100171
*3
$5
LPUSH
$15
list:article:id
$6
100171
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100171
*4
$4
HSET
$22
hash:article:by:100408
$2
id
$6
100408
*4
$4
HSET
$22
hash:article:by:100408
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100408
$9
articleId
$4
2213
*4
$4
HSET
$22
hash:article:by:100408
$5
title
$53
【总结】Effective java经验之谈，并发编程
*4
$4
HSET
$22
hash:article:by:100408
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100408
$8
labelIds
$17
[396,397,398,399]
*4
$4
HSET
$22
hash:article:by:100408
$6
digest
$147
内容包括，并发与并行，并发约束，并发下的集合类性能分析，并发相关包的概述，并发场景，并发总结集合包
*4
$4
HSET
$22
hash:article:by:100408
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100408
$7
content
$40
csdn/java/1_1_1_0_1504264518.810351.html
*4
$4
HSET
$22
hash:article:by:100408
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100408
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100408
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100408
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100408
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100408
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100408
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100408
$10
createTime
$13
1429718449000
*4
$4
HSET
$22
hash:article:by:100408
$11
releaseTime
$13
1429718449000
*4
$4
HSET
$22
hash:article:by:100408
$10
updateTime
$13
1429718449000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100408
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100408
*3
$5
LPUSH
$15
list:article:id
$6
100408
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100408
*4
$4
HSET
$22
hash:article:by:100725
$2
id
$6
100725
*4
$4
HSET
$22
hash:article:by:100725
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100725
$9
articleId
$4
2214
*4
$4
HSET
$22
hash:article:by:100725
$5
title
$89
【总结】Effective java经验之谈，枚举，注解，方法，通用设计，异常
*4
$4
HSET
$22
hash:article:by:100725
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100725
$8
labelIds
$20
[698,699,62,212,116]
*4
$4
HSET
$22
hash:article:by:100725
$6
digest
$299
这几章看的比较快，内容就如同标题一样比较容易理解，所以只有部分内容会在[]中解释，其他的就直接理解标题，并不影响阅读质量。不过如果时间充足的话，还是仔细读一读原书的内容，相信还是有所收获的。主要最近自...
*4
$4
HSET
$22
hash:article:by:100725
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100725
$7
content
$40
csdn/java/1_1_1_1_1504264520.021046.html
*4
$4
HSET
$22
hash:article:by:100725
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100725
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100725
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100725
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100725
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100725
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100725
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100725
$10
createTime
$13
1429560027000
*4
$4
HSET
$22
hash:article:by:100725
$11
releaseTime
$13
1429560027000
*4
$4
HSET
$22
hash:article:by:100725
$10
updateTime
$13
1429560027000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100725
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100725
*3
$5
LPUSH
$15
list:article:id
$6
100725
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100725
*4
$4
HSET
$22
hash:article:by:100379
$2
id
$6
100379
*4
$4
HSET
$22
hash:article:by:100379
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100379
$9
articleId
$4
2216
*4
$4
HSET
$22
hash:article:by:100379
$5
title
$47
【总结】Effective java经验之谈，泛型
*4
$4
HSET
$22
hash:article:by:100379
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100379
$8
labelIds
$20
[18,116,132,365,366]
*4
$4
HSET
$22
hash:article:by:100379
$6
digest
$198
对于泛型这一章，在起始写框架的时候，并没有注意细节，造成了很多方法或者类的错误设计。这本书在这点上弥补了我一个短板。大概的总结如下。
*4
$4
HSET
$22
hash:article:by:100379
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100379
$7
content
$40
csdn/java/1_1_1_4_1504264522.188482.html
*4
$4
HSET
$22
hash:article:by:100379
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100379
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100379
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100379
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100379
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100379
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100379
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100379
$10
createTime
$13
1429099202000
*4
$4
HSET
$22
hash:article:by:100379
$11
releaseTime
$13
1429099202000
*4
$4
HSET
$22
hash:article:by:100379
$10
updateTime
$13
1429099202000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100379
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100379
*3
$5
LPUSH
$15
list:article:id
$6
100379
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100379
*4
$4
HSET
$22
hash:article:by:100380
$2
id
$6
100380
*4
$4
HSET
$22
hash:article:by:100380
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100380
$9
articleId
$4
2219
*4
$4
HSET
$22
hash:article:by:100380
$5
title
$53
【总结】Effective java经验之谈，通用方法
*4
$4
HSET
$22
hash:article:by:100380
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100380
$8
labelIds
$20
[116,367,368,68,369]
*4
$4
HSET
$22
hash:article:by:100380
$6
digest
$228
对于通用方法，其实应用的场景是比较多的，我们在写一个类的时候，就要考虑是否要编写该方法的通用方法。这使得我们为以后该类的扩展性与使用方面提供很大的便利。
*4
$4
HSET
$22
hash:article:by:100380
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100380
$7
content
$40
csdn/java/1_1_1_2_1504264524.314889.html
*4
$4
HSET
$22
hash:article:by:100380
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100380
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100380
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100380
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100380
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100380
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100380
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100380
$10
createTime
$13
1428937234000
*4
$4
HSET
$22
hash:article:by:100380
$11
releaseTime
$13
1428937234000
*4
$4
HSET
$22
hash:article:by:100380
$10
updateTime
$13
1428937234000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100380
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100380
*3
$5
LPUSH
$15
list:article:id
$6
100380
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100380
*4
$4
HSET
$22
hash:article:by:100336
$2
id
$6
100336
*4
$4
HSET
$22
hash:article:by:100336
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100336
$9
articleId
$4
2303
*4
$4
HSET
$22
hash:article:by:100336
$5
title
$47
Linux内核绪论----Linux内核剖析（二）
*4
$4
HSET
$22
hash:article:by:100336
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100336
$8
labelIds
$7
[35,21]
*4
$4
HSET
$22
hash:article:by:100336
$6
digest
$303
什么是内核内核是操作系统最基本的部分。它是为众多应用程序提供对计算机硬件的安全访问的一部分软件，这种访问是有限的，并且内核决定一个程序在什么时候对某部分硬件操作多长时间。内核的分类可分为单内核和双内核...
*4
$4
HSET
$22
hash:article:by:100336
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100336
$7
content
$40
csdn/linux/1_0_1_10_1504264618.6433.html
*4
$4
HSET
$22
hash:article:by:100336
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100336
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100336
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100336
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100336
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100336
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100336
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100336
$10
createTime
$13
1428588048000
*4
$4
HSET
$22
hash:article:by:100336
$11
releaseTime
$13
1428588048000
*4
$4
HSET
$22
hash:article:by:100336
$10
updateTime
$13
1428588048000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100336
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100336
*3
$5
LPUSH
$15
list:article:id
$6
100336
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100336
*4
$4
HSET
$22
hash:article:by:100635
$2
id
$6
100635
*4
$4
HSET
$22
hash:article:by:100635
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100635
$9
articleId
$4
2304
*4
$4
HSET
$22
hash:article:by:100635
$5
title
$44
Linux的历史----Linux内核剖析（一）
*4
$4
HSET
$22
hash:article:by:100635
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100635
$8
labelIds
$11
[35,21,211]
*4
$4
HSET
$22
hash:article:by:100635
$6
digest
$243
Unix操作系统Unix的由来汤普逊和里奇最早是在贝尔实验室开发Unix的，此后的10年，Unix在学术机构和大型企业中得到了广泛的应用，当时的UNIX拥有者AT&T公司以低廉甚至免费的许可将Unix...
*4
$4
HSET
$22
hash:article:by:100635
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100635
$7
content
$42
csdn/linux/1_0_1_11_1504264619.509449.html
*4
$4
HSET
$22
hash:article:by:100635
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100635
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100635
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100635
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100635
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100635
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100635
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100635
$10
createTime
$13
1428570051000
*4
$4
HSET
$22
hash:article:by:100635
$11
releaseTime
$13
1428570051000
*4
$4
HSET
$22
hash:article:by:100635
$10
updateTime
$13
1428570051000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100635
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100635
*3
$5
LPUSH
$15
list:article:id
$6
100635
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100635
*4
$4
HSET
$22
hash:article:by:100373
$2
id
$6
100373
*4
$4
HSET
$22
hash:article:by:100373
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100373
$9
articleId
$4
2215
*4
$4
HSET
$22
hash:article:by:100373
$5
title
$53
【总结】Effective java经验之谈，类与接口
*4
$4
HSET
$22
hash:article:by:100373
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100373
$8
labelIds
$8
[18,298]
*4
$4
HSET
$22
hash:article:by:100373
$6
digest
$296
本章描述的是，自己在做系统重构的时候，阅读的章节，给自己在架构方面提供很大帮助。总结出一些干货分享一下啊啊啊~~主要应用场景是编写类与接口的时候需要注意的问题。每一章不一定按照顺序更新。欢迎拍砖补充。
*4
$4
HSET
$22
hash:article:by:100373
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100373
$7
content
$40
csdn/java/1_1_1_3_1504264520.942652.html
*4
$4
HSET
$22
hash:article:by:100373
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100373
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100373
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100373
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100373
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100373
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100373
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100373
$10
createTime
$13
1428498045000
*4
$4
HSET
$22
hash:article:by:100373
$11
releaseTime
$13
1428498045000
*4
$4
HSET
$22
hash:article:by:100373
$10
updateTime
$13
1428498045000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100373
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100373
*3
$5
LPUSH
$15
list:article:id
$6
100373
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100373
*4
$4
HSET
$22
hash:article:by:100640
$2
id
$6
100640
*4
$4
HSET
$22
hash:article:by:100640
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100640
$9
articleId
$4
2217
*4
$4
HSET
$22
hash:article:by:100640
$5
title
$62
【总结】Effective java经验之谈，创建和销毁对象
*4
$4
HSET
$22
hash:article:by:100640
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100640
$8
labelIds
$12
[18,593,416]
*4
$4
HSET
$22
hash:article:by:100640
$6
digest
$237
关于Effective java 这本书，自己的一些总结性的思考。篇幅可能不按照目录来，因为自己喜欢先看哪一章就直接阅读了。不过能确定的是，每一章都会有总结。欢迎大家拍砖与补充。
*4
$4
HSET
$22
hash:article:by:100640
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100640
$7
content
$40
csdn/java/1_1_1_5_1504264523.145457.html
*4
$4
HSET
$22
hash:article:by:100640
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100640
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100640
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100640
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100640
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100640
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100640
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100640
$10
createTime
$13
1428498038000
*4
$4
HSET
$22
hash:article:by:100640
$11
releaseTime
$13
1428498038000
*4
$4
HSET
$22
hash:article:by:100640
$10
updateTime
$13
1428498038000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100640
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100640
*3
$5
LPUSH
$15
list:article:id
$6
100640
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100640
*4
$4
HSET
$22
hash:article:by:100773
$2
id
$6
100773
*4
$4
HSET
$22
hash:article:by:100773
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100773
$9
articleId
$4
2431
*4
$4
HSET
$22
hash:article:by:100773
$5
title
$22
jsp、servlet一家亲
*4
$4
HSET
$22
hash:article:by:100773
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100773
$8
labelIds
$11
[739,37,41]
*4
$4
HSET
$22
hash:article:by:100773
$6
digest
$217
上个月写了《教你servlet入门》，今天来探究一下关于jsp的那些故事。
§ 回顾

    1． 什么是Web应用程序？
    2． 什么是Servlet，和一般Java程序有什么区别？...
*4
$4
HSET
$22
hash:article:by:100773
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100773
$7
content
$40
csdn/java/1_1_1_9_1504264735.616165.html
*4
$4
HSET
$22
hash:article:by:100773
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100773
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100773
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100773
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100773
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100773
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100773
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100773
$10
createTime
$13
1428415227000
*4
$4
HSET
$22
hash:article:by:100773
$11
releaseTime
$13
1428415227000
*4
$4
HSET
$22
hash:article:by:100773
$10
updateTime
$13
1428415227000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100773
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100773
*3
$5
LPUSH
$15
list:article:id
$6
100773
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100773
*4
$4
HSET
$22
hash:article:by:100329
$2
id
$6
100329
*4
$4
HSET
$22
hash:article:by:100329
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100329
$9
articleId
$4
2569
*4
$4
HSET
$22
hash:article:by:100329
$5
title
$52
ajax post请求request.getParameter("")取值为null
*4
$4
HSET
$22
hash:article:by:100329
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100329
$8
labelIds
$9
[108,335]
*4
$4
HSET
$22
hash:article:by:100329
$6
digest
$153
写一个简单的ajax 请求，发现通过request.getParamter(“”)取到的值为null 
前台代码：



$(document).ready(function(){
    $("#a...
*4
$4
HSET
$22
hash:article:by:100329
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100329
$7
content
$40
csdn/java/1_1_1_9_1504264966.988935.html
*4
$4
HSET
$22
hash:article:by:100329
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100329
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100329
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100329
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100329
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100329
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100329
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100329
$10
createTime
$13
1427637634000
*4
$4
HSET
$22
hash:article:by:100329
$11
releaseTime
$13
1427637634000
*4
$4
HSET
$22
hash:article:by:100329
$10
updateTime
$13
1427637634000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100329
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100329
*3
$5
LPUSH
$15
list:article:id
$6
100329
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100329
*4
$4
HSET
$22
hash:article:by:100767
$2
id
$6
100767
*4
$4
HSET
$22
hash:article:by:100767
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100767
$9
articleId
$4
2430
*4
$4
HSET
$22
hash:article:by:100767
$5
title
$19
教你Servlet入门
*4
$4
HSET
$22
hash:article:by:100767
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100767
$8
labelIds
$5
[739]
*4
$4
HSET
$22
hash:article:by:100767
$6
digest
$215
Web 技术成为当今主流的互联网 Web 应用技术之一，而 Servlet 是 Java Web 技术的核心基础。这篇博客主要帮助大家了解一个 Web 工程在 Servlet 容器中是如何启动的？ S...
*4
$4
HSET
$22
hash:article:by:100767
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100767
$7
content
$40
csdn/java/1_1_1_8_1504264734.863159.html
*4
$4
HSET
$22
hash:article:by:100767
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100767
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100767
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100767
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100767
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100767
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100767
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100767
$10
createTime
$13
1427205644000
*4
$4
HSET
$22
hash:article:by:100767
$11
releaseTime
$13
1427205644000
*4
$4
HSET
$22
hash:article:by:100767
$10
updateTime
$13
1427205644000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100767
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100767
*3
$5
LPUSH
$15
list:article:id
$6
100767
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100767
*4
$4
HSET
$22
hash:article:by:100257
$2
id
$6
100257
*4
$4
HSET
$22
hash:article:by:100257
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100257
$9
articleId
$4
2102
*4
$4
HSET
$22
hash:article:by:100257
$5
title
$57
Linux内核源码分析--文件系统（四、Bitmap.c）
*4
$4
HSET
$22
hash:article:by:100257
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100257
$8
labelIds
$17
[253,119,188,254]
*4
$4
HSET
$22
hash:article:by:100257
$6
digest
$283
总结的来说其实Bitmap.c程序就是操作文件系统中的两个位图：i节点位图和逻辑块位图；拿逻辑块位图来说吧，申请一个新的逻辑块时，首先是在8块逻辑块位图中查找一个空闲的比特位，找到以后转换成逻辑块号，...
*4
$4
HSET
$22
hash:article:by:100257
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100257
$7
content
$41
csdn/linux/1_0_1_0_1504264441.510516.html
*4
$4
HSET
$22
hash:article:by:100257
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100257
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100257
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100257
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100257
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100257
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100257
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100257
$10
createTime
$13
1424534417000
*4
$4
HSET
$22
hash:article:by:100257
$11
releaseTime
$13
1424534417000
*4
$4
HSET
$22
hash:article:by:100257
$10
updateTime
$13
1424534417000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100257
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100257
*3
$5
LPUSH
$15
list:article:id
$6
100257
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100257
*4
$4
HSET
$22
hash:article:by:100607
$2
id
$6
100607
*4
$4
HSET
$22
hash:article:by:100607
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100607
$9
articleId
$4
2114
*4
$4
HSET
$22
hash:article:by:100607
$5
title
$40
全面解析C语言中可变参数列表
*4
$4
HSET
$22
hash:article:by:100607
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100607
$8
labelIds
$17
[253,564,310,183]
*4
$4
HSET
$22
hash:article:by:100607
$6
digest
$291
全面解析c语言中可变参数列表问题：1、大众版：大家习惯的使用方式；2、真实版：真正的使用方式；3、实际原理：具体原理，本质；4、自己实现可变参数列表：理解本质后，自己用自己的方法来实现可变参数列表；5...
*4
$4
HSET
$22
hash:article:by:100607
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100607
$7
content
$41
csdn/linux/1_0_1_1_1504264451.726431.html
*4
$4
HSET
$22
hash:article:by:100607
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100607
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100607
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100607
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100607
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100607
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100607
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100607
$10
createTime
$13
1423666827000
*4
$4
HSET
$22
hash:article:by:100607
$11
releaseTime
$13
1423666827000
*4
$4
HSET
$22
hash:article:by:100607
$10
updateTime
$13
1423666827000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100607
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100607
*3
$5
LPUSH
$15
list:article:id
$6
100607
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100607
*4
$4
HSET
$22
hash:article:by:100652
$2
id
$6
100652
*4
$4
HSET
$22
hash:article:by:100652
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100652
$9
articleId
$4
2594
*4
$4
HSET
$22
hash:article:by:100652
$5
title
$36
设计模式(001) 开启设计之旅
*4
$4
HSET
$22
hash:article:by:100652
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100652
$8
labelIds
$19
[12,290,604,18,605]
*4
$4
HSET
$22
hash:article:by:100652
$6
digest
$303
“身体和灵魂，总有一个在路上”，有的人旅行，有的人看书，还有些人在旅行中写出启迪人心的好书来，身体在路上赋予了灵魂的力量。我的设计模式之旅，与你、与我，能带来什么呢？抛开遥远深邃的美丽传说，是为了感谢...
*4
$4
HSET
$22
hash:article:by:100652
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100652
$7
content
$40
csdn/java/1_0_1_1_1504265065.899645.html
*4
$4
HSET
$22
hash:article:by:100652
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100652
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100652
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100652
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100652
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100652
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100652
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100652
$10
createTime
$13
1423645232000
*4
$4
HSET
$22
hash:article:by:100652
$11
releaseTime
$13
1423645232000
*4
$4
HSET
$22
hash:article:by:100652
$10
updateTime
$13
1423645232000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100652
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100652
*3
$5
LPUSH
$15
list:article:id
$6
100652
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100652
*4
$4
HSET
$22
hash:article:by:100259
$2
id
$6
100259
*4
$4
HSET
$22
hash:article:by:100259
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100259
$9
articleId
$4
2115
*4
$4
HSET
$22
hash:article:by:100259
$5
title
$57
Linux内核源码分析--文件系统（三、buffer.c）
*4
$4
HSET
$22
hash:article:by:100259
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100259
$8
labelIds
$17
[253,119,188,254]
*4
$4
HSET
$22
hash:article:by:100259
$6
digest
$267
前面已经大概的分析了下高速缓存区相关知识，这里再来分析下几个重要的函数；1、清缓存：把缓存区数据和设备进行同步；   2、缓存块插入到双链表/hash链表中，从双链表/hash链表中删除缓存块；   ...
*4
$4
HSET
$22
hash:article:by:100259
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100259
$7
content
$41
csdn/linux/1_0_1_2_1504264452.832813.html
*4
$4
HSET
$22
hash:article:by:100259
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100259
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100259
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100259
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100259
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100259
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100259
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100259
$10
createTime
$13
1423576852000
*4
$4
HSET
$22
hash:article:by:100259
$11
releaseTime
$13
1423576852000
*4
$4
HSET
$22
hash:article:by:100259
$10
updateTime
$13
1423576852000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100259
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100259
*3
$5
LPUSH
$15
list:article:id
$6
100259
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100259
*4
$4
HSET
$22
hash:article:by:100494
$2
id
$6
100494
*4
$4
HSET
$22
hash:article:by:100494
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100494
$9
articleId
$4
2116
*4
$4
HSET
$22
hash:article:by:100494
$5
title
$64
Linux内核源码分析--文件系统（二、高速缓存区）
*4
$4
HSET
$22
hash:article:by:100494
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100494
$8
labelIds
$17
[253,119,188,254]
*4
$4
HSET
$22
hash:article:by:100494
$6
digest
$291
从块设备中读取数据是很慢的（I/O操作相对于内存操作来说是比较慢的），所以为了不让CPU浪费宝贵的时间来等待读取块设备上的数据，就在内存中开辟了一段内存地址用来预获取最近使用过的多块设备块上的数据。当...
*4
$4
HSET
$22
hash:article:by:100494
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100494
$7
content
$41
csdn/linux/1_0_1_3_1504264453.944361.html
*4
$4
HSET
$22
hash:article:by:100494
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100494
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100494
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100494
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100494
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100494
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100494
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100494
$10
createTime
$13
1423519214000
*4
$4
HSET
$22
hash:article:by:100494
$11
releaseTime
$13
1423519214000
*4
$4
HSET
$22
hash:article:by:100494
$10
updateTime
$13
1423519214000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100494
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100494
*3
$5
LPUSH
$15
list:article:id
$6
100494
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100494
*4
$4
HSET
$22
hash:article:by:100382
$2
id
$6
100382
*4
$4
HSET
$22
hash:article:by:100382
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100382
$9
articleId
$4
2117
*4
$4
HSET
$22
hash:article:by:100382
$5
title
$49
memcopy()函数c语言实现和汇编实现比较
*4
$4
HSET
$22
hash:article:by:100382
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100382
$8
labelIds
$21
[159,360,371,250,372]
*4
$4
HSET
$22
hash:article:by:100382
$6
digest
$245
首先来看汇编实现的memcpy函数，是利用宏函数来实现的，用汇编指令rep和movsb配合循环把数据以字节为单位从ds:esi传送到es:edi中，把循环次数放在ecx中。当然这样拷贝的才是真正的内存...
*4
$4
HSET
$22
hash:article:by:100382
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100382
$7
content
$41
csdn/linux/1_0_1_4_1504264454.252277.html
*4
$4
HSET
$22
hash:article:by:100382
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100382
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100382
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100382
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100382
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100382
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100382
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100382
$10
createTime
$13
1423278006000
*4
$4
HSET
$22
hash:article:by:100382
$11
releaseTime
$13
1423278006000
*4
$4
HSET
$22
hash:article:by:100382
$10
updateTime
$13
1423278006000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100382
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100382
*3
$5
LPUSH
$15
list:article:id
$6
100382
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100382
*4
$4
HSET
$22
hash:article:by:100168
$2
id
$6
100168
*4
$4
HSET
$22
hash:article:by:100168
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100168
$9
articleId
$4
2568
*4
$4
HSET
$22
hash:article:by:100168
$5
title
$26
Java读取properties文件
*4
$4
HSET
$22
hash:article:by:100168
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100168
$8
labelIds
$12
[18,152,153]
*4
$4
HSET
$22
hash:article:by:100168
$6
digest
$155
1.jsp页面展示代码

{CSDN:CODE:594235}


2. 代码结构图


其中common中的Prop.java是读取properties文件
3.代码实现
一.初...
*4
$4
HSET
$22
hash:article:by:100168
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100168
$7
content
$41
csdn/java/1_1_1_10_1504264966.059801.html
*4
$4
HSET
$22
hash:article:by:100168
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100168
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100168
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100168
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100168
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100168
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100168
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100168
$10
createTime
$13
1422727209000
*4
$4
HSET
$22
hash:article:by:100168
$11
releaseTime
$13
1422727209000
*4
$4
HSET
$22
hash:article:by:100168
$10
updateTime
$13
1422727209000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100168
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100168
*3
$5
LPUSH
$15
list:article:id
$6
100168
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100168
*4
$4
HSET
$22
hash:article:by:100136
$2
id
$6
100136
*4
$4
HSET
$22
hash:article:by:100136
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100136
$9
articleId
$4
2104
*4
$4
HSET
$22
hash:article:by:100136
$5
title
$39
Linux 新内核中主次设备号范围
*4
$4
HSET
$22
hash:article:by:100136
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100136
$8
labelIds
$17
[119,120,121,122]
*4
$4
HSET
$22
hash:article:by:100136
$6
digest
$275
作者：李强,华清远见嵌入式学院讲师。

     设备驱动中，设备号设一个很重要的概念和变量。不论是主设备号，还是次设备号，在设备驱动中都占据了很重要的地位。那么他在Kernel中是如何操作的？这...
*4
$4
HSET
$22
hash:article:by:100136
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100136
$7
content
$41
csdn/linux/1_0_1_5_1504264442.518723.html
*4
$4
HSET
$22
hash:article:by:100136
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100136
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100136
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100136
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100136
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100136
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100136
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100136
$10
createTime
$13
1422457258000
*4
$4
HSET
$22
hash:article:by:100136
$11
releaseTime
$13
1422457258000
*4
$4
HSET
$22
hash:article:by:100136
$10
updateTime
$13
1422457258000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100136
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100136
*3
$5
LPUSH
$15
list:article:id
$6
100136
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100136
*4
$4
HSET
$22
hash:article:by:100400
$2
id
$6
100400
*4
$4
HSET
$22
hash:article:by:100400
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100400
$9
articleId
$4
2111
*4
$4
HSET
$22
hash:article:by:100400
$5
title
$67
Linux内核源码分析--内存管理（二、函数实现技巧）
*4
$4
HSET
$22
hash:article:by:100400
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100400
$8
labelIds
$17
[159,120,391,250]
*4
$4
HSET
$22
hash:article:by:100400
$6
digest
$303
仔细的分析了一下各个内存管理函数的实现，发现里面涉及到了几个技巧，如果知道了这几个技巧，那么阅读内存管理源码将会事半功倍（主要是这几个技巧在几个函数中都出现过），当然也会选择性的分析几个比较重要的函数...
*4
$4
HSET
$22
hash:article:by:100400
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100400
$7
content
$41
csdn/linux/1_0_1_6_1504264448.635831.html
*4
$4
HSET
$22
hash:article:by:100400
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100400
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100400
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100400
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100400
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100400
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100400
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100400
$10
createTime
$13
1422032433000
*4
$4
HSET
$22
hash:article:by:100400
$11
releaseTime
$13
1422032433000
*4
$4
HSET
$22
hash:article:by:100400
$10
updateTime
$13
1422032433000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100400
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100400
*3
$5
LPUSH
$15
list:article:id
$6
100400
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100400
*4
$4
HSET
$22
hash:article:by:100698
$2
id
$6
100698
*4
$4
HSET
$22
hash:article:by:100698
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100698
$9
articleId
$4
2112
*4
$4
HSET
$22
hash:article:by:100698
$5
title
$61
Linux内核源码分析--内存管理（一、分页机制）
*4
$4
HSET
$22
hash:article:by:100698
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100698
$8
labelIds
$17
[159,119,120,391]
*4
$4
HSET
$22
hash:article:by:100698
$6
digest
$263
最开始的地方是在head汇编中，如果看boot中那三个汇编的应该记得（那三个汇编还是比较重要的）。首先是分页机制，在CR0的第31位(PG位)置1表示开启分页机制，顺便也介绍下其他几个控制寄存器：CR...
*4
$4
HSET
$22
hash:article:by:100698
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100698
$7
content
$40
csdn/linux/1_0_1_7_1504264449.53965.html
*4
$4
HSET
$22
hash:article:by:100698
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100698
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100698
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100698
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100698
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100698
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100698
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100698
$10
createTime
$13
1421942430000
*4
$4
HSET
$22
hash:article:by:100698
$11
releaseTime
$13
1421942430000
*4
$4
HSET
$22
hash:article:by:100698
$10
updateTime
$13
1421942430000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100698
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100698
*3
$5
LPUSH
$15
list:article:id
$6
100698
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100698
*4
$4
HSET
$22
hash:article:by:100253
$2
id
$6
100253
*4
$4
HSET
$22
hash:article:by:100253
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100253
$9
articleId
$4
2113
*4
$4
HSET
$22
hash:article:by:100253
$5
title
$73
Linux内核源码分析--系统时间初始化（kernel_mktime()函数）
*4
$4
HSET
$22
hash:article:by:100253
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100253
$8
labelIds
$17
[119,159,250,126]
*4
$4
HSET
$22
hash:article:by:100253
$6
digest
$259
从boot文件中的几个汇编程序执行后跳转到init文件中的main.c程序开始继续执行，该main.c函数式为系统运行的环境进行初始化的。首先来看系统时间的初始化（因为系统时间的初始化开始程序就在in...
*4
$4
HSET
$22
hash:article:by:100253
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100253
$7
content
$41
csdn/linux/1_0_1_8_1504264450.684202.html
*4
$4
HSET
$22
hash:article:by:100253
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100253
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100253
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100253
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100253
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100253
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100253
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100253
$10
createTime
$13
1421708414000
*4
$4
HSET
$22
hash:article:by:100253
$11
releaseTime
$13
1421708414000
*4
$4
HSET
$22
hash:article:by:100253
$10
updateTime
$13
1421708414000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100253
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100253
*3
$5
LPUSH
$15
list:article:id
$6
100253
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100253
*4
$4
HSET
$22
hash:article:by:100324
$2
id
$6
100324
*4
$4
HSET
$22
hash:article:by:100324
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100324
$9
articleId
$4
2106
*4
$4
HSET
$22
hash:article:by:100324
$5
title
$35
BCD码转换成二进制和ASCII码
*4
$4
HSET
$22
hash:article:by:100324
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100324
$8
labelIds
$13
[119,126,329]
*4
$4
HSET
$22
hash:article:by:100324
$6
digest
$209
BCD码转换成二进制和ASCII码；用BCD码表示：十位上的十进制数为 2 == BCD码表示为 0010；个位上的十进制数9 === BCD码表示为 1001；所以总的来说 十进制数 29 用BCD...
*4
$4
HSET
$22
hash:article:by:100324
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100324
$7
content
$41
csdn/linux/1_0_1_9_1504264443.488212.html
*4
$4
HSET
$22
hash:article:by:100324
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100324
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100324
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100324
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100324
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100324
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100324
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100324
$10
createTime
$13
1421510432000
*4
$4
HSET
$22
hash:article:by:100324
$11
releaseTime
$13
1421510432000
*4
$4
HSET
$22
hash:article:by:100324
$10
updateTime
$13
1421510432000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100324
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100324
*3
$5
LPUSH
$15
list:article:id
$6
100324
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100324
*4
$4
HSET
$22
hash:article:by:100203
$2
id
$6
100203
*4
$4
HSET
$22
hash:article:by:100203
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100203
$9
articleId
$4
2109
*4
$4
HSET
$22
hash:article:by:100203
$5
title
$51
C程序代码中内嵌as汇编（四、宏函数）
*4
$4
HSET
$22
hash:article:by:100203
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100203
$8
labelIds
$13
[119,126,166]
*4
$4
HSET
$22
hash:article:by:100203
$6
digest
$256
先来回忆下C语言中宏是怎么定义的，最基本的是定义常量：#define MAX_LEN 1024  这是最简单的常数宏定义，其中宏名按规定是要大写的，宏名在预编译时会由后面的值替代掉（预编译四大步骤：1...
*4
$4
HSET
$22
hash:article:by:100203
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100203
$7
content
$42
csdn/linux/1_0_1_10_1504264446.797558.html
*4
$4
HSET
$22
hash:article:by:100203
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100203
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100203
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100203
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100203
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100203
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100203
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100203
$10
createTime
$13
1421420415000
*4
$4
HSET
$22
hash:article:by:100203
$11
releaseTime
$13
1421420415000
*4
$4
HSET
$22
hash:article:by:100203
$10
updateTime
$13
1421420415000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100203
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100203
*3
$5
LPUSH
$15
list:article:id
$6
100203
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100203
*4
$4
HSET
$22
hash:article:by:100224
$2
id
$6
100224
*4
$4
HSET
$22
hash:article:by:100224
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100224
$9
articleId
$4
2107
*4
$4
HSET
$22
hash:article:by:100224
$5
title
$48
C程序代码中内嵌as汇编（三、跳转）
*4
$4
HSET
$22
hash:article:by:100224
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100224
$8
labelIds
$13
[119,126,166]
*4
$4
HSET
$22
hash:article:by:100224
$6
digest
$253
在内联汇编中使用跳转语句是非常常见的，比如：比较两个数，返回较大数时，就会用到跳转；先看下汇编和运行结果，然后再一步步分析下：
                      

        运行结果...
*4
$4
HSET
$22
hash:article:by:100224
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100224
$7
content
$41
csdn/linux/1_0_1_11_1504264444.63901.html
*4
$4
HSET
$22
hash:article:by:100224
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100224
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100224
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100224
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100224
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100224
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100224
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100224
$10
createTime
$13
1421258416000
*4
$4
HSET
$22
hash:article:by:100224
$11
releaseTime
$13
1421258416000
*4
$4
HSET
$22
hash:article:by:100224
$10
updateTime
$13
1421258416000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100224
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100224
*3
$5
LPUSH
$15
list:article:id
$6
100224
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100224
*4
$4
HSET
$22
hash:article:by:100181
$2
id
$6
100181
*4
$4
HSET
$22
hash:article:by:100181
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100181
$9
articleId
$4
2108
*4
$4
HSET
$22
hash:article:by:100181
$5
title
$51
C程序代码中内嵌as汇编（二、占位符）
*4
$4
HSET
$22
hash:article:by:100181
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100181
$8
labelIds
$13
[119,126,166]
*4
$4
HSET
$22
hash:article:by:100181
$6
digest
$175
本篇blog只给几个例题来进行快速学习内嵌as汇编。
        第一、输入参数中包含输出参数
 #include
 
 int main(void)
 {
     char string1[]...
*4
$4
HSET
$22
hash:article:by:100181
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100181
$7
content
$41
csdn/linux/1_0_1_12_1504264445.78145.html
*4
$4
HSET
$22
hash:article:by:100181
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100181
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100181
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100181
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100181
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100181
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100181
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100181
$10
createTime
$13
1421251259000
*4
$4
HSET
$22
hash:article:by:100181
$11
releaseTime
$13
1421251259000
*4
$4
HSET
$22
hash:article:by:100181
$10
updateTime
$13
1421251259000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100181
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100181
*3
$5
LPUSH
$15
list:article:id
$6
100181
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100181
*4
$4
HSET
$22
hash:article:by:100372
$2
id
$6
100372
*4
$4
HSET
$22
hash:article:by:100372
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100372
$9
articleId
$4
2119
*4
$4
HSET
$22
hash:article:by:100372
$5
title
$54
C程序代码中内嵌as汇编（一、基础知识）
*4
$4
HSET
$22
hash:article:by:100372
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100372
$8
labelIds
$13
[119,126,360]
*4
$4
HSET
$22
hash:article:by:100372
$6
digest
$293
汇编代码是最接近机器码，所以也是执行效率最高的，在操作系统中有将近10%的关键性代码是由汇编编写的，而还有部分代码是由C代码嵌入汇编构成的。C代码中嵌入汇编可以提高程序的执行效率，同时这种程序还既有高...
*4
$4
HSET
$22
hash:article:by:100372
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100372
$7
content
$42
csdn/linux/1_0_1_13_1504264455.244668.html
*4
$4
HSET
$22
hash:article:by:100372
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100372
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100372
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100372
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100372
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100372
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100372
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100372
$10
createTime
$13
1421244051000
*4
$4
HSET
$22
hash:article:by:100372
$11
releaseTime
$13
1421244051000
*4
$4
HSET
$22
hash:article:by:100372
$10
updateTime
$13
1421244051000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100372
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100372
*3
$5
LPUSH
$15
list:article:id
$6
100372
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100372
*4
$4
HSET
$22
hash:article:by:100177
$2
id
$6
100177
*4
$4
HSET
$22
hash:article:by:100177
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100177
$9
articleId
$4
2127
*4
$4
HSET
$22
hash:article:by:100177
$5
title
$67
as汇编基础程序设计--函数设计及函数堆栈传参问题
*4
$4
HSET
$22
hash:article:by:100177
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100177
$8
labelIds
$17
[119,126,127,159]
*4
$4
HSET
$22
hash:article:by:100177
$6
digest
$221
其实上面的重点是 .type print_fun, @function ，这是定义函数的方式，后面一般接着是函数入口地址标识符；
函数传参问题：
        在as汇编和C语言中函数调用时传参的标...
*4
$4
HSET
$22
hash:article:by:100177
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100177
$7
content
$42
csdn/linux/1_0_1_14_1504264459.220957.html
*4
$4
HSET
$22
hash:article:by:100177
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100177
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100177
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100177
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100177
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100177
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100177
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100177
$10
createTime
$13
1421229657000
*4
$4
HSET
$22
hash:article:by:100177
$11
releaseTime
$13
1421229657000
*4
$4
HSET
$22
hash:article:by:100177
$10
updateTime
$13
1421229657000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100177
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100177
*3
$5
LPUSH
$15
list:article:id
$6
100177
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100177
*4
$4
HSET
$22
hash:article:by:100143
$2
id
$6
100143
*4
$4
HSET
$22
hash:article:by:100143
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100143
$9
articleId
$4
2129
*4
$4
HSET
$22
hash:article:by:100143
$5
title
$43
as汇编基础程序设计--基础知识点
*4
$4
HSET
$22
hash:article:by:100143
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100143
$8
labelIds
$13
[119,126,127]
*4
$4
HSET
$22
hash:article:by:100143
$6
digest
$265
1、数据类型，as汇编和C语言类似，也有数据类型之分。数据类型为了区分数据存放所需要的空间（也就是字节数），浮点型操作没怎么了解，浮点型操作时对数据类型应该有特殊的限制。
.section .data...
*4
$4
HSET
$22
hash:article:by:100143
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100143
$7
content
$42
csdn/linux/1_0_1_15_1504264460.383532.html
*4
$4
HSET
$22
hash:article:by:100143
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100143
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100143
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100143
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100143
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100143
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100143
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100143
$10
createTime
$13
1421229629000
*4
$4
HSET
$22
hash:article:by:100143
$11
releaseTime
$13
1421229629000
*4
$4
HSET
$22
hash:article:by:100143
$10
updateTime
$13
1421229629000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100143
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100143
*3
$5
LPUSH
$15
list:article:id
$6
100143
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100143
*4
$4
HSET
$22
hash:article:by:100371
$2
id
$6
100371
*4
$4
HSET
$22
hash:article:by:100371
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100371
$9
articleId
$4
2119
*4
$4
HSET
$22
hash:article:by:100371
$5
title
$54
C程序代码中内嵌as汇编（一、基础知识）
*4
$4
HSET
$22
hash:article:by:100371
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100371
$8
labelIds
$13
[119,126,360]
*4
$4
HSET
$22
hash:article:by:100371
$6
digest
$293
汇编代码是最接近机器码，所以也是执行效率最高的，在操作系统中有将近10%的关键性代码是由汇编编写的，而还有部分代码是由C代码嵌入汇编构成的。C代码中嵌入汇编可以提高程序的执行效率，同时这种程序还既有高...
*4
$4
HSET
$22
hash:article:by:100371
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100371
$7
content
$42
csdn/linux/1_0_1_13_1504264455.244668.html
*4
$4
HSET
$22
hash:article:by:100371
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100371
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100371
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100371
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100371
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100371
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100371
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100371
$10
createTime
$13
1421215251000
*4
$4
HSET
$22
hash:article:by:100371
$11
releaseTime
$13
1421215251000
*4
$4
HSET
$22
hash:article:by:100371
$10
updateTime
$13
1421215251000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100371
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100371
*3
$5
LPUSH
$15
list:article:id
$6
100371
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100371
*4
$4
HSET
$22
hash:article:by:100182
$2
id
$6
100182
*4
$4
HSET
$22
hash:article:by:100182
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100182
$9
articleId
$4
2110
*4
$4
HSET
$22
hash:article:by:100182
$5
title
$43
as汇编基础程序设计--gdb调试汇编
*4
$4
HSET
$22
hash:article:by:100182
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100182
$8
labelIds
$17
[119,126,127,167]
*4
$4
HSET
$22
hash:article:by:100182
$6
digest
$169
开始命令：gdb  test；
        设置断点：break *_start  + 1（cpu运行到 _start+1 的地址上会停止，break可以简写b）
        开始运行：run...
*4
$4
HSET
$22
hash:article:by:100182
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100182
$7
content
$42
csdn/linux/1_0_1_16_1504264447.632803.html
*4
$4
HSET
$22
hash:article:by:100182
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100182
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100182
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100182
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100182
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100182
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100182
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100182
$10
createTime
$13
1420909208000
*4
$4
HSET
$22
hash:article:by:100182
$11
releaseTime
$13
1420909208000
*4
$4
HSET
$22
hash:article:by:100182
$10
updateTime
$13
1420909208000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100182
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100182
*3
$5
LPUSH
$15
list:article:id
$6
100182
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100182
*4
$4
HSET
$22
hash:article:by:100199
$2
id
$6
100199
*4
$4
HSET
$22
hash:article:by:100199
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100199
$9
articleId
$4
2121
*4
$4
HSET
$22
hash:article:by:100199
$5
title
$53
as汇编基础程序设计--调用C库和内存访问
*4
$4
HSET
$22
hash:article:by:100199
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100199
$8
labelIds
$13
[119,126,172]
*4
$4
HSET
$22
hash:article:by:100199
$6
digest
$207
as汇编中的内存访问：movl (%ebx), eax（把ebx寄存器指向的地址上的值传送给eax）；movl 4(%ebx), eax（把ebx指向的地址的位置往上偏移4字节的地址上的值传送给eax...
*4
$4
HSET
$22
hash:article:by:100199
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100199
$7
content
$42
csdn/linux/1_0_1_17_1504264456.360531.html
*4
$4
HSET
$22
hash:article:by:100199
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100199
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100199
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100199
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100199
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100199
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100199
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100199
$10
createTime
$13
1420819213000
*4
$4
HSET
$22
hash:article:by:100199
$11
releaseTime
$13
1420819213000
*4
$4
HSET
$22
hash:article:by:100199
$10
updateTime
$13
1420819213000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100199
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100199
*3
$5
LPUSH
$15
list:article:id
$6
100199
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100199
*4
$4
HSET
$22
hash:article:by:100189
$2
id
$6
100189
*4
$4
HSET
$22
hash:article:by:100189
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100189
$9
articleId
$4
2125
*4
$4
HSET
$22
hash:article:by:100189
$5
title
$43
AT&T风格的基础汇编程序--Hello word
*4
$4
HSET
$22
hash:article:by:100189
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100189
$8
labelIds
$17
[119,159,126,172]
*4
$4
HSET
$22
hash:article:by:100189
$6
digest
$257
为了看懂Linux内核源代码，所以不得不重新学习下汇编语言。汇编语言大体可以分为两个风格，官方的intel风格和unix系列的AT&T风格。Intel风格汇编是比较常见的，一般大学时会学习点基础的（至...
*4
$4
HSET
$22
hash:article:by:100189
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100189
$7
content
$42
csdn/linux/1_0_1_18_1504264457.971087.html
*4
$4
HSET
$22
hash:article:by:100189
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100189
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100189
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100189
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100189
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100189
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100189
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100189
$10
createTime
$13
1420736410000
*4
$4
HSET
$22
hash:article:by:100189
$11
releaseTime
$13
1420736410000
*4
$4
HSET
$22
hash:article:by:100189
$10
updateTime
$13
1420736410000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100189
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100189
*3
$5
LPUSH
$15
list:article:id
$6
100189
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100189
*4
$4
HSET
$22
hash:article:by:100774
$2
id
$6
100774
*4
$4
HSET
$22
hash:article:by:100774
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100774
$9
articleId
$4
2679
*4
$4
HSET
$22
hash:article:by:100774
$5
title
$46
springMvc+Spring4+hibernate4整合常见错误
*4
$4
HSET
$22
hash:article:by:100774
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100774
$8
labelIds
$8
[18,451]
*4
$4
HSET
$22
hash:article:by:100774
$6
digest
$235
最近一直在做springMvc+Spring4+hibernate4的整合，出了不少错误，这都是我们宝贵的经验啊，在整合的过程中，最大的问题就是版本升级的问题，之前做过jdk1.6的例子，很顺利，但是...
*4
$4
HSET
$22
hash:article:by:100774
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100774
$7
content
$40
csdn/java/1_0_1_6_1504265275.729173.html
*4
$4
HSET
$22
hash:article:by:100774
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100774
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100774
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100774
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100774
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100774
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100774
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100774
$10
createTime
$13
1420498833000
*4
$4
HSET
$22
hash:article:by:100774
$11
releaseTime
$13
1420498833000
*4
$4
HSET
$22
hash:article:by:100774
$10
updateTime
$13
1420498833000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100774
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100774
*3
$5
LPUSH
$15
list:article:id
$6
100774
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100774
*4
$4
HSET
$22
hash:article:by:100556
$2
id
$6
100556
*4
$4
HSET
$22
hash:article:by:100556
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100556
$9
articleId
$4
2123
*4
$4
HSET
$22
hash:article:by:100556
$5
title
$36
x86架构保护模式下界限问题
*4
$4
HSET
$22
hash:article:by:100556
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100556
$8
labelIds
$13
[119,180,170]
*4
$4
HSET
$22
hash:article:by:100556
$6
digest
$257
在保护模式下有很多界限问题，下面集中来看下：
        若段界限是0xFFFFF，粒度是4KB，那么实际界限值是多少？若粒度G=0，那么段界限就是实际的界限值；但粒度为4KB，那么界限值就是：（...
*4
$4
HSET
$22
hash:article:by:100556
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100556
$7
content
$42
csdn/linux/1_0_1_19_1504264456.792565.html
*4
$4
HSET
$22
hash:article:by:100556
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100556
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100556
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100556
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100556
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100556
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100556
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100556
$10
createTime
$13
1420390813000
*4
$4
HSET
$22
hash:article:by:100556
$11
releaseTime
$13
1420390813000
*4
$4
HSET
$22
hash:article:by:100556
$10
updateTime
$13
1420390813000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100556
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100556
*3
$5
LPUSH
$15
list:article:id
$6
100556
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100556
*4
$4
HSET
$22
hash:article:by:100559
$2
id
$6
100559
*4
$4
HSET
$22
hash:article:by:100559
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100559
$9
articleId
$4
2059
*4
$4
HSET
$22
hash:article:by:100559
$5
title
$27
x86架构中的保护模式
*4
$4
HSET
$22
hash:article:by:100559
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100559
$8
labelIds
$13
[119,126,180]
*4
$4
HSET
$22
hash:article:by:100559
$6
digest
$283
在x86架构中所谓保护模式其实就是段的存储方式能够达到一种保护机制。也正因为有了保护模式（段的存储方式）所以才会有特权模式，以及后面的多任务之说；
        在实模式下段的存储很简单，就是代表一...
*4
$4
HSET
$22
hash:article:by:100559
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100559
$7
content
$41
csdn/linux/1_0_2_0_1504264408.060921.html
*4
$4
HSET
$22
hash:article:by:100559
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100559
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100559
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100559
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100559
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100559
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100559
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100559
$10
createTime
$13
1420362038000
*4
$4
HSET
$22
hash:article:by:100559
$11
releaseTime
$13
1420362038000
*4
$4
HSET
$22
hash:article:by:100559
$10
updateTime
$13
1420362038000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100559
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100559
*3
$5
LPUSH
$15
list:article:id
$6
100559
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100559
*4
$4
HSET
$22
hash:article:by:100184
$2
id
$6
100184
*4
$4
HSET
$22
hash:article:by:100184
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100184
$9
articleId
$4
2065
*4
$4
HSET
$22
hash:article:by:100184
$5
title
$26
x86汇编--微内核设计
*4
$4
HSET
$22
hash:article:by:100184
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100184
$8
labelIds
$17
[119,168,169,170]
*4
$4
HSET
$22
hash:article:by:100184
$6
digest
$299
微内核程序：微内核程序就稍微复杂点了，还是按步骤分析下：1、设计一个打印例程，就是把字符串打印到屏幕终端，用来显示一些提示信息；2、后面都是用来加载用户程序了，其实说到底微内核就是为各个用户程序提供环...
*4
$4
HSET
$22
hash:article:by:100184
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100184
$7
content
$41
csdn/linux/1_0_2_4_1504264411.003738.html
*4
$4
HSET
$22
hash:article:by:100184
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100184
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100184
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100184
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100184
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100184
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100184
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100184
$10
createTime
$13
1419674403000
*4
$4
HSET
$22
hash:article:by:100184
$11
releaseTime
$13
1419674403000
*4
$4
HSET
$22
hash:article:by:100184
$10
updateTime
$13
1419674403000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100184
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100184
*3
$5
LPUSH
$15
list:article:id
$6
100184
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100184
*4
$4
HSET
$22
hash:article:by:100202
$2
id
$6
100202
*4
$4
HSET
$22
hash:article:by:100202
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100202
$9
articleId
$4
2066
*4
$4
HSET
$22
hash:article:by:100202
$5
title
$41
x86汇编--保护模式下的冒泡排序
*4
$4
HSET
$22
hash:article:by:100202
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100202
$8
labelIds
$13
[180,169,181]
*4
$4
HSET
$22
hash:article:by:100202
$6
digest
$169
其实这个代码本身（冒泡排序）没有什么意思，而有用的是怎么从实模式下进入保护模式，以及怎么 使用段选择子和段描述符。
*4
$4
HSET
$22
hash:article:by:100202
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100202
$7
content
$41
csdn/linux/1_0_2_3_1504264411.049416.html
*4
$4
HSET
$22
hash:article:by:100202
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100202
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100202
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100202
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100202
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100202
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100202
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100202
$10
createTime
$13
1419001255000
*4
$4
HSET
$22
hash:article:by:100202
$11
releaseTime
$13
1419001255000
*4
$4
HSET
$22
hash:article:by:100202
$10
updateTime
$13
1419001255000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100202
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100202
*3
$5
LPUSH
$15
list:article:id
$6
100202
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100202
*4
$4
HSET
$22
hash:article:by:100236
$2
id
$6
100236
*4
$4
HSET
$22
hash:article:by:100236
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100236
$9
articleId
$4
2063
*4
$4
HSET
$22
hash:article:by:100236
$5
title
$41
x86汇编--RTC中断（时间显示器）
*4
$4
HSET
$22
hash:article:by:100236
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100236
$8
labelIds
$13
[180,222,119]
*4
$4
HSET
$22
hash:article:by:100236
$6
digest
$132
可以用前一篇操作系统内核加载器（x86汇编）的加载器来加载这个RTC中断程序，就可以显示时间了。
*4
$4
HSET
$22
hash:article:by:100236
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100236
$7
content
$40
csdn/linux/1_0_2_2_1504264409.90012.html
*4
$4
HSET
$22
hash:article:by:100236
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100236
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100236
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100236
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100236
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100236
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100236
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100236
$10
createTime
$13
1418317203000
*4
$4
HSET
$22
hash:article:by:100236
$11
releaseTime
$13
1418317203000
*4
$4
HSET
$22
hash:article:by:100236
$10
updateTime
$13
1418317203000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100236
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100236
*3
$5
LPUSH
$15
list:article:id
$6
100236
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100236
*4
$4
HSET
$22
hash:article:by:100265
$2
id
$6
100265
*4
$4
HSET
$22
hash:article:by:100265
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100265
$9
articleId
$4
2061
*4
$4
HSET
$22
hash:article:by:100265
$5
title
$26
x86汇编--程序加载器
*4
$4
HSET
$22
hash:article:by:100265
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100265
$8
labelIds
$13
[180,119,263]
*4
$4
HSET
$22
hash:article:by:100265
$6
digest
$265
加载器程序就是如何把一个程序从磁盘上加载到内存空间执行：
步骤思考（实模式下的加载器）：
        第一、确定从磁盘哪个扇区中加载，以及加载到内存中的什么地方；
        第二、最基本的设...
*4
$4
HSET
$22
hash:article:by:100265
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100265
$7
content
$41
csdn/linux/1_0_2_1_1504264409.136242.html
*4
$4
HSET
$22
hash:article:by:100265
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100265
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100265
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100265
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100265
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100265
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100265
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100265
$10
createTime
$13
1417795232000
*4
$4
HSET
$22
hash:article:by:100265
$11
releaseTime
$13
1417795232000
*4
$4
HSET
$22
hash:article:by:100265
$10
updateTime
$13
1417795232000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100265
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100265
*3
$5
LPUSH
$15
list:article:id
$6
100265
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100265
*4
$4
HSET
$22
hash:article:by:100594
$2
id
$6
100594
*4
$4
HSET
$22
hash:article:by:100594
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100594
$9
articleId
$4
2194
*4
$4
HSET
$22
hash:article:by:100594
$5
title
$48
浅谈各类RAD快速开发平台存在的意义
*4
$4
HSET
$22
hash:article:by:100594
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100594
$8
labelIds
$9
[229,552]
*4
$4
HSET
$22
hash:article:by:100594
$6
digest
$82
今天和大伙谈论一个话题各类快速开发平台（jplogic）存在意义
*4
$4
HSET
$22
hash:article:by:100594
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100594
$7
content
$40
csdn/java/1_1_1_1_1504264509.715665.html
*4
$4
HSET
$22
hash:article:by:100594
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100594
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100594
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100594
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100594
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100594
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100594
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100594
$10
createTime
$13
1417392007000
*4
$4
HSET
$22
hash:article:by:100594
$11
releaseTime
$13
1417392007000
*4
$4
HSET
$22
hash:article:by:100594
$10
updateTime
$13
1417392007000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100594
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100594
*3
$5
LPUSH
$15
list:article:id
$6
100594
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100594
*4
$4
HSET
$22
hash:article:by:100464
$2
id
$6
100464
*4
$4
HSET
$22
hash:article:by:100464
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100464
$9
articleId
$4
2198
*4
$4
HSET
$22
hash:article:by:100464
$5
title
$91
Java web自定义标签按钮级别权限控制完美诠释（jplogic 快速开发平台）
*4
$4
HSET
$22
hash:article:by:100464
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100464
$8
labelIds
$13
[190,435,436]
*4
$4
HSET
$22
hash:article:by:100464
$6
digest
$223
接下来跟大家聊聊JavaWeb中权限控制，往大的方向说可以聊聊整合应用系统中的权限控制。在聊权限控制之前先跟大家聊聊RBAC。那么什么是RBAC呢？RBAC（Role-Based
 Access Co...
*4
$4
HSET
$22
hash:article:by:100464
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100464
$7
content
$40
csdn/java/1_1_1_2_1504264510.661706.html
*4
$4
HSET
$22
hash:article:by:100464
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100464
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100464
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100464
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100464
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100464
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100464
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100464
$10
createTime
$13
1417392006000
*4
$4
HSET
$22
hash:article:by:100464
$11
releaseTime
$13
1417392006000
*4
$4
HSET
$22
hash:article:by:100464
$10
updateTime
$13
1417392006000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100464
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100464
*3
$5
LPUSH
$15
list:article:id
$6
100464
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100464
*4
$4
HSET
$22
hash:article:by:100228
$2
id
$6
100228
*4
$4
HSET
$22
hash:article:by:100228
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100228
$9
articleId
$4
2206
*4
$4
HSET
$22
hash:article:by:100228
$5
title
$37
jplogic之GIS搜狗地图开发案例
*4
$4
HSET
$22
hash:article:by:100228
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100228
$8
labelIds
$9
[205,206]
*4
$4
HSET
$22
hash:article:by:100228
$6
digest
$290
在项目开发过程中我们可能遇到各种各样的需求，而GIS在应用便是其中一个。特别是在web类型的项目中会经常用到。我们都知道 网络地图服务，以其实时性、大信息量、丰富的功能，成为传统地图的延伸，同时扩展出...
*4
$4
HSET
$22
hash:article:by:100228
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100228
$7
content
$40
csdn/java/1_1_1_3_1504264515.004601.html
*4
$4
HSET
$22
hash:article:by:100228
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100228
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100228
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100228
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100228
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100228
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100228
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100228
$10
createTime
$13
1417392006000
*4
$4
HSET
$22
hash:article:by:100228
$11
releaseTime
$13
1417392006000
*4
$4
HSET
$22
hash:article:by:100228
$10
updateTime
$13
1417392006000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100228
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100228
*3
$5
LPUSH
$15
list:article:id
$6
100228
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100228
*4
$4
HSET
$22
hash:article:by:100222
$2
id
$6
100222
*4
$4
HSET
$22
hash:article:by:100222
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100222
$9
articleId
$4
2176
*4
$4
HSET
$22
hash:article:by:100222
$5
title
$82
同一Page范围内多个相同自定义标签类实例化个数相关问题阐述
*4
$4
HSET
$22
hash:article:by:100222
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100222
$8
labelIds
$9
[201,202]
*4
$4
HSET
$22
hash:article:by:100222
$6
digest
$37
我们都知道j2ee规范中自定义
*4
$4
HSET
$22
hash:article:by:100222
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100222
$7
content
$40
csdn/java/1_1_1_0_1504264500.386694.html
*4
$4
HSET
$22
hash:article:by:100222
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100222
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100222
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100222
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100222
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100222
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100222
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100222
$10
createTime
$13
1417392004000
*4
$4
HSET
$22
hash:article:by:100222
$11
releaseTime
$13
1417392004000
*4
$4
HSET
$22
hash:article:by:100222
$10
updateTime
$13
1417392004000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100222
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100222
*3
$5
LPUSH
$15
list:article:id
$6
100222
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100222
*4
$4
HSET
$22
hash:article:by:100268
$2
id
$6
100268
*4
$4
HSET
$22
hash:article:by:100268
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100268
$9
articleId
$4
2541
*4
$4
HSET
$22
hash:article:by:100268
$5
title
$60
淘宝网采用什么技术架构来实现网站高负载的
*4
$4
HSET
$22
hash:article:by:100268
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100268
$8
labelIds
$7
[86,93]
*4
$4
HSET
$22
hash:article:by:100268
$6
digest
$293
时间过得很快，来淘宝已经两个月了，在这两个月的时间里，自己也感受颇深。下面就结合淘宝目前的一些底层技术框架以及自己的一些感触来说说如何构建一个可 伸缩，高性能，高可用性的分布式互联网应用。

相关...
*4
$4
HSET
$22
hash:article:by:100268
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100268
$7
content
$41
csdn/java/1_0_1_17_1504264906.934209.html
*4
$4
HSET
$22
hash:article:by:100268
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100268
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100268
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100268
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100268
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100268
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100268
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100268
$10
createTime
$13
1417096853000
*4
$4
HSET
$22
hash:article:by:100268
$11
releaseTime
$13
1417096853000
*4
$4
HSET
$22
hash:article:by:100268
$10
updateTime
$13
1417096853000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100268
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100268
*3
$5
LPUSH
$15
list:article:id
$6
100268
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100268
*4
$4
HSET
$22
hash:article:by:100158
$2
id
$6
100158
*4
$4
HSET
$22
hash:article:by:100158
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100158
$9
articleId
$4
2543
*4
$4
HSET
$22
hash:article:by:100158
$5
title
$51
构建高并发高可用的电商平台架构实践
*4
$4
HSET
$22
hash:article:by:100158
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100158
$8
labelIds
$4
[93]
*4
$4
HSET
$22
hash:article:by:100158
$6
digest
$136
原文出自：http://blog.csdn.net/yangbutao/article/details/12242441


一、 设计理念


 


 

1.      空...
*4
$4
HSET
$22
hash:article:by:100158
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100158
$7
content
$39
csdn/java/1_0_1_16_1504264911.6188.html
*4
$4
HSET
$22
hash:article:by:100158
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100158
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100158
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100158
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100158
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100158
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100158
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100158
$10
createTime
$13
1417096838000
*4
$4
HSET
$22
hash:article:by:100158
$11
releaseTime
$13
1417096838000
*4
$4
HSET
$22
hash:article:by:100158
$10
updateTime
$13
1417096838000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100158
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100158
*3
$5
LPUSH
$15
list:article:id
$6
100158
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100158
*4
$4
HSET
$22
hash:article:by:100316
$2
id
$6
100316
*4
$4
HSET
$22
hash:article:by:100316
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100316
$9
articleId
$4
2544
*4
$4
HSET
$22
hash:article:by:100316
$5
title
$30
各大网站架构总结笔记
*4
$4
HSET
$22
hash:article:by:100316
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100316
$8
labelIds
$4
[93]
*4
$4
HSET
$22
hash:article:by:100316
$6
digest
$291
各大网站架构总结笔记


记得在大学里不止一次关注网站架构方面的东西了，但每次都是泛泛了解，也没有着重记录，一段时间后对各种架构的思想也就模糊了。这几天不知怎么的又心血来潮（可能是快毕业了冲动了...
*4
$4
HSET
$22
hash:article:by:100316
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100316
$7
content
$41
csdn/java/1_0_1_15_1504264912.498851.html
*4
$4
HSET
$22
hash:article:by:100316
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100316
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100316
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100316
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100316
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100316
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100316
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100316
$10
createTime
$13
1417096836000
*4
$4
HSET
$22
hash:article:by:100316
$11
releaseTime
$13
1417096836000
*4
$4
HSET
$22
hash:article:by:100316
$10
updateTime
$13
1417096836000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100316
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100316
*3
$5
LPUSH
$15
list:article:id
$6
100316
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100316
*4
$4
HSET
$22
hash:article:by:100242
$2
id
$6
100242
*4
$4
HSET
$22
hash:article:by:100242
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100242
$9
articleId
$4
2542
*4
$4
HSET
$22
hash:article:by:100242
$5
title
$42
国内外大型SNS网站后台架构对比
*4
$4
HSET
$22
hash:article:by:100242
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100242
$8
labelIds
$7
[86,93]
*4
$4
HSET
$22
hash:article:by:100242
$6
digest
$249
要问时下什么类型的站点人气最旺？答案当属SNS网站。短短几年的时间，SNS便迅速确立了Web 2.0核心的地位。用户的增长量之快更是让人咂舌，而Facebook访问量首次超越Google的消息也让人觉...
*4
$4
HSET
$22
hash:article:by:100242
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100242
$7
content
$41
csdn/java/1_0_1_14_1504264910.075052.html
*4
$4
HSET
$22
hash:article:by:100242
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100242
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100242
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100242
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100242
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100242
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100242
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100242
$10
createTime
$13
1417096833000
*4
$4
HSET
$22
hash:article:by:100242
$11
releaseTime
$13
1417096833000
*4
$4
HSET
$22
hash:article:by:100242
$10
updateTime
$13
1417096833000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100242
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100242
*3
$5
LPUSH
$15
list:article:id
$6
100242
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100242
*4
$4
HSET
$22
hash:article:by:100118
$2
id
$6
100118
*4
$4
HSET
$22
hash:article:by:100118
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100118
$9
articleId
$4
2545
*4
$4
HSET
$22
hash:article:by:100118
$5
title
$30
大型网站的架构设计图
*4
$4
HSET
$22
hash:article:by:100118
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100118
$8
labelIds
$4
[93]
*4
$4
HSET
$22
hash:article:by:100118
$6
digest
$303
近段时间以来，通过接触有关海量数据处理和搜索引擎的诸多技术，常常见识到不少精妙绝伦的架构图。除了每每感叹于每幅图表面上的绘制的精细之外，更为架构图背后所隐藏的设计思想所叹服。个人这两天一直在搜集各大型...
*4
$4
HSET
$22
hash:article:by:100118
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100118
$7
content
$41
csdn/java/1_0_1_13_1504264913.308992.html
*4
$4
HSET
$22
hash:article:by:100118
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100118
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100118
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100118
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100118
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100118
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100118
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100118
$10
createTime
$13
1417096822000
*4
$4
HSET
$22
hash:article:by:100118
$11
releaseTime
$13
1417096822000
*4
$4
HSET
$22
hash:article:by:100118
$10
updateTime
$13
1417096822000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100118
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100118
*3
$5
LPUSH
$15
list:article:id
$6
100118
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100118
*4
$4
HSET
$22
hash:article:by:100110
$2
id
$6
100110
*4
$4
HSET
$22
hash:article:by:100110
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100110
$9
articleId
$4
2546
*4
$4
HSET
$22
hash:article:by:100110
$5
title
$27
一步步构建大型网站
*4
$4
HSET
$22
hash:article:by:100110
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100110
$8
labelIds
$7
[86,87]
*4
$4
HSET
$22
hash:article:by:100110
$6
digest
$221
之前我简单向大家介绍了各个知名大型网站的架构，MySpace的五个里程碑、Flickr的架构、YouTube的架构、PlentyOfFish的架构、WikiPedia的架构。这几个都很典型，我们可以从...
*4
$4
HSET
$22
hash:article:by:100110
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100110
$7
content
$41
csdn/java/1_0_1_12_1504264915.092604.html
*4
$4
HSET
$22
hash:article:by:100110
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100110
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100110
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100110
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100110
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100110
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100110
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100110
$10
createTime
$13
1417096813000
*4
$4
HSET
$22
hash:article:by:100110
$11
releaseTime
$13
1417096813000
*4
$4
HSET
$22
hash:article:by:100110
$10
updateTime
$13
1417096813000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100110
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100110
*3
$5
LPUSH
$15
list:article:id
$6
100110
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100110
*4
$4
HSET
$22
hash:article:by:100294
$2
id
$6
100294
*4
$4
HSET
$22
hash:article:by:100294
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100294
$9
articleId
$4
2208
*4
$4
HSET
$22
hash:article:by:100294
$5
title
$74
jplogic之activiti modeler流程设计器集成案例（非spring集成）
*4
$4
HSET
$22
hash:article:by:100294
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100294
$8
labelIds
$17
[229,294,296,297]
*4
$4
HSET
$22
hash:article:by:100294
$6
digest
$95
续《jplogic之activiti整合案例（自定义流程引擎[非开源框架]待续）》关于
*4
$4
HSET
$22
hash:article:by:100294
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100294
$7
content
$40
csdn/java/1_1_1_4_1504264515.848724.html
*4
$4
HSET
$22
hash:article:by:100294
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100294
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100294
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100294
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100294
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100294
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100294
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100294
$10
createTime
$13
1415804456000
*4
$4
HSET
$22
hash:article:by:100294
$11
releaseTime
$13
1415804456000
*4
$4
HSET
$22
hash:article:by:100294
$10
updateTime
$13
1415804456000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100294
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100294
*3
$5
LPUSH
$15
list:article:id
$6
100294
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100294
*4
$4
HSET
$22
hash:article:by:100744
$2
id
$6
100744
*4
$4
HSET
$22
hash:article:by:100744
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100744
$9
articleId
$4
2771
*4
$4
HSET
$22
hash:article:by:100744
$5
title
$64
Redis源码分析（三十六）--- Redis中的11大优秀设计
*4
$4
HSET
$22
hash:article:by:100744
$10
categoryId
$1
7
*4
$4
HSET
$22
hash:article:by:100744
$8
labelIds
$19
[720,36,98,102,116]
*4
$4
HSET
$22
hash:article:by:100744
$6
digest
$273
坚持了一个月左右的时间，从最开始的对Redis的代码做分类，从struct结构体分析开始，到最后分析main主程序结束，中间，各大模块的代码逐个击破，学习，总之，收获了非常多，好久没有这么久的耐心把一...
*4
$4
HSET
$22
hash:article:by:100744
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100744
$7
content
$41
csdn/redis/1_0_1_0_1504578435.591825.html
*4
$4
HSET
$22
hash:article:by:100744
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100744
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100744
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100744
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100744
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100744
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100744
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100744
$10
createTime
$13
1415440816000
*4
$4
HSET
$22
hash:article:by:100744
$11
releaseTime
$13
1415440816000
*4
$4
HSET
$22
hash:article:by:100744
$10
updateTime
$13
1415440816000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100744
*4
$4
ZADD
$28
zset:article:category:read:7
$3
0.0
$6
100744
*3
$5
LPUSH
$15
list:article:id
$6
100744
*3
$5
LPUSH
$29
list:article:by:category:id:7
$6
100744
*4
$4
HSET
$22
hash:article:by:100292
$2
id
$6
100292
*4
$4
HSET
$22
hash:article:by:100292
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100292
$9
articleId
$4
2210
*4
$4
HSET
$22
hash:article:by:100292
$5
title
$80
jplogic之activiti整合案例（自定义流程引擎[非开源框架]待续）
*4
$4
HSET
$22
hash:article:by:100292
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100292
$8
labelIds
$13
[292,293,294]
*4
$4
HSET
$22
hash:article:by:100292
$6
digest
$233
Activiti 作为一个遵从 Apache 许可的工作流和业务流程管理开源平台，其核心是基于 Java
 的超快速、超稳定的 BPMN 2.0 流程引擎，强调流程服务的可嵌入性和可扩展性，同时更加...
*4
$4
HSET
$22
hash:article:by:100292
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100292
$7
content
$40
csdn/java/1_1_1_5_1504264516.815842.html
*4
$4
HSET
$22
hash:article:by:100292
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100292
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100292
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100292
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100292
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100292
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100292
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100292
$10
createTime
$13
1414800015000
*4
$4
HSET
$22
hash:article:by:100292
$11
releaseTime
$13
1414800015000
*4
$4
HSET
$22
hash:article:by:100292
$10
updateTime
$13
1414800015000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100292
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100292
*3
$5
LPUSH
$15
list:article:id
$6
100292
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100292
*4
$4
HSET
$22
hash:article:by:100288
$2
id
$6
100288
*4
$4
HSET
$22
hash:article:by:100288
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100288
$9
articleId
$4
2356
*4
$4
HSET
$22
hash:article:by:100288
$5
title
$59
菜鸟版JAVA设计模式-从抽象与实现说桥接模式
*4
$4
HSET
$22
hash:article:by:100288
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100288
$8
labelIds
$14
[53,89,12,290]
*4
$4
HSET
$22
hash:article:by:100288
$6
digest
$301
桥接模式，初学的时候其实很不理解为什么要把这个模式命名为桥接模式，脑海里突然联想到。其实我学习是一件比较痛苦的事情，因为我必须要知道来龙去脉才能学的进去，所以，很快我就对这个命名产生了兴趣，桥接？
嗯...
*4
$4
HSET
$22
hash:article:by:100288
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100288
$7
content
$39
csdn/java/1_0_1_0_1504264658.00462.html
*4
$4
HSET
$22
hash:article:by:100288
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100288
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100288
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100288
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100288
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100288
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100288
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100288
$10
createTime
$13
1413986426000
*4
$4
HSET
$22
hash:article:by:100288
$11
releaseTime
$13
1413986426000
*4
$4
HSET
$22
hash:article:by:100288
$10
updateTime
$13
1413986426000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100288
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100288
*3
$5
LPUSH
$15
list:article:id
$6
100288
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100288
*4
$4
HSET
$22
hash:article:by:100204
$2
id
$6
100204
*4
$4
HSET
$22
hash:article:by:100204
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100204
$9
articleId
$4
2294
*4
$4
HSET
$22
hash:article:by:100204
$5
title
$39
Java 实现解释器(Interpreter)模式
*4
$4
HSET
$22
hash:article:by:100204
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100204
$8
labelIds
$8
[12,182]
*4
$4
HSET
$22
hash:article:by:100204
$6
digest
$125
/**
 * 声明一个抽象的解释操作
 * @author stone
 *
 */
public interface Interpreter {
	
	public void interpret(C...
*4
$4
HSET
$22
hash:article:by:100204
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100204
$7
content
$40
csdn/java/1_0_2_2_1504264609.004558.html
*4
$4
HSET
$22
hash:article:by:100204
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100204
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100204
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100204
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100204
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100204
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100204
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100204
$10
createTime
$13
1413302430000
*4
$4
HSET
$22
hash:article:by:100204
$11
releaseTime
$13
1413302430000
*4
$4
HSET
$22
hash:article:by:100204
$10
updateTime
$13
1413302430000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100204
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100204
*3
$5
LPUSH
$15
list:article:id
$6
100204
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100204
*4
$4
HSET
$22
hash:article:by:100755
$2
id
$6
100755
*4
$4
HSET
$22
hash:article:by:100755
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100755
$9
articleId
$4
2357
*4
$4
HSET
$22
hash:article:by:100755
$5
title
$79
菜鸟版JAVA设计模式—适配器模式，装饰模式，代理模式异同
*4
$4
HSET
$22
hash:article:by:100755
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100755
$8
labelIds
$17
[18,12,77,493,39]
*4
$4
HSET
$22
hash:article:by:100755
$6
digest
$297
节前把3个设计模式的学习心得分享了一下，分别是适配器模式，装饰模式，代理模式。
但是似乎越写越有些迷糊，这三种模式都有着一些大同小异的地方，总是有些搞不清。
今天再重新学习下，把学习心得分享给大家一下...
*4
$4
HSET
$22
hash:article:by:100755
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100755
$7
content
$40
csdn/java/1_0_1_2_1504264659.896492.html
*4
$4
HSET
$22
hash:article:by:100755
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100755
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100755
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100755
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100755
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100755
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100755
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100755
$10
createTime
$13
1413277255000
*4
$4
HSET
$22
hash:article:by:100755
$11
releaseTime
$13
1413277255000
*4
$4
HSET
$22
hash:article:by:100755
$10
updateTime
$13
1413277255000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100755
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100755
*3
$5
LPUSH
$15
list:article:id
$6
100755
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100755
*4
$4
HSET
$22
hash:article:by:100383
$2
id
$6
100383
*4
$4
HSET
$22
hash:article:by:100383
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100383
$9
articleId
$4
2291
*4
$4
HSET
$22
hash:article:by:100383
$5
title
$36
Java 实现中介者(Mediator)模式
*4
$4
HSET
$22
hash:article:by:100383
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100383
$8
labelIds
$8
[12,373]
*4
$4
HSET
$22
hash:article:by:100383
$6
digest
$107
类图


public interface IMediator {

	public void createMediator();

	public void work();
}

/**
 ...
*4
$4
HSET
$22
hash:article:by:100383
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100383
$7
content
$40
csdn/java/1_0_2_1_1504264606.803499.html
*4
$4
HSET
$22
hash:article:by:100383
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100383
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100383
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100383
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100383
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100383
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100383
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100383
$10
createTime
$13
1413270036000
*4
$4
HSET
$22
hash:article:by:100383
$11
releaseTime
$13
1413270036000
*4
$4
HSET
$22
hash:article:by:100383
$10
updateTime
$13
1413270036000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100383
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100383
*3
$5
LPUSH
$15
list:article:id
$6
100383
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100383
*4
$4
HSET
$22
hash:article:by:100381
$2
id
$6
100381
*4
$4
HSET
$22
hash:article:by:100381
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100381
$9
articleId
$4
2289
*4
$4
HSET
$22
hash:article:by:100381
$5
title
$35
Java 实现访问者(Visitor)模式
*4
$4
HSET
$22
hash:article:by:100381
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100381
$8
labelIds
$8
[12,370]
*4
$4
HSET
$22
hash:article:by:100381
$6
digest
$105
interface Visitor {
	void visit(Gladiolus g);

	void visit(Chrysanthemum c);
}// concrete visitor		名...
*4
$4
HSET
$22
hash:article:by:100381
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100381
$7
content
$40
csdn/java/1_0_2_0_1504264605.677381.html
*4
$4
HSET
$22
hash:article:by:100381
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100381
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100381
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100381
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100381
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100381
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100381
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100381
$10
createTime
$13
1413259256000
*4
$4
HSET
$22
hash:article:by:100381
$11
releaseTime
$13
1413259256000
*4
$4
HSET
$22
hash:article:by:100381
$10
updateTime
$13
1413259256000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100381
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100381
*3
$5
LPUSH
$15
list:article:id
$6
100381
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100381
*4
$4
HSET
$22
hash:article:by:100304
$2
id
$6
100304
*4
$4
HSET
$22
hash:article:by:100304
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100304
$9
articleId
$4
2622
*4
$4
HSET
$22
hash:article:by:100304
$5
title
$30
Java 实现状态(State)模式
*4
$4
HSET
$22
hash:article:by:100304
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100304
$8
labelIds
$8
[12,307]
*4
$4
HSET
$22
hash:article:by:100304
$6
digest
$103
/**
 * @author stone
 */
public class WindowState {
	private String stateValue;
	
	public WindowStat...
*4
$4
HSET
$22
hash:article:by:100304
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100304
$7
content
$40
csdn/java/1_0_1_19_1504265108.13314.html
*4
$4
HSET
$22
hash:article:by:100304
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100304
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100304
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100304
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100304
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100304
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100304
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100304
$10
createTime
$13
1413237619000
*4
$4
HSET
$22
hash:article:by:100304
$11
releaseTime
$13
1413237619000
*4
$4
HSET
$22
hash:article:by:100304
$10
updateTime
$13
1413237619000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100304
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100304
*3
$5
LPUSH
$15
list:article:id
$6
100304
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100304
*4
$4
HSET
$22
hash:article:by:100193
$2
id
$6
100193
*4
$4
HSET
$22
hash:article:by:100193
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100193
$9
articleId
$4
2621
*4
$4
HSET
$22
hash:article:by:100193
$5
title
$35
Java 实现备忘录(Memento)模式
*4
$4
HSET
$22
hash:article:by:100193
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100193
$8
labelIds
$8
[12,175]
*4
$4
HSET
$22
hash:article:by:100193
$6
digest
$111
/**
 * 数据对象
 * @author stone
 *
 */
public class DataState {
	private String action;

	public void s...
*4
$4
HSET
$22
hash:article:by:100193
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100193
$7
content
$41
csdn/java/1_0_1_18_1504265107.188367.html
*4
$4
HSET
$22
hash:article:by:100193
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100193
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100193
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100193
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100193
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100193
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100193
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100193
$10
createTime
$13
1413230438000
*4
$4
HSET
$22
hash:article:by:100193
$11
releaseTime
$13
1413230438000
*4
$4
HSET
$22
hash:article:by:100193
$10
updateTime
$13
1413230438000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100193
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100193
*3
$5
LPUSH
$15
list:article:id
$6
100193
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100193
*4
$4
HSET
$22
hash:article:by:100208
$2
id
$6
100208
*4
$4
HSET
$22
hash:article:by:100208
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100208
$9
articleId
$4
2611
*4
$4
HSET
$22
hash:article:by:100208
$5
title
$32
Java 实现命令(Command)模式
*4
$4
HSET
$22
hash:article:by:100208
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100208
$8
labelIds
$8
[12,187]
*4
$4
HSET
$22
hash:article:by:100208
$6
digest
$107
类图


public interface ICommand {
	void execute();
}
public class ConcreteCommand implements ICommand...
*4
$4
HSET
$22
hash:article:by:100208
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100208
$7
content
$41
csdn/java/1_0_1_17_1504265096.898736.html
*4
$4
HSET
$22
hash:article:by:100208
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100208
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100208
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100208
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100208
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100208
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100208
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100208
$10
createTime
$13
1413194428000
*4
$4
HSET
$22
hash:article:by:100208
$11
releaseTime
$13
1413194428000
*4
$4
HSET
$22
hash:article:by:100208
$10
updateTime
$13
1413194428000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100208
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100208
*3
$5
LPUSH
$15
list:article:id
$6
100208
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100208
*4
$4
HSET
$22
hash:article:by:100708
$2
id
$6
100708
*4
$4
HSET
$22
hash:article:by:100708
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100708
$9
articleId
$4
2680
*4
$4
HSET
$22
hash:article:by:100708
$5
title
$31
Java设计模式博客全目录
*4
$4
HSET
$22
hash:article:by:100708
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100708
$8
labelIds
$19
[53,343,408,409,12]
*4
$4
HSET
$22
hash:article:by:100708
$6
digest
$299
今天来对这23种设计模式做个总结。咱使用设计模式的目的是为了可重用代码、让代码更容易被他人理解、保证代码可靠性，当然设计模式并不是万能的，项目中的实际问题还有具体分析。咱不能为了使用设计模式而使用，而...
*4
$4
HSET
$22
hash:article:by:100708
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100708
$7
content
$39
csdn/java/1_0_1_0_1504265278.74955.html
*4
$4
HSET
$22
hash:article:by:100708
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100708
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100708
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100708
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100708
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100708
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100708
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100708
$10
createTime
$13
1413162004000
*4
$4
HSET
$22
hash:article:by:100708
$11
releaseTime
$13
1413162004000
*4
$4
HSET
$22
hash:article:by:100708
$10
updateTime
$13
1413162004000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100708
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100708
*3
$5
LPUSH
$15
list:article:id
$6
100708
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100708
*4
$4
HSET
$22
hash:article:by:100451
$2
id
$6
100451
*4
$4
HSET
$22
hash:article:by:100451
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100451
$9
articleId
$4
2697
*4
$4
HSET
$22
hash:article:by:100451
$5
title
$69
Java设计模式菜鸟系列(二十三)访问者模式建模与实现
*4
$4
HSET
$22
hash:article:by:100451
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100451
$8
labelIds
$19
[53,408,343,409,12]
*4
$4
HSET
$22
hash:article:by:100451
$6
digest
$285
访问者模式(Visitor)：把数据结构和作用于结构上的操作解耦合，使得操作集合可相对自由地演化。访问者模式适用于数据结构相对稳定而算法又容易变化的系统。访问者模式的优点是增加操作很容易，因为增加操作...
*4
$4
HSET
$22
hash:article:by:100451
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100451
$7
content
$40
csdn/java/1_0_1_1_1504265296.129218.html
*4
$4
HSET
$22
hash:article:by:100451
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100451
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100451
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100451
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100451
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100451
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100451
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100451
$10
createTime
$13
1413154836000
*4
$4
HSET
$22
hash:article:by:100451
$11
releaseTime
$13
1413154836000
*4
$4
HSET
$22
hash:article:by:100451
$10
updateTime
$13
1413154836000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100451
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100451
*3
$5
LPUSH
$15
list:article:id
$6
100451
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100451
*4
$4
HSET
$22
hash:article:by:100433
$2
id
$6
100433
*4
$4
HSET
$22
hash:article:by:100433
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100433
$9
articleId
$4
2698
*4
$4
HSET
$22
hash:article:by:100433
$5
title
$69
Java设计模式菜鸟系列(二十二)中介者模式建模与实现
*4
$4
HSET
$22
hash:article:by:100433
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100433
$8
labelIds
$19
[53,408,343,12,409]
*4
$4
HSET
$22
hash:article:by:100433
$6
digest
$275
中介者模式(Mediator)：主要用来降低类与类之间的耦合的，因为如果类与类之间有依赖关系的话，不利于功能的拓展和维护，因为只要修改一个对象，其它关联的对象都得进行修改。
中介者模式只需关心和Med...
*4
$4
HSET
$22
hash:article:by:100433
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100433
$7
content
$40
csdn/java/1_0_1_2_1504265297.113574.html
*4
$4
HSET
$22
hash:article:by:100433
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100433
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100433
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100433
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100433
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100433
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100433
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100433
$10
createTime
$13
1413154802000
*4
$4
HSET
$22
hash:article:by:100433
$11
releaseTime
$13
1413154802000
*4
$4
HSET
$22
hash:article:by:100433
$10
updateTime
$13
1413154802000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100433
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100433
*3
$5
LPUSH
$15
list:article:id
$6
100433
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100433
*4
$4
HSET
$22
hash:article:by:100429
$2
id
$6
100429
*4
$4
HSET
$22
hash:article:by:100429
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100429
$9
articleId
$4
2681
*4
$4
HSET
$22
hash:article:by:100429
$5
title
$66
Java设计模式菜鸟系列(二十一)享元模式建模与实现
*4
$4
HSET
$22
hash:article:by:100429
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100429
$8
labelIds
$19
[53,408,343,12,409]
*4
$4
HSET
$22
hash:article:by:100429
$6
digest
$283
享元模式（Flyweight）：运用共享的技术有效地支持大量细粒度的对象。主要目的是实现对象的共享，即共享池，当系统中对象多的时候可以减少内存的开销。在某种程度上，你可以把单例看成是享元的一种特例。
...
*4
$4
HSET
$22
hash:article:by:100429
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100429
$7
content
$40
csdn/java/1_0_1_3_1504265279.798814.html
*4
$4
HSET
$22
hash:article:by:100429
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100429
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100429
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100429
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100429
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100429
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100429
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100429
$10
createTime
$13
1413147627000
*4
$4
HSET
$22
hash:article:by:100429
$11
releaseTime
$13
1413147627000
*4
$4
HSET
$22
hash:article:by:100429
$10
updateTime
$13
1413147627000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100429
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100429
*3
$5
LPUSH
$15
list:article:id
$6
100429
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100429
*4
$4
HSET
$22
hash:article:by:100426
$2
id
$6
100426
*4
$4
HSET
$22
hash:article:by:100426
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100426
$9
articleId
$4
2682
*4
$4
HSET
$22
hash:article:by:100426
$5
title
$66
Java设计模式菜鸟系列(二十)解释器模式建模与实现
*4
$4
HSET
$22
hash:article:by:100426
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100426
$8
labelIds
$19
[53,408,343,12,409]
*4
$4
HSET
$22
hash:article:by:100426
$6
digest
$263
解释器模式(Interpreter)：它定义了对象与对象之间进行某种操作之后会得到什么值。一般主要应用在OOP开发中的编译器

的开发中，所以适用面比较窄。

解释器模式用来做各种各样的解释器，如正则...
*4
$4
HSET
$22
hash:article:by:100426
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100426
$7
content
$40
csdn/java/1_0_1_4_1504265280.818141.html
*4
$4
HSET
$22
hash:article:by:100426
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100426
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100426
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100426
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100426
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100426
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100426
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100426
$10
createTime
$13
1413129617000
*4
$4
HSET
$22
hash:article:by:100426
$11
releaseTime
$13
1413129617000
*4
$4
HSET
$22
hash:article:by:100426
$10
updateTime
$13
1413129617000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100426
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100426
*3
$5
LPUSH
$15
list:article:id
$6
100426
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100426
*4
$4
HSET
$22
hash:article:by:100500
$2
id
$6
100500
*4
$4
HSET
$22
hash:article:by:100500
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100500
$9
articleId
$4
2699
*4
$4
HSET
$22
hash:article:by:100500
$5
title
$66
Java设计模式菜鸟系列(十九)备忘录模式建模与实现
*4
$4
HSET
$22
hash:article:by:100500
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100500
$8
labelIds
$19
[53,408,343,12,409]
*4
$4
HSET
$22
hash:article:by:100500
$6
digest
$265
备忘录模式(Memento)： 主要目的是保存一个对象的某个状态，以便在适当的时候恢复对象。

Memento设计模式用来备份一个对象的当前状态，当需要的时候，用这个备份来恢复这个对象在某一个时刻的状...
*4
$4
HSET
$22
hash:article:by:100500
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100500
$7
content
$40
csdn/java/1_0_1_5_1504265298.139207.html
*4
$4
HSET
$22
hash:article:by:100500
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100500
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100500
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100500
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100500
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100500
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100500
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100500
$10
createTime
$13
1413126021000
*4
$4
HSET
$22
hash:article:by:100500
$11
releaseTime
$13
1413126021000
*4
$4
HSET
$22
hash:article:by:100500
$10
updateTime
$13
1413126021000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100500
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100500
*3
$5
LPUSH
$15
list:article:id
$6
100500
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100500
*4
$4
HSET
$22
hash:article:by:100428
$2
id
$6
100428
*4
$4
HSET
$22
hash:article:by:100428
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100428
$9
articleId
$4
2695
*4
$4
HSET
$22
hash:article:by:100428
$5
title
$66
Java设计模式菜鸟系列(十八)责任链模式建模与实现
*4
$4
HSET
$22
hash:article:by:100428
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100428
$8
labelIds
$19
[53,408,343,12,409]
*4
$4
HSET
$22
hash:article:by:100428
$6
digest
$255
责任链模式(ChainOfResponsibility)： 有多个对象，每个对象持有下一个对象的引用，形成一条链，请求在这条链上传递，直到某一对象决定处理该请求，但是发出者并不清楚最终哪个对象会处理该...
*4
$4
HSET
$22
hash:article:by:100428
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100428
$7
content
$40
csdn/java/1_0_1_6_1504265294.162423.html
*4
$4
HSET
$22
hash:article:by:100428
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100428
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100428
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100428
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100428
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100428
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100428
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100428
$10
createTime
$13
1413122416000
*4
$4
HSET
$22
hash:article:by:100428
$11
releaseTime
$13
1413122416000
*4
$4
HSET
$22
hash:article:by:100428
$10
updateTime
$13
1413122416000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100428
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100428
*3
$5
LPUSH
$15
list:article:id
$6
100428
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100428
*4
$4
HSET
$22
hash:article:by:100496
$2
id
$6
100496
*4
$4
HSET
$22
hash:article:by:100496
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100496
$9
articleId
$4
2694
*4
$4
HSET
$22
hash:article:by:100496
$5
title
$63
Java设计模式菜鸟系列(十七)桥接模式建模与实现
*4
$4
HSET
$22
hash:article:by:100496
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100496
$8
labelIds
$19
[53,408,343,12,409]
*4
$4
HSET
$22
hash:article:by:100496
$6
digest
$221
桥接模式(Bridge)： 把事物和其具体实现分开(抽象化与实现化解耦)，使他们可以各自独立的变化。
假设你的电脑是双系统(WinXP、Win7)，而且都安装了mysql、oracle、sqlserv...
*4
$4
HSET
$22
hash:article:by:100496
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100496
$7
content
$40
csdn/java/1_0_1_7_1504265292.935912.html
*4
$4
HSET
$22
hash:article:by:100496
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100496
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100496
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100496
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100496
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100496
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100496
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100496
$10
createTime
$13
1413072020000
*4
$4
HSET
$22
hash:article:by:100496
$11
releaseTime
$13
1413072020000
*4
$4
HSET
$22
hash:article:by:100496
$10
updateTime
$13
1413072020000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100496
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100496
*3
$5
LPUSH
$15
list:article:id
$6
100496
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100496
*4
$4
HSET
$22
hash:article:by:100422
$2
id
$6
100422
*4
$4
HSET
$22
hash:article:by:100422
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100422
$9
articleId
$4
2693
*4
$4
HSET
$22
hash:article:by:100422
$5
title
$63
Java设计模式菜鸟系列(十六)原型模式建模与实现
*4
$4
HSET
$22
hash:article:by:100422
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100422
$8
labelIds
$19
[53,408,12,343,409]
*4
$4
HSET
$22
hash:article:by:100422
$6
digest
$279
原型模式(Prototype)：该模式的思想就是将一个对象作为原型，对其进行复制、克隆，产生一个和原对象类似的新对象。而这里的复制有两种：浅复制、深复制。
浅复制：将一个对象复制后，基本数据类型的变量...
*4
$4
HSET
$22
hash:article:by:100422
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100422
$7
content
$40
csdn/java/1_0_1_8_1504265291.925973.html
*4
$4
HSET
$22
hash:article:by:100422
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100422
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100422
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100422
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100422
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100422
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100422
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100422
$10
createTime
$13
1413043245000
*4
$4
HSET
$22
hash:article:by:100422
$11
releaseTime
$13
1413043245000
*4
$4
HSET
$22
hash:article:by:100422
$10
updateTime
$13
1413043245000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100422
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100422
*3
$5
LPUSH
$15
list:article:id
$6
100422
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100422
*4
$4
HSET
$22
hash:article:by:100387
$2
id
$6
100387
*4
$4
HSET
$22
hash:article:by:100387
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100387
$9
articleId
$4
2624
*4
$4
HSET
$22
hash:article:by:100387
$5
title
$51
Java 实现责任链(Chain of Responsibility)模式
*4
$4
HSET
$22
hash:article:by:100387
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100387
$8
labelIds
$8
[12,378]
*4
$4
HSET
$22
hash:article:by:100387
$6
digest
$115
类图


/**
 * 抽象责任
 * @author stone
 *
 */
public abstract class IFilter {
	private IFilter successor;...
*4
$4
HSET
$22
hash:article:by:100387
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100387
$7
content
$41
csdn/java/1_0_1_16_1504265110.229479.html
*4
$4
HSET
$22
hash:article:by:100387
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100387
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100387
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100387
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100387
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100387
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100387
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100387
$10
createTime
$13
1413043226000
*4
$4
HSET
$22
hash:article:by:100387
$11
releaseTime
$13
1413043226000
*4
$4
HSET
$22
hash:article:by:100387
$10
updateTime
$13
1413043226000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100387
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100387
*3
$5
LPUSH
$15
list:article:id
$6
100387
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100387
*4
$4
HSET
$22
hash:article:by:100325
$2
id
$6
100325
*4
$4
HSET
$22
hash:article:by:100325
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100325
$9
articleId
$4
2623
*4
$4
HSET
$22
hash:article:by:100325
$5
title
$36
Java 实现迭代器(Iterator)模式
*4
$4
HSET
$22
hash:article:by:100325
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100325
$8
labelIds
$8
[12,330]
*4
$4
HSET
$22
hash:article:by:100325
$6
digest
$137
类图


/**
 * 自定义集合接口, 类似java.util.Collection
 * 用于数据存储
 * @author stone
 *
 */
public interface IColl...
*4
$4
HSET
$22
hash:article:by:100325
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100325
$7
content
$41
csdn/java/1_0_1_15_1504265109.226014.html
*4
$4
HSET
$22
hash:article:by:100325
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100325
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100325
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100325
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100325
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100325
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100325
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100325
$10
createTime
$13
1413025221000
*4
$4
HSET
$22
hash:article:by:100325
$11
releaseTime
$13
1413025221000
*4
$4
HSET
$22
hash:article:by:100325
$10
updateTime
$13
1413025221000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100325
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100325
*3
$5
LPUSH
$15
list:article:id
$6
100325
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100325
*4
$4
HSET
$22
hash:article:by:100440
$2
id
$6
100440
*4
$4
HSET
$22
hash:article:by:100440
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100440
$9
articleId
$4
2620
*4
$4
HSET
$22
hash:article:by:100440
$5
title
$36
Java 实现观察者(Observer)模式
*4
$4
HSET
$22
hash:article:by:100440
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100440
$8
labelIds
$8
[12,420]
*4
$4
HSET
$22
hash:article:by:100440
$6
digest
$131
1. Java自带的实现
类图


/**
 * 观察目标 继承自 java.util.Observable
 * @author stone
 *
 */
public class Upda...
*4
$4
HSET
$22
hash:article:by:100440
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100440
$7
content
$41
csdn/java/1_0_1_14_1504265106.039029.html
*4
$4
HSET
$22
hash:article:by:100440
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100440
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100440
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100440
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100440
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100440
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100440
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100440
$10
createTime
$13
1412964011000
*4
$4
HSET
$22
hash:article:by:100440
$11
releaseTime
$13
1412964011000
*4
$4
HSET
$22
hash:article:by:100440
$10
updateTime
$13
1412964011000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100440
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100440
*3
$5
LPUSH
$15
list:article:id
$6
100440
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100440
*4
$4
HSET
$22
hash:article:by:100188
$2
id
$6
100188
*4
$4
HSET
$22
hash:article:by:100188
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100188
$9
articleId
$4
2609
*4
$4
HSET
$22
hash:article:by:100188
$5
title
$45
Java 实现模板方法(TemplateMethod)模式
*4
$4
HSET
$22
hash:article:by:100188
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100188
$8
labelIds
$8
[12,171]
*4
$4
HSET
$22
hash:article:by:100188
$6
digest
$133
类图


/**
 * 业务流程模板，提供基本框架
 * @author stone
 *
 */
public abstract class BaseTemplate {
	
	public ...
*4
$4
HSET
$22
hash:article:by:100188
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100188
$7
content
$41
csdn/java/1_0_1_13_1504265094.778933.html
*4
$4
HSET
$22
hash:article:by:100188
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100188
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100188
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100188
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100188
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100188
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100188
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100188
$10
createTime
$13
1412949634000
*4
$4
HSET
$22
hash:article:by:100188
$11
releaseTime
$13
1412949634000
*4
$4
HSET
$22
hash:article:by:100188
$10
updateTime
$13
1412949634000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100188
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100188
*3
$5
LPUSH
$15
list:article:id
$6
100188
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100188
*4
$4
HSET
$22
hash:article:by:100275
$2
id
$6
100275
*4
$4
HSET
$22
hash:article:by:100275
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100275
$9
articleId
$4
2197
*4
$4
HSET
$22
hash:article:by:100275
$5
title
$51
国内O2O运营模式逐渐改变我们生活方式
*4
$4
HSET
$22
hash:article:by:100275
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100275
$8
labelIds
$13
[275,276,277]
*4
$4
HSET
$22
hash:article:by:100275
$6
digest
$45
最近看了一篇关于O2O的文章，让我
*4
$4
HSET
$22
hash:article:by:100275
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100275
$7
content
$40
csdn/java/1_1_1_6_1504264510.614827.html
*4
$4
HSET
$22
hash:article:by:100275
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100275
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100275
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100275
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100275
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100275
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100275
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100275
$10
createTime
$13
1412946021000
*4
$4
HSET
$22
hash:article:by:100275
$11
releaseTime
$13
1412946021000
*4
$4
HSET
$22
hash:article:by:100275
$10
updateTime
$13
1412946021000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100275
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100275
*3
$5
LPUSH
$15
list:article:id
$6
100275
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100275
*4
$4
HSET
$22
hash:article:by:100211
$2
id
$6
100211
*4
$4
HSET
$22
hash:article:by:100211
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100211
$9
articleId
$4
2610
*4
$4
HSET
$22
hash:article:by:100211
$5
title
$34
Java 实现享元(Flyweight)模式
*4
$4
HSET
$22
hash:article:by:100211
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100211
$8
labelIds
$8
[12,189]
*4
$4
HSET
$22
hash:article:by:100211
$6
digest
$107
/**
 * 字母
 * @author stone
 *
 */
public class Letter {

	private String name;

	public Letter(Strin...
*4
$4
HSET
$22
hash:article:by:100211
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100211
$7
content
$41
csdn/java/1_0_1_11_1504265095.991994.html
*4
$4
HSET
$22
hash:article:by:100211
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100211
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100211
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100211
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100211
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100211
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100211
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100211
$10
createTime
$13
1412938813000
*4
$4
HSET
$22
hash:article:by:100211
$11
releaseTime
$13
1412938813000
*4
$4
HSET
$22
hash:article:by:100211
$10
updateTime
$13
1412938813000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100211
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100211
*3
$5
LPUSH
$15
list:article:id
$6
100211
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100211
*4
$4
HSET
$22
hash:article:by:100377
$2
id
$6
100377
*4
$4
HSET
$22
hash:article:by:100377
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100377
$9
articleId
$4
2608
*4
$4
HSET
$22
hash:article:by:100377
$5
title
$33
Java 实现策略(Strategy)模式
*4
$4
HSET
$22
hash:article:by:100377
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100377
$8
labelIds
$8
[12,363]
*4
$4
HSET
$22
hash:article:by:100377
$6
digest
$181
/**
 * 策略模式：针对同一命令(或行为),不同的策略做不同的动作
 *  商品促销
 *  本类为：收取现金的类
 *  
 *  @author stone
 */
public interf...
*4
$4
HSET
$22
hash:article:by:100377
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100377
$7
content
$41
csdn/java/1_0_1_12_1504265093.743721.html
*4
$4
HSET
$22
hash:article:by:100377
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100377
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100377
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100377
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100377
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100377
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100377
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100377
$10
createTime
$13
1412924416000
*4
$4
HSET
$22
hash:article:by:100377
$11
releaseTime
$13
1412924416000
*4
$4
HSET
$22
hash:article:by:100377
$10
updateTime
$13
1412924416000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100377
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100377
*3
$5
LPUSH
$15
list:article:id
$6
100377
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100377
*4
$4
HSET
$22
hash:article:by:100290
$2
id
$6
100290
*4
$4
HSET
$22
hash:article:by:100290
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100290
$9
articleId
$4
2607
*4
$4
HSET
$22
hash:article:by:100290
$5
title
$34
Java 实现组合(Composite)模式
*4
$4
HSET
$22
hash:article:by:100290
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100290
$8
labelIds
$8
[12,291]
*4
$4
HSET
$22
hash:article:by:100290
$6
digest
$119
类图


/**
 * 树	整体
 * 
 * @author stone
 * 
 */
public class Tree {
	private TreeNode root; //根节点

	pu...
*4
$4
HSET
$22
hash:article:by:100290
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100290
$7
content
$41
csdn/java/1_0_1_10_1504265092.741277.html
*4
$4
HSET
$22
hash:article:by:100290
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100290
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100290
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100290
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100290
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100290
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100290
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100290
$10
createTime
$13
1412877630000
*4
$4
HSET
$22
hash:article:by:100290
$11
releaseTime
$13
1412877630000
*4
$4
HSET
$22
hash:article:by:100290
$10
updateTime
$13
1412877630000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100290
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100290
*3
$5
LPUSH
$15
list:article:id
$6
100290
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100290
*4
$4
HSET
$22
hash:article:by:100627
$2
id
$6
100627
*4
$4
HSET
$22
hash:article:by:100627
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100627
$9
articleId
$4
2614
*4
$4
HSET
$22
hash:article:by:100627
$5
title
$31
Java 实现桥接(Bridge)模式
*4
$4
HSET
$22
hash:article:by:100627
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100627
$8
labelIds
$8
[12,581]
*4
$4
HSET
$22
hash:article:by:100627
$6
digest
$113
/**
 * 手机壳、套
 * @author stone
 *
 */
public abstract class BaseCellphoneShell {
	public abstract voi...
*4
$4
HSET
$22
hash:article:by:100627
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100627
$7
content
$40
csdn/java/1_0_1_9_1504265099.954924.html
*4
$4
HSET
$22
hash:article:by:100627
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100627
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100627
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100627
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100627
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100627
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100627
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100627
$10
createTime
$13
1412809249000
*4
$4
HSET
$22
hash:article:by:100627
$11
releaseTime
$13
1412809249000
*4
$4
HSET
$22
hash:article:by:100627
$10
updateTime
$13
1412809249000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100627
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100627
*3
$5
LPUSH
$15
list:article:id
$6
100627
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100627
*4
$4
HSET
$22
hash:article:by:100174
$2
id
$6
100174
*4
$4
HSET
$22
hash:article:by:100174
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100174
$9
articleId
$4
2613
*4
$4
HSET
$22
hash:article:by:100174
$5
title
$31
java 实现外观(Facade)模式
*4
$4
HSET
$22
hash:article:by:100174
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100174
$8
labelIds
$8
[12,157]
*4
$4
HSET
$22
hash:article:by:100174
$6
digest
$107
/**
 * 角色
 * @author stone
 *
 */
public class Actor {
	public Actor(String name) {
		System.out.pri...
*4
$4
HSET
$22
hash:article:by:100174
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100174
$7
content
$40
csdn/java/1_0_1_8_1504265098.970246.html
*4
$4
HSET
$22
hash:article:by:100174
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100174
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100174
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100174
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100174
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100174
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100174
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100174
$10
createTime
$13
1412787621000
*4
$4
HSET
$22
hash:article:by:100174
$11
releaseTime
$13
1412787621000
*4
$4
HSET
$22
hash:article:by:100174
$10
updateTime
$13
1412787621000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100174
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100174
*3
$5
LPUSH
$15
list:article:id
$6
100174
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100174
*4
$4
HSET
$22
hash:article:by:100266
$2
id
$6
100266
*4
$4
HSET
$22
hash:article:by:100266
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100266
$9
articleId
$4
2612
*4
$4
HSET
$22
hash:article:by:100266
$5
title
$30
Java 实现代理(Proxy)模式
*4
$4
HSET
$22
hash:article:by:100266
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100266
$8
labelIds
$8
[12,264]
*4
$4
HSET
$22
hash:article:by:100266
$6
digest
$121
/**
 * 游戏者接口
 * @author stone
 * 
 */
public interface IGamePlayer {

	// 登录游戏
	public void login(St...
*4
$4
HSET
$22
hash:article:by:100266
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100266
$7
content
$40
csdn/java/1_0_1_7_1504265097.923952.html
*4
$4
HSET
$22
hash:article:by:100266
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100266
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100266
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100266
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100266
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100266
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100266
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100266
$10
createTime
$13
1412784015000
*4
$4
HSET
$22
hash:article:by:100266
$11
releaseTime
$13
1412784015000
*4
$4
HSET
$22
hash:article:by:100266
$10
updateTime
$13
1412784015000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100266
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100266
*3
$5
LPUSH
$15
list:article:id
$6
100266
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100266
*4
$4
HSET
$22
hash:article:by:100207
$2
id
$6
100207
*4
$4
HSET
$22
hash:article:by:100207
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100207
$9
articleId
$4
2606
*4
$4
HSET
$22
hash:article:by:100207
$5
title
$37
Java 实现装饰者(Decorator)模式
*4
$4
HSET
$22
hash:article:by:100207
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100207
$8
labelIds
$8
[12,186]
*4
$4
HSET
$22
hash:article:by:100207
$6
digest
$153
在Java中，io包下的很多类就是典型的装饰者模式的体现，如：


new BufferedOutputStream(OutputStream out)

new BufferedInputStrea...
*4
$4
HSET
$22
hash:article:by:100207
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100207
$7
content
$40
csdn/java/1_0_1_6_1504265091.696365.html
*4
$4
HSET
$22
hash:article:by:100207
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100207
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100207
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100207
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100207
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100207
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100207
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100207
$10
createTime
$13
1412780442000
*4
$4
HSET
$22
hash:article:by:100207
$11
releaseTime
$13
1412780442000
*4
$4
HSET
$22
hash:article:by:100207
$10
updateTime
$13
1412780442000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100207
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100207
*3
$5
LPUSH
$15
list:article:id
$6
100207
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100207
*4
$4
HSET
$22
hash:article:by:100509
$2
id
$6
100509
*4
$4
HSET
$22
hash:article:by:100509
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100509
$9
articleId
$4
2618
*4
$4
HSET
$22
hash:article:by:100509
$5
title
$35
Java 实现适配器(Adapter)模式
*4
$4
HSET
$22
hash:article:by:100509
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100509
$8
labelIds
$5
[464]
*4
$4
HSET
$22
hash:article:by:100509
$6
digest
$303
平时我们会经常碰到这样的情况，有了两个现成的类，它们之间没有什么联系，但是我们现在既想用其中一个类的方法，同时也想用另外一个类的方法。有一个解决方法是，修改它们各自的接口，但是这是我们最不愿意看到的。...
*4
$4
HSET
$22
hash:article:by:100509
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100509
$7
content
$40
csdn/java/1_0_1_5_1504265104.044177.html
*4
$4
HSET
$22
hash:article:by:100509
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100509
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100509
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100509
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100509
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100509
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100509
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100509
$10
createTime
$13
1412776821000
*4
$4
HSET
$22
hash:article:by:100509
$11
releaseTime
$13
1412776821000
*4
$4
HSET
$22
hash:article:by:100509
$10
updateTime
$13
1412776821000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100509
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100509
*3
$5
LPUSH
$15
list:article:id
$6
100509
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100509
*4
$4
HSET
$22
hash:article:by:100192
$2
id
$6
100192
*4
$4
HSET
$22
hash:article:by:100192
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100192
$9
articleId
$4
2617
*4
$4
HSET
$22
hash:article:by:100192
$5
title
$34
Java 实现原型(Prototype)模式
*4
$4
HSET
$22
hash:article:by:100192
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100192
$8
labelIds
$8
[12,174]
*4
$4
HSET
$22
hash:article:by:100192
$6
digest
$109
public class BaseSpoon implements Cloneable {//spoon 匙, 调羹 
	String name;

	public String getName() ...
*4
$4
HSET
$22
hash:article:by:100192
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100192
$7
content
$40
csdn/java/1_0_1_4_1504265103.047093.html
*4
$4
HSET
$22
hash:article:by:100192
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100192
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100192
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100192
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100192
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100192
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100192
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100192
$10
createTime
$13
1412762435000
*4
$4
HSET
$22
hash:article:by:100192
$11
releaseTime
$13
1412762435000
*4
$4
HSET
$22
hash:article:by:100192
$10
updateTime
$13
1412762435000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100192
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100192
*3
$5
LPUSH
$15
list:article:id
$6
100192
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100192
*4
$4
HSET
$22
hash:article:by:100647
$2
id
$6
100647
*4
$4
HSET
$22
hash:article:by:100647
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100647
$9
articleId
$4
2619
*4
$4
HSET
$22
hash:article:by:100647
$5
title
$35
Java 实现建造者(Builder)模式
*4
$4
HSET
$22
hash:article:by:100647
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100647
$8
labelIds
$8
[12,600]
*4
$4
HSET
$22
hash:article:by:100647
$6
digest
$201
建造者(Builder)模式是创建型模式，创建了一个对外隐藏创建过程的产品，使用组合的方式，由指挥者(Director)来决定建造的流程

public interface Builder {
	vo...
*4
$4
HSET
$22
hash:article:by:100647
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100647
$7
content
$40
csdn/java/1_0_1_3_1504265105.106889.html
*4
$4
HSET
$22
hash:article:by:100647
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100647
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100647
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100647
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100647
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100647
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100647
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100647
$10
createTime
$13
1412758858000
*4
$4
HSET
$22
hash:article:by:100647
$11
releaseTime
$13
1412758858000
*4
$4
HSET
$22
hash:article:by:100647
$10
updateTime
$13
1412758858000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100647
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100647
*3
$5
LPUSH
$15
list:article:id
$6
100647
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100647
*4
$4
HSET
$22
hash:article:by:100506
$2
id
$6
100506
*4
$4
HSET
$22
hash:article:by:100506
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100506
$9
articleId
$4
2691
*4
$4
HSET
$22
hash:article:by:100506
$5
title
$66
Java设计模式菜鸟系列(十五)建造者模式建模与实现
*4
$4
HSET
$22
hash:article:by:100506
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100506
$8
labelIds
$19
[53,408,12,343,409]
*4
$4
HSET
$22
hash:article:by:100506
$6
digest
$283
建造者模式(Builder)：工厂类模式提供的是创建单个类的模式，而建造者模式则是将各种产品集中起来进行管理。简单起见，就拿之前的工厂方法模式进行修改一下就可以得到建造者模式。
建造者模式将很多功能集...
*4
$4
HSET
$22
hash:article:by:100506
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100506
$7
content
$39
csdn/java/1_0_1_9_1504265289.93602.html
*4
$4
HSET
$22
hash:article:by:100506
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100506
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100506
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100506
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100506
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100506
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100506
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100506
$10
createTime
$13
1412719232000
*4
$4
HSET
$22
hash:article:by:100506
$11
releaseTime
$13
1412719232000
*4
$4
HSET
$22
hash:article:by:100506
$10
updateTime
$13
1412719232000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100506
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100506
*3
$5
LPUSH
$15
list:article:id
$6
100506
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100506
*4
$4
HSET
$22
hash:article:by:100649
$2
id
$6
100649
*4
$4
HSET
$22
hash:article:by:100649
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100649
$9
articleId
$4
2692
*4
$4
HSET
$22
hash:article:by:100649
$5
title
$63
Java设计模式菜鸟系列(十四)代理模式建模与实现
*4
$4
HSET
$22
hash:article:by:100649
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100649
$8
labelIds
$18
[53,12,343,39,408]
*4
$4
HSET
$22
hash:article:by:100649
$6
digest
$281
代理模式(Composite)：代理模式其实就是多一个代理类出来，替原对象进行一些操作。比如咱有的时候打官司需要请律师，因为律师在法律方面有专长，可以替咱进行操作表达咱的想法，这就是代理的意思。代理模...
*4
$4
HSET
$22
hash:article:by:100649
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100649
$7
content
$40
csdn/java/1_0_1_10_1504265290.97938.html
*4
$4
HSET
$22
hash:article:by:100649
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100649
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100649
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100649
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100649
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100649
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100649
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100649
$10
createTime
$13
1412704841000
*4
$4
HSET
$22
hash:article:by:100649
$11
releaseTime
$13
1412704841000
*4
$4
HSET
$22
hash:article:by:100649
$10
updateTime
$13
1412704841000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100649
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100649
*3
$5
LPUSH
$15
list:article:id
$6
100649
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100649
*4
$4
HSET
$22
hash:article:by:100495
$2
id
$6
100495
*4
$4
HSET
$22
hash:article:by:100495
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100495
$9
articleId
$4
2690
*4
$4
HSET
$22
hash:article:by:100495
$5
title
$63
Java设计模式菜鸟系列(十三)状态模式建模与实现
*4
$4
HSET
$22
hash:article:by:100495
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100495
$8
labelIds
$19
[53,12,343,409,408]
*4
$4
HSET
$22
hash:article:by:100495
$6
digest
$179
转载请注明出处：http://blog.csdn.net/lhy_ycu/article/details/39828653

状态模式(State)：允许对象在内部状态改变时改变它的行为，对象看起来好...
*4
$4
HSET
$22
hash:article:by:100495
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100495
$7
content
$41
csdn/java/1_0_1_11_1504265288.999633.html
*4
$4
HSET
$22
hash:article:by:100495
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100495
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100495
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100495
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100495
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100495
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100495
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100495
$10
createTime
$13
1412611222000
*4
$4
HSET
$22
hash:article:by:100495
$11
releaseTime
$13
1412611222000
*4
$4
HSET
$22
hash:article:by:100495
$10
updateTime
$13
1412611222000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100495
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100495
*3
$5
LPUSH
$15
list:article:id
$6
100495
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100495
*4
$4
HSET
$22
hash:article:by:100682
$2
id
$6
100682
*4
$4
HSET
$22
hash:article:by:100682
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100682
$9
articleId
$4
2683
*4
$4
HSET
$22
hash:article:by:100682
$5
title
$63
Java设计模式菜鸟系列(十二)组合模式建模与实现
*4
$4
HSET
$22
hash:article:by:100682
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100682
$8
labelIds
$19
[12,53,409,408,343]
*4
$4
HSET
$22
hash:article:by:100682
$6
digest
$169
转载请注明出处：http://blog.csdn.net/lhy_ycu/article/details/39828653

组合模式(Composite)：组合模式有时又叫部分-整体模式，将对象组合...
*4
$4
HSET
$22
hash:article:by:100682
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100682
$7
content
$41
csdn/java/1_0_1_12_1504265281.772597.html
*4
$4
HSET
$22
hash:article:by:100682
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100682
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100682
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100682
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100682
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100682
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100682
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100682
$10
createTime
$13
1412607611000
*4
$4
HSET
$22
hash:article:by:100682
$11
releaseTime
$13
1412607611000
*4
$4
HSET
$22
hash:article:by:100682
$10
updateTime
$13
1412607611000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100682
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100682
*3
$5
LPUSH
$15
list:article:id
$6
100682
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100682
*4
$4
HSET
$22
hash:article:by:100655
$2
id
$6
100655
*4
$4
HSET
$22
hash:article:by:100655
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100655
$9
articleId
$4
2696
*4
$4
HSET
$22
hash:article:by:100655
$5
title
$66
Java设计模式菜鸟系列(十一)迭代器模式建模与实现
*4
$4
HSET
$22
hash:article:by:100655
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100655
$8
labelIds
$19
[12,408,53,343,409]
*4
$4
HSET
$22
hash:article:by:100655
$6
digest
$173
转载请注明出处：http://blog.csdn.net/lhy_ycu/article/details/39807741

迭代器模式(Iterator)：提供了一种方法顺序访问一个聚合对象中的各个...
*4
$4
HSET
$22
hash:article:by:100655
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100655
$7
content
$40
csdn/java/1_0_1_13_1504265295.45347.html
*4
$4
HSET
$22
hash:article:by:100655
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100655
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100655
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100655
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100655
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100655
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100655
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100655
$10
createTime
$13
1412600428000
*4
$4
HSET
$22
hash:article:by:100655
$11
releaseTime
$13
1412600428000
*4
$4
HSET
$22
hash:article:by:100655
$10
updateTime
$13
1412600428000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100655
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100655
*3
$5
LPUSH
$15
list:article:id
$6
100655
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100655
*4
$4
HSET
$22
hash:article:by:100446
$2
id
$6
100446
*4
$4
HSET
$22
hash:article:by:100446
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100446
$9
articleId
$4
2689
*4
$4
HSET
$22
hash:article:by:100446
$5
title
$66
Java设计模式菜鸟系列(十)模板方法模式建模与实现
*4
$4
HSET
$22
hash:article:by:100446
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100446
$8
labelIds
$19
[12,408,53,343,409]
*4
$4
HSET
$22
hash:article:by:100446
$6
digest
$269
模板方法模式(Template Method)：在一个方法中定义了一个算法的骨架，而将一些步骤延迟到子类中。模板方法使得子类可以再不改变算法结构的情况下，重新定义算法中的某些步骤。简而言之：模板方法定...
*4
$4
HSET
$22
hash:article:by:100446
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100446
$7
content
$41
csdn/java/1_0_1_14_1504265288.202563.html
*4
$4
HSET
$22
hash:article:by:100446
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100446
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100446
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100446
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100446
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100446
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100446
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100446
$10
createTime
$13
1412539247000
*4
$4
HSET
$22
hash:article:by:100446
$11
releaseTime
$13
1412539247000
*4
$4
HSET
$22
hash:article:by:100446
$10
updateTime
$13
1412539247000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100446
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100446
*3
$5
LPUSH
$15
list:article:id
$6
100446
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100446
*4
$4
HSET
$22
hash:article:by:100501
$2
id
$6
100501
*4
$4
HSET
$22
hash:article:by:100501
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100501
$9
articleId
$4
2688
*4
$4
HSET
$22
hash:article:by:100501
$5
title
$60
Java设计模式菜鸟系列(九)外观模式建模与实现
*4
$4
HSET
$22
hash:article:by:100501
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100501
$8
labelIds
$19
[425,53,12,408,343]
*4
$4
HSET
$22
hash:article:by:100501
$6
digest
$261
外观模式(Facade)：是为了解决类与类之间的依赖关系的，像spring一样，可以将类与类之间的关系配置到配置文件中，而外观模式就是将他们的
关系放在一个Facade类中，降低了类与类之间的耦合度，...
*4
$4
HSET
$22
hash:article:by:100501
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100501
$7
content
$41
csdn/java/1_0_1_15_1504265286.593606.html
*4
$4
HSET
$22
hash:article:by:100501
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100501
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100501
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100501
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100501
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100501
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100501
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100501
$10
createTime
$13
1412535646000
*4
$4
HSET
$22
hash:article:by:100501
$11
releaseTime
$13
1412535646000
*4
$4
HSET
$22
hash:article:by:100501
$10
updateTime
$13
1412535646000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100501
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100501
*3
$5
LPUSH
$15
list:article:id
$6
100501
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100501
*4
$4
HSET
$22
hash:article:by:100447
$2
id
$6
100447
*4
$4
HSET
$22
hash:article:by:100447
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100447
$9
articleId
$4
2687
*4
$4
HSET
$22
hash:article:by:100447
$5
title
$63
Java设计模式菜鸟系列(八)适配器模式建模与实现
*4
$4
HSET
$22
hash:article:by:100447
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100447
$8
labelIds
$19
[425,53,12,408,343]
*4
$4
HSET
$22
hash:article:by:100447
$6
digest
$277
适配器模式(Adapter)：将某个类的接口转换成客户端期望的另一个接口表示，目的是消除由于接口不匹配所造成的类的兼容性问题。
主要分为三类：类的适配器模式、对象的适配器模式、接口的适配器模式。

1...
*4
$4
HSET
$22
hash:article:by:100447
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100447
$7
content
$41
csdn/java/1_0_1_16_1504265286.199316.html
*4
$4
HSET
$22
hash:article:by:100447
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100447
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100447
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100447
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100447
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100447
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100447
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100447
$10
createTime
$13
1412532052000
*4
$4
HSET
$22
hash:article:by:100447
$11
releaseTime
$13
1412532052000
*4
$4
HSET
$22
hash:article:by:100447
$10
updateTime
$13
1412532052000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100447
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100447
*3
$5
LPUSH
$15
list:article:id
$6
100447
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100447
*4
$4
HSET
$22
hash:article:by:100503
$2
id
$6
100503
*4
$4
HSET
$22
hash:article:by:100503
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100503
$9
articleId
$4
2686
*4
$4
HSET
$22
hash:article:by:100503
$5
title
$60
Java设计模式菜鸟系列(七)命令模式建模与实现
*4
$4
HSET
$22
hash:article:by:100503
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100503
$8
labelIds
$19
[12,53,408,343,409]
*4
$4
HSET
$22
hash:article:by:100503
$6
digest
$279
命令模式(Command)：将“请求”(命令/口令)封装成一个对象，以便使用不同的请求、队列或者日志来参数化其对象。命令模式也支持撤销操作。命令模式的目的就是达到命令的发出者和执行者之间解耦，实现请求...
*4
$4
HSET
$22
hash:article:by:100503
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100503
$7
content
$41
csdn/java/1_0_1_17_1504265284.844097.html
*4
$4
HSET
$22
hash:article:by:100503
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100503
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100503
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100503
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100503
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100503
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100503
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100503
$10
createTime
$13
1412524808000
*4
$4
HSET
$22
hash:article:by:100503
$11
releaseTime
$13
1412524808000
*4
$4
HSET
$22
hash:article:by:100503
$10
updateTime
$13
1412524808000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100503
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100503
*3
$5
LPUSH
$15
list:article:id
$6
100503
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100503
*4
$4
HSET
$22
hash:article:by:100606
$2
id
$6
100606
*4
$4
HSET
$22
hash:article:by:100606
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100606
$9
articleId
$4
2685
*4
$4
HSET
$22
hash:article:by:100606
$5
title
$60
Java设计模式菜鸟系列(六)单例模式建模与实现
*4
$4
HSET
$22
hash:article:by:100606
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100606
$8
labelIds
$17
[53,408,18,12,66]
*4
$4
HSET
$22
hash:article:by:100606
$6
digest
$301
单例模式保证了一个类只有一个实例，且提供一个访问全局点的方式，更加灵活的保证了实例的创建和访问约束。系统中只有一个实例，因此构造方法应该为私有 饿汉式：类加载时直接创建静态实例；懒汉式：第一次需要时才...
*4
$4
HSET
$22
hash:article:by:100606
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100606
$7
content
$41
csdn/java/1_0_1_18_1504265283.596996.html
*4
$4
HSET
$22
hash:article:by:100606
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100606
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100606
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100606
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100606
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100606
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100606
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100606
$10
createTime
$13
1412463644000
*4
$4
HSET
$22
hash:article:by:100606
$11
releaseTime
$13
1412463644000
*4
$4
HSET
$22
hash:article:by:100606
$10
updateTime
$13
1412463644000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100606
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100606
*3
$5
LPUSH
$15
list:article:id
$6
100606
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100606
*4
$4
HSET
$22
hash:article:by:100443
$2
id
$6
100443
*4
$4
HSET
$22
hash:article:by:100443
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100443
$9
articleId
$4
2684
*4
$4
HSET
$22
hash:article:by:100443
$5
title
$66
Java设计模式菜鸟系列(五)抽象工厂模式建模与实现
*4
$4
HSET
$22
hash:article:by:100443
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100443
$8
labelIds
$15
[53,361,18,408]
*4
$4
HSET
$22
hash:article:by:100443
$6
digest
$267
抽象工厂模式（Abstract Factory）：抽象工厂--顾名思义，就是把工厂抽象出来，不同的工厂生产不同的产品。这样做有个好处：一旦需要增加新的功能，直接增加新的工厂类就可以了，不需要修改之前的...
*4
$4
HSET
$22
hash:article:by:100443
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100443
$7
content
$41
csdn/java/1_0_1_19_1504265282.836506.html
*4
$4
HSET
$22
hash:article:by:100443
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100443
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100443
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100443
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100443
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100443
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100443
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100443
$10
createTime
$13
1412460025000
*4
$4
HSET
$22
hash:article:by:100443
$11
releaseTime
$13
1412460025000
*4
$4
HSET
$22
hash:article:by:100443
$10
updateTime
$13
1412460025000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100443
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100443
*3
$5
LPUSH
$15
list:article:id
$6
100443
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100443
*4
$4
HSET
$22
hash:article:by:100452
$2
id
$6
100452
*4
$4
HSET
$22
hash:article:by:100452
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100452
$9
articleId
$4
2652
*4
$4
HSET
$22
hash:article:by:100452
$5
title
$66
Java设计模式菜鸟系列(四)工厂方法模式建模与实现
*4
$4
HSET
$22
hash:article:by:100452
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100452
$8
labelIds
$15
[53,361,408,18]
*4
$4
HSET
$22
hash:article:by:100452
$6
digest
$163
转载请注明出处：http://blog.csdn.net/lhy_ycu/article/details/39760895

工厂方法模式（Factory Method）分为三种：
一、普通工厂模式。...
*4
$4
HSET
$22
hash:article:by:100452
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100452
$7
content
$40
csdn/java/1_0_2_0_1504265200.743564.html
*4
$4
HSET
$22
hash:article:by:100452
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100452
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100452
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100452
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100452
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100452
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100452
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100452
$10
createTime
$13
1412456429000
*4
$4
HSET
$22
hash:article:by:100452
$11
releaseTime
$13
1412456429000
*4
$4
HSET
$22
hash:article:by:100452
$10
updateTime
$13
1412456429000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100452
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100452
*3
$5
LPUSH
$15
list:article:id
$6
100452
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100452
*4
$4
HSET
$22
hash:article:by:100498
$2
id
$6
100498
*4
$4
HSET
$22
hash:article:by:100498
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100498
$9
articleId
$4
2653
*4
$4
HSET
$22
hash:article:by:100498
$5
title
$63
Java设计模式菜鸟系列(三)装饰者模式建模与实现
*4
$4
HSET
$22
hash:article:by:100498
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100498
$8
labelIds
$15
[12,408,116,18]
*4
$4
HSET
$22
hash:article:by:100498
$6
digest
$277
装饰者(Decorator)模式：动态地将责任附加到对象上，若要扩展功能，装饰者提供了比继承更具有弹性的替代方案。对于装饰者模式，它其实是一种包装，所以我更愿意称它为一种包装。像咱们以前经常使用的Ja...
*4
$4
HSET
$22
hash:article:by:100498
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100498
$7
content
$40
csdn/java/1_0_2_1_1504265201.777276.html
*4
$4
HSET
$22
hash:article:by:100498
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100498
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100498
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100498
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100498
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100498
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100498
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100498
$10
createTime
$13
1412370023000
*4
$4
HSET
$22
hash:article:by:100498
$11
releaseTime
$13
1412370023000
*4
$4
HSET
$22
hash:article:by:100498
$10
updateTime
$13
1412370023000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100498
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100498
*3
$5
LPUSH
$15
list:article:id
$6
100498
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100498
*4
$4
HSET
$22
hash:article:by:100700
$2
id
$6
100700
*4
$4
HSET
$22
hash:article:by:100700
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100700
$9
articleId
$4
2655
*4
$4
HSET
$22
hash:article:by:100700
$5
title
$63
Java设计模式菜鸟系列(二)观察者模式建模与实现
*4
$4
HSET
$22
hash:article:by:100700
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100700
$8
labelIds
$15
[18,655,12,409]
*4
$4
HSET
$22
hash:article:by:100700
$6
digest
$255
观察者(Observer)模式定义：在对象之间定义了一对多的依赖关系，这样一来，当一个对象改变状态时，依赖它的对象都会收到通知并自动跟新。Java已经提供了对观察者Observer模式的默认实现， J...
*4
$4
HSET
$22
hash:article:by:100700
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100700
$7
content
$40
csdn/java/1_0_2_2_1504265203.749957.html
*4
$4
HSET
$22
hash:article:by:100700
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100700
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100700
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100700
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100700
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100700
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100700
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100700
$10
createTime
$13
1412359203000
*4
$4
HSET
$22
hash:article:by:100700
$11
releaseTime
$13
1412359203000
*4
$4
HSET
$22
hash:article:by:100700
$10
updateTime
$13
1412359203000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100700
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100700
*3
$5
LPUSH
$15
list:article:id
$6
100700
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100700
*4
$4
HSET
$22
hash:article:by:100679
$2
id
$6
100679
*4
$4
HSET
$22
hash:article:by:100679
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100679
$9
articleId
$4
2654
*4
$4
HSET
$22
hash:article:by:100679
$5
title
$60
Java设计模式菜鸟系列(一)策略模式建模与实现
*4
$4
HSET
$22
hash:article:by:100679
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100679
$8
labelIds
$15
[18,12,343,409]
*4
$4
HSET
$22
hash:article:by:100679
$6
digest
$271
今天开始咱们来谈谈Java设计模式。这里会结合uml图形来讲解，有对uml建模不熟的可以参考我的另一篇博文uml建模。
首先，个人觉得模式的设计就是一个将变化的东西和不变(稳定)的东西分离的过程。咱们...
*4
$4
HSET
$22
hash:article:by:100679
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100679
$7
content
$40
csdn/java/1_0_2_3_1504265202.783822.html
*4
$4
HSET
$22
hash:article:by:100679
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100679
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100679
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100679
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100679
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100679
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100679
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100679
$10
createTime
$13
1412200847000
*4
$4
HSET
$22
hash:article:by:100679
$11
releaseTime
$13
1412200847000
*4
$4
HSET
$22
hash:article:by:100679
$10
updateTime
$13
1412200847000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100679
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100679
*3
$5
LPUSH
$15
list:article:id
$6
100679
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100679
*4
$4
HSET
$22
hash:article:by:100407
$2
id
$6
100407
*4
$4
HSET
$22
hash:article:by:100407
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100407
$9
articleId
$4
2309
*4
$4
HSET
$22
hash:article:by:100407
$5
title
$24
访问者模式的意图
*4
$4
HSET
$22
hash:article:by:100407
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100407
$8
labelIds
$7
[12,18]
*4
$4
HSET
$22
hash:article:by:100407
$6
digest
$54
访问者模式的访问者，是做专项检查的。
*4
$4
HSET
$22
hash:article:by:100407
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100407
$7
content
$40
csdn/java/1_1_1_0_1504264624.636924.html
*4
$4
HSET
$22
hash:article:by:100407
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100407
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100407
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100407
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100407
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100407
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100407
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100407
$10
createTime
$13
1412089252000
*4
$4
HSET
$22
hash:article:by:100407
$11
releaseTime
$13
1412089252000
*4
$4
HSET
$22
hash:article:by:100407
$10
updateTime
$13
1412089252000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100407
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100407
*3
$5
LPUSH
$15
list:article:id
$6
100407
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100407
*4
$4
HSET
$22
hash:article:by:100249
$2
id
$6
100249
*4
$4
HSET
$22
hash:article:by:100249
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100249
$9
articleId
$4
2315
*4
$4
HSET
$22
hash:article:by:100249
$5
title
$35
命令模式之2 Invoker Vs. Client
*4
$4
HSET
$22
hash:article:by:100249
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100249
$8
labelIds
$11
[12,18,245]
*4
$4
HSET
$22
hash:article:by:100249
$6
digest
$21
一个实用的例子
*4
$4
HSET
$22
hash:article:by:100249
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100249
$7
content
$40
csdn/java/1_1_1_1_1504264628.906706.html
*4
$4
HSET
$22
hash:article:by:100249
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100249
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100249
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100249
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100249
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100249
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100249
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100249
$10
createTime
$13
1411988448000
*4
$4
HSET
$22
hash:article:by:100249
$11
releaseTime
$13
1411988448000
*4
$4
HSET
$22
hash:article:by:100249
$10
updateTime
$13
1411988448000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100249
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100249
*3
$5
LPUSH
$15
list:article:id
$6
100249
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100249
*4
$4
HSET
$22
hash:article:by:100683
$2
id
$6
100683
*4
$4
HSET
$22
hash:article:by:100683
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100683
$9
articleId
$4
2359
*4
$4
HSET
$22
hash:article:by:100683
$5
title
$55
菜鸟版JAVA设计模式—从买房子看代理模式
*4
$4
HSET
$22
hash:article:by:100683
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100683
$8
labelIds
$10
[18,53,39]
*4
$4
HSET
$22
hash:article:by:100683
$6
digest
$299
相对于适配器模式，或者说装饰器模式，代理模式理解起来更加简单。
代理这个词应该比较好理解，代替去做就是代理。
比如，我们买卖房子，那么我们会找中介，我要卖房子，但是我们没有时间去卖，我主动交给中介，中...
*4
$4
HSET
$22
hash:article:by:100683
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100683
$7
content
$40
csdn/java/1_0_1_3_1504264661.272887.html
*4
$4
HSET
$22
hash:article:by:100683
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100683
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100683
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100683
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100683
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100683
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100683
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100683
$10
createTime
$13
1411912834000
*4
$4
HSET
$22
hash:article:by:100683
$11
releaseTime
$13
1411912834000
*4
$4
HSET
$22
hash:article:by:100683
$10
updateTime
$13
1411912834000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100683
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100683
*3
$5
LPUSH
$15
list:article:id
$6
100683
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100683
*4
$4
HSET
$22
hash:article:by:100375
$2
id
$6
100375
*4
$4
HSET
$22
hash:article:by:100375
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100375
$9
articleId
$4
2616
*4
$4
HSET
$22
hash:article:by:100375
$5
title
$29
Java 实现抽象工厂模式
*4
$4
HSET
$22
hash:article:by:100375
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100375
$8
labelIds
$5
[361]
*4
$4
HSET
$22
hash:article:by:100375
$6
digest
$281
抽象工厂模式
里面有几个概念：抽象工厂、实体工厂、抽象产品、实体产品
抽象工厂：定义创建产品的抽象方法
实体工厂：具体的创建哪种产品
抽象产品：一个接口或基类
实体产品：实现具体功能，或派生


...
*4
$4
HSET
$22
hash:article:by:100375
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100375
$7
content
$40
csdn/java/1_0_1_2_1504265102.217044.html
*4
$4
HSET
$22
hash:article:by:100375
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100375
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100375
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100375
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100375
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100375
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100375
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100375
$10
createTime
$13
1411894841000
*4
$4
HSET
$22
hash:article:by:100375
$11
releaseTime
$13
1411894841000
*4
$4
HSET
$22
hash:article:by:100375
$10
updateTime
$13
1411894841000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100375
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100375
*3
$5
LPUSH
$15
list:article:id
$6
100375
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100375
*4
$4
HSET
$22
hash:article:by:100561
$2
id
$6
100561
*4
$4
HSET
$22
hash:article:by:100561
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100561
$9
articleId
$4
2329
*4
$4
HSET
$22
hash:article:by:100561
$5
title
$15
乒乓球问题
*4
$4
HSET
$22
hash:article:by:100561
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100561
$8
labelIds
$7
[18,12]
*4
$4
HSET
$22
hash:article:by:100561
$6
digest
$43
乒乓球问题，指方法的来回调用.
*4
$4
HSET
$22
hash:article:by:100561
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100561
$7
content
$40
csdn/java/1_1_1_2_1504264638.159867.html
*4
$4
HSET
$22
hash:article:by:100561
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100561
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100561
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100561
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100561
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100561
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100561
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100561
$10
createTime
$13
1411772422000
*4
$4
HSET
$22
hash:article:by:100561
$11
releaseTime
$13
1411772422000
*4
$4
HSET
$22
hash:article:by:100561
$10
updateTime
$13
1411772422000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100561
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100561
*3
$5
LPUSH
$15
list:article:id
$6
100561
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100561
*4
$4
HSET
$22
hash:article:by:100582
$2
id
$6
100582
*4
$4
HSET
$22
hash:article:by:100582
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100582
$9
articleId
$4
2615
*4
$4
HSET
$22
hash:article:by:100582
$5
title
$29
Java 实现简单工厂模式
*4
$4
HSET
$22
hash:article:by:100582
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100582
$8
labelIds
$5
[361]
*4
$4
HSET
$22
hash:article:by:100582
$6
digest
$184
工厂模式 属于创建型模式
简单工厂模式
通过一个厂类，以一个条件来创建对应的对象
//业务功能
public interface ICalculation {
	double getResult(d...
*4
$4
HSET
$22
hash:article:by:100582
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100582
$7
content
$40
csdn/java/1_0_1_1_1504265101.039539.html
*4
$4
HSET
$22
hash:article:by:100582
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100582
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100582
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100582
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100582
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100582
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100582
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100582
$10
createTime
$13
1411765240000
*4
$4
HSET
$22
hash:article:by:100582
$11
releaseTime
$13
1411765240000
*4
$4
HSET
$22
hash:article:by:100582
$10
updateTime
$13
1411765240000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100582
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100582
*3
$5
LPUSH
$15
list:article:id
$6
100582
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100582
*4
$4
HSET
$22
hash:article:by:100223
$2
id
$6
100223
*4
$4
HSET
$22
hash:article:by:100223
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100223
$9
articleId
$4
2339
*4
$4
HSET
$22
hash:article:by:100223
$5
title
$20
伪中介模式(5.5)
*4
$4
HSET
$22
hash:article:by:100223
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100223
$8
labelIds
$10
[12,18,85]
*4
$4
HSET
$22
hash:article:by:100223
$6
digest
$101
总之，股票交易所、婚姻介绍所、聊天室的例子，都不是[GoF]的中介者模式。
*4
$4
HSET
$22
hash:article:by:100223
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100223
$7
content
$40
csdn/java/1_1_1_3_1504264643.518658.html
*4
$4
HSET
$22
hash:article:by:100223
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100223
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100223
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100223
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100223
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100223
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100223
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100223
$10
createTime
$13
1411718400000
*4
$4
HSET
$22
hash:article:by:100223
$11
releaseTime
$13
1411718400000
*4
$4
HSET
$22
hash:article:by:100223
$10
updateTime
$13
1411718400000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100223
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100223
*3
$5
LPUSH
$15
list:article:id
$6
100223
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100223
*4
$4
HSET
$22
hash:article:by:100504
$2
id
$6
100504
*4
$4
HSET
$22
hash:article:by:100504
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100504
$9
articleId
$4
2360
*4
$4
HSET
$22
hash:article:by:100504
$5
title
$61
菜鸟版JAVA设计模式—从火锅底料到装饰器模式
*4
$4
HSET
$22
hash:article:by:100504
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100504
$8
labelIds
$14
[18,53,290,12]
*4
$4
HSET
$22
hash:article:by:100504
$6
digest
$301
“老板，来份全辣锅底，不要给我用装饰器模式来配料！”我特地狠狠的强调了最后一句话。
不到一会，老板给我端来了一个火锅和几个盘子，火锅里装了盐水，而盘子里放了辣椒，花椒，茴香，大蒜等佐料。。。。。。。。...
*4
$4
HSET
$22
hash:article:by:100504
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100504
$7
content
$40
csdn/java/1_0_1_4_1504264662.080399.html
*4
$4
HSET
$22
hash:article:by:100504
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100504
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100504
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100504
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100504
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100504
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100504
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100504
$10
createTime
$13
1411657252000
*4
$4
HSET
$22
hash:article:by:100504
$11
releaseTime
$13
1411657252000
*4
$4
HSET
$22
hash:article:by:100504
$10
updateTime
$13
1411657252000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100504
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100504
*3
$5
LPUSH
$15
list:article:id
$6
100504
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100504
*4
$4
HSET
$22
hash:article:by:100246
$2
id
$6
100246
*4
$4
HSET
$22
hash:article:by:100246
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100246
$9
articleId
$4
2342
*4
$4
HSET
$22
hash:article:by:100246
$5
title
$25
Java组合模式（4.3）
*4
$4
HSET
$22
hash:article:by:100246
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100246
$8
labelIds
$7
[18,12]
*4
$4
HSET
$22
hash:article:by:100246
$6
digest
$78
组合模式的要点是：叶子对象和各种容器能够统一地处理。
*4
$4
HSET
$22
hash:article:by:100246
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100246
$7
content
$39
csdn/java/1_1_1_4_1504264644.66731.html
*4
$4
HSET
$22
hash:article:by:100246
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100246
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100246
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100246
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100246
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100246
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100246
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100246
$10
createTime
$13
1411290019000
*4
$4
HSET
$22
hash:article:by:100246
$11
releaseTime
$13
1411290019000
*4
$4
HSET
$22
hash:article:by:100246
$10
updateTime
$13
1411290019000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100246
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100246
*3
$5
LPUSH
$15
list:article:id
$6
100246
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100246
*4
$4
HSET
$22
hash:article:by:100395
$2
id
$6
100395
*4
$4
HSET
$22
hash:article:by:100395
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100395
$9
articleId
$4
2331
*4
$4
HSET
$22
hash:article:by:100395
$5
title
$31
简明 责任链模式（5.1）
*4
$4
HSET
$22
hash:article:by:100395
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100395
$8
labelIds
$11
[18,12,270]
*4
$4
HSET
$22
hash:article:by:100395
$6
digest
$149
责任链模式可以称为“推卸”式的代理，多个对象能够处理客户发出的请求，即它们都具有相应的方法如handle()。
*4
$4
HSET
$22
hash:article:by:100395
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100395
$7
content
$40
csdn/java/1_1_1_5_1504264639.358123.html
*4
$4
HSET
$22
hash:article:by:100395
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100395
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100395
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100395
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100395
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100395
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100395
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100395
$10
createTime
$13
1411153244000
*4
$4
HSET
$22
hash:article:by:100395
$11
releaseTime
$13
1411153244000
*4
$4
HSET
$22
hash:article:by:100395
$10
updateTime
$13
1411153244000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100395
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100395
*3
$5
LPUSH
$15
list:article:id
$6
100395
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100395
*4
$4
HSET
$22
hash:article:by:100740
$2
id
$6
100740
*4
$4
HSET
$22
hash:article:by:100740
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100740
$9
articleId
$4
2337
*4
$4
HSET
$22
hash:article:by:100740
$5
title
$34
有限状态机(FSM)的Java 演示
*4
$4
HSET
$22
hash:article:by:100740
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100740
$8
labelIds
$11
[18,12,639]
*4
$4
HSET
$22
hash:article:by:100740
$6
digest
$263
本文从简单的例子入手，逐步演变成非常复杂的程序。
在简明 状态模式（5.8）中，状态之间的变换由外界控制，或者说，多种状态是分割的、无关的。状态模式最有趣的地方正是讨论其状态的变迁。
*4
$4
HSET
$22
hash:article:by:100740
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100740
$7
content
$40
csdn/java/1_1_1_6_1504264642.427853.html
*4
$4
HSET
$22
hash:article:by:100740
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100740
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100740
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100740
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100740
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100740
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100740
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100740
$10
createTime
$13
1411045251000
*4
$4
HSET
$22
hash:article:by:100740
$11
releaseTime
$13
1411045251000
*4
$4
HSET
$22
hash:article:by:100740
$10
updateTime
$13
1411045251000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100740
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100740
*3
$5
LPUSH
$15
list:article:id
$6
100740
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100740
*4
$4
HSET
$22
hash:article:by:100697
$2
id
$6
100697
*4
$4
HSET
$22
hash:article:by:100697
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100697
$9
articleId
$4
2333
*4
$4
HSET
$22
hash:article:by:100697
$5
title
$28
简明 状态模式（5.8）
*4
$4
HSET
$22
hash:article:by:100697
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100697
$8
labelIds
$7
[18,12]
*4
$4
HSET
$22
hash:article:by:100697
$6
digest
$39
屁股决定脑袋，状态决定行为
*4
$4
HSET
$22
hash:article:by:100697
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100697
$7
content
$40
csdn/java/1_1_1_7_1504264640.618878.html
*4
$4
HSET
$22
hash:article:by:100697
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100697
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100697
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100697
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100697
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100697
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100697
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100697
$10
createTime
$13
1410976800000
*4
$4
HSET
$22
hash:article:by:100697
$11
releaseTime
$13
1410976800000
*4
$4
HSET
$22
hash:article:by:100697
$10
updateTime
$13
1410976800000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100697
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100697
*3
$5
LPUSH
$15
list:article:id
$6
100697
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100697
*4
$4
HSET
$22
hash:article:by:100691
$2
id
$6
100691
*4
$4
HSET
$22
hash:article:by:100691
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100691
$9
articleId
$4
2335
*4
$4
HSET
$22
hash:article:by:100691
$5
title
$34
简明 抽象工厂模式（3.1）
*4
$4
HSET
$22
hash:article:by:100691
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100691
$8
labelIds
$7
[18,12]
*4
$4
HSET
$22
hash:article:by:100691
$6
digest
$45
一个工厂能够创建多个配套的产品
*4
$4
HSET
$22
hash:article:by:100691
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100691
$7
content
$40
csdn/java/1_1_1_8_1504264641.496853.html
*4
$4
HSET
$22
hash:article:by:100691
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100691
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100691
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100691
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100691
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100691
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100691
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100691
$10
createTime
$13
1410962446000
*4
$4
HSET
$22
hash:article:by:100691
$11
releaseTime
$13
1410962446000
*4
$4
HSET
$22
hash:article:by:100691
$10
updateTime
$13
1410962446000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100691
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100691
*3
$5
LPUSH
$15
list:article:id
$6
100691
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100691
*4
$4
HSET
$22
hash:article:by:100695
$2
id
$6
100695
*4
$4
HSET
$22
hash:article:by:100695
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100695
$9
articleId
$4
2317
*4
$4
HSET
$22
hash:article:by:100695
$5
title
$23
简明解释器模式-2
*4
$4
HSET
$22
hash:article:by:100695
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100695
$8
labelIds
$8
[18,516]
*4
$4
HSET
$22
hash:article:by:100695
$6
digest
$120
用户输入代数表达式，如"(a*a+b)*(c-d)"，程序按照优先级和括号的使用情况计算正确的结果。
*4
$4
HSET
$22
hash:article:by:100695
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100695
$7
content
$40
csdn/java/1_1_1_9_1504264629.834187.html
*4
$4
HSET
$22
hash:article:by:100695
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100695
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100695
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100695
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100695
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100695
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100695
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100695
$10
createTime
$13
1410883221000
*4
$4
HSET
$22
hash:article:by:100695
$11
releaseTime
$13
1410883221000
*4
$4
HSET
$22
hash:article:by:100695
$10
updateTime
$13
1410883221000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100695
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100695
*3
$5
LPUSH
$15
list:article:id
$6
100695
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100695
*4
$4
HSET
$22
hash:article:by:100675
$2
id
$6
100675
*4
$4
HSET
$22
hash:article:by:100675
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100675
$9
articleId
$4
2326
*4
$4
HSET
$22
hash:article:by:100675
$5
title
$23
5.3解释器模式(5.3)
*4
$4
HSET
$22
hash:article:by:100675
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100675
$8
labelIds
$11
[18,12,516]
*4
$4
HSET
$22
hash:article:by:100675
$6
digest
$36
解释器模式(Interpreter Pattern)
*4
$4
HSET
$22
hash:article:by:100675
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100675
$7
content
$41
csdn/java/1_1_1_10_1504264635.001592.html
*4
$4
HSET
$22
hash:article:by:100675
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100675
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100675
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100675
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100675
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100675
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100675
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100675
$10
createTime
$13
1410822053000
*4
$4
HSET
$22
hash:article:by:100675
$11
releaseTime
$13
1410822053000
*4
$4
HSET
$22
hash:article:by:100675
$10
updateTime
$13
1410822053000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100675
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100675
*3
$5
LPUSH
$15
list:article:id
$6
100675
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100675
*4
$4
HSET
$22
hash:article:by:100398
$2
id
$6
100398
*4
$4
HSET
$22
hash:article:by:100398
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100398
$9
articleId
$4
2320
*4
$4
HSET
$22
hash:article:by:100398
$5
title
$33
2.1.2 工厂方法模式（3.3）
*4
$4
HSET
$22
hash:article:by:100398
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100398
$8
labelIds
$8
[18,389]
*4
$4
HSET
$22
hash:article:by:100398
$6
digest
$213
工厂方法模式(factory method pattern)从2方面认识。
编程技巧：这是对参数化工厂方法加以改进的经典技术，以多态来重构if-else、switch-case等分支结构。
设计思路：...
*4
$4
HSET
$22
hash:article:by:100398
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100398
$7
content
$41
csdn/java/1_1_1_13_1504264631.098138.html
*4
$4
HSET
$22
hash:article:by:100398
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100398
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100398
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100398
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100398
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100398
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100398
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100398
$10
createTime
$13
1410530427000
*4
$4
HSET
$22
hash:article:by:100398
$11
releaseTime
$13
1410530427000
*4
$4
HSET
$22
hash:article:by:100398
$10
updateTime
$13
1410530427000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100398
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100398
*3
$5
LPUSH
$15
list:article:id
$6
100398
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100398
*4
$4
HSET
$22
hash:article:by:100529
$2
id
$6
100529
*4
$4
HSET
$22
hash:article:by:100529
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100529
$9
articleId
$4
2321
*4
$4
HSET
$22
hash:article:by:100529
$5
title
$61
《编程导论(Java)·2.1.1里氏替换原则》什么是LSP
*4
$4
HSET
$22
hash:article:by:100529
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100529
$8
labelIds
$16
[18,490,491,492]
*4
$4
HSET
$22
hash:article:by:100529
$6
digest
$111
你可以不知道继承、多态，但是必须知道里氏替换原则(Liskov SubstitutionPrinciple、LSP)。
*4
$4
HSET
$22
hash:article:by:100529
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100529
$7
content
$41
csdn/java/1_1_1_15_1504264631.842914.html
*4
$4
HSET
$22
hash:article:by:100529
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100529
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100529
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100529
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100529
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100529
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100529
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100529
$10
createTime
$13
1410364830000
*4
$4
HSET
$22
hash:article:by:100529
$11
releaseTime
$13
1410364830000
*4
$4
HSET
$22
hash:article:by:100529
$10
updateTime
$13
1410364830000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100529
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100529
*3
$5
LPUSH
$15
list:article:id
$6
100529
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100529
*4
$4
HSET
$22
hash:article:by:100421
$2
id
$6
100421
*4
$4
HSET
$22
hash:article:by:100421
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100421
$9
articleId
$4
2311
*4
$4
HSET
$22
hash:article:by:100421
$5
title
$15
3.1  n次策略
*4
$4
HSET
$22
hash:article:by:100421
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100421
$8
labelIds
$16
[18,389,406,407]
*4
$4
HSET
$22
hash:article:by:100421
$6
digest
$81
多次使用策略模式需要考虑两个问题：组合爆炸和无限可能。
*4
$4
HSET
$22
hash:article:by:100421
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100421
$7
content
$41
csdn/java/1_1_1_17_1504264625.867075.html
*4
$4
HSET
$22
hash:article:by:100421
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100421
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100421
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100421
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100421
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100421
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100421
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100421
$10
createTime
$13
1410134405000
*4
$4
HSET
$22
hash:article:by:100421
$11
releaseTime
$13
1410134405000
*4
$4
HSET
$22
hash:article:by:100421
$10
updateTime
$13
1410134405000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100421
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100421
*3
$5
LPUSH
$15
list:article:id
$6
100421
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100421
*4
$4
HSET
$22
hash:article:by:100313
$2
id
$6
100313
*4
$4
HSET
$22
hash:article:by:100313
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100313
$9
articleId
$4
2186
*4
$4
HSET
$22
hash:article:by:100313
$5
title
$65
java web服务器监控（j2ee web 服务器各项参数监控）
*4
$4
HSET
$22
hash:article:by:100313
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100313
$8
labelIds
$9
[228,313]
*4
$4
HSET
$22
hash:article:by:100313
$6
digest
$83
续 《jplogic开发案例之服务器状态信息监控（服务器端监控）》
*4
$4
HSET
$22
hash:article:by:100313
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100313
$7
content
$41
csdn/java/1_1_1_17_1504264505.444223.html
*4
$4
HSET
$22
hash:article:by:100313
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100313
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100313
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100313
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100313
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100313
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100313
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100313
$10
createTime
$13
1409734828000
*4
$4
HSET
$22
hash:article:by:100313
$11
releaseTime
$13
1409734828000
*4
$4
HSET
$22
hash:article:by:100313
$10
updateTime
$13
1409734828000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100313
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100313
*3
$5
LPUSH
$15
list:article:id
$6
100313
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100313
*4
$4
HSET
$22
hash:article:by:100153
$2
id
$6
100153
*4
$4
HSET
$22
hash:article:by:100153
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100153
$9
articleId
$4
2325
*4
$4
HSET
$22
hash:article:by:100153
$5
title
$21
5.6 外观模式(4.5)
*4
$4
HSET
$22
hash:article:by:100153
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100153
$8
labelIds
$10
[18,12,55]
*4
$4
HSET
$22
hash:article:by:100153
$6
digest
$119
外观模式(façade pattern)是门面型委派方式，它将解决的问题是减少客户对服务细节的了解。
*4
$4
HSET
$22
hash:article:by:100153
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100153
$7
content
$41
csdn/java/1_1_1_14_1504264634.249026.html
*4
$4
HSET
$22
hash:article:by:100153
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100153
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100153
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100153
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100153
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100153
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100153
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100153
$10
createTime
$13
1409569236000
*4
$4
HSET
$22
hash:article:by:100153
$11
releaseTime
$13
1409569236000
*4
$4
HSET
$22
hash:article:by:100153
$10
updateTime
$13
1409569236000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100153
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100153
*3
$5
LPUSH
$15
list:article:id
$6
100153
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100153
*4
$4
HSET
$22
hash:article:by:100651
$2
id
$6
100651
*4
$4
HSET
$22
hash:article:by:100651
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100651
$9
articleId
$4
2314
*4
$4
HSET
$22
hash:article:by:100651
$5
title
$22
3.4  命令模式(5.2)
*4
$4
HSET
$22
hash:article:by:100651
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100651
$8
labelIds
$12
[490,555,18]
*4
$4
HSET
$22
hash:article:by:100651
$6
digest
$17
命令模式(5.2)
*4
$4
HSET
$22
hash:article:by:100651
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100651
$7
content
$41
csdn/java/1_1_1_18_1504264626.986078.html
*4
$4
HSET
$22
hash:article:by:100651
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100651
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100651
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100651
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100651
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100651
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100651
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100651
$10
createTime
$13
1409342424000
*4
$4
HSET
$22
hash:article:by:100651
$11
releaseTime
$13
1409342424000
*4
$4
HSET
$22
hash:article:by:100651
$10
updateTime
$13
1409342424000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100651
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100651
*3
$5
LPUSH
$15
list:article:id
$6
100651
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100651
*4
$4
HSET
$22
hash:article:by:100154
$2
id
$6
100154
*4
$4
HSET
$22
hash:article:by:100154
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100154
$9
articleId
$4
2665
*4
$4
HSET
$22
hash:article:by:100154
$5
title
$39
java设计模式之享元模式（11）
*4
$4
HSET
$22
hash:article:by:100154
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100154
$8
labelIds
$10
[18,53,12]
*4
$4
HSET
$22
hash:article:by:100154
$6
digest
$180
是结构型设计模式，其目的是为了减少大量的重复对象。
java中String就是享元模式的。看下例子
 
package com.pattern.struct.flyweight;

public...
*4
$4
HSET
$22
hash:article:by:100154
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100154
$7
content
$40
csdn/java/1_0_1_0_1504265258.700019.html
*4
$4
HSET
$22
hash:article:by:100154
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100154
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100154
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100154
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100154
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100154
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100154
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100154
$10
createTime
$13
1408536030000
*4
$4
HSET
$22
hash:article:by:100154
$11
releaseTime
$13
1408536030000
*4
$4
HSET
$22
hash:article:by:100154
$10
updateTime
$13
1408536030000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100154
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100154
*3
$5
LPUSH
$15
list:article:id
$6
100154
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100154
*4
$4
HSET
$22
hash:article:by:100497
$2
id
$6
100497
*4
$4
HSET
$22
hash:article:by:100497
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100497
$9
articleId
$4
2666
*4
$4
HSET
$22
hash:article:by:100497
$5
title
$39
java设计模式之桥梁模式（10）
*4
$4
HSET
$22
hash:article:by:100497
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100497
$8
labelIds
$10
[18,53,12]
*4
$4
HSET
$22
hash:article:by:100497
$6
digest
$277
java设计模式之桥梁模式（10）
又叫桥连模式。
桥梁模式是对象的结构模式，桥梁模式的用意是:将抽象化与实现化脱耦，使得二者可以独立地变化。
接口就是抽象化，实现类就是实现化，把接口和实现类分...
*4
$4
HSET
$22
hash:article:by:100497
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100497
$7
content
$40
csdn/java/1_0_1_1_1504265259.760147.html
*4
$4
HSET
$22
hash:article:by:100497
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100497
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100497
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100497
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100497
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100497
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100497
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100497
$10
createTime
$13
1408366839000
*4
$4
HSET
$22
hash:article:by:100497
$11
releaseTime
$13
1408366839000
*4
$4
HSET
$22
hash:article:by:100497
$10
updateTime
$13
1408366839000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100497
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100497
*3
$5
LPUSH
$15
list:article:id
$6
100497
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100497
*4
$4
HSET
$22
hash:article:by:100238
$2
id
$6
100238
*4
$4
HSET
$22
hash:article:by:100238
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100238
$9
articleId
$4
2184
*4
$4
HSET
$22
hash:article:by:100238
$5
title
$73
jplogic开发案例之服务器状态信息监控（服务器端监控）
*4
$4
HSET
$22
hash:article:by:100238
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100238
$8
labelIds
$9
[228,229]
*4
$4
HSET
$22
hash:article:by:100238
$6
digest
$42
在软件项目中我们时常需要时再
*4
$4
HSET
$22
hash:article:by:100238
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100238
$7
content
$41
csdn/java/1_1_1_16_1504264504.279262.html
*4
$4
HSET
$22
hash:article:by:100238
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100238
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100238
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100238
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100238
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100238
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100238
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100238
$10
createTime
$13
1408147203000
*4
$4
HSET
$22
hash:article:by:100238
$11
releaseTime
$13
1408147203000
*4
$4
HSET
$22
hash:article:by:100238
$10
updateTime
$13
1408147203000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100238
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100238
*3
$5
LPUSH
$15
list:article:id
$6
100238
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100238
*4
$4
HSET
$22
hash:article:by:100318
$2
id
$6
100318
*4
$4
HSET
$22
hash:article:by:100318
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100318
$9
articleId
$4
2189
*4
$4
HSET
$22
hash:article:by:100318
$5
title
$130
jplogic 开发案例(FMS流媒体服务集成) 之 视频会议管理 (多人互动呼叫-应答模式视频会议含共享白板)
*4
$4
HSET
$22
hash:article:by:100318
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100318
$8
labelIds
$21
[217,318,319,229,320]
*4
$4
HSET
$22
hash:article:by:100318
$6
digest
$39
本人之前有做过类似视频语音
*4
$4
HSET
$22
hash:article:by:100318
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100318
$7
content
$41
csdn/java/1_1_1_15_1504264506.703636.html
*4
$4
HSET
$22
hash:article:by:100318
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100318
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100318
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100318
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100318
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100318
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100318
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100318
$10
createTime
$13
1407542432000
*4
$4
HSET
$22
hash:article:by:100318
$11
releaseTime
$13
1407542432000
*4
$4
HSET
$22
hash:article:by:100318
$10
updateTime
$13
1407542432000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100318
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100318
*3
$5
LPUSH
$15
list:article:id
$6
100318
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100318
*4
$4
HSET
$22
hash:article:by:100402
$2
id
$6
100402
*4
$4
HSET
$22
hash:article:by:100402
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100402
$9
articleId
$4
2605
*4
$4
HSET
$22
hash:article:by:100402
$5
title
$23
java 实现单例模式
*4
$4
HSET
$22
hash:article:by:100402
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100402
$8
labelIds
$7
[18,12]
*4
$4
HSET
$22
hash:article:by:100402
$6
digest
$103
public class Singleton {

private 
static Singleton intance;

private Singleton() {}



public 
stat...
*4
$4
HSET
$22
hash:article:by:100402
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100402
$7
content
$39
csdn/java/1_0_1_0_1504265090.76142.html
*4
$4
HSET
$22
hash:article:by:100402
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100402
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100402
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100402
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100402
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100402
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100402
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100402
$10
createTime
$13
1407348015000
*4
$4
HSET
$22
hash:article:by:100402
$11
releaseTime
$13
1407348015000
*4
$4
HSET
$22
hash:article:by:100402
$10
updateTime
$13
1407348015000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100402
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100402
*3
$5
LPUSH
$15
list:article:id
$6
100402
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100402
*4
$4
HSET
$22
hash:article:by:100365
$2
id
$6
100365
*4
$4
HSET
$22
hash:article:by:100365
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100365
$9
articleId
$4
2667
*4
$4
HSET
$22
hash:article:by:100365
$5
title
$38
java设计模式之外观模式（9）
*4
$4
HSET
$22
hash:article:by:100365
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100365
$8
labelIds
$10
[18,53,12]
*4
$4
HSET
$22
hash:article:by:100365
$6
digest
$287
外观模式又叫门面模式。
门面模式是对象的结构模式，外部与一个子系统的通信必须通过一个统一的门面对象进行。
门面模式提供一个高层次的接口，使得子系统更易于使用。（注：这句话来自《java与模式》）。...
*4
$4
HSET
$22
hash:article:by:100365
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100365
$7
content
$40
csdn/java/1_0_1_2_1504265260.534216.html
*4
$4
HSET
$22
hash:article:by:100365
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100365
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100365
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100365
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100365
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100365
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100365
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100365
$10
createTime
$13
1406894454000
*4
$4
HSET
$22
hash:article:by:100365
$11
releaseTime
$13
1406894454000
*4
$4
HSET
$22
hash:article:by:100365
$10
updateTime
$13
1406894454000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100365
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100365
*3
$5
LPUSH
$15
list:article:id
$6
100365
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100365
*4
$4
HSET
$22
hash:article:by:100155
$2
id
$6
100155
*4
$4
HSET
$22
hash:article:by:100155
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100155
$9
articleId
$4
2673
*4
$4
HSET
$22
hash:article:by:100155
$5
title
$38
java设计模式之代理模式（8）
*4
$4
HSET
$22
hash:article:by:100155
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100155
$8
labelIds
$10
[18,53,12]
*4
$4
HSET
$22
hash:article:by:100155
$6
digest
$295
代理模式就是，不直接调用目标函数，而是通过一个代理类来调用。
它的类继承关系和装饰模式很类似。但是它们的目的不一样。
代理模式不会增加新的功能，只是在调用和被调用之间加入代理层。而装饰模式旨在增加...
*4
$4
HSET
$22
hash:article:by:100155
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100155
$7
content
$40
csdn/java/1_0_1_3_1504265265.799443.html
*4
$4
HSET
$22
hash:article:by:100155
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100155
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100155
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100155
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100155
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100155
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100155
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100155
$10
createTime
$13
1406822452000
*4
$4
HSET
$22
hash:article:by:100155
$11
releaseTime
$13
1406822452000
*4
$4
HSET
$22
hash:article:by:100155
$10
updateTime
$13
1406822452000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100155
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100155
*3
$5
LPUSH
$15
list:article:id
$6
100155
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100155
*4
$4
HSET
$22
hash:article:by:100167
$2
id
$6
100167
*4
$4
HSET
$22
hash:article:by:100167
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100167
$9
articleId
$4
2675
*4
$4
HSET
$22
hash:article:by:100167
$5
title
$38
java设计模式之装饰模式（7）
*4
$4
HSET
$22
hash:article:by:100167
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100167
$8
labelIds
$10
[18,53,12]
*4
$4
HSET
$22
hash:article:by:100167
$6
digest
$283
属于结构型模式，装饰模式就是动态的给一个对象增加一些功能。
要求装饰对象和被装饰对象实现同一个接口，装饰对象持有被装饰对象的实例。
java的IO流的实现就是装饰模式。可以轻松的把一种流装饰成为另...
*4
$4
HSET
$22
hash:article:by:100167
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100167
$7
content
$40
csdn/java/1_0_1_4_1504265267.534465.html
*4
$4
HSET
$22
hash:article:by:100167
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100167
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100167
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100167
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100167
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100167
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100167
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100167
$10
createTime
$13
1406710836000
*4
$4
HSET
$22
hash:article:by:100167
$11
releaseTime
$13
1406710836000
*4
$4
HSET
$22
hash:article:by:100167
$10
updateTime
$13
1406710836000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100167
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100167
*3
$5
LPUSH
$15
list:article:id
$6
100167
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100167
*4
$4
HSET
$22
hash:article:by:100170
$2
id
$6
100170
*4
$4
HSET
$22
hash:article:by:100170
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100170
$9
articleId
$4
2674
*4
$4
HSET
$22
hash:article:by:100170
$5
title
$41
java设计模式之适配器模式（6）
*4
$4
HSET
$22
hash:article:by:100170
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100170
$8
labelIds
$10
[18,53,12]
*4
$4
HSET
$22
hash:article:by:100170
$6
digest
$293
属于结构型模式。适配器这三个字在生活中很常见。举个最简单的例子，那就是变压器，它可以把几万伏的高压变成我们生活用电220伏。
变压器就是一种适配器。适配器模式的作用就和生活中的适配器的作用是很相似的...
*4
$4
HSET
$22
hash:article:by:100170
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100170
$7
content
$40
csdn/java/1_0_1_5_1504265266.649672.html
*4
$4
HSET
$22
hash:article:by:100170
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100170
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100170
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100170
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100170
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100170
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100170
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100170
$10
createTime
$13
1406635246000
*4
$4
HSET
$22
hash:article:by:100170
$11
releaseTime
$13
1406635246000
*4
$4
HSET
$22
hash:article:by:100170
$10
updateTime
$13
1406635246000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100170
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100170
*3
$5
LPUSH
$15
list:article:id
$6
100170
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100170
*4
$4
HSET
$22
hash:article:by:100580
$2
id
$6
100580
*4
$4
HSET
$22
hash:article:by:100580
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100580
$9
articleId
$4
2672
*4
$4
HSET
$22
hash:article:by:100580
$5
title
$38
java设计模式之原型模式（5）
*4
$4
HSET
$22
hash:article:by:100580
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100580
$8
labelIds
$10
[18,53,12]
*4
$4
HSET
$22
hash:article:by:100580
$6
digest
$277
原型模式也是一种创建型模式，只不过他创建的对象不是通过new来创建的，而是通过克隆来实现。为什么要通过克隆而不是new呢？
举个例子：比如一个对象的创建需要读取本地文件（Excel）中的信息，而且需...
*4
$4
HSET
$22
hash:article:by:100580
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100580
$7
content
$40
csdn/java/1_0_1_6_1504265264.767708.html
*4
$4
HSET
$22
hash:article:by:100580
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100580
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100580
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100580
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100580
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100580
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100580
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100580
$10
createTime
$13
1406548856000
*4
$4
HSET
$22
hash:article:by:100580
$11
releaseTime
$13
1406548856000
*4
$4
HSET
$22
hash:article:by:100580
$10
updateTime
$13
1406548856000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100580
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100580
*3
$5
LPUSH
$15
list:article:id
$6
100580
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100580
*4
$4
HSET
$22
hash:article:by:100602
$2
id
$6
100602
*4
$4
HSET
$22
hash:article:by:100602
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100602
$9
articleId
$4
2671
*4
$4
HSET
$22
hash:article:by:100602
$5
title
$58
java设计模式之三句话记住23种设计模式（4）
*4
$4
HSET
$22
hash:article:by:100602
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100602
$8
labelIds
$10
[18,53,12]
*4
$4
HSET
$22
hash:article:by:100602
$6
digest
$287
1：创建型模式：弹弓原件（单例，工厂，原型，建造）
2：结构型模式：外援组 佩戴桥石（外观，享元，组合，适配，代理，桥连，装饰）
3：行为型模式：爹责令房中介装备观测板（迭代，责任链，命令，访问者...
*4
$4
HSET
$22
hash:article:by:100602
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100602
$7
content
$40
csdn/java/1_0_1_7_1504265263.872213.html
*4
$4
HSET
$22
hash:article:by:100602
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100602
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100602
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100602
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100602
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100602
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100602
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100602
$10
createTime
$13
1406304028000
*4
$4
HSET
$22
hash:article:by:100602
$11
releaseTime
$13
1406304028000
*4
$4
HSET
$22
hash:article:by:100602
$10
updateTime
$13
1406304028000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100602
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100602
*3
$5
LPUSH
$15
list:article:id
$6
100602
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100602
*4
$4
HSET
$22
hash:article:by:100577
$2
id
$6
100577
*4
$4
HSET
$22
hash:article:by:100577
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100577
$9
articleId
$4
2670
*4
$4
HSET
$22
hash:article:by:100577
$5
title
$41
java设计模式之建造者模式（3）
*4
$4
HSET
$22
hash:article:by:100577
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100577
$8
labelIds
$10
[18,53,12]
*4
$4
HSET
$22
hash:article:by:100577
$6
digest
$293
建造者模式：属于创建型模式，和之前的工厂模式很相似。两者相比的话，建造者模式创建的对象是复杂的对象，而工厂模式创建的都是简单的单一对象。
    建造者模式就像一个 流水线，会把各种零件按照一定的顺...
*4
$4
HSET
$22
hash:article:by:100577
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100577
$7
content
$40
csdn/java/1_0_1_8_1504265263.725741.html
*4
$4
HSET
$22
hash:article:by:100577
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100577
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100577
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100577
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100577
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100577
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100577
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100577
$10
createTime
$13
1406275244000
*4
$4
HSET
$22
hash:article:by:100577
$11
releaseTime
$13
1406275244000
*4
$4
HSET
$22
hash:article:by:100577
$10
updateTime
$13
1406275244000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100577
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100577
*3
$5
LPUSH
$15
list:article:id
$6
100577
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100577
*4
$4
HSET
$22
hash:article:by:100578
$2
id
$6
100578
*4
$4
HSET
$22
hash:article:by:100578
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100578
$9
articleId
$4
2669
*4
$4
HSET
$22
hash:article:by:100578
$5
title
$38
java设计模式之工厂模式（2）
*4
$4
HSET
$22
hash:article:by:100578
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100578
$8
labelIds
$10
[18,53,12]
*4
$4
HSET
$22
hash:article:by:100578
$6
digest
$275
工厂模式：属于创建型模式。同我们生活中的厂家很相似。我们并不自己制造（new）产品，而是依靠厂家制造，我们只是拿来使用。简单的说就是让工厂
  根据我们的需求给我们new一个对象。
  
工厂模...
*4
$4
HSET
$22
hash:article:by:100578
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100578
$7
content
$40
csdn/java/1_0_1_9_1504265262.610081.html
*4
$4
HSET
$22
hash:article:by:100578
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100578
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100578
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100578
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100578
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100578
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100578
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100578
$10
createTime
$13
1406221221000
*4
$4
HSET
$22
hash:article:by:100578
$11
releaseTime
$13
1406221221000
*4
$4
HSET
$22
hash:article:by:100578
$10
updateTime
$13
1406221221000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100578
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100578
*3
$5
LPUSH
$15
list:article:id
$6
100578
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100578
*4
$4
HSET
$22
hash:article:by:100576
$2
id
$6
100576
*4
$4
HSET
$22
hash:article:by:100576
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100576
$9
articleId
$4
2668
*4
$4
HSET
$22
hash:article:by:100576
$5
title
$38
java设计模式之单例模式（1）
*4
$4
HSET
$22
hash:article:by:100576
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100576
$8
labelIds
$7
[53,12]
*4
$4
HSET
$22
hash:article:by:100576
$6
digest
$248
单例模式：属于创建型模式。项目中只存在某个类的一个对象，而且只可能存在一个对象。那么我们说这个类是单例模式，也叫单态模式。
单例模式分为两种 :懒汉式 和 饿汉式。
饿汉式
*4
$4
HSET
$22
hash:article:by:100576
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100576
$7
content
$41
csdn/java/1_0_1_10_1504265261.544801.html
*4
$4
HSET
$22
hash:article:by:100576
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100576
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100576
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100576
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100576
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100576
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100576
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100576
$10
createTime
$13
1406124030000
*4
$4
HSET
$22
hash:article:by:100576
$11
releaseTime
$13
1406124030000
*4
$4
HSET
$22
hash:article:by:100576
$10
updateTime
$13
1406124030000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100576
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100576
*3
$5
LPUSH
$15
list:article:id
$6
100576
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100576
*4
$4
HSET
$22
hash:article:by:100363
$2
id
$6
100363
*4
$4
HSET
$22
hash:article:by:100363
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100363
$9
articleId
$4
2676
*4
$4
HSET
$22
hash:article:by:100363
$5
title
$23
java设计模式（0）
*4
$4
HSET
$22
hash:article:by:100363
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100363
$8
labelIds
$7
[53,12]
*4
$4
HSET
$22
hash:article:by:100363
$6
digest
$295
总体来说设计模式分为三大类：创建型模式、结构型模式和行为型模式。
创建型模式：工厂方法模式、抽象工厂模式、单例模式、建造者模式、原型模式。
结构型模式：适配器模式、装饰器模式、代理模式、外观模式、...
*4
$4
HSET
$22
hash:article:by:100363
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100363
$7
content
$41
csdn/java/1_0_1_11_1504265268.786537.html
*4
$4
HSET
$22
hash:article:by:100363
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100363
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100363
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100363
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100363
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100363
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100363
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100363
$10
createTime
$13
1406124018000
*4
$4
HSET
$22
hash:article:by:100363
$11
releaseTime
$13
1406124018000
*4
$4
HSET
$22
hash:article:by:100363
$10
updateTime
$13
1406124018000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100363
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100363
*3
$5
LPUSH
$15
list:article:id
$6
100363
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100363
*4
$4
HSET
$22
hash:article:by:100280
$2
id
$6
100280
*4
$4
HSET
$22
hash:article:by:100280
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100280
$9
articleId
$4
2182
*4
$4
HSET
$22
hash:article:by:100280
$5
title
$46
jplogic开发案例之应用皮肤界面管理
*4
$4
HSET
$22
hash:article:by:100280
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100280
$8
labelIds
$21
[217,281,282,241,229]
*4
$4
HSET
$22
hash:article:by:100280
$6
digest
$40
本人陆续推出jplogic开发案例，
*4
$4
HSET
$22
hash:article:by:100280
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100280
$7
content
$41
csdn/java/1_1_1_14_1504264503.574168.html
*4
$4
HSET
$22
hash:article:by:100280
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100280
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100280
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100280
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100280
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100280
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100280
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100280
$10
createTime
$13
1404939642000
*4
$4
HSET
$22
hash:article:by:100280
$11
releaseTime
$13
1404939642000
*4
$4
HSET
$22
hash:article:by:100280
$10
updateTime
$13
1404939642000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100280
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100280
*3
$5
LPUSH
$15
list:article:id
$6
100280
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100280
*4
$4
HSET
$22
hash:article:by:100624
$2
id
$6
100624
*4
$4
HSET
$22
hash:article:by:100624
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100624
$9
articleId
$4
2511
*4
$4
HSET
$22
hash:article:by:100624
$5
title
$30
设计模式——代理模式
*4
$4
HSET
$22
hash:article:by:100624
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100624
$8
labelIds
$7
[12,39]
*4
$4
HSET
$22
hash:article:by:100624
$6
digest
$155
代理模式的作用是控制和管理访问先看一段代码：package com.test;
/**
 * 抽象角色
 * @author Administrator
 *
 */
abstract public ...
*4
$4
HSET
$22
hash:article:by:100624
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100624
$7
content
$40
csdn/java/1_0_1_0_1504264864.298592.html
*4
$4
HSET
$22
hash:article:by:100624
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100624
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100624
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100624
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100624
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100624
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100624
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100624
$10
createTime
$13
1404244851000
*4
$4
HSET
$22
hash:article:by:100624
$11
releaseTime
$13
1404244851000
*4
$4
HSET
$22
hash:article:by:100624
$10
updateTime
$13
1404244851000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100624
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100624
*3
$5
LPUSH
$15
list:article:id
$6
100624
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100624
*4
$4
HSET
$22
hash:article:by:100245
$2
id
$6
100245
*4
$4
HSET
$22
hash:article:by:100245
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100245
$9
articleId
$4
2192
*4
$4
HSET
$22
hash:article:by:100245
$5
title
$41
jplogic 之图形报表统计开发案例
*4
$4
HSET
$22
hash:article:by:100245
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100245
$8
labelIds
$13
[241,242,243]
*4
$4
HSET
$22
hash:article:by:100245
$6
digest
$63
纵观目前各种系统项目中都运用到了报表统计，
*4
$4
HSET
$22
hash:article:by:100245
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100245
$7
content
$41
csdn/java/1_1_1_13_1504264508.577606.html
*4
$4
HSET
$22
hash:article:by:100245
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100245
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100245
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100245
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100245
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100245
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100245
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100245
$10
createTime
$13
1403708429000
*4
$4
HSET
$22
hash:article:by:100245
$11
releaseTime
$13
1403708429000
*4
$4
HSET
$22
hash:article:by:100245
$10
updateTime
$13
1403708429000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100245
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100245
*3
$5
LPUSH
$15
list:article:id
$6
100245
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100245
*4
$4
HSET
$22
hash:article:by:100235
$2
id
$6
100235
*4
$4
HSET
$22
hash:article:by:100235
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100235
$9
articleId
$4
2190
*4
$4
HSET
$22
hash:article:by:100235
$5
title
$138
jplogic v1.0 开发案例--知识库管理（视频资料上传、格式转化、视频截图、视频预览、视频信息索引检索）
*4
$4
HSET
$22
hash:article:by:100235
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100235
$8
labelIds
$21
[217,218,219,220,221]
*4
$4
HSET
$22
hash:article:by:100235
$6
digest
$72
由于目前很多项目中应用到视频上传预览等功能，本文
*4
$4
HSET
$22
hash:article:by:100235
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100235
$7
content
$41
csdn/java/1_1_1_12_1504264507.649962.html
*4
$4
HSET
$22
hash:article:by:100235
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100235
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100235
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100235
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100235
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100235
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100235
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100235
$10
createTime
$13
1402498842000
*4
$4
HSET
$22
hash:article:by:100235
$11
releaseTime
$13
1402498842000
*4
$4
HSET
$22
hash:article:by:100235
$10
updateTime
$13
1402498842000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100235
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100235
*3
$5
LPUSH
$15
list:article:id
$6
100235
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100235
*4
$4
HSET
$22
hash:article:by:100623
$2
id
$6
100623
*4
$4
HSET
$22
hash:article:by:100623
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100623
$9
articleId
$4
2512
*4
$4
HSET
$22
hash:article:by:100623
$5
title
$33
设计模式——观察者模式
*4
$4
HSET
$22
hash:article:by:100623
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100623
$8
labelIds
$11
[18,12,349]
*4
$4
HSET
$22
hash:article:by:100623
$6
digest
$183
观察者模式是对象的行为模式，又叫发布-订阅(Publish/Subscribe)模式、模型-视图(Model/View)模式、源-监听器(Source/Listener)模式或从属者(Dependen...
*4
$4
HSET
$22
hash:article:by:100623
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100623
$7
content
$40
csdn/java/1_0_1_1_1504264865.233129.html
*4
$4
HSET
$22
hash:article:by:100623
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100623
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100623
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100623
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100623
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100623
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100623
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100623
$10
createTime
$13
1401976828000
*4
$4
HSET
$22
hash:article:by:100623
$11
releaseTime
$13
1401976828000
*4
$4
HSET
$22
hash:article:by:100623
$10
updateTime
$13
1401976828000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100623
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100623
*3
$5
LPUSH
$15
list:article:id
$6
100623
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100623
*4
$4
HSET
$22
hash:article:by:100315
$2
id
$6
100315
*4
$4
HSET
$22
hash:article:by:100315
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100315
$9
articleId
$4
2181
*4
$4
HSET
$22
hash:article:by:100315
$5
title
$107
jplogicv1.0开发开发案例之知识库文档信息索引检索（类仿百度搜索、类google搜索）
*4
$4
HSET
$22
hash:article:by:100315
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100315
$8
labelIds
$9
[315,316]
*4
$4
HSET
$22
hash:article:by:100315
$6
digest
$51
基于很多项目中都可以会使用针对海量
*4
$4
HSET
$22
hash:article:by:100315
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100315
$7
content
$41
csdn/java/1_1_1_11_1504264502.339877.html
*4
$4
HSET
$22
hash:article:by:100315
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100315
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100315
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100315
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100315
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100315
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100315
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100315
$10
createTime
$13
1401872423000
*4
$4
HSET
$22
hash:article:by:100315
$11
releaseTime
$13
1401872423000
*4
$4
HSET
$22
hash:article:by:100315
$10
updateTime
$13
1401872423000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100315
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100315
*3
$5
LPUSH
$15
list:article:id
$6
100315
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100315
*4
$4
HSET
$22
hash:article:by:100262
$2
id
$6
100262
*4
$4
HSET
$22
hash:article:by:100262
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100262
$9
articleId
$4
2490
*4
$4
HSET
$22
hash:article:by:100262
$5
title
$104
基于XML配置的Spring MVC（所需jar包，web.xml配置，处理器配置，视图解析器配置）
*4
$4
HSET
$22
hash:article:by:100262
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100262
$8
labelIds
$4
[27]
*4
$4
HSET
$22
hash:article:by:100262
$6
digest
$117
1、添加jar

2、web.xml配置


 xmlns="http://java.sun.com/xml/ns/javaee"

 xmlns:xsi="http://www.w3.org/200...
*4
$4
HSET
$22
hash:article:by:100262
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100262
$7
content
$40
csdn/java/1_0_2_8_1504264826.922156.html
*4
$4
HSET
$22
hash:article:by:100262
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100262
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100262
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100262
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100262
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100262
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100262
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100262
$10
createTime
$13
1400450455000
*4
$4
HSET
$22
hash:article:by:100262
$11
releaseTime
$13
1400450455000
*4
$4
HSET
$22
hash:article:by:100262
$10
updateTime
$13
1400450455000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100262
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100262
*3
$5
LPUSH
$15
list:article:id
$6
100262
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100262
*4
$4
HSET
$22
hash:article:by:100175
$2
id
$6
100175
*4
$4
HSET
$22
hash:article:by:100175
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100175
$9
articleId
$4
2564
*4
$4
HSET
$22
hash:article:by:100175
$5
title
$52
基于Struts+Hibernate开发过程中遇到的错误
*4
$4
HSET
$22
hash:article:by:100175
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100175
$8
labelIds
$5
[158]
*4
$4
HSET
$22
hash:article:by:100175
$6
digest
$156
1.import  javax.servlet.http.HttpServletRequest 导入包出错

导入包出错，通常是包未引入，HttpServletRequest包是浏览器通过http...
*4
$4
HSET
$22
hash:article:by:100175
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100175
$7
content
$41
csdn/java/1_1_1_11_1504264962.227282.html
*4
$4
HSET
$22
hash:article:by:100175
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100175
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100175
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100175
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100175
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100175
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100175
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100175
$10
createTime
$13
1400414422000
*4
$4
HSET
$22
hash:article:by:100175
$11
releaseTime
$13
1400414422000
*4
$4
HSET
$22
hash:article:by:100175
$10
updateTime
$13
1400414422000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100175
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100175
*3
$5
LPUSH
$15
list:article:id
$6
100175
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100175
*4
$4
HSET
$22
hash:article:by:100323
$2
id
$6
100323
*4
$4
HSET
$22
hash:article:by:100323
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100323
$9
articleId
$4
2178
*4
$4
HSET
$22
hash:article:by:100323
$5
title
$72
jplogic v1.0案例开发之知识库管理（文档管理等）（二）
*4
$4
HSET
$22
hash:article:by:100323
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100323
$8
labelIds
$21
[221,325,326,327,328]
*4
$4
HSET
$22
hash:article:by:100323
$6
digest
$54
jplogic v1.0开发陆续更新，意在和广大网友
*4
$4
HSET
$22
hash:article:by:100323
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100323
$7
content
$40
csdn/java/1_1_1_10_1504264501.21689.html
*4
$4
HSET
$22
hash:article:by:100323
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100323
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100323
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100323
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100323
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100323
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100323
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100323
$10
createTime
$13
1399762850000
*4
$4
HSET
$22
hash:article:by:100323
$11
releaseTime
$13
1399762850000
*4
$4
HSET
$22
hash:article:by:100323
$10
updateTime
$13
1399762850000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100323
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100323
*3
$5
LPUSH
$15
list:article:id
$6
100323
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100323
*4
$4
HSET
$22
hash:article:by:100782
$2
id
$6
100782
*4
$4
HSET
$22
hash:article:by:100782
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100782
$9
articleId
$4
2578
*4
$4
HSET
$22
hash:article:by:100782
$5
title
$14
J2EE---Servlet
*4
$4
HSET
$22
hash:article:by:100782
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100782
$8
labelIds
$5
[764]
*4
$4
HSET
$22
hash:article:by:100782
$6
digest
$259
Servlet


是一种独立于操作系统平台和网络传输协议的服务器端的Java应用程序，它用来扩展服务器的功能，可以生成动态的Web页面。最大的用途是通过动态响应客户机请求来扩展服务器功能。Servl...
*4
$4
HSET
$22
hash:article:by:100782
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100782
$7
content
$40
csdn/java/1_1_1_4_1504265014.590389.html
*4
$4
HSET
$22
hash:article:by:100782
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100782
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100782
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100782
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100782
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100782
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100782
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100782
$10
createTime
$13
1396206039000
*4
$4
HSET
$22
hash:article:by:100782
$11
releaseTime
$13
1396206039000
*4
$4
HSET
$22
hash:article:by:100782
$10
updateTime
$13
1396206039000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100782
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100782
*3
$5
LPUSH
$15
list:article:id
$6
100782
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100782
*4
$4
HSET
$22
hash:article:by:100308
$2
id
$6
100308
*4
$4
HSET
$22
hash:article:by:100308
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100308
$9
articleId
$4
2202
*4
$4
HSET
$22
hash:article:by:100308
$5
title
$54
jplogic v1.0案例开发之人员信息管理（一）
*4
$4
HSET
$22
hash:article:by:100308
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100308
$8
labelIds
$13
[229,309,241]
*4
$4
HSET
$22
hash:article:by:100308
$6
digest
$267
个人技术交流、合作群：376447127，我分享了使用jplogic来进行企业基础模块项目的开发的相关方法，每一个模块都使用平台通用的UI控件，控件本身绑定了相应的校验功能、以及权限控制属性等，组件还...
*4
$4
HSET
$22
hash:article:by:100308
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100308
$7
content
$40
csdn/java/1_1_1_9_1504264512.680452.html
*4
$4
HSET
$22
hash:article:by:100308
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100308
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100308
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100308
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100308
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100308
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100308
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100308
$10
createTime
$13
1396184431000
*4
$4
HSET
$22
hash:article:by:100308
$11
releaseTime
$13
1396184431000
*4
$4
HSET
$22
hash:article:by:100308
$10
updateTime
$13
1396184431000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100308
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100308
*3
$5
LPUSH
$15
list:article:id
$6
100308
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100308
*4
$4
HSET
$22
hash:article:by:100570
$2
id
$6
100570
*4
$4
HSET
$22
hash:article:by:100570
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100570
$9
articleId
$4
2201
*4
$4
HSET
$22
hash:article:by:100570
$5
title
$76
jplogic v1.0 Java快速开发平台  Vs 目前市面上的快速开发平台
*4
$4
HSET
$22
hash:article:by:100570
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100570
$8
labelIds
$17
[229,528,217,529]
*4
$4
HSET
$22
hash:article:by:100570
$6
digest
$267
平台登录界面（支持多系统登录或者单点登录）：


系统主页面（demo）：


主页页面的内容可以需要灵活定制
本人往后会陆续更新平台使用案例，平台交流、技术交流或项目合作可以加群交流：3764471...
*4
$4
HSET
$22
hash:article:by:100570
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100570
$7
content
$40
csdn/java/1_1_1_8_1504264511.702687.html
*4
$4
HSET
$22
hash:article:by:100570
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100570
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100570
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100570
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100570
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100570
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100570
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100570
$10
createTime
$13
1395795650000
*4
$4
HSET
$22
hash:article:by:100570
$11
releaseTime
$13
1395795650000
*4
$4
HSET
$22
hash:article:by:100570
$10
updateTime
$13
1395795650000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100570
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100570
*3
$5
LPUSH
$15
list:article:id
$6
100570
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100570
*4
$4
HSET
$22
hash:article:by:100788
$2
id
$6
100788
*4
$4
HSET
$22
hash:article:by:100788
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100788
$9
articleId
$4
2577
*4
$4
HSET
$22
hash:article:by:100788
$5
title
$10
J2EE--JDBC
*4
$4
HSET
$22
hash:article:by:100788
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100788
$8
labelIds
$5
[764]
*4
$4
HSET
$22
hash:article:by:100788
$6
digest
$187
JDBC


（java Data Base Connectivity Java数据库链接）是一种用于执行SQL语句的JavaAPI，可以为多种关系数据库提
供统一访问，它由一组用Java语言...
*4
$4
HSET
$22
hash:article:by:100788
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100788
$7
content
$40
csdn/java/1_1_1_3_1504265013.516284.html
*4
$4
HSET
$22
hash:article:by:100788
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100788
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100788
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100788
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100788
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100788
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100788
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100788
$10
createTime
$13
1395259220000
*4
$4
HSET
$22
hash:article:by:100788
$11
releaseTime
$13
1395259220000
*4
$4
HSET
$22
hash:article:by:100788
$10
updateTime
$13
1395259220000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100788
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100788
*3
$5
LPUSH
$15
list:article:id
$6
100788
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100788
*4
$4
HSET
$22
hash:article:by:100785
$2
id
$6
100785
*4
$4
HSET
$22
hash:article:by:100785
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100785
$9
articleId
$4
2579
*4
$4
HSET
$22
hash:article:by:100785
$5
title
$20
J2EE规范--Weblogic
*4
$4
HSET
$22
hash:article:by:100785
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100785
$8
labelIds
$8
[18,764]
*4
$4
HSET
$22
hash:article:by:100785
$6
digest
$224
什么是weblogic
  是美国Oracl公司出品的一个应用服务器。
 
Weblogic可以做什么
 
      是用于开发，继承，部署和管理分布式web应用，网络和数据库应用的java应用服务...
*4
$4
HSET
$22
hash:article:by:100785
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100785
$7
content
$40
csdn/java/1_1_1_2_1504265015.679375.html
*4
$4
HSET
$22
hash:article:by:100785
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100785
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100785
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100785
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100785
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100785
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100785
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100785
$10
createTime
$13
1394636451000
*4
$4
HSET
$22
hash:article:by:100785
$11
releaseTime
$13
1394636451000
*4
$4
HSET
$22
hash:article:by:100785
$10
updateTime
$13
1394636451000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100785
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100785
*3
$5
LPUSH
$15
list:article:id
$6
100785
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100785
*4
$4
HSET
$22
hash:article:by:100631
$2
id
$6
100631
*4
$4
HSET
$22
hash:article:by:100631
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100631
$9
articleId
$4
2204
*4
$4
HSET
$22
hash:article:by:100631
$5
title
$22
java快速开发平台
*4
$4
HSET
$22
hash:article:by:100631
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100631
$8
labelIds
$21
[582,241,326,583,584]
*4
$4
HSET
$22
hash:article:by:100631
$6
digest
$303
一直没有习惯写技术博客，看着诸多大牛分享自己的一些项目经验。本人也突然有想写博客的冲动，旨在结交有识之士（朋友），彼此分享经验。同时也希望中国的软件行业有更大突破性的发展。当然如果希望进行项目合作也可...
*4
$4
HSET
$22
hash:article:by:100631
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100631
$7
content
$39
csdn/java/1_1_1_7_1504264513.99425.html
*4
$4
HSET
$22
hash:article:by:100631
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100631
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100631
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100631
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100631
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100631
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100631
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100631
$10
createTime
$13
1394557215000
*4
$4
HSET
$22
hash:article:by:100631
$11
releaseTime
$13
1394557215000
*4
$4
HSET
$22
hash:article:by:100631
$10
updateTime
$13
1394557215000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100631
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100631
*3
$5
LPUSH
$15
list:article:id
$6
100631
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100631
*4
$4
HSET
$22
hash:article:by:100789
$2
id
$6
100789
*4
$4
HSET
$22
hash:article:by:100789
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100789
$9
articleId
$4
2576
*4
$4
HSET
$22
hash:article:by:100789
$5
title
$13
java多线程
*4
$4
HSET
$22
hash:article:by:100789
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100789
$8
labelIds
$7
[18,52]
*4
$4
HSET
$22
hash:article:by:100789
$6
digest
$284
说道多线程
 
就得来认识下咱们经常说道的几个概念。
进程：
是一个静态的概念，它本身是不能动的，每个进程都是有一个主方法的执行路径，这个路径就是一个具体的线程。
 
线程：不同的程序执行路径。
 
...
*4
$4
HSET
$22
hash:article:by:100789
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100789
$7
content
$40
csdn/java/1_1_1_1_1504265012.493952.html
*4
$4
HSET
$22
hash:article:by:100789
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100789
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100789
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100789
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100789
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100789
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100789
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100789
$10
createTime
$13
1393945255000
*4
$4
HSET
$22
hash:article:by:100789
$11
releaseTime
$13
1393945255000
*4
$4
HSET
$22
hash:article:by:100789
$10
updateTime
$13
1393945255000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100789
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100789
*3
$5
LPUSH
$15
list:article:id
$6
100789
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100789
*4
$4
HSET
$22
hash:article:by:100787
$2
id
$6
100787
*4
$4
HSET
$22
hash:article:by:100787
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100787
$9
articleId
$4
2575
*4
$4
HSET
$22
hash:article:by:100787
$5
title
$11
java--IO流
*4
$4
HSET
$22
hash:article:by:100787
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100787
$8
labelIds
$4
[18]
*4
$4
HSET
$22
hash:article:by:100787
$6
digest
$259
java中的流按照不同的方式，可以有不同的分类标准 。
但还是有基本的公有方法，读，写，关闭，缓冲等。


 
 
不同的标准有不同的类型。
 
按照功能分配，有节点和处理。节点和处理...
*4
$4
HSET
$22
hash:article:by:100787
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100787
$7
content
$40
csdn/java/1_1_1_0_1504265011.473885.html
*4
$4
HSET
$22
hash:article:by:100787
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100787
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100787
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100787
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100787
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100787
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100787
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100787
$10
createTime
$13
1393340447000
*4
$4
HSET
$22
hash:article:by:100787
$11
releaseTime
$13
1393340447000
*4
$4
HSET
$22
hash:article:by:100787
$10
updateTime
$13
1393340447000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100787
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100787
*3
$5
LPUSH
$15
list:article:id
$6
100787
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100787
*4
$4
HSET
$22
hash:article:by:100550
$2
id
$6
100550
*4
$4
HSET
$22
hash:article:by:100550
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100550
$9
articleId
$4
2552
*4
$4
HSET
$22
hash:article:by:100550
$5
title
$49
设计模式-结构型模式总结实例（三）
*4
$4
HSET
$22
hash:article:by:100550
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100550
$8
labelIds
$18
[12,443,521,89,53]
*4
$4
HSET
$22
hash:article:by:100550
$6
digest
$247
装饰模式
动态地给一个对象增加一些额外的职责，就增加的功能来说，Decorator模式相比生成子类更加灵活。
 
 
Component（被装饰对象基类）： 定义对象的接口，可以给这些对象动态...
*4
$4
HSET
$22
hash:article:by:100550
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100550
$7
content
$40
csdn/java/1_0_1_0_1504264945.970071.html
*4
$4
HSET
$22
hash:article:by:100550
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100550
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100550
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100550
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100550
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100550
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100550
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100550
$10
createTime
$13
1389812448000
*4
$4
HSET
$22
hash:article:by:100550
$11
releaseTime
$13
1389812448000
*4
$4
HSET
$22
hash:article:by:100550
$10
updateTime
$13
1389812448000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100550
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100550
*3
$5
LPUSH
$15
list:article:id
$6
100550
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100550
*4
$4
HSET
$22
hash:article:by:100549
$2
id
$6
100549
*4
$4
HSET
$22
hash:article:by:100549
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100549
$9
articleId
$4
2553
*4
$4
HSET
$22
hash:article:by:100549
$5
title
$49
设计模式-结构型模式总结实例（二）
*4
$4
HSET
$22
hash:article:by:100549
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100549
$8
labelIds
$17
[12,53,39,520,77]
*4
$4
HSET
$22
hash:article:by:100549
$6
digest
$290
代理模式
为其他对象提供一种代理以控制对这个对象的访问。在某些情况下，一个对象不适合或者不能直接引用另一个对象，而代理对象可以在客户端和目标对象之间起到中介的作用。
 
抽象角色：声明真实对象和...
*4
$4
HSET
$22
hash:article:by:100549
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100549
$7
content
$40
csdn/java/1_0_1_1_1504264946.717355.html
*4
$4
HSET
$22
hash:article:by:100549
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100549
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100549
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100549
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100549
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100549
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100549
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100549
$10
createTime
$13
1389805212000
*4
$4
HSET
$22
hash:article:by:100549
$11
releaseTime
$13
1389805212000
*4
$4
HSET
$22
hash:article:by:100549
$10
updateTime
$13
1389805212000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100549
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100549
*3
$5
LPUSH
$15
list:article:id
$6
100549
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100549
*4
$4
HSET
$22
hash:article:by:100551
$2
id
$6
100551
*4
$4
HSET
$22
hash:article:by:100551
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100551
$9
articleId
$4
2554
*4
$4
HSET
$22
hash:article:by:100551
$5
title
$49
设计模式-结构型模式总结实例（一）
*4
$4
HSET
$22
hash:article:by:100551
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100551
$8
labelIds
$18
[53,12,448,55,522]
*4
$4
HSET
$22
hash:article:by:100551
$6
digest
$288
组合模式
 将对象以树形结构组织起来,以达成“部分－整体”的层次结构，使得客户端对单个对象和组合对象的使用具有一致性.
有时候又叫做部分-整体模式，它使我们树型结构的问题中，模糊了简单元素和复杂元...
*4
$4
HSET
$22
hash:article:by:100551
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100551
$7
content
$40
csdn/java/1_0_1_2_1504264947.824552.html
*4
$4
HSET
$22
hash:article:by:100551
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100551
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100551
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100551
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100551
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100551
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100551
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100551
$10
createTime
$13
1389805209000
*4
$4
HSET
$22
hash:article:by:100551
$11
releaseTime
$13
1389805209000
*4
$4
HSET
$22
hash:article:by:100551
$10
updateTime
$13
1389805209000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100551
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100551
*3
$5
LPUSH
$15
list:article:id
$6
100551
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100551
*4
$4
HSET
$22
hash:article:by:100547
$2
id
$6
100547
*4
$4
HSET
$22
hash:article:by:100547
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100547
$9
articleId
$4
2555
*4
$4
HSET
$22
hash:article:by:100547
$5
title
$49
设计模式-行为型模式总结实例（四）
*4
$4
HSET
$22
hash:article:by:100547
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100547
$8
labelIds
$16
[12,516,346,517]
*4
$4
HSET
$22
hash:article:by:100547
$6
digest
$209
解释器模式
给定一个语言，定义他的文法的一个表示，并定义一个解释器，这个解释器使用该表示来解释语言中的句子。

package com.ruishenh.designPatter.action....
*4
$4
HSET
$22
hash:article:by:100547
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100547
$7
content
$40
csdn/java/1_0_1_3_1504264948.662676.html
*4
$4
HSET
$22
hash:article:by:100547
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100547
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100547
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100547
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100547
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100547
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100547
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100547
$10
createTime
$13
1389643202000
*4
$4
HSET
$22
hash:article:by:100547
$11
releaseTime
$13
1389643202000
*4
$4
HSET
$22
hash:article:by:100547
$10
updateTime
$13
1389643202000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100547
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100547
*3
$5
LPUSH
$15
list:article:id
$6
100547
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100547
*4
$4
HSET
$22
hash:article:by:100552
$2
id
$6
100552
*4
$4
HSET
$22
hash:article:by:100552
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100552
$9
articleId
$4
2556
*4
$4
HSET
$22
hash:article:by:100552
$5
title
$49
设计模式-行为型模式总结实例（三）
*4
$4
HSET
$22
hash:article:by:100552
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100552
$8
labelIds
$19
[12,523,524,85,517]
*4
$4
HSET
$22
hash:article:by:100552
$6
digest
$184
职责链模式
使多个对象都有机会处理请求，从而避免请求的发送者和接收者之间的耦合关系 
 package com.ruishenh.designPatter.action.chainOfResp;
...
*4
$4
HSET
$22
hash:article:by:100552
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100552
$7
content
$40
csdn/java/1_0_1_4_1504264949.930243.html
*4
$4
HSET
$22
hash:article:by:100552
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100552
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100552
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100552
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100552
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100552
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100552
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100552
$10
createTime
$13
1389610804000
*4
$4
HSET
$22
hash:article:by:100552
$11
releaseTime
$13
1389610804000
*4
$4
HSET
$22
hash:article:by:100552
$10
updateTime
$13
1389610804000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100552
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100552
*3
$5
LPUSH
$15
list:article:id
$6
100552
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100552
*4
$4
HSET
$22
hash:article:by:100553
$2
id
$6
100553
*4
$4
HSET
$22
hash:article:by:100553
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100553
$9
articleId
$4
2557
*4
$4
HSET
$22
hash:article:by:100553
$5
title
$49
设计模式-行为型模式总结实例（二）
*4
$4
HSET
$22
hash:article:by:100553
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100553
$8
labelIds
$19
[12,344,131,178,53]
*4
$4
HSET
$22
hash:article:by:100553
$6
digest
$228
命令模式
将一个请求封装为一个对象，从而使你可以用不同的请求对客户进行参数化，对请求排队和记录请求日志，以及支持可撤销的操作。
 
package com.ruishenh.designPatt...
*4
$4
HSET
$22
hash:article:by:100553
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100553
$7
content
$40
csdn/java/1_0_1_5_1504264950.980989.html
*4
$4
HSET
$22
hash:article:by:100553
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100553
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100553
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100553
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100553
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100553
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100553
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100553
$10
createTime
$13
1389474015000
*4
$4
HSET
$22
hash:article:by:100553
$11
releaseTime
$13
1389474015000
*4
$4
HSET
$22
hash:article:by:100553
$10
updateTime
$13
1389474015000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100553
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100553
*3
$5
LPUSH
$15
list:article:id
$6
100553
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100553
*4
$4
HSET
$22
hash:article:by:100548
$2
id
$6
100548
*4
$4
HSET
$22
hash:article:by:100548
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100548
$9
articleId
$4
2558
*4
$4
HSET
$22
hash:article:by:100548
$5
title
$49
设计模式-行为型模式总结实例（一）
*4
$4
HSET
$22
hash:article:by:100548
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100548
$8
labelIds
$19
[518,12,53,519,349]
*4
$4
HSET
$22
hash:article:by:100548
$6
digest
$190
迭代器模式
提供一个方法顺序访问一个聚合对象的各个元素，而又不需要暴露该对象的内部表示。
 
package com.ruishenh.designPatter.action.iterator;...
*4
$4
HSET
$22
hash:article:by:100548
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100548
$7
content
$40
csdn/java/1_0_1_6_1504264951.984428.html
*4
$4
HSET
$22
hash:article:by:100548
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100548
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100548
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100548
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100548
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100548
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100548
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100548
$10
createTime
$13
1389290421000
*4
$4
HSET
$22
hash:article:by:100548
$11
releaseTime
$13
1389290421000
*4
$4
HSET
$22
hash:article:by:100548
$10
updateTime
$13
1389290421000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100548
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100548
*3
$5
LPUSH
$15
list:article:id
$6
100548
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100548
*4
$4
HSET
$22
hash:article:by:100673
$2
id
$6
100673
*4
$4
HSET
$22
hash:article:by:100673
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100673
$9
articleId
$4
2559
*4
$4
HSET
$22
hash:article:by:100673
$5
title
$34
设计模式-创建型总结实例
*4
$4
HSET
$22
hash:article:by:100673
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100673
$8
labelIds
$11
[18,12,636]
*4
$4
HSET
$22
hash:article:by:100673
$6
digest
$266
创建型
 
单例模式
Singleton，单例模式：保证一个类只有一个实例，并提供一个访问它的全局访问点 
java中单例模式是一种常见的设计模式，单例模式分三种：懒汉式单例、饿汉式单例、登记式单例三...
*4
$4
HSET
$22
hash:article:by:100673
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100673
$7
content
$40
csdn/java/1_0_1_7_1504264953.104042.html
*4
$4
HSET
$22
hash:article:by:100673
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100673
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100673
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100673
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100673
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100673
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100673
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100673
$10
createTime
$13
1388768446000
*4
$4
HSET
$22
hash:article:by:100673
$11
releaseTime
$13
1388768446000
*4
$4
HSET
$22
hash:article:by:100673
$10
updateTime
$13
1388768446000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100673
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100673
*3
$5
LPUSH
$15
list:article:id
$6
100673
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100673
*4
$4
HSET
$22
hash:article:by:100271
$2
id
$6
100271
*4
$4
HSET
$22
hash:article:by:100271
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100271
$9
articleId
$4
2330
*4
$4
HSET
$22
hash:article:by:100271
$5
title
$21
神奇的大内核锁
*4
$4
HSET
$22
hash:article:by:100271
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100271
$8
labelIds
$21
[159,269,270,215,271]
*4
$4
HSET
$22
hash:article:by:100271
$6
digest
$185
Big Kernel Lock（BKL）（大内核锁），是linux内核中使用到的一种锁，它跟普通的锁原理上的一样的：lock_kernel();/* 临界区 */unlock_kernel();但是它...
*4
$4
HSET
$22
hash:article:by:100271
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100271
$7
content
$41
csdn/linux/1_0_1_0_1504264638.490547.html
*4
$4
HSET
$22
hash:article:by:100271
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100271
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100271
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100271
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100271
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100271
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100271
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100271
$10
createTime
$13
1378285255000
*4
$4
HSET
$22
hash:article:by:100271
$11
releaseTime
$13
1378285255000
*4
$4
HSET
$22
hash:article:by:100271
$10
updateTime
$13
1378285255000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100271
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100271
*3
$5
LPUSH
$15
list:article:id
$6
100271
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100271
*4
$4
HSET
$22
hash:article:by:100493
$2
id
$6
100493
*4
$4
HSET
$22
hash:article:by:100493
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100493
$9
articleId
$4
2332
*4
$4
HSET
$22
hash:article:by:100493
$5
title
$36
Linux2.6内核 -- 结构的初始化
*4
$4
HSET
$22
hash:article:by:100493
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100493
$8
labelIds
$18
[61,35,21,100,183]
*4
$4
HSET
$22
hash:article:by:100493
$6
digest
$193
Linux 内核中用到了大量的结构体，在编码规范中也给出了结构体初始化的规则，这篇文章中有对其的解释：http://blog.csdn.net/dlutbrucezhang/article/detai...
*4
$4
HSET
$22
hash:article:by:100493
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100493
$7
content
$41
csdn/linux/1_0_1_1_1504264639.611558.html
*4
$4
HSET
$22
hash:article:by:100493
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100493
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100493
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100493
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100493
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100493
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100493
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100493
$10
createTime
$13
1377439206000
*4
$4
HSET
$22
hash:article:by:100493
$11
releaseTime
$13
1377439206000
*4
$4
HSET
$22
hash:article:by:100493
$10
updateTime
$13
1377439206000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100493
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100493
*3
$5
LPUSH
$15
list:article:id
$6
100493
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100493
*4
$4
HSET
$22
hash:article:by:100435
$2
id
$6
100435
*4
$4
HSET
$22
hash:article:by:100435
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100435
$9
articleId
$4
2334
*4
$4
HSET
$22
hash:article:by:100435
$5
title
$37
Linux2.6内核 -- 编码风格（3）
*4
$4
HSET
$22
hash:article:by:100435
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100435
$8
labelIds
$19
[35,416,36,159,100]
*4
$4
HSET
$22
hash:article:by:100435
$6
digest
$221
9.typedef    内核开发者们强烈反对使用 typedef 语句。他们的理由是：    1> typedef 掩盖了数据的真实类型    2> 由于数据类型隐藏起来了，所以很容易因此而犯错误，...
*4
$4
HSET
$22
hash:article:by:100435
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100435
$7
content
$41
csdn/linux/1_0_1_2_1504264640.909459.html
*4
$4
HSET
$22
hash:article:by:100435
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100435
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100435
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100435
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100435
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100435
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100435
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100435
$10
createTime
$13
1377432048000
*4
$4
HSET
$22
hash:article:by:100435
$11
releaseTime
$13
1377432048000
*4
$4
HSET
$22
hash:article:by:100435
$10
updateTime
$13
1377432048000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100435
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100435
*3
$5
LPUSH
$15
list:article:id
$6
100435
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100435
*4
$4
HSET
$22
hash:article:by:100436
$2
id
$6
100436
*4
$4
HSET
$22
hash:article:by:100436
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100436
$9
articleId
$4
2336
*4
$4
HSET
$22
hash:article:by:100436
$5
title
$37
Linux2.6内核 -- 编码风格（2）
*4
$4
HSET
$22
hash:article:by:100436
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100436
$8
labelIds
$19
[35,416,100,21,285]
*4
$4
HSET
$22
hash:article:by:100436
$6
digest
$264
5.每行代码的长度      源代码中要尽可能的保证每行代码长度不超过80个字符，因为这样做可以使代码最适合在标准的 80 * 24 的终端上显示。事实上，并不存在一个广泛接受的标准--如果代码行超过...
*4
$4
HSET
$22
hash:article:by:100436
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100436
$7
content
$41
csdn/linux/1_0_1_3_1504264641.823117.html
*4
$4
HSET
$22
hash:article:by:100436
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100436
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100436
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100436
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100436
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100436
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100436
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100436
$10
createTime
$13
1377421234000
*4
$4
HSET
$22
hash:article:by:100436
$11
releaseTime
$13
1377421234000
*4
$4
HSET
$22
hash:article:by:100436
$10
updateTime
$13
1377421234000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100436
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100436
*3
$5
LPUSH
$15
list:article:id
$6
100436
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100436
*4
$4
HSET
$22
hash:article:by:100448
$2
id
$6
100448
*4
$4
HSET
$22
hash:article:by:100448
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100448
$9
articleId
$4
2349
*4
$4
HSET
$22
hash:article:by:100448
$5
title
$37
Linux2.6内核 -- 编码风格（1）
*4
$4
HSET
$22
hash:article:by:100448
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100448
$8
labelIds
$18
[35,62,406,100,21]
*4
$4
HSET
$22
hash:article:by:100448
$6
digest
$253
像所有其他大型软件一样，Linux 制定了一套编码风格，对代码的格式，风格和布局做出了规定。下面我就对 2.6 内核中的代码约定进行介绍。      1.缩进      缩进风格是用制表位（Tab）每...
*4
$4
HSET
$22
hash:article:by:100448
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100448
$7
content
$41
csdn/linux/1_0_1_4_1504264651.718805.html
*4
$4
HSET
$22
hash:article:by:100448
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100448
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100448
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100448
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100448
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100448
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100448
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100448
$10
createTime
$13
1377421210000
*4
$4
HSET
$22
hash:article:by:100448
$11
releaseTime
$13
1377421210000
*4
$4
HSET
$22
hash:article:by:100448
$10
updateTime
$13
1377421210000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100448
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100448
*3
$5
LPUSH
$15
list:article:id
$6
100448
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100448
*4
$4
HSET
$22
hash:article:by:100565
$2
id
$6
100565
*4
$4
HSET
$22
hash:article:by:100565
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100565
$9
articleId
$4
2354
*4
$4
HSET
$22
hash:article:by:100565
$5
title
$10
mmap详解
*4
$4
HSET
$22
hash:article:by:100565
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100565
$8
labelIds
$19
[165,78,183,100,21]
*4
$4
HSET
$22
hash:article:by:100565
$6
digest
$293
共享内存可以说是最有用的进程间通信方式，也是最快的IPC形式, 因为进程可以直接读写内存，而不需要任何数据的拷贝。对于像管道和消息队列等通信方式，则需要在内核和用户空间进行四次的数据拷贝，而共享内存则...
*4
$4
HSET
$22
hash:article:by:100565
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100565
$7
content
$41
csdn/linux/1_0_1_5_1504264655.931734.html
*4
$4
HSET
$22
hash:article:by:100565
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100565
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100565
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100565
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100565
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100565
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100565
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100565
$10
createTime
$13
1377360037000
*4
$4
HSET
$22
hash:article:by:100565
$11
releaseTime
$13
1377360037000
*4
$4
HSET
$22
hash:article:by:100565
$10
updateTime
$13
1377360037000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100565
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100565
*3
$5
LPUSH
$15
list:article:id
$6
100565
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100565
*4
$4
HSET
$22
hash:article:by:100439
$2
id
$6
100439
*4
$4
HSET
$22
hash:article:by:100439
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100439
$9
articleId
$4
2355
*4
$4
HSET
$22
hash:article:by:100439
$5
title
$42
Linux2.6内核--对块IO层操作的讨论
*4
$4
HSET
$22
hash:article:by:100439
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100439
$8
labelIds
$20
[215,246,21,100,419]
*4
$4
HSET
$22
hash:article:by:100439
$6
digest
$303
当一个块被调入内存时（也就是说，在读入后或等待写出时），它要存储在缓冲区中。每个缓冲区与一个块对应，它相当于是磁盘块在内存中的表示。块包含一个或多个扇区，但大小不能超过一页，所以一页可以容纳一个或多个...
*4
$4
HSET
$22
hash:article:by:100439
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100439
$7
content
$41
csdn/linux/1_0_1_6_1504264656.961495.html
*4
$4
HSET
$22
hash:article:by:100439
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100439
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100439
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100439
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100439
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100439
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100439
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100439
$10
createTime
$13
1377266444000
*4
$4
HSET
$22
hash:article:by:100439
$11
releaseTime
$13
1377266444000
*4
$4
HSET
$22
hash:article:by:100439
$10
updateTime
$13
1377266444000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100439
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100439
*3
$5
LPUSH
$15
list:article:id
$6
100439
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100439
*4
$4
HSET
$22
hash:article:by:100449
$2
id
$6
100449
*4
$4
HSET
$22
hash:article:by:100449
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100449
$9
articleId
$4
2352
*4
$4
HSET
$22
hash:article:by:100449
$5
title
$55
Linux2.6内核--VFS层中和进程相关的数据结构
*4
$4
HSET
$22
hash:article:by:100449
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100449
$8
labelIds
$20
[188,426,21,100,153]
*4
$4
HSET
$22
hash:article:by:100449
$6
digest
$249
系统中的每一个进程都有自己的一组打开的文件，像根文件系统，当前工作目录，安装点等。有三个数据结构将 VFS 层和系统的进程紧密的联系在一起，它们分别是：file_struct，fs_struct 和 ...
*4
$4
HSET
$22
hash:article:by:100449
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100449
$7
content
$41
csdn/linux/1_0_1_7_1504264654.065728.html
*4
$4
HSET
$22
hash:article:by:100449
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100449
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100449
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100449
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100449
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100449
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100449
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100449
$10
createTime
$13
1377262801000
*4
$4
HSET
$22
hash:article:by:100449
$11
releaseTime
$13
1377262801000
*4
$4
HSET
$22
hash:article:by:100449
$10
updateTime
$13
1377262801000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100449
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100449
*3
$5
LPUSH
$15
list:article:id
$6
100449
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100449
*4
$4
HSET
$22
hash:article:by:100591
$2
id
$6
100591
*4
$4
HSET
$22
hash:article:by:100591
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100591
$9
articleId
$4
2353
*4
$4
HSET
$22
hash:article:by:100591
$5
title
$40
Linux2.6内核--内存管理（2）--区
*4
$4
HSET
$22
hash:article:by:100591
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100591
$8
labelIds
$20
[120,216,21,100,549]
*4
$4
HSET
$22
hash:article:by:100591
$6
digest
$243
由于硬件的限制，内核不能对所有的页一视同仁。有些页位于内存中的特定物理地址上，所以，不能将其用于一些特别的任务。（关于内存分页机制可以查看：http://blog.csdn.net/dlutbruce...
*4
$4
HSET
$22
hash:article:by:100591
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100591
$7
content
$41
csdn/linux/1_0_1_9_1504264654.931242.html
*4
$4
HSET
$22
hash:article:by:100591
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100591
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100591
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100591
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100591
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100591
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100591
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100591
$10
createTime
$13
1377180021000
*4
$4
HSET
$22
hash:article:by:100591
$11
releaseTime
$13
1377180021000
*4
$4
HSET
$22
hash:article:by:100591
$10
updateTime
$13
1377180021000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100591
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100591
*3
$5
LPUSH
$15
list:article:id
$6
100591
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100591
*4
$4
HSET
$22
hash:article:by:100430
$2
id
$6
100430
*4
$4
HSET
$22
hash:article:by:100430
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100430
$9
articleId
$4
2350
*4
$4
HSET
$22
hash:article:by:100430
$5
title
$49
Linux2.6内核--内存管理（1）--分页机制
*4
$4
HSET
$22
hash:article:by:100430
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100430
$8
labelIds
$18
[35,120,44,21,100]
*4
$4
HSET
$22
hash:article:by:100430
$6
digest
$303
在内核里分配内存可不像在其他地方分配内存那么容易。造成这种局面的因素很多。从根本上讲，是因为内核本身不能像用户空间那样奢侈的使用内存。内核与用户空间不同，它不具备这种能力，它不支持简单便捷的内存分配方...
*4
$4
HSET
$22
hash:article:by:100430
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100430
$7
content
$41
csdn/linux/1_0_1_8_1504264652.827594.html
*4
$4
HSET
$22
hash:article:by:100430
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100430
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100430
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100430
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100430
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100430
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100430
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100430
$10
createTime
$13
1377176451000
*4
$4
HSET
$22
hash:article:by:100430
$11
releaseTime
$13
1377176451000
*4
$4
HSET
$22
hash:article:by:100430
$10
updateTime
$13
1377176451000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100430
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100430
*3
$5
LPUSH
$15
list:article:id
$6
100430
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100430
*4
$4
HSET
$22
hash:article:by:100277
$2
id
$6
100277
*4
$4
HSET
$22
hash:article:by:100277
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100277
$9
articleId
$4
2351
*4
$4
HSET
$22
hash:article:by:100277
$5
title
$23
Linux内核高端内存
*4
$4
HSET
$22
hash:article:by:100277
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100277
$8
labelIds
$19
[35,279,280,21,100]
*4
$4
HSET
$22
hash:article:by:100277
$6
digest
$256
Linux内核地址映射模型x86 CPU采用了段页式地址映射模型。进程代码中的地址为逻辑地址，经过段页式地址映射后，才真正访问物理内存。段页式机制如下图。 Linux内核地址空间划分通常32位Linu...
*4
$4
HSET
$22
hash:article:by:100277
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100277
$7
content
$42
csdn/linux/1_0_1_10_1504264653.778166.html
*4
$4
HSET
$22
hash:article:by:100277
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100277
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100277
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100277
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100277
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100277
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100277
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100277
$10
createTime
$13
1377176411000
*4
$4
HSET
$22
hash:article:by:100277
$11
releaseTime
$13
1377176411000
*4
$4
HSET
$22
hash:article:by:100277
$10
updateTime
$13
1377176411000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100277
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100277
*3
$5
LPUSH
$15
list:article:id
$6
100277
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100277
*4
$4
HSET
$22
hash:article:by:100248
$2
id
$6
100248
*4
$4
HSET
$22
hash:article:by:100248
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100248
$9
articleId
$4
2348
*4
$4
HSET
$22
hash:article:by:100248
$5
title
$23
linux内存屏障浅析
*4
$4
HSET
$22
hash:article:by:100248
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100248
$8
labelIds
$20
[215,162,244,21,100]
*4
$4
HSET
$22
hash:article:by:100248
$6
digest
$297
内存屏障主要解决了两个问题：单处理器下的乱序问题和多处理器下的内存同步问题。为什么会乱序现在的CPU一般采用流水线来执行指令。一个指令的执行被分成：取指、译码、访存、执行、写回、等若干个阶段。然后，多...
*4
$4
HSET
$22
hash:article:by:100248
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100248
$7
content
$42
csdn/linux/1_0_1_11_1504264650.697342.html
*4
$4
HSET
$22
hash:article:by:100248
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100248
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100248
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100248
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100248
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100248
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100248
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100248
$10
createTime
$13
1377158434000
*4
$4
HSET
$22
hash:article:by:100248
$11
releaseTime
$13
1377158434000
*4
$4
HSET
$22
hash:article:by:100248
$10
updateTime
$13
1377158434000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100248
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100248
*3
$5
LPUSH
$15
list:article:id
$6
100248
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100248
*4
$4
HSET
$22
hash:article:by:100231
$2
id
$6
100231
*4
$4
HSET
$22
hash:article:by:100231
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100231
$9
articleId
$4
2345
*4
$4
HSET
$22
hash:article:by:100231
$5
title
$21
LINUX自旋锁详解2
*4
$4
HSET
$22
hash:article:by:100231
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100231
$8
labelIds
$19
[35,113,21,100,211]
*4
$4
HSET
$22
hash:article:by:100231
$6
digest
$271
对于互斥, 旗标是一个有用的工具, 但是它们不是内核提供的唯一这样的工具. 相反, 大部分加锁是由一种称为自旋锁的机制来实现. 不象旗标, 自旋锁可用在不能睡眠的代码中, 例如中断处理. 当正确地使用...
*4
$4
HSET
$22
hash:article:by:100231
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100231
$7
content
$42
csdn/linux/1_0_1_12_1504264647.631238.html
*4
$4
HSET
$22
hash:article:by:100231
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100231
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100231
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100231
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100231
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100231
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100231
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100231
$10
createTime
$13
1377100804000
*4
$4
HSET
$22
hash:article:by:100231
$11
releaseTime
$13
1377100804000
*4
$4
HSET
$22
hash:article:by:100231
$10
updateTime
$13
1377100804000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100231
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100231
*3
$5
LPUSH
$15
list:article:id
$6
100231
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100231
*4
$4
HSET
$22
hash:article:by:100305
$2
id
$6
100305
*4
$4
HSET
$22
hash:article:by:100305
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100305
$9
articleId
$4
2347
*4
$4
HSET
$22
hash:article:by:100305
$5
title
$20
LINUX自旋锁详解
*4
$4
HSET
$22
hash:article:by:100305
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100305
$8
labelIds
$19
[35,210,100,21,211]
*4
$4
HSET
$22
hash:article:by:100305
$6
digest
$289
加锁（locking）是一种广泛应用的同步技术。当内核控制路径必须访问共享数据结构或进入临界区时，就需要为自己获取一把“锁”。由锁机制保护的资源非常类似于限制于房间内的资源，当某人进入房间时，就把门锁...
*4
$4
HSET
$22
hash:article:by:100305
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100305
$7
content
$42
csdn/linux/1_0_1_13_1504264649.728579.html
*4
$4
HSET
$22
hash:article:by:100305
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100305
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100305
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100305
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100305
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100305
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100305
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100305
$10
createTime
$13
1377100802000
*4
$4
HSET
$22
hash:article:by:100305
$11
releaseTime
$13
1377100802000
*4
$4
HSET
$22
hash:article:by:100305
$10
updateTime
$13
1377100802000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100305
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100305
*3
$5
LPUSH
$15
list:article:id
$6
100305
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100305
*4
$4
HSET
$22
hash:article:by:100726
$2
id
$6
100726
*4
$4
HSET
$22
hash:article:by:100726
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100726
$9
articleId
$4
2346
*4
$4
HSET
$22
hash:article:by:100726
$5
title
$56
Linux2.6内核--中断下半部实现方法 工作队列
*4
$4
HSET
$22
hash:article:by:100726
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100726
$8
labelIds
$19
[35,21,100,606,393]
*4
$4
HSET
$22
hash:article:by:100726
$6
digest
$303
工作队列子系统是一个用于创建内核线程的接口，通过它创建的进程负责执行由内核其他部分排到队列里的任务。它创建的这些内核线程称作工作者线程。工作队列可以让你的驱动程序创建一个专门的工作者线程来处理需要退后...
*4
$4
HSET
$22
hash:article:by:100726
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100726
$7
content
$42
csdn/linux/1_0_1_14_1504264648.667129.html
*4
$4
HSET
$22
hash:article:by:100726
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100726
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100726
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100726
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100726
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100726
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100726
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100726
$10
createTime
$13
1377086415000
*4
$4
HSET
$22
hash:article:by:100726
$11
releaseTime
$13
1377086415000
*4
$4
HSET
$22
hash:article:by:100726
$10
updateTime
$13
1377086415000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100726
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100726
*3
$5
LPUSH
$15
list:article:id
$6
100726
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100726
*4
$4
HSET
$22
hash:article:by:100462
$2
id
$6
100462
*4
$4
HSET
$22
hash:article:by:100462
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100462
$9
articleId
$4
2344
*4
$4
HSET
$22
hash:article:by:100462
$5
title
$38
Linux2.6--中断机制中的 ksoftirqd
*4
$4
HSET
$22
hash:article:by:100462
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100462
$8
labelIds
$18
[35,52,21,100,211]
*4
$4
HSET
$22
hash:article:by:100462
$6
digest
$271
Linux中的中断机制被分为两个部分，回应硬件的中断请求的部分成为上半部（一般都是这样），而真正在做处理工作（耗时工作）的部分成为下半部，实现下半部在Linux2.6内核中存在三种方法：软中断，tas...
*4
$4
HSET
$22
hash:article:by:100462
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100462
$7
content
$42
csdn/linux/1_0_1_15_1504264646.622797.html
*4
$4
HSET
$22
hash:article:by:100462
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100462
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100462
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100462
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100462
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100462
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100462
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100462
$10
createTime
$13
1377072050000
*4
$4
HSET
$22
hash:article:by:100462
$11
releaseTime
$13
1377072050000
*4
$4
HSET
$22
hash:article:by:100462
$10
updateTime
$13
1377072050000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100462
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100462
*3
$5
LPUSH
$15
list:article:id
$6
100462
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100462
*4
$4
HSET
$22
hash:article:by:100444
$2
id
$6
100444
*4
$4
HSET
$22
hash:article:by:100444
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100444
$9
articleId
$4
2343
*4
$4
HSET
$22
hash:article:by:100444
$5
title
$43
Linux2.6内核--中断线被关闭的情况
*4
$4
HSET
$22
hash:article:by:100444
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100444
$8
labelIds
$20
[216,119,162,21,100]
*4
$4
HSET
$22
hash:article:by:100444
$6
digest
$275
中断系统是现代操作系统中不可获取的一个子系统，它由硬件主动触发并发送到CPU，最后由内核调用中断处理程序处理中断。      那么中断有时候需要关闭，这是为什么呢？      一般分为两种情况：1.内...
*4
$4
HSET
$22
hash:article:by:100444
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100444
$7
content
$42
csdn/linux/1_0_1_16_1504264645.965903.html
*4
$4
HSET
$22
hash:article:by:100444
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100444
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100444
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100444
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100444
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100444
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100444
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100444
$10
createTime
$13
1377007205000
*4
$4
HSET
$22
hash:article:by:100444
$11
releaseTime
$13
1377007205000
*4
$4
HSET
$22
hash:article:by:100444
$10
updateTime
$13
1377007205000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100444
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100444
*3
$5
LPUSH
$15
list:article:id
$6
100444
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100444
*4
$4
HSET
$22
hash:article:by:100327
$2
id
$6
100327
*4
$4
HSET
$22
hash:article:by:100327
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100327
$9
articleId
$4
2341
*4
$4
HSET
$22
hash:article:by:100327
$5
title
$32
浅析linux内核中的idr机制
*4
$4
HSET
$22
hash:article:by:100327
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100327
$8
labelIds
$19
[331,191,35,21,100]
*4
$4
HSET
$22
hash:article:by:100327
$6
digest
$259
idr在linux内核中指的就是整数ID管理机制，从本质上来说，这就是一种将整数ID号和特定指针关联在一起的机制。这个机制最早是在2003年2月加入内核的，当时是作为POSIX定时器的一个补丁。现在，...
*4
$4
HSET
$22
hash:article:by:100327
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100327
$7
content
$42
csdn/linux/1_0_1_17_1504264644.611963.html
*4
$4
HSET
$22
hash:article:by:100327
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100327
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100327
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100327
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100327
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100327
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100327
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100327
$10
createTime
$13
1376996426000
*4
$4
HSET
$22
hash:article:by:100327
$11
releaseTime
$13
1376996426000
*4
$4
HSET
$22
hash:article:by:100327
$10
updateTime
$13
1376996426000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100327
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100327
*3
$5
LPUSH
$15
list:article:id
$6
100327
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100327
*4
$4
HSET
$22
hash:article:by:100699
$2
id
$6
100699
*4
$4
HSET
$22
hash:article:by:100699
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100699
$9
articleId
$4
2338
*4
$4
HSET
$22
hash:article:by:100699
$5
title
$32
Linux2.6内核中链表的实现
*4
$4
HSET
$22
hash:article:by:100699
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100699
$8
labelIds
$19
[75,270,191,21,100]
*4
$4
HSET
$22
hash:article:by:100699
$6
digest
$293
对于一个计算机专业的学生，链表这种数据结构对我们来说再熟悉不过了，毕竟在大学的《数据结构》中就讲解过，相信你也自己实现过，它实现起来可能是这个样子：（这里的例子都来自《Linux内核设计与实现》第三版...
*4
$4
HSET
$22
hash:article:by:100699
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100699
$7
content
$42
csdn/linux/1_0_1_18_1504264642.771811.html
*4
$4
HSET
$22
hash:article:by:100699
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100699
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100699
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100699
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100699
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100699
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100699
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100699
$10
createTime
$13
1376989249000
*4
$4
HSET
$22
hash:article:by:100699
$11
releaseTime
$13
1376989249000
*4
$4
HSET
$22
hash:article:by:100699
$10
updateTime
$13
1376989249000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100699
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100699
*3
$5
LPUSH
$15
list:article:id
$6
100699
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100699
*4
$4
HSET
$22
hash:article:by:100297
$2
id
$6
100297
*4
$4
HSET
$22
hash:article:by:100297
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100297
$9
articleId
$4
2340
*4
$4
HSET
$22
hash:article:by:100297
$5
title
$25
linux内核 asmlinkage宏
*4
$4
HSET
$22
hash:article:by:100297
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100297
$8
labelIds
$21
[232,255,214,233,100]
*4
$4
HSET
$22
hash:article:by:100297
$6
digest
$155
asmlinkage是个宏，使用它是为了保持参数在stack中。看一下/usr/include/asm/linkage.h里面的定义：#define asmlinkage CPP_ASMLINKAGE...
*4
$4
HSET
$22
hash:article:by:100297
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100297
$7
content
$42
csdn/linux/1_0_1_19_1504264643.827725.html
*4
$4
HSET
$22
hash:article:by:100297
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100297
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100297
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100297
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100297
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100297
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100297
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100297
$10
createTime
$13
1376924430000
*4
$4
HSET
$22
hash:article:by:100297
$11
releaseTime
$13
1376924430000
*4
$4
HSET
$22
hash:article:by:100297
$10
updateTime
$13
1376924430000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100297
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100297
*3
$5
LPUSH
$15
list:article:id
$6
100297
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100297
*4
$4
HSET
$22
hash:article:by:100419
$2
id
$6
100419
*4
$4
HSET
$22
hash:article:by:100419
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100419
$9
articleId
$4
2175
*4
$4
HSET
$22
hash:article:by:100419
$5
title
$35
Linux系统调用中的参数验证
*4
$4
HSET
$22
hash:article:by:100419
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100419
$8
labelIds
$20
[215,183,21,100,165]
*4
$4
HSET
$22
hash:article:by:100419
$6
digest
$294
我们都知道，用户程序可以通过库函数来通知内核执行系统调用，由于是在内核空间中执行，所以，每一个步骤都需要非常小心，因为错误的操作随时可以导致系统崩溃。      系统调用必须仔细检查它们所有的参数是否...
*4
$4
HSET
$22
hash:article:by:100419
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100419
$7
content
$41
csdn/linux/1_0_2_0_1504264499.563199.html
*4
$4
HSET
$22
hash:article:by:100419
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100419
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100419
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100419
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100419
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100419
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100419
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100419
$10
createTime
$13
1376913601000
*4
$4
HSET
$22
hash:article:by:100419
$11
releaseTime
$13
1376913601000
*4
$4
HSET
$22
hash:article:by:100419
$10
updateTime
$13
1376913601000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100419
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100419
*3
$5
LPUSH
$15
list:article:id
$6
100419
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100419
*4
$4
HSET
$22
hash:article:by:100595
$2
id
$6
100595
*4
$4
HSET
$22
hash:article:by:100595
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100595
$9
articleId
$4
2195
*4
$4
HSET
$22
hash:article:by:100595
$5
title
$40
Linux2.6--进程抢占和上下文切换
*4
$4
HSET
$22
hash:article:by:100595
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100595
$8
labelIds
$20
[162,553,21,100,211]
*4
$4
HSET
$22
hash:article:by:100595
$6
digest
$231
上下文切换，也就是从一个可执行进程切换到另一个可执行进程，由定义在kernel/sched.c中的context_switch()函数负责处理。每当一个新的进程被选出来准备投入运行的时候，schedu...
*4
$4
HSET
$22
hash:article:by:100595
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100595
$7
content
$41
csdn/linux/1_0_2_1_1504264509.838912.html
*4
$4
HSET
$22
hash:article:by:100595
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100595
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100595
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100595
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100595
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100595
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100595
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100595
$10
createTime
$13
1376902807000
*4
$4
HSET
$22
hash:article:by:100595
$11
releaseTime
$13
1376902807000
*4
$4
HSET
$22
hash:article:by:100595
$10
updateTime
$13
1376902807000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100595
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100595
*3
$5
LPUSH
$15
list:article:id
$6
100595
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100595
*4
$4
HSET
$22
hash:article:by:100786
$2
id
$6
100786
*4
$4
HSET
$22
hash:article:by:100786
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100786
$9
articleId
$4
2196
*4
$4
HSET
$22
hash:article:by:100786
$5
title
$56
读《Linux内核设计与实现》我想到了这些书
*4
$4
HSET
$22
hash:article:by:100786
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100786
$8
labelIds
$18
[35,75,21,100,211]
*4
$4
HSET
$22
hash:article:by:100786
$6
digest
$274
从题目中可以看到，这篇文章是以我读《Linux内核设计与实现》而想到的其他我读过的书，所以，这篇文章的主要支撑点是《Linux内核》。      开始读这本书已经是很久以前的事了，不过，由于时间和精力...
*4
$4
HSET
$22
hash:article:by:100786
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100786
$7
content
$41
csdn/linux/1_0_2_2_1504264509.885008.html
*4
$4
HSET
$22
hash:article:by:100786
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100786
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100786
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100786
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100786
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100786
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100786
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100786
$10
createTime
$13
1376895659000
*4
$4
HSET
$22
hash:article:by:100786
$11
releaseTime
$13
1376895659000
*4
$4
HSET
$22
hash:article:by:100786
$10
updateTime
$13
1376895659000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100786
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100786
*3
$5
LPUSH
$15
list:article:id
$6
100786
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100786
*4
$4
HSET
$22
hash:article:by:100530
$2
id
$6
100530
*4
$4
HSET
$22
hash:article:by:100530
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100530
$9
articleId
$4
2517
*4
$4
HSET
$22
hash:article:by:100530
$5
title
$30
设计模式——装饰模式
*4
$4
HSET
$22
hash:article:by:100530
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100530
$8
labelIds
$11
[18,12,493]
*4
$4
HSET
$22
hash:article:by:100530
$6
digest
$239
装饰（ Decorator）模式又叫做包装模式。通过一种对客户端透明的方式来扩展对象的功能，是继承关系的一个替换方案。
假如现在要一个会跑的车，我们会这样做：
package com.meritit;...
*4
$4
HSET
$22
hash:article:by:100530
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100530
$7
content
$40
csdn/java/1_0_1_2_1504264870.352265.html
*4
$4
HSET
$22
hash:article:by:100530
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100530
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100530
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100530
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100530
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100530
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100530
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100530
$10
createTime
$13
1376686859000
*4
$4
HSET
$22
hash:article:by:100530
$11
releaseTime
$13
1376686859000
*4
$4
HSET
$22
hash:article:by:100530
$10
updateTime
$13
1376686859000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100530
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100530
*3
$5
LPUSH
$15
list:article:id
$6
100530
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100530
*4
$4
HSET
$22
hash:article:by:100662
$2
id
$6
100662
*4
$4
HSET
$22
hash:article:by:100662
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100662
$9
articleId
$4
2513
*4
$4
HSET
$22
hash:article:by:100662
$5
title
$33
设计模式——建造者模式
*4
$4
HSET
$22
hash:article:by:100662
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100662
$8
labelIds
$11
[18,12,176]
*4
$4
HSET
$22
hash:article:by:100662
$6
digest
$263
什么是建造者模式
Builder模式也叫建造者模式或者生成器模式，是由GoF提出的23种设计模式中的一种。Builder模式是一种对象创建型模式之一，用来隐藏复合对象的创建过程，它把复合对象的创建过程...
*4
$4
HSET
$22
hash:article:by:100662
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100662
$7
content
$40
csdn/java/1_0_1_3_1504264866.385597.html
*4
$4
HSET
$22
hash:article:by:100662
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100662
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100662
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100662
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100662
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100662
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100662
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100662
$10
createTime
$13
1376600414000
*4
$4
HSET
$22
hash:article:by:100662
$11
releaseTime
$13
1376600414000
*4
$4
HSET
$22
hash:article:by:100662
$10
updateTime
$13
1376600414000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100662
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100662
*3
$5
LPUSH
$15
list:article:id
$6
100662
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100662
*4
$4
HSET
$22
hash:article:by:100295
$2
id
$6
100295
*4
$4
HSET
$22
hash:article:by:100295
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100295
$9
articleId
$4
2203
*4
$4
HSET
$22
hash:article:by:100295
$5
title
$20
linux下字节对齐
*4
$4
HSET
$22
hash:article:by:100295
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100295
$8
labelIds
$21
[194,165,298,210,100]
*4
$4
HSET
$22
hash:article:by:100295
$6
digest
$275
一，内存地址对齐的概念   计算机内存中排列、访问数据的一种方式，包含基本数据对齐和结构体数据对齐。   32位系统中，数据总线宽度为32，每次能够读取4字节数据。地址总线为32，最大寻址空间为4GB...
*4
$4
HSET
$22
hash:article:by:100295
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100295
$7
content
$41
csdn/linux/1_0_2_3_1504264512.917497.html
*4
$4
HSET
$22
hash:article:by:100295
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100295
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100295
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100295
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100295
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100295
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100295
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100295
$10
createTime
$13
1376578811000
*4
$4
HSET
$22
hash:article:by:100295
$11
releaseTime
$13
1376578811000
*4
$4
HSET
$22
hash:article:by:100295
$10
updateTime
$13
1376578811000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100295
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100295
*3
$5
LPUSH
$15
list:article:id
$6
100295
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100295
*4
$4
HSET
$22
hash:article:by:100405
$2
id
$6
100405
*4
$4
HSET
$22
hash:article:by:100405
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100405
$9
articleId
$4
2199
*4
$4
HSET
$22
hash:article:by:100405
$5
title
$24
Linux/Unix--设备类型
*4
$4
HSET
$22
hash:article:by:100405
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100405
$8
labelIds
$20
[298,124,211,100,21]
*4
$4
HSET
$22
hash:article:by:100405
$6
digest
$232
在Linux以及所有的Unix系统中，设备被分为以下三种类型：      块设备      字符设备      网络设备       块设备通常写为 blkdev ，它是可以寻址的，寻址以块为单位，块...
*4
$4
HSET
$22
hash:article:by:100405
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100405
$7
content
$41
csdn/linux/1_0_2_4_1504264510.912357.html
*4
$4
HSET
$22
hash:article:by:100405
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100405
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100405
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100405
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100405
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100405
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100405
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100405
$10
createTime
$13
1376568022000
*4
$4
HSET
$22
hash:article:by:100405
$11
releaseTime
$13
1376568022000
*4
$4
HSET
$22
hash:article:by:100405
$10
updateTime
$13
1376568022000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100405
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100405
*3
$5
LPUSH
$15
list:article:id
$6
100405
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100405
*4
$4
HSET
$22
hash:article:by:100293
$2
id
$6
100293
*4
$4
HSET
$22
hash:article:by:100293
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100293
$9
articleId
$4
2200
*4
$4
HSET
$22
hash:article:by:100293
$5
title
$29
Linux内存映射--mmap函数
*4
$4
HSET
$22
hash:article:by:100293
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100293
$8
labelIds
$19
[215,100,21,295,35]
*4
$4
HSET
$22
hash:article:by:100293
$6
digest
$245
Linux提供了内存映射函数mmap, 它把文件内容映射到一段内存上(准确说是虚拟内存上), 通过对这段内存的读取和修改, 实现对文件的读取和修改, 先来看一下mmap的函数声明:头文件:原型: vo...
*4
$4
HSET
$22
hash:article:by:100293
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100293
$7
content
$41
csdn/linux/1_0_2_5_1504264511.663361.html
*4
$4
HSET
$22
hash:article:by:100293
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100293
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100293
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100293
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100293
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100293
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100293
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100293
$10
createTime
$13
1376496012000
*4
$4
HSET
$22
hash:article:by:100293
$11
releaseTime
$13
1376496012000
*4
$4
HSET
$22
hash:article:by:100293
$10
updateTime
$13
1376496012000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100293
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100293
*3
$5
LPUSH
$15
list:article:id
$6
100293
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100293
*4
$4
HSET
$22
hash:article:by:100233
$2
id
$6
100233
*4
$4
HSET
$22
hash:article:by:100233
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100233
$9
articleId
$4
2177
*4
$4
HSET
$22
hash:article:by:100233
$5
title
$17
Linux内核线程
*4
$4
HSET
$22
hash:article:by:100233
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100233
$8
labelIds
$19
[52,200,214,100,21]
*4
$4
HSET
$22
hash:article:by:100233
$6
digest
$303
内核线程是直接由内核本身启动的进程。内核线程实际上是将内核函数委托给独立的进程，与系统中其他进程“并行”执行（实际上，也并行于内核自身的执行），内核线程经常被称为内核“守护进程”。它们主要用于执行下列...
*4
$4
HSET
$22
hash:article:by:100233
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100233
$7
content
$41
csdn/linux/1_0_2_6_1504264500.452092.html
*4
$4
HSET
$22
hash:article:by:100233
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100233
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100233
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100233
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100233
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100233
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100233
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100233
$10
createTime
$13
1376488815000
*4
$4
HSET
$22
hash:article:by:100233
$11
releaseTime
$13
1376488815000
*4
$4
HSET
$22
hash:article:by:100233
$10
updateTime
$13
1376488815000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100233
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100233
*3
$5
LPUSH
$15
list:article:id
$6
100233
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100233
*4
$4
HSET
$22
hash:article:by:100432
$2
id
$6
100432
*4
$4
HSET
$22
hash:article:by:100432
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100432
$9
articleId
$4
2188
*4
$4
HSET
$22
hash:article:by:100432
$5
title
$21
Linux2.6--Linus电梯
*4
$4
HSET
$22
hash:article:by:100432
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100432
$8
labelIds
$20
[246,413,414,21,100]
*4
$4
HSET
$22
hash:article:by:100432
$6
digest
$299
内核为了处理来自IO层的请求，需要进行相应的优化，因为当请求很多时，且请求的块又都几种在一块，那么如果按照顺序处理这些请求无疑是很大的时间开销，所以，我们需要寻求方法来处理这种情况（当然，不只是这一种...
*4
$4
HSET
$22
hash:article:by:100432
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100432
$7
content
$40
csdn/linux/1_0_2_7_1504264506.66042.html
*4
$4
HSET
$22
hash:article:by:100432
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100432
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100432
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100432
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100432
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100432
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100432
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100432
$10
createTime
$13
1376481631000
*4
$4
HSET
$22
hash:article:by:100432
$11
releaseTime
$13
1376481631000
*4
$4
HSET
$22
hash:article:by:100432
$10
updateTime
$13
1376481631000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100432
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100432
*3
$5
LPUSH
$15
list:article:id
$6
100432
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100432
*4
$4
HSET
$22
hash:article:by:100424
$2
id
$6
100424
*4
$4
HSET
$22
hash:article:by:100424
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100424
$9
articleId
$4
2191
*4
$4
HSET
$22
hash:article:by:100424
$5
title
$28
Linux2.6--虚拟文件系统
*4
$4
HSET
$22
hash:article:by:100424
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100424
$8
labelIds
$19
[21,188,100,35,411]
*4
$4
HSET
$22
hash:article:by:100424
$6
digest
$271
虚拟文件系统(有时也称作虚拟文件交换,更常见的是简称做VFS)作为内核子系统,为用户空间程序提供了文件和文件系统相关的接口.系统中的所有文件系统不但依赖VFS共存,而且也依赖VFS系统协同工作.通过虚...
*4
$4
HSET
$22
hash:article:by:100424
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100424
$7
content
$41
csdn/linux/1_0_2_8_1504264507.918879.html
*4
$4
HSET
$22
hash:article:by:100424
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100424
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100424
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100424
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100424
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100424
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100424
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100424
$10
createTime
$13
1376470810000
*4
$4
HSET
$22
hash:article:by:100424
$11
releaseTime
$13
1376470810000
*4
$4
HSET
$22
hash:article:by:100424
$10
updateTime
$13
1376470810000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100424
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100424
*3
$5
LPUSH
$15
list:article:id
$6
100424
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100424
*4
$4
HSET
$22
hash:article:by:100415
$2
id
$6
100415
*4
$4
HSET
$22
hash:article:by:100415
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100415
$9
articleId
$4
2193
*4
$4
HSET
$22
hash:article:by:100415
$5
title
$21
Linux2.6中的Slab层
*4
$4
HSET
$22
hash:article:by:100415
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100415
$8
labelIds
$19
[244,75,35,270,100]
*4
$4
HSET
$22
hash:article:by:100415
$6
digest
$278
还记得一个进程创建的时候是什么给它分配的“进程描述符”吗？没错，是slab分配器，那么，这个slab分配器是个什么东西呢？      分配和释放数据结构是所有内核中最普遍的操作之一。为了便于结构的频繁...
*4
$4
HSET
$22
hash:article:by:100415
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100415
$7
content
$41
csdn/linux/1_0_2_9_1504264508.622575.html
*4
$4
HSET
$22
hash:article:by:100415
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100415
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100415
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100415
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100415
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100415
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100415
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100415
$10
createTime
$13
1376319623000
*4
$4
HSET
$22
hash:article:by:100415
$11
releaseTime
$13
1376319623000
*4
$4
HSET
$22
hash:article:by:100415
$10
updateTime
$13
1376319623000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100415
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100415
*3
$5
LPUSH
$15
list:article:id
$6
100415
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100415
*4
$4
HSET
$22
hash:article:by:100562
$2
id
$6
100562
*4
$4
HSET
$22
hash:article:by:100562
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100562
$9
articleId
$4
2179
*4
$4
HSET
$22
hash:article:by:100562
$5
title
$23
内存管理单元--MMU
*4
$4
HSET
$22
hash:article:by:100562
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100562
$8
labelIds
$20
[120,162,215,100,35]
*4
$4
HSET
$22
hash:article:by:100562
$6
digest
$201
现代操作系统普遍采用虚拟内存管理（Virtual Memory Management）机制，这需要处理器中的MMU（Memory Management Unit，内存管理单元）提供支持，本节简要介绍M...
*4
$4
HSET
$22
hash:article:by:100562
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100562
$7
content
$42
csdn/linux/1_0_2_10_1504264501.304567.html
*4
$4
HSET
$22
hash:article:by:100562
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100562
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100562
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100562
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100562
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100562
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100562
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100562
$10
createTime
$13
1376316019000
*4
$4
HSET
$22
hash:article:by:100562
$11
releaseTime
$13
1376316019000
*4
$4
HSET
$22
hash:article:by:100562
$10
updateTime
$13
1376316019000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100562
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100562
*3
$5
LPUSH
$15
list:article:id
$6
100562
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100562
*4
$4
HSET
$22
hash:article:by:100234
$2
id
$6
100234
*4
$4
HSET
$22
hash:article:by:100234
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100234
$9
articleId
$4
2185
*4
$4
HSET
$22
hash:article:by:100234
$5
title
$23
直接内存访问(DMA)
*4
$4
HSET
$22
hash:article:by:100234
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100234
$8
labelIds
$20
[215,191,100,216,21]
*4
$4
HSET
$22
hash:article:by:100234
$6
digest
$273
1. 什么是DMA直接内存访问是一种硬件机制，它允许外围设备和主内存之间直接传输它们的I/O数据，而不需要系统处理器的参与。使用这种机制可以大大提高与设备通信的吞吐量。 2. DMA数据传输有两种方式...
*4
$4
HSET
$22
hash:article:by:100234
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100234
$7
content
$42
csdn/linux/1_0_2_11_1504264504.406581.html
*4
$4
HSET
$22
hash:article:by:100234
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100234
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100234
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100234
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100234
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100234
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100234
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100234
$10
createTime
$13
1376312448000
*4
$4
HSET
$22
hash:article:by:100234
$11
releaseTime
$13
1376312448000
*4
$4
HSET
$22
hash:article:by:100234
$10
updateTime
$13
1376312448000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100234
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100234
*3
$5
LPUSH
$15
list:article:id
$6
100234
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100234
*4
$4
HSET
$22
hash:article:by:100567
$2
id
$6
100567
*4
$4
HSET
$22
hash:article:by:100567
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100567
$9
articleId
$4
2180
*4
$4
HSET
$22
hash:article:by:100567
$5
title
$54
对 jiffies 溢出、回绕及 time_after 宏的理解
*4
$4
HSET
$22
hash:article:by:100567
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100567
$8
labelIds
$21
[223,298,165,210,100]
*4
$4
HSET
$22
hash:article:by:100567
$6
digest
$254
原文如下：关于jiffies变量：     全局变量jiffies用来记录自启动以来产生的节拍的总数。系统启动时会将该变量初始化为0，此后，每当时钟中断产生时就会增加该变量的值。jiffies和另外一...
*4
$4
HSET
$22
hash:article:by:100567
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100567
$7
content
$42
csdn/linux/1_0_2_12_1504264502.263801.html
*4
$4
HSET
$22
hash:article:by:100567
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100567
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100567
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100567
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100567
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100567
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100567
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100567
$10
createTime
$13
1376301611000
*4
$4
HSET
$22
hash:article:by:100567
$11
releaseTime
$13
1376301611000
*4
$4
HSET
$22
hash:article:by:100567
$10
updateTime
$13
1376301611000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100567
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100567
*3
$5
LPUSH
$15
list:article:id
$6
100567
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100567
*4
$4
HSET
$22
hash:article:by:100539
$2
id
$6
100539
*4
$4
HSET
$22
hash:article:by:100539
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100539
$9
articleId
$4
2516
*4
$4
HSET
$22
hash:article:by:100539
$5
title
$30
设计模式——原形模式
*4
$4
HSET
$22
hash:article:by:100539
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100539
$8
labelIds
$19
[18,12,467,497,498]
*4
$4
HSET
$22
hash:article:by:100539
$6
digest
$227
Prototype模式是一种对象创建模式，它采用取复制原型对象的方法来创建对象的实例。使用Prototype模式创建的实例，具有与原型一样的数据。
先看以下代码：
package com.meriti...
*4
$4
HSET
$22
hash:article:by:100539
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100539
$7
content
$40
csdn/java/1_0_1_4_1504264869.368428.html
*4
$4
HSET
$22
hash:article:by:100539
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100539
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100539
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100539
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100539
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100539
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100539
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100539
$10
createTime
$13
1376233245000
*4
$4
HSET
$22
hash:article:by:100539
$11
releaseTime
$13
1376233245000
*4
$4
HSET
$22
hash:article:by:100539
$10
updateTime
$13
1376233245000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100539
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100539
*3
$5
LPUSH
$15
list:article:id
$6
100539
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100539
*4
$4
HSET
$22
hash:article:by:100542
$2
id
$6
100542
*4
$4
HSET
$22
hash:article:by:100542
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100542
$9
articleId
$4
2514
*4
$4
HSET
$22
hash:article:by:100542
$5
title
$30
设计模式——单例模式
*4
$4
HSET
$22
hash:article:by:100542
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100542
$8
labelIds
$18
[18,12,84,504,505]
*4
$4
HSET
$22
hash:article:by:100542
$6
digest
$291
单例模式
一、什么是单例模式：
单例模式是一种对象创建形模式，使用单例模式，可以保证为一个类只生成唯一的实例对象。也就是说，在整个程序空间中，该类只存在一个实例对象。
其实，GoF对单例模式的定义是：...
*4
$4
HSET
$22
hash:article:by:100542
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100542
$7
content
$40
csdn/java/1_0_1_5_1504264867.311838.html
*4
$4
HSET
$22
hash:article:by:100542
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100542
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100542
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100542
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100542
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100542
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100542
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100542
$10
createTime
$13
1376226055000
*4
$4
HSET
$22
hash:article:by:100542
$11
releaseTime
$13
1376226055000
*4
$4
HSET
$22
hash:article:by:100542
$10
updateTime
$13
1376226055000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100542
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100542
*3
$5
LPUSH
$15
list:article:id
$6
100542
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100542
*4
$4
HSET
$22
hash:article:by:100521
$2
id
$6
100521
*4
$4
HSET
$22
hash:article:by:100521
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100521
$9
articleId
$4
2515
*4
$4
HSET
$22
hash:article:by:100521
$5
title
$72
设计模式——工厂模式在开发中的应用（简单计算器）
*4
$4
HSET
$22
hash:article:by:100521
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100521
$8
labelIds
$16
[18,361,209,479]
*4
$4
HSET
$22
hash:article:by:100521
$6
digest
$197
下面以一个简单的计算器为例子来说明，怎么用工厂模式。
如果你没有用任何设计模式，你可能会这样写：
package com.meritit;

import java.util.Scanner;

pu...
*4
$4
HSET
$22
hash:article:by:100521
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100521
$7
content
$40
csdn/java/1_0_1_6_1504264868.266653.html
*4
$4
HSET
$22
hash:article:by:100521
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100521
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100521
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100521
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100521
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100521
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100521
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100521
$10
createTime
$13
1376168416000
*4
$4
HSET
$22
hash:article:by:100521
$11
releaseTime
$13
1376168416000
*4
$4
HSET
$22
hash:article:by:100521
$10
updateTime
$13
1376168416000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100521
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100521
*3
$5
LPUSH
$15
list:article:id
$6
100521
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100521
*4
$4
HSET
$22
hash:article:by:100533
$2
id
$6
100533
*4
$4
HSET
$22
hash:article:by:100533
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100533
$9
articleId
$4
2518
*4
$4
HSET
$22
hash:article:by:100533
$5
title
$90
设计模式——简单工厂模式—工厂方法模式—抽象工厂模式（比较）
*4
$4
HSET
$22
hash:article:by:100533
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100533
$8
labelIds
$12
[12,361,495]
*4
$4
HSET
$22
hash:article:by:100533
$6
digest
$280
一、简单工厂模式：
       简单工厂模式是对对象创建的简单封装，可以通过一个工厂类来实现对象的实例化，但是这种方式如果要增加一个新的产品就要修改工厂方法，这样就产生了工厂方法模式。
      ...
*4
$4
HSET
$22
hash:article:by:100533
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100533
$7
content
$40
csdn/java/1_0_1_7_1504264871.621547.html
*4
$4
HSET
$22
hash:article:by:100533
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100533
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100533
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100533
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100533
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100533
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100533
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100533
$10
createTime
$13
1376154025000
*4
$4
HSET
$22
hash:article:by:100533
$11
releaseTime
$13
1376154025000
*4
$4
HSET
$22
hash:article:by:100533
$10
updateTime
$13
1376154025000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100533
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100533
*3
$5
LPUSH
$15
list:article:id
$6
100533
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100533
*4
$4
HSET
$22
hash:article:by:100519
$2
id
$6
100519
*4
$4
HSET
$22
hash:article:by:100519
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100519
$9
articleId
$4
2519
*4
$4
HSET
$22
hash:article:by:100519
$5
title
$36
设计模式——抽象工厂模式
*4
$4
HSET
$22
hash:article:by:100519
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100519
$8
labelIds
$11
[18,12,478]
*4
$4
HSET
$22
hash:article:by:100519
$6
digest
$285
抽象工厂模式是所有形态的工厂模式中最为抽象和最具一般性的。抽象工厂模式可以向客户端提供一个接口，使得客户端在不必指定产品的具体类型的情况下，能够创建多个产品族的产品对象。




（1）创建一个Fru...
*4
$4
HSET
$22
hash:article:by:100519
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100519
$7
content
$40
csdn/java/1_0_1_8_1504264872.398513.html
*4
$4
HSET
$22
hash:article:by:100519
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100519
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100519
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100519
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100519
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100519
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100519
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100519
$10
createTime
$13
1376150433000
*4
$4
HSET
$22
hash:article:by:100519
$11
releaseTime
$13
1376150433000
*4
$4
HSET
$22
hash:article:by:100519
$10
updateTime
$13
1376150433000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100519
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100519
*3
$5
LPUSH
$15
list:article:id
$6
100519
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100519
*4
$4
HSET
$22
hash:article:by:100730
$2
id
$6
100730
*4
$4
HSET
$22
hash:article:by:100730
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100730
$9
articleId
$4
2520
*4
$4
HSET
$22
hash:article:by:100730
$5
title
$36
设计模式——工厂方法模式
*4
$4
HSET
$22
hash:article:by:100730
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100730
$8
labelIds
$11
[18,12,356]
*4
$4
HSET
$22
hash:article:by:100730
$6
digest
$303
工厂方法模式同样属于类的创建模式又被称为多态工厂模式。工厂方法模式的意义是定义一个创建产品对象的工厂接口，将实际创建工作推迟到子类当中。核心工厂类不再负责产品的创建，这样核心类成为一个抽象的工厂角色，...
*4
$4
HSET
$22
hash:article:by:100730
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100730
$7
content
$40
csdn/java/1_0_1_9_1504264873.440141.html
*4
$4
HSET
$22
hash:article:by:100730
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100730
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100730
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100730
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100730
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100730
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100730
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100730
$10
createTime
$13
1376143251000
*4
$4
HSET
$22
hash:article:by:100730
$11
releaseTime
$13
1376143251000
*4
$4
HSET
$22
hash:article:by:100730
$10
updateTime
$13
1376143251000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100730
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100730
*3
$5
LPUSH
$15
list:article:id
$6
100730
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100730
*4
$4
HSET
$22
hash:article:by:100540
$2
id
$6
100540
*4
$4
HSET
$22
hash:article:by:100540
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100540
$9
articleId
$4
2521
*4
$4
HSET
$22
hash:article:by:100540
$5
title
$30
设计模式——简单工厂
*4
$4
HSET
$22
hash:article:by:100540
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100540
$8
labelIds
$10
[18,12,83]
*4
$4
HSET
$22
hash:article:by:100540
$6
digest
$129
第一个小例子：
public class Apple {
	/*
	 * 采集
	 */
	public void get(){
		System.out.println("采集苹果");
	}
}
...
*4
$4
HSET
$22
hash:article:by:100540
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100540
$7
content
$41
csdn/java/1_0_1_10_1504264874.341045.html
*4
$4
HSET
$22
hash:article:by:100540
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100540
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100540
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100540
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100540
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100540
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100540
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100540
$10
createTime
$13
1376139653000
*4
$4
HSET
$22
hash:article:by:100540
$11
releaseTime
$13
1376139653000
*4
$4
HSET
$22
hash:article:by:100540
$10
updateTime
$13
1376139653000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100540
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100540
*3
$5
LPUSH
$15
list:article:id
$6
100540
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100540
*4
$4
HSET
$22
hash:article:by:100456
$2
id
$6
100456
*4
$4
HSET
$22
hash:article:by:100456
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100456
$9
articleId
$4
2183
*4
$4
HSET
$22
hash:article:by:100456
$5
title
$37
Linux内核--异常和中断的区别
*4
$4
HSET
$22
hash:article:by:100456
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100456
$8
labelIds
$19
[162,35,216,100,21]
*4
$4
HSET
$22
hash:article:by:100456
$6
digest
$281
相信大家都知道非常著名的两个名词：异常和中断，不过，你真的理解这两个名词在说什么吗？它们之间有什么区别呢？      1.中断      大家都知道，当我们在敲击键盘的同时就会产生中断，当硬盘读写完数...
*4
$4
HSET
$22
hash:article:by:100456
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100456
$7
content
$42
csdn/linux/1_0_2_13_1504264503.653902.html
*4
$4
HSET
$22
hash:article:by:100456
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100456
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100456
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100456
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100456
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100456
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100456
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100456
$10
createTime
$13
1376056838000
*4
$4
HSET
$22
hash:article:by:100456
$11
releaseTime
$13
1376056838000
*4
$4
HSET
$22
hash:article:by:100456
$10
updateTime
$13
1376056838000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100456
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100456
*3
$5
LPUSH
$15
list:article:id
$6
100456
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100456
*4
$4
HSET
$22
hash:article:by:100558
$2
id
$6
100558
*4
$4
HSET
$22
hash:article:by:100558
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100558
$9
articleId
$4
2205
*4
$4
HSET
$22
hash:article:by:100558
$5
title
$20
linux2.6内核链表
*4
$4
HSET
$22
hash:article:by:100558
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100558
$8
labelIds
$20
[191,262,526,100,21]
*4
$4
HSET
$22
hash:article:by:100558
$6
digest
$283
一、        链表数据结构简介      链表是一种常用的组织有序数据的数据结构，它通过指针将一系列数据节点连接成一条数据链，是线性表的一种重要实现方式。相对于数组，链表具有更好的动态性，建立链...
*4
$4
HSET
$22
hash:article:by:100558
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100558
$7
content
$42
csdn/linux/1_0_2_14_1504264514.040282.html
*4
$4
HSET
$22
hash:article:by:100558
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100558
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100558
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100558
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100558
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100558
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100558
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100558
$10
createTime
$13
1376049609000
*4
$4
HSET
$22
hash:article:by:100558
$11
releaseTime
$13
1376049609000
*4
$4
HSET
$22
hash:article:by:100558
$10
updateTime
$13
1376049609000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100558
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100558
*3
$5
LPUSH
$15
list:article:id
$6
100558
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100558
*4
$4
HSET
$22
hash:article:by:100299
$2
id
$6
100299
*4
$4
HSET
$22
hash:article:by:100299
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100299
$9
articleId
$4
2211
*4
$4
HSET
$22
hash:article:by:100299
$5
title
$15
机制与策略
*4
$4
HSET
$22
hash:article:by:100299
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100299
$8
labelIds
$19
[119,102,52,21,100]
*4
$4
HSET
$22
hash:article:by:100299
$6
digest
$245
Unix/Linux的接口设计有一句通用的格言“提供机制而不是策略”。区别对待机制（mechanism）和策略（policy）是Unix设计中的一大亮点。大部分的编程问题都可以被切割成两个部分：“需要...
*4
$4
HSET
$22
hash:article:by:100299
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100299
$7
content
$41
csdn/linux/1_0_2_15_1504264516.99444.html
*4
$4
HSET
$22
hash:article:by:100299
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100299
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100299
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100299
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100299
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100299
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100299
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100299
$10
createTime
$13
1375909251000
*4
$4
HSET
$22
hash:article:by:100299
$11
releaseTime
$13
1375909251000
*4
$4
HSET
$22
hash:article:by:100299
$10
updateTime
$13
1375909251000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100299
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100299
*3
$5
LPUSH
$15
list:article:id
$6
100299
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100299
*4
$4
HSET
$22
hash:article:by:100569
$2
id
$6
100569
*4
$4
HSET
$22
hash:article:by:100569
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100569
$9
articleId
$4
2212
*4
$4
HSET
$22
hash:article:by:100569
$5
title
$38
Linux系统调用的实现机制分析
*4
$4
HSET
$22
hash:article:by:100569
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100569
$8
labelIds
$20
[35,209,192,210,100]
*4
$4
HSET
$22
hash:article:by:100569
$6
digest
$303
【摘要】本文介绍了系统调用的一些实现细节。首先分析了系统调用的意义，它们与库函数和应用程序接口有怎样的关系。然后，我们考察了内核如何实现系统调用，以及执行系统调用的连锁反应：陷入内核，传递系统调用号和...
*4
$4
HSET
$22
hash:article:by:100569
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100569
$7
content
$41
csdn/linux/1_0_2_16_1504264517.97748.html
*4
$4
HSET
$22
hash:article:by:100569
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100569
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100569
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100569
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100569
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100569
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100569
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100569
$10
createTime
$13
1375898423000
*4
$4
HSET
$22
hash:article:by:100569
$11
releaseTime
$13
1375898423000
*4
$4
HSET
$22
hash:article:by:100569
$10
updateTime
$13
1375898423000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100569
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100569
*3
$5
LPUSH
$15
list:article:id
$6
100569
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100569
*4
$4
HSET
$22
hash:article:by:100489
$2
id
$6
100489
*4
$4
HSET
$22
hash:article:by:100489
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100489
$9
articleId
$4
2187
*4
$4
HSET
$22
hash:article:by:100489
$5
title
$35
Linux2.6 --系统调用处理程序
*4
$4
HSET
$22
hash:article:by:100489
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100489
$8
labelIds
$20
[209,212,272,21,100]
*4
$4
HSET
$22
hash:article:by:100489
$6
digest
$294
用户空间的程序无法直接执行内核代码。它们不能直接调用内核空间中的函数，因为内核驻留在受保护的地址空间上。如果进程可以直接在内核的地址空间上读写的话，系统的安全性和稳定性将不复存在。      所以，应...
*4
$4
HSET
$22
hash:article:by:100489
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100489
$7
content
$42
csdn/linux/1_0_2_17_1504264505.488661.html
*4
$4
HSET
$22
hash:article:by:100489
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100489
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100489
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100489
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100489
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100489
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100489
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100489
$10
createTime
$13
1375894857000
*4
$4
HSET
$22
hash:article:by:100489
$11
releaseTime
$13
1375894857000
*4
$4
HSET
$22
hash:article:by:100489
$10
updateTime
$13
1375894857000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100489
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100489
*3
$5
LPUSH
$15
list:article:id
$6
100489
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100489
*4
$4
HSET
$22
hash:article:by:100394
$2
id
$6
100394
*4
$4
HSET
$22
hash:article:by:100394
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100394
$9
articleId
$4
2207
*4
$4
HSET
$22
hash:article:by:100394
$5
title
$22
Linux2.6内核--抢占
*4
$4
HSET
$22
hash:article:by:100394
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100394
$8
labelIds
$18
[35,162,75,21,100]
*4
$4
HSET
$22
hash:article:by:100394
$6
digest
$189
【摘要】本文首先介绍非抢占式内核(Non-Preemptive Kernel)和可抢占式内核(Preemptive Kernel)的区别。接着分析Linux下有两种抢占：用户态抢占(User Pree...
*4
$4
HSET
$22
hash:article:by:100394
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100394
$7
content
$42
csdn/linux/1_0_2_18_1504264515.053555.html
*4
$4
HSET
$22
hash:article:by:100394
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100394
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100394
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100394
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100394
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100394
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100394
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100394
$10
createTime
$13
1375884040000
*4
$4
HSET
$22
hash:article:by:100394
$11
releaseTime
$13
1375884040000
*4
$4
HSET
$22
hash:article:by:100394
$10
updateTime
$13
1375884040000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100394
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100394
*3
$5
LPUSH
$15
list:article:id
$6
100394
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100394
*4
$4
HSET
$22
hash:article:by:100241
$2
id
$6
100241
*4
$4
HSET
$22
hash:article:by:100241
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100241
$9
articleId
$4
2209
*4
$4
HSET
$22
hash:article:by:100241
$5
title
$20
linux内核cfs浅析
*4
$4
HSET
$22
hash:article:by:100241
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100241
$8
labelIds
$19
[162,234,87,21,100]
*4
$4
HSET
$22
hash:article:by:100241
$6
digest
$267
linux调度器的一般原理请参阅《linux进程调度浅析》。之前的调度器cfs之前的linux调度器一般使用用户设定的静态优先级，加上对于进程交互性的判断来生成动态优先级，再根据动态优先级决定进程被调...
*4
$4
HSET
$22
hash:article:by:100241
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100241
$7
content
$42
csdn/linux/1_0_2_19_1504264515.907319.html
*4
$4
HSET
$22
hash:article:by:100241
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100241
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100241
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100241
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100241
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100241
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100241
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100241
$10
createTime
$13
1375844428000
*4
$4
HSET
$22
hash:article:by:100241
$11
releaseTime
$13
1375844428000
*4
$4
HSET
$22
hash:article:by:100241
$10
updateTime
$13
1375844428000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100241
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100241
*3
$5
LPUSH
$15
list:article:id
$6
100241
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100241
*4
$4
HSET
$22
hash:article:by:100258
$2
id
$6
100258
*4
$4
HSET
$22
hash:article:by:100258
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100258
$9
articleId
$4
2218
*4
$4
HSET
$22
hash:article:by:100258
$5
title
$29
Linux内核2.6的进程调度
*4
$4
HSET
$22
hash:article:by:100258
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100258
$8
labelIds
$19
[162,179,100,35,21]
*4
$4
HSET
$22
hash:article:by:100258
$6
digest
$279
Linux是多任务抢占操作系统，多任务就是指多个进程间通过分时切换来并发执行。非抢占的系统是对每个进程而言，除非时间片用完或主动放弃否则不会被剥夺CPU,主动放弃包括调用一些调度的系统调用（比如sch...
*4
$4
HSET
$22
hash:article:by:100258
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100258
$7
content
$41
csdn/linux/1_0_3_0_1504264523.352568.html
*4
$4
HSET
$22
hash:article:by:100258
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100258
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100258
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100258
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100258
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100258
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100258
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100258
$10
createTime
$13
1375822808000
*4
$4
HSET
$22
hash:article:by:100258
$11
releaseTime
$13
1375822808000
*4
$4
HSET
$22
hash:article:by:100258
$10
updateTime
$13
1375822808000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100258
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100258
*3
$5
LPUSH
$15
list:article:id
$6
100258
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100258
*4
$4
HSET
$22
hash:article:by:100417
$2
id
$6
100417
*4
$4
HSET
$22
hash:article:by:100417
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100417
$9
articleId
$4
2231
*4
$4
HSET
$22
hash:article:by:100417
$5
title
$37
Linux上程序调试的基石(2)--GDB
*4
$4
HSET
$22
hash:article:by:100417
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100417
$8
labelIds
$21
[145,167,215,262,210]
*4
$4
HSET
$22
hash:article:by:100417
$6
digest
$253
3. GDB的实现 GDB是GNU发布的一个强大的程序调试工具，用以调试C/C++程序。可以使程序员在程序运行的时候观察程序在内存/寄存器中的使用情况。它的实现也是基于ptrace系统调用来完成的。 ...
*4
$4
HSET
$22
hash:article:by:100417
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100417
$7
content
$41
csdn/linux/1_0_3_1_1504264530.789566.html
*4
$4
HSET
$22
hash:article:by:100417
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100417
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100417
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100417
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100417
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100417
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100417
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100417
$10
createTime
$13
1375797622000
*4
$4
HSET
$22
hash:article:by:100417
$11
releaseTime
$13
1375797622000
*4
$4
HSET
$22
hash:article:by:100417
$10
updateTime
$13
1375797622000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100417
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100417
*3
$5
LPUSH
$15
list:article:id
$6
100417
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100417
*4
$4
HSET
$22
hash:article:by:100264
$2
id
$6
100264
*4
$4
HSET
$22
hash:article:by:100264
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100264
$9
articleId
$4
2232
*4
$4
HSET
$22
hash:article:by:100264
$5
title
$40
Linux上程序调试的基石(1)--ptrace
*4
$4
HSET
$22
hash:article:by:100264
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100264
$8
labelIds
$21
[145,257,261,210,262]
*4
$4
HSET
$22
hash:article:by:100264
$6
digest
$180
引子: 1.在Linux系统中，进程状态除了我们所熟知的TASK_RUNNING，TASK_INTERRUPTIBLE，TASK_STOPPED等，还有一个TASK_TRACED。这表明这个进程处于什...
*4
$4
HSET
$22
hash:article:by:100264
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100264
$7
content
$41
csdn/linux/1_0_3_2_1504264530.996703.html
*4
$4
HSET
$22
hash:article:by:100264
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100264
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100264
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100264
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100264
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100264
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100264
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100264
$10
createTime
$13
1375797620000
*4
$4
HSET
$22
hash:article:by:100264
$11
releaseTime
$13
1375797620000
*4
$4
HSET
$22
hash:article:by:100264
$10
updateTime
$13
1375797620000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100264
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100264
*3
$5
LPUSH
$15
list:article:id
$6
100264
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100264
*4
$4
HSET
$22
hash:article:by:100219
$2
id
$6
100219
*4
$4
HSET
$22
hash:article:by:100219
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100219
$9
articleId
$4
2238
*4
$4
HSET
$22
hash:article:by:100219
$5
title
$22
Linux中printk()实例
*4
$4
HSET
$22
hash:article:by:100219
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100219
$8
labelIds
$19
[21,196,197,198,63]
*4
$4
HSET
$22
hash:article:by:100219
$6
digest
$107
新建hello.c#include   
#include   
 
 
int init_module(void) 
{ 
    printk(KERN_INFO "Welcome.....\n"...
*4
$4
HSET
$22
hash:article:by:100219
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100219
$7
content
$41
csdn/linux/1_0_3_3_1504264533.784398.html
*4
$4
HSET
$22
hash:article:by:100219
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100219
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100219
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100219
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100219
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100219
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100219
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100219
$10
createTime
$13
1375732847000
*4
$4
HSET
$22
hash:article:by:100219
$11
releaseTime
$13
1375732847000
*4
$4
HSET
$22
hash:article:by:100219
$10
updateTime
$13
1375732847000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100219
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100219
*3
$5
LPUSH
$15
list:article:id
$6
100219
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100219
*4
$4
HSET
$22
hash:article:by:100260
$2
id
$6
100260
*4
$4
HSET
$22
hash:article:by:100260
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100260
$9
articleId
$4
2234
*4
$4
HSET
$22
hash:article:by:100260
$5
title
$15
printk的用法
*4
$4
HSET
$22
hash:article:by:100260
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100260
$8
labelIds
$20
[255,256,35,145,223]
*4
$4
HSET
$22
hash:article:by:100260
$6
digest
$203
printk的用法内核通过 printk() 输出的信息具有日志级别，日志级别是通过在 printk() 输出的字符串前加一个带尖括号的整数来控制的，如 printk("Hello, world!\n...
*4
$4
HSET
$22
hash:article:by:100260
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100260
$7
content
$41
csdn/linux/1_0_3_4_1504264531.935523.html
*4
$4
HSET
$22
hash:article:by:100260
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100260
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100260
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100260
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100260
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100260
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100260
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100260
$10
createTime
$13
1375732845000
*4
$4
HSET
$22
hash:article:by:100260
$11
releaseTime
$13
1375732845000
*4
$4
HSET
$22
hash:article:by:100260
$10
updateTime
$13
1375732845000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100260
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100260
*3
$5
LPUSH
$15
list:article:id
$6
100260
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100260
*4
$4
HSET
$22
hash:article:by:100517
$2
id
$6
100517
*4
$4
HSET
$22
hash:article:by:100517
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100517
$9
articleId
$4
2236
*4
$4
HSET
$22
hash:article:by:100517
$5
title
$17
Linux内核基础
*4
$4
HSET
$22
hash:article:by:100517
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100517
$8
labelIds
$20
[100,35,209,162,472]
*4
$4
HSET
$22
hash:article:by:100517
$6
digest
$291
Linux系统运行的应用程序通过系统调用来与内核通信。应用程序通常调用库函数（比如C库函数）再有库函数通过系统调用界面，让内核带其完成各种不同的任务。下面这张图显示的就是应用程序，内核和硬件之间的关系...
*4
$4
HSET
$22
hash:article:by:100517
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100517
$7
content
$41
csdn/linux/1_0_3_5_1504264532.766295.html
*4
$4
HSET
$22
hash:article:by:100517
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100517
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100517
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100517
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100517
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100517
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100517
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100517
$10
createTime
$13
1375729242000
*4
$4
HSET
$22
hash:article:by:100517
$11
releaseTime
$13
1375729242000
*4
$4
HSET
$22
hash:article:by:100517
$10
updateTime
$13
1375729242000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100517
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100517
*3
$5
LPUSH
$15
list:article:id
$6
100517
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100517
*4
$4
HSET
$22
hash:article:by:100282
$2
id
$6
100282
*4
$4
HSET
$22
hash:article:by:100282
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100282
$9
articleId
$4
2422
*4
$4
HSET
$22
hash:article:by:100282
$5
title
$28
LINUX0.11 内核阅读笔记
*4
$4
HSET
$22
hash:article:by:100282
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100282
$8
labelIds
$19
[21,35,215,285,286]
*4
$4
HSET
$22
hash:article:by:100282
$6
digest
$273
一．源码目录图1二．系统总体流程：系统从boot开始动作，把内核从启动盘装到正确的位置，进行一些基本的初始化，如检测内存，保护模式相关，建立页目录和内存页表，GDT表，IDT表。然后进入main进行初...
*4
$4
HSET
$22
hash:article:by:100282
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100282
$7
content
$41
csdn/linux/1_1_1_0_1504264730.655474.html
*4
$4
HSET
$22
hash:article:by:100282
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100282
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100282
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100282
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100282
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100282
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100282
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100282
$10
createTime
$13
1374429607000
*4
$4
HSET
$22
hash:article:by:100282
$11
releaseTime
$13
1374429607000
*4
$4
HSET
$22
hash:article:by:100282
$10
updateTime
$13
1374429607000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100282
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100282
*3
$5
LPUSH
$15
list:article:id
$6
100282
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100282
*4
$4
HSET
$22
hash:article:by:100267
$2
id
$6
100267
*4
$4
HSET
$22
hash:article:by:100267
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100267
$9
articleId
$4
2423
*4
$4
HSET
$22
hash:article:by:100267
$5
title
$39
Linux0.11进程分配时间片的策略
*4
$4
HSET
$22
hash:article:by:100267
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100267
$8
labelIds
$19
[21,57,265,266,267]
*4
$4
HSET
$22
hash:article:by:100267
$6
digest
$187
想知道内核什么时候给进程重新分配时间片，最好的办法就是阅读源代码（其中已经打了注释）/*********************************************************...
*4
$4
HSET
$22
hash:article:by:100267
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100267
$7
content
$41
csdn/linux/1_1_1_1_1504264731.676152.html
*4
$4
HSET
$22
hash:article:by:100267
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100267
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100267
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100267
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100267
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100267
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100267
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100267
$10
createTime
$13
1373893246000
*4
$4
HSET
$22
hash:article:by:100267
$11
releaseTime
$13
1373893246000
*4
$4
HSET
$22
hash:article:by:100267
$10
updateTime
$13
1373893246000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100267
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100267
*3
$5
LPUSH
$15
list:article:id
$6
100267
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100267
*4
$4
HSET
$22
hash:article:by:100418
$2
id
$6
100418
*4
$4
HSET
$22
hash:article:by:100418
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100418
$9
articleId
$4
2449
*4
$4
HSET
$22
hash:article:by:100418
$5
title
$48
Linux0.11中对文本文件进行修改的策略
*4
$4
HSET
$22
hash:article:by:100418
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100418
$8
labelIds
$19
[21,403,404,405,70]
*4
$4
HSET
$22
hash:article:by:100418
$6
digest
$191
现在，假设 hello.txt 是硬盘上已有的一个文件，而且内容为 “hello, world” ，在文件的当前指针设置完毕后，我们来介绍 sys_read , sys_write , sys_lse...
*4
$4
HSET
$22
hash:article:by:100418
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100418
$7
content
$41
csdn/linux/1_1_1_2_1504264747.336688.html
*4
$4
HSET
$22
hash:article:by:100418
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100418
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100418
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100418
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100418
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100418
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100418
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100418
$10
createTime
$13
1373893205000
*4
$4
HSET
$22
hash:article:by:100418
$11
releaseTime
$13
1373893205000
*4
$4
HSET
$22
hash:article:by:100418
$10
updateTime
$13
1373893205000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100418
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100418
*3
$5
LPUSH
$15
list:article:id
$6
100418
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100418
*4
$4
HSET
$22
hash:article:by:100312
$2
id
$6
100312
*4
$4
HSET
$22
hash:article:by:100312
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100312
$9
articleId
$4
2451
*4
$4
HSET
$22
hash:article:by:100312
$5
title
$30
进程的用户栈和内核栈
*4
$4
HSET
$22
hash:article:by:100312
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100312
$8
labelIds
$12
[21,312,215]
*4
$4
HSET
$22
hash:article:by:100312
$6
digest
$303
进程是程序的一次执行过程。用剧本和演出来类比，程序相当于剧本，而进程则相当于剧本的一次演出，舞台、灯光则相当于进程的运行环境。进程的堆栈每个进程都有自己的堆栈，内核在创建一个新的进程时，在创建进程控制...
*4
$4
HSET
$22
hash:article:by:100312
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100312
$7
content
$41
csdn/linux/1_1_1_3_1504264749.460836.html
*4
$4
HSET
$22
hash:article:by:100312
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100312
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100312
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100312
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100312
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100312
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100312
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100312
$10
createTime
$13
1373835611000
*4
$4
HSET
$22
hash:article:by:100312
$11
releaseTime
$13
1373835611000
*4
$4
HSET
$22
hash:article:by:100312
$10
updateTime
$13
1373835611000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100312
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100312
*3
$5
LPUSH
$15
list:article:id
$6
100312
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100312
*4
$4
HSET
$22
hash:article:by:100331
$2
id
$6
100331
*4
$4
HSET
$22
hash:article:by:100331
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100331
$9
articleId
$4
2440
*4
$4
HSET
$22
hash:article:by:100331
$5
title
$25
Linux 句柄是什么 ？
*4
$4
HSET
$22
hash:article:by:100331
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100331
$8
labelIds
$20
[21,338,339,340,341]
*4
$4
HSET
$22
hash:article:by:100331
$6
digest
$283
1.句柄就是一个标识符，只要获得对象的句柄，我们就可以对对象进行任意的操作。2.句柄不是指针，操作系统用句柄可以找到一块内存，这个句柄可能是标识符，map的key，也可能是指针，看操作系统怎么处理的了...
*4
$4
HSET
$22
hash:article:by:100331
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100331
$7
content
$40
csdn/linux/1_1_1_4_1504264740.23272.html
*4
$4
HSET
$22
hash:article:by:100331
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100331
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100331
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100331
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100331
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100331
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100331
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100331
$10
createTime
$13
1373727655000
*4
$4
HSET
$22
hash:article:by:100331
$11
releaseTime
$13
1373727655000
*4
$4
HSET
$22
hash:article:by:100331
$10
updateTime
$13
1373727655000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100331
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100331
*3
$5
LPUSH
$15
list:article:id
$6
100331
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100331
*4
$4
HSET
$22
hash:article:by:100273
$2
id
$6
100273
*4
$4
HSET
$22
hash:article:by:100273
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100273
$9
articleId
$4
2424
*4
$4
HSET
$22
hash:article:by:100273
$5
title
$29
Linux进程－进程的创建
*4
$4
HSET
$22
hash:article:by:100273
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100273
$8
labelIds
$19
[21,251,57,170,273]
*4
$4
HSET
$22
hash:article:by:100273
$6
digest
$261
今天学习了Linux的进程创建的基本原理，是基于0.11版本核心的。下面对其作一下简单的总结。一、Linux进程在内存中的相关资源   很容易理解，Linux进程的创建过程就是内存中进程相关资源产生的...
*4
$4
HSET
$22
hash:article:by:100273
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100273
$7
content
$41
csdn/linux/1_1_1_5_1504264732.643633.html
*4
$4
HSET
$22
hash:article:by:100273
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100273
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100273
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100273
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100273
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100273
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100273
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100273
$10
createTime
$13
1373644801000
*4
$4
HSET
$22
hash:article:by:100273
$11
releaseTime
$13
1373644801000
*4
$4
HSET
$22
hash:article:by:100273
$10
updateTime
$13
1373644801000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100273
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100273
*3
$5
LPUSH
$15
list:article:id
$6
100273
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100273
*4
$4
HSET
$22
hash:article:by:100298
$2
id
$6
100298
*4
$4
HSET
$22
hash:article:by:100298
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100298
$9
articleId
$4
2450
*4
$4
HSET
$22
hash:article:by:100298
$5
title
$18
什么是文件头
*4
$4
HSET
$22
hash:article:by:100298
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100298
$8
labelIds
$15
[18,300,301,21]
*4
$4
HSET
$22
hash:article:by:100298
$6
digest
$229
要求每个文件均有特殊的、可识别的文件头。文件头偏移	代号	数据类型	字节数	默认值	名称	说明0	FUM	P-BCD	2	 文件统一标识	所有文件均含有此标识符2	FDT	P-BCD	1	 文件数据类...
*4
$4
HSET
$22
hash:article:by:100298
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100298
$7
content
$40
csdn/linux/1_1_1_6_1504264748.36518.html
*4
$4
HSET
$22
hash:article:by:100298
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100298
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100298
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100298
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100298
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100298
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100298
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100298
$10
createTime
$13
1373565609000
*4
$4
HSET
$22
hash:article:by:100298
$11
releaseTime
$13
1373565609000
*4
$4
HSET
$22
hash:article:by:100298
$10
updateTime
$13
1373565609000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100298
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100298
*3
$5
LPUSH
$15
list:article:id
$6
100298
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100298
*4
$4
HSET
$22
hash:article:by:100254
$2
id
$6
100254
*4
$4
HSET
$22
hash:article:by:100254
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100254
$9
articleId
$4
2447
*4
$4
HSET
$22
hash:article:by:100254
$5
title
$58
Linux0.11 创建进程的过程分析--fork函数的使用
*4
$4
HSET
$22
hash:article:by:100254
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100254
$8
labelIds
$12
[251,21,210]
*4
$4
HSET
$22
hash:article:by:100254
$6
digest
$147
/*
* linux/kernel/fork.c
*
* (C) 1991 Linus Torvalds
*/
/*
注意：signal.c和fork.c文件的编译选项内不能有vc变量优化选项/Og，...
*4
$4
HSET
$22
hash:article:by:100254
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100254
$7
content
$41
csdn/linux/1_1_1_7_1504264745.333593.html
*4
$4
HSET
$22
hash:article:by:100254
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100254
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100254
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100254
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100254
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100254
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100254
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100254
$10
createTime
$13
1373547652000
*4
$4
HSET
$22
hash:article:by:100254
$11
releaseTime
$13
1373547652000
*4
$4
HSET
$22
hash:article:by:100254
$10
updateTime
$13
1373547652000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100254
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100254
*3
$5
LPUSH
$15
list:article:id
$6
100254
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100254
*4
$4
HSET
$22
hash:article:by:100328
$2
id
$6
100328
*4
$4
HSET
$22
hash:article:by:100328
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100328
$9
articleId
$4
2446
*4
$4
HSET
$22
hash:article:by:100328
$5
title
$26
Linux根文件系统介绍
*4
$4
HSET
$22
hash:article:by:100328
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100328
$8
labelIds
$16
[332,21,333,334]
*4
$4
HSET
$22
hash:article:by:100328
$6
digest
$293
系统　　根文件系统首先是一种文件系统，但是相对于普通的文件系统，它的特殊之处在于，它是内核启动时所mount的第一个文件系统，内核代码映像文件保存在根文件系统中，而系统引导启动程序会在根文件系统挂载之...
*4
$4
HSET
$22
hash:article:by:100328
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100328
$7
content
$41
csdn/linux/1_1_1_8_1504264744.190514.html
*4
$4
HSET
$22
hash:article:by:100328
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100328
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100328
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100328
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100328
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100328
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100328
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100328
$10
createTime
$13
1373439652000
*4
$4
HSET
$22
hash:article:by:100328
$11
releaseTime
$13
1373439652000
*4
$4
HSET
$22
hash:article:by:100328
$10
updateTime
$13
1373439652000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100328
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100328
*3
$5
LPUSH
$15
list:article:id
$6
100328
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100328
*4
$4
HSET
$22
hash:article:by:100272
$2
id
$6
100272
*4
$4
HSET
$22
hash:article:by:100272
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100272
$9
articleId
$4
2445
*4
$4
HSET
$22
hash:article:by:100272
$5
title
$36
两篇文章说异常和中断之二
*4
$4
HSET
$22
hash:article:by:100272
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100272
$8
labelIds
$19
[212,21,207,272,35]
*4
$4
HSET
$22
hash:article:by:100272
$6
digest
$282
一、基本概念1. 产生的位置发生的时刻时序中断CPU外部随机异步异常CPU正在执行的程序一条指令终止执行后同步2.由中断或异常执行的代码不是一个进程，而是一个内核控制路径，代表中断发生时正在运行的进程...
*4
$4
HSET
$22
hash:article:by:100272
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100272
$7
content
$41
csdn/linux/1_1_1_9_1504264743.186532.html
*4
$4
HSET
$22
hash:article:by:100272
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100272
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100272
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100272
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100272
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100272
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100272
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100272
$10
createTime
$13
1372683647000
*4
$4
HSET
$22
hash:article:by:100272
$11
releaseTime
$13
1372683647000
*4
$4
HSET
$22
hash:article:by:100272
$10
updateTime
$13
1372683647000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100272
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100272
*3
$5
LPUSH
$15
list:article:id
$6
100272
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100272
*4
$4
HSET
$22
hash:article:by:100232
$2
id
$6
100232
*4
$4
HSET
$22
hash:article:by:100232
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100232
$9
articleId
$4
2442
*4
$4
HSET
$22
hash:article:by:100232
$5
title
$36
两篇文章说中断和异常之一
*4
$4
HSET
$22
hash:article:by:100232
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100232
$8
labelIds
$20
[212,213,35,191,162]
*4
$4
HSET
$22
hash:article:by:100232
$6
digest
$168
转载自：http://www.cnblogs.com/javawebsoa/archive/2013/05/05/3061787.html中断和异常的概念* 中断： 硬件通过中断来通知内核。中断是一种...
*4
$4
HSET
$22
hash:article:by:100232
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100232
$7
content
$41
csdn/linux/1_1_1_10_1504264741.30052.html
*4
$4
HSET
$22
hash:article:by:100232
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100232
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100232
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100232
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100232
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100232
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100232
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100232
$10
createTime
$13
1372683646000
*4
$4
HSET
$22
hash:article:by:100232
$11
releaseTime
$13
1372683646000
*4
$4
HSET
$22
hash:article:by:100232
$10
updateTime
$13
1372683646000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100232
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100232
*3
$5
LPUSH
$15
list:article:id
$6
100232
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100232
*4
$4
HSET
$22
hash:article:by:100255
$2
id
$6
100255
*4
$4
HSET
$22
hash:article:by:100255
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100255
$9
articleId
$4
2444
*4
$4
HSET
$22
hash:article:by:100255
$5
title
$24
Linux 进程等待队列
*4
$4
HSET
$22
hash:article:by:100255
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100255
$8
labelIds
$15
[21,191,75,223]
*4
$4
HSET
$22
hash:article:by:100255
$6
digest
$259
Linux内核的等待队列是以双循环链表为基础数据结构，与进程调度机制紧密结合，能够用于实现核心的异步事件通知机制。在这个链表中，有两种数据结构：等待队列头（wait_queue_head_t）和等待队...
*4
$4
HSET
$22
hash:article:by:100255
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100255
$7
content
$42
csdn/linux/1_1_1_11_1504264742.207041.html
*4
$4
HSET
$22
hash:article:by:100255
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100255
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100255
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100255
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100255
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100255
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100255
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100255
$10
createTime
$13
1372669251000
*4
$4
HSET
$22
hash:article:by:100255
$11
releaseTime
$13
1372669251000
*4
$4
HSET
$22
hash:article:by:100255
$10
updateTime
$13
1372669251000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100255
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100255
*3
$5
LPUSH
$15
list:article:id
$6
100255
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100255
*4
$4
HSET
$22
hash:article:by:100285
$2
id
$6
100285
*4
$4
HSET
$22
hash:article:by:100285
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100285
$9
articleId
$4
2426
*4
$4
HSET
$22
hash:article:by:100285
$5
title
$15
Linux0.11小结
*4
$4
HSET
$22
hash:article:by:100285
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100285
$8
labelIds
$19
[21,35,207,192,119]
*4
$4
HSET
$22
hash:article:by:100285
$6
digest
$291
第一部分 基础内容1.操作系统基础    操作系统是计算机硬件系统与用户程序间重要环节，理解操作系统的原理是编写优秀代码的基础。教课书中阐述的操作系统一般由5部分组成。一个最简单的操作系统，可以不需要...
*4
$4
HSET
$22
hash:article:by:100285
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100285
$7
content
$42
csdn/linux/1_1_1_13_1504264733.699226.html
*4
$4
HSET
$22
hash:article:by:100285
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100285
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100285
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100285
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100285
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100285
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100285
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100285
$10
createTime
$13
1372593634000
*4
$4
HSET
$22
hash:article:by:100285
$11
releaseTime
$13
1372593634000
*4
$4
HSET
$22
hash:article:by:100285
$10
updateTime
$13
1372593634000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100285
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100285
*3
$5
LPUSH
$15
list:article:id
$6
100285
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100285
*4
$4
HSET
$22
hash:article:by:100214
$2
id
$6
100214
*4
$4
HSET
$22
hash:article:by:100214
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100214
$9
articleId
$4
2438
*4
$4
HSET
$22
hash:article:by:100214
$5
title
$21
Linux0.11启动过程
*4
$4
HSET
$22
hash:article:by:100214
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100214
$8
labelIds
$20
[21,192,114,193,194]
*4
$4
HSET
$22
hash:article:by:100214
$6
digest
$277
从开机加电，到执行main函数之前的过程好吧，这里应该是有执行3个汇编的文件，但是我不太了解。囧从main函数，到启动OK（即可以响应用户操作了）这个步骤做了3件事情：创建进程0，使之具备在主机中进行...
*4
$4
HSET
$22
hash:article:by:100214
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100214
$7
content
$42
csdn/linux/1_1_1_12_1504264738.965395.html
*4
$4
HSET
$22
hash:article:by:100214
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100214
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100214
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100214
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100214
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100214
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100214
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100214
$10
createTime
$13
1372593632000
*4
$4
HSET
$22
hash:article:by:100214
$11
releaseTime
$13
1372593632000
*4
$4
HSET
$22
hash:article:by:100214
$10
updateTime
$13
1372593632000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100214
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100214
*3
$5
LPUSH
$15
list:article:id
$6
100214
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100214
*4
$4
HSET
$22
hash:article:by:100274
$2
id
$6
100274
*4
$4
HSET
$22
hash:article:by:100274
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100274
$9
articleId
$4
2448
*4
$4
HSET
$22
hash:article:by:100274
$5
title
$33
深入解析Linux中的fork函数
*4
$4
HSET
$22
hash:article:by:100274
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100274
$8
labelIds
$20
[21,257,165,211,274]
*4
$4
HSET
$22
hash:article:by:100274
$6
digest
$189
1、定义
#include 
#include
pid_t fork( void );pid_t 是一个宏定义，其实质是int，被定义在#include中返回值：若成功调用一次则返回两个值，子进程返回...
*4
$4
HSET
$22
hash:article:by:100274
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100274
$7
content
$42
csdn/linux/1_1_1_14_1504264746.601816.html
*4
$4
HSET
$22
hash:article:by:100274
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100274
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100274
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100274
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100274
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100274
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100274
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100274
$10
createTime
$13
1372420843000
*4
$4
HSET
$22
hash:article:by:100274
$11
releaseTime
$13
1372420843000
*4
$4
HSET
$22
hash:article:by:100274
$10
updateTime
$13
1372420843000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100274
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100274
*3
$5
LPUSH
$15
list:article:id
$6
100274
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100274
*4
$4
HSET
$22
hash:article:by:100564
$2
id
$6
100564
*4
$4
HSET
$22
hash:article:by:100564
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100564
$9
articleId
$4
2436
*4
$4
HSET
$22
hash:article:by:100564
$5
title
$33
Linux0.11进程切换和TSS结构
*4
$4
HSET
$22
hash:article:by:100564
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100564
$8
labelIds
$20
[21,191,267,266,265]
*4
$4
HSET
$22
hash:article:by:100564
$6
digest
$244
TSS 全称为task state segment，是指在操作系统进程管理的过程中，进程切换时的任务现场信息。 　　      X86体系从硬件上支持任务间的切换。为此目的，它增设了一个新段：任务状态...
*4
$4
HSET
$22
hash:article:by:100564
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100564
$7
content
$42
csdn/linux/1_1_1_15_1504264737.978957.html
*4
$4
HSET
$22
hash:article:by:100564
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100564
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100564
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100564
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100564
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100564
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100564
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100564
$10
createTime
$13
1372194011000
*4
$4
HSET
$22
hash:article:by:100564
$11
releaseTime
$13
1372194011000
*4
$4
HSET
$22
hash:article:by:100564
$10
updateTime
$13
1372194011000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100564
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100564
*3
$5
LPUSH
$15
list:article:id
$6
100564
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100564
*4
$4
HSET
$22
hash:article:by:100287
$2
id
$6
100287
*4
$4
HSET
$22
hash:article:by:100287
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100287
$9
articleId
$4
2434
*4
$4
HSET
$22
hash:article:by:100287
$5
title
$34
Linux--缺页中断和交换技术
*4
$4
HSET
$22
hash:article:by:100287
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100287
$8
labelIds
$21
[244,246,270,215,191]
*4
$4
HSET
$22
hash:article:by:100287
$6
digest
$255
1．请求调页中断：进程线性地址空间里的页面不必常驻内存，例如进程的分配请求被理解满足，空间仅仅保留vm_area_struct的空间，页面可能被交换到后援存储器，或者写一个只读页面(COW)。Linu...
*4
$4
HSET
$22
hash:article:by:100287
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100287
$7
content
$42
csdn/linux/1_1_1_16_1504264737.003872.html
*4
$4
HSET
$22
hash:article:by:100287
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100287
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100287
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100287
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100287
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100287
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100287
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100287
$10
createTime
$13
1372154411000
*4
$4
HSET
$22
hash:article:by:100287
$11
releaseTime
$13
1372154411000
*4
$4
HSET
$22
hash:article:by:100287
$10
updateTime
$13
1372154411000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100287
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100287
*3
$5
LPUSH
$15
list:article:id
$6
100287
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100287
*4
$4
HSET
$22
hash:article:by:100310
$2
id
$6
100310
*4
$4
HSET
$22
hash:article:by:100310
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100310
$9
articleId
$4
2432
*4
$4
HSET
$22
hash:article:by:100310
$5
title
$132
内存分配的原理__进程分配内存有两种方式，分别由两个系统调用完成：brk和mmap（不考虑共享内存）
*4
$4
HSET
$22
hash:article:by:100310
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100310
$8
labelIds
$21
[215,310,311,210,192]
*4
$4
HSET
$22
hash:article:by:100310
$6
digest
$188
如何查看进程发生缺页中断的次数？         用ps -o majflt,minflt -C program命令查看。          majflt代表major fault，中文名叫大错误，m...
*4
$4
HSET
$22
hash:article:by:100310
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100310
$7
content
$42
csdn/linux/1_1_1_17_1504264735.958755.html
*4
$4
HSET
$22
hash:article:by:100310
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100310
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100310
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100310
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100310
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100310
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100310
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100310
$10
createTime
$13
1372154409000
*4
$4
HSET
$22
hash:article:by:100310
$11
releaseTime
$13
1372154409000
*4
$4
HSET
$22
hash:article:by:100310
$10
updateTime
$13
1372154409000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100310
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100310
*3
$5
LPUSH
$15
list:article:id
$6
100310
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100310
*4
$4
HSET
$22
hash:article:by:100568
$2
id
$6
100568
*4
$4
HSET
$22
hash:article:by:100568
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100568
$9
articleId
$4
2428
*4
$4
HSET
$22
hash:article:by:100568
$5
title
$42
Linux进程-命令行参数和环境列表
*4
$4
HSET
$22
hash:article:by:100568
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100568
$8
labelIds
$20
[21,165,317,196,210]
*4
$4
HSET
$22
hash:article:by:100568
$6
digest
$141
命令行参数在C中，main函数有很多的变种，比如main(),
int main(),
int main(int argc, char *argv[]),
int main(int argc, cha...
*4
$4
HSET
$22
hash:article:by:100568
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100568
$7
content
$42
csdn/linux/1_1_1_18_1504264734.760718.html
*4
$4
HSET
$22
hash:article:by:100568
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100568
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100568
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100568
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100568
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100568
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100568
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100568
$10
createTime
$13
1372147243000
*4
$4
HSET
$22
hash:article:by:100568
$11
releaseTime
$13
1372147243000
*4
$4
HSET
$22
hash:article:by:100568
$10
updateTime
$13
1372147243000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100568
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100568
*3
$5
LPUSH
$15
list:article:id
$6
100568
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100568
*4
$4
HSET
$22
hash:article:by:100229
$2
id
$6
100229
*4
$4
HSET
$22
hash:article:by:100229
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100229
$9
articleId
$4
2429
*4
$4
HSET
$22
hash:article:by:100229
$5
title
$27
进程内核栈、用户栈
*4
$4
HSET
$22
hash:article:by:100229
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100229
$8
labelIds
$20
[207,35,183,162,191]
*4
$4
HSET
$22
hash:article:by:100229
$6
digest
$271
1.进程的堆栈     内核在创建进程的时候，在创建task_struct的同事，会为进程创建相应的堆栈。每个进程会有两个栈，一个用户栈，存在于用户空间，一个内核栈，存在于内核空间。当进程在用户空间运...
*4
$4
HSET
$22
hash:article:by:100229
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100229
$7
content
$41
csdn/linux/1_1_1_19_1504264734.79808.html
*4
$4
HSET
$22
hash:article:by:100229
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100229
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100229
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100229
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100229
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100229
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100229
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100229
$10
createTime
$13
1372104043000
*4
$4
HSET
$22
hash:article:by:100229
$11
releaseTime
$13
1372104043000
*4
$4
HSET
$22
hash:article:by:100229
$10
updateTime
$13
1372104043000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100229
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100229
*3
$5
LPUSH
$15
list:article:id
$6
100229
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100229
*4
$4
HSET
$22
hash:article:by:100634
$2
id
$6
100634
*4
$4
HSET
$22
hash:article:by:100634
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100634
$9
articleId
$4
2363
*4
$4
HSET
$22
hash:article:by:100634
$5
title
$44
Linux中link，unlink，close，fclose详解
*4
$4
HSET
$22
hash:article:by:100634
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100634
$8
labelIds
$20
[21,257,196,588,589]
*4
$4
HSET
$22
hash:article:by:100634
$6
digest
$241
unlink系统调用】   
    
功能描述： 
从文件系统中删除一个名称。如果名称是文件的最后一个连接，并且没有其它进程将文件打开，名称对应的文件会实际被删除。 
 
用法：  
#includ...
*4
$4
HSET
$22
hash:article:by:100634
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100634
$7
content
$41
csdn/linux/1_1_2_0_1504264665.068039.html
*4
$4
HSET
$22
hash:article:by:100634
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100634
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100634
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100634
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100634
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100634
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100634
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100634
$10
createTime
$13
1372064444000
*4
$4
HSET
$22
hash:article:by:100634
$11
releaseTime
$13
1372064444000
*4
$4
HSET
$22
hash:article:by:100634
$10
updateTime
$13
1372064444000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100634
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100634
*3
$5
LPUSH
$15
list:article:id
$6
100634
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100634
*4
$4
HSET
$22
hash:article:by:100226
$2
id
$6
100226
*4
$4
HSET
$22
hash:article:by:100226
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100226
$9
articleId
$4
2370
*4
$4
HSET
$22
hash:article:by:100226
$5
title
$11
理解inode
*4
$4
HSET
$22
hash:article:by:100226
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100226
$8
labelIds
$21
[192,119,113,165,193]
*4
$4
HSET
$22
hash:article:by:100226
$6
digest
$251
一、inode是什么？理解inode，要从文件储存说起。文件储存在硬盘上，硬盘的最小存储单位叫做"扇区"（Sector）。每个扇区储存512字节（相当于0.5KB）。操作系统读取硬盘的时候，不会一个个...
*4
$4
HSET
$22
hash:article:by:100226
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100226
$7
content
$41
csdn/linux/1_1_2_1_1504264672.333265.html
*4
$4
HSET
$22
hash:article:by:100226
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100226
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100226
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100226
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100226
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100226
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100226
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100226
$10
createTime
$13
1372017616000
*4
$4
HSET
$22
hash:article:by:100226
$11
releaseTime
$13
1372017616000
*4
$4
HSET
$22
hash:article:by:100226
$10
updateTime
$13
1372017616000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100226
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100226
*3
$5
LPUSH
$15
list:article:id
$6
100226
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100226
*4
$4
HSET
$22
hash:article:by:100251
$2
id
$6
100251
*4
$4
HSET
$22
hash:article:by:100251
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100251
$9
articleId
$4
2371
*4
$4
HSET
$22
hash:article:by:100251
$5
title
$53
linux中文件描述符fd和文件指针flip的理解
*4
$4
HSET
$22
hash:article:by:100251
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100251
$8
labelIds
$19
[21,183,194,246,35]
*4
$4
HSET
$22
hash:article:by:100251
$6
digest
$255
简单归纳：fd只是一个整数，在open时产生。起到一个索引的作用，进程通过PCB中的文件描述符表找到该fd所指向的文件指针filp。文件描述符的操作(如: open)返回的是一个文件描述符,内核会在每...
*4
$4
HSET
$22
hash:article:by:100251
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100251
$7
content
$41
csdn/linux/1_1_2_2_1504264673.434668.html
*4
$4
HSET
$22
hash:article:by:100251
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100251
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100251
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100251
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100251
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100251
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100251
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100251
$10
createTime
$13
1372010454000
*4
$4
HSET
$22
hash:article:by:100251
$11
releaseTime
$13
1372010454000
*4
$4
HSET
$22
hash:article:by:100251
$10
updateTime
$13
1372010454000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100251
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100251
*3
$5
LPUSH
$15
list:article:id
$6
100251
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100251
*4
$4
HSET
$22
hash:article:by:100237
$2
id
$6
100237
*4
$4
HSET
$22
hash:article:by:100237
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100237
$9
articleId
$4
2364
*4
$4
HSET
$22
hash:article:by:100237
$5
title
$6
魔数
*4
$4
HSET
$22
hash:article:by:100237
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100237
$8
labelIds
$21
[223,224,225,226,227]
*4
$4
HSET
$22
hash:article:by:100237
$6
digest
$257
魔数（magic number），即在编写程序时直接在程序中运用数字，而不是采用定义宏或是const变量的方式，图1是使用了魔数的一个示例程序。其中的64是指Msk的最大字节数。从这一程序中可以看出，...
*4
$4
HSET
$22
hash:article:by:100237
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100237
$7
content
$41
csdn/linux/1_1_2_3_1504264666.292326.html
*4
$4
HSET
$22
hash:article:by:100237
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100237
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100237
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100237
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100237
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100237
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100237
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100237
$10
createTime
$13
1371931213000
*4
$4
HSET
$22
hash:article:by:100237
$11
releaseTime
$13
1371931213000
*4
$4
HSET
$22
hash:article:by:100237
$10
updateTime
$13
1371931213000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100237
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100237
*3
$5
LPUSH
$15
list:article:id
$6
100237
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100237
*4
$4
HSET
$22
hash:article:by:100206
$2
id
$6
100206
*4
$4
HSET
$22
hash:article:by:100206
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100206
$9
articleId
$4
2375
*4
$4
HSET
$22
hash:article:by:100206
$5
title
$22
实例分析exec函数
*4
$4
HSET
$22
hash:article:by:100206
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100206
$8
labelIds
$20
[63,183,184,185,165]
*4
$4
HSET
$22
hash:article:by:100206
$6
digest
$285
fork()函数通过系统调用创建一个与原来进程(父进程)几乎完全相同的进程(子进程是父进程的副本，它将获得父进程数据空间、堆、栈等资源的副本。注意，子进程持有的是上述存储空间的“副本”，这意味着父子进...
*4
$4
HSET
$22
hash:article:by:100206
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100206
$7
content
$40
csdn/linux/1_1_2_8_1504264677.60306.html
*4
$4
HSET
$22
hash:article:by:100206
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100206
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100206
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100206
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100206
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100206
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100206
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100206
$10
createTime
$13
1371909641000
*4
$4
HSET
$22
hash:article:by:100206
$11
releaseTime
$13
1371909641000
*4
$4
HSET
$22
hash:article:by:100206
$10
updateTime
$13
1371909641000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100206
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100206
*3
$5
LPUSH
$15
list:article:id
$6
100206
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100206
*4
$4
HSET
$22
hash:article:by:100230
$2
id
$6
100230
*4
$4
HSET
$22
hash:article:by:100230
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100230
$9
articleId
$4
2369
*4
$4
HSET
$22
hash:article:by:100230
$5
title
$28
Linux系统的shell是什么
*4
$4
HSET
$22
hash:article:by:100230
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100230
$8
labelIds
$20
[21,196,208,209,210]
*4
$4
HSET
$22
hash:article:by:100230
$6
digest
$217
shell是用户和Linux操作系统之间的接口。Linux中有多种shell，其中缺省使用的是Bash。本章讲述了shell的工作原理，shell的种类，shell的一般操作及Bash的特性。　什么是...
*4
$4
HSET
$22
hash:article:by:100230
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100230
$7
content
$41
csdn/linux/1_1_2_4_1504264671.327805.html
*4
$4
HSET
$22
hash:article:by:100230
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100230
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100230
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100230
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100230
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100230
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100230
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100230
$10
createTime
$13
1371902437000
*4
$4
HSET
$22
hash:article:by:100230
$11
releaseTime
$13
1371902437000
*4
$4
HSET
$22
hash:article:by:100230
$10
updateTime
$13
1371902437000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100230
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100230
*3
$5
LPUSH
$15
list:article:id
$6
100230
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100230
*4
$4
HSET
$22
hash:article:by:100179
$2
id
$6
100179
*4
$4
HSET
$22
hash:article:by:100179
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100179
$9
articleId
$4
2365
*4
$4
HSET
$22
hash:article:by:100179
$5
title
$18
协处理器简介
*4
$4
HSET
$22
hash:article:by:100179
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100179
$8
labelIds
$20
[162,163,164,165,62]
*4
$4
HSET
$22
hash:article:by:100179
$6
digest
$194
原文出自：http://blog.csdn.net/liukun321/article/details/5548877协处理器 　　一种芯片，用于减轻系统微处理器的特定处理任务。例如，数学协处理器可以...
*4
$4
HSET
$22
hash:article:by:100179
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100179
$7
content
$41
csdn/linux/1_1_2_5_1504264667.181746.html
*4
$4
HSET
$22
hash:article:by:100179
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100179
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100179
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100179
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100179
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100179
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100179
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100179
$10
createTime
$13
1371754856000
*4
$4
HSET
$22
hash:article:by:100179
$11
releaseTime
$13
1371754856000
*4
$4
HSET
$22
hash:article:by:100179
$10
updateTime
$13
1371754856000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100179
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100179
*3
$5
LPUSH
$15
list:article:id
$6
100179
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100179
*4
$4
HSET
$22
hash:article:by:100221
$2
id
$6
100221
*4
$4
HSET
$22
hash:article:by:100221
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100221
$9
articleId
$4
2366
*4
$4
HSET
$22
hash:article:by:100221
$5
title
$32
linux进程管理之进程创建
*4
$4
HSET
$22
hash:article:by:100221
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100221
$8
labelIds
$19
[21,114,200,191,57]
*4
$4
HSET
$22
hash:article:by:100221
$6
digest
$271
所谓进程就是程序执行时的一个实例. 它是现代操作系统中一个很重要的抽象,我们从进程的生命周期:创建,执行,消亡来分析一下Linux上的进程管理实现.一:前言进程管理结构;在内核中,每一个进程对应一个t...
*4
$4
HSET
$22
hash:article:by:100221
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100221
$7
content
$41
csdn/linux/1_1_2_6_1504264668.363066.html
*4
$4
HSET
$22
hash:article:by:100221
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100221
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100221
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100221
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100221
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100221
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100221
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100221
$10
createTime
$13
1371754821000
*4
$4
HSET
$22
hash:article:by:100221
$11
releaseTime
$13
1371754821000
*4
$4
HSET
$22
hash:article:by:100221
$10
updateTime
$13
1371754821000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100221
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100221
*3
$5
LPUSH
$15
list:article:id
$6
100221
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100221
*4
$4
HSET
$22
hash:article:by:100450
$2
id
$6
100450
*4
$4
HSET
$22
hash:article:by:100450
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100450
$9
articleId
$4
2373
*4
$4
HSET
$22
hash:article:by:100450
$5
title
$56
C 语言内存区域分配（进程的各个段）详解
*4
$4
HSET
$22
hash:article:by:100450
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100450
$8
labelIds
$21
[208,210,215,192,401]
*4
$4
HSET
$22
hash:article:by:100450
$6
digest
$290
C语言可执行代码结构 名称内容代码段 可执行代码、字符串常量数据段 已初始化全局变量、已初始化全局静态变量、局部静态变量、常量数据BSS段 未初始化全局变量，未初始化全局静态变量栈 局部变量、函数参数...
*4
$4
HSET
$22
hash:article:by:100450
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100450
$7
content
$41
csdn/linux/1_1_2_7_1504264675.521026.html
*4
$4
HSET
$22
hash:article:by:100450
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100450
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100450
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100450
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100450
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100450
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100450
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100450
$10
createTime
$13
1371736814000
*4
$4
HSET
$22
hash:article:by:100450
$11
releaseTime
$13
1371736814000
*4
$4
HSET
$22
hash:article:by:100450
$10
updateTime
$13
1371736814000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100450
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100450
*3
$5
LPUSH
$15
list:article:id
$6
100450
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100450
*4
$4
HSET
$22
hash:article:by:100213
$2
id
$6
100213
*4
$4
HSET
$22
hash:article:by:100213
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100213
$9
articleId
$4
2374
*4
$4
HSET
$22
hash:article:by:100213
$5
title
$47
Linux进程状态解析之R、S、D、T、Z、X
*4
$4
HSET
$22
hash:article:by:100213
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100213
$8
labelIds
$18
[21,162,35,191,52]
*4
$4
HSET
$22
hash:article:by:100213
$6
digest
$173
文章转载自：http://hi.baidu.com/shining_pc/item/21abcb32a4d2d484c3cf2950Linux是一个多用户，多任务的系统，可以同时运行多个用户的多个程序...
*4
$4
HSET
$22
hash:article:by:100213
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100213
$7
content
$41
csdn/linux/1_1_2_9_1504264676.623031.html
*4
$4
HSET
$22
hash:article:by:100213
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100213
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100213
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100213
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100213
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100213
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100213
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100213
$10
createTime
$13
1371542436000
*4
$4
HSET
$22
hash:article:by:100213
$11
releaseTime
$13
1371542436000
*4
$4
HSET
$22
hash:article:by:100213
$10
updateTime
$13
1371542436000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100213
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100213
*3
$5
LPUSH
$15
list:article:id
$6
100213
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100213
*4
$4
HSET
$22
hash:article:by:100629
$2
id
$6
100629
*4
$4
HSET
$22
hash:article:by:100629
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100629
$9
articleId
$4
2372
*4
$4
HSET
$22
hash:article:by:100629
$5
title
$42
对Linux0.11 中 进程0 和 进程1分析
*4
$4
HSET
$22
hash:article:by:100629
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100629
$8
labelIds
$19
[119,21,191,162,57]
*4
$4
HSET
$22
hash:article:by:100629
$6
digest
$297
1. 背景进程的创建过程无疑是最重要的操作系统处理过程之一，很多书和教材上说的最多的还是一些原理的部分，忽略了很多细节。比如，子进程复制父进程所拥有的资源，或者子进程和父进程共享相同的物理页面，拥有自...
*4
$4
HSET
$22
hash:article:by:100629
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100629
$7
content
$42
csdn/linux/1_1_2_11_1504264674.559105.html
*4
$4
HSET
$22
hash:article:by:100629
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100629
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100629
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100629
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100629
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100629
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100629
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100629
$10
createTime
$13
1371538843000
*4
$4
HSET
$22
hash:article:by:100629
$11
releaseTime
$13
1371538843000
*4
$4
HSET
$22
hash:article:by:100629
$10
updateTime
$13
1371538843000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100629
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100629
*3
$5
LPUSH
$15
list:article:id
$6
100629
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100629
*4
$4
HSET
$22
hash:article:by:100557
$2
id
$6
100557
*4
$4
HSET
$22
hash:article:by:100557
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100557
$9
articleId
$4
2368
*4
$4
HSET
$22
hash:article:by:100557
$5
title
$31
Linux0.11 中对地址的管理
*4
$4
HSET
$22
hash:article:by:100557
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100557
$8
labelIds
$19
[21,215,401,162,35]
*4
$4
HSET
$22
hash:article:by:100557
$6
digest
$264
逻辑地址（Logical Address） 是指由程序产生的与段相关的偏移地址部分。例如，你在进行C语言指针编程中，可以读取指针变量本身值(&操作)，实际上这个值就是逻辑地址，它是相对于你当前进程数据...
*4
$4
HSET
$22
hash:article:by:100557
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100557
$7
content
$42
csdn/linux/1_1_2_10_1504264670.323208.html
*4
$4
HSET
$22
hash:article:by:100557
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100557
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100557
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100557
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100557
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100557
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100557
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100557
$10
createTime
$13
1371538843000
*4
$4
HSET
$22
hash:article:by:100557
$11
releaseTime
$13
1371538843000
*4
$4
HSET
$22
hash:article:by:100557
$10
updateTime
$13
1371538843000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100557
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100557
*3
$5
LPUSH
$15
list:article:id
$6
100557
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100557
*4
$4
HSET
$22
hash:article:by:100240
$2
id
$6
100240
*4
$4
HSET
$22
hash:article:by:100240
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100240
$9
articleId
$4
2240
*4
$4
HSET
$22
hash:article:by:100240
$5
title
$36
Linux System Programming -- Appendix
*4
$4
HSET
$22
hash:article:by:100240
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100240
$8
labelIds
$20
[21,214,192,232,233]
*4
$4
HSET
$22
hash:article:by:100240
$6
digest
$255
这本书附录的名字是 “GCC对C语言的扩展” ，一下的内容是对扩展的总结类型发现GCC 允许通过变量的引用识别类型。这种操作支持泛型编程。在 C++、Ada 和 Java™ 语言等许多现代编程语言中都...
*4
$4
HSET
$22
hash:article:by:100240
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100240
$7
content
$41
csdn/linux/1_1_1_0_1504264536.942217.html
*4
$4
HSET
$22
hash:article:by:100240
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100240
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100240
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100240
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100240
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100240
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100240
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100240
$10
createTime
$13
1371538841000
*4
$4
HSET
$22
hash:article:by:100240
$11
releaseTime
$13
1371538841000
*4
$4
HSET
$22
hash:article:by:100240
$10
updateTime
$13
1371538841000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100240
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100240
*3
$5
LPUSH
$15
list:article:id
$6
100240
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100240
*4
$4
HSET
$22
hash:article:by:100261
$2
id
$6
100261
*4
$4
HSET
$22
hash:article:by:100261
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100261
$9
articleId
$4
2256
*4
$4
HSET
$22
hash:article:by:100261
$5
title
$39
Linux System Programming --Chapter Nine
*4
$4
HSET
$22
hash:article:by:100261
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100261
$8
labelIds
$19
[21,257,35,258,259]
*4
$4
HSET
$22
hash:article:by:100261
$6
digest
$289
这一章的标题是 “信号” ，所以本文将对信号的各个方面进行介绍，由于Linux中的信号机制远比想象的要复杂，所以，本文不会讲的很全面。。。信号机制是进程之间相互传递消息的一种方法，信号全称为软中断信号...
*4
$4
HSET
$22
hash:article:by:100261
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100261
$7
content
$40
csdn/linux/1_1_1_1_1504264547.52845.html
*4
$4
HSET
$22
hash:article:by:100261
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100261
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100261
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100261
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100261
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100261
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100261
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100261
$10
createTime
$13
1371538841000
*4
$4
HSET
$22
hash:article:by:100261
$11
releaseTime
$13
1371538841000
*4
$4
HSET
$22
hash:article:by:100261
$10
updateTime
$13
1371538841000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100261
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100261
*3
$5
LPUSH
$15
list:article:id
$6
100261
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100261
*4
$4
HSET
$22
hash:article:by:100269
$2
id
$6
100269
*4
$4
HSET
$22
hash:article:by:100269
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100269
$9
articleId
$4
2257
*4
$4
HSET
$22
hash:article:by:100269
$5
title
$40
Linux System Programming --Chapter Eight
*4
$4
HSET
$22
hash:article:by:100269
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100269
$8
labelIds
$20
[21,215,165,192,210]
*4
$4
HSET
$22
hash:article:by:100269
$6
digest
$169
内存管理一.分配动态内存的几个函数用户空间内存分配：malloc、calloc、realloc1、malloc原型如下：extern void *malloc(unsigned int num_byt...
*4
$4
HSET
$22
hash:article:by:100269
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100269
$7
content
$41
csdn/linux/1_1_1_2_1504264548.594319.html
*4
$4
HSET
$22
hash:article:by:100269
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100269
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100269
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100269
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100269
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100269
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100269
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100269
$10
createTime
$13
1371538841000
*4
$4
HSET
$22
hash:article:by:100269
$11
releaseTime
$13
1371538841000
*4
$4
HSET
$22
hash:article:by:100269
$10
updateTime
$13
1371538841000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100269
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100269
*3
$5
LPUSH
$15
list:article:id
$6
100269
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100269
*4
$4
HSET
$22
hash:article:by:100406
$2
id
$6
100406
*4
$4
HSET
$22
hash:article:by:100406
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100406
$9
articleId
$4
2260
*4
$4
HSET
$22
hash:article:by:100406
$5
title
$40
Linux System Programming --Chapter Seven
*4
$4
HSET
$22
hash:article:by:100406
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100406
$8
labelIds
$20
[21,192,298,188,211]
*4
$4
HSET
$22
hash:article:by:100406
$6
digest
$213
文件和目录管理一.文件与其元数据我们首先看一下一个简单的文本文件是怎么保存的：打开vim，编辑一段文本：[root@localhost ~]# vim hello.txt编辑内容如下：opencfg....
*4
$4
HSET
$22
hash:article:by:100406
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100406
$7
content
$41
csdn/linux/1_1_1_3_1504264550.874244.html
*4
$4
HSET
$22
hash:article:by:100406
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100406
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100406
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100406
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100406
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100406
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100406
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100406
$10
createTime
$13
1371474009000
*4
$4
HSET
$22
hash:article:by:100406
$11
releaseTime
$13
1371474009000
*4
$4
HSET
$22
hash:article:by:100406
$10
updateTime
$13
1371474009000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100406
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100406
*3
$5
LPUSH
$15
list:article:id
$6
100406
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100406
*4
$4
HSET
$22
hash:article:by:100401
$2
id
$6
100401
*4
$4
HSET
$22
hash:article:by:100401
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100401
$9
articleId
$4
2258
*4
$4
HSET
$22
hash:article:by:100401
$5
title
$38
Linux System Programming --Chapter Six
*4
$4
HSET
$22
hash:article:by:100401
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100401
$8
labelIds
$19
[21,162,35,392,266]
*4
$4
HSET
$22
hash:article:by:100401
$6
digest
$265
这一章的题目是--高级进程管理，这篇文章将以书中所叙的顺序进行讲解1、让出处理器Linux提供一个系统调用运行进程主动让出执行权：sched_yield。进程运行的好好的，为什么需要这个函数呢？有一种...
*4
$4
HSET
$22
hash:article:by:100401
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100401
$7
content
$41
csdn/linux/1_1_1_4_1504264549.616554.html
*4
$4
HSET
$22
hash:article:by:100401
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100401
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100401
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100401
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100401
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100401
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100401
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100401
$10
createTime
$13
1371474008000
*4
$4
HSET
$22
hash:article:by:100401
$11
releaseTime
$13
1371474008000
*4
$4
HSET
$22
hash:article:by:100401
$10
updateTime
$13
1371474008000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100401
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100401
*3
$5
LPUSH
$15
list:article:id
$6
100401
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100401
*4
$4
HSET
$22
hash:article:by:100423
$2
id
$6
100423
*4
$4
HSET
$22
hash:article:by:100423
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100423
$9
articleId
$4
2259
*4
$4
HSET
$22
hash:article:by:100423
$5
title
$39
Linux System Programming --Chapter Five
*4
$4
HSET
$22
hash:article:by:100423
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100423
$8
labelIds
$17
[21,51,35,75,410]
*4
$4
HSET
$22
hash:article:by:100423
$6
digest
$270
这一章中的内容出现在博主的多篇文章中，所以并不对这一章进行详细的说明解释，只是对几个比较重要的概念进行说明一.写时复制技术COW技术初窥：      在Linux程序中，fork（）会产生一个和父进程...
*4
$4
HSET
$22
hash:article:by:100423
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100423
$7
content
$41
csdn/linux/1_1_1_5_1504264550.826422.html
*4
$4
HSET
$22
hash:article:by:100423
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100423
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100423
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100423
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100423
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100423
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100423
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100423
$10
createTime
$13
1371207620000
*4
$4
HSET
$22
hash:article:by:100423
$11
releaseTime
$13
1371207620000
*4
$4
HSET
$22
hash:article:by:100423
$10
updateTime
$13
1371207620000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100423
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100423
*3
$5
LPUSH
$15
list:article:id
$6
100423
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100423
*4
$4
HSET
$22
hash:article:by:100427
$2
id
$6
100427
*4
$4
HSET
$22
hash:article:by:100427
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100427
$9
articleId
$4
2242
*4
$4
HSET
$22
hash:article:by:100427
$5
title
$39
Linux System Programming --Chapter Four
*4
$4
HSET
$22
hash:article:by:100427
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100427
$8
labelIds
$20
[21,214,210,412,273]
*4
$4
HSET
$22
hash:article:by:100427
$6
digest
$271
这一章介绍的主题是--高级文件 I/O一. 分散--聚集I/O分散聚集I/O是一种进行输入和输出的方法。通过此方法，单一系统调用可以将缓冲区向量写入单一数据流，或者将单一数据流读取到缓冲区向量。这个类...
*4
$4
HSET
$22
hash:article:by:100427
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100427
$7
content
$41
csdn/linux/1_1_1_6_1504264537.922721.html
*4
$4
HSET
$22
hash:article:by:100427
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100427
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100427
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100427
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100427
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100427
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100427
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100427
$10
createTime
$13
1371207620000
*4
$4
HSET
$22
hash:article:by:100427
$11
releaseTime
$13
1371207620000
*4
$4
HSET
$22
hash:article:by:100427
$10
updateTime
$13
1371207620000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100427
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100427
*3
$5
LPUSH
$15
list:article:id
$6
100427
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100427
*4
$4
HSET
$22
hash:article:by:100461
$2
id
$6
100461
*4
$4
HSET
$22
hash:article:by:100461
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100461
$9
articleId
$4
2367
*4
$4
HSET
$22
hash:article:by:100461
$5
title
$27
搭建Linux0.11系统环境
*4
$4
HSET
$22
hash:article:by:100461
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100461
$8
labelIds
$19
[21,35,188,164,285]
*4
$4
HSET
$22
hash:article:by:100461
$6
digest
$180
学习Linux0.11内核源代码，我们需要搭建一个基于Linux0.11的操作平台：                    1） boch仿真器：可以从http://bochs.sourceforge...
*4
$4
HSET
$22
hash:article:by:100461
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100461
$7
content
$41
csdn/linux/1_1_2_12_1504264669.18624.html
*4
$4
HSET
$22
hash:article:by:100461
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100461
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100461
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100461
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100461
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100461
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100461
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100461
$10
createTime
$13
1371150008000
*4
$4
HSET
$22
hash:article:by:100461
$11
releaseTime
$13
1371150008000
*4
$4
HSET
$22
hash:article:by:100461
$10
updateTime
$13
1371150008000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100461
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100461
*3
$5
LPUSH
$15
list:article:id
$6
100461
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100461
*4
$4
HSET
$22
hash:article:by:100457
$2
id
$6
100457
*4
$4
HSET
$22
hash:article:by:100457
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100457
$9
articleId
$4
2252
*4
$4
HSET
$22
hash:article:by:100457
$5
title
$39
字符编码总结（UTF-8，UNICODE）
*4
$4
HSET
$22
hash:article:by:100457
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100457
$8
labelIds
$21
[416,429,430,165,431]
*4
$4
HSET
$22
hash:article:by:100457
$6
digest
$231
UTF-8是Unicode的一种实现方式，也就是它的字节结构有特殊要求，所以我们说一个汉字的范围是0X4E00到0x9FA5，是指unicode值，至于放在utf-8的编码里去就是由三个字节来组织，所...
*4
$4
HSET
$22
hash:article:by:100457
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100457
$7
content
$41
csdn/linux/1_1_1_7_1504264544.274125.html
*4
$4
HSET
$22
hash:article:by:100457
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100457
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100457
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100457
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100457
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100457
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100457
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100457
$10
createTime
$13
1371128418000
*4
$4
HSET
$22
hash:article:by:100457
$11
releaseTime
$13
1371128418000
*4
$4
HSET
$22
hash:article:by:100457
$10
updateTime
$13
1371128418000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100457
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100457
*3
$5
LPUSH
$15
list:article:id
$6
100457
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100457
*4
$4
HSET
$22
hash:article:by:100590
$2
id
$6
100590
*4
$4
HSET
$22
hash:article:by:100590
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100590
$9
articleId
$4
2253
*4
$4
HSET
$22
hash:article:by:100590
$5
title
$40
Linux System Programming --Chapter Three
*4
$4
HSET
$22
hash:article:by:100590
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100590
$8
labelIds
$20
[21,547,210,411,548]
*4
$4
HSET
$22
hash:article:by:100590
$6
digest
$246
这一章的主题是--缓冲式I/O一，流与缓冲       流I/O是由C语言的标准函数提供的，这些I/O可以替代系统中提供的read和write函数。事实上流I/O的内部封装了这两个基本的文件读写系统调...
*4
$4
HSET
$22
hash:article:by:100590
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100590
$7
content
$41
csdn/linux/1_1_1_8_1504264545.195313.html
*4
$4
HSET
$22
hash:article:by:100590
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100590
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100590
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100590
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100590
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100590
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100590
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100590
$10
createTime
$13
1371110448000
*4
$4
HSET
$22
hash:article:by:100590
$11
releaseTime
$13
1371110448000
*4
$4
HSET
$22
hash:article:by:100590
$10
updateTime
$13
1371110448000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100590
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100590
*3
$5
LPUSH
$15
list:article:id
$6
100590
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100590
*4
$4
HSET
$22
hash:article:by:100593
$2
id
$6
100593
*4
$4
HSET
$22
hash:article:by:100593
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100593
$9
articleId
$4
2255
*4
$4
HSET
$22
hash:article:by:100593
$5
title
$38
Linux System Programming --Chapter Two
*4
$4
HSET
$22
hash:article:by:100593
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100593
$8
labelIds
$19
[21,246,35,411,551]
*4
$4
HSET
$22
hash:article:by:100593
$6
digest
$275
首先，需要解释的东西是Linux系统调用一、 什么是系统调用     在Linux的世界里，我们经常会遇到系统调用这一术语，所谓系统调用，就是内核提供的、功能十分强大的一系列的函数。这些系统调用是在内...
*4
$4
HSET
$22
hash:article:by:100593
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100593
$7
content
$41
csdn/linux/1_1_1_9_1504264546.420429.html
*4
$4
HSET
$22
hash:article:by:100593
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100593
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100593
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100593
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100593
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100593
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100593
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100593
$10
createTime
$13
1371110445000
*4
$4
HSET
$22
hash:article:by:100593
$11
releaseTime
$13
1371110445000
*4
$4
HSET
$22
hash:article:by:100593
$10
updateTime
$13
1371110445000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100593
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100593
*3
$5
LPUSH
$15
list:article:id
$6
100593
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100593
*4
$4
HSET
$22
hash:article:by:100538
$2
id
$6
100538
*4
$4
HSET
$22
hash:article:by:100538
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100538
$9
articleId
$4
2244
*4
$4
HSET
$22
hash:article:by:100538
$5
title
$47
Linux 内存映射函数 mmap（）函数详解
*4
$4
HSET
$22
hash:article:by:100538
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100538
$8
labelIds
$19
[21,215,496,35,192]
*4
$4
HSET
$22
hash:article:by:100538
$6
digest
$288
一、概述          内存映射，简而言之就是将用户空间的一段内存区域映射到内核空间，映射成功后，用户对这段内存区域的修改可以直接反映到内核空间，同样，内核空间对这段区域的修改也直接反映用户空间。...
*4
$4
HSET
$22
hash:article:by:100538
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100538
$7
content
$41
csdn/linux/1_1_1_10_1504264539.01748.html
*4
$4
HSET
$22
hash:article:by:100538
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100538
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100538
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100538
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100538
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100538
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100538
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100538
$10
createTime
$13
1371060002000
*4
$4
HSET
$22
hash:article:by:100538
$11
releaseTime
$13
1371060002000
*4
$4
HSET
$22
hash:article:by:100538
$10
updateTime
$13
1371060002000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100538
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100538
*3
$5
LPUSH
$15
list:article:id
$6
100538
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100538
*4
$4
HSET
$22
hash:article:by:100618
$2
id
$6
100618
*4
$4
HSET
$22
hash:article:by:100618
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100618
$9
articleId
$4
2249
*4
$4
HSET
$22
hash:article:by:100618
$5
title
$37
程序（进程）内存分布 解析
*4
$4
HSET
$22
hash:article:by:100618
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100618
$8
labelIds
$19
[215,192,207,21,35]
*4
$4
HSET
$22
hash:article:by:100618
$6
digest
$251
在多任务操作系统中的每一个进程都运行在一个属于它自己的内存沙盘中。这个沙盘就是虚拟地址空间（virtual address space），在32位模式下它总是一个4GB的内存地址块。这些虚拟地址通过页...
*4
$4
HSET
$22
hash:article:by:100618
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100618
$7
content
$42
csdn/linux/1_1_1_11_1504264541.977617.html
*4
$4
HSET
$22
hash:article:by:100618
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100618
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100618
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100618
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100618
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100618
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100618
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100618
$10
createTime
$13
1371056450000
*4
$4
HSET
$22
hash:article:by:100618
$11
releaseTime
$13
1371056450000
*4
$4
HSET
$22
hash:article:by:100618
$10
updateTime
$13
1371056450000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100618
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100618
*3
$5
LPUSH
$15
list:article:id
$6
100618
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100618
*4
$4
HSET
$22
hash:article:by:100685
$2
id
$6
100685
*4
$4
HSET
$22
hash:article:by:100685
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100685
$9
articleId
$4
2245
*4
$4
HSET
$22
hash:article:by:100685
$5
title
$42
Linux 虚拟内存和物理内存的理解
*4
$4
HSET
$22
hash:article:by:100685
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100685
$8
labelIds
$19
[215,21,35,246,644]
*4
$4
HSET
$22
hash:article:by:100685
$6
digest
$275
首先，让我们看下虚拟内存：第一层理解1.         每个进程都有自己独立的4G内存空间，各个进程的内存空间具有类似的结构2.       一个新进程建立的时候，将会建立起自己的内存空间，此进程的...
*4
$4
HSET
$22
hash:article:by:100685
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100685
$7
content
$42
csdn/linux/1_1_1_12_1504264540.003742.html
*4
$4
HSET
$22
hash:article:by:100685
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100685
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100685
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100685
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100685
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100685
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100685
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100685
$10
createTime
$13
1371024048000
*4
$4
HSET
$22
hash:article:by:100685
$11
releaseTime
$13
1371024048000
*4
$4
HSET
$22
hash:article:by:100685
$10
updateTime
$13
1371024048000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100685
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100685
*3
$5
LPUSH
$15
list:article:id
$6
100685
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100685
*4
$4
HSET
$22
hash:article:by:100502
$2
id
$6
100502
*4
$4
HSET
$22
hash:article:by:100502
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100502
$9
articleId
$4
2248
*4
$4
HSET
$22
hash:article:by:100502
$5
title
$9
缓冲区
*4
$4
HSET
$22
hash:article:by:100502
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100502
$8
labelIds
$21
[246,192,162,210,462]
*4
$4
HSET
$22
hash:article:by:100502
$6
digest
$303
什么是缓冲区缓冲区又称为缓存，它是内存空间的一部分。也就是说，在内存空间中预留了一定的存储空间，这些存储空间用来缓冲输入或输出的数据，这部分预留的空间就叫做缓冲区。缓冲区根据其对应的是输入设备还是输出...
*4
$4
HSET
$22
hash:article:by:100502
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100502
$7
content
$42
csdn/linux/1_1_1_13_1504264541.191946.html
*4
$4
HSET
$22
hash:article:by:100502
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100502
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100502
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100502
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100502
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100502
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100502
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100502
$10
createTime
$13
1371024047000
*4
$4
HSET
$22
hash:article:by:100502
$11
releaseTime
$13
1371024047000
*4
$4
HSET
$22
hash:article:by:100502
$10
updateTime
$13
1371024047000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100502
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100502
*3
$5
LPUSH
$15
list:article:id
$6
100502
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100502
*4
$4
HSET
$22
hash:article:by:100431
$2
id
$6
100431
*4
$4
HSET
$22
hash:article:by:100431
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100431
$9
articleId
$4
2261
*4
$4
HSET
$22
hash:article:by:100431
$5
title
$33
Linux 2.6 中的直接 I/O 技术
*4
$4
HSET
$22
hash:article:by:100431
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100431
$8
labelIds
$20
[21,192,119,209,246]
*4
$4
HSET
$22
hash:article:by:100431
$6
digest
$273
Linux 2.6 中提供的几种文件访问方式所有的 I/O 操作都是通过读文件或者写文件来完成的。在这里，我们把所有的外围设备，包括键盘和显示器，都看成是文件系统中的文件。访问文件的方法多种多样，这里...
*4
$4
HSET
$22
hash:article:by:100431
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100431
$7
content
$42
csdn/linux/1_1_1_14_1504264551.747366.html
*4
$4
HSET
$22
hash:article:by:100431
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100431
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100431
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100431
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100431
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100431
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100431
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100431
$10
createTime
$13
1370948416000
*4
$4
HSET
$22
hash:article:by:100431
$11
releaseTime
$13
1370948416000
*4
$4
HSET
$22
hash:article:by:100431
$10
updateTime
$13
1370948416000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100431
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100431
*3
$5
LPUSH
$15
list:article:id
$6
100431
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100431
*4
$4
HSET
$22
hash:article:by:100522
$2
id
$6
100522
*4
$4
HSET
$22
hash:article:by:100522
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100522
$9
articleId
$4
2264
*4
$4
HSET
$22
hash:article:by:100522
$5
title
$30
Linux 开机启动过程分析
*4
$4
HSET
$22
hash:article:by:100522
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100522
$8
labelIds
$19
[21,35,215,480,481]
*4
$4
HSET
$22
hash:article:by:100522
$6
digest
$263
开机过程指的是从打开计算机电源直到LINUX显示用户登录画面的全过程。分析LINUX开机过程也是深入了解LINUX核心工作原理的一个很好的途径。启动第一步－－加载BIOS当 你打开计算机电源，计算机会...
*4
$4
HSET
$22
hash:article:by:100522
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100522
$7
content
$42
csdn/linux/1_1_1_15_1504264554.806303.html
*4
$4
HSET
$22
hash:article:by:100522
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100522
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100522
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100522
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100522
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100522
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100522
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100522
$10
createTime
$13
1370948408000
*4
$4
HSET
$22
hash:article:by:100522
$11
releaseTime
$13
1370948408000
*4
$4
HSET
$22
hash:article:by:100522
$10
updateTime
$13
1370948408000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100522
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100522
*3
$5
LPUSH
$15
list:article:id
$6
100522
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100522
*4
$4
HSET
$22
hash:article:by:100587
$2
id
$6
100587
*4
$4
HSET
$22
hash:article:by:100587
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100587
$9
articleId
$4
2265
*4
$4
HSET
$22
hash:article:by:100587
$5
title
$17
How program works
*4
$4
HSET
$22
hash:article:by:100587
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100587
$8
labelIds
$21
[207,119,198,215,162]
*4
$4
HSET
$22
hash:article:by:100587
$6
digest
$167
1.gdb常用调试命令要用gdb调试的话，编译命令需要添加-g参数，例如[plain] view plaincopygcc -g main.c -o main  b linenum          ...
*4
$4
HSET
$22
hash:article:by:100587
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100587
$7
content
$42
csdn/linux/1_1_1_16_1504264555.921151.html
*4
$4
HSET
$22
hash:article:by:100587
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100587
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100587
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100587
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100587
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100587
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100587
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100587
$10
createTime
$13
1370678426000
*4
$4
HSET
$22
hash:article:by:100587
$11
releaseTime
$13
1370678426000
*4
$4
HSET
$22
hash:article:by:100587
$10
updateTime
$13
1370678426000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100587
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100587
*3
$5
LPUSH
$15
list:article:id
$6
100587
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100587
*4
$4
HSET
$22
hash:article:by:100508
$2
id
$6
100508
*4
$4
HSET
$22
hash:article:by:100508
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100508
$9
articleId
$4
2262
*4
$4
HSET
$22
hash:article:by:100508
$5
title
$45
Linux 内核详解以及内核缓冲区技术
*4
$4
HSET
$22
hash:article:by:100508
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100508
$8
labelIds
$19
[21,35,246,194,462]
*4
$4
HSET
$22
hash:article:by:100508
$6
digest
$235
Linux 内核简介现在让我们从一个比较高的高度来审视一下 GNU/Linux 操作系统的体系结构。您可以从两个层次上来考虑操作系统，如图 2 所示。图 2. GNU/Linux 操作系统的基本体系结...
*4
$4
HSET
$22
hash:article:by:100508
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100508
$7
content
$42
csdn/linux/1_1_1_18_1504264552.836616.html
*4
$4
HSET
$22
hash:article:by:100508
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100508
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100508
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100508
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100508
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100508
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100508
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100508
$10
createTime
$13
1370678425000
*4
$4
HSET
$22
hash:article:by:100508
$11
releaseTime
$13
1370678425000
*4
$4
HSET
$22
hash:article:by:100508
$10
updateTime
$13
1370678425000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100508
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100508
*3
$5
LPUSH
$15
list:article:id
$6
100508
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100508
*4
$4
HSET
$22
hash:article:by:100596
$2
id
$6
100596
*4
$4
HSET
$22
hash:article:by:100596
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100596
$9
articleId
$4
2250
*4
$4
HSET
$22
hash:article:by:100596
$5
title
$15
有限状态机
*4
$4
HSET
$22
hash:article:by:100596
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100596
$8
labelIds
$20
[165,262,62,223,554]
*4
$4
HSET
$22
hash:article:by:100596
$6
digest
$303
有限状态机是一种数学概念，运用到程序中，可用于有限数量的状态的变化，每个子程序进行一些处理并选择下一种状态。基本的实现思路就是用一张表保存所有可能的状态，并列出进入每个状态时可能执行的所有动作，其中最...
*4
$4
HSET
$22
hash:article:by:100596
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100596
$7
content
$42
csdn/linux/1_1_1_17_1504264543.135604.html
*4
$4
HSET
$22
hash:article:by:100596
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100596
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100596
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100596
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100596
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100596
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100596
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100596
$10
createTime
$13
1370678425000
*4
$4
HSET
$22
hash:article:by:100596
$11
releaseTime
$13
1370678425000
*4
$4
HSET
$22
hash:article:by:100596
$10
updateTime
$13
1370678425000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100596
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100596
*3
$5
LPUSH
$15
list:article:id
$6
100596
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100596
*4
$4
HSET
$22
hash:article:by:100454
$2
id
$6
100454
*4
$4
HSET
$22
hash:article:by:100454
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100454
$9
articleId
$4
2263
*4
$4
HSET
$22
hash:article:by:100454
$5
title
$36
Linux 用户进程内存空间详解
*4
$4
HSET
$22
hash:article:by:100454
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100454
$8
labelIds
$20
[21,215,311,246,427]
*4
$4
HSET
$22
hash:article:by:100454
$6
digest
$187
经常使用top命令了解进程信息，其中包括内存方面的信息。命令top帮助文档是这么解释各个字段的。VIRT	, Virtual Image (kb)RES, Resident size (kb)SHR,...
*4
$4
HSET
$22
hash:article:by:100454
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100454
$7
content
$42
csdn/linux/1_1_1_19_1504264553.743916.html
*4
$4
HSET
$22
hash:article:by:100454
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100454
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100454
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100454
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100454
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100454
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100454
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100454
$10
createTime
$13
1370678419000
*4
$4
HSET
$22
hash:article:by:100454
$11
releaseTime
$13
1370678419000
*4
$4
HSET
$22
hash:article:by:100454
$10
updateTime
$13
1370678419000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100454
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100454
*3
$5
LPUSH
$15
list:article:id
$6
100454
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100454
*4
$4
HSET
$22
hash:article:by:100412
$2
id
$6
100412
*4
$4
HSET
$22
hash:article:by:100412
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100412
$9
articleId
$4
2394
*4
$4
HSET
$22
hash:article:by:100412
$5
title
$34
C语言中自动变量栈的分配
*4
$4
HSET
$22
hash:article:by:100412
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100412
$8
labelIds
$21
[210,207,401,105,257]
*4
$4
HSET
$22
hash:article:by:100412
$6
digest
$301
大家都知道在c语言的运行过程中，局部变量都是存放在栈中的，且是从高位到低位进行进行空间分配。先看一个程序。很明显，地址从高到低分配，和预计的一样。稍微修改一下，再运行。很明显，从低位到高位！！！明确一...
*4
$4
HSET
$22
hash:article:by:100412
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100412
$7
content
$41
csdn/linux/1_1_2_0_1504264704.555163.html
*4
$4
HSET
$22
hash:article:by:100412
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100412
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100412
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100412
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100412
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100412
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100412
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100412
$10
createTime
$13
1370437210000
*4
$4
HSET
$22
hash:article:by:100412
$11
releaseTime
$13
1370437210000
*4
$4
HSET
$22
hash:article:by:100412
$10
updateTime
$13
1370437210000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100412
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100412
*3
$5
LPUSH
$15
list:article:id
$6
100412
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100412
*4
$4
HSET
$22
hash:article:by:100709
$2
id
$6
100709
*4
$4
HSET
$22
hash:article:by:100709
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100709
$9
articleId
$4
2220
*4
$4
HSET
$22
hash:article:by:100709
$5
title
$23
Linux中的中断处理
*4
$4
HSET
$22
hash:article:by:100709
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100709
$8
labelIds
$20
[21,211,393,673,674]
*4
$4
HSET
$22
hash:article:by:100709
$6
digest
$161
与Linux设备驱动中中断处理相关的首先是申请与释放IRQ的API request_irq()和free_irq()，
request_irq()的原型为：
int request_irq(uns...
*4
$4
HSET
$22
hash:article:by:100709
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100709
$7
content
$41
csdn/linux/1_0_3_6_1504264524.363123.html
*4
$4
HSET
$22
hash:article:by:100709
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100709
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100709
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100709
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100709
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100709
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100709
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100709
$10
createTime
$13
1363960819000
*4
$4
HSET
$22
hash:article:by:100709
$11
releaseTime
$13
1363960819000
*4
$4
HSET
$22
hash:article:by:100709
$10
updateTime
$13
1363960819000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100709
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100709
*3
$5
LPUSH
$15
list:article:id
$6
100709
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100709
*4
$4
HSET
$22
hash:article:by:100491
$2
id
$6
100491
*4
$4
HSET
$22
hash:article:by:100491
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100491
$9
articleId
$4
2224
*4
$4
HSET
$22
hash:article:by:100491
$5
title
$17
Linux系统调用
*4
$4
HSET
$22
hash:article:by:100491
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100491
$8
labelIds
$18
[21,273,35,57,119]
*4
$4
HSET
$22
hash:article:by:100491
$6
digest
$276
1       系统调用意义

linux内核中设置了一组用于实现系统功能的子程序，称为系统调用。系统调用和普通库函数调用非常相似，只是系统调用由操作系统核心提供，运行于核心态，而普通的函数调用由...
*4
$4
HSET
$22
hash:article:by:100491
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100491
$7
content
$41
csdn/linux/1_0_3_7_1504264527.436571.html
*4
$4
HSET
$22
hash:article:by:100491
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100491
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100491
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100491
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100491
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100491
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100491
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100491
$10
createTime
$13
1363960819000
*4
$4
HSET
$22
hash:article:by:100491
$11
releaseTime
$13
1363960819000
*4
$4
HSET
$22
hash:article:by:100491
$10
updateTime
$13
1363960819000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100491
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100491
*3
$5
LPUSH
$15
list:article:id
$6
100491
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100491
*4
$4
HSET
$22
hash:article:by:100532
$2
id
$6
100532
*4
$4
HSET
$22
hash:article:by:100532
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100532
$9
articleId
$4
2226
*4
$4
HSET
$22
hash:article:by:100532
$5
title
$23
Linux进程模型总结
*4
$4
HSET
$22
hash:article:by:100532
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100532
$8
labelIds
$19
[21,211,57,494,251]
*4
$4
HSET
$22
hash:article:by:100532
$6
digest
$297
一个进程在CPU上运行可以有两种运行模式（进程状态）：用户模式和内核模式。如果当前运行的是用户程序（用户代码），那么对应进程就处于用户模式（用户态），如果出现系统调用或者发生中断，那么对应进程就处于内...
*4
$4
HSET
$22
hash:article:by:100532
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100532
$7
content
$41
csdn/linux/1_0_3_8_1504264528.702365.html
*4
$4
HSET
$22
hash:article:by:100532
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100532
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100532
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100532
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100532
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100532
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100532
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100532
$10
createTime
$13
1363788026000
*4
$4
HSET
$22
hash:article:by:100532
$11
releaseTime
$13
1363788026000
*4
$4
HSET
$22
hash:article:by:100532
$10
updateTime
$13
1363788026000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100532
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100532
*3
$5
LPUSH
$15
list:article:id
$6
100532
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100532
*4
$4
HSET
$22
hash:article:by:100523
$2
id
$6
100523
*4
$4
HSET
$22
hash:article:by:100523
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100523
$9
articleId
$4
2227
*4
$4
HSET
$22
hash:article:by:100523
$5
title
$26
Linux进程休眠和唤醒
*4
$4
HSET
$22
hash:article:by:100523
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100523
$8
labelIds
$19
[21,211,57,482,483]
*4
$4
HSET
$22
hash:article:by:100523
$6
digest
$291
当进程以阻塞的方式通信，在得到结果前进程会挂起休眠。
为了将进程以一种安全的方式进入休眠，我们需要牢记两条规则：
一、永远不要在原子上下文中进入休眠。
二、进程休眠后，对环境一无所知。唤醒后，必...
*4
$4
HSET
$22
hash:article:by:100523
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100523
$7
content
$41
csdn/linux/1_0_3_9_1504264529.564963.html
*4
$4
HSET
$22
hash:article:by:100523
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100523
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100523
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100523
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100523
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100523
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100523
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100523
$10
createTime
$13
1363773639000
*4
$4
HSET
$22
hash:article:by:100523
$11
releaseTime
$13
1363773639000
*4
$4
HSET
$22
hash:article:by:100523
$10
updateTime
$13
1363773639000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100523
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100523
*3
$5
LPUSH
$15
list:article:id
$6
100523
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100523
*4
$4
HSET
$22
hash:article:by:100681
$2
id
$6
100681
*4
$4
HSET
$22
hash:article:by:100681
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100681
$9
articleId
$4
2221
*4
$4
HSET
$22
hash:article:by:100681
$5
title
$17
Linux进程状态
*4
$4
HSET
$22
hash:article:by:100681
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100681
$8
labelIds
$19
[21,211,259,57,642]
*4
$4
HSET
$22
hash:article:by:100681
$6
digest
$228
进程状态

在linux下，通过ps命令我们能够查看到系统中存在的进程，以及它们的状态：

R (TASK_RUNNING)，可执行状态。

只有在该状态的进程才可能在CPU上运行。而同一...
*4
$4
HSET
$22
hash:article:by:100681
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100681
$7
content
$42
csdn/linux/1_0_3_10_1504264525.558145.html
*4
$4
HSET
$22
hash:article:by:100681
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100681
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100681
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100681
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100681
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100681
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100681
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100681
$10
createTime
$13
1363773604000
*4
$4
HSET
$22
hash:article:by:100681
$11
releaseTime
$13
1363773604000
*4
$4
HSET
$22
hash:article:by:100681
$10
updateTime
$13
1363773604000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100681
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100681
*3
$5
LPUSH
$15
list:article:id
$6
100681
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100681
*4
$4
HSET
$22
hash:article:by:100458
$2
id
$6
100458
*4
$4
HSET
$22
hash:article:by:100458
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100458
$9
articleId
$4
2222
*4
$4
HSET
$22
hash:article:by:100458
$5
title
$33
Linux2.6 内核进程调度分析
*4
$4
HSET
$22
hash:article:by:100458
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100458
$8
labelIds
$20
[432,57,433,434,211]
*4
$4
HSET
$22
hash:article:by:100458
$6
digest
$244
Linux2.6 内核进程调度分析


   进程的调度时机与引起进程调度的原因和进程调度的方式有关。在 2.6 中,除核心应用
    主动调用调度器之外, 核心还在应用不完全感知的情况下在...
*4
$4
HSET
$22
hash:article:by:100458
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100458
$7
content
$42
csdn/linux/1_0_3_11_1504264526.411986.html
*4
$4
HSET
$22
hash:article:by:100458
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100458
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100458
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100458
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100458
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100458
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100458
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100458
$10
createTime
$13
1363770037000
*4
$4
HSET
$22
hash:article:by:100458
$11
releaseTime
$13
1363770037000
*4
$4
HSET
$22
hash:article:by:100458
$10
updateTime
$13
1363770037000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100458
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100458
*3
$5
LPUSH
$15
list:article:id
$6
100458
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100458
*4
$4
HSET
$22
hash:article:by:100546
$2
id
$6
100546
*4
$4
HSET
$22
hash:article:by:100546
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100546
$9
articleId
$4
2300
*4
$4
HSET
$22
hash:article:by:100546
$5
title
$23
Java设计模式-导航
*4
$4
HSET
$22
hash:article:by:100546
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100546
$8
labelIds
$16
[513,12,514,515]
*4
$4
HSET
$22
hash:article:by:100546
$6
digest
$38
Java 设计模式++ 面向对象设计
*4
$4
HSET
$22
hash:article:by:100546
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100546
$7
content
$40
csdn/java/1_1_2_7_1504264616.204731.html
*4
$4
HSET
$22
hash:article:by:100546
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100546
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100546
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100546
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100546
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100546
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100546
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100546
$10
createTime
$13
1361307637000
*4
$4
HSET
$22
hash:article:by:100546
$11
releaseTime
$13
1361307637000
*4
$4
HSET
$22
hash:article:by:100546
$10
updateTime
$13
1361307637000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100546
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100546
*3
$5
LPUSH
$15
list:article:id
$6
100546
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100546
*4
$4
HSET
$22
hash:article:by:100693
$2
id
$6
100693
*4
$4
HSET
$22
hash:article:by:100693
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100693
$9
articleId
$4
2593
*4
$4
HSET
$22
hash:article:by:100693
$5
title
$46
设计模式(20)-行为型-状态模式(State)
*4
$4
HSET
$22
hash:article:by:100693
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100693
$8
labelIds
$5
[651]
*4
$4
HSET
$22
hash:article:by:100693
$6
digest
$275
概述    定义对象间的一种一对多的依赖关系,当一个对象的状态发生改变时,所有依赖于它的对象都得到通知并被自动更新。
适用性    1.一个对象的行为取决于它的状态,并且它必须在运行时刻根据状态改变它...
*4
$4
HSET
$22
hash:article:by:100693
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100693
$7
content
$41
csdn/java/1_1_1_19_1504265056.733126.html
*4
$4
HSET
$22
hash:article:by:100693
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100693
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100693
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100693
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100693
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100693
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100693
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100693
$10
createTime
$13
1353736816000
*4
$4
HSET
$22
hash:article:by:100693
$11
releaseTime
$13
1353736816000
*4
$4
HSET
$22
hash:article:by:100693
$10
updateTime
$13
1353736816000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100693
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100693
*3
$5
LPUSH
$15
list:article:id
$6
100693
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100693
*4
$4
HSET
$22
hash:article:by:100162
$2
id
$6
100162
*4
$4
HSET
$22
hash:article:by:100162
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100162
$9
articleId
$4
2485
*4
$4
HSET
$22
hash:article:by:100162
$5
title
$21
Hibernate优化策略
*4
$4
HSET
$22
hash:article:by:100162
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100162
$8
labelIds
$20
[142,146,56,147,148]
*4
$4
HSET
$22
hash:article:by:100162
$6
digest
$170
1、抓取策略：
 当提取一个对象的关联对象时，所要求的策略。
 
 fetch="select"
 
 
  customer:  lazy="false" 或者  session.get(Custo...
*4
$4
HSET
$22
hash:article:by:100162
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100162
$7
content
$41
csdn/java/1_0_1_13_1504264805.665798.html
*4
$4
HSET
$22
hash:article:by:100162
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100162
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100162
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100162
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100162
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100162
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100162
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100162
$10
createTime
$13
1349539257000
*4
$4
HSET
$22
hash:article:by:100162
$11
releaseTime
$13
1349539257000
*4
$4
HSET
$22
hash:article:by:100162
$10
updateTime
$13
1349539257000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100162
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100162
*3
$5
LPUSH
$15
list:article:id
$6
100162
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100162
*4
$4
HSET
$22
hash:article:by:100573
$2
id
$6
100573
*4
$4
HSET
$22
hash:article:by:100573
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100573
$9
articleId
$4
2487
*4
$4
HSET
$22
hash:article:by:100573
$5
title
$36
Hibernate开发中常见错误总结
*4
$4
HSET
$22
hash:article:by:100573
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100573
$8
labelIds
$20
[142,148,143,533,56]
*4
$4
HSET
$22
hash:article:by:100573
$6
digest
$107
org.hibernate.MappingException: Unknown entity: cn.itcast.hibernate717.helloworld.Person
hibernate框架...
*4
$4
HSET
$22
hash:article:by:100573
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100573
$7
content
$41
csdn/java/1_0_1_10_1504264810.672586.html
*4
$4
HSET
$22
hash:article:by:100573
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100573
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100573
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100573
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100573
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100573
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100573
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100573
$10
createTime
$13
1349539254000
*4
$4
HSET
$22
hash:article:by:100573
$11
releaseTime
$13
1349539254000
*4
$4
HSET
$22
hash:article:by:100573
$10
updateTime
$13
1349539254000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100573
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100573
*3
$5
LPUSH
$15
list:article:id
$6
100573
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100573
*4
$4
HSET
$22
hash:article:by:100281
$2
id
$6
100281
*4
$4
HSET
$22
hash:article:by:100281
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100281
$9
articleId
$4
2488
*4
$4
HSET
$22
hash:article:by:100281
$5
title
$166
OA中总结：s:select,关于使用modelDriven,项目分层，@Transactional，jspf,各个层上配置注解交给spring管理的方法，简单的OGNL表达式写法
*4
$4
HSET
$22
hash:article:by:100281
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100281
$8
labelIds
$19
[59,283,129,56,284]
*4
$4
HSET
$22
hash:article:by:100281
$6
digest
$160
%

 list:需要进行迭代的list集合
 listKey:需要提交的值
 listValue:需要在页面上显示的值
============================
优化
1.Actio...
*4
$4
HSET
$22
hash:article:by:100281
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100281
$7
content
$40
csdn/java/1_0_1_9_1504264811.699423.html
*4
$4
HSET
$22
hash:article:by:100281
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100281
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100281
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100281
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100281
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100281
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100281
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100281
$10
createTime
$13
1344528052000
*4
$4
HSET
$22
hash:article:by:100281
$11
releaseTime
$13
1344528052000
*4
$4
HSET
$22
hash:article:by:100281
$10
updateTime
$13
1344528052000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100281
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100281
*3
$5
LPUSH
$15
list:article:id
$6
100281
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100281
*4
$4
HSET
$22
hash:article:by:100296
$2
id
$6
100296
*4
$4
HSET
$22
hash:article:by:100296
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100296
$9
articleId
$4
2489
*4
$4
HSET
$22
hash:article:by:100296
$5
title
$25
OA中SSH+JBPM项目整合
*4
$4
HSET
$22
hash:article:by:100296
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100296
$8
labelIds
$19
[240,299,59,142,45]
*4
$4
HSET
$22
hash:article:by:100296
$6
digest
$131
一，集成 Spring 与 Hibernate
 1，配置SessionFactory
  1，配置
   ---------------------- applicationContext.xml ...
*4
$4
HSET
$22
hash:article:by:100296
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100296
$7
content
$40
csdn/java/1_0_1_6_1504264813.032858.html
*4
$4
HSET
$22
hash:article:by:100296
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100296
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100296
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100296
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100296
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100296
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100296
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100296
$10
createTime
$13
1344412821000
*4
$4
HSET
$22
hash:article:by:100296
$11
releaseTime
$13
1344412821000
*4
$4
HSET
$22
hash:article:by:100296
$10
updateTime
$13
1344412821000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100296
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100296
*3
$5
LPUSH
$15
list:article:id
$6
100296
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100296
*4
$4
HSET
$22
hash:article:by:100244
$2
id
$6
100244
*4
$4
HSET
$22
hash:article:by:100244
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100244
$9
articleId
$4
2486
*4
$4
HSET
$22
hash:article:by:100244
$5
title
$23
OA项目中环境准备
*4
$4
HSET
$22
hash:article:by:100244
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100244
$8
labelIds
$20
[128,142,59,239,240]
*4
$4
HSET
$22
hash:article:by:100244
$6
digest
$192
1，新建工程，类型为Web Project，设置默认编码为UTF-8，并创建如下文件夹
 1，Source Folder
  1，src  项目源码
  2，conf  配置文件
  3，test  ...
*4
$4
HSET
$22
hash:article:by:100244
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100244
$7
content
$40
csdn/java/1_0_1_5_1504264808.630293.html
*4
$4
HSET
$22
hash:article:by:100244
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100244
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100244
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100244
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100244
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100244
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100244
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100244
$10
createTime
$13
1344412819000
*4
$4
HSET
$22
hash:article:by:100244
$11
releaseTime
$13
1344412819000
*4
$4
HSET
$22
hash:article:by:100244
$10
updateTime
$13
1344412819000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100244
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100244
*3
$5
LPUSH
$15
list:article:id
$6
100244
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100244
*4
$4
HSET
$22
hash:article:by:100317
$2
id
$6
100317
*4
$4
HSET
$22
hash:article:by:100317
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100317
$9
articleId
$4
2589
*4
$4
HSET
$22
hash:article:by:100317
$5
title
$60
设计模式(7)-结构型-桥接模式(Bridge)(个人笔记)
*4
$4
HSET
$22
hash:article:by:100317
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100317
$8
labelIds
$11
[12,45,317]
*4
$4
HSET
$22
hash:article:by:100317
$6
digest
$282
概述:将抽象部分与它的实现部分分离，使它们都可以独立地变化。适用性    1.你不希望在抽象和它的实现部分之间有一个固定的绑定关系。      例如这种情况可能是因为，在程序运行时刻实现部分应可以被选...
*4
$4
HSET
$22
hash:article:by:100317
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100317
$7
content
$40
csdn/java/1_1_1_6_1504265048.810782.html
*4
$4
HSET
$22
hash:article:by:100317
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100317
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100317
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100317
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100317
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100317
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100317
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100317
$10
createTime
$13
1341342052000
*4
$4
HSET
$22
hash:article:by:100317
$11
releaseTime
$13
1341342052000
*4
$4
HSET
$22
hash:article:by:100317
$10
updateTime
$13
1341342052000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100317
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100317
*3
$5
LPUSH
$15
list:article:id
$6
100317
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100317
*4
$4
HSET
$22
hash:article:by:100146
$2
id
$6
100146
*4
$4
HSET
$22
hash:article:by:100146
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100146
$9
articleId
$4
2484
*4
$4
HSET
$22
hash:article:by:100146
$5
title
$13
struts2校验
*4
$4
HSET
$22
hash:article:by:100146
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100146
$8
labelIds
$9
[128,129]
*4
$4
HSET
$22
hash:article:by:100146
$6
digest
$256
Struts2提供两种校验规则：字段校验器配置风格和非字段配置风格。
字段校验器的格式：



参数值
-->
校验失败时的提示信息


下一个要校验的字段à

字段校验器以元素为基本元素，该元素的n...
*4
$4
HSET
$22
hash:article:by:100146
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100146
$7
content
$40
csdn/java/1_0_1_4_1504264800.660985.html
*4
$4
HSET
$22
hash:article:by:100146
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100146
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100146
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100146
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100146
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100146
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100146
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100146
$10
createTime
$13
1341288035000
*4
$4
HSET
$22
hash:article:by:100146
$11
releaseTime
$13
1341288035000
*4
$4
HSET
$22
hash:article:by:100146
$10
updateTime
$13
1341288035000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100146
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100146
*3
$5
LPUSH
$15
list:article:id
$6
100146
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100146
*4
$4
HSET
$22
hash:article:by:100622
$2
id
$6
100622
*4
$4
HSET
$22
hash:article:by:100622
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100622
$9
articleId
$4
2395
*4
$4
HSET
$22
hash:article:by:100622
$5
title
$36
Linux USB Gadget--各环节的整合
*4
$4
HSET
$22
hash:article:by:100622
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100622
$8
labelIds
$23
[21,191,578,317,511,75]
*4
$4
HSET
$22
hash:article:by:100622
$6
digest
$215
Linux USB Gadget软件结构一文中分析Linux USB Gadget软件分为三层。这三层其中两层是与硬件无关的，分别是Gadget功能驱动层，USB设备层。一层是与硬件相关的是UDC层。...
*4
$4
HSET
$22
hash:article:by:100622
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100622
$7
content
$41
csdn/linux/1_1_1_0_1504264706.604644.html
*4
$4
HSET
$22
hash:article:by:100622
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100622
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100622
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100622
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100622
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100622
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100622
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100622
$10
createTime
$13
1340809255000
*4
$4
HSET
$22
hash:article:by:100622
$11
releaseTime
$13
1340809255000
*4
$4
HSET
$22
hash:article:by:100622
$10
updateTime
$13
1340809255000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100622
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100622
*3
$5
LPUSH
$15
list:article:id
$6
100622
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100622
*4
$4
HSET
$22
hash:article:by:100544
$2
id
$6
100544
*4
$4
HSET
$22
hash:article:by:100544
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100544
$9
articleId
$4
2402
*4
$4
HSET
$22
hash:article:by:100544
$5
title
$30
Linux USB Gadget--软件结构
*4
$4
HSET
$22
hash:article:by:100544
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100544
$8
labelIds
$23
[21,191,75,210,511,159]
*4
$4
HSET
$22
hash:article:by:100544
$6
digest
$211
USB Gadget是分层的软件结构，本文分析的是2.6.32.2版本的Gadget软件结构，这个软件结构与以前版本的变化很大。USB Gadget软件结构总共分为三层：
一. UDC层
    ...
*4
$4
HSET
$22
hash:article:by:100544
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100544
$7
content
$40
csdn/linux/1_1_1_1_1504264714.04979.html
*4
$4
HSET
$22
hash:article:by:100544
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100544
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100544
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100544
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100544
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100544
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100544
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100544
$10
createTime
$13
1340643634000
*4
$4
HSET
$22
hash:article:by:100544
$11
releaseTime
$13
1340643634000
*4
$4
HSET
$22
hash:article:by:100544
$10
updateTime
$13
1340643634000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100544
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100544
*3
$5
LPUSH
$15
list:article:id
$6
100544
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100544
*4
$4
HSET
$22
hash:article:by:100437
$2
id
$6
100437
*4
$4
HSET
$22
hash:article:by:100437
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100437
$9
articleId
$4
2588
*4
$4
HSET
$22
hash:article:by:100437
$5
title
$64
设计模式(6)-结构型-适配器模式(Adapter)(个人笔记)
*4
$4
HSET
$22
hash:article:by:100437
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100437
$8
labelIds
$19
[12,317,45,148,417]
*4
$4
HSET
$22
hash:article:by:100437
$6
digest
$266
概述    将一个类的接口转换成客户希望的另外一个接口。Adapter模式使得原本由于接口不兼容而不能一起工作的那些类可以一起工作。
 适用性    1.你想使用一个已经存在的类，而它的接口不符合你的...
*4
$4
HSET
$22
hash:article:by:100437
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100437
$7
content
$40
csdn/java/1_1_1_5_1504265045.759409.html
*4
$4
HSET
$22
hash:article:by:100437
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100437
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100437
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100437
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100437
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100437
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100437
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100437
$10
createTime
$13
1335607247000
*4
$4
HSET
$22
hash:article:by:100437
$11
releaseTime
$13
1335607247000
*4
$4
HSET
$22
hash:article:by:100437
$10
updateTime
$13
1335607247000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100437
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100437
*3
$5
LPUSH
$15
list:article:id
$6
100437
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100437
*4
$4
HSET
$22
hash:article:by:100645
$2
id
$6
100645
*4
$4
HSET
$22
hash:article:by:100645
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100645
$9
articleId
$4
2592
*4
$4
HSET
$22
hash:article:by:100645
$5
title
$63
设计模式(5)-创建型-原型(Prototype)模式(个人笔记)
*4
$4
HSET
$22
hash:article:by:100645
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100645
$8
labelIds
$23
[274,12,317,598,45,422]
*4
$4
HSET
$22
hash:article:by:100645
$6
digest
$264
概述    用原型实例指定创建对象的种类，并且通过拷贝这些原型创建新的对象。
 适用性    1.当一个系统应该独立于它的产品创建、构成和表示时。

    2.当要实例化的类是在运行时刻指定时，例如...
*4
$4
HSET
$22
hash:article:by:100645
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100645
$7
content
$40
csdn/java/1_1_1_4_1504265052.761093.html
*4
$4
HSET
$22
hash:article:by:100645
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100645
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100645
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100645
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100645
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100645
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100645
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100645
$10
createTime
$13
1335607244000
*4
$4
HSET
$22
hash:article:by:100645
$11
releaseTime
$13
1335607244000
*4
$4
HSET
$22
hash:article:by:100645
$10
updateTime
$13
1335607244000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100645
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100645
*3
$5
LPUSH
$15
list:article:id
$6
100645
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100645
*4
$4
HSET
$22
hash:article:by:100441
$2
id
$6
100441
*4
$4
HSET
$22
hash:article:by:100441
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100441
$9
articleId
$4
2591
*4
$4
HSET
$22
hash:article:by:100441
$5
title
$58
设计模式(4)-创建型-建造者(Builder)(个人笔记)
*4
$4
HSET
$22
hash:article:by:100441
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100441
$8
labelIds
$23
[12,317,421,45,422,179]
*4
$4
HSET
$22
hash:article:by:100441
$6
digest
$273
概述：将一个复杂对象的构建与它的表示分离，使得同样的构建过程可以创建不同的表示。
适用性    1.当创建复杂对象的算法应该独立于该对象的组成部分以及它们的装配方式时。

    2.当构造过程必须允...
*4
$4
HSET
$22
hash:article:by:100441
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100441
$7
content
$39
csdn/java/1_1_1_3_1504265051.79732.html
*4
$4
HSET
$22
hash:article:by:100441
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100441
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100441
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100441
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100441
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100441
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100441
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100441
$10
createTime
$13
1335420010000
*4
$4
HSET
$22
hash:article:by:100441
$11
releaseTime
$13
1335420010000
*4
$4
HSET
$22
hash:article:by:100441
$10
updateTime
$13
1335420010000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100441
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100441
*3
$5
LPUSH
$15
list:article:id
$6
100441
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100441
*4
$4
HSET
$22
hash:article:by:100566
$2
id
$6
100566
*4
$4
HSET
$22
hash:article:by:100566
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100566
$9
articleId
$4
2590
*4
$4
HSET
$22
hash:article:by:100566
$5
title
$70
设计模式(3)-创建型-抽象工厂(Abstract Factory)(个人笔记)
*4
$4
HSET
$22
hash:article:by:100566
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100566
$8
labelIds
$19
[12,422,45,527,317]
*4
$4
HSET
$22
hash:article:by:100566
$6
digest
$273
概述：提供一个创建一系列相关或相互依赖对象的接口，而无需指定它们具体的类。
适用性：    1.一个系统要独立于它的产品的创建、组合和表示时。

    2.一个系统要由多个产品系列中的一个来配置时。...
*4
$4
HSET
$22
hash:article:by:100566
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100566
$7
content
$40
csdn/java/1_1_1_2_1504265050.760118.html
*4
$4
HSET
$22
hash:article:by:100566
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100566
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100566
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100566
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100566
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100566
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100566
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100566
$10
createTime
$13
1335420008000
*4
$4
HSET
$22
hash:article:by:100566
$11
releaseTime
$13
1335420008000
*4
$4
HSET
$22
hash:article:by:100566
$10
updateTime
$13
1335420008000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100566
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100566
*3
$5
LPUSH
$15
list:article:id
$6
100566
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100566
*4
$4
HSET
$22
hash:article:by:100646
$2
id
$6
100646
*4
$4
HSET
$22
hash:article:by:100646
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100646
$9
articleId
$4
2587
*4
$4
HSET
$22
hash:article:by:100646
$5
title
$68
设计模式(2)-创建型-工厂方法(Factory method)(个人笔记)
*4
$4
HSET
$22
hash:article:by:100646
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100646
$8
labelIds
$19
[12,45,599,527,317]
*4
$4
HSET
$22
hash:article:by:100646
$6
digest
$259
概述：定义一个用于创建对象的接口，让子类决定实例化哪一个类。FactoryMethod使一个类的实例化延迟到其子类。
适用性： 1.当一个类不知道它所必须创建的对象的类的时候。

 2.当一个类希望由...
*4
$4
HSET
$22
hash:article:by:100646
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100646
$7
content
$39
csdn/java/1_1_1_1_1504265044.67208.html
*4
$4
HSET
$22
hash:article:by:100646
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100646
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100646
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100646
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100646
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100646
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100646
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100646
$10
createTime
$13
1335420006000
*4
$4
HSET
$22
hash:article:by:100646
$11
releaseTime
$13
1335420006000
*4
$4
HSET
$22
hash:article:by:100646
$10
updateTime
$13
1335420006000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100646
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100646
*3
$5
LPUSH
$15
list:article:id
$6
100646
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100646
*4
$4
HSET
$22
hash:article:by:100707
$2
id
$6
100707
*4
$4
HSET
$22
hash:article:by:100707
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100707
$9
articleId
$4
2586
*4
$4
HSET
$22
hash:article:by:100707
$5
title
$64
设计模式(1)-创建型-单件(Singleton)模式 (个人笔记)
*4
$4
HSET
$22
hash:article:by:100707
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100707
$8
labelIds
$22
[12,45,52,317,489,210]
*4
$4
HSET
$22
hash:article:by:100707
$6
digest
$283
提起设计模式，确实有不少著作讨论它，>一书理论化很强，我这里干脆整理出一些用代码来体现的实例来说明。第一个就是Singleton模式，意指始终保证只创建或得到一个唯一的实例。其代码如下：提起设计模式，...
*4
$4
HSET
$22
hash:article:by:100707
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100707
$7
content
$40
csdn/java/1_1_1_0_1504265043.615652.html
*4
$4
HSET
$22
hash:article:by:100707
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100707
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100707
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100707
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100707
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100707
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100707
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100707
$10
createTime
$13
1335420004000
*4
$4
HSET
$22
hash:article:by:100707
$11
releaseTime
$13
1335420004000
*4
$4
HSET
$22
hash:article:by:100707
$10
updateTime
$13
1335420004000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100707
*4
$4
ZADD
$28
zset:article:category:read:2
$3
0.0
$6
100707
*3
$5
LPUSH
$15
list:article:id
$6
100707
*3
$5
LPUSH
$29
list:article:by:category:id:2
$6
100707
*4
$4
HSET
$22
hash:article:by:100528
$2
id
$6
100528
*4
$4
HSET
$22
hash:article:by:100528
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100528
$9
articleId
$4
2412
*4
$4
HSET
$22
hash:article:by:100528
$5
title
$28
Linux 服务器设计( 二 )
*4
$4
HSET
$22
hash:article:by:100528
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100528
$8
labelIds
$23
[28,21,191,488,123,489]
*4
$4
HSET
$22
hash:article:by:100528
$6
digest
$247
上一篇的介绍已经OK，那么此处就只贴上代码！
   CODE_1 : 主线程accept，但是线程比进程有一个好处是，对于conn_fd资源来说是可以直接共享的，所以就可以不需要像在进程中那样需要传...
*4
$4
HSET
$22
hash:article:by:100528
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100528
$7
content
$41
csdn/linux/1_1_1_0_1504264720.243716.html
*4
$4
HSET
$22
hash:article:by:100528
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100528
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100528
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100528
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100528
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100528
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100528
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100528
$10
createTime
$13
1334833239000
*4
$4
HSET
$22
hash:article:by:100528
$11
releaseTime
$13
1334833239000
*4
$4
HSET
$22
hash:article:by:100528
$10
updateTime
$13
1334833239000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100528
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100528
*3
$5
LPUSH
$15
list:article:id
$6
100528
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100528
*4
$4
HSET
$22
hash:article:by:100438
$2
id
$6
100438
*4
$4
HSET
$22
hash:article:by:100438
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100438
$9
articleId
$4
2417
*4
$4
HSET
$22
hash:article:by:100438
$5
title
$35
Linux 下服务器设计（ 一 ）
*4
$4
HSET
$22
hash:article:by:100438
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100438
$8
labelIds
$23
[28,21,123,355,191,418]
*4
$4
HSET
$22
hash:article:by:100438
$6
digest
$252
这里讲的仅仅是一个简单的server的模型！为了处理同时来到很多小的链接请求( 解释：就是请求很简单，持续时间很短，那么if  server在请求到来时在fork来处理它，有可能fork的时间比应答请...
*4
$4
HSET
$22
hash:article:by:100438
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100438
$7
content
$41
csdn/linux/1_1_1_1_1504264726.805796.html
*4
$4
HSET
$22
hash:article:by:100438
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100438
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100438
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100438
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100438
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100438
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100438
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100438
$10
createTime
$13
1334833231000
*4
$4
HSET
$22
hash:article:by:100438
$11
releaseTime
$13
1334833231000
*4
$4
HSET
$22
hash:article:by:100438
$10
updateTime
$13
1334833231000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100438
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100438
*3
$5
LPUSH
$15
list:article:id
$6
100438
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100438
*4
$4
HSET
$22
hash:article:by:100526
$2
id
$6
100526
*4
$4
HSET
$22
hash:article:by:100526
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100526
$9
articleId
$4
2414
*4
$4
HSET
$22
hash:article:by:100526
$5
title
$36
linux 网络编程：epoll 的实例
*4
$4
HSET
$22
hash:article:by:100526
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100526
$8
labelIds
$23
[21,62,124,123,191,355]
*4
$4
HSET
$22
hash:article:by:100526
$6
digest
$221
在前面已经经过了PPC、TPC、select之类( TPC就是使用进程处理data，TPC就是使用线程处理 ),前面两个的缺点大家应该都是知道的是吧，对于select( 其实poll和他差不多 )，缺...
*4
$4
HSET
$22
hash:article:by:100526
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100526
$7
content
$41
csdn/linux/1_1_1_3_1504264721.215339.html
*4
$4
HSET
$22
hash:article:by:100526
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100526
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100526
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100526
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100526
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100526
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100526
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100526
$10
createTime
$13
1332428439000
*4
$4
HSET
$22
hash:article:by:100526
$11
releaseTime
$13
1332428439000
*4
$4
HSET
$22
hash:article:by:100526
$10
updateTime
$13
1332428439000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100526
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100526
*3
$5
LPUSH
$15
list:article:id
$6
100526
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100526
*4
$4
HSET
$22
hash:article:by:100488
$2
id
$6
100488
*4
$4
HSET
$22
hash:article:by:100488
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100488
$9
articleId
$4
2415
*4
$4
HSET
$22
hash:article:by:100488
$5
title
$42
UNIX domain  (  UNIX  域协议  )  实例
*4
$4
HSET
$22
hash:article:by:100488
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100488
$8
labelIds
$25
[211,459,123,191,460,418]
*4
$4
HSET
$22
hash:article:by:100488
$6
digest
$235
一般在我们自己的主机上通信的时候，前面也讲到过可以使用pipe，fifo，msg，共享内存之类，如果你想使用套接字的话，当然TCP/IP的套接字也是可以的，只要指定server的IP = 127.0....
*4
$4
HSET
$22
hash:article:by:100488
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100488
$7
content
$41
csdn/linux/1_1_1_4_1504264722.303373.html
*4
$4
HSET
$22
hash:article:by:100488
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100488
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100488
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100488
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100488
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100488
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100488
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100488
$10
createTime
$13
1332396045000
*4
$4
HSET
$22
hash:article:by:100488
$11
releaseTime
$13
1332396045000
*4
$4
HSET
$22
hash:article:by:100488
$10
updateTime
$13
1332396045000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100488
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100488
*3
$5
LPUSH
$15
list:article:id
$6
100488
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100488
*4
$4
HSET
$22
hash:article:by:100720
$2
id
$6
100720
*4
$4
HSET
$22
hash:article:by:100720
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100720
$9
articleId
$4
2396
*4
$4
HSET
$22
hash:article:by:100720
$5
title
$28
linux RTC 驱动模型分析
*4
$4
HSET
$22
hash:article:by:100720
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100720
$8
labelIds
$23
[21,191,159,45,460,692]
*4
$4
HSET
$22
hash:article:by:100720
$6
digest
$201
linux RTC 驱动模型分析
        RTC(real time clock)实时时钟，主要作用是给Linux系统提供时间。RTC因为是电池供电的，所以掉电后时间不丢失。Linux内核把...
*4
$4
HSET
$22
hash:article:by:100720
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100720
$7
content
$41
csdn/linux/1_1_1_3_1504264708.794233.html
*4
$4
HSET
$22
hash:article:by:100720
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100720
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100720
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100720
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100720
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100720
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100720
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100720
$10
createTime
$13
1317114028000
*4
$4
HSET
$22
hash:article:by:100720
$11
releaseTime
$13
1317114028000
*4
$4
HSET
$22
hash:article:by:100720
$10
updateTime
$13
1317114028000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100720
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100720
*3
$5
LPUSH
$15
list:article:id
$6
100720
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100720
*4
$4
HSET
$22
hash:article:by:100723
$2
id
$6
100723
*4
$4
HSET
$22
hash:article:by:100723
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100723
$9
articleId
$4
2409
*4
$4
HSET
$22
hash:article:by:100723
$5
title
$26
mini2440驱动分析之LCD
*4
$4
HSET
$22
hash:article:by:100723
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100723
$8
labelIds
$24
[191,210,696,75,357,489]
*4
$4
HSET
$22
hash:article:by:100723
$6
digest
$183
mini2440驱动分析之LCD
        mini2440集成了lcd控制器的接口，板子上接的lcd硬件是统宝240*320，TFT型lcd。lcd驱动对应的文件为s3c2410fb.c。要...
*4
$4
HSET
$22
hash:article:by:100723
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100723
$7
content
$41
csdn/linux/1_1_1_4_1504264718.259735.html
*4
$4
HSET
$22
hash:article:by:100723
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100723
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100723
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100723
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100723
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100723
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100723
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100723
$10
createTime
$13
1316703656000
*4
$4
HSET
$22
hash:article:by:100723
$11
releaseTime
$13
1316703656000
*4
$4
HSET
$22
hash:article:by:100723
$10
updateTime
$13
1316703656000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100723
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100723
*3
$5
LPUSH
$15
list:article:id
$6
100723
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100723
*4
$4
HSET
$22
hash:article:by:100738
$2
id
$6
100738
*4
$4
HSET
$22
hash:article:by:100738
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100738
$9
articleId
$4
2405
*4
$4
HSET
$22
hash:article:by:100738
$5
title
$31
linux input 子系统分析 三
*4
$4
HSET
$22
hash:article:by:100738
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100738
$8
labelIds
$24
[530,21,191,357,532,585]
*4
$4
HSET
$22
hash:article:by:100738
$6
digest
$200
linux input子系统分析--子系统核心.事件处理层.事件传递过程

一.  输入子系统核心分析。
    1.输入子系统核心对应与/drivers/input/input.c文件,这个也...
*4
$4
HSET
$22
hash:article:by:100738
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100738
$7
content
$41
csdn/linux/1_1_1_5_1504264716.092698.html
*4
$4
HSET
$22
hash:article:by:100738
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100738
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100738
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100738
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100738
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100738
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100738
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100738
$10
createTime
$13
1316023248000
*4
$4
HSET
$22
hash:article:by:100738
$11
releaseTime
$13
1316023248000
*4
$4
HSET
$22
hash:article:by:100738
$10
updateTime
$13
1316023248000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100738
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100738
*3
$5
LPUSH
$15
list:article:id
$6
100738
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100738
*4
$4
HSET
$22
hash:article:by:100694
$2
id
$6
100694
*4
$4
HSET
$22
hash:article:by:100694
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100694
$9
articleId
$4
2403
*4
$4
HSET
$22
hash:article:by:100694
$5
title
$31
linux input 子系统分析 二
*4
$4
HSET
$22
hash:article:by:100694
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100694
$8
labelIds
$23
[530,21,191,532,585,75]
*4
$4
HSET
$22
hash:article:by:100694
$6
digest
$244
linux input子系统分析--主要函数
 一. 各种注册函数
    因为分析一所讲的每种数据结构都代表一类对象，所以每种数据结构都会对应一个注册函数，他们都定义在子系统核心的input.c...
*4
$4
HSET
$22
hash:article:by:100694
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100694
$7
content
$41
csdn/linux/1_1_1_6_1504264715.208629.html
*4
$4
HSET
$22
hash:article:by:100694
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100694
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100694
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100694
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100694
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100694
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100694
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100694
$10
createTime
$13
1315846857000
*4
$4
HSET
$22
hash:article:by:100694
$11
releaseTime
$13
1315846857000
*4
$4
HSET
$22
hash:article:by:100694
$10
updateTime
$13
1315846857000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100694
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100694
*3
$5
LPUSH
$15
list:article:id
$6
100694
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100694
*4
$4
HSET
$22
hash:article:by:100571
$2
id
$6
100571
*4
$4
HSET
$22
hash:article:by:100571
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100571
$9
articleId
$4
2401
*4
$4
HSET
$22
hash:article:by:100571
$5
title
$31
linux input 子系统分析 一
*4
$4
HSET
$22
hash:article:by:100571
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100571
$8
labelIds
$23
[530,21,191,531,75,532]
*4
$4
HSET
$22
hash:article:by:100571
$6
digest
$241
linux input子系统分析--概述与数据结构
        Input子系统处理输入事务，任何输入设备的驱动程序都可以通过Input输入子系统提供的接口注册到内核，利用子系统提供的功能来与用...
*4
$4
HSET
$22
hash:article:by:100571
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100571
$7
content
$41
csdn/linux/1_1_1_7_1504264713.119264.html
*4
$4
HSET
$22
hash:article:by:100571
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100571
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100571
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100571
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100571
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100571
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100571
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100571
$10
createTime
$13
1315846831000
*4
$4
HSET
$22
hash:article:by:100571
$11
releaseTime
$13
1315846831000
*4
$4
HSET
$22
hash:article:by:100571
$10
updateTime
$13
1315846831000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100571
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100571
*3
$5
LPUSH
$15
list:article:id
$6
100571
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100571
*4
$4
HSET
$22
hash:article:by:100632
$2
id
$6
100632
*4
$4
HSET
$22
hash:article:by:100632
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100632
$9
articleId
$4
2397
*4
$4
HSET
$22
hash:article:by:100632
$5
title
$26
mini2440驱动分析之LED
*4
$4
HSET
$22
hash:article:by:100632
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100632
$8
labelIds
$24
[210,585,586,191,587,75]
*4
$4
HSET
$22
hash:article:by:100632
$6
digest
$241
mini2440驱动分析之LED
        看LDD3有一段时间了，里面的例程也大部分实践了一下。现在进入真正的驱动程序学习。从友善之臂mini2440提供的驱动程序开始，把一些基本的驱动程序...
*4
$4
HSET
$22
hash:article:by:100632
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100632
$7
content
$41
csdn/linux/1_1_1_11_1504264709.82406.html
*4
$4
HSET
$22
hash:article:by:100632
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100632
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100632
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100632
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100632
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100632
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100632
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100632
$10
createTime
$13
1315497643000
*4
$4
HSET
$22
hash:article:by:100632
$11
releaseTime
$13
1315497643000
*4
$4
HSET
$22
hash:article:by:100632
$10
updateTime
$13
1315497643000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100632
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100632
*3
$5
LPUSH
$15
list:article:id
$6
100632
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100632
*4
$4
HSET
$22
hash:article:by:100572
$2
id
$6
100572
*4
$4
HSET
$22
hash:article:by:100572
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100572
$9
articleId
$4
2407
*4
$4
HSET
$22
hash:article:by:100572
$5
title
$29
linux MISC 驱动模型分析
*4
$4
HSET
$22
hash:article:by:100572
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100572
$8
labelIds
$23
[21,45,532,191,159,489]
*4
$4
HSET
$22
hash:article:by:100572
$6
digest
$211
linux MISC 驱动模型分析


        阅读led驱动程序的代码的时候，没有发现ldd3中提到的各种字符设备注册函数，而是发现了一个misc_register函数，这说明led设...
*4
$4
HSET
$22
hash:article:by:100572
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100572
$7
content
$42
csdn/linux/1_1_1_12_1504264717.279034.html
*4
$4
HSET
$22
hash:article:by:100572
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100572
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100572
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100572
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100572
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100572
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100572
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100572
$10
createTime
$13
1315494018000
*4
$4
HSET
$22
hash:article:by:100572
$11
releaseTime
$13
1315494018000
*4
$4
HSET
$22
hash:article:by:100572
$10
updateTime
$13
1315494018000
*4
$4
ZADD
$17
zset:article:read
$3
0.0
$6
100572
*4
$4
ZADD
$28
zset:article:category:read:4
$3
0.0
$6
100572
*3
$5
LPUSH
$15
list:article:id
$6
100572
*3
$5
LPUSH
$29
list:article:by:category:id:4
$6
100572
*3
$5
LPUSH
$19
list:top:article:id
$6
100031
*3
$5
LPUSH
$33
list:top:article:by:category:id:3
$6
100031
*3
$5
LPUSH
$19
list:top:article:id
$6
100032
*3
$5
LPUSH
$33
list:top:article:by:category:id:3
$6
100032
*3
$5
LPUSH
$19
list:top:article:id
$6
100033
*3
$5
LPUSH
$33
list:top:article:by:category:id:2
$6
100033
*3
$5
LPUSH
$19
list:top:article:id
$6
100034
*3
$5
LPUSH
$33
list:top:article:by:category:id:2
$6
100034
*4
$4
HSET
$17
hash:menCacheKeys
$7
article
$4
true
*4
$4
HSET
$25
hash:csdn:article:by:2019
$2
id
$4
2019
*4
$4
HSET
$25
hash:csdn:article:by:2019
$10
categroyId
$1
3
*4
$4
HSET
$25
hash:csdn:article:by:2019
$3
url
$57
http://blog.csdn.net/qq_35246620/article/details/77619106
*4
$4
HSET
$25
hash:csdn:article:by:2019
$5
title
$70
史上最简单的 MySQL 教程（三十二）「子查询（下）」
*4
$4
HSET
$25
hash:csdn:article:by:2019
$4
desc
$261
子查询子查询：sub query，查询是在某个查询结果之上进行的，一条select语句内部包含了另外一条select语句。行子查询行子查询，返回的结果可以使一行多列或者多行多列。需求：查询学生表中，年...
*4
$4
HSET
$25
hash:csdn:article:by:2019
$9
readCount
$3
135
*4
$4
HSET
$25
hash:csdn:article:by:2019
$14
articleContent
$41
csdn/mysql/17_0_1_0_1504235138.68905.html
*4
$4
HSET
$25
hash:csdn:article:by:2019
$4
date
$16
2017-08-27 11:00
*4
$4
HSET
$25
hash:csdn:article:by:2019
$6
author
$11
qq_35246620
*4
$4
HSET
$25
hash:csdn:article:by:2019
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2019
$9
labelList
$49
mysql,select,子查询,行子查询,表子查询,
*4
$4
HSET
$25
hash:csdn:article:by:2019
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2019
$10
authorLink
$30
http://my.csdn.net/qq_35246620
*4
$4
HSET
$25
hash:csdn:article:by:2019
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2020
$2
id
$4
2020
*4
$4
HSET
$25
hash:csdn:article:by:2020
$10
categroyId
$1
3
*4
$4
HSET
$25
hash:csdn:article:by:2020
$3
url
$57
http://blog.csdn.net/l1028386804/article/details/77745277
*4
$4
HSET
$25
hash:csdn:article:by:2020
$5
title
$62
MySQL之——表数据文件损坏导致数据库无法启动
*4
$4
HSET
$25
hash:csdn:article:by:2020
$4
desc
$115
一、问题日志

2017-08-31 14:18:05 4122 [Note] InnoDB: Database was not shutdown normally!
2017-08-31 14:18...
*4
$4
HSET
$25
hash:csdn:article:by:2020
$9
readCount
$2
41
*4
$4
HSET
$25
hash:csdn:article:by:2020
$14
articleContent
$42
csdn/mysql/17_0_1_0_1504235155.096132.html
*4
$4
HSET
$25
hash:csdn:article:by:2020
$4
date
$16
2017-08-31 13:19
*4
$4
HSET
$25
hash:csdn:article:by:2020
$6
author
$11
l1028386804
*4
$4
HSET
$25
hash:csdn:article:by:2020
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2020
$9
labelList
$6
mysql,
*4
$4
HSET
$25
hash:csdn:article:by:2020
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2020
$10
authorLink
$30
http://my.csdn.net/l1028386804
*4
$4
HSET
$25
hash:csdn:article:by:2020
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2021
$2
id
$4
2021
*4
$4
HSET
$25
hash:csdn:article:by:2021
$10
categroyId
$1
7
*4
$4
HSET
$25
hash:csdn:article:by:2021
$3
url
$55
http://blog.csdn.net/dlf123321/article/details/53900378
*4
$4
HSET
$25
hash:csdn:article:by:2021
$5
title
$46
RedisCluser(v-3.2.0)与Tomcat7的Session整合
*4
$4
HSET
$25
hash:csdn:article:by:2021
$4
desc
$227
一般情况下,一个web系统的架构是类似这样的:
一个或多个nginx做负载均衡,后面连多个tomcat(或别的类型的web服务器)。
nginx做负载的时候,关于request的分流,至少就有两种策略...
*4
$4
HSET
$25
hash:csdn:article:by:2021
$9
readCount
$3
716
*4
$4
HSET
$25
hash:csdn:article:by:2021
$14
articleContent
$41
csdn/redis/1_0_1_0_1504263693.227526.html
*4
$4
HSET
$25
hash:csdn:article:by:2021
$4
date
$16
2016-12-27 23:39
*4
$4
HSET
$25
hash:csdn:article:by:2021
$6
author
$9
dlf123321
*4
$4
HSET
$25
hash:csdn:article:by:2021
$12
commentCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2021
$9
labelList
$29
RedisCluster,Tomcat7,Session,
*4
$4
HSET
$25
hash:csdn:article:by:2021
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2021
$10
authorLink
$28
http://my.csdn.net/dlf123321
*4
$4
HSET
$25
hash:csdn:article:by:2021
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2022
$2
id
$4
2022
*4
$4
HSET
$25
hash:csdn:article:by:2022
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2022
$3
url
$53
http://blog.csdn.net/gatieme/article/details/51005811
*4
$4
HSET
$25
hash:csdn:article:by:2022
$5
title
$75
进程间通信之-共享内存Shared Memory--linux内核剖析（十一）
*4
$4
HSET
$25
hash:csdn:article:by:2022
$4
desc
$283
共享内存共享内存是进程间通信中最简单的方式之一。共享内存是系统出于多个进程之间通讯的考虑，而预留的的一块内存区。共享内存允许两个或更多进程访问同一块内存，就如同 malloc() 函数向不同进程返回了...
*4
$4
HSET
$25
hash:csdn:article:by:2022
$9
readCount
$4
3937
*4
$4
HSET
$25
hash:csdn:article:by:2022
$14
articleContent
$41
csdn/linux/1_0_1_0_1504264159.265574.html
*4
$4
HSET
$25
hash:csdn:article:by:2022
$4
date
$16
2016-03-29 15:11
*4
$4
HSET
$25
hash:csdn:article:by:2022
$6
author
$7
gatieme
*4
$4
HSET
$25
hash:csdn:article:by:2022
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2022
$9
labelList
$35
函数,通信,内核,内存,malloc,
*4
$4
HSET
$25
hash:csdn:article:by:2022
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2022
$10
authorLink
$26
http://my.csdn.net/gatieme
*4
$4
HSET
$25
hash:csdn:article:by:2022
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2023
$2
id
$4
2023
*4
$4
HSET
$25
hash:csdn:article:by:2023
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2023
$3
url
$58
http://blog.csdn.net/zjf280441589/article/details/50863787
*4
$4
HSET
$25
hash:csdn:article:by:2023
$5
title
$21
Spring 实践 -拾遗
*4
$4
HSET
$25
hash:csdn:article:by:2023
$4
desc
$191
Spring 实践标签： Java与设计模式Junit集成前面多次用到@RunWith与@ContextConfiguration,在测试类添加这两个注解,程序就会自动加载Spring配置并初始化Sp...
*4
$4
HSET
$25
hash:csdn:article:by:2023
$9
readCount
$4
3946
*4
$4
HSET
$25
hash:csdn:article:by:2023
$14
articleContent
$40
csdn/java/1_0_2_0_1504264378.229469.html
*4
$4
HSET
$25
hash:csdn:article:by:2023
$4
date
$16
2016-03-12 08:52
*4
$4
HSET
$25
hash:csdn:article:by:2023
$6
author
$16
hanqing280441589
*4
$4
HSET
$25
hash:csdn:article:by:2023
$12
commentCount
$1
3
*4
$4
HSET
$25
hash:csdn:article:by:2023
$9
labelList
$31
spring,设计模式,java,junit,
*4
$4
HSET
$25
hash:csdn:article:by:2023
$9
likeCount
$1
3
*4
$4
HSET
$25
hash:csdn:article:by:2023
$10
authorLink
$35
http://my.csdn.net/hanqing280441589
*4
$4
HSET
$25
hash:csdn:article:by:2023
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2024
$2
id
$4
2024
*4
$4
HSET
$25
hash:csdn:article:by:2024
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2024
$3
url
$58
http://blog.csdn.net/zjf280441589/article/details/50816802
*4
$4
HSET
$25
hash:csdn:article:by:2024
$5
title
$18
Spring 实践 -AOP
*4
$4
HSET
$25
hash:csdn:article:by:2024
$4
desc
$205
Spring 实践标签： Java与设计模式AOP引介AOP(Aspect Oriented Programing)面向切面编程采用横向抽取机制,以取代传统的纵向继承体系的重复性代码(如性能监控/事务...
*4
$4
HSET
$25
hash:csdn:article:by:2024
$9
readCount
$4
4239
*4
$4
HSET
$25
hash:csdn:article:by:2024
$14
articleContent
$40
csdn/java/1_0_2_1_1504264379.277687.html
*4
$4
HSET
$25
hash:csdn:article:by:2024
$4
date
$16
2016-03-07 08:32
*4
$4
HSET
$25
hash:csdn:article:by:2024
$6
author
$16
hanqing280441589
*4
$4
HSET
$25
hash:csdn:article:by:2024
$12
commentCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2024
$9
labelList
$29
spring,设计模式,java,aop,
*4
$4
HSET
$25
hash:csdn:article:by:2024
$9
likeCount
$1
6
*4
$4
HSET
$25
hash:csdn:article:by:2024
$10
authorLink
$35
http://my.csdn.net/hanqing280441589
*4
$4
HSET
$25
hash:csdn:article:by:2024
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2025
$2
id
$4
2025
*4
$4
HSET
$25
hash:csdn:article:by:2025
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2025
$3
url
$58
http://blog.csdn.net/zjf280441589/article/details/50832416
*4
$4
HSET
$25
hash:csdn:article:by:2025
$5
title
$18
Spring 实践 -IoC
*4
$4
HSET
$25
hash:csdn:article:by:2025
$4
desc
$159
Spring 实践标签： Java与设计模式Spring简介
  Spring是分层的JavaSE/EE Full-Stack轻量级开源框架.以IoC(Inverse of Control 控制反转)...
*4
$4
HSET
$25
hash:csdn:article:by:2025
$9
readCount
$4
3794
*4
$4
HSET
$25
hash:csdn:article:by:2025
$14
articleContent
$40
csdn/java/1_0_2_2_1504264380.404581.html
*4
$4
HSET
$25
hash:csdn:article:by:2025
$4
date
$16
2016-03-09 07:43
*4
$4
HSET
$25
hash:csdn:article:by:2025
$6
author
$16
hanqing280441589
*4
$4
HSET
$25
hash:csdn:article:by:2025
$12
commentCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2025
$9
labelList
$36
spring,IoC,设计模式,工厂,java,
*4
$4
HSET
$25
hash:csdn:article:by:2025
$9
likeCount
$1
9
*4
$4
HSET
$25
hash:csdn:article:by:2025
$10
authorLink
$35
http://my.csdn.net/hanqing280441589
*4
$4
HSET
$25
hash:csdn:article:by:2025
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2026
$2
id
$4
2026
*4
$4
HSET
$25
hash:csdn:article:by:2026
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2026
$3
url
$57
http://blog.csdn.net/qq_21127151/article/details/77428631
*4
$4
HSET
$25
hash:csdn:article:by:2026
$5
title
$48
内核源码阅读（九）进程优先级处理
*4
$4
HSET
$25
hash:csdn:article:by:2026
$4
desc
$213
1.进程优先级内核表示 
进程的优先级的nice值在-20~+19之间。0~139表示内部优先级，0~99的范围专供实时进程使用。nice值在[-20,+19]映射到100~139之间。如下图所示。 ...
*4
$4
HSET
$25
hash:csdn:article:by:2026
$9
readCount
$3
169
*4
$4
HSET
$25
hash:csdn:article:by:2026
$14
articleContent
$41
csdn/linux/1_0_1_0_1504264380.637233.html
*4
$4
HSET
$25
hash:csdn:article:by:2026
$4
date
$16
2017-08-20 14:14
*4
$4
HSET
$25
hash:csdn:article:by:2026
$6
author
$11
qq_21127151
*4
$4
HSET
$25
hash:csdn:article:by:2026
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2026
$9
labelList
$14
内核,源码,
*4
$4
HSET
$25
hash:csdn:article:by:2026
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2026
$10
authorLink
$30
http://my.csdn.net/qq_21127151
*4
$4
HSET
$25
hash:csdn:article:by:2026
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2027
$2
id
$4
2027
*4
$4
HSET
$25
hash:csdn:article:by:2027
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2027
$3
url
$57
http://blog.csdn.net/qq_21127151/article/details/77427839
*4
$4
HSET
$25
hash:csdn:article:by:2027
$5
title
$51
内核源码阅读（八）进程调度器的实现
*4
$4
HSET
$25
hash:csdn:article:by:2027
$4
desc
$277
调度器的任务就是使程序之间共享CPU时间，创造并行执行的假象。其可分为两个方面：一是调度策略；二是上下文切换。 
1.总览一般原理：按所能分配的计算能力，向系统中每个进程提供最大的公正性。 
    ...
*4
$4
HSET
$25
hash:csdn:article:by:2027
$9
readCount
$3
165
*4
$4
HSET
$25
hash:csdn:article:by:2027
$14
articleContent
$41
csdn/linux/1_0_1_1_1504264381.617691.html
*4
$4
HSET
$25
hash:csdn:article:by:2027
$4
date
$16
2017-08-20 12:26
*4
$4
HSET
$25
hash:csdn:article:by:2027
$6
author
$11
qq_21127151
*4
$4
HSET
$25
hash:csdn:article:by:2027
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2027
$9
labelList
$20
内核,源码,linux,
*4
$4
HSET
$25
hash:csdn:article:by:2027
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2027
$10
authorLink
$30
http://my.csdn.net/qq_21127151
*4
$4
HSET
$25
hash:csdn:article:by:2027
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2028
$2
id
$4
2028
*4
$4
HSET
$25
hash:csdn:article:by:2028
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2028
$3
url
$56
http://blog.csdn.net/u013142781/article/details/75647501
*4
$4
HSET
$25
hash:csdn:article:by:2028
$5
title
$63
Java项目框架搭建系列（Java学习路线）-博客提纲
*4
$4
HSET
$25
hash:csdn:article:by:2028
$4
desc
$297
前言：已经毕业两年，真是时间飞逝。其实当你在一间公司工作一两年之后，公司用到的开发框架的基本使用你应该都会了。你会根据一个现有项目A复制一下搭建出另外一个类似框架的项目B，然后在项目B上进行业务逻辑开...
*4
$4
HSET
$25
hash:csdn:article:by:2028
$9
readCount
$4
1230
*4
$4
HSET
$25
hash:csdn:article:by:2028
$14
articleContent
$40
csdn/java/1_1_1_0_1504264382.322517.html
*4
$4
HSET
$25
hash:csdn:article:by:2028
$4
date
$16
2017-07-21 15:41
*4
$4
HSET
$25
hash:csdn:article:by:2028
$6
author
$10
u013142781
*4
$4
HSET
$25
hash:csdn:article:by:2028
$12
commentCount
$1
7
*4
$4
HSET
$25
hash:csdn:article:by:2028
$9
labelList
$32
java,框架,开发框架,博客,
*4
$4
HSET
$25
hash:csdn:article:by:2028
$9
likeCount
$1
8
*4
$4
HSET
$25
hash:csdn:article:by:2028
$10
authorLink
$29
http://my.csdn.net/u013142781
*4
$4
HSET
$25
hash:csdn:article:by:2028
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2029
$2
id
$4
2029
*4
$4
HSET
$25
hash:csdn:article:by:2029
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2029
$3
url
$57
http://blog.csdn.net/qq_21127151/article/details/77206118
*4
$4
HSET
$25
hash:csdn:article:by:2029
$5
title
$35
内核源码阅读（四）进程ID
*4
$4
HSET
$25
hash:csdn:article:by:2029
$4
desc
$215
1）进程ID 
        进程ID，简称PID，是进程在命名空间的唯一表示。 
        线程组ID：每个进程除了PID这个特征值外，还有线程组ID(TGID)，若没有使用线程，则PID和...
*4
$4
HSET
$25
hash:csdn:article:by:2029
$9
readCount
$3
263
*4
$4
HSET
$25
hash:csdn:article:by:2029
$14
articleContent
$41
csdn/linux/1_0_1_5_1504264382.642756.html
*4
$4
HSET
$25
hash:csdn:article:by:2029
$4
date
$16
2017-08-16 00:49
*4
$4
HSET
$25
hash:csdn:article:by:2029
$6
author
$11
qq_21127151
*4
$4
HSET
$25
hash:csdn:article:by:2029
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2029
$9
labelList
$29
session,内核,源码,进程,
*4
$4
HSET
$25
hash:csdn:article:by:2029
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2029
$10
authorLink
$30
http://my.csdn.net/qq_21127151
*4
$4
HSET
$25
hash:csdn:article:by:2029
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2030
$2
id
$4
2030
*4
$4
HSET
$25
hash:csdn:article:by:2030
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2030
$3
url
$56
http://blog.csdn.net/u013142781/article/details/50539574
*4
$4
HSET
$25
hash:csdn:article:by:2030
$5
title
$58
VMware Tools （ubuntu系统）安装详细过程与使用
*4
$4
HSET
$25
hash:csdn:article:by:2030
$4
desc
$235
前一段时间博主在VMware虚拟机上安装了Ubuntu系统，如果还没有安装的同学可以参考博主上一篇文章：VMware Ubuntu安装详细过程。猿友们都知道linux不太好用，如果你想将你主机Wind...
*4
$4
HSET
$25
hash:csdn:article:by:2030
$9
readCount
$5
19620
*4
$4
HSET
$25
hash:csdn:article:by:2030
$14
articleContent
$40
csdn/java/1_1_1_6_1504264383.275762.html
*4
$4
HSET
$25
hash:csdn:article:by:2030
$4
date
$16
2016-01-18 22:26
*4
$4
HSET
$25
hash:csdn:article:by:2030
$6
author
$10
u013142781
*4
$4
HSET
$25
hash:csdn:article:by:2030
$12
commentCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2030
$9
labelList
$35
ubuntu,vmware,vmwaretool,虚拟机,
*4
$4
HSET
$25
hash:csdn:article:by:2030
$9
likeCount
$2
13
*4
$4
HSET
$25
hash:csdn:article:by:2030
$10
authorLink
$29
http://my.csdn.net/u013142781
*4
$4
HSET
$25
hash:csdn:article:by:2030
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2031
$2
id
$4
2031
*4
$4
HSET
$25
hash:csdn:article:by:2031
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2031
$3
url
$57
http://blog.csdn.net/qq_21127151/article/details/77075312
*4
$4
HSET
$25
hash:csdn:article:by:2031
$5
title
$39
内核源码阅读（二）进程复制
*4
$4
HSET
$25
hash:csdn:article:by:2031
$4
desc
$239
进程复制
1.三种常见进程复制API:



1）fork()是一个重量级调用，因为它建立了一个父进程的完整副本，然后作为子进程执行。Linux后来采用了写时复制技术对其进行了优化。

...
*4
$4
HSET
$25
hash:csdn:article:by:2031
$9
readCount
$2
64
*4
$4
HSET
$25
hash:csdn:article:by:2031
$14
articleContent
$41
csdn/linux/1_0_1_7_1504264383.654236.html
*4
$4
HSET
$25
hash:csdn:article:by:2031
$4
date
$16
2017-08-11 00:08
*4
$4
HSET
$25
hash:csdn:article:by:2031
$6
author
$11
qq_21127151
*4
$4
HSET
$25
hash:csdn:article:by:2031
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2031
$9
labelList
$25
Linux源码,复制进程,
*4
$4
HSET
$25
hash:csdn:article:by:2031
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2031
$10
authorLink
$30
http://my.csdn.net/qq_21127151
*4
$4
HSET
$25
hash:csdn:article:by:2031
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2032
$2
id
$4
2032
*4
$4
HSET
$25
hash:csdn:article:by:2032
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2032
$3
url
$56
http://blog.csdn.net/u013142781/article/details/50316383
*4
$4
HSET
$25
hash:csdn:article:by:2032
$5
title
$32
Maven入门（含实例教程）
*4
$4
HSET
$25
hash:csdn:article:by:2032
$4
desc
$243
Maven这个个项目管理和构建自动化工具，越来越多的开发人员使用它来管理项目中的jar包。接下来小宝鸽，将从下面几个方向介绍maven：（1）Maven简单介绍 
（2）Maven安装与配置 
（3）...
*4
$4
HSET
$25
hash:csdn:article:by:2032
$9
readCount
$5
36163
*4
$4
HSET
$25
hash:csdn:article:by:2032
$14
articleContent
$41
csdn/java/1_1_1_14_1504264384.185583.html
*4
$4
HSET
$25
hash:csdn:article:by:2032
$4
date
$16
2015-12-15 15:41
*4
$4
HSET
$25
hash:csdn:article:by:2032
$6
author
$10
u013142781
*4
$4
HSET
$25
hash:csdn:article:by:2032
$12
commentCount
$1
8
*4
$4
HSET
$25
hash:csdn:article:by:2032
$9
labelList
$50
eclipse,maven,开发人员,项目管理,自动化,
*4
$4
HSET
$25
hash:csdn:article:by:2032
$9
likeCount
$2
41
*4
$4
HSET
$25
hash:csdn:article:by:2032
$10
authorLink
$29
http://my.csdn.net/u013142781
*4
$4
HSET
$25
hash:csdn:article:by:2032
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2033
$2
id
$4
2033
*4
$4
HSET
$25
hash:csdn:article:by:2033
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2033
$3
url
$57
http://blog.csdn.net/qq_21127151/article/details/77016503
*4
$4
HSET
$25
hash:csdn:article:by:2033
$5
title
$33
内核源码阅读（一）进程
*4
$4
HSET
$25
hash:csdn:article:by:2033
$4
desc
$279
1.进程分为实时进程和非实时进程。
        硬实时进程有严格的时间限制，某些任务必须在指定的时限内完成。软实时进程是硬实时进程的一种弱化形式。大多数进程没有特定时间约束的普通进程。CPU时间分...
*4
$4
HSET
$25
hash:csdn:article:by:2033
$9
readCount
$2
80
*4
$4
HSET
$25
hash:csdn:article:by:2033
$14
articleContent
$41
csdn/linux/1_0_1_8_1504264384.727372.html
*4
$4
HSET
$25
hash:csdn:article:by:2033
$4
date
$16
2017-08-09 20:51
*4
$4
HSET
$25
hash:csdn:article:by:2033
$6
author
$11
qq_21127151
*4
$4
HSET
$25
hash:csdn:article:by:2033
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2033
$9
labelList
$47
task_struct,资源限制机制,进程优先级,
*4
$4
HSET
$25
hash:csdn:article:by:2033
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2033
$10
authorLink
$30
http://my.csdn.net/qq_21127151
*4
$4
HSET
$25
hash:csdn:article:by:2033
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2034
$2
id
$4
2034
*4
$4
HSET
$25
hash:csdn:article:by:2034
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2034
$3
url
$56
http://blog.csdn.net/u013142781/article/details/50421904
*4
$4
HSET
$25
hash:csdn:article:by:2034
$5
title
$74
Spring中@Transactional事务回滚（含实例详细讲解，附源码）
*4
$4
HSET
$25
hash:csdn:article:by:2034
$4
desc
$247
一、使用场景举例在了解@Transactional怎么用之前我们必须要先知道@Transactional有什么用。下面举个栗子：比如一个部门里面有很多成员，这两者分别保存在部门表和成员表里面，在删除某...
*4
$4
HSET
$25
hash:csdn:article:by:2034
$9
readCount
$5
21990
*4
$4
HSET
$25
hash:csdn:article:by:2034
$14
articleContent
$41
csdn/java/1_1_1_15_1504264385.270197.html
*4
$4
HSET
$25
hash:csdn:article:by:2034
$4
date
$16
2015-12-28 22:17
*4
$4
HSET
$25
hash:csdn:article:by:2034
$6
author
$10
u013142781
*4
$4
HSET
$25
hash:csdn:article:by:2034
$12
commentCount
$1
3
*4
$4
HSET
$25
hash:csdn:article:by:2034
$9
labelList
$35
spring,事务,实例,源码,异常,
*4
$4
HSET
$25
hash:csdn:article:by:2034
$9
likeCount
$2
11
*4
$4
HSET
$25
hash:csdn:article:by:2034
$10
authorLink
$29
http://my.csdn.net/u013142781
*4
$4
HSET
$25
hash:csdn:article:by:2034
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2035
$2
id
$4
2035
*4
$4
HSET
$25
hash:csdn:article:by:2035
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2035
$3
url
$57
http://blog.csdn.net/qq_21127151/article/details/77172955
*4
$4
HSET
$25
hash:csdn:article:by:2035
$5
title
$69
内核源码阅读（三）进程命名空间和用户命名的实现
*4
$4
HSET
$25
hash:csdn:article:by:2035
$4
desc
$243
（1）进程的命名空间1.基本概念 
        传统上Linux及其衍生版的UNIX变体中，许多资源都是全局管理的。例如进程PID和用户的UID等全局ID。为了节约成本并且能够保证用户之间的权限不...
*4
$4
HSET
$25
hash:csdn:article:by:2035
$9
readCount
$3
252
*4
$4
HSET
$25
hash:csdn:article:by:2035
$14
articleContent
$41
csdn/linux/1_0_1_6_1504264385.799985.html
*4
$4
HSET
$25
hash:csdn:article:by:2035
$4
date
$16
2017-08-15 00:06
*4
$4
HSET
$25
hash:csdn:article:by:2035
$6
author
$11
qq_21127151
*4
$4
HSET
$25
hash:csdn:article:by:2035
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2035
$9
labelList
$20
源码,linux,内核,
*4
$4
HSET
$25
hash:csdn:article:by:2035
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2035
$10
authorLink
$30
http://my.csdn.net/qq_21127151
*4
$4
HSET
$25
hash:csdn:article:by:2035
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2036
$2
id
$4
2036
*4
$4
HSET
$25
hash:csdn:article:by:2036
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2036
$3
url
$56
http://blog.csdn.net/u013142781/article/details/50410243
*4
$4
HSET
$25
hash:csdn:article:by:2036
$5
title
$63
Maven+Mybatis+Spring+SpringMVC实现分页查询（附源码）
*4
$4
HSET
$25
hash:csdn:article:by:2036
$4
desc
$271
下面小宝鸽将分享一篇Mybatis分页功能的博文,下面将给出详细的步骤，跟着博主的节奏肯定能实现。另外最后还会附上整个工程的源码。如果是没有使用过maven的猿友可自行下载相关的jar包即可。一、项目...
*4
$4
HSET
$25
hash:csdn:article:by:2036
$9
readCount
$5
11144
*4
$4
HSET
$25
hash:csdn:article:by:2036
$14
articleContent
$41
csdn/java/1_1_1_16_1504264386.259112.html
*4
$4
HSET
$25
hash:csdn:article:by:2036
$4
date
$16
2015-12-26 21:18
*4
$4
HSET
$25
hash:csdn:article:by:2036
$6
author
$10
u013142781
*4
$4
HSET
$25
hash:csdn:article:by:2036
$12
commentCount
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2036
$9
labelList
$38
spring,mysql,spring mvc,mybatis,maven,
*4
$4
HSET
$25
hash:csdn:article:by:2036
$9
likeCount
$1
5
*4
$4
HSET
$25
hash:csdn:article:by:2036
$10
authorLink
$29
http://my.csdn.net/u013142781
*4
$4
HSET
$25
hash:csdn:article:by:2036
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2037
$2
id
$4
2037
*4
$4
HSET
$25
hash:csdn:article:by:2037
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2037
$3
url
$57
http://blog.csdn.net/qq_21127151/article/details/77348840
*4
$4
HSET
$25
hash:csdn:article:by:2037
$5
title
$63
内核源码阅读（七）新程序的启动与进程的退出
*4
$4
HSET
$25
hash:csdn:article:by:2037
$4
desc
$225
通过用新代码替换现存程序，即可启动新程序。在Linux下这是通过execve系统调用实现的。 
该系统调用的入口点是sys_execve函数，然后委托给do_execve函数。其原型如下:kernel...
*4
$4
HSET
$25
hash:csdn:article:by:2037
$9
readCount
$3
248
*4
$4
HSET
$25
hash:csdn:article:by:2037
$14
articleContent
$40
csdn/linux/1_0_1_2_1504264386.81561.html
*4
$4
HSET
$25
hash:csdn:article:by:2037
$4
date
$16
2017-08-18 00:48
*4
$4
HSET
$25
hash:csdn:article:by:2037
$6
author
$11
qq_21127151
*4
$4
HSET
$25
hash:csdn:article:by:2037
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2037
$9
labelList
$14
内核,源码,
*4
$4
HSET
$25
hash:csdn:article:by:2037
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2037
$10
authorLink
$30
http://my.csdn.net/qq_21127151
*4
$4
HSET
$25
hash:csdn:article:by:2037
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2038
$2
id
$4
2038
*4
$4
HSET
$25
hash:csdn:article:by:2038
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2038
$3
url
$56
http://blog.csdn.net/u013142781/article/details/50380920
*4
$4
HSET
$25
hash:csdn:article:by:2038
$5
title
$48
Spirng+SpringMVC+Maven+Mybatis+MySQL项目搭建
*4
$4
HSET
$25
hash:csdn:article:by:2038
$4
desc
$217
这篇文章主要讲解使用eclipse对Spirng+SpringMVC+Maven+Mybatis+MySQL项目搭建过程，包括里面步骤和里面的配置文件如何配置等等都会详细说明。如果还没有搭建好环境（主...
*4
$4
HSET
$25
hash:csdn:article:by:2038
$9
readCount
$5
17660
*4
$4
HSET
$25
hash:csdn:article:by:2038
$14
articleContent
$41
csdn/java/1_1_1_17_1504264387.248106.html
*4
$4
HSET
$25
hash:csdn:article:by:2038
$4
date
$16
2015-12-22 16:44
*4
$4
HSET
$25
hash:csdn:article:by:2038
$6
author
$10
u013142781
*4
$4
HSET
$25
hash:csdn:article:by:2038
$12
commentCount
$2
36
*4
$4
HSET
$25
hash:csdn:article:by:2038
$9
labelList
$38
mysql,spring mvc,mybatis,maven,spring,
*4
$4
HSET
$25
hash:csdn:article:by:2038
$9
likeCount
$2
44
*4
$4
HSET
$25
hash:csdn:article:by:2038
$10
authorLink
$29
http://my.csdn.net/u013142781
*4
$4
HSET
$25
hash:csdn:article:by:2038
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2039
$2
id
$4
2039
*4
$4
HSET
$25
hash:csdn:article:by:2039
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2039
$3
url
$57
http://blog.csdn.net/qq_21127151/article/details/77347158
*4
$4
HSET
$25
hash:csdn:article:by:2039
$5
title
$39
内核源码阅读（六）内核线程
*4
$4
HSET
$25
hash:csdn:article:by:2039
$4
desc
$291
内核线程 
内核线程是直接由内核本身启动的进程，也经常称之为守护进程。主要用于执行下列任务：
周期性地将修改的内存页与页来源块设备同步；
如果内存页很少使用，则写入交换区；
管理延时操作；
实现文件系...
*4
$4
HSET
$25
hash:csdn:article:by:2039
$9
readCount
$3
216
*4
$4
HSET
$25
hash:csdn:article:by:2039
$14
articleContent
$41
csdn/linux/1_0_1_3_1504264387.861542.html
*4
$4
HSET
$25
hash:csdn:article:by:2039
$4
date
$16
2017-08-18 00:19
*4
$4
HSET
$25
hash:csdn:article:by:2039
$6
author
$11
qq_21127151
*4
$4
HSET
$25
hash:csdn:article:by:2039
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2039
$9
labelList
$28
源码,阅读,内核,线程,
*4
$4
HSET
$25
hash:csdn:article:by:2039
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2039
$10
authorLink
$30
http://my.csdn.net/qq_21127151
*4
$4
HSET
$25
hash:csdn:article:by:2039
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2040
$2
id
$4
2040
*4
$4
HSET
$25
hash:csdn:article:by:2040
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2040
$3
url
$56
http://blog.csdn.net/u013142781/article/details/50529030
*4
$4
HSET
$25
hash:csdn:article:by:2040
$5
title
$31
VMware Ubuntu安装详细过程
*4
$4
HSET
$25
hash:csdn:article:by:2040
$4
desc
$283
不是每一个程序员都必须玩过linux，只是博主觉得现在的很多服务器都是linux系统的，而自己属于那种前端也搞，后台也搞，对框架搭建也感兴趣，但是很多生产上的框架和工具都是安装在服务器上的，而且有不少...
*4
$4
HSET
$25
hash:csdn:article:by:2040
$9
readCount
$5
62530
*4
$4
HSET
$25
hash:csdn:article:by:2040
$14
articleContent
$40
csdn/java/1_1_1_7_1504264388.317387.html
*4
$4
HSET
$25
hash:csdn:article:by:2040
$4
date
$16
2016-01-16 17:47
*4
$4
HSET
$25
hash:csdn:article:by:2040
$6
author
$10
u013142781
*4
$4
HSET
$25
hash:csdn:article:by:2040
$12
commentCount
$2
21
*4
$4
HSET
$25
hash:csdn:article:by:2040
$9
labelList
$27
ubuntu,vmware,安装教程,
*4
$4
HSET
$25
hash:csdn:article:by:2040
$9
likeCount
$2
43
*4
$4
HSET
$25
hash:csdn:article:by:2040
$10
authorLink
$29
http://my.csdn.net/u013142781
*4
$4
HSET
$25
hash:csdn:article:by:2040
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2041
$2
id
$4
2041
*4
$4
HSET
$25
hash:csdn:article:by:2041
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2041
$3
url
$57
http://blog.csdn.net/qq_21127151/article/details/77284683
*4
$4
HSET
$25
hash:csdn:article:by:2041
$5
title
$35
内核源码阅读（五）进程ID
*4
$4
HSET
$25
hash:csdn:article:by:2041
$4
desc
$281
接着上一节我们继续学习进程ID。 
在上一节中我们提到了node是一个散列表元素，对于这个散列表并未做过多解释，在这里我们给出更加详细的描述。这个散列表是为了在给定的命名空间中查找对应与指定PID数值...
*4
$4
HSET
$25
hash:csdn:article:by:2041
$9
readCount
$3
318
*4
$4
HSET
$25
hash:csdn:article:by:2041
$14
articleContent
$41
csdn/linux/1_0_1_4_1504264388.683879.html
*4
$4
HSET
$25
hash:csdn:article:by:2041
$4
date
$16
2017-08-17 00:45
*4
$4
HSET
$25
hash:csdn:article:by:2041
$6
author
$11
qq_21127151
*4
$4
HSET
$25
hash:csdn:article:by:2041
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2041
$9
labelList
$27
源码,内核,数据结构,
*4
$4
HSET
$25
hash:csdn:article:by:2041
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2041
$10
authorLink
$30
http://my.csdn.net/qq_21127151
*4
$4
HSET
$25
hash:csdn:article:by:2041
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2042
$2
id
$4
2042
*4
$4
HSET
$25
hash:csdn:article:by:2042
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2042
$3
url
$56
http://blog.csdn.net/u013142781/article/details/50487028
*4
$4
HSET
$25
hash:csdn:article:by:2042
$5
title
$71
RabbitMQ消息队列入门篇（环境配置+Java实例+基础概念）
*4
$4
HSET
$25
hash:csdn:article:by:2042
$4
desc
$303
一、消息队列使用场景或者其好处消息队列一般是在项目中，将一些无需即时返回且耗时的操作提取出来，进行了异步处理，而这种异步处理的方式大大的节省了服务器的请求响应时间，从而提高了系统的吞吐量。在项目启动之...
*4
$4
HSET
$25
hash:csdn:article:by:2042
$9
readCount
$5
13748
*4
$4
HSET
$25
hash:csdn:article:by:2042
$14
articleContent
$41
csdn/java/1_1_1_10_1504264389.339141.html
*4
$4
HSET
$25
hash:csdn:article:by:2042
$4
date
$16
2016-01-09 10:23
*4
$4
HSET
$25
hash:csdn:article:by:2042
$6
author
$10
u013142781
*4
$4
HSET
$25
hash:csdn:article:by:2042
$12
commentCount
$1
9
*4
$4
HSET
$25
hash:csdn:article:by:2042
$9
labelList
$39
java,rabbitmq,消息队列,AMQP,Erlang,
*4
$4
HSET
$25
hash:csdn:article:by:2042
$9
likeCount
$2
26
*4
$4
HSET
$25
hash:csdn:article:by:2042
$10
authorLink
$29
http://my.csdn.net/u013142781
*4
$4
HSET
$25
hash:csdn:article:by:2042
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2043
$2
id
$4
2043
*4
$4
HSET
$25
hash:csdn:article:by:2043
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2043
$3
url
$56
http://blog.csdn.net/u013142781/article/details/50387583
*4
$4
HSET
$25
hash:csdn:article:by:2043
$5
title
$47
Dubbo分布式服务框架入门（附工程）
*4
$4
HSET
$25
hash:csdn:article:by:2043
$4
desc
$148
本文介绍了dubbo的一些概念，并对zookeeper、dubbo-admin、提供者、消费者的搭建进行了详细的讲解，且附有工程源码
*4
$4
HSET
$25
hash:csdn:article:by:2043
$9
readCount
$5
18404
*4
$4
HSET
$25
hash:csdn:article:by:2043
$14
articleContent
$41
csdn/java/1_1_1_12_1504264390.329236.html
*4
$4
HSET
$25
hash:csdn:article:by:2043
$4
date
$16
2015-12-23 15:49
*4
$4
HSET
$25
hash:csdn:article:by:2043
$6
author
$10
u013142781
*4
$4
HSET
$25
hash:csdn:article:by:2043
$12
commentCount
$2
19
*4
$4
HSET
$25
hash:csdn:article:by:2043
$9
labelList
$23
dubbo,框架,分布式,
*4
$4
HSET
$25
hash:csdn:article:by:2043
$9
likeCount
$2
10
*4
$4
HSET
$25
hash:csdn:article:by:2043
$10
authorLink
$29
http://my.csdn.net/u013142781
*4
$4
HSET
$25
hash:csdn:article:by:2043
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2044
$2
id
$4
2044
*4
$4
HSET
$25
hash:csdn:article:by:2044
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2044
$3
url
$56
http://blog.csdn.net/u013142781/article/details/50388204
*4
$4
HSET
$25
hash:csdn:article:by:2044
$5
title
$43
mybaits入门（含实例教程和源码）
*4
$4
HSET
$25
hash:csdn:article:by:2044
$4
desc
$247
前言：mybatis是一个非常优秀的存储过程和高级映射的优秀持久层框架。大大简化了，数据库操作中的常用操作。下面将介绍mybatis的一些概念和在eclipse上的实际项目搭建使用。一、mybatis...
*4
$4
HSET
$25
hash:csdn:article:by:2044
$9
readCount
$5
11718
*4
$4
HSET
$25
hash:csdn:article:by:2044
$14
articleContent
$41
csdn/java/1_1_1_13_1504264391.362608.html
*4
$4
HSET
$25
hash:csdn:article:by:2044
$4
date
$16
2015-12-23 16:47
*4
$4
HSET
$25
hash:csdn:article:by:2044
$6
author
$10
u013142781
*4
$4
HSET
$25
hash:csdn:article:by:2044
$12
commentCount
$1
3
*4
$4
HSET
$25
hash:csdn:article:by:2044
$9
labelList
$43
mybatis,ibatis,持久层框架,存储,jdbc,
*4
$4
HSET
$25
hash:csdn:article:by:2044
$9
likeCount
$1
7
*4
$4
HSET
$25
hash:csdn:article:by:2044
$10
authorLink
$29
http://my.csdn.net/u013142781
*4
$4
HSET
$25
hash:csdn:article:by:2044
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2045
$2
id
$4
2045
*4
$4
HSET
$25
hash:csdn:article:by:2045
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2045
$3
url
$56
http://blog.csdn.net/u013142781/article/details/50395650
*4
$4
HSET
$25
hash:csdn:article:by:2045
$5
title
$30
Zookeeper注册中心的搭建
*4
$4
HSET
$25
hash:csdn:article:by:2045
$4
desc
$239
Zookeeper是一个分布式的，开放源码的分布式应用程序协调服务，是Google的Chubby一个开源的实现，是Hadoop和Hbase的重要组件。它是一个为分布式应用提供一致性服务的软件，提供的功...
*4
$4
HSET
$25
hash:csdn:article:by:2045
$9
readCount
$5
16556
*4
$4
HSET
$25
hash:csdn:article:by:2045
$14
articleContent
$41
csdn/java/1_1_1_11_1504264392.448564.html
*4
$4
HSET
$25
hash:csdn:article:by:2045
$4
date
$16
2015-12-24 17:04
*4
$4
HSET
$25
hash:csdn:article:by:2045
$6
author
$10
u013142781
*4
$4
HSET
$25
hash:csdn:article:by:2045
$12
commentCount
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2045
$9
labelList
$42
zookeeper,分布式应用,分布式,dubbo,
*4
$4
HSET
$25
hash:csdn:article:by:2045
$9
likeCount
$2
18
*4
$4
HSET
$25
hash:csdn:article:by:2045
$10
authorLink
$29
http://my.csdn.net/u013142781
*4
$4
HSET
$25
hash:csdn:article:by:2045
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2046
$2
id
$4
2046
*4
$4
HSET
$25
hash:csdn:article:by:2046
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2046
$3
url
$56
http://blog.csdn.net/u013142781/article/details/50515320
*4
$4
HSET
$25
hash:csdn:article:by:2046
$5
title
$70
Redis+Spring缓存实例（windows环境，附实例源码及详解）
*4
$4
HSET
$25
hash:csdn:article:by:2046
$4
desc
$187
一、Redis了解1.1、Redis介绍：redis是一个key-value存储系统。和Memcached类似，它支持存储的value类型相对更多，包括string(字符串)、list(链表)、set...
*4
$4
HSET
$25
hash:csdn:article:by:2046
$9
readCount
$4
7364
*4
$4
HSET
$25
hash:csdn:article:by:2046
$14
articleContent
$40
csdn/java/1_1_1_8_1504264393.335841.html
*4
$4
HSET
$25
hash:csdn:article:by:2046
$4
date
$16
2016-01-14 10:12
*4
$4
HSET
$25
hash:csdn:article:by:2046
$6
author
$10
u013142781
*4
$4
HSET
$25
hash:csdn:article:by:2046
$12
commentCount
$2
10
*4
$4
HSET
$25
hash:csdn:article:by:2046
$9
labelList
$21
spring,redis,windows,
*4
$4
HSET
$25
hash:csdn:article:by:2046
$9
likeCount
$2
13
*4
$4
HSET
$25
hash:csdn:article:by:2046
$10
authorLink
$29
http://my.csdn.net/u013142781
*4
$4
HSET
$25
hash:csdn:article:by:2046
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2047
$2
id
$4
2047
*4
$4
HSET
$25
hash:csdn:article:by:2047
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2047
$3
url
$56
http://blog.csdn.net/u013142781/article/details/50507607
*4
$4
HSET
$25
hash:csdn:article:by:2047
$5
title
$57
Spring+EhCache缓存实例（详细讲解+源码下载）
*4
$4
HSET
$25
hash:csdn:article:by:2047
$4
desc
$201
一、ehcahe的介绍EhCache 是一个纯Java的进程内缓存框架，具有快速、精干等特点，是Hibernate中默认的CacheProvider。Ehcache是一种广泛使用的开源Java分布式缓...
*4
$4
HSET
$25
hash:csdn:article:by:2047
$9
readCount
$4
5172
*4
$4
HSET
$25
hash:csdn:article:by:2047
$14
articleContent
$40
csdn/java/1_1_1_9_1504264394.387904.html
*4
$4
HSET
$25
hash:csdn:article:by:2047
$4
date
$16
2016-01-12 23:56
*4
$4
HSET
$25
hash:csdn:article:by:2047
$6
author
$10
u013142781
*4
$4
HSET
$25
hash:csdn:article:by:2047
$12
commentCount
$1
5
*4
$4
HSET
$25
hash:csdn:article:by:2047
$9
labelList
$20
spring,ehcache,java,
*4
$4
HSET
$25
hash:csdn:article:by:2047
$9
likeCount
$1
7
*4
$4
HSET
$25
hash:csdn:article:by:2047
$10
authorLink
$29
http://my.csdn.net/u013142781
*4
$4
HSET
$25
hash:csdn:article:by:2047
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2048
$2
id
$4
2048
*4
$4
HSET
$25
hash:csdn:article:by:2048
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2048
$3
url
$56
http://blog.csdn.net/u013142781/article/details/51307229
*4
$4
HSET
$25
hash:csdn:article:by:2048
$5
title
$31
到底什么是集群&分布式
*4
$4
HSET
$25
hash:csdn:article:by:2048
$4
desc
$303
对于楼主这样工作一年的菜鸟，是不是会看到一些文章标题带有“分布式”“集群”关键字，然后就觉得自己应该看不懂（如下图）。最近对这些概念进行了一定的了解，整理了一下思路，在这里分享给各位猿友。不足之处还望...
*4
$4
HSET
$25
hash:csdn:article:by:2048
$9
readCount
$5
14183
*4
$4
HSET
$25
hash:csdn:article:by:2048
$14
articleContent
$40
csdn/java/1_1_1_1_1504264395.253414.html
*4
$4
HSET
$25
hash:csdn:article:by:2048
$4
date
$16
2016-05-03 19:49
*4
$4
HSET
$25
hash:csdn:article:by:2048
$6
author
$10
u013142781
*4
$4
HSET
$25
hash:csdn:article:by:2048
$12
commentCount
$1
3
*4
$4
HSET
$25
hash:csdn:article:by:2048
$9
labelList
$17
分布式,集群,
*4
$4
HSET
$25
hash:csdn:article:by:2048
$9
likeCount
$1
8
*4
$4
HSET
$25
hash:csdn:article:by:2048
$10
authorLink
$29
http://my.csdn.net/u013142781
*4
$4
HSET
$25
hash:csdn:article:by:2048
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2049
$2
id
$4
2049
*4
$4
HSET
$25
hash:csdn:article:by:2049
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2049
$3
url
$56
http://blog.csdn.net/u013142781/article/details/50922010
*4
$4
HSET
$25
hash:csdn:article:by:2049
$5
title
$41
Java Web前端到后台常用框架介绍
*4
$4
HSET
$25
hash:csdn:article:by:2049
$4
desc
$127
一、SpringMVChttp://blog.csdn.net/evankaka/article/details/45501811Spring Web MVC是一种基于Java的实现了Web MVC设...
*4
$4
HSET
$25
hash:csdn:article:by:2049
$9
readCount
$5
15083
*4
$4
HSET
$25
hash:csdn:article:by:2049
$14
articleContent
$40
csdn/java/1_1_1_2_1504264396.341853.html
*4
$4
HSET
$25
hash:csdn:article:by:2049
$4
date
$16
2016-03-18 11:44
*4
$4
HSET
$25
hash:csdn:article:by:2049
$6
author
$10
u013142781
*4
$4
HSET
$25
hash:csdn:article:by:2049
$12
commentCount
$1
3
*4
$4
HSET
$25
hash:csdn:article:by:2049
$9
labelList
$21
框架,java,java web,
*4
$4
HSET
$25
hash:csdn:article:by:2049
$9
likeCount
$2
26
*4
$4
HSET
$25
hash:csdn:article:by:2049
$10
authorLink
$29
http://my.csdn.net/u013142781
*4
$4
HSET
$25
hash:csdn:article:by:2049
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2050
$2
id
$4
2050
*4
$4
HSET
$25
hash:csdn:article:by:2050
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2050
$3
url
$56
http://blog.csdn.net/u013142781/article/details/50631663
*4
$4
HSET
$25
hash:csdn:article:by:2050
$5
title
$36
Spring Security安全框架入门篇
*4
$4
HSET
$25
hash:csdn:article:by:2050
$4
desc
$193
一、Spring Security相关概念1.1.、Spring Security介绍：Spring Security是一个能够为基于Spring的企业应用系统提供声明式的安全访问控制解决方案的安全框...
*4
$4
HSET
$25
hash:csdn:article:by:2050
$9
readCount
$4
4681
*4
$4
HSET
$25
hash:csdn:article:by:2050
$14
articleContent
$40
csdn/java/1_1_1_3_1504264397.420073.html
*4
$4
HSET
$25
hash:csdn:article:by:2050
$4
date
$16
2016-02-04 00:02
*4
$4
HSET
$25
hash:csdn:article:by:2050
$6
author
$10
u013142781
*4
$4
HSET
$25
hash:csdn:article:by:2050
$12
commentCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2050
$9
labelList
$30
spring security,安全,框架,
*4
$4
HSET
$25
hash:csdn:article:by:2050
$9
likeCount
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2050
$10
authorLink
$29
http://my.csdn.net/u013142781
*4
$4
HSET
$25
hash:csdn:article:by:2050
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2051
$2
id
$4
2051
*4
$4
HSET
$25
hash:csdn:article:by:2051
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2051
$3
url
$56
http://blog.csdn.net/u013142781/article/details/50629708
*4
$4
HSET
$25
hash:csdn:article:by:2051
$5
title
$65
Shiro安全框架入门篇（登录验证实例详解与源码）
*4
$4
HSET
$25
hash:csdn:article:by:2051
$4
desc
$227
一、Shiro框架简单介绍Apache Shiro是Java的一个安全框架，旨在简化身份验证和授权。Shiro在JavaSE和JavaEE项目中都可以使用。它主要用来处理身份认证，授权，企业会话管理和...
*4
$4
HSET
$25
hash:csdn:article:by:2051
$9
readCount
$5
38034
*4
$4
HSET
$25
hash:csdn:article:by:2051
$14
articleContent
$40
csdn/java/1_1_1_4_1504264398.304014.html
*4
$4
HSET
$25
hash:csdn:article:by:2051
$4
date
$16
2016-02-03 15:23
*4
$4
HSET
$25
hash:csdn:article:by:2051
$6
author
$10
u013142781
*4
$4
HSET
$25
hash:csdn:article:by:2051
$12
commentCount
$2
15
*4
$4
HSET
$25
hash:csdn:article:by:2051
$9
labelList
$25
shiro,框架,安全,java,
*4
$4
HSET
$25
hash:csdn:article:by:2051
$9
likeCount
$2
13
*4
$4
HSET
$25
hash:csdn:article:by:2051
$10
authorLink
$29
http://my.csdn.net/u013142781
*4
$4
HSET
$25
hash:csdn:article:by:2051
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2052
$2
id
$4
2052
*4
$4
HSET
$25
hash:csdn:article:by:2052
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2052
$3
url
$56
http://blog.csdn.net/u013142781/article/details/50545522
*4
$4
HSET
$25
hash:csdn:article:by:2052
$5
title
$33
程序员一年工作经验之谈
*4
$4
HSET
$25
hash:csdn:article:by:2052
$4
desc
$287
将本篇文章放到专栏 Java后台框架系列 里面也是实属无奈，只是为了能分享给更多的猿友，望谅解。今晚本来想写一篇技术博客，由于素材还没有准备好，又刚好写完公司年终总结，博主是15届本科毕业生，加上实习...
*4
$4
HSET
$25
hash:csdn:article:by:2052
$9
readCount
$4
6944
*4
$4
HSET
$25
hash:csdn:article:by:2052
$14
articleContent
$40
csdn/java/1_1_1_5_1504264399.473761.html
*4
$4
HSET
$25
hash:csdn:article:by:2052
$4
date
$16
2016-01-19 23:18
*4
$4
HSET
$25
hash:csdn:article:by:2052
$6
author
$10
u013142781
*4
$4
HSET
$25
hash:csdn:article:by:2052
$12
commentCount
$2
23
*4
$4
HSET
$25
hash:csdn:article:by:2052
$9
labelList
$29
java,工作,经验,程序员,
*4
$4
HSET
$25
hash:csdn:article:by:2052
$9
likeCount
$2
43
*4
$4
HSET
$25
hash:csdn:article:by:2052
$10
authorLink
$29
http://my.csdn.net/u013142781
*4
$4
HSET
$25
hash:csdn:article:by:2052
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2053
$2
id
$4
2053
*4
$4
HSET
$25
hash:csdn:article:by:2053
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2053
$3
url
$58
http://blog.csdn.net/zjf280441589/article/details/56669806
*4
$4
HSET
$25
hash:csdn:article:by:2053
$5
title
$15
迭代器模式
*4
$4
HSET
$25
hash:csdn:article:by:2053
$4
desc
$181
迭代器模式: 提供一种方法顺序访问聚合对象(如List、Set)内的每个元素, 而又不暴露聚合对象的内部实现. 
   
- 可复用面向对象软件的基础
*4
$4
HSET
$25
hash:csdn:article:by:2053
$9
readCount
$4
2325
*4
$4
HSET
$25
hash:csdn:article:by:2053
$14
articleContent
$40
csdn/java/1_0_1_0_1504264402.417503.html
*4
$4
HSET
$25
hash:csdn:article:by:2053
$4
date
$16
2017-02-23 13:20
*4
$4
HSET
$25
hash:csdn:article:by:2053
$6
author
$16
hanqing280441589
*4
$4
HSET
$25
hash:csdn:article:by:2053
$12
commentCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2053
$9
labelList
$44
迭代器,设计模式,封装,聚合,访问,
*4
$4
HSET
$25
hash:csdn:article:by:2053
$9
likeCount
$1
3
*4
$4
HSET
$25
hash:csdn:article:by:2053
$10
authorLink
$35
http://my.csdn.net/hanqing280441589
*4
$4
HSET
$25
hash:csdn:article:by:2053
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2054
$2
id
$4
2054
*4
$4
HSET
$25
hash:csdn:article:by:2054
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2054
$3
url
$58
http://blog.csdn.net/zjf280441589/article/details/52484327
*4
$4
HSET
$25
hash:csdn:article:by:2054
$5
title
$15
观察者模式
*4
$4
HSET
$25
hash:csdn:article:by:2054
$4
desc
$235
观察者模式标签 ： Java与设计模式
  观察者模式: 又称‘发布-订阅’模式, 定义一种对象间的一对多依赖关系(多个观察者Observer监听某一主题Subject). 当主题状态发生改变时,所有...
*4
$4
HSET
$25
hash:csdn:article:by:2054
$9
readCount
$4
2949
*4
$4
HSET
$25
hash:csdn:article:by:2054
$14
articleContent
$40
csdn/java/1_0_1_8_1504264403.443837.html
*4
$4
HSET
$25
hash:csdn:article:by:2054
$4
date
$16
2016-09-09 09:48
*4
$4
HSET
$25
hash:csdn:article:by:2054
$6
author
$16
hanqing280441589
*4
$4
HSET
$25
hash:csdn:article:by:2054
$12
commentCount
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2054
$9
labelList
$51
观察者,EventBus,Disruptor,Observer,触发联动,
*4
$4
HSET
$25
hash:csdn:article:by:2054
$9
likeCount
$1
3
*4
$4
HSET
$25
hash:csdn:article:by:2054
$10
authorLink
$35
http://my.csdn.net/hanqing280441589
*4
$4
HSET
$25
hash:csdn:article:by:2054
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2055
$2
id
$4
2055
*4
$4
HSET
$25
hash:csdn:article:by:2055
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2055
$3
url
$58
http://blog.csdn.net/zjf280441589/article/details/50364975
*4
$4
HSET
$25
hash:csdn:article:by:2055
$5
title
$15
建造者模式
*4
$4
HSET
$25
hash:csdn:article:by:2055
$4
desc
$285
建造者模式: 又称生成器模式, 可以将一个产品的内部表象与产品的生成过程分割开来, 从而可以使一个建造过程生成具有不同的内部表象的产品(将一个复杂对象的构建与它的表示分离, 使得同样的构建过程可以创建...
*4
$4
HSET
$25
hash:csdn:article:by:2055
$9
readCount
$4
1770
*4
$4
HSET
$25
hash:csdn:article:by:2055
$14
articleContent
$41
csdn/java/1_0_1_16_1504264404.533823.html
*4
$4
HSET
$25
hash:csdn:article:by:2055
$4
date
$16
2015-12-20 17:43
*4
$4
HSET
$25
hash:csdn:article:by:2055
$6
author
$16
hanqing280441589
*4
$4
HSET
$25
hash:csdn:article:by:2055
$12
commentCount
$1
8
*4
$4
HSET
$25
hash:csdn:article:by:2055
$9
labelList
$54
设计模式,建造者,Java,复杂对象,过程稳定,
*4
$4
HSET
$25
hash:csdn:article:by:2055
$9
likeCount
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2055
$10
authorLink
$35
http://my.csdn.net/hanqing280441589
*4
$4
HSET
$25
hash:csdn:article:by:2055
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2056
$2
id
$4
2056
*4
$4
HSET
$25
hash:csdn:article:by:2056
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2056
$3
url
$58
http://blog.csdn.net/zjf280441589/article/details/50364943
*4
$4
HSET
$25
hash:csdn:article:by:2056
$5
title
$12
原型模式
*4
$4
HSET
$25
hash:csdn:article:by:2056
$4
desc
$267
原型模式标签： Java与设计模式
  原型模式 
  用原型实例指定创建对象的种类, 并通过拷贝这些原型创建新的对象.
原型模式就是通过一个对象再创建另一个可定制的对象, 而且不需要知道任何创建的细...
*4
$4
HSET
$25
hash:csdn:article:by:2056
$9
readCount
$4
1569
*4
$4
HSET
$25
hash:csdn:article:by:2056
$14
articleContent
$41
csdn/java/1_0_1_17_1504264405.610795.html
*4
$4
HSET
$25
hash:csdn:article:by:2056
$4
date
$16
2015-12-20 17:38
*4
$4
HSET
$25
hash:csdn:article:by:2056
$6
author
$16
hanqing280441589
*4
$4
HSET
$25
hash:csdn:article:by:2056
$12
commentCount
$1
3
*4
$4
HSET
$25
hash:csdn:article:by:2056
$9
labelList
$48
设计模式,java,原型模式,实例,创建型,
*4
$4
HSET
$25
hash:csdn:article:by:2056
$9
likeCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2056
$10
authorLink
$35
http://my.csdn.net/hanqing280441589
*4
$4
HSET
$25
hash:csdn:article:by:2056
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2057
$2
id
$4
2057
*4
$4
HSET
$25
hash:csdn:article:by:2057
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2057
$3
url
$58
http://blog.csdn.net/zjf280441589/article/details/50282773
*4
$4
HSET
$25
hash:csdn:article:by:2057
$5
title
$12
工厂模式
*4
$4
HSET
$25
hash:csdn:article:by:2057
$4
desc
$243
工厂模式标签： Java与设计模式
  工厂模式 
  用工厂方法代替了new操作, 将选择实现类, 创建对象统一管理和控制.从而将调用者(Client)与实现类进行解耦.实现了创建者与调用者分离;使...
*4
$4
HSET
$25
hash:csdn:article:by:2057
$9
readCount
$4
2796
*4
$4
HSET
$25
hash:csdn:article:by:2057
$14
articleContent
$41
csdn/java/1_0_1_18_1504264406.537905.html
*4
$4
HSET
$25
hash:csdn:article:by:2057
$4
date
$16
2015-12-13 14:15
*4
$4
HSET
$25
hash:csdn:article:by:2057
$6
author
$16
hanqing280441589
*4
$4
HSET
$25
hash:csdn:article:by:2057
$12
commentCount
$1
9
*4
$4
HSET
$25
hash:csdn:article:by:2057
$9
labelList
$44
工厂模式,java,设计模式,创建模式,
*4
$4
HSET
$25
hash:csdn:article:by:2057
$9
likeCount
$1
9
*4
$4
HSET
$25
hash:csdn:article:by:2057
$10
authorLink
$35
http://my.csdn.net/hanqing280441589
*4
$4
HSET
$25
hash:csdn:article:by:2057
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2058
$2
id
$4
2058
*4
$4
HSET
$25
hash:csdn:article:by:2058
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2058
$3
url
$58
http://blog.csdn.net/zjf280441589/article/details/50235937
*4
$4
HSET
$25
hash:csdn:article:by:2058
$5
title
$12
单例模式
*4
$4
HSET
$25
hash:csdn:article:by:2058
$4
desc
$211
static, enum, 内部类与单例模式标签： Java与设计模式Java static与初始化块拾忆
  static关键字的作用是把类的成员变成类相关,而不是实例相关.普通初始化块
  当Ja...
*4
$4
HSET
$25
hash:csdn:article:by:2058
$9
readCount
$4
3519
*4
$4
HSET
$25
hash:csdn:article:by:2058
$14
articleContent
$41
csdn/java/1_0_1_19_1504264407.594785.html
*4
$4
HSET
$25
hash:csdn:article:by:2058
$4
date
$16
2015-12-09 14:26
*4
$4
HSET
$25
hash:csdn:article:by:2058
$6
author
$16
hanqing280441589
*4
$4
HSET
$25
hash:csdn:article:by:2058
$12
commentCount
$1
5
*4
$4
HSET
$25
hash:csdn:article:by:2058
$9
labelList
$30
java,设计模式,enum,单例,
*4
$4
HSET
$25
hash:csdn:article:by:2058
$9
likeCount
$2
12
*4
$4
HSET
$25
hash:csdn:article:by:2058
$10
authorLink
$35
http://my.csdn.net/hanqing280441589
*4
$4
HSET
$25
hash:csdn:article:by:2058
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2059
$2
id
$4
2059
*4
$4
HSET
$25
hash:csdn:article:by:2059
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2059
$3
url
$58
http://blog.csdn.net/yuzhihui_no1/article/details/42386915
*4
$4
HSET
$25
hash:csdn:article:by:2059
$5
title
$27
x86架构中的保护模式
*4
$4
HSET
$25
hash:csdn:article:by:2059
$4
desc
$283
在x86架构中所谓保护模式其实就是段的存储方式能够达到一种保护机制。也正因为有了保护模式（段的存储方式）所以才会有特权模式，以及后面的多任务之说；
        在实模式下段的存储很简单，就是代表一...
*4
$4
HSET
$25
hash:csdn:article:by:2059
$9
readCount
$4
1303
*4
$4
HSET
$25
hash:csdn:article:by:2059
$14
articleContent
$41
csdn/linux/1_0_2_0_1504264408.060921.html
*4
$4
HSET
$25
hash:csdn:article:by:2059
$4
date
$16
2015-01-04 09:38
*4
$4
HSET
$25
hash:csdn:article:by:2059
$6
author
$12
YuZhiHui_No1
*4
$4
HSET
$25
hash:csdn:article:by:2059
$12
commentCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2059
$9
labelList
$36
操作系统,汇编语言,x86汇编,
*4
$4
HSET
$25
hash:csdn:article:by:2059
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2059
$10
authorLink
$31
http://my.csdn.net/YuZhiHui_No1
*4
$4
HSET
$25
hash:csdn:article:by:2059
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2060
$2
id
$4
2060
*4
$4
HSET
$25
hash:csdn:article:by:2060
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2060
$3
url
$58
http://blog.csdn.net/zjf280441589/article/details/52420929
*4
$4
HSET
$25
hash:csdn:article:by:2060
$5
title
$12
外观模式
*4
$4
HSET
$25
hash:csdn:article:by:2060
$4
desc
$259
外观模式标签 ： Java与设计模式
  外观模式: 又称门面模式: 外观Facade为子系统的一组接口提供一个一致界面,使得这组子系统易于使用(通过引入一个新的外观角色降低原系统复杂度,同时降低客户...
*4
$4
HSET
$25
hash:csdn:article:by:2060
$9
readCount
$4
2590
*4
$4
HSET
$25
hash:csdn:article:by:2060
$14
articleContent
$40
csdn/java/1_0_1_9_1504264408.638618.html
*4
$4
HSET
$25
hash:csdn:article:by:2060
$4
date
$16
2016-09-03 06:53
*4
$4
HSET
$25
hash:csdn:article:by:2060
$6
author
$16
hanqing280441589
*4
$4
HSET
$25
hash:csdn:article:by:2060
$12
commentCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2060
$9
labelList
$41
设计模式,界面,外观,Facade,门面,
*4
$4
HSET
$25
hash:csdn:article:by:2060
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2060
$10
authorLink
$35
http://my.csdn.net/hanqing280441589
*4
$4
HSET
$25
hash:csdn:article:by:2060
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2061
$2
id
$4
2061
*4
$4
HSET
$25
hash:csdn:article:by:2061
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2061
$3
url
$58
http://blog.csdn.net/yuzhihui_no1/article/details/41749443
*4
$4
HSET
$25
hash:csdn:article:by:2061
$5
title
$26
x86汇编--程序加载器
*4
$4
HSET
$25
hash:csdn:article:by:2061
$4
desc
$265
加载器程序就是如何把一个程序从磁盘上加载到内存空间执行：
步骤思考（实模式下的加载器）：
        第一、确定从磁盘哪个扇区中加载，以及加载到内存中的什么地方；
        第二、最基本的设...
*4
$4
HSET
$25
hash:csdn:article:by:2061
$9
readCount
$4
1509
*4
$4
HSET
$25
hash:csdn:article:by:2061
$14
articleContent
$41
csdn/linux/1_0_2_1_1504264409.136242.html
*4
$4
HSET
$25
hash:csdn:article:by:2061
$4
date
$16
2014-12-05 16:32
*4
$4
HSET
$25
hash:csdn:article:by:2061
$6
author
$12
YuZhiHui_No1
*4
$4
HSET
$25
hash:csdn:article:by:2061
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2061
$9
labelList
$33
x86汇编,操作系统,加载器,
*4
$4
HSET
$25
hash:csdn:article:by:2061
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2061
$10
authorLink
$31
http://my.csdn.net/YuZhiHui_No1
*4
$4
HSET
$25
hash:csdn:article:by:2061
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2062
$2
id
$4
2062
*4
$4
HSET
$25
hash:csdn:article:by:2062
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2062
$3
url
$58
http://blog.csdn.net/zjf280441589/article/details/52343557
*4
$4
HSET
$25
hash:csdn:article:by:2062
$5
title
$15
装饰者模式
*4
$4
HSET
$25
hash:csdn:article:by:2062
$4
desc
$243
装饰者模式(Decorator): 又称包装器(Wrapper), 可以动态地为一个对象添加一些额外的职责. 就增加功能来说, 装饰者模式是一种用于替代继承的技术, 他无须通过增加子类继承就能扩展对象...
*4
$4
HSET
$25
hash:csdn:article:by:2062
$9
readCount
$4
2092
*4
$4
HSET
$25
hash:csdn:article:by:2062
$14
articleContent
$41
csdn/java/1_0_1_12_1504264409.581979.html
*4
$4
HSET
$25
hash:csdn:article:by:2062
$4
date
$16
2016-08-28 08:17
*4
$4
HSET
$25
hash:csdn:article:by:2062
$6
author
$16
hanqing280441589
*4
$4
HSET
$25
hash:csdn:article:by:2062
$12
commentCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2062
$9
labelList
$39
设计模式,扩展,继承,对象,java,
*4
$4
HSET
$25
hash:csdn:article:by:2062
$9
likeCount
$1
6
*4
$4
HSET
$25
hash:csdn:article:by:2062
$10
authorLink
$35
http://my.csdn.net/hanqing280441589
*4
$4
HSET
$25
hash:csdn:article:by:2062
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2063
$2
id
$4
2063
*4
$4
HSET
$25
hash:csdn:article:by:2063
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2063
$3
url
$58
http://blog.csdn.net/yuzhihui_no1/article/details/41869291
*4
$4
HSET
$25
hash:csdn:article:by:2063
$5
title
$41
x86汇编--RTC中断（时间显示器）
*4
$4
HSET
$25
hash:csdn:article:by:2063
$4
desc
$132
可以用前一篇操作系统内核加载器（x86汇编）的加载器来加载这个RTC中断程序，就可以显示时间了。
*4
$4
HSET
$25
hash:csdn:article:by:2063
$9
readCount
$4
1238
*4
$4
HSET
$25
hash:csdn:article:by:2063
$14
articleContent
$40
csdn/linux/1_0_2_2_1504264409.90012.html
*4
$4
HSET
$25
hash:csdn:article:by:2063
$4
date
$16
2014-12-11 17:03
*4
$4
HSET
$25
hash:csdn:article:by:2063
$6
author
$12
YuZhiHui_No1
*4
$4
HSET
$25
hash:csdn:article:by:2063
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2063
$9
labelList
$33
x86汇编,RTC中断,操作系统,
*4
$4
HSET
$25
hash:csdn:article:by:2063
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2063
$10
authorLink
$31
http://my.csdn.net/YuZhiHui_No1
*4
$4
HSET
$25
hash:csdn:article:by:2063
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2064
$2
id
$4
2064
*4
$4
HSET
$25
hash:csdn:article:by:2064
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2064
$3
url
$58
http://blog.csdn.net/zjf280441589/article/details/50411737
*4
$4
HSET
$25
hash:csdn:article:by:2064
$5
title
$12
代理模式
*4
$4
HSET
$25
hash:csdn:article:by:2064
$4
desc
$265
代理模式标签： Java与设计模式代理模式
  为其他对象提供一种代理以控制对这个对象的访问(可以详细控制访问某个对象的方法, 在调用这个方法[前/后]做[前/后]置处理, 从而实现将统一流程放到代理...
*4
$4
HSET
$25
hash:csdn:article:by:2064
$9
readCount
$4
2603
*4
$4
HSET
$25
hash:csdn:article:by:2064
$14
articleContent
$41
csdn/java/1_0_1_14_1504264410.542722.html
*4
$4
HSET
$25
hash:csdn:article:by:2064
$4
date
$16
2015-12-27 11:27
*4
$4
HSET
$25
hash:csdn:article:by:2064
$6
author
$16
hanqing280441589
*4
$4
HSET
$25
hash:csdn:article:by:2064
$12
commentCount
$2
11
*4
$4
HSET
$25
hash:csdn:article:by:2064
$9
labelList
$38
设计模式,代理模式,java,事务,
*4
$4
HSET
$25
hash:csdn:article:by:2064
$9
likeCount
$1
7
*4
$4
HSET
$25
hash:csdn:article:by:2064
$10
authorLink
$35
http://my.csdn.net/hanqing280441589
*4
$4
HSET
$25
hash:csdn:article:by:2064
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2065
$2
id
$4
2065
*4
$4
HSET
$25
hash:csdn:article:by:2065
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2065
$3
url
$58
http://blog.csdn.net/yuzhihui_no1/article/details/42191087
*4
$4
HSET
$25
hash:csdn:article:by:2065
$5
title
$26
x86汇编--微内核设计
*4
$4
HSET
$25
hash:csdn:article:by:2065
$4
desc
$299
微内核程序：微内核程序就稍微复杂点了，还是按步骤分析下：1、设计一个打印例程，就是把字符串打印到屏幕终端，用来显示一些提示信息；2、后面都是用来加载用户程序了，其实说到底微内核就是为各个用户程序提供环...
*4
$4
HSET
$25
hash:csdn:article:by:2065
$9
readCount
$3
931
*4
$4
HSET
$25
hash:csdn:article:by:2065
$14
articleContent
$41
csdn/linux/1_0_2_4_1504264411.003738.html
*4
$4
HSET
$25
hash:csdn:article:by:2065
$4
date
$16
2014-12-27 10:03
*4
$4
HSET
$25
hash:csdn:article:by:2065
$6
author
$12
YuZhiHui_No1
*4
$4
HSET
$25
hash:csdn:article:by:2065
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2065
$9
labelList
$48
操作系统,微内核,32位保护模式,汇编,
*4
$4
HSET
$25
hash:csdn:article:by:2065
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2065
$10
authorLink
$31
http://my.csdn.net/YuZhiHui_No1
*4
$4
HSET
$25
hash:csdn:article:by:2065
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2066
$2
id
$4
2066
*4
$4
HSET
$25
hash:csdn:article:by:2066
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2066
$3
url
$58
http://blog.csdn.net/yuzhihui_no1/article/details/42028965
*4
$4
HSET
$25
hash:csdn:article:by:2066
$5
title
$41
x86汇编--保护模式下的冒泡排序
*4
$4
HSET
$25
hash:csdn:article:by:2066
$4
desc
$169
其实这个代码本身（冒泡排序）没有什么意思，而有用的是怎么从实模式下进入保护模式，以及怎么 使用段选择子和段描述符。
*4
$4
HSET
$25
hash:csdn:article:by:2066
$9
readCount
$4
1022
*4
$4
HSET
$25
hash:csdn:article:by:2066
$14
articleContent
$41
csdn/linux/1_0_2_3_1504264411.049416.html
*4
$4
HSET
$25
hash:csdn:article:by:2066
$4
date
$16
2014-12-19 15:55
*4
$4
HSET
$25
hash:csdn:article:by:2066
$6
author
$12
YuZhiHui_No1
*4
$4
HSET
$25
hash:csdn:article:by:2066
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2066
$9
labelList
$41
x86汇编,32位保护模式,冒泡排序,
*4
$4
HSET
$25
hash:csdn:article:by:2066
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2066
$10
authorLink
$31
http://my.csdn.net/YuZhiHui_No1
*4
$4
HSET
$25
hash:csdn:article:by:2066
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2067
$2
id
$4
2067
*4
$4
HSET
$25
hash:csdn:article:by:2067
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2067
$3
url
$58
http://blog.csdn.net/zjf280441589/article/details/50405070
*4
$4
HSET
$25
hash:csdn:article:by:2067
$5
title
$15
适配器模式
*4
$4
HSET
$25
hash:csdn:article:by:2067
$4
desc
$287
适配器模式标签： Java与设计模式结构型模式
  在解决了对象的创建问题之后，对象的组成以及对象之间的依赖关系就成了开发人员关注的焦点，因为如何设计对象的结构、继承和依赖关系会影响到后续程序的维护性...
*4
$4
HSET
$25
hash:csdn:article:by:2067
$9
readCount
$4
1851
*4
$4
HSET
$25
hash:csdn:article:by:2067
$14
articleContent
$41
csdn/java/1_0_1_15_1504264411.680154.html
*4
$4
HSET
$25
hash:csdn:article:by:2067
$4
date
$16
2015-12-25 20:07
*4
$4
HSET
$25
hash:csdn:article:by:2067
$6
author
$16
hanqing280441589
*4
$4
HSET
$25
hash:csdn:article:by:2067
$12
commentCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2067
$9
labelList
$47
java,适配器模式,设计模式,开发人员,
*4
$4
HSET
$25
hash:csdn:article:by:2067
$9
likeCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2067
$10
authorLink
$35
http://my.csdn.net/hanqing280441589
*4
$4
HSET
$25
hash:csdn:article:by:2067
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2068
$2
id
$4
2068
*4
$4
HSET
$25
hash:csdn:article:by:2068
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2068
$3
url
$58
http://blog.csdn.net/zjf280441589/article/details/50491260
*4
$4
HSET
$25
hash:csdn:article:by:2068
$5
title
$12
桥接模式
*4
$4
HSET
$25
hash:csdn:article:by:2068
$4
desc
$277
桥接模式标签： Java与设计模式场景在商城系统中商品是分类摆放的,以电脑为例我们有以下商品分类, 该如何良好的处理商品分类销售的问题: 
直观上我们会认为该商品分类以继承来实现:电脑作为根类,台式机...
*4
$4
HSET
$25
hash:csdn:article:by:2068
$9
readCount
$4
1492
*4
$4
HSET
$25
hash:csdn:article:by:2068
$14
articleContent
$41
csdn/java/1_0_1_13_1504264411.836239.html
*4
$4
HSET
$25
hash:csdn:article:by:2068
$4
date
$16
2016-01-10 09:48
*4
$4
HSET
$25
hash:csdn:article:by:2068
$6
author
$16
hanqing280441589
*4
$4
HSET
$25
hash:csdn:article:by:2068
$12
commentCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2068
$9
labelList
$31
桥接模式,java,设计模式,
*4
$4
HSET
$25
hash:csdn:article:by:2068
$9
likeCount
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2068
$10
authorLink
$35
http://my.csdn.net/hanqing280441589
*4
$4
HSET
$25
hash:csdn:article:by:2068
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2069
$2
id
$4
2069
*4
$4
HSET
$25
hash:csdn:article:by:2069
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2069
$3
url
$58
http://blog.csdn.net/zjf280441589/article/details/52410509
*4
$4
HSET
$25
hash:csdn:article:by:2069
$5
title
$12
组合模式
*4
$4
HSET
$25
hash:csdn:article:by:2069
$4
desc
$269
组合模式标签 ： Java与设计模式
  组合模式: 将对象组合成树形结构以表示‘部分-整体’的层次结构, 使得用户对单个对象和组合对象的使用具有一致性.解析 
组合模式描述了如何将容器和叶子节点进行...
*4
$4
HSET
$25
hash:csdn:article:by:2069
$9
readCount
$4
1194
*4
$4
HSET
$25
hash:csdn:article:by:2069
$14
articleContent
$41
csdn/java/1_0_1_10_1504264412.817709.html
*4
$4
HSET
$25
hash:csdn:article:by:2069
$4
date
$16
2016-09-02 06:18
*4
$4
HSET
$25
hash:csdn:article:by:2069
$6
author
$16
hanqing280441589
*4
$4
HSET
$25
hash:csdn:article:by:2069
$12
commentCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2069
$9
labelList
$48
设计模式,树形结构,Composite,容器,Leaf,
*4
$4
HSET
$25
hash:csdn:article:by:2069
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2069
$10
authorLink
$35
http://my.csdn.net/hanqing280441589
*4
$4
HSET
$25
hash:csdn:article:by:2069
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2070
$2
id
$4
2070
*4
$4
HSET
$25
hash:csdn:article:by:2070
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2070
$3
url
$58
http://blog.csdn.net/zjf280441589/article/details/52350085
*4
$4
HSET
$25
hash:csdn:article:by:2070
$5
title
$15
中介者模式
*4
$4
HSET
$25
hash:csdn:article:by:2070
$4
desc
$273
中介者模式标签 ： Java与设计模式面向对象设计鼓励将行为分布到各个对象中, 这种分布可能会导致对象间有许多连接. 在最坏的情况下, 每一个对象都需要知道其他所有对象. 
虽然将一个系统分割成许多对...
*4
$4
HSET
$25
hash:csdn:article:by:2070
$9
readCount
$4
2069
*4
$4
HSET
$25
hash:csdn:article:by:2070
$14
articleContent
$41
csdn/java/1_0_1_11_1504264413.581088.html
*4
$4
HSET
$25
hash:csdn:article:by:2070
$4
date
$16
2016-08-29 09:07
*4
$4
HSET
$25
hash:csdn:article:by:2070
$6
author
$16
hanqing280441589
*4
$4
HSET
$25
hash:csdn:article:by:2070
$12
commentCount
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2070
$9
labelList
$49
中介者,聚合,设计模式,对象群,Mediator,
*4
$4
HSET
$25
hash:csdn:article:by:2070
$9
likeCount
$1
3
*4
$4
HSET
$25
hash:csdn:article:by:2070
$10
authorLink
$35
http://my.csdn.net/hanqing280441589
*4
$4
HSET
$25
hash:csdn:article:by:2070
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2071
$2
id
$4
2071
*4
$4
HSET
$25
hash:csdn:article:by:2071
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2071
$3
url
$58
http://blog.csdn.net/zjf280441589/article/details/55509942
*4
$4
HSET
$25
hash:csdn:article:by:2071
$5
title
$15
备忘录模式
*4
$4
HSET
$25
hash:csdn:article:by:2071
$4
desc
$253
备忘录模式标签 ： Java与设计模式
  备忘录模式: 在不破坏封装性的前提下, 捕获一个对象的内部状态( or 拷贝), 并在该对象之外保存这个状态, 这样以后就可 将该对象恢复到原先保存的状态....
*4
$4
HSET
$25
hash:csdn:article:by:2071
$9
readCount
$4
1260
*4
$4
HSET
$25
hash:csdn:article:by:2071
$14
articleContent
$40
csdn/java/1_0_1_1_1504264414.643844.html
*4
$4
HSET
$25
hash:csdn:article:by:2071
$4
date
$16
2017-02-17 14:34
*4
$4
HSET
$25
hash:csdn:article:by:2071
$6
author
$16
hanqing280441589
*4
$4
HSET
$25
hash:csdn:article:by:2071
$12
commentCount
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2071
$9
labelList
$74
设计模式,面向对象,状态恢复,游戏进度保存,属性序列化,
*4
$4
HSET
$25
hash:csdn:article:by:2071
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2071
$10
authorLink
$35
http://my.csdn.net/hanqing280441589
*4
$4
HSET
$25
hash:csdn:article:by:2071
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2072
$2
id
$4
2072
*4
$4
HSET
$25
hash:csdn:article:by:2072
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2072
$3
url
$55
http://blog.csdn.net/frogoscar/article/details/50450135
*4
$4
HSET
$25
hash:csdn:article:by:2072
$5
title
$74
【Linux探索之旅】第四部分第五课：源码编译，安装便利
*4
$4
HSET
$25
hash:csdn:article:by:2072
$4
desc
$229
这一课相对轻松，毕竟刚跨年（2015-2016）么，新年怎么能让大家一个头两个大呢~ 小编怎么可能这么坏呢？小编是这样的人吗？（是啊 -_-#）。我们一步步来探究软件的编译。
*4
$4
HSET
$25
hash:csdn:article:by:2072
$9
readCount
$3
782
*4
$4
HSET
$25
hash:csdn:article:by:2072
$14
articleContent
$41
csdn/linux/1_1_1_0_1504264415.312715.html
*4
$4
HSET
$25
hash:csdn:article:by:2072
$4
date
$16
2016-01-03 03:43
*4
$4
HSET
$25
hash:csdn:article:by:2072
$6
author
$9
frogoscar
*4
$4
HSET
$25
hash:csdn:article:by:2072
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2072
$9
labelList
$57
编译,程序员联盟,程序员,编程,programmerleague,
*4
$4
HSET
$25
hash:csdn:article:by:2072
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2072
$10
authorLink
$28
http://my.csdn.net/frogoscar
*4
$4
HSET
$25
hash:csdn:article:by:2072
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2073
$2
id
$4
2073
*4
$4
HSET
$25
hash:csdn:article:by:2073
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2073
$3
url
$58
http://blog.csdn.net/zjf280441589/article/details/53844305
*4
$4
HSET
$25
hash:csdn:article:by:2073
$5
title
$15
责任链模式
*4
$4
HSET
$25
hash:csdn:article:by:2073
$4
desc
$269
责任链模式
将能够处理某一类请求的对象串成一条链, 请求沿链传递, 链上的对象逐个判断是否有能力处理该请求. 使多个对象都有机会处理请求, 从而避免请求发送者和接收者之间的耦合关系.  

  优势:...
*4
$4
HSET
$25
hash:csdn:article:by:2073
$9
readCount
$4
1292
*4
$4
HSET
$25
hash:csdn:article:by:2073
$14
articleContent
$40
csdn/java/1_0_1_2_1504264415.743141.html
*4
$4
HSET
$25
hash:csdn:article:by:2073
$4
date
$16
2016-12-23 21:57
*4
$4
HSET
$25
hash:csdn:article:by:2073
$6
author
$16
hanqing280441589
*4
$4
HSET
$25
hash:csdn:article:by:2073
$12
commentCount
$1
6
*4
$4
HSET
$25
hash:csdn:article:by:2073
$9
labelList
$67
设计模式,责任流转,升职加薪的流转流程,动态担责,
*4
$4
HSET
$25
hash:csdn:article:by:2073
$9
likeCount
$1
3
*4
$4
HSET
$25
hash:csdn:article:by:2073
$10
authorLink
$35
http://my.csdn.net/hanqing280441589
*4
$4
HSET
$25
hash:csdn:article:by:2073
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2074
$2
id
$4
2074
*4
$4
HSET
$25
hash:csdn:article:by:2074
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2074
$3
url
$55
http://blog.csdn.net/frogoscar/article/details/48470871
*4
$4
HSET
$25
hash:csdn:article:by:2074
$5
title
$80
【Linux探索之旅】第三部分第三课：监视系统活动，滴水不漏
*4
$4
HSET
$25
hash:csdn:article:by:2074
$4
desc
$269
放眼现在的操作系统，基本都是多任务操作系统了，Linux当然也不例外。因此，Linux可以管理多个同时运行的程序。

通过之前的课程（《【Linux探索之旅】第二部分第五课：用户和权限，有权就任性》）...
*4
$4
HSET
$25
hash:csdn:article:by:2074
$9
readCount
$3
995
*4
$4
HSET
$25
hash:csdn:article:by:2074
$14
articleContent
$41
csdn/linux/1_1_1_8_1504264416.039383.html
*4
$4
HSET
$25
hash:csdn:article:by:2074
$4
date
$16
2015-09-15 17:44
*4
$4
HSET
$25
hash:csdn:article:by:2074
$6
author
$9
frogoscar
*4
$4
HSET
$25
hash:csdn:article:by:2074
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2074
$9
labelList
$59
编程,操作系统,ProgrammerLeague,程序员联盟,Linux,
*4
$4
HSET
$25
hash:csdn:article:by:2074
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2074
$10
authorLink
$28
http://my.csdn.net/frogoscar
*4
$4
HSET
$25
hash:csdn:article:by:2074
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2075
$2
id
$4
2075
*4
$4
HSET
$25
hash:csdn:article:by:2075
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2075
$3
url
$58
http://blog.csdn.net/zjf280441589/article/details/53339028
*4
$4
HSET
$25
hash:csdn:article:by:2075
$5
title
$12
状态模式
*4
$4
HSET
$25
hash:csdn:article:by:2075
$4
desc
$250
允许一个对象在其内部状态改变时改变其行为, 其对象看起来像是改变了其类. 
 解决系统中复杂对象的状态流转以及不同状态下的行为封装问题.
(来源: 设计模式:可复用面向对象软件的基础)
*4
$4
HSET
$25
hash:csdn:article:by:2075
$9
readCount
$4
2427
*4
$4
HSET
$25
hash:csdn:article:by:2075
$14
articleContent
$40
csdn/java/1_0_1_4_1504264416.857213.html
*4
$4
HSET
$25
hash:csdn:article:by:2075
$4
date
$16
2016-11-25 19:08
*4
$4
HSET
$25
hash:csdn:article:by:2075
$6
author
$16
hanqing280441589
*4
$4
HSET
$25
hash:csdn:article:by:2075
$12
commentCount
$1
3
*4
$4
HSET
$25
hash:csdn:article:by:2075
$9
labelList
$62
设计模式,状态模式,状态推动,阿里Kelude,状态机,
*4
$4
HSET
$25
hash:csdn:article:by:2075
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2075
$10
authorLink
$35
http://my.csdn.net/hanqing280441589
*4
$4
HSET
$25
hash:csdn:article:by:2075
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2076
$2
id
$4
2076
*4
$4
HSET
$25
hash:csdn:article:by:2076
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2076
$3
url
$55
http://blog.csdn.net/frogoscar/article/details/48205689
*4
$4
HSET
$25
hash:csdn:article:by:2076
$5
title
$74
【Linux探索之旅】第二部分第九课：查找文件，无所遁形
*4
$4
HSET
$25
hash:csdn:article:by:2076
$4
desc
$231
之前的课程我们见识过了Linux下文件的组织形式是很特别的，跟Windows不一样。

我们也用ls / 这个命令来列出根目录下的所有目录，有/bin，/etc，/var，/home，等等。而这些目录...
*4
$4
HSET
$25
hash:csdn:article:by:2076
$9
readCount
$3
936
*4
$4
HSET
$25
hash:csdn:article:by:2076
$14
articleContent
$42
csdn/linux/1_1_1_12_1504264417.343792.html
*4
$4
HSET
$25
hash:csdn:article:by:2076
$4
date
$16
2015-09-04 05:49
*4
$4
HSET
$25
hash:csdn:article:by:2076
$6
author
$9
frogoscar
*4
$4
HSET
$25
hash:csdn:article:by:2076
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2076
$9
labelList
$62
Linux,操作系统,程序员联盟,程序员,ProgrammerLeague,
*4
$4
HSET
$25
hash:csdn:article:by:2076
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2076
$10
authorLink
$28
http://my.csdn.net/frogoscar
*4
$4
HSET
$25
hash:csdn:article:by:2076
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2077
$2
id
$4
2077
*4
$4
HSET
$25
hash:csdn:article:by:2077
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2077
$3
url
$58
http://blog.csdn.net/zjf280441589/article/details/52774153
*4
$4
HSET
$25
hash:csdn:article:by:2077
$5
title
$12
命令模式
*4
$4
HSET
$25
hash:csdn:article:by:2077
$4
desc
$275
在对象的结构和创建问题都解决了之后,就剩下对象的行为问题了: 如果对象的行为设计的好,那么对象的行为就会更清晰,它们之间的协作效率就会提高. 
  行为型模式共有11个可供研究,它们分别是:命令模式、...
*4
$4
HSET
$25
hash:csdn:article:by:2077
$9
readCount
$4
3114
*4
$4
HSET
$25
hash:csdn:article:by:2077
$14
articleContent
$40
csdn/java/1_0_1_6_1504264417.688749.html
*4
$4
HSET
$25
hash:csdn:article:by:2077
$4
date
$16
2016-10-10 07:28
*4
$4
HSET
$25
hash:csdn:article:by:2077
$6
author
$16
hanqing280441589
*4
$4
HSET
$25
hash:csdn:article:by:2077
$12
commentCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2077
$9
labelList
$43
设计模式,java,Command,Receiver,Invoker,
*4
$4
HSET
$25
hash:csdn:article:by:2077
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2077
$10
authorLink
$35
http://my.csdn.net/hanqing280441589
*4
$4
HSET
$25
hash:csdn:article:by:2077
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2078
$2
id
$4
2078
*4
$4
HSET
$25
hash:csdn:article:by:2078
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2078
$3
url
$55
http://blog.csdn.net/frogoscar/article/details/48205575
*4
$4
HSET
$25
hash:csdn:article:by:2078
$5
title
$74
【Linux探索之旅】第二部分第七课：软件安装，如虎添翼
*4
$4
HSET
$25
hash:csdn:article:by:2078
$4
desc
$271
一般提到软件安装，有过Windows系统使用经验的朋友肯定会深有体会，那个麻烦啊，大致流程是这样的：

在搜索引擎（比如百度或google）中搜索我们的软件名称。
看到一个不错的结果，点击进入。如果是...
*4
$4
HSET
$25
hash:csdn:article:by:2078
$9
readCount
$3
902
*4
$4
HSET
$25
hash:csdn:article:by:2078
$14
articleContent
$41
csdn/linux/1_1_1_14_1504264418.08233.html
*4
$4
HSET
$25
hash:csdn:article:by:2078
$4
date
$16
2015-09-04 05:14
*4
$4
HSET
$25
hash:csdn:article:by:2078
$6
author
$9
frogoscar
*4
$4
HSET
$25
hash:csdn:article:by:2078
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2078
$9
labelList
$62
Linux,操作系统,程序员联盟,程序员,ProgrammerLeague,
*4
$4
HSET
$25
hash:csdn:article:by:2078
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2078
$10
authorLink
$28
http://my.csdn.net/frogoscar
*4
$4
HSET
$25
hash:csdn:article:by:2078
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2079
$2
id
$4
2079
*4
$4
HSET
$25
hash:csdn:article:by:2079
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2079
$3
url
$58
http://blog.csdn.net/zjf280441589/article/details/52592421
*4
$4
HSET
$25
hash:csdn:article:by:2079
$5
title
$12
享元模式
*4
$4
HSET
$25
hash:csdn:article:by:2079
$4
desc
$227
享元模式标签 ： Java与设计模式
  内存属于稀缺资源, 不能随便浪费. 如果有很多相同/相似的对象, 我们可以通过享元节省内存.
内部状态 vs. 外部状态
  享元模式(Flyweight):...
*4
$4
HSET
$25
hash:csdn:article:by:2079
$9
readCount
$4
3028
*4
$4
HSET
$25
hash:csdn:article:by:2079
$14
articleContent
$40
csdn/java/1_0_1_7_1504264418.595442.html
*4
$4
HSET
$25
hash:csdn:article:by:2079
$4
date
$16
2016-09-20 07:47
*4
$4
HSET
$25
hash:csdn:article:by:2079
$6
author
$16
hanqing280441589
*4
$4
HSET
$25
hash:csdn:article:by:2079
$12
commentCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2079
$9
labelList
$47
享元,内存,设计模式,共享,外部状态,
*4
$4
HSET
$25
hash:csdn:article:by:2079
$9
likeCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2079
$10
authorLink
$35
http://my.csdn.net/hanqing280441589
*4
$4
HSET
$25
hash:csdn:article:by:2079
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2080
$2
id
$4
2080
*4
$4
HSET
$25
hash:csdn:article:by:2080
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2080
$3
url
$55
http://blog.csdn.net/frogoscar/article/details/48099491
*4
$4
HSET
$25
hash:csdn:article:by:2080
$5
title
$81
【Linux探索之旅】第二部分第六课：Nano，初学者的文本编辑器
*4
$4
HSET
$25
hash:csdn:article:by:2080
$4
desc
$295
这一课比较简单，没有什么太难的概念。不过这一课会讲如何配置终端噢。

大家可以泡个泡面，烤只烤鸡；剥个卤蛋，慢慢来看。

之前的课程中，我们已经学会了在终端中用多种不同的方式来查看文件的内容，但是我们...
*4
$4
HSET
$25
hash:csdn:article:by:2080
$9
readCount
$4
1371
*4
$4
HSET
$25
hash:csdn:article:by:2080
$14
articleContent
$42
csdn/linux/1_1_1_15_1504264419.247549.html
*4
$4
HSET
$25
hash:csdn:article:by:2080
$4
date
$16
2015-08-30 03:26
*4
$4
HSET
$25
hash:csdn:article:by:2080
$6
author
$9
frogoscar
*4
$4
HSET
$25
hash:csdn:article:by:2080
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2080
$9
labelList
$57
Linux,操作系统,程序员联盟,Nano,ProgrammerLeague,
*4
$4
HSET
$25
hash:csdn:article:by:2080
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2080
$10
authorLink
$28
http://my.csdn.net/frogoscar
*4
$4
HSET
$25
hash:csdn:article:by:2080
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2081
$2
id
$4
2081
*4
$4
HSET
$25
hash:csdn:article:by:2081
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2081
$3
url
$58
http://blog.csdn.net/zjf280441589/article/details/52831029
*4
$4
HSET
$25
hash:csdn:article:by:2081
$5
title
$18
模板方法模式
*4
$4
HSET
$25
hash:csdn:article:by:2081
$4
desc
$281
定义一个操作中的算法的骨架, 而将一些步骤延迟到子类中. 模板方法使得子类可以在不改变一个算法的结构的前提下重定义该算法的某些特定步骤. 
 
处理某个流程的骨架代码已经具备, 但其中某节点的具体实现...
*4
$4
HSET
$25
hash:csdn:article:by:2081
$9
readCount
$4
2926
*4
$4
HSET
$25
hash:csdn:article:by:2081
$14
articleContent
$40
csdn/java/1_0_1_5_1504264419.681913.html
*4
$4
HSET
$25
hash:csdn:article:by:2081
$4
date
$16
2016-10-16 16:18
*4
$4
HSET
$25
hash:csdn:article:by:2081
$6
author
$16
hanqing280441589
*4
$4
HSET
$25
hash:csdn:article:by:2081
$12
commentCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2081
$9
labelList
$72
模板方法模式,算法骨架,代码复用,统一定时调度,Servlet,
*4
$4
HSET
$25
hash:csdn:article:by:2081
$9
likeCount
$1
5
*4
$4
HSET
$25
hash:csdn:article:by:2081
$10
authorLink
$35
http://my.csdn.net/hanqing280441589
*4
$4
HSET
$25
hash:csdn:article:by:2081
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2082
$2
id
$4
2082
*4
$4
HSET
$25
hash:csdn:article:by:2082
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2082
$3
url
$55
http://blog.csdn.net/frogoscar/article/details/47742147
*4
$4
HSET
$25
hash:csdn:article:by:2082
$5
title
$77
【Linux探索之旅】第二部分第二课：命令行，世界尽在掌握
*4
$4
HSET
$25
hash:csdn:article:by:2082
$4
desc
$293
今天的标题是不是有点霸气侧漏呢？

读者：“小编，你为什么每次都要起这么非主流的标题呢？不能愉快地玩耍么？”
小编：“那我问你，老子他为什么要写《道德经》咧？”
读者：“为什么咧？”
小编：“因为老子...
*4
$4
HSET
$25
hash:csdn:article:by:2082
$9
readCount
$3
994
*4
$4
HSET
$25
hash:csdn:article:by:2082
$14
articleContent
$42
csdn/linux/1_1_1_19_1504264420.025231.html
*4
$4
HSET
$25
hash:csdn:article:by:2082
$4
date
$16
2015-08-18 02:48
*4
$4
HSET
$25
hash:csdn:article:by:2082
$6
author
$9
frogoscar
*4
$4
HSET
$25
hash:csdn:article:by:2082
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2082
$9
labelList
$59
命令行,Linux,程序员,程序员联盟,ProgrammerLeague,
*4
$4
HSET
$25
hash:csdn:article:by:2082
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2082
$10
authorLink
$28
http://my.csdn.net/frogoscar
*4
$4
HSET
$25
hash:csdn:article:by:2082
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2083
$2
id
$4
2083
*4
$4
HSET
$25
hash:csdn:article:by:2083
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2083
$3
url
$58
http://blog.csdn.net/zjf280441589/article/details/53543049
*4
$4
HSET
$25
hash:csdn:article:by:2083
$5
title
$12
策略模式
*4
$4
HSET
$25
hash:csdn:article:by:2083
$4
desc
$259
Java与设计模式: 定义一系列的算法, 将其一个个封装起来, 并使它们可相互替换, 使得算法可独立于使用它的客户而变化.  
 
  策略模式对应于解决某一问题的一个算法族, 允许用户从该算法族中任...
*4
$4
HSET
$25
hash:csdn:article:by:2083
$9
readCount
$3
940
*4
$4
HSET
$25
hash:csdn:article:by:2083
$14
articleContent
$40
csdn/java/1_0_1_3_1504264420.809085.html
*4
$4
HSET
$25
hash:csdn:article:by:2083
$4
date
$16
2016-12-09 18:47
*4
$4
HSET
$25
hash:csdn:article:by:2083
$6
author
$16
hanqing280441589
*4
$4
HSET
$25
hash:csdn:article:by:2083
$12
commentCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2083
$9
labelList
$49
策略模式,设计模式,算法族,解决问题,
*4
$4
HSET
$25
hash:csdn:article:by:2083
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2083
$10
authorLink
$35
http://my.csdn.net/hanqing280441589
*4
$4
HSET
$25
hash:csdn:article:by:2083
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2084
$2
id
$4
2084
*4
$4
HSET
$25
hash:csdn:article:by:2084
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2084
$3
url
$55
http://blog.csdn.net/frogoscar/article/details/48205603
*4
$4
HSET
$25
hash:csdn:article:by:2084
$5
title
$76
【Linux探索之旅】第二部分第八课：RTFM 阅读那该死的手册
*4
$4
HSET
$25
hash:csdn:article:by:2084
$4
desc
$261
一般Windows的用户不太习惯看使用手册。有些Windows下的软件下载后是带有使用手册的，但是谁会花时间看呢？

在Linux下，阅读手册应该成为一个反射动作，一个自然而然的反应。虽说一开始要我们...
*4
$4
HSET
$25
hash:csdn:article:by:2084
$9
readCount
$3
908
*4
$4
HSET
$25
hash:csdn:article:by:2084
$14
articleContent
$42
csdn/linux/1_1_1_13_1504264421.356451.html
*4
$4
HSET
$25
hash:csdn:article:by:2084
$4
date
$16
2015-09-04 05:28
*4
$4
HSET
$25
hash:csdn:article:by:2084
$6
author
$9
frogoscar
*4
$4
HSET
$25
hash:csdn:article:by:2084
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2084
$9
labelList
$62
Linux,操作系统,程序员联盟,程序员,ProgrammerLeague,
*4
$4
HSET
$25
hash:csdn:article:by:2084
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2084
$10
authorLink
$28
http://my.csdn.net/frogoscar
*4
$4
HSET
$25
hash:csdn:article:by:2084
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2085
$2
id
$4
2085
*4
$4
HSET
$25
hash:csdn:article:by:2085
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2085
$3
url
$55
http://blog.csdn.net/frogoscar/article/details/48432381
*4
$4
HSET
$25
hash:csdn:article:by:2085
$5
title
$86
【Linux探索之旅】第三部分第二课：流、管道、重定向，三管齐下
*4
$4
HSET
$25
hash:csdn:article:by:2085
$4
desc
$303
这一课我们来学一些非常有用的内容，而且相当有意思，而且内容很多，而且有可能颠覆你的三《观》（毕竟三管齐下，不颠覆三观也难）。今天的标题中的三个名称，听上去就怪怪的。什么流，管道，重定向，都啥玩意啊。不...
*4
$4
HSET
$25
hash:csdn:article:by:2085
$9
readCount
$4
1347
*4
$4
HSET
$25
hash:csdn:article:by:2085
$14
articleContent
$41
csdn/linux/1_1_1_9_1504264422.513841.html
*4
$4
HSET
$25
hash:csdn:article:by:2085
$4
date
$16
2015-09-14 03:33
*4
$4
HSET
$25
hash:csdn:article:by:2085
$6
author
$9
frogoscar
*4
$4
HSET
$25
hash:csdn:article:by:2085
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2085
$9
labelList
$43
Linux,重定向,程序员联盟,流,管道,
*4
$4
HSET
$25
hash:csdn:article:by:2085
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2085
$10
authorLink
$28
http://my.csdn.net/frogoscar
*4
$4
HSET
$25
hash:csdn:article:by:2085
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2086
$2
id
$4
2086
*4
$4
HSET
$25
hash:csdn:article:by:2086
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2086
$3
url
$55
http://blog.csdn.net/frogoscar/article/details/48308013
*4
$4
HSET
$25
hash:csdn:article:by:2086
$5
title
$74
【Linux探索之旅】第三部分第一课：数据处理，慢条斯理
*4
$4
HSET
$25
hash:csdn:article:by:2086
$4
desc
$295
哈哈，终于到了第三部分了。不知不觉两个部分已经学完了，可喜可贺，掌声给自己！

此时读者内心独白：“我想静静，也不要问我小编是谁。”

好了好了，小编重回淡定。咳咳，看到今天的标题应该会对这一课的内容...
*4
$4
HSET
$25
hash:csdn:article:by:2086
$9
readCount
$4
1032
*4
$4
HSET
$25
hash:csdn:article:by:2086
$14
articleContent
$42
csdn/linux/1_1_1_10_1504264422.979924.html
*4
$4
HSET
$25
hash:csdn:article:by:2086
$4
date
$16
2015-09-09 04:08
*4
$4
HSET
$25
hash:csdn:article:by:2086
$6
author
$9
frogoscar
*4
$4
HSET
$25
hash:csdn:article:by:2086
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2086
$9
labelList
$62
Linux,操作系统,程序员联盟,程序员,ProgrammerLeague,
*4
$4
HSET
$25
hash:csdn:article:by:2086
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2086
$10
authorLink
$28
http://my.csdn.net/frogoscar
*4
$4
HSET
$25
hash:csdn:article:by:2086
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2087
$2
id
$4
2087
*4
$4
HSET
$25
hash:csdn:article:by:2087
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2087
$3
url
$55
http://blog.csdn.net/frogoscar/article/details/48205707
*4
$4
HSET
$25
hash:csdn:article:by:2087
$5
title
$44
【Linux探索之旅】第二部分测试题
*4
$4
HSET
$25
hash:csdn:article:by:2087
$4
desc
$41
10道测试题，测测掌握得如何。
*4
$4
HSET
$25
hash:csdn:article:by:2087
$9
readCount
$3
979
*4
$4
HSET
$25
hash:csdn:article:by:2087
$14
articleContent
$42
csdn/linux/1_1_1_11_1504264424.461559.html
*4
$4
HSET
$25
hash:csdn:article:by:2087
$4
date
$16
2015-09-04 05:53
*4
$4
HSET
$25
hash:csdn:article:by:2087
$6
author
$9
frogoscar
*4
$4
HSET
$25
hash:csdn:article:by:2087
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2087
$9
labelList
$62
Linux,操作系统,程序员联盟,程序员,ProgrammerLeague,
*4
$4
HSET
$25
hash:csdn:article:by:2087
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2087
$10
authorLink
$28
http://my.csdn.net/frogoscar
*4
$4
HSET
$25
hash:csdn:article:by:2087
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2088
$2
id
$4
2088
*4
$4
HSET
$25
hash:csdn:article:by:2088
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2088
$3
url
$65
http://blog.csdn.net/hncu1306602liuqiang/article/details/53184109
*4
$4
HSET
$25
hash:csdn:article:by:2088
$5
title
$81
使用AJAX技术做一个无页面刷新的会员登录功能--解决中文乱码
*4
$4
HSET
$25
hash:csdn:article:by:2088
$4
desc
$36
使用双重编码和双重解码。
*4
$4
HSET
$25
hash:csdn:article:by:2088
$9
readCount
$3
146
*4
$4
HSET
$25
hash:csdn:article:by:2088
$14
articleContent
$40
csdn/java/1_3_1_0_1504264424.851471.html
*4
$4
HSET
$25
hash:csdn:article:by:2088
$4
date
$16
2016-11-16 10:44
*4
$4
HSET
$25
hash:csdn:article:by:2088
$6
author
$19
hncu1306602liuqiang
*4
$4
HSET
$25
hash:csdn:article:by:2088
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2088
$9
labelList
$36
ajax+servlet解决中文乱码,java,
*4
$4
HSET
$25
hash:csdn:article:by:2088
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2088
$10
authorLink
$38
http://my.csdn.net/hncu1306602liuqiang
*4
$4
HSET
$25
hash:csdn:article:by:2088
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2089
$2
id
$4
2089
*4
$4
HSET
$25
hash:csdn:article:by:2089
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2089
$3
url
$55
http://blog.csdn.net/frogoscar/article/details/50446586
*4
$4
HSET
$25
hash:csdn:article:by:2089
$5
title
$74
【Linux探索之旅】第四部分第四课：分析网络，隔离防火
*4
$4
HSET
$25
hash:csdn:article:by:2089
$4
desc
$237
俗语说得好：爱国爱家爱师妹!  防火防盗防师兄！


虽然说，Linux本身很安全，至少比Windows安全多了。你看Linux发行版哪有安装杀毒软件的，同样基于修改的Unix系统的苹果的Mac OS...
*4
$4
HSET
$25
hash:csdn:article:by:2089
$9
readCount
$4
1243
*4
$4
HSET
$25
hash:csdn:article:by:2089
$14
articleContent
$41
csdn/linux/1_1_1_1_1504264425.395543.html
*4
$4
HSET
$25
hash:csdn:article:by:2089
$4
date
$16
2016-01-02 04:03
*4
$4
HSET
$25
hash:csdn:article:by:2089
$6
author
$9
frogoscar
*4
$4
HSET
$25
hash:csdn:article:by:2089
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2089
$9
labelList
$42
linux,防火墙,iptables,netstat,ifconfig,
*4
$4
HSET
$25
hash:csdn:article:by:2089
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2089
$10
authorLink
$28
http://my.csdn.net/frogoscar
*4
$4
HSET
$25
hash:csdn:article:by:2089
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2090
$2
id
$4
2090
*4
$4
HSET
$25
hash:csdn:article:by:2090
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2090
$3
url
$65
http://blog.csdn.net/hncu1306602liuqiang/article/details/53184405
*4
$4
HSET
$25
hash:csdn:article:by:2090
$5
title
$24
数据库基本sql语句
*4
$4
HSET
$25
hash:csdn:article:by:2090
$4
desc
$146
mysql的基本语句，由于本人不是经常写，于是开个博客给自己记录，方便以后查看，也希望能给大家带来方便！
*4
$4
HSET
$25
hash:csdn:article:by:2090
$9
readCount
$3
163
*4
$4
HSET
$25
hash:csdn:article:by:2090
$14
articleContent
$40
csdn/java/1_3_1_1_1504264425.647223.html
*4
$4
HSET
$25
hash:csdn:article:by:2090
$4
date
$16
2016-11-16 11:12
*4
$4
HSET
$25
hash:csdn:article:by:2090
$6
author
$19
hncu1306602liuqiang
*4
$4
HSET
$25
hash:csdn:article:by:2090
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2090
$9
labelList
$6
mysql,
*4
$4
HSET
$25
hash:csdn:article:by:2090
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2090
$10
authorLink
$38
http://my.csdn.net/hncu1306602liuqiang
*4
$4
HSET
$25
hash:csdn:article:by:2090
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2091
$2
id
$4
2091
*4
$4
HSET
$25
hash:csdn:article:by:2091
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2091
$3
url
$55
http://blog.csdn.net/frogoscar/article/details/49305983
*4
$4
HSET
$25
hash:csdn:article:by:2091
$5
title
$77
【Linux探索之旅】第四部分第一课：压缩文件，解压无压力
*4
$4
HSET
$25
hash:csdn:article:by:2091
$4
desc
$285
最近小编因为换工作，从南法搬到巴黎。折腾了很久。
网络一直用的是公共的无线网，信号不行。无线上网的box盒子已经说通网了，但我觉得墙上的线有问题。反正就是用不了自己的告诉WiFI盒子。
而且还要继续找...
*4
$4
HSET
$25
hash:csdn:article:by:2091
$9
readCount
$4
1023
*4
$4
HSET
$25
hash:csdn:article:by:2091
$14
articleContent
$41
csdn/linux/1_1_1_4_1504264426.428432.html
*4
$4
HSET
$25
hash:csdn:article:by:2091
$4
date
$16
2015-10-21 16:20
*4
$4
HSET
$25
hash:csdn:article:by:2091
$6
author
$9
frogoscar
*4
$4
HSET
$25
hash:csdn:article:by:2091
$12
commentCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2091
$9
labelList
$46
Linux,操作系统,程序员联盟,tar,压缩,
*4
$4
HSET
$25
hash:csdn:article:by:2091
$9
likeCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2091
$10
authorLink
$28
http://my.csdn.net/frogoscar
*4
$4
HSET
$25
hash:csdn:article:by:2091
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2092
$2
id
$4
2092
*4
$4
HSET
$25
hash:csdn:article:by:2092
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2092
$3
url
$65
http://blog.csdn.net/hncu1306602liuqiang/article/details/53432918
*4
$4
HSET
$25
hash:csdn:article:by:2092
$5
title
$37
java类反射读取项目内的文件
*4
$4
HSET
$25
hash:csdn:article:by:2092
$4
desc
$63
文件加载的一点心得，希望能给大家带来帮助。
*4
$4
HSET
$25
hash:csdn:article:by:2092
$9
readCount
$3
527
*4
$4
HSET
$25
hash:csdn:article:by:2092
$14
articleContent
$40
csdn/java/1_3_1_2_1504264426.832455.html
*4
$4
HSET
$25
hash:csdn:article:by:2092
$4
date
$16
2016-12-02 11:56
*4
$4
HSET
$25
hash:csdn:article:by:2092
$6
author
$19
hncu1306602liuqiang
*4
$4
HSET
$25
hash:csdn:article:by:2092
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2092
$9
labelList
$18
java,文件加载,
*4
$4
HSET
$25
hash:csdn:article:by:2092
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2092
$10
authorLink
$38
http://my.csdn.net/hncu1306602liuqiang
*4
$4
HSET
$25
hash:csdn:article:by:2092
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2093
$2
id
$4
2093
*4
$4
HSET
$25
hash:csdn:article:by:2093
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2093
$3
url
$55
http://blog.csdn.net/frogoscar/article/details/48617837
*4
$4
HSET
$25
hash:csdn:article:by:2093
$5
title
$74
【Linux探索之旅】第三部分第五课：延时执行，唯慢不破
*4
$4
HSET
$25
hash:csdn:article:by:2093
$4
desc
$291
到目前为止，我们所运行的命令都是立即执行，也就是我们按下回车键的那一刻，命令就开始执行了。
其实Linux中命令还可以延时执行。这一课我们就来学习几个命令，可以帮助我们《稍后》执行程序。比如我们即将学...
*4
$4
HSET
$25
hash:csdn:article:by:2093
$9
readCount
$4
1182
*4
$4
HSET
$25
hash:csdn:article:by:2093
$14
articleContent
$41
csdn/linux/1_1_1_6_1504264427.207673.html
*4
$4
HSET
$25
hash:csdn:article:by:2093
$4
date
$16
2015-09-21 03:01
*4
$4
HSET
$25
hash:csdn:article:by:2093
$6
author
$9
frogoscar
*4
$4
HSET
$25
hash:csdn:article:by:2093
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2093
$9
labelList
$65
Linux,操作系统,程序员联盟,ProgrammerLeague,延时执行,
*4
$4
HSET
$25
hash:csdn:article:by:2093
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2093
$10
authorLink
$28
http://my.csdn.net/frogoscar
*4
$4
HSET
$25
hash:csdn:article:by:2093
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2094
$2
id
$4
2094
*4
$4
HSET
$25
hash:csdn:article:by:2094
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2094
$3
url
$55
http://blog.csdn.net/frogoscar/article/details/48540245
*4
$4
HSET
$25
hash:csdn:article:by:2094
$5
title
$80
【Linux探索之旅】第三部分第四课：后台运行及合并多个终端
*4
$4
HSET
$25
hash:csdn:article:by:2094
$4
desc
$295
我们使用的终端让我们难免有一种感觉：我们每次只能在一个终端中运行一个进程。但其实这是大错特错的。

终端还可以运行后台进程。要使进程一个在后台运行，有几种方法，我们都将学习。

这一课的第三节还将学习...
*4
$4
HSET
$25
hash:csdn:article:by:2094
$9
readCount
$4
1372
*4
$4
HSET
$25
hash:csdn:article:by:2094
$14
articleContent
$41
csdn/linux/1_1_1_7_1504264428.196223.html
*4
$4
HSET
$25
hash:csdn:article:by:2094
$4
date
$16
2015-09-18 06:49
*4
$4
HSET
$25
hash:csdn:article:by:2094
$6
author
$9
frogoscar
*4
$4
HSET
$25
hash:csdn:article:by:2094
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2094
$9
labelList
$58
Linux,后台运行,操作系统,程序员联盟,程序员,
*4
$4
HSET
$25
hash:csdn:article:by:2094
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2094
$10
authorLink
$28
http://my.csdn.net/frogoscar
*4
$4
HSET
$25
hash:csdn:article:by:2094
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2095
$2
id
$4
2095
*4
$4
HSET
$25
hash:csdn:article:by:2095
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2095
$3
url
$55
http://blog.csdn.net/frogoscar/article/details/48618691
*4
$4
HSET
$25
hash:csdn:article:by:2095
$5
title
$44
【Linux探索之旅】第三部分测验题
*4
$4
HSET
$25
hash:csdn:article:by:2095
$4
desc
$81
第三部分测试题，共10题。如果做对5题以下请回炉重造。。。
*4
$4
HSET
$25
hash:csdn:article:by:2095
$9
readCount
$3
942
*4
$4
HSET
$25
hash:csdn:article:by:2095
$14
articleContent
$41
csdn/linux/1_1_1_5_1504264429.209585.html
*4
$4
HSET
$25
hash:csdn:article:by:2095
$4
date
$16
2015-09-21 03:24
*4
$4
HSET
$25
hash:csdn:article:by:2095
$6
author
$9
frogoscar
*4
$4
HSET
$25
hash:csdn:article:by:2095
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2095
$9
labelList
$62
Linux,操作系统,程序员联盟,测试题,ProgrammerLeague,
*4
$4
HSET
$25
hash:csdn:article:by:2095
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2095
$10
authorLink
$28
http://my.csdn.net/frogoscar
*4
$4
HSET
$25
hash:csdn:article:by:2095
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2096
$2
id
$4
2096
*4
$4
HSET
$25
hash:csdn:article:by:2096
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2096
$3
url
$55
http://blog.csdn.net/frogoscar/article/details/50436203
*4
$4
HSET
$25
hash:csdn:article:by:2096
$5
title
$74
【Linux探索之旅】第四部分第三课：文件传输，潇洒同步
*4
$4
HSET
$25
hash:csdn:article:by:2096
$4
desc
$287
我们继续探究Linux的奇幻网络世界。这个网络世界比较特别，也许你已经有所体会：前辈们做了大量努力，靠加密方法来保证网络间传输的数据的安全，以防我们私人的信息泄露，例如密码。


这一课我们来学习文件...
*4
$4
HSET
$25
hash:csdn:article:by:2096
$9
readCount
$4
1208
*4
$4
HSET
$25
hash:csdn:article:by:2096
$14
articleContent
$41
csdn/linux/1_1_1_2_1504264430.193949.html
*4
$4
HSET
$25
hash:csdn:article:by:2096
$4
date
$16
2015-12-30 17:42
*4
$4
HSET
$25
hash:csdn:article:by:2096
$6
author
$9
frogoscar
*4
$4
HSET
$25
hash:csdn:article:by:2096
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2096
$9
labelList
$49
Linux,rsync,ftp,程序员联盟,programmerleague,
*4
$4
HSET
$25
hash:csdn:article:by:2096
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2096
$10
authorLink
$28
http://my.csdn.net/frogoscar
*4
$4
HSET
$25
hash:csdn:article:by:2096
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2097
$2
id
$4
2097
*4
$4
HSET
$25
hash:csdn:article:by:2097
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2097
$3
url
$55
http://blog.csdn.net/frogoscar/article/details/50420568
*4
$4
HSET
$25
hash:csdn:article:by:2097
$5
title
$71
【Linux探索之旅】第四部分第二课：SSH连接，安全快捷
*4
$4
HSET
$25
hash:csdn:article:by:2097
$4
desc
$271
这一课的内容肯定会让你大呼过瘾，也许是《Linux探索之旅》中到目前为止最有意思的课之一。 我们会聊很多内容，会学习如何连接到远程的一台安装有Linux的机器。 我们不仅仅会学习如何远程连接到Linu...
*4
$4
HSET
$25
hash:csdn:article:by:2097
$9
readCount
$4
1486
*4
$4
HSET
$25
hash:csdn:article:by:2097
$14
articleContent
$41
csdn/linux/1_1_1_3_1504264431.418579.html
*4
$4
HSET
$25
hash:csdn:article:by:2097
$4
date
$16
2015-12-28 18:23
*4
$4
HSET
$25
hash:csdn:article:by:2097
$6
author
$9
frogoscar
*4
$4
HSET
$25
hash:csdn:article:by:2097
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2097
$9
labelList
$49
Linux,SSH,putty,程序员联盟,programmerleague,
*4
$4
HSET
$25
hash:csdn:article:by:2097
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2097
$10
authorLink
$28
http://my.csdn.net/frogoscar
*4
$4
HSET
$25
hash:csdn:article:by:2097
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2098
$2
id
$4
2098
*4
$4
HSET
$25
hash:csdn:article:by:2098
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2098
$3
url
$55
http://blog.csdn.net/frogoscar/article/details/47882761
*4
$4
HSET
$25
hash:csdn:article:by:2098
$5
title
$80
【Linux探索之旅】第二部分第五课：用户和权限，有权就任性
*4
$4
HSET
$25
hash:csdn:article:by:2098
$4
desc
$285
今天的标题也挺任性的啊，虽说小编是一个很本分的人（真的吗），起这种标题也是情非得已。

第二部分的前几课我们讲解了终端，命令行，文件和目录，文件操作。都算是Linux的重要基础。

这一课我们来讲一个...
*4
$4
HSET
$25
hash:csdn:article:by:2098
$9
readCount
$4
1841
*4
$4
HSET
$25
hash:csdn:article:by:2098
$14
articleContent
$42
csdn/linux/1_1_1_16_1504264432.483683.html
*4
$4
HSET
$25
hash:csdn:article:by:2098
$4
date
$16
2015-08-23 03:27
*4
$4
HSET
$25
hash:csdn:article:by:2098
$6
author
$9
frogoscar
*4
$4
HSET
$25
hash:csdn:article:by:2098
$12
commentCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2098
$9
labelList
$59
linux,权限,操作系统,ProgrammerLeague,程序员联盟,
*4
$4
HSET
$25
hash:csdn:article:by:2098
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2098
$10
authorLink
$28
http://my.csdn.net/frogoscar
*4
$4
HSET
$25
hash:csdn:article:by:2098
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2099
$2
id
$4
2099
*4
$4
HSET
$25
hash:csdn:article:by:2099
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2099
$3
url
$55
http://blog.csdn.net/frogoscar/article/details/47744335
*4
$4
HSET
$25
hash:csdn:article:by:2099
$5
title
$86
【Linux探索之旅】第二部分第三课：文件和目录，组织不会亏待你
*4
$4
HSET
$25
hash:csdn:article:by:2099
$4
desc
$269
上一次课我们讲了命令行，这将成为伴随我们接下来整个Linux课程的一个重要部分。

大宝啊明天见，命令行啊天天见~

今天的标题里的那句“组织不会亏待你”，不是说Linux社群是个非*法组织，不*良帮...
*4
$4
HSET
$25
hash:csdn:article:by:2099
$9
readCount
$4
1151
*4
$4
HSET
$25
hash:csdn:article:by:2099
$14
articleContent
$41
csdn/linux/1_1_1_18_1504264433.66917.html
*4
$4
HSET
$25
hash:csdn:article:by:2099
$4
date
$16
2015-08-18 04:51
*4
$4
HSET
$25
hash:csdn:article:by:2099
$6
author
$9
frogoscar
*4
$4
HSET
$25
hash:csdn:article:by:2099
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2099
$9
labelList
$62
Linux,操作系统,程序员联盟,程序员,ProgrammerLeague,
*4
$4
HSET
$25
hash:csdn:article:by:2099
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2099
$10
authorLink
$28
http://my.csdn.net/frogoscar
*4
$4
HSET
$25
hash:csdn:article:by:2099
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2100
$2
id
$4
2100
*4
$4
HSET
$25
hash:csdn:article:by:2100
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2100
$3
url
$55
http://blog.csdn.net/frogoscar/article/details/47744777
*4
$4
HSET
$25
hash:csdn:article:by:2100
$5
title
$74
【Linux探索之旅】第二部分第四课：文件操纵，鼓掌之中
*4
$4
HSET
$25
hash:csdn:article:by:2100
$4
desc
$285
既然上一课我们学习了Linux中的文件组织方式，那么现在就该是玩弄，啊不，是操纵它们的时候了。

文件操作有哪些呢？一般就是显示文件内容啦，还有拷贝文件，移动文件，删除文件，等等。

这一课我们还会学...
*4
$4
HSET
$25
hash:csdn:article:by:2100
$9
readCount
$4
1189
*4
$4
HSET
$25
hash:csdn:article:by:2100
$14
articleContent
$42
csdn/linux/1_1_1_17_1504264434.418051.html
*4
$4
HSET
$25
hash:csdn:article:by:2100
$4
date
$16
2015-08-18 05:11
*4
$4
HSET
$25
hash:csdn:article:by:2100
$6
author
$9
frogoscar
*4
$4
HSET
$25
hash:csdn:article:by:2100
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2100
$9
labelList
$62
Linux,操作系统,程序员联盟,程序员,ProgrammerLeague,
*4
$4
HSET
$25
hash:csdn:article:by:2100
$9
likeCount
$1
3
*4
$4
HSET
$25
hash:csdn:article:by:2100
$10
authorLink
$28
http://my.csdn.net/frogoscar
*4
$4
HSET
$25
hash:csdn:article:by:2100
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2101
$2
id
$4
2101
*4
$4
HSET
$25
hash:csdn:article:by:2101
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2101
$3
url
$60
http://blog.csdn.net/doctor_who2004/article/details/52081308
*4
$4
HSET
$25
hash:csdn:article:by:2101
$5
title
$54
java设计模式之单例模式（Singleton pattern）
*4
$4
HSET
$25
hash:csdn:article:by:2101
$4
desc
$141
java设计模式之单例模式（Singleton pattern）


单例模式的定义：
Singleton pattern restricts the instantiation of a class...
*4
$4
HSET
$25
hash:csdn:article:by:2101
$9
readCount
$4
1082
*4
$4
HSET
$25
hash:csdn:article:by:2101
$14
articleContent
$40
csdn/java/1_0_1_0_1504264441.245252.html
*4
$4
HSET
$25
hash:csdn:article:by:2101
$4
date
$16
2016-08-01 12:42
*4
$4
HSET
$25
hash:csdn:article:by:2101
$6
author
$14
doctor_who2004
*4
$4
HSET
$25
hash:csdn:article:by:2101
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2101
$9
labelList
$29
java单例,Singleton pattern,
*4
$4
HSET
$25
hash:csdn:article:by:2101
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2101
$10
authorLink
$33
http://my.csdn.net/doctor_who2004
*4
$4
HSET
$25
hash:csdn:article:by:2101
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2102
$2
id
$4
2102
*4
$4
HSET
$25
hash:csdn:article:by:2102
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2102
$3
url
$58
http://blog.csdn.net/yuzhihui_no1/article/details/43898651
*4
$4
HSET
$25
hash:csdn:article:by:2102
$5
title
$57
Linux内核源码分析--文件系统（四、Bitmap.c）
*4
$4
HSET
$25
hash:csdn:article:by:2102
$4
desc
$283
总结的来说其实Bitmap.c程序就是操作文件系统中的两个位图：i节点位图和逻辑块位图；拿逻辑块位图来说吧，申请一个新的逻辑块时，首先是在8块逻辑块位图中查找一个空闲的比特位，找到以后转换成逻辑块号，...
*4
$4
HSET
$25
hash:csdn:article:by:2102
$9
readCount
$4
1372
*4
$4
HSET
$25
hash:csdn:article:by:2102
$14
articleContent
$41
csdn/linux/1_0_1_0_1504264441.510516.html
*4
$4
HSET
$25
hash:csdn:article:by:2102
$4
date
$16
2015-02-21 16:17
*4
$4
HSET
$25
hash:csdn:article:by:2102
$6
author
$12
YuZhiHui_No1
*4
$4
HSET
$25
hash:csdn:article:by:2102
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2102
$9
labelList
$57
Linux内核源码,操作系统,文件系统,高速缓存,
*4
$4
HSET
$25
hash:csdn:article:by:2102
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2102
$10
authorLink
$31
http://my.csdn.net/YuZhiHui_No1
*4
$4
HSET
$25
hash:csdn:article:by:2102
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2103
$2
id
$4
2103
*4
$4
HSET
$25
hash:csdn:article:by:2103
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2103
$3
url
$60
http://blog.csdn.net/doctor_who2004/article/details/54234127
*4
$4
HSET
$25
hash:csdn:article:by:2103
$5
title
$70
接口型设计模式（Interface patterns）之adapter（适配器）
*4
$4
HSET
$25
hash:csdn:article:by:2103
$4
desc
$133
接口型设计模式（Interface patterns）之adapter（适配器）


The intent of
ADAPTER is to provide the interface that a ...
*4
$4
HSET
$25
hash:csdn:article:by:2103
$9
readCount
$3
320
*4
$4
HSET
$25
hash:csdn:article:by:2103
$14
articleContent
$40
csdn/java/1_0_1_1_1504264442.335647.html
*4
$4
HSET
$25
hash:csdn:article:by:2103
$4
date
$16
2017-01-08 17:44
*4
$4
HSET
$25
hash:csdn:article:by:2103
$6
author
$14
doctor_who2004
*4
$4
HSET
$25
hash:csdn:article:by:2103
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2103
$9
labelList
$32
adapter pattern,适配器模式,
*4
$4
HSET
$25
hash:csdn:article:by:2103
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2103
$10
authorLink
$33
http://my.csdn.net/doctor_who2004
*4
$4
HSET
$25
hash:csdn:article:by:2103
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2104
$2
id
$4
2104
*4
$4
HSET
$25
hash:csdn:article:by:2104
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2104
$3
url
$58
http://blog.csdn.net/yuzhihui_no1/article/details/43231869
*4
$4
HSET
$25
hash:csdn:article:by:2104
$5
title
$39
Linux 新内核中主次设备号范围
*4
$4
HSET
$25
hash:csdn:article:by:2104
$4
desc
$275
作者：李强,华清远见嵌入式学院讲师。

     设备驱动中，设备号设一个很重要的概念和变量。不论是主设备号，还是次设备号，在设备驱动中都占据了很重要的地位。那么他在Kernel中是如何操作的？这...
*4
$4
HSET
$25
hash:csdn:article:by:2104
$9
readCount
$3
631
*4
$4
HSET
$25
hash:csdn:article:by:2104
$14
articleContent
$41
csdn/linux/1_0_1_5_1504264442.518723.html
*4
$4
HSET
$25
hash:csdn:article:by:2104
$4
date
$16
2015-01-28 15:58
*4
$4
HSET
$25
hash:csdn:article:by:2104
$6
author
$12
YuZhiHui_No1
*4
$4
HSET
$25
hash:csdn:article:by:2104
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2104
$9
labelList
$43
操作系统,内存管理,驱动,设备号,
*4
$4
HSET
$25
hash:csdn:article:by:2104
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2104
$10
authorLink
$31
http://my.csdn.net/YuZhiHui_No1
*4
$4
HSET
$25
hash:csdn:article:by:2104
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2105
$2
id
$4
2105
*4
$4
HSET
$25
hash:csdn:article:by:2105
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2105
$3
url
$60
http://blog.csdn.net/doctor_who2004/article/details/54233834
*4
$4
HSET
$25
hash:csdn:article:by:2105
$5
title
$46
接口型设计模式（Interface  patterns）
*4
$4
HSET
$25
hash:csdn:article:by:2105
$4
desc
$122
接口型设计模式（Interface  patterns）
Interface-oriented patterns address contexts in which you need to defin...
*4
$4
HSET
$25
hash:csdn:article:by:2105
$9
readCount
$3
359
*4
$4
HSET
$25
hash:csdn:article:by:2105
$14
articleContent
$40
csdn/java/1_0_1_2_1504264443.454268.html
*4
$4
HSET
$25
hash:csdn:article:by:2105
$4
date
$16
2017-01-08 15:27
*4
$4
HSET
$25
hash:csdn:article:by:2105
$6
author
$14
doctor_who2004
*4
$4
HSET
$25
hash:csdn:article:by:2105
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2105
$9
labelList
$13
设计模式,
*4
$4
HSET
$25
hash:csdn:article:by:2105
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2105
$10
authorLink
$33
http://my.csdn.net/doctor_who2004
*4
$4
HSET
$25
hash:csdn:article:by:2105
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2106
$2
id
$4
2106
*4
$4
HSET
$25
hash:csdn:article:by:2106
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2106
$3
url
$58
http://blog.csdn.net/yuzhihui_no1/article/details/42806245
*4
$4
HSET
$25
hash:csdn:article:by:2106
$5
title
$35
BCD码转换成二进制和ASCII码
*4
$4
HSET
$25
hash:csdn:article:by:2106
$4
desc
$209
BCD码转换成二进制和ASCII码；用BCD码表示：十位上的十进制数为 2 == BCD码表示为 0010；个位上的十进制数9 === BCD码表示为 1001；所以总的来说 十进制数 29 用BCD...
*4
$4
HSET
$25
hash:csdn:article:by:2106
$9
readCount
$4
3980
*4
$4
HSET
$25
hash:csdn:article:by:2106
$14
articleContent
$41
csdn/linux/1_0_1_9_1504264443.488212.html
*4
$4
HSET
$25
hash:csdn:article:by:2106
$4
date
$16
2015-01-17 16:32
*4
$4
HSET
$25
hash:csdn:article:by:2106
$6
author
$12
YuZhiHui_No1
*4
$4
HSET
$25
hash:csdn:article:by:2106
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2106
$9
labelList
$39
操作系统,汇编语言,进制转换,
*4
$4
HSET
$25
hash:csdn:article:by:2106
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2106
$10
authorLink
$31
http://my.csdn.net/YuZhiHui_No1
*4
$4
HSET
$25
hash:csdn:article:by:2106
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2107
$2
id
$4
2107
*4
$4
HSET
$25
hash:csdn:article:by:2107
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2107
$3
url
$58
http://blog.csdn.net/yuzhihui_no1/article/details/42713439
*4
$4
HSET
$25
hash:csdn:article:by:2107
$5
title
$48
C程序代码中内嵌as汇编（三、跳转）
*4
$4
HSET
$25
hash:csdn:article:by:2107
$4
desc
$253
在内联汇编中使用跳转语句是非常常见的，比如：比较两个数，返回较大数时，就会用到跳转；先看下汇编和运行结果，然后再一步步分析下：
                      

        运行结果...
*4
$4
HSET
$25
hash:csdn:article:by:2107
$9
readCount
$4
1139
*4
$4
HSET
$25
hash:csdn:article:by:2107
$14
articleContent
$41
csdn/linux/1_0_1_11_1504264444.63901.html
*4
$4
HSET
$25
hash:csdn:article:by:2107
$4
date
$16
2015-01-14 18:16
*4
$4
HSET
$25
hash:csdn:article:by:2107
$6
author
$12
YuZhiHui_No1
*4
$4
HSET
$25
hash:csdn:article:by:2107
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2107
$9
labelList
$46
操作系统,汇编语言,C代码内嵌汇编,
*4
$4
HSET
$25
hash:csdn:article:by:2107
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2107
$10
authorLink
$31
http://my.csdn.net/YuZhiHui_No1
*4
$4
HSET
$25
hash:csdn:article:by:2107
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2108
$2
id
$4
2108
*4
$4
HSET
$25
hash:csdn:article:by:2108
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2108
$3
url
$58
http://blog.csdn.net/yuzhihui_no1/article/details/42712297
*4
$4
HSET
$25
hash:csdn:article:by:2108
$5
title
$51
C程序代码中内嵌as汇编（二、占位符）
*4
$4
HSET
$25
hash:csdn:article:by:2108
$4
desc
$175
本篇blog只给几个例题来进行快速学习内嵌as汇编。
        第一、输入参数中包含输出参数
 #include
 
 int main(void)
 {
     char string1[]...
*4
$4
HSET
$25
hash:csdn:article:by:2108
$9
readCount
$3
915
*4
$4
HSET
$25
hash:csdn:article:by:2108
$14
articleContent
$41
csdn/linux/1_0_1_12_1504264445.78145.html
*4
$4
HSET
$25
hash:csdn:article:by:2108
$4
date
$16
2015-01-14 16:59
*4
$4
HSET
$25
hash:csdn:article:by:2108
$6
author
$12
YuZhiHui_No1
*4
$4
HSET
$25
hash:csdn:article:by:2108
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2108
$9
labelList
$46
操作系统,汇编语言,C代码内嵌汇编,
*4
$4
HSET
$25
hash:csdn:article:by:2108
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2108
$10
authorLink
$31
http://my.csdn.net/YuZhiHui_No1
*4
$4
HSET
$25
hash:csdn:article:by:2108
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2109
$2
id
$4
2109
*4
$4
HSET
$25
hash:csdn:article:by:2109
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2109
$3
url
$58
http://blog.csdn.net/yuzhihui_no1/article/details/42744151
*4
$4
HSET
$25
hash:csdn:article:by:2109
$5
title
$51
C程序代码中内嵌as汇编（四、宏函数）
*4
$4
HSET
$25
hash:csdn:article:by:2109
$4
desc
$256
先来回忆下C语言中宏是怎么定义的，最基本的是定义常量：#define MAX_LEN 1024  这是最简单的常数宏定义，其中宏名按规定是要大写的，宏名在预编译时会由后面的值替代掉（预编译四大步骤：1...
*4
$4
HSET
$25
hash:csdn:article:by:2109
$9
readCount
$4
1029
*4
$4
HSET
$25
hash:csdn:article:by:2109
$14
articleContent
$42
csdn/linux/1_0_1_10_1504264446.797558.html
*4
$4
HSET
$25
hash:csdn:article:by:2109
$4
date
$16
2015-01-16 15:15
*4
$4
HSET
$25
hash:csdn:article:by:2109
$6
author
$12
YuZhiHui_No1
*4
$4
HSET
$25
hash:csdn:article:by:2109
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2109
$9
labelList
$46
操作系统,汇编语言,C代码内嵌汇编,
*4
$4
HSET
$25
hash:csdn:article:by:2109
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2109
$10
authorLink
$31
http://my.csdn.net/YuZhiHui_No1
*4
$4
HSET
$25
hash:csdn:article:by:2109
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2110
$2
id
$4
2110
*4
$4
HSET
$25
hash:csdn:article:by:2110
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2110
$3
url
$58
http://blog.csdn.net/yuzhihui_no1/article/details/42584283
*4
$4
HSET
$25
hash:csdn:article:by:2110
$5
title
$43
as汇编基础程序设计--gdb调试汇编
*4
$4
HSET
$25
hash:csdn:article:by:2110
$4
desc
$169
开始命令：gdb  test；
        设置断点：break *_start  + 1（cpu运行到 _start+1 的地址上会停止，break可以简写b）
        开始运行：run...
*4
$4
HSET
$25
hash:csdn:article:by:2110
$9
readCount
$3
924
*4
$4
HSET
$25
hash:csdn:article:by:2110
$14
articleContent
$42
csdn/linux/1_0_1_16_1504264447.632803.html
*4
$4
HSET
$25
hash:csdn:article:by:2110
$4
date
$16
2015-01-10 17:08
*4
$4
HSET
$25
hash:csdn:article:by:2110
$6
author
$12
YuZhiHui_No1
*4
$4
HSET
$25
hash:csdn:article:by:2110
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2110
$9
labelList
$40
操作系统,汇编语言,ATT汇编,gdb,
*4
$4
HSET
$25
hash:csdn:article:by:2110
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2110
$10
authorLink
$31
http://my.csdn.net/YuZhiHui_No1
*4
$4
HSET
$25
hash:csdn:article:by:2110
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2111
$2
id
$4
2111
*4
$4
HSET
$25
hash:csdn:article:by:2111
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2111
$3
url
$58
http://blog.csdn.net/yuzhihui_no1/article/details/43058405
*4
$4
HSET
$25
hash:csdn:article:by:2111
$5
title
$67
Linux内核源码分析--内存管理（二、函数实现技巧）
*4
$4
HSET
$25
hash:csdn:article:by:2111
$4
desc
$303
仔细的分析了一下各个内存管理函数的实现，发现里面涉及到了几个技巧，如果知道了这几个技巧，那么阅读内存管理源码将会事半功倍（主要是这几个技巧在几个函数中都出现过），当然也会选择性的分析几个比较重要的函数...
*4
$4
HSET
$25
hash:csdn:article:by:2111
$9
readCount
$4
1269
*4
$4
HSET
$25
hash:csdn:article:by:2111
$14
articleContent
$41
csdn/linux/1_0_1_6_1504264448.635831.html
*4
$4
HSET
$25
hash:csdn:article:by:2111
$4
date
$16
2015-01-23 17:33
*4
$4
HSET
$25
hash:csdn:article:by:2111
$6
author
$12
YuZhiHui_No1
*4
$4
HSET
$25
hash:csdn:article:by:2111
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2111
$9
labelList
$46
Linux内核,内存管理,分页机制,c语言,
*4
$4
HSET
$25
hash:csdn:article:by:2111
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2111
$10
authorLink
$31
http://my.csdn.net/YuZhiHui_No1
*4
$4
HSET
$25
hash:csdn:article:by:2111
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2112
$2
id
$4
2112
*4
$4
HSET
$25
hash:csdn:article:by:2112
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2112
$3
url
$58
http://blog.csdn.net/yuzhihui_no1/article/details/43021405
*4
$4
HSET
$25
hash:csdn:article:by:2112
$5
title
$61
Linux内核源码分析--内存管理（一、分页机制）
*4
$4
HSET
$25
hash:csdn:article:by:2112
$4
desc
$263
最开始的地方是在head汇编中，如果看boot中那三个汇编的应该记得（那三个汇编还是比较重要的）。首先是分页机制，在CR0的第31位(PG位)置1表示开启分页机制，顺便也介绍下其他几个控制寄存器：CR...
*4
$4
HSET
$25
hash:csdn:article:by:2112
$9
readCount
$4
1676
*4
$4
HSET
$25
hash:csdn:article:by:2112
$14
articleContent
$40
csdn/linux/1_0_1_7_1504264449.53965.html
*4
$4
HSET
$25
hash:csdn:article:by:2112
$4
date
$16
2015-01-22 16:30
*4
$4
HSET
$25
hash:csdn:article:by:2112
$6
author
$12
YuZhiHui_No1
*4
$4
HSET
$25
hash:csdn:article:by:2112
$12
commentCount
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2112
$9
labelList
$51
Linux内核,操作系统,内存管理,分页机制,
*4
$4
HSET
$25
hash:csdn:article:by:2112
$9
likeCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2112
$10
authorLink
$31
http://my.csdn.net/YuZhiHui_No1
*4
$4
HSET
$25
hash:csdn:article:by:2112
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2113
$2
id
$4
2113
*4
$4
HSET
$25
hash:csdn:article:by:2113
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2113
$3
url
$58
http://blog.csdn.net/yuzhihui_no1/article/details/42888237
*4
$4
HSET
$25
hash:csdn:article:by:2113
$5
title
$73
Linux内核源码分析--系统时间初始化（kernel_mktime()函数）
*4
$4
HSET
$25
hash:csdn:article:by:2113
$4
desc
$259
从boot文件中的几个汇编程序执行后跳转到init文件中的main.c程序开始继续执行，该main.c函数式为系统运行的环境进行初始化的。首先来看系统时间的初始化（因为系统时间的初始化开始程序就在in...
*4
$4
HSET
$25
hash:csdn:article:by:2113
$9
readCount
$4
1347
*4
$4
HSET
$25
hash:csdn:article:by:2113
$14
articleContent
$41
csdn/linux/1_0_1_8_1504264450.684202.html
*4
$4
HSET
$25
hash:csdn:article:by:2113
$4
date
$16
2015-01-19 23:14
*4
$4
HSET
$25
hash:csdn:article:by:2113
$6
author
$12
YuZhiHui_No1
*4
$4
HSET
$25
hash:csdn:article:by:2113
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2113
$9
labelList
$46
操作系统,Linux内核,c语言,汇编语言,
*4
$4
HSET
$25
hash:csdn:article:by:2113
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2113
$10
authorLink
$31
http://my.csdn.net/YuZhiHui_No1
*4
$4
HSET
$25
hash:csdn:article:by:2113
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2114
$2
id
$4
2114
*4
$4
HSET
$25
hash:csdn:article:by:2114
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2114
$3
url
$58
http://blog.csdn.net/yuzhihui_no1/article/details/43734663
*4
$4
HSET
$25
hash:csdn:article:by:2114
$5
title
$40
全面解析C语言中可变参数列表
*4
$4
HSET
$25
hash:csdn:article:by:2114
$4
desc
$291
全面解析c语言中可变参数列表问题：1、大众版：大家习惯的使用方式；2、真实版：真正的使用方式；3、实际原理：具体原理，本质；4、自己实现可变参数列表：理解本质后，自己用自己的方法来实现可变参数列表；5...
*4
$4
HSET
$25
hash:csdn:article:by:2114
$9
readCount
$4
3139
*4
$4
HSET
$25
hash:csdn:article:by:2114
$14
articleContent
$41
csdn/linux/1_0_1_1_1504264451.726431.html
*4
$4
HSET
$25
hash:csdn:article:by:2114
$4
date
$16
2015-02-11 15:27
*4
$4
HSET
$25
hash:csdn:article:by:2114
$6
author
$12
YuZhiHui_No1
*4
$4
HSET
$25
hash:csdn:article:by:2114
$12
commentCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2114
$9
labelList
$57
Linux内核源码,可变参数列表,内存分配,指针,
*4
$4
HSET
$25
hash:csdn:article:by:2114
$9
likeCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2114
$10
authorLink
$31
http://my.csdn.net/YuZhiHui_No1
*4
$4
HSET
$25
hash:csdn:article:by:2114
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2115
$2
id
$4
2115
*4
$4
HSET
$25
hash:csdn:article:by:2115
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2115
$3
url
$58
http://blog.csdn.net/yuzhihui_no1/article/details/43703153
*4
$4
HSET
$25
hash:csdn:article:by:2115
$5
title
$57
Linux内核源码分析--文件系统（三、buffer.c）
*4
$4
HSET
$25
hash:csdn:article:by:2115
$4
desc
$267
前面已经大概的分析了下高速缓存区相关知识，这里再来分析下几个重要的函数；1、清缓存：把缓存区数据和设备进行同步；   2、缓存块插入到双链表/hash链表中，从双链表/hash链表中删除缓存块；   ...
*4
$4
HSET
$25
hash:csdn:article:by:2115
$9
readCount
$4
1425
*4
$4
HSET
$25
hash:csdn:article:by:2115
$14
articleContent
$41
csdn/linux/1_0_1_2_1504264452.832813.html
*4
$4
HSET
$25
hash:csdn:article:by:2115
$4
date
$16
2015-02-10 14:52
*4
$4
HSET
$25
hash:csdn:article:by:2115
$6
author
$12
YuZhiHui_No1
*4
$4
HSET
$25
hash:csdn:article:by:2115
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2115
$9
labelList
$57
Linux内核源码,操作系统,文件系统,高速缓存,
*4
$4
HSET
$25
hash:csdn:article:by:2115
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2115
$10
authorLink
$31
http://my.csdn.net/YuZhiHui_No1
*4
$4
HSET
$25
hash:csdn:article:by:2115
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2116
$2
id
$4
2116
*4
$4
HSET
$25
hash:csdn:article:by:2116
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2116
$3
url
$58
http://blog.csdn.net/yuzhihui_no1/article/details/43677663
*4
$4
HSET
$25
hash:csdn:article:by:2116
$5
title
$64
Linux内核源码分析--文件系统（二、高速缓存区）
*4
$4
HSET
$25
hash:csdn:article:by:2116
$4
desc
$291
从块设备中读取数据是很慢的（I/O操作相对于内存操作来说是比较慢的），所以为了不让CPU浪费宝贵的时间来等待读取块设备上的数据，就在内存中开辟了一段内存地址用来预获取最近使用过的多块设备块上的数据。当...
*4
$4
HSET
$25
hash:csdn:article:by:2116
$9
readCount
$4
1759
*4
$4
HSET
$25
hash:csdn:article:by:2116
$14
articleContent
$41
csdn/linux/1_0_1_3_1504264453.944361.html
*4
$4
HSET
$25
hash:csdn:article:by:2116
$4
date
$16
2015-02-09 22:14
*4
$4
HSET
$25
hash:csdn:article:by:2116
$6
author
$12
YuZhiHui_No1
*4
$4
HSET
$25
hash:csdn:article:by:2116
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2116
$9
labelList
$57
Linux内核源码,操作系统,文件系统,高速缓存,
*4
$4
HSET
$25
hash:csdn:article:by:2116
$9
likeCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2116
$10
authorLink
$31
http://my.csdn.net/YuZhiHui_No1
*4
$4
HSET
$25
hash:csdn:article:by:2116
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2117
$2
id
$4
2117
*4
$4
HSET
$25
hash:csdn:article:by:2117
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2117
$3
url
$58
http://blog.csdn.net/yuzhihui_no1/article/details/43601757
*4
$4
HSET
$25
hash:csdn:article:by:2117
$5
title
$49
memcopy()函数c语言实现和汇编实现比较
*4
$4
HSET
$25
hash:csdn:article:by:2117
$4
desc
$245
首先来看汇编实现的memcpy函数，是利用宏函数来实现的，用汇编指令rep和movsb配合循环把数据以字节为单位从ds:esi传送到es:edi中，把循环次数放在ecx中。当然这样拷贝的才是真正的内存...
*4
$4
HSET
$25
hash:csdn:article:by:2117
$9
readCount
$4
1035
*4
$4
HSET
$25
hash:csdn:article:by:2117
$14
articleContent
$41
csdn/linux/1_0_1_4_1504264454.252277.html
*4
$4
HSET
$25
hash:csdn:article:by:2117
$4
date
$16
2015-02-07 11:06
*4
$4
HSET
$25
hash:csdn:article:by:2117
$6
author
$12
YuZhiHui_No1
*4
$4
HSET
$25
hash:csdn:article:by:2117
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2117
$9
labelList
$57
Linux内核,C中内嵌汇编,内存拷贝,c语言,面试,
*4
$4
HSET
$25
hash:csdn:article:by:2117
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2117
$10
authorLink
$31
http://my.csdn.net/YuZhiHui_No1
*4
$4
HSET
$25
hash:csdn:article:by:2117
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2118
$2
id
$4
2118
*4
$4
HSET
$25
hash:csdn:article:by:2118
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2118
$3
url
$57
http://blog.csdn.net/wangjian_an/article/details/52431185
*4
$4
HSET
$25
hash:csdn:article:by:2118
$5
title
$106
JavaEE框架——Springmvc入门(注解URL核心类详解、文件上传和下载）、和Spring的整合
*4
$4
HSET
$25
hash:csdn:article:by:2118
$4
desc
$185
一、简介：

Spring MVC属于SpringFrameWork的后续产品，已经融合在Spring Web Flow里面。Spring 框架提供了构建 Web 应用程序的全功能 MVC 模块。使用...
*4
$4
HSET
$25
hash:csdn:article:by:2118
$9
readCount
$4
2302
*4
$4
HSET
$25
hash:csdn:article:by:2118
$14
articleContent
$40
csdn/java/1_0_1_0_1504264454.950341.html
*4
$4
HSET
$25
hash:csdn:article:by:2118
$4
date
$16
2016-09-04 11:33
*4
$4
HSET
$25
hash:csdn:article:by:2118
$6
author
$11
wangjian_an
*4
$4
HSET
$25
hash:csdn:article:by:2118
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2118
$9
labelList
$45
spring mvc,web开发,开发框架,mvc,spring,
*4
$4
HSET
$25
hash:csdn:article:by:2118
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2118
$10
authorLink
$30
http://my.csdn.net/wangjian_an
*4
$4
HSET
$25
hash:csdn:article:by:2118
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2119
$2
id
$4
2119
*4
$4
HSET
$25
hash:csdn:article:by:2119
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2119
$3
url
$58
http://blog.csdn.net/yuzhihui_no1/article/details/42709871
*4
$4
HSET
$25
hash:csdn:article:by:2119
$5
title
$54
C程序代码中内嵌as汇编（一、基础知识）
*4
$4
HSET
$25
hash:csdn:article:by:2119
$4
desc
$293
汇编代码是最接近机器码，所以也是执行效率最高的，在操作系统中有将近10%的关键性代码是由汇编编写的，而还有部分代码是由C代码嵌入汇编构成的。C代码中嵌入汇编可以提高程序的执行效率，同时这种程序还既有高...
*4
$4
HSET
$25
hash:csdn:article:by:2119
$9
readCount
$3
917
*4
$4
HSET
$25
hash:csdn:article:by:2119
$14
articleContent
$42
csdn/linux/1_0_1_13_1504264455.244668.html
*4
$4
HSET
$25
hash:csdn:article:by:2119
$4
date
$16
2015-01-14 14:51
*4
$4
HSET
$25
hash:csdn:article:by:2119
$6
author
$12
YuZhiHui_No1
*4
$4
HSET
$25
hash:csdn:article:by:2119
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2119
$9
labelList
$43
操作系统,汇编语言,C中内嵌汇编,
*4
$4
HSET
$25
hash:csdn:article:by:2119
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2119
$10
authorLink
$31
http://my.csdn.net/YuZhiHui_No1
*4
$4
HSET
$25
hash:csdn:article:by:2119
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2120
$2
id
$4
2120
*4
$4
HSET
$25
hash:csdn:article:by:2120
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2120
$3
url
$57
http://blog.csdn.net/wangjian_an/article/details/52336427
*4
$4
HSET
$25
hash:csdn:article:by:2120
$5
title
$87
JavaEE框架——hibernate的使用（关于hibernate事务的必须开启的问题）
*4
$4
HSET
$25
hash:csdn:article:by:2120
$4
desc
$210
一、与数据库的交互（增删改查）
注意：1.写hql语言是是对于对象操作，而不是表数据
            2.注意hibernate中的缓存

1.Hibernate 查询方式

     Hib...
*4
$4
HSET
$25
hash:csdn:article:by:2120
$9
readCount
$4
2490
*4
$4
HSET
$25
hash:csdn:article:by:2120
$14
articleContent
$41
csdn/java/1_0_1_12_1504264455.710939.html
*4
$4
HSET
$25
hash:csdn:article:by:2120
$4
date
$16
2016-08-27 19:15
*4
$4
HSET
$25
hash:csdn:article:by:2120
$6
author
$11
wangjian_an
*4
$4
HSET
$25
hash:csdn:article:by:2120
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2120
$9
labelList
$42
java ee,hibernate,框架,管理,数据库,
*4
$4
HSET
$25
hash:csdn:article:by:2120
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2120
$10
authorLink
$30
http://my.csdn.net/wangjian_an
*4
$4
HSET
$25
hash:csdn:article:by:2120
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2121
$2
id
$4
2121
*4
$4
HSET
$25
hash:csdn:article:by:2121
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2121
$3
url
$58
http://blog.csdn.net/yuzhihui_no1/article/details/42556233
*4
$4
HSET
$25
hash:csdn:article:by:2121
$5
title
$53
as汇编基础程序设计--调用C库和内存访问
*4
$4
HSET
$25
hash:csdn:article:by:2121
$4
desc
$207
as汇编中的内存访问：movl (%ebx), eax（把ebx寄存器指向的地址上的值传送给eax）；movl 4(%ebx), eax（把ebx指向的地址的位置往上偏移4字节的地址上的值传送给eax...
*4
$4
HSET
$25
hash:csdn:article:by:2121
$9
readCount
$3
984
*4
$4
HSET
$25
hash:csdn:article:by:2121
$14
articleContent
$42
csdn/linux/1_0_1_17_1504264456.360531.html
*4
$4
HSET
$25
hash:csdn:article:by:2121
$4
date
$16
2015-01-09 16:13
*4
$4
HSET
$25
hash:csdn:article:by:2121
$6
author
$12
YuZhiHui_No1
*4
$4
HSET
$25
hash:csdn:article:by:2121
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2121
$9
labelList
$30
操作系统,汇编语言,ATT,
*4
$4
HSET
$25
hash:csdn:article:by:2121
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2121
$10
authorLink
$31
http://my.csdn.net/YuZhiHui_No1
*4
$4
HSET
$25
hash:csdn:article:by:2121
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2122
$2
id
$4
2122
*4
$4
HSET
$25
hash:csdn:article:by:2122
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2122
$3
url
$56
http://blog.csdn.net/gavin_john/article/details/51730093
*4
$4
HSET
$25
hash:csdn:article:by:2122
$5
title
$27
Struts1.3——Struts入门
*4
$4
HSET
$25
hash:csdn:article:by:2122
$4
desc
$120
本文介绍了struts的入门知识，通过手工配置实现一个struts项目介绍了struts的工作原理和流程
*4
$4
HSET
$25
hash:csdn:article:by:2122
$9
readCount
$4
5133
*4
$4
HSET
$25
hash:csdn:article:by:2122
$14
articleContent
$40
csdn/java/1_0_1_5_1504264456.703628.html
*4
$4
HSET
$25
hash:csdn:article:by:2122
$4
date
$16
2016-06-21 20:48
*4
$4
HSET
$25
hash:csdn:article:by:2122
$6
author
$7
ggGavin
*4
$4
HSET
$25
hash:csdn:article:by:2122
$12
commentCount
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2122
$9
labelList
$21
struts,mvc,web框架,
*4
$4
HSET
$25
hash:csdn:article:by:2122
$9
likeCount
$1
5
*4
$4
HSET
$25
hash:csdn:article:by:2122
$10
authorLink
$26
http://my.csdn.net/ggGavin
*4
$4
HSET
$25
hash:csdn:article:by:2122
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2123
$2
id
$4
2123
*4
$4
HSET
$25
hash:csdn:article:by:2123
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2123
$3
url
$58
http://blog.csdn.net/yuzhihui_no1/article/details/42394763
*4
$4
HSET
$25
hash:csdn:article:by:2123
$5
title
$36
x86架构保护模式下界限问题
*4
$4
HSET
$25
hash:csdn:article:by:2123
$4
desc
$257
在保护模式下有很多界限问题，下面集中来看下：
        若段界限是0xFFFFF，粒度是4KB，那么实际界限值是多少？若粒度G=0，那么段界限就是实际的界限值；但粒度为4KB，那么界限值就是：（...
*4
$4
HSET
$25
hash:csdn:article:by:2123
$9
readCount
$3
821
*4
$4
HSET
$25
hash:csdn:article:by:2123
$14
articleContent
$42
csdn/linux/1_0_1_19_1504264456.792565.html
*4
$4
HSET
$25
hash:csdn:article:by:2123
$4
date
$16
2015-01-04 17:13
*4
$4
HSET
$25
hash:csdn:article:by:2123
$6
author
$12
YuZhiHui_No1
*4
$4
HSET
$25
hash:csdn:article:by:2123
$12
commentCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2123
$9
labelList
$30
操作系统,x86汇编,汇编,
*4
$4
HSET
$25
hash:csdn:article:by:2123
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2123
$10
authorLink
$31
http://my.csdn.net/YuZhiHui_No1
*4
$4
HSET
$25
hash:csdn:article:by:2123
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2124
$2
id
$4
2124
*4
$4
HSET
$25
hash:csdn:article:by:2124
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2124
$3
url
$57
http://blog.csdn.net/wangjian_an/article/details/52354751
*4
$4
HSET
$25
hash:csdn:article:by:2124
$5
title
$48
JavaEE框架——hibernate框架的综合使用
*4
$4
HSET
$25
hash:csdn:article:by:2124
$4
desc
$205
hibernate框架的综合使用——通过使用hibernate框架多数据库的单表和多表进行增删改查，下面是详细代码1.先通过蚂蚁搬家Ant建立数据库 
 createTables.sqlCREATE ...
*4
$4
HSET
$25
hash:csdn:article:by:2124
$9
readCount
$3
775
*4
$4
HSET
$25
hash:csdn:article:by:2124
$14
articleContent
$41
csdn/java/1_0_1_13_1504264457.873037.html
*4
$4
HSET
$25
hash:csdn:article:by:2124
$4
date
$16
2016-08-29 16:58
*4
$4
HSET
$25
hash:csdn:article:by:2124
$6
author
$11
wangjian_an
*4
$4
HSET
$25
hash:csdn:article:by:2124
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2124
$9
labelList
$35
hibernate,java ee,数据库,框架,
*4
$4
HSET
$25
hash:csdn:article:by:2124
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2124
$10
authorLink
$30
http://my.csdn.net/wangjian_an
*4
$4
HSET
$25
hash:csdn:article:by:2124
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2125
$2
id
$4
2125
*4
$4
HSET
$25
hash:csdn:article:by:2125
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2125
$3
url
$58
http://blog.csdn.net/yuzhihui_no1/article/details/42527189
*4
$4
HSET
$25
hash:csdn:article:by:2125
$5
title
$43
AT&T风格的基础汇编程序--Hello word
*4
$4
HSET
$25
hash:csdn:article:by:2125
$4
desc
$257
为了看懂Linux内核源代码，所以不得不重新学习下汇编语言。汇编语言大体可以分为两个风格，官方的intel风格和unix系列的AT&T风格。Intel风格汇编是比较常见的，一般大学时会学习点基础的（至...
*4
$4
HSET
$25
hash:csdn:article:by:2125
$9
readCount
$3
941
*4
$4
HSET
$25
hash:csdn:article:by:2125
$14
articleContent
$42
csdn/linux/1_0_1_18_1504264457.971087.html
*4
$4
HSET
$25
hash:csdn:article:by:2125
$4
date
$16
2015-01-08 17:10
*4
$4
HSET
$25
hash:csdn:article:by:2125
$6
author
$12
YuZhiHui_No1
*4
$4
HSET
$25
hash:csdn:article:by:2125
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2125
$9
labelList
$42
操作系统,linux内核,汇编语言,ATT,
*4
$4
HSET
$25
hash:csdn:article:by:2125
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2125
$10
authorLink
$31
http://my.csdn.net/YuZhiHui_No1
*4
$4
HSET
$25
hash:csdn:article:by:2125
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2126
$2
id
$4
2126
*4
$4
HSET
$25
hash:csdn:article:by:2126
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2126
$3
url
$56
http://blog.csdn.net/gavin_john/article/details/52016035
*4
$4
HSET
$25
hash:csdn:article:by:2126
$5
title
$58
Struts1.3——DispatchAction、DynamicForm和全局跳转
*4
$4
HSET
$25
hash:csdn:article:by:2126
$4
desc
$80
本文介绍了Struts1中的DispatchAction、DynamicForm和全局跳转的用法
*4
$4
HSET
$25
hash:csdn:article:by:2126
$9
readCount
$4
1397
*4
$4
HSET
$25
hash:csdn:article:by:2126
$14
articleContent
$40
csdn/java/1_0_1_1_1504264458.838667.html
*4
$4
HSET
$25
hash:csdn:article:by:2126
$4
date
$16
2016-07-24 20:33
*4
$4
HSET
$25
hash:csdn:article:by:2126
$6
author
$7
ggGavin
*4
$4
HSET
$25
hash:csdn:article:by:2126
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2126
$9
labelList
$14
struts,框架,
*4
$4
HSET
$25
hash:csdn:article:by:2126
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2126
$10
authorLink
$26
http://my.csdn.net/ggGavin
*4
$4
HSET
$25
hash:csdn:article:by:2126
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2127
$2
id
$4
2127
*4
$4
HSET
$25
hash:csdn:article:by:2127
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2127
$3
url
$58
http://blog.csdn.net/yuzhihui_no1/article/details/42706871
*4
$4
HSET
$25
hash:csdn:article:by:2127
$5
title
$67
as汇编基础程序设计--函数设计及函数堆栈传参问题
*4
$4
HSET
$25
hash:csdn:article:by:2127
$4
desc
$221
其实上面的重点是 .type print_fun, @function ，这是定义函数的方式，后面一般接着是函数入口地址标识符；
函数传参问题：
        在as汇编和C语言中函数调用时传参的标...
*4
$4
HSET
$25
hash:csdn:article:by:2127
$9
readCount
$3
903
*4
$4
HSET
$25
hash:csdn:article:by:2127
$14
articleContent
$42
csdn/linux/1_0_1_14_1504264459.220957.html
*4
$4
HSET
$25
hash:csdn:article:by:2127
$4
date
$16
2015-01-14 10:57
*4
$4
HSET
$25
hash:csdn:article:by:2127
$6
author
$12
YuZhiHui_No1
*4
$4
HSET
$25
hash:csdn:article:by:2127
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2127
$9
labelList
$48
操作系统,汇编语言,ATT汇编,Linux内核,
*4
$4
HSET
$25
hash:csdn:article:by:2127
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2127
$10
authorLink
$31
http://my.csdn.net/YuZhiHui_No1
*4
$4
HSET
$25
hash:csdn:article:by:2127
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2128
$2
id
$4
2128
*4
$4
HSET
$25
hash:csdn:article:by:2128
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2128
$3
url
$56
http://blog.csdn.net/gavin_john/article/details/51742646
*4
$4
HSET
$25
hash:csdn:article:by:2128
$5
title
$54
Struts1.3——使用MyEclipse集成工具开发Struts
*4
$4
HSET
$25
hash:csdn:article:by:2128
$4
desc
$69
本文介绍了通过MyEclipse集成工具开发Struts的一般流程
*4
$4
HSET
$25
hash:csdn:article:by:2128
$9
readCount
$4
3176
*4
$4
HSET
$25
hash:csdn:article:by:2128
$14
articleContent
$40
csdn/java/1_0_1_3_1504264459.786712.html
*4
$4
HSET
$25
hash:csdn:article:by:2128
$4
date
$16
2016-06-23 13:09
*4
$4
HSET
$25
hash:csdn:article:by:2128
$6
author
$7
ggGavin
*4
$4
HSET
$25
hash:csdn:article:by:2128
$12
commentCount
$1
5
*4
$4
HSET
$25
hash:csdn:article:by:2128
$9
labelList
$17
struts,myeclipse,
*4
$4
HSET
$25
hash:csdn:article:by:2128
$9
likeCount
$1
3
*4
$4
HSET
$25
hash:csdn:article:by:2128
$10
authorLink
$26
http://my.csdn.net/ggGavin
*4
$4
HSET
$25
hash:csdn:article:by:2128
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2129
$2
id
$4
2129
*4
$4
HSET
$25
hash:csdn:article:by:2129
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2129
$3
url
$58
http://blog.csdn.net/yuzhihui_no1/article/details/42706371
*4
$4
HSET
$25
hash:csdn:article:by:2129
$5
title
$43
as汇编基础程序设计--基础知识点
*4
$4
HSET
$25
hash:csdn:article:by:2129
$4
desc
$265
1、数据类型，as汇编和C语言类似，也有数据类型之分。数据类型为了区分数据存放所需要的空间（也就是字节数），浮点型操作没怎么了解，浮点型操作时对数据类型应该有特殊的限制。
.section .data...
*4
$4
HSET
$25
hash:csdn:article:by:2129
$9
readCount
$3
662
*4
$4
HSET
$25
hash:csdn:article:by:2129
$14
articleContent
$42
csdn/linux/1_0_1_15_1504264460.383532.html
*4
$4
HSET
$25
hash:csdn:article:by:2129
$4
date
$16
2015-01-14 10:29
*4
$4
HSET
$25
hash:csdn:article:by:2129
$6
author
$12
YuZhiHui_No1
*4
$4
HSET
$25
hash:csdn:article:by:2129
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2129
$9
labelList
$36
操作系统,汇编语言,ATT汇编,
*4
$4
HSET
$25
hash:csdn:article:by:2129
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2129
$10
authorLink
$31
http://my.csdn.net/YuZhiHui_No1
*4
$4
HSET
$25
hash:csdn:article:by:2129
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2130
$2
id
$4
2130
*4
$4
HSET
$25
hash:csdn:article:by:2130
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2130
$3
url
$56
http://blog.csdn.net/gavin_john/article/details/51732615
*4
$4
HSET
$25
hash:csdn:article:by:2130
$5
title
$36
Struts1.3——登录案例的改进
*4
$4
HSET
$25
hash:csdn:article:by:2130
$4
desc
$109
本文简要介绍了struts的scope属性、中文乱码处理以及struts-config.xml文件等几个知识点
*4
$4
HSET
$25
hash:csdn:article:by:2130
$9
readCount
$4
2126
*4
$4
HSET
$25
hash:csdn:article:by:2130
$14
articleContent
$40
csdn/java/1_0_1_4_1504264460.871704.html
*4
$4
HSET
$25
hash:csdn:article:by:2130
$4
date
$16
2016-06-22 10:49
*4
$4
HSET
$25
hash:csdn:article:by:2130
$6
author
$7
ggGavin
*4
$4
HSET
$25
hash:csdn:article:by:2130
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2130
$9
labelList
$7
struts,
*4
$4
HSET
$25
hash:csdn:article:by:2130
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2130
$10
authorLink
$26
http://my.csdn.net/ggGavin
*4
$4
HSET
$25
hash:csdn:article:by:2130
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2131
$2
id
$4
2131
*4
$4
HSET
$25
hash:csdn:article:by:2131
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2131
$3
url
$56
http://blog.csdn.net/gavin_john/article/details/52005476
*4
$4
HSET
$25
hash:csdn:article:by:2131
$5
title
$27
Struts1.3——Struts标签
*4
$4
HSET
$25
hash:csdn:article:by:2131
$4
desc
$77
本文介绍了Struts1中的标签，有html标签、bean标签和logic标签
*4
$4
HSET
$25
hash:csdn:article:by:2131
$9
readCount
$4
1073
*4
$4
HSET
$25
hash:csdn:article:by:2131
$14
articleContent
$40
csdn/java/1_0_1_2_1504264461.792532.html
*4
$4
HSET
$25
hash:csdn:article:by:2131
$4
date
$16
2016-07-23 17:12
*4
$4
HSET
$25
hash:csdn:article:by:2131
$6
author
$7
ggGavin
*4
$4
HSET
$25
hash:csdn:article:by:2131
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2131
$9
labelList
$14
struts,标签,
*4
$4
HSET
$25
hash:csdn:article:by:2131
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2131
$10
authorLink
$26
http://my.csdn.net/ggGavin
*4
$4
HSET
$25
hash:csdn:article:by:2131
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2132
$2
id
$4
2132
*4
$4
HSET
$25
hash:csdn:article:by:2132
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2132
$3
url
$57
http://blog.csdn.net/wangjian_an/article/details/52321832
*4
$4
HSET
$25
hash:csdn:article:by:2132
$5
title
$33
JavaEE框架——hibernate入门
*4
$4
HSET
$25
hash:csdn:article:by:2132
$4
desc
$219
一、hibernate入门

1.hibernate简介：


Hibernate是一个开放源代码的对象关系映射框架，它对JDBC进行了非常轻量级的对象封装，它将POJO与数据库表建立映射关系，是一个...
*4
$4
HSET
$25
hash:csdn:article:by:2132
$9
readCount
$4
1065
*4
$4
HSET
$25
hash:csdn:article:by:2132
$14
articleContent
$41
csdn/java/1_0_1_14_1504264462.859768.html
*4
$4
HSET
$25
hash:csdn:article:by:2132
$4
date
$16
2016-08-26 02:09
*4
$4
HSET
$25
hash:csdn:article:by:2132
$6
author
$11
wangjian_an
*4
$4
HSET
$25
hash:csdn:article:by:2132
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2132
$9
labelList
$39
java ee,hibernate,web应用,架构,orm,
*4
$4
HSET
$25
hash:csdn:article:by:2132
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2132
$10
authorLink
$30
http://my.csdn.net/wangjian_an
*4
$4
HSET
$25
hash:csdn:article:by:2132
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2133
$2
id
$4
2133
*4
$4
HSET
$25
hash:csdn:article:by:2133
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2133
$3
url
$56
http://blog.csdn.net/gavin_john/article/details/52057784
*4
$4
HSET
$25
hash:csdn:article:by:2133
$5
title
$36
Struts1.3——文件上传和下载
*4
$4
HSET
$25
hash:csdn:article:by:2133
$4
desc
$57
本文介绍了Struts实现文件上传和下载的方法
*4
$4
HSET
$25
hash:csdn:article:by:2133
$9
readCount
$4
1151
*4
$4
HSET
$25
hash:csdn:article:by:2133
$14
articleContent
$40
csdn/java/1_0_1_0_1504264463.805058.html
*4
$4
HSET
$25
hash:csdn:article:by:2133
$4
date
$16
2016-07-28 18:16
*4
$4
HSET
$25
hash:csdn:article:by:2133
$6
author
$7
ggGavin
*4
$4
HSET
$25
hash:csdn:article:by:2133
$12
commentCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2133
$9
labelList
$30
struts,web开发,文件上传,
*4
$4
HSET
$25
hash:csdn:article:by:2133
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2133
$10
authorLink
$26
http://my.csdn.net/ggGavin
*4
$4
HSET
$25
hash:csdn:article:by:2133
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2134
$2
id
$4
2134
*4
$4
HSET
$25
hash:csdn:article:by:2134
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2134
$3
url
$56
http://blog.csdn.net/ljy1988123/article/details/47905411
*4
$4
HSET
$25
hash:csdn:article:by:2134
$5
title
$35
Linux内核工程导论——前言
*4
$4
HSET
$25
hash:csdn:article:by:2134
$4
desc
$263
想要研究linux内核，使用linux内核，首先要知道linux内核能做到什么，提供了什么。我看过很多初学者一进入公司就开始使用linux内核开发内核模块，使用的无论是通信方式、内存接口还是设备接口仍...
*4
$4
HSET
$25
hash:csdn:article:by:2134
$9
readCount
$4
1402
*4
$4
HSET
$25
hash:csdn:article:by:2134
$14
articleContent
$41
csdn/linux/1_0_3_0_1504264464.146568.html
*4
$4
HSET
$25
hash:csdn:article:by:2134
$4
date
$16
2015-08-23 14:27
*4
$4
HSET
$25
hash:csdn:article:by:2134
$6
author
$10
ljy1988123
*4
$4
HSET
$25
hash:csdn:article:by:2134
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2134
$9
labelList
$20
linux kernel,内核,
*4
$4
HSET
$25
hash:csdn:article:by:2134
$9
likeCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2134
$10
authorLink
$29
http://my.csdn.net/ljy1988123
*4
$4
HSET
$25
hash:csdn:article:by:2134
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2135
$2
id
$4
2135
*4
$4
HSET
$25
hash:csdn:article:by:2135
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2135
$3
url
$57
http://blog.csdn.net/wangjian_an/article/details/52377168
*4
$4
HSET
$25
hash:csdn:article:by:2135
$5
title
$75
JavaEE框架——Spring入门基础（控制反转Ioc和切面技术Aop）
*4
$4
HSET
$25
hash:csdn:article:by:2135
$4
desc
$211
一.简介：
     
Spring在英语中含义是春天，对于JavaEE开发者来说，Spring框架出现确实带来了一股全新的春天的气息。早在2002年，Rod
 Johson在其编著的《Expert ...
*4
$4
HSET
$25
hash:csdn:article:by:2135
$9
readCount
$3
851
*4
$4
HSET
$25
hash:csdn:article:by:2135
$14
articleContent
$40
csdn/java/1_0_1_1_1504264465.014702.html
*4
$4
HSET
$25
hash:csdn:article:by:2135
$4
date
$16
2016-08-31 01:26
*4
$4
HSET
$25
hash:csdn:article:by:2135
$6
author
$11
wangjian_an
*4
$4
HSET
$25
hash:csdn:article:by:2135
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2135
$9
labelList
$32
spring,java ee,web应用,框架,
*4
$4
HSET
$25
hash:csdn:article:by:2135
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2135
$10
authorLink
$30
http://my.csdn.net/wangjian_an
*4
$4
HSET
$25
hash:csdn:article:by:2135
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2136
$2
id
$4
2136
*4
$4
HSET
$25
hash:csdn:article:by:2136
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2136
$3
url
$56
http://blog.csdn.net/ljy1988123/article/details/50444693
*4
$4
HSET
$25
hash:csdn:article:by:2136
$5
title
$66
Linux内核工程导论——网络：Filter（LSF、BPF、eBPF）
*4
$4
HSET
$25
hash:csdn:article:by:2136
$4
desc
$167
概览    LSF(Linux socket filter)起源于BPF（Berkeley Packet Filter），基础从架构一致，但使用更简单。LSF内部的BPF最早是cBPF（classic...
*4
$4
HSET
$25
hash:csdn:article:by:2136
$9
readCount
$4
5569
*4
$4
HSET
$25
hash:csdn:article:by:2136
$14
articleContent
$41
csdn/linux/1_0_3_5_1504264465.181855.html
*4
$4
HSET
$25
hash:csdn:article:by:2136
$4
date
$16
2016-01-01 19:58
*4
$4
HSET
$25
hash:csdn:article:by:2136
$6
author
$10
ljy1988123
*4
$4
HSET
$25
hash:csdn:article:by:2136
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2136
$9
labelList
$41
filter,socket,linux kernel,网络,数据,
*4
$4
HSET
$25
hash:csdn:article:by:2136
$9
likeCount
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2136
$10
authorLink
$29
http://my.csdn.net/ljy1988123
*4
$4
HSET
$25
hash:csdn:article:by:2136
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2137
$2
id
$4
2137
*4
$4
HSET
$25
hash:csdn:article:by:2137
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2137
$3
url
$57
http://blog.csdn.net/wangjian_an/article/details/52242270
*4
$4
HSET
$25
hash:csdn:article:by:2137
$5
title
$112
JavaEE框架类——全站压缩——对网站内容进行数据压缩（Filter和GzipOutputStream二合一）
*4
$4
HSET
$25
hash:csdn:article:by:2137
$4
desc
$283
GZIP压缩：将压缩后的文本文件，发送给浏览器，减少流量。
全站压缩：将一个项目（网站内）的所有响应（数据）进行gzip压缩，减少流量。
压缩目的：减少流量，提高运行速度，贴吧是在手机客户端是，减少流...
*4
$4
HSET
$25
hash:csdn:article:by:2137
$9
readCount
$3
554
*4
$4
HSET
$25
hash:csdn:article:by:2137
$14
articleContent
$40
csdn/java/1_0_1_4_1504264466.130842.html
*4
$4
HSET
$25
hash:csdn:article:by:2137
$4
date
$16
2016-08-18 16:28
*4
$4
HSET
$25
hash:csdn:article:by:2137
$6
author
$11
wangjian_an
*4
$4
HSET
$25
hash:csdn:article:by:2137
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2137
$9
labelList
$42
filter,java ee,框架,数据压缩,压缩,
*4
$4
HSET
$25
hash:csdn:article:by:2137
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2137
$10
authorLink
$30
http://my.csdn.net/wangjian_an
*4
$4
HSET
$25
hash:csdn:article:by:2137
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2138
$2
id
$4
2138
*4
$4
HSET
$25
hash:csdn:article:by:2138
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2138
$3
url
$56
http://blog.csdn.net/ljy1988123/article/details/50682953
*4
$4
HSET
$25
hash:csdn:article:by:2138
$5
title
$100
Linux内核工程导论——linux学习和职业曲线（初学者，中级，高级都可参考）
*4
$4
HSET
$25
hash:csdn:article:by:2138
$4
desc
$243
Linux世界介绍



给自己定级

门外汉：不会安装操作系统、不会用虚拟机（安装和使用）、没有自己选择并安装的linux发行版，只是听人说linux很牛逼，但觉得linux打不了游戏开不了offi...
*4
$4
HSET
$25
hash:csdn:article:by:2138
$9
readCount
$4
2305
*4
$4
HSET
$25
hash:csdn:article:by:2138
$14
articleContent
$40
csdn/linux/1_0_3_9_1504264466.40902.html
*4
$4
HSET
$25
hash:csdn:article:by:2138
$4
date
$16
2016-03-02 13:49
*4
$4
HSET
$25
hash:csdn:article:by:2138
$6
author
$10
ljy1988123
*4
$4
HSET
$25
hash:csdn:article:by:2138
$12
commentCount
$1
8
*4
$4
HSET
$25
hash:csdn:article:by:2138
$9
labelList
$32
操作系统,linux kernel,linux,
*4
$4
HSET
$25
hash:csdn:article:by:2138
$9
likeCount
$1
9
*4
$4
HSET
$25
hash:csdn:article:by:2138
$10
authorLink
$29
http://my.csdn.net/ljy1988123
*4
$4
HSET
$25
hash:csdn:article:by:2138
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2139
$2
id
$4
2139
*4
$4
HSET
$25
hash:csdn:article:by:2139
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2139
$3
url
$57
http://blog.csdn.net/wangjian_an/article/details/52277292
*4
$4
HSET
$25
hash:csdn:article:by:2139
$5
title
$48
JavaEE——账号注册模拟网站邮箱激活
*4
$4
HSET
$25
hash:csdn:article:by:2139
$4
desc
$173
本项目是javaWeb和email结合的项目，模拟网站必须要激活邮箱账号才可以使用，创建数据库create table user(
id varchar(32) primary key,
name v...
*4
$4
HSET
$25
hash:csdn:article:by:2139
$9
readCount
$4
1142
*4
$4
HSET
$25
hash:csdn:article:by:2139
$14
articleContent
$40
csdn/java/1_0_1_8_1504264467.039334.html
*4
$4
HSET
$25
hash:csdn:article:by:2139
$4
date
$16
2016-08-22 15:31
*4
$4
HSET
$25
hash:csdn:article:by:2139
$6
author
$11
wangjian_an
*4
$4
HSET
$25
hash:csdn:article:by:2139
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2139
$9
labelList
$34
java ee,数据库,邮箱,java web,
*4
$4
HSET
$25
hash:csdn:article:by:2139
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2139
$10
authorLink
$30
http://my.csdn.net/wangjian_an
*4
$4
HSET
$25
hash:csdn:article:by:2139
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2140
$2
id
$4
2140
*4
$4
HSET
$25
hash:csdn:article:by:2140
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2140
$3
url
$57
http://blog.csdn.net/wangjian_an/article/details/52291282
*4
$4
HSET
$25
hash:csdn:article:by:2140
$5
title
$13
Ajax的使用
*4
$4
HSET
$25
hash:csdn:article:by:2140
$4
desc
$193
XmlHttp是什么？
最通用的定义为：XmlHttp是一套可以在Javascript、VbScript、Jscript等脚本语言中通过http协议传送或从接收XML及其他数据的一套API。XmlHt...
*4
$4
HSET
$25
hash:csdn:article:by:2140
$9
readCount
$3
561
*4
$4
HSET
$25
hash:csdn:article:by:2140
$14
articleContent
$40
csdn/java/1_0_1_10_1504264468.16971.html
*4
$4
HSET
$25
hash:csdn:article:by:2140
$4
date
$16
2016-08-23 15:25
*4
$4
HSET
$25
hash:csdn:article:by:2140
$6
author
$11
wangjian_an
*4
$4
HSET
$25
hash:csdn:article:by:2140
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2140
$9
labelList
$27
javascript,ajax,xml,异步,
*4
$4
HSET
$25
hash:csdn:article:by:2140
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2140
$10
authorLink
$30
http://my.csdn.net/wangjian_an
*4
$4
HSET
$25
hash:csdn:article:by:2140
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2141
$2
id
$4
2141
*4
$4
HSET
$25
hash:csdn:article:by:2141
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2141
$3
url
$56
http://blog.csdn.net/ljy1988123/article/details/48108271
*4
$4
HSET
$25
hash:csdn:article:by:2141
$5
title
$47
Linux内核工程导论——总线：Linux PCI
*4
$4
HSET
$25
hash:csdn:article:by:2141
$4
desc
$225
PCI
PCI系列总线介绍
         首先，PCI是一种总线，PCI-e是PCI的升级版，在linux的软件系统中是统一都是driver/pci下。既然是一种总线，物理上就包括总线部分和支持该...
*4
$4
HSET
$25
hash:csdn:article:by:2141
$9
readCount
$4
1150
*4
$4
HSET
$25
hash:csdn:article:by:2141
$14
articleContent
$41
csdn/linux/1_0_3_8_1504264469.240642.html
*4
$4
HSET
$25
hash:csdn:article:by:2141
$4
date
$16
2015-08-30 19:42
*4
$4
HSET
$25
hash:csdn:article:by:2141
$6
author
$10
ljy1988123
*4
$4
HSET
$25
hash:csdn:article:by:2141
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2141
$9
labelList
$26
linux kernel,内核,Linux,
*4
$4
HSET
$25
hash:csdn:article:by:2141
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2141
$10
authorLink
$29
http://my.csdn.net/ljy1988123
*4
$4
HSET
$25
hash:csdn:article:by:2141
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2142
$2
id
$4
2142
*4
$4
HSET
$25
hash:csdn:article:by:2142
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2142
$3
url
$57
http://blog.csdn.net/wangjian_an/article/details/52296061
*4
$4
HSET
$25
hash:csdn:article:by:2142
$5
title
$39
用Ant工具管理你的Web应用程序
*4
$4
HSET
$25
hash:csdn:article:by:2142
$4
desc
$213
Ant是一种基于Java的build工具。理论上来说，它有些类似于（Unix）C中的make ，但没有make的缺陷。目前的最新版本为：Ant 1.8.1。 使用，创建一个build.xml放在项目的...
*4
$4
HSET
$25
hash:csdn:article:by:2142
$9
readCount
$3
588
*4
$4
HSET
$25
hash:csdn:article:by:2142
$14
articleContent
$41
csdn/java/1_0_1_11_1504264469.277065.html
*4
$4
HSET
$25
hash:csdn:article:by:2142
$4
date
$16
2016-08-24 00:53
*4
$4
HSET
$25
hash:csdn:article:by:2142
$6
author
$11
wangjian_an
*4
$4
HSET
$25
hash:csdn:article:by:2142
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2142
$9
labelList
$26
ant,java,管理,web应用,
*4
$4
HSET
$25
hash:csdn:article:by:2142
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2142
$10
authorLink
$30
http://my.csdn.net/wangjian_an
*4
$4
HSET
$25
hash:csdn:article:by:2142
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2143
$2
id
$4
2143
*4
$4
HSET
$25
hash:csdn:article:by:2143
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2143
$3
url
$57
http://blog.csdn.net/wangjian_an/article/details/52281777
*4
$4
HSET
$25
hash:csdn:article:by:2143
$5
title
$41
JavaEE——使用log4j进行日志管理
*4
$4
HSET
$25
hash:csdn:article:by:2143
$4
desc
$206
1、Log4j简介

  作用：
1、 跟踪代码的运行轨迹。
2、 输出调试信息

三大组成：

1、 Logger类-生成日志。
2、 Appender类-定义日志输出的目的地。...
*4
$4
HSET
$25
hash:csdn:article:by:2143
$9
readCount
$4
1118
*4
$4
HSET
$25
hash:csdn:article:by:2143
$14
articleContent
$40
csdn/java/1_0_1_9_1504264470.231177.html
*4
$4
HSET
$25
hash:csdn:article:by:2143
$4
date
$16
2016-08-22 23:53
*4
$4
HSET
$25
hash:csdn:article:by:2143
$6
author
$11
wangjian_an
*4
$4
HSET
$25
hash:csdn:article:by:2143
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2143
$9
labelList
$38
log4j,管理,java ee,apache,数据库,
*4
$4
HSET
$25
hash:csdn:article:by:2143
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2143
$10
authorLink
$30
http://my.csdn.net/wangjian_an
*4
$4
HSET
$25
hash:csdn:article:by:2143
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2144
$2
id
$4
2144
*4
$4
HSET
$25
hash:csdn:article:by:2144
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2144
$3
url
$56
http://blog.csdn.net/ljy1988123/article/details/48975109
*4
$4
HSET
$25
hash:csdn:article:by:2144
$5
title
$50
Linux内核工程导论——数据结构：其他
*4
$4
HSET
$25
hash:csdn:article:by:2144
$4
desc
$273
KFIFO
缓冲区在文件系统中经常用到，通过缓冲区缓解cpu读写内存和读写磁盘的速度。例如一个进程A产生数据发给另外一个进程B，进程B需要对进程A传的数据进行处理并写入文件，如果B没有处理完，则A要延...
*4
$4
HSET
$25
hash:csdn:article:by:2144
$9
readCount
$3
837
*4
$4
HSET
$25
hash:csdn:article:by:2144
$14
articleContent
$41
csdn/linux/1_0_3_1_1504264470.272899.html
*4
$4
HSET
$25
hash:csdn:article:by:2144
$4
date
$16
2015-10-08 17:11
*4
$4
HSET
$25
hash:csdn:article:by:2144
$6
author
$10
ljy1988123
*4
$4
HSET
$25
hash:csdn:article:by:2144
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2144
$9
labelList
$39
linux kernel,Linux,内核,数据结构,
*4
$4
HSET
$25
hash:csdn:article:by:2144
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2144
$10
authorLink
$29
http://my.csdn.net/ljy1988123
*4
$4
HSET
$25
hash:csdn:article:by:2144
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2145
$2
id
$4
2145
*4
$4
HSET
$25
hash:csdn:article:by:2145
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2145
$3
url
$57
http://blog.csdn.net/wangjian_an/article/details/52246856
*4
$4
HSET
$25
hash:csdn:article:by:2145
$5
title
$107
JavaEE框架类——监听器（观察者模式）和Servlet技术的监听器session沌化与活化技术
*4
$4
HSET
$25
hash:csdn:article:by:2145
$4
desc
$289
监听器
监听器－就是一个实现待定接口的普通Java程序，此程序专门用于监听别一个类的方法调用。
什么是观察者模式：
定义对象间一对多的依赖关系，当一个对象的状态发生改变时，所有依赖于它的对象都得到通知...
*4
$4
HSET
$25
hash:csdn:article:by:2145
$9
readCount
$3
941
*4
$4
HSET
$25
hash:csdn:article:by:2145
$14
articleContent
$40
csdn/java/1_0_1_5_1504264471.166283.html
*4
$4
HSET
$25
hash:csdn:article:by:2145
$4
date
$16
2016-08-19 02:19
*4
$4
HSET
$25
hash:csdn:article:by:2145
$6
author
$11
wangjian_an
*4
$4
HSET
$25
hash:csdn:article:by:2145
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2145
$9
labelList
$35
servlet,java ee,java,框架,技术,
*4
$4
HSET
$25
hash:csdn:article:by:2145
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2145
$10
authorLink
$30
http://my.csdn.net/wangjian_an
*4
$4
HSET
$25
hash:csdn:article:by:2145
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2146
$2
id
$4
2146
*4
$4
HSET
$25
hash:csdn:article:by:2146
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2146
$3
url
$56
http://blog.csdn.net/ljy1988123/article/details/47905473
*4
$4
HSET
$25
hash:csdn:article:by:2146
$5
title
$47
Linux内核工程导论——数据结构：树
*4
$4
HSET
$25
hash:csdn:article:by:2146
$4
desc
$271
内核数据结构
链表
待补充
链表
待补充
双向链表
待补充
无锁链表
待补充
树
树作为一种很常用的数据结构，主要包括二叉搜索数（BST）、多路搜索树（B-树）、B树根据叶子节点树分为二叉树和多叉树。...
*4
$4
HSET
$25
hash:csdn:article:by:2146
$9
readCount
$4
2255
*4
$4
HSET
$25
hash:csdn:article:by:2146
$14
articleContent
$41
csdn/linux/1_0_3_2_1504264471.319427.html
*4
$4
HSET
$25
hash:csdn:article:by:2146
$4
date
$16
2015-08-23 14:53
*4
$4
HSET
$25
hash:csdn:article:by:2146
$6
author
$10
ljy1988123
*4
$4
HSET
$25
hash:csdn:article:by:2146
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2146
$9
labelList
$20
linux kernel,内核,
*4
$4
HSET
$25
hash:csdn:article:by:2146
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2146
$10
authorLink
$29
http://my.csdn.net/ljy1988123
*4
$4
HSET
$25
hash:csdn:article:by:2146
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2147
$2
id
$4
2147
*4
$4
HSET
$25
hash:csdn:article:by:2147
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2147
$3
url
$56
http://blog.csdn.net/ljy1988123/article/details/48391745
*4
$4
HSET
$25
hash:csdn:article:by:2147
$5
title
$59
Linux内核工程导论——数据结构：链表与哈希
*4
$4
HSET
$25
hash:csdn:article:by:2147
$4
desc
$287
1 链表与哈希表
链表可以把离散时间到达的数据结构串起来，使其可以被更容易的索引。Linux内核中全部使用双向链表。那为何链表要与哈希表放在一起介绍呢？因为哈希表室友链表群组成的，其每一个哈希桶都是一...
*4
$4
HSET
$25
hash:csdn:article:by:2147
$9
readCount
$4
1563
*4
$4
HSET
$25
hash:csdn:article:by:2147
$14
articleContent
$40
csdn/linux/1_0_3_3_1504264472.30341.html
*4
$4
HSET
$25
hash:csdn:article:by:2147
$4
date
$16
2015-09-12 09:56
*4
$4
HSET
$25
hash:csdn:article:by:2147
$6
author
$10
ljy1988123
*4
$4
HSET
$25
hash:csdn:article:by:2147
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2147
$9
labelList
$46
linux kernel,内核,Linux,数据结构,链表,
*4
$4
HSET
$25
hash:csdn:article:by:2147
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2147
$10
authorLink
$29
http://my.csdn.net/ljy1988123
*4
$4
HSET
$25
hash:csdn:article:by:2147
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2148
$2
id
$4
2148
*4
$4
HSET
$25
hash:csdn:article:by:2148
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2148
$3
url
$57
http://blog.csdn.net/wangjian_an/article/details/52261661
*4
$4
HSET
$25
hash:csdn:article:by:2148
$5
title
$99
JavaEE——在线人管理系统（显示在线人数、在线人详细信息、管理员踢人）
*4
$4
HSET
$25
hash:csdn:article:by:2148
$4
desc
$203
这篇博客是filter、listener和servlet技术的相关总结，实现了简单的显示在线人数、在线人详细信息、管理员踢人功能下面是详细代码web.xml
<web-app version="3.0...
*4
$4
HSET
$25
hash:csdn:article:by:2148
$9
readCount
$3
859
*4
$4
HSET
$25
hash:csdn:article:by:2148
$14
articleContent
$40
csdn/java/1_0_1_6_1504264472.456188.html
*4
$4
HSET
$25
hash:csdn:article:by:2148
$4
date
$16
2016-08-20 15:28
*4
$4
HSET
$25
hash:csdn:article:by:2148
$6
author
$11
wangjian_an
*4
$4
HSET
$25
hash:csdn:article:by:2148
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2148
$9
labelList
$38
servlet,filter,管理,web.xml,java ee,
*4
$4
HSET
$25
hash:csdn:article:by:2148
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2148
$10
authorLink
$30
http://my.csdn.net/wangjian_an
*4
$4
HSET
$25
hash:csdn:article:by:2148
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2149
$2
id
$4
2149
*4
$4
HSET
$25
hash:csdn:article:by:2149
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2149
$3
url
$56
http://blog.csdn.net/ljy1988123/article/details/49054501
*4
$4
HSET
$25
hash:csdn:article:by:2149
$5
title
$54
Linux内核工程导论——内核为何使用C语言
*4
$4
HSET
$25
hash:csdn:article:by:2149
$4
desc
$255
C与C++的对比无数人说过，都说C效率高，但很多人做过实验如果C++不适用RTTI，C++的效率也不会低太多（25%左右）。还有人说C++强大的STL，但是对效率讲究点的话那个真的不能用，具体我后面说...
*4
$4
HSET
$25
hash:csdn:article:by:2149
$9
readCount
$4
2369
*4
$4
HSET
$25
hash:csdn:article:by:2149
$14
articleContent
$40
csdn/linux/1_0_3_4_1504264473.38145.html
*4
$4
HSET
$25
hash:csdn:article:by:2149
$4
date
$16
2015-10-12 20:53
*4
$4
HSET
$25
hash:csdn:article:by:2149
$6
author
$10
ljy1988123
*4
$4
HSET
$25
hash:csdn:article:by:2149
$12
commentCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2149
$9
labelList
$34
linux kernel,Linux,内核,c语言,
*4
$4
HSET
$25
hash:csdn:article:by:2149
$9
likeCount
$1
6
*4
$4
HSET
$25
hash:csdn:article:by:2149
$10
authorLink
$29
http://my.csdn.net/ljy1988123
*4
$4
HSET
$25
hash:csdn:article:by:2149
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2150
$2
id
$4
2150
*4
$4
HSET
$25
hash:csdn:article:by:2150
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2150
$3
url
$57
http://blog.csdn.net/wangjian_an/article/details/52264956
*4
$4
HSET
$25
hash:csdn:article:by:2150
$5
title
$78
JavaEE——Java和DOS下收发邮件（SMTP和POP3协议）、E-Mail协议）
*4
$4
HSET
$25
hash:csdn:article:by:2150
$4
desc
$271
E-Mail协议简介：
邮件服务器，按照提供的服务类型，可以分为发送邮件的服务器我接收邮件的服务器。
发送邮件的服务器使用发送协议，现在常用的是SMTP协议。所以，通常发邮件的服务器也称为SMTP服务...
*4
$4
HSET
$25
hash:csdn:article:by:2150
$9
readCount
$3
565
*4
$4
HSET
$25
hash:csdn:article:by:2150
$14
articleContent
$38
csdn/java/1_0_1_7_1504264473.6432.html
*4
$4
HSET
$25
hash:csdn:article:by:2150
$4
date
$16
2016-08-21 03:04
*4
$4
HSET
$25
hash:csdn:article:by:2150
$6
author
$11
wangjian_an
*4
$4
HSET
$25
hash:csdn:article:by:2150
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2150
$9
labelList
$28
java ee,java,dos,pop,邮件,
*4
$4
HSET
$25
hash:csdn:article:by:2150
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2150
$10
authorLink
$30
http://my.csdn.net/wangjian_an
*4
$4
HSET
$25
hash:csdn:article:by:2150
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2151
$2
id
$4
2151
*4
$4
HSET
$25
hash:csdn:article:by:2151
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2151
$3
url
$57
http://blog.csdn.net/wangjian_an/article/details/52368524
*4
$4
HSET
$25
hash:csdn:article:by:2151
$5
title
$31
JavaEE框架——struts2入门
*4
$4
HSET
$25
hash:csdn:article:by:2151
$4
desc
$173
1.strust简介（发展）：
大概的流行时间：2010前后各3年
※有两个版本：Struts1，Struts2
       Struts1: 采用servlet机制，JSP+Action(Serv...
*4
$4
HSET
$25
hash:csdn:article:by:2151
$9
readCount
$4
1568
*4
$4
HSET
$25
hash:csdn:article:by:2151
$14
articleContent
$40
csdn/java/1_0_1_2_1504264474.623054.html
*4
$4
HSET
$25
hash:csdn:article:by:2151
$4
date
$16
2016-08-30 15:00
*4
$4
HSET
$25
hash:csdn:article:by:2151
$6
author
$11
wangjian_an
*4
$4
HSET
$25
hash:csdn:article:by:2151
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2151
$9
labelList
$42
java ee,struts,struts2.0,web应用,框架,
*4
$4
HSET
$25
hash:csdn:article:by:2151
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2151
$10
authorLink
$30
http://my.csdn.net/wangjian_an
*4
$4
HSET
$25
hash:csdn:article:by:2151
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2152
$2
id
$4
2152
*4
$4
HSET
$25
hash:csdn:article:by:2152
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2152
$3
url
$57
http://blog.csdn.net/wangjian_an/article/details/52232210
*4
$4
HSET
$25
hash:csdn:article:by:2152
$5
title
$42
javaEE框架类——过滤器（Filter）
*4
$4
HSET
$25
hash:csdn:article:by:2152
$4
desc
$211
1简介： - 过虑器能对客户的请求进行预先处理，然后再将请求转发给其他web组件。
 - 过虑器是在Servlet2.3规范中定义的，它可以对Web组件的,ServletRequest和Servlet...
*4
$4
HSET
$25
hash:csdn:article:by:2152
$9
readCount
$3
931
*4
$4
HSET
$25
hash:csdn:article:by:2152
$14
articleContent
$40
csdn/java/1_0_1_3_1504264475.363893.html
*4
$4
HSET
$25
hash:csdn:article:by:2152
$4
date
$16
2016-08-17 16:35
*4
$4
HSET
$25
hash:csdn:article:by:2152
$6
author
$11
wangjian_an
*4
$4
HSET
$25
hash:csdn:article:by:2152
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2152
$9
labelList
$34
filter,java ee,servlet,web,框架,
*4
$4
HSET
$25
hash:csdn:article:by:2152
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2152
$10
authorLink
$30
http://my.csdn.net/wangjian_an
*4
$4
HSET
$25
hash:csdn:article:by:2152
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2153
$2
id
$4
2153
*4
$4
HSET
$25
hash:csdn:article:by:2153
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2153
$3
url
$57
http://blog.csdn.net/qq_35508033/article/details/71726450
*4
$4
HSET
$25
hash:csdn:article:by:2153
$5
title
$31
Java设计模式之单例模式
*4
$4
HSET
$25
hash:csdn:article:by:2153
$4
desc
$257
单例模式的概念:单例模式的意思就是只有一个实例,单例模式确保某一个类只有一个实例,而且自行实例化并向整个系统提供这个实例,这个类称为单例类懒汉模式(类加载时不初始化):public class Laz...
*4
$4
HSET
$25
hash:csdn:article:by:2153
$9
readCount
$3
365
*4
$4
HSET
$25
hash:csdn:article:by:2153
$14
articleContent
$40
csdn/java/1_0_1_0_1504264477.390083.html
*4
$4
HSET
$25
hash:csdn:article:by:2153
$4
date
$16
2017-05-12 14:31
*4
$4
HSET
$25
hash:csdn:article:by:2153
$6
author
$11
qq_35508033
*4
$4
HSET
$25
hash:csdn:article:by:2153
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2153
$9
labelList
$26
设计模式,单例模式,
*4
$4
HSET
$25
hash:csdn:article:by:2153
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2153
$10
authorLink
$30
http://my.csdn.net/qq_35508033
*4
$4
HSET
$25
hash:csdn:article:by:2153
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2154
$2
id
$4
2154
*4
$4
HSET
$25
hash:csdn:article:by:2154
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2154
$3
url
$57
http://blog.csdn.net/qq_35508033/article/details/68485593
*4
$4
HSET
$25
hash:csdn:article:by:2154
$5
title
$37
Java设计模式之模板方法模式
*4
$4
HSET
$25
hash:csdn:article:by:2154
$4
desc
$247
模板方法概念的简单介绍:在抽象基类定义final修饰的方法封装算法骨架,并实现其中的共性的步骤,某些没有共性的步骤(可定义为protected或默认的abstract方法)延迟到子类实现,这样做可以在...
*4
$4
HSET
$25
hash:csdn:article:by:2154
$9
readCount
$3
254
*4
$4
HSET
$25
hash:csdn:article:by:2154
$14
articleContent
$40
csdn/java/1_0_1_1_1504264478.400955.html
*4
$4
HSET
$25
hash:csdn:article:by:2154
$4
date
$16
2017-03-30 12:47
*4
$4
HSET
$25
hash:csdn:article:by:2154
$6
author
$11
qq_35508033
*4
$4
HSET
$25
hash:csdn:article:by:2154
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2154
$9
labelList
$18
Java,设计模式,
*4
$4
HSET
$25
hash:csdn:article:by:2154
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2154
$10
authorLink
$30
http://my.csdn.net/qq_35508033
*4
$4
HSET
$25
hash:csdn:article:by:2154
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2155
$2
id
$4
2155
*4
$4
HSET
$25
hash:csdn:article:by:2155
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2155
$3
url
$57
http://blog.csdn.net/qq_35508033/article/details/66475445
*4
$4
HSET
$25
hash:csdn:article:by:2155
$5
title
$34
Java设计模式之观察者模式
*4
$4
HSET
$25
hash:csdn:article:by:2155
$4
desc
$183
观察者模式的简单定义:定义对象间的一种一对多的依赖关系,当一个对象的状态发生改变时,所以依赖于它的对象都得到通知并且被自动更新
*4
$4
HSET
$25
hash:csdn:article:by:2155
$9
readCount
$2
91
*4
$4
HSET
$25
hash:csdn:article:by:2155
$14
articleContent
$40
csdn/java/1_0_1_5_1504264479.380816.html
*4
$4
HSET
$25
hash:csdn:article:by:2155
$4
date
$16
2017-03-26 14:38
*4
$4
HSET
$25
hash:csdn:article:by:2155
$6
author
$11
qq_35508033
*4
$4
HSET
$25
hash:csdn:article:by:2155
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2155
$9
labelList
$18
Java,设计模式,
*4
$4
HSET
$25
hash:csdn:article:by:2155
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2155
$10
authorLink
$30
http://my.csdn.net/qq_35508033
*4
$4
HSET
$25
hash:csdn:article:by:2155
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2156
$2
id
$4
2156
*4
$4
HSET
$25
hash:csdn:article:by:2156
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2156
$3
url
$57
http://blog.csdn.net/qq_35508033/article/details/66970276
*4
$4
HSET
$25
hash:csdn:article:by:2156
$5
title
$31
Java设计模式之策略模式
*4
$4
HSET
$25
hash:csdn:article:by:2156
$4
desc
$293
策略模式的简单定义和生活例子:策略模式将可变的部分从程序中抽象分离成算法接口,在该接口下分别封装一系列算法实现并使他们可以相互替换,从而导致客户端程序独立于算法的改变生活中例子:网上购物,当进行支付页...
*4
$4
HSET
$25
hash:csdn:article:by:2156
$9
readCount
$3
159
*4
$4
HSET
$25
hash:csdn:article:by:2156
$14
articleContent
$40
csdn/java/1_0_1_6_1504264480.383006.html
*4
$4
HSET
$25
hash:csdn:article:by:2156
$4
date
$16
2017-03-27 12:07
*4
$4
HSET
$25
hash:csdn:article:by:2156
$6
author
$11
qq_35508033
*4
$4
HSET
$25
hash:csdn:article:by:2156
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2156
$9
labelList
$18
Java,设计模式,
*4
$4
HSET
$25
hash:csdn:article:by:2156
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2156
$10
authorLink
$30
http://my.csdn.net/qq_35508033
*4
$4
HSET
$25
hash:csdn:article:by:2156
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2157
$2
id
$4
2157
*4
$4
HSET
$25
hash:csdn:article:by:2157
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2157
$3
url
$57
http://blog.csdn.net/qq_35508033/article/details/67631625
*4
$4
HSET
$25
hash:csdn:article:by:2157
$5
title
$34
Java设计模式之适配器模式
*4
$4
HSET
$25
hash:csdn:article:by:2157
$4
desc
$259
生活中适配的例子到处都是,比如说,国内居民用电是220伏,而给手机充电只需要5伏左右,那么将220伏转化为手机的5伏,就需要适配器进行降压处理,某某公司招聘Android开发,而作为应聘者需要制作一份...
*4
$4
HSET
$25
hash:csdn:article:by:2157
$9
readCount
$3
162
*4
$4
HSET
$25
hash:csdn:article:by:2157
$14
articleContent
$40
csdn/java/1_0_1_7_1504264481.325033.html
*4
$4
HSET
$25
hash:csdn:article:by:2157
$4
date
$16
2017-03-28 08:56
*4
$4
HSET
$25
hash:csdn:article:by:2157
$6
author
$11
qq_35508033
*4
$4
HSET
$25
hash:csdn:article:by:2157
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2157
$9
labelList
$18
Java,设计模式,
*4
$4
HSET
$25
hash:csdn:article:by:2157
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2157
$10
authorLink
$30
http://my.csdn.net/qq_35508033
*4
$4
HSET
$25
hash:csdn:article:by:2157
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2158
$2
id
$4
2158
*4
$4
HSET
$25
hash:csdn:article:by:2158
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2158
$3
url
$57
http://blog.csdn.net/qq_35508033/article/details/68062516
*4
$4
HSET
$25
hash:csdn:article:by:2158
$5
title
$34
Java设计模式之责任链模式
*4
$4
HSET
$25
hash:csdn:article:by:2158
$4
desc
$259
比如我们去奔驰4S店买车,一般4S店都会有销售人员,经理,总监,老板这样的层级,消费者肯定希望买车能给予一定的折扣,比如5%,20%甚至50%等,消费者提出不同比例的折扣,销售员不一定能直接同意,这时...
*4
$4
HSET
$25
hash:csdn:article:by:2158
$9
readCount
$3
130
*4
$4
HSET
$25
hash:csdn:article:by:2158
$14
articleContent
$40
csdn/java/1_0_1_2_1504264482.456185.html
*4
$4
HSET
$25
hash:csdn:article:by:2158
$4
date
$16
2017-03-29 11:39
*4
$4
HSET
$25
hash:csdn:article:by:2158
$6
author
$11
qq_35508033
*4
$4
HSET
$25
hash:csdn:article:by:2158
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2158
$9
labelList
$18
Java,设计模式,
*4
$4
HSET
$25
hash:csdn:article:by:2158
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2158
$10
authorLink
$30
http://my.csdn.net/qq_35508033
*4
$4
HSET
$25
hash:csdn:article:by:2158
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2159
$2
id
$4
2159
*4
$4
HSET
$25
hash:csdn:article:by:2159
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2159
$3
url
$57
http://blog.csdn.net/qq_35508033/article/details/63262539
*4
$4
HSET
$25
hash:csdn:article:by:2159
$5
title
$31
Java代理模式和动态代理
*4
$4
HSET
$25
hash:csdn:article:by:2159
$4
desc
$293
代理模式和动态代理的简单介绍首先看看代理模式的概念及分类:代理模式就是为其他对象提供一种代理以控制对这个对象的访问,代理对象起到中介的作用,可以去掉功能服务或怎么额外的服务代理模式的分类:远程代理,智...
*4
$4
HSET
$25
hash:csdn:article:by:2159
$9
readCount
$3
186
*4
$4
HSET
$25
hash:csdn:article:by:2159
$14
articleContent
$40
csdn/java/1_0_1_3_1504264483.809119.html
*4
$4
HSET
$25
hash:csdn:article:by:2159
$4
date
$16
2017-03-18 17:26
*4
$4
HSET
$25
hash:csdn:article:by:2159
$6
author
$11
qq_35508033
*4
$4
HSET
$25
hash:csdn:article:by:2159
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2159
$9
labelList
$31
Java,代理模式,动态代理,
*4
$4
HSET
$25
hash:csdn:article:by:2159
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2159
$10
authorLink
$30
http://my.csdn.net/qq_35508033
*4
$4
HSET
$25
hash:csdn:article:by:2159
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2160
$2
id
$4
2160
*4
$4
HSET
$25
hash:csdn:article:by:2160
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2160
$3
url
$57
http://blog.csdn.net/qq_35508033/article/details/65629516
*4
$4
HSET
$25
hash:csdn:article:by:2160
$5
title
$31
Java设计模式之工厂模式
*4
$4
HSET
$25
hash:csdn:article:by:2160
$4
desc
$175
工厂模式的概念:实例化对象,用工厂方法代替new操作,工厂模式包括工厂方法模式和抽象工厂模式,抽象工厂模式是工厂方法模式的扩展
*4
$4
HSET
$25
hash:csdn:article:by:2160
$9
readCount
$3
106
*4
$4
HSET
$25
hash:csdn:article:by:2160
$14
articleContent
$40
csdn/java/1_0_1_4_1504264484.668021.html
*4
$4
HSET
$25
hash:csdn:article:by:2160
$4
date
$16
2017-03-24 12:54
*4
$4
HSET
$25
hash:csdn:article:by:2160
$6
author
$11
qq_35508033
*4
$4
HSET
$25
hash:csdn:article:by:2160
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2160
$9
labelList
$18
Java,设计模式,
*4
$4
HSET
$25
hash:csdn:article:by:2160
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2160
$10
authorLink
$30
http://my.csdn.net/qq_35508033
*4
$4
HSET
$25
hash:csdn:article:by:2160
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2161
$2
id
$4
2161
*4
$4
HSET
$25
hash:csdn:article:by:2161
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2161
$3
url
$54
http://blog.csdn.net/shallnet/article/details/47734053
*4
$4
HSET
$25
hash:csdn:article:by:2161
$5
title
$35
把握linux内核设计思想系列
*4
$4
HSET
$25
hash:csdn:article:by:2161
$4
desc
$235
【版权声明：尊重原创，转载请保留出处：blog.csdn.net/shallnet，文章仅供学习交流，请勿用于商业用途】
把握linux内核设计思想（一）：系统调用
把握linux内核设计思想（二）：...
*4
$4
HSET
$25
hash:csdn:article:by:2161
$9
readCount
$4
1159
*4
$4
HSET
$25
hash:csdn:article:by:2161
$14
articleContent
$41
csdn/linux/1_2_1_0_1504264485.098723.html
*4
$4
HSET
$25
hash:csdn:article:by:2161
$4
date
$16
2015-08-17 23:15
*4
$4
HSET
$25
hash:csdn:article:by:2161
$6
author
$9
gentleliu
*4
$4
HSET
$25
hash:csdn:article:by:2161
$12
commentCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2161
$9
labelList
$51
linux内核,操作系统,内核分析,内核源码,
*4
$4
HSET
$25
hash:csdn:article:by:2161
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2161
$10
authorLink
$28
http://my.csdn.net/gentleliu
*4
$4
HSET
$25
hash:csdn:article:by:2161
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2162
$2
id
$4
2162
*4
$4
HSET
$25
hash:csdn:article:by:2162
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2162
$3
url
$54
http://blog.csdn.net/shallnet/article/details/47176167
*4
$4
HSET
$25
hash:csdn:article:by:2162
$5
title
$53
把握linux内核设计思想（九）：进程调度
*4
$4
HSET
$25
hash:csdn:article:by:2162
$4
desc
$236
【版权声明：尊重原创，转载请保留出处：blog.csdn.net/shallnet，文章仅供学习交流，请勿用于商业用途】

       
linux为多任务系统，正常情况下都存在成百上千个任务。由于...
*4
$4
HSET
$25
hash:csdn:article:by:2162
$9
readCount
$4
1321
*4
$4
HSET
$25
hash:csdn:article:by:2162
$14
articleContent
$41
csdn/linux/1_2_1_5_1504264485.270394.html
*4
$4
HSET
$25
hash:csdn:article:by:2162
$4
date
$16
2015-07-31 22:18
*4
$4
HSET
$25
hash:csdn:article:by:2162
$6
author
$9
gentleliu
*4
$4
HSET
$25
hash:csdn:article:by:2162
$12
commentCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2162
$9
labelList
$66
linux内核,进程调度,红黑二叉树,schedule,上下文切换,
*4
$4
HSET
$25
hash:csdn:article:by:2162
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2162
$10
authorLink
$28
http://my.csdn.net/gentleliu
*4
$4
HSET
$25
hash:csdn:article:by:2162
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2163
$2
id
$4
2163
*4
$4
HSET
$25
hash:csdn:article:by:2163
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2163
$3
url
$54
http://blog.csdn.net/shallnet/article/details/47115055
*4
$4
HSET
$25
hash:csdn:article:by:2163
$5
title
$95
把握linux内核设计思想（五）：下半部机制之工作队列及几种机制的选择
*4
$4
HSET
$25
hash:csdn:article:by:2163
$4
desc
$239
【版权声明：尊重原创，转载请保留出处：blog.csdn.net/shallnet，文章仅供学习交流，请勿用于商业用途】
        工作队列是下半部的另外一种将工作推后执行形式。和软中断、tas...
*4
$4
HSET
$25
hash:csdn:article:by:2163
$9
readCount
$4
1583
*4
$4
HSET
$25
hash:csdn:article:by:2163
$14
articleContent
$41
csdn/linux/1_2_1_9_1504264485.889583.html
*4
$4
HSET
$25
hash:csdn:article:by:2163
$4
date
$16
2015-07-29 00:00
*4
$4
HSET
$25
hash:csdn:article:by:2163
$6
author
$9
gentleliu
*4
$4
HSET
$25
hash:csdn:article:by:2163
$12
commentCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2163
$9
labelList
$51
linux内核,下半部,工作队列,工作者线程,
*4
$4
HSET
$25
hash:csdn:article:by:2163
$9
likeCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2163
$10
authorLink
$28
http://my.csdn.net/gentleliu
*4
$4
HSET
$25
hash:csdn:article:by:2163
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2164
$2
id
$4
2164
*4
$4
HSET
$25
hash:csdn:article:by:2164
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2164
$3
url
$54
http://blog.csdn.net/shallnet/article/details/47114737
*4
$4
HSET
$25
hash:csdn:article:by:2164
$5
title
$68
把握linux内核设计思想（三）：下半部机制之软中断
*4
$4
HSET
$25
hash:csdn:article:by:2164
$4
desc
$245
【版权声明：尊重原创，转载请保留出处：blog.csdn.net/shallnet，文章仅供学习交流，请勿用于商业用途】
        中断处理程序以异步方式执行，其会打断其他重要代码，其运行时该中...
*4
$4
HSET
$25
hash:csdn:article:by:2164
$9
readCount
$4
1132
*4
$4
HSET
$25
hash:csdn:article:by:2164
$14
articleContent
$41
csdn/linux/1_2_1_11_1504264486.91509.html
*4
$4
HSET
$25
hash:csdn:article:by:2164
$4
date
$16
2015-07-28 23:35
*4
$4
HSET
$25
hash:csdn:article:by:2164
$6
author
$9
gentleliu
*4
$4
HSET
$25
hash:csdn:article:by:2164
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2164
$9
labelList
$43
linux内核,软中断,do_softirq,下半部,
*4
$4
HSET
$25
hash:csdn:article:by:2164
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2164
$10
authorLink
$28
http://my.csdn.net/gentleliu
*4
$4
HSET
$25
hash:csdn:article:by:2164
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2165
$2
id
$4
2165
*4
$4
HSET
$25
hash:csdn:article:by:2165
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2165
$3
url
$54
http://blog.csdn.net/shallnet/article/details/47114505
*4
$4
HSET
$25
hash:csdn:article:by:2165
$5
title
$65
把握linux内核设计思想（二）：硬中断及中断处理
*4
$4
HSET
$25
hash:csdn:article:by:2165
$4
desc
$295
操作系统负责管理硬件设备，为了使系统和硬件设备的协同工作不降低机器性能，系统和硬件的通信使用中断的机制，也就是让硬件在需要的时候向内核发出信号，这样使得内核不用去轮询设备而导致做很多无用功。
    ...
*4
$4
HSET
$25
hash:csdn:article:by:2165
$9
readCount
$4
1315
*4
$4
HSET
$25
hash:csdn:article:by:2165
$14
articleContent
$41
csdn/linux/1_2_1_12_1504264487.92553.html
*4
$4
HSET
$25
hash:csdn:article:by:2165
$4
date
$16
2015-07-28 23:25
*4
$4
HSET
$25
hash:csdn:article:by:2165
$6
author
$9
gentleliu
*4
$4
HSET
$25
hash:csdn:article:by:2165
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2165
$9
labelList
$49
linux内核,设计,中断,中断处理函数,IRQ,
*4
$4
HSET
$25
hash:csdn:article:by:2165
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2165
$10
authorLink
$28
http://my.csdn.net/gentleliu
*4
$4
HSET
$25
hash:csdn:article:by:2165
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2166
$2
id
$4
2166
*4
$4
HSET
$25
hash:csdn:article:by:2166
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2166
$3
url
$54
http://blog.csdn.net/shallnet/article/details/47114871
*4
$4
HSET
$25
hash:csdn:article:by:2166
$5
title
$66
把握linux内核设计思想（四）：下半部机制之tasklet
*4
$4
HSET
$25
hash:csdn:article:by:2166
$4
desc
$218
【版权声明：尊重原创，转载请保留出处：blog.csdn.net/shallnet，文章仅供学习交流，请勿用于商业用途】
       
tasklet是利用软中断实现的一种下半部机制。tasklet...
*4
$4
HSET
$25
hash:csdn:article:by:2166
$9
readCount
$4
1256
*4
$4
HSET
$25
hash:csdn:article:by:2166
$14
articleContent
$42
csdn/linux/1_2_1_10_1504264488.898274.html
*4
$4
HSET
$25
hash:csdn:article:by:2166
$4
date
$16
2015-07-28 23:46
*4
$4
HSET
$25
hash:csdn:article:by:2166
$6
author
$9
gentleliu
*4
$4
HSET
$25
hash:csdn:article:by:2166
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2166
$9
labelList
$40
linux内核,下半部,软中断,tasklet,
*4
$4
HSET
$25
hash:csdn:article:by:2166
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2166
$10
authorLink
$28
http://my.csdn.net/gentleliu
*4
$4
HSET
$25
hash:csdn:article:by:2166
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2167
$2
id
$4
2167
*4
$4
HSET
$25
hash:csdn:article:by:2167
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2167
$3
url
$54
http://blog.csdn.net/shallnet/article/details/47133263
*4
$4
HSET
$25
hash:csdn:article:by:2167
$5
title
$59
把握linux内核设计思想（八）：进程管理分析
*4
$4
HSET
$25
hash:csdn:article:by:2167
$4
desc
$237
【版权声明：尊重原创，转载请保留出处：blog.csdn.net/shallnet，文章仅供学习交流，请勿用于商业用途】
        进程其实就是程序的执行时的实例，是处于执行期的程序。在linu...
*4
$4
HSET
$25
hash:csdn:article:by:2167
$9
readCount
$4
1339
*4
$4
HSET
$25
hash:csdn:article:by:2167
$14
articleContent
$41
csdn/linux/1_2_1_6_1504264490.017262.html
*4
$4
HSET
$25
hash:csdn:article:by:2167
$4
date
$16
2015-07-29 20:34
*4
$4
HSET
$25
hash:csdn:article:by:2167
$6
author
$9
gentleliu
*4
$4
HSET
$25
hash:csdn:article:by:2167
$12
commentCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2167
$9
labelList
$38
linux内核,进程,线程,task_struct,
*4
$4
HSET
$25
hash:csdn:article:by:2167
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2167
$10
authorLink
$28
http://my.csdn.net/gentleliu
*4
$4
HSET
$25
hash:csdn:article:by:2167
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2168
$2
id
$4
2168
*4
$4
HSET
$25
hash:csdn:article:by:2168
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2168
$3
url
$54
http://blog.csdn.net/shallnet/article/details/47133031
*4
$4
HSET
$25
hash:csdn:article:by:2168
$5
title
$71
把握linux内核设计思想（七）：内核定时器和定时执行
*4
$4
HSET
$25
hash:csdn:article:by:2168
$4
desc
$245
【版权声明：尊重原创，转载请保留出处：blog.csdn.net/shallnet，文章仅供学习交流，请勿用于商业用途】
        前面章节说到了把工作推后到除现在以外的时间执行的机制是下半部机...
*4
$4
HSET
$25
hash:csdn:article:by:2168
$9
readCount
$4
1780
*4
$4
HSET
$25
hash:csdn:article:by:2168
$14
articleContent
$41
csdn/linux/1_2_1_7_1504264490.999532.html
*4
$4
HSET
$25
hash:csdn:article:by:2168
$4
date
$16
2015-07-29 20:18
*4
$4
HSET
$25
hash:csdn:article:by:2168
$6
author
$9
gentleliu
*4
$4
HSET
$25
hash:csdn:article:by:2168
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2168
$9
labelList
$32
linux内核,定时器,软中断,
*4
$4
HSET
$25
hash:csdn:article:by:2168
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2168
$10
authorLink
$28
http://my.csdn.net/gentleliu
*4
$4
HSET
$25
hash:csdn:article:by:2168
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2169
$2
id
$4
2169
*4
$4
HSET
$25
hash:csdn:article:by:2169
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2169
$3
url
$54
http://blog.csdn.net/shallnet/article/details/47132861
*4
$4
HSET
$25
hash:csdn:article:by:2169
$5
title
$59
把握linux内核设计思想（六）：内核时钟中断
*4
$4
HSET
$25
hash:csdn:article:by:2169
$4
desc
$245
【版权声明：尊重原创，转载请保留出处：blog.csdn.net/shallnet，文章仅供学习交流，请勿用于商业用途】
        内核中很多函数是基于时间驱动的，其中有些函数需要周期或定期执行...
*4
$4
HSET
$25
hash:csdn:article:by:2169
$9
readCount
$4
1990
*4
$4
HSET
$25
hash:csdn:article:by:2169
$14
articleContent
$41
csdn/linux/1_2_1_8_1504264492.120319.html
*4
$4
HSET
$25
hash:csdn:article:by:2169
$4
date
$16
2015-07-29 20:03
*4
$4
HSET
$25
hash:csdn:article:by:2169
$6
author
$9
gentleliu
*4
$4
HSET
$25
hash:csdn:article:by:2169
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2169
$9
labelList
$43
linux内核,时钟中断,jiffies,定时器,
*4
$4
HSET
$25
hash:csdn:article:by:2169
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2169
$10
authorLink
$28
http://my.csdn.net/gentleliu
*4
$4
HSET
$25
hash:csdn:article:by:2169
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2170
$2
id
$4
2170
*4
$4
HSET
$25
hash:csdn:article:by:2170
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2170
$3
url
$54
http://blog.csdn.net/shallnet/article/details/47701225
*4
$4
HSET
$25
hash:csdn:article:by:2170
$5
title
$77
把握linux内核设计思想（十三）：内存管理之进程地址空间
*4
$4
HSET
$25
hash:csdn:article:by:2170
$4
desc
$234
【版权声明：尊重原创，转载请保留出处：blog.csdn.net/shallnet，文章仅供学习交流，请勿用于商业用途】

        进程地址空间由进程可寻址的虚拟内存组成，Linux 的虚拟地...
*4
$4
HSET
$25
hash:csdn:article:by:2170
$9
readCount
$4
1365
*4
$4
HSET
$25
hash:csdn:article:by:2170
$14
articleContent
$41
csdn/linux/1_2_1_1_1504264493.088937.html
*4
$4
HSET
$25
hash:csdn:article:by:2170
$4
date
$16
2015-08-16 11:52
*4
$4
HSET
$25
hash:csdn:article:by:2170
$6
author
$9
gentleliu
*4
$4
HSET
$25
hash:csdn:article:by:2170
$12
commentCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2170
$9
labelList
$48
linux内核,内存管理,进程虚拟地址,VMA,
*4
$4
HSET
$25
hash:csdn:article:by:2170
$9
likeCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2170
$10
authorLink
$28
http://my.csdn.net/gentleliu
*4
$4
HSET
$25
hash:csdn:article:by:2170
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2171
$2
id
$4
2171
*4
$4
HSET
$25
hash:csdn:article:by:2171
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2171
$3
url
$54
http://blog.csdn.net/shallnet/article/details/47682593
*4
$4
HSET
$25
hash:csdn:article:by:2171
$5
title
$72
把握linux内核设计思想（十二）：内存管理之slab分配器
*4
$4
HSET
$25
hash:csdn:article:by:2171
$4
desc
$246
【版权声明：尊重原创，转载请保留出处：blog.csdn.net/shallnet，文章仅供学习交流，请勿用于商业用途】

       
上一节最后说到对于小内存区的请求，如果采用伙伴系统来进行分配...
*4
$4
HSET
$25
hash:csdn:article:by:2171
$9
readCount
$4
2343
*4
$4
HSET
$25
hash:csdn:article:by:2171
$14
articleContent
$41
csdn/linux/1_2_1_2_1504264494.061319.html
*4
$4
HSET
$25
hash:csdn:article:by:2171
$4
date
$16
2015-08-15 16:09
*4
$4
HSET
$25
hash:csdn:article:by:2171
$6
author
$9
gentleliu
*4
$4
HSET
$25
hash:csdn:article:by:2171
$12
commentCount
$1
3
*4
$4
HSET
$25
hash:csdn:article:by:2171
$9
labelList
$30
linux内核,内存管理,slab,
*4
$4
HSET
$25
hash:csdn:article:by:2171
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2171
$10
authorLink
$28
http://my.csdn.net/gentleliu
*4
$4
HSET
$25
hash:csdn:article:by:2171
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2172
$2
id
$4
2172
*4
$4
HSET
$25
hash:csdn:article:by:2172
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2172
$3
url
$54
http://blog.csdn.net/shallnet/article/details/47682383
*4
$4
HSET
$25
hash:csdn:article:by:2172
$5
title
$80
把握linux内核设计思想（十一）：内存管理之页的分配与回收
*4
$4
HSET
$25
hash:csdn:article:by:2172
$4
desc
$239
【版权声明：尊重原创，转载请保留出处：blog.csdn.net/shallnet，文章仅供学习交流，请勿用于商业用途】 

        内存管理单元（MMU）负责将管理内存，在把虚拟地址转换为物...
*4
$4
HSET
$25
hash:csdn:article:by:2172
$9
readCount
$4
1278
*4
$4
HSET
$25
hash:csdn:article:by:2172
$14
articleContent
$41
csdn/linux/1_2_1_3_1504264495.103247.html
*4
$4
HSET
$25
hash:csdn:article:by:2172
$4
date
$16
2015-08-15 15:51
*4
$4
HSET
$25
hash:csdn:article:by:2172
$6
author
$9
gentleliu
*4
$4
HSET
$25
hash:csdn:article:by:2172
$12
commentCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2172
$9
labelList
$42
linux内核,内存管理,page,kmalloc,页,
*4
$4
HSET
$25
hash:csdn:article:by:2172
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2172
$10
authorLink
$28
http://my.csdn.net/gentleliu
*4
$4
HSET
$25
hash:csdn:article:by:2172
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2173
$2
id
$4
2173
*4
$4
HSET
$25
hash:csdn:article:by:2173
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2173
$3
url
$54
http://blog.csdn.net/shallnet/article/details/47176683
*4
$4
HSET
$25
hash:csdn:article:by:2173
$5
title
$53
把握linux内核设计思想（十）：内核同步
*4
$4
HSET
$25
hash:csdn:article:by:2173
$4
desc
$238
【版权声明：尊重原创，转载请保留出处：blog.csdn.net/shallnet，文章仅供学习交流，请勿用于商业用途】
        如同linux应用一样，内核的共享资源也要防止并发，因为如果多...
*4
$4
HSET
$25
hash:csdn:article:by:2173
$9
readCount
$4
1012
*4
$4
HSET
$25
hash:csdn:article:by:2173
$14
articleContent
$40
csdn/linux/1_2_1_4_1504264496.19872.html
*4
$4
HSET
$25
hash:csdn:article:by:2173
$4
date
$16
2015-07-31 22:36
*4
$4
HSET
$25
hash:csdn:article:by:2173
$6
author
$9
gentleliu
*4
$4
HSET
$25
hash:csdn:article:by:2173
$12
commentCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2173
$9
labelList
$55
linux内核,互斥体,自旋锁,信号量,禁止抢占,
*4
$4
HSET
$25
hash:csdn:article:by:2173
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2173
$10
authorLink
$28
http://my.csdn.net/gentleliu
*4
$4
HSET
$25
hash:csdn:article:by:2173
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2174
$2
id
$4
2174
*4
$4
HSET
$25
hash:csdn:article:by:2174
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2174
$3
url
$54
http://blog.csdn.net/shallnet/article/details/47113753
*4
$4
HSET
$25
hash:csdn:article:by:2174
$5
title
$53
把握linux内核设计思想（一）：系统调用
*4
$4
HSET
$25
hash:csdn:article:by:2174
$4
desc
$248
【版权声明：尊重原创，转载请保留出处：blog.csdn.net/shallnet，文章仅供学习交流，请勿用于商业用途】
        一般情况下进程不能访问内核所占内存空间也不能调用内核函数。为了...
*4
$4
HSET
$25
hash:csdn:article:by:2174
$9
readCount
$4
1543
*4
$4
HSET
$25
hash:csdn:article:by:2174
$14
articleContent
$42
csdn/linux/1_2_1_13_1504264497.211542.html
*4
$4
HSET
$25
hash:csdn:article:by:2174
$4
date
$16
2015-07-28 23:07
*4
$4
HSET
$25
hash:csdn:article:by:2174
$6
author
$9
gentleliu
*4
$4
HSET
$25
hash:csdn:article:by:2174
$12
commentCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2174
$9
labelList
$54
linux内核,系统调用,实现,getpid,sys_call_table,
*4
$4
HSET
$25
hash:csdn:article:by:2174
$9
likeCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2174
$10
authorLink
$28
http://my.csdn.net/gentleliu
*4
$4
HSET
$25
hash:csdn:article:by:2174
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2175
$2
id
$4
2175
*4
$4
HSET
$25
hash:csdn:article:by:2175
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2175
$3
url
$60
http://blog.csdn.net/dlutbrucezhang/article/details/10066751
*4
$4
HSET
$25
hash:csdn:article:by:2175
$5
title
$35
Linux系统调用中的参数验证
*4
$4
HSET
$25
hash:csdn:article:by:2175
$4
desc
$294
我们都知道，用户程序可以通过库函数来通知内核执行系统调用，由于是在内核空间中执行，所以，每一个步骤都需要非常小心，因为错误的操作随时可以导致系统崩溃。      系统调用必须仔细检查它们所有的参数是否...
*4
$4
HSET
$25
hash:csdn:article:by:2175
$9
readCount
$4
1557
*4
$4
HSET
$25
hash:csdn:article:by:2175
$14
articleContent
$41
csdn/linux/1_0_2_0_1504264499.563199.html
*4
$4
HSET
$25
hash:csdn:article:by:2175
$4
date
$16
2013-08-19 13:01
*4
$4
HSET
$25
hash:csdn:article:by:2175
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2175
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2175
$9
labelList
$40
内存,指针,Linux,Linux Kernel,存储,
*4
$4
HSET
$25
hash:csdn:article:by:2175
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2175
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2175
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2176
$2
id
$4
2176
*4
$4
HSET
$25
hash:csdn:article:by:2176
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2176
$3
url
$63
http://blog.csdn.net/romantichjwhjwhjw/article/details/41445311
*4
$4
HSET
$25
hash:csdn:article:by:2176
$5
title
$82
同一Page范围内多个相同自定义标签类实例化个数相关问题阐述
*4
$4
HSET
$25
hash:csdn:article:by:2176
$4
desc
$37
我们都知道j2ee规范中自定义
*4
$4
HSET
$25
hash:csdn:article:by:2176
$9
readCount
$4
1127
*4
$4
HSET
$25
hash:csdn:article:by:2176
$14
articleContent
$40
csdn/java/1_1_1_0_1504264500.386694.html
*4
$4
HSET
$25
hash:csdn:article:by:2176
$4
date
$16
2014-12-01 00:04
*4
$4
HSET
$25
hash:csdn:article:by:2176
$6
author
$17
romantichjwhjwhjw
*4
$4
HSET
$25
hash:csdn:article:by:2176
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2176
$9
labelList
$68
自定义标签应用,自定义标签按钮级别权限控制设计,
*4
$4
HSET
$25
hash:csdn:article:by:2176
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2176
$10
authorLink
$36
http://my.csdn.net/romantichjwhjwhjw
*4
$4
HSET
$25
hash:csdn:article:by:2176
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2177
$2
id
$4
2177
*4
$4
HSET
$25
hash:csdn:article:by:2177
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2177
$3
url
$59
http://blog.csdn.net/dlutbrucezhang/article/details/9965117
*4
$4
HSET
$25
hash:csdn:article:by:2177
$5
title
$17
Linux内核线程
*4
$4
HSET
$25
hash:csdn:article:by:2177
$4
desc
$303
内核线程是直接由内核本身启动的进程。内核线程实际上是将内核函数委托给独立的进程，与系统中其他进程“并行”执行（实际上，也并行于内核自身的执行），内核线程经常被称为内核“守护进程”。它们主要用于执行下列...
*4
$4
HSET
$25
hash:csdn:article:by:2177
$9
readCount
$4
1234
*4
$4
HSET
$25
hash:csdn:article:by:2177
$14
articleContent
$41
csdn/linux/1_0_2_6_1504264500.452092.html
*4
$4
HSET
$25
hash:csdn:article:by:2177
$4
date
$16
2013-08-14 15:15
*4
$4
HSET
$25
hash:csdn:article:by:2177
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2177
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2177
$9
labelList
$45
多线程,MM,性能优化,Linux Kernel,Linux,
*4
$4
HSET
$25
hash:csdn:article:by:2177
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2177
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2177
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2178
$2
id
$4
2178
*4
$4
HSET
$25
hash:csdn:article:by:2178
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2178
$3
url
$63
http://blog.csdn.net/romantichjwhjwhjw/article/details/25515115
*4
$4
HSET
$25
hash:csdn:article:by:2178
$5
title
$72
jplogic v1.0案例开发之知识库管理（文档管理等）（二）
*4
$4
HSET
$25
hash:csdn:article:by:2178
$4
desc
$54
jplogic v1.0开发陆续更新，意在和广大网友
*4
$4
HSET
$25
hash:csdn:article:by:2178
$9
readCount
$4
3940
*4
$4
HSET
$25
hash:csdn:article:by:2178
$14
articleContent
$40
csdn/java/1_1_1_10_1504264501.21689.html
*4
$4
HSET
$25
hash:csdn:article:by:2178
$4
date
$16
2014-05-11 00:50
*4
$4
HSET
$25
hash:csdn:article:by:2178
$6
author
$17
romantichjwhjwhjw
*4
$4
HSET
$25
hash:csdn:article:by:2178
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2178
$9
labelList
$97
jplogic 极速商业逻辑,知识库管理开发实例,web快速开发平台,全文检索,文档,
*4
$4
HSET
$25
hash:csdn:article:by:2178
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2178
$10
authorLink
$36
http://my.csdn.net/romantichjwhjwhjw
*4
$4
HSET
$25
hash:csdn:article:by:2178
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2179
$2
id
$4
2179
*4
$4
HSET
$25
hash:csdn:article:by:2179
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2179
$3
url
$59
http://blog.csdn.net/dlutbrucezhang/article/details/9926719
*4
$4
HSET
$25
hash:csdn:article:by:2179
$5
title
$23
内存管理单元--MMU
*4
$4
HSET
$25
hash:csdn:article:by:2179
$4
desc
$201
现代操作系统普遍采用虚拟内存管理（Virtual Memory Management）机制，这需要处理器中的MMU（Memory Management Unit，内存管理单元）提供支持，本节简要介绍M...
*4
$4
HSET
$25
hash:csdn:article:by:2179
$9
readCount
$4
1431
*4
$4
HSET
$25
hash:csdn:article:by:2179
$14
articleContent
$42
csdn/linux/1_0_2_10_1504264501.304567.html
*4
$4
HSET
$25
hash:csdn:article:by:2179
$4
date
$16
2013-08-12 15:19
*4
$4
HSET
$25
hash:csdn:article:by:2179
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2179
$12
commentCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2179
$9
labelList
$50
内存管理,处理器,内存,Linux Kernel,内核,
*4
$4
HSET
$25
hash:csdn:article:by:2179
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2179
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2179
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2180
$2
id
$4
2180
*4
$4
HSET
$25
hash:csdn:article:by:2180
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2180
$3
url
$59
http://blog.csdn.net/dlutbrucezhang/article/details/9919453
*4
$4
HSET
$25
hash:csdn:article:by:2180
$5
title
$54
对 jiffies 溢出、回绕及 time_after 宏的理解
*4
$4
HSET
$25
hash:csdn:article:by:2180
$4
desc
$254
原文如下：关于jiffies变量：     全局变量jiffies用来记录自启动以来产生的节拍的总数。系统启动时会将该变量初始化为0，此后，每当时钟中断产生时就会增加该变量的值。jiffies和另外一...
*4
$4
HSET
$25
hash:csdn:article:by:2180
$9
readCount
$4
1960
*4
$4
HSET
$25
hash:csdn:article:by:2180
$14
articleContent
$42
csdn/linux/1_0_2_12_1504264502.263801.html
*4
$4
HSET
$25
hash:csdn:article:by:2180
$4
date
$16
2013-08-12 11:11
*4
$4
HSET
$25
hash:csdn:article:by:2180
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2180
$12
commentCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2180
$9
labelList
$30
宏,类,存储,C,Linux Kernel,
*4
$4
HSET
$25
hash:csdn:article:by:2180
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2180
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2180
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2181
$2
id
$4
2181
*4
$4
HSET
$25
hash:csdn:article:by:2181
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2181
$3
url
$63
http://blog.csdn.net/romantichjwhjwhjw/article/details/28350607
*4
$4
HSET
$25
hash:csdn:article:by:2181
$5
title
$107
jplogicv1.0开发开发案例之知识库文档信息索引检索（类仿百度搜索、类google搜索）
*4
$4
HSET
$25
hash:csdn:article:by:2181
$4
desc
$51
基于很多项目中都可以会使用针对海量
*4
$4
HSET
$25
hash:csdn:article:by:2181
$9
readCount
$4
3373
*4
$4
HSET
$25
hash:csdn:article:by:2181
$14
articleContent
$41
csdn/java/1_1_1_11_1504264502.339877.html
*4
$4
HSET
$25
hash:csdn:article:by:2181
$4
date
$16
2014-06-04 10:23
*4
$4
HSET
$25
hash:csdn:article:by:2181
$6
author
$17
romantichjwhjwhjw
*4
$4
HSET
$25
hash:csdn:article:by:2181
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2181
$9
labelList
$59
jplogic 快速开发平台 仿百度搜索,仿google搜索,
*4
$4
HSET
$25
hash:csdn:article:by:2181
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2181
$10
authorLink
$36
http://my.csdn.net/romantichjwhjwhjw
*4
$4
HSET
$25
hash:csdn:article:by:2181
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2182
$2
id
$4
2182
*4
$4
HSET
$25
hash:csdn:article:by:2182
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2182
$3
url
$63
http://blog.csdn.net/romantichjwhjwhjw/article/details/37584273
*4
$4
HSET
$25
hash:csdn:article:by:2182
$5
title
$46
jplogic开发案例之应用皮肤界面管理
*4
$4
HSET
$25
hash:csdn:article:by:2182
$4
desc
$40
本人陆续推出jplogic开发案例，
*4
$4
HSET
$25
hash:csdn:article:by:2182
$9
readCount
$4
1703
*4
$4
HSET
$25
hash:csdn:article:by:2182
$14
articleContent
$41
csdn/java/1_1_1_14_1504264503.574168.html
*4
$4
HSET
$25
hash:csdn:article:by:2182
$4
date
$16
2014-07-09 22:42
*4
$4
HSET
$25
hash:csdn:article:by:2182
$6
author
$17
romantichjwhjwhjw
*4
$4
HSET
$25
hash:csdn:article:by:2182
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2182
$9
labelList
$102
Java快速开发平台,web皮肤更换,UI组件,jplogic快速开发平台,jplogic  极速商业逻辑,
*4
$4
HSET
$25
hash:csdn:article:by:2182
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2182
$10
authorLink
$36
http://my.csdn.net/romantichjwhjwhjw
*4
$4
HSET
$25
hash:csdn:article:by:2182
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2183
$2
id
$4
2183
*4
$4
HSET
$25
hash:csdn:article:by:2183
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2183
$3
url
$59
http://blog.csdn.net/dlutbrucezhang/article/details/9856383
*4
$4
HSET
$25
hash:csdn:article:by:2183
$5
title
$37
Linux内核--异常和中断的区别
*4
$4
HSET
$25
hash:csdn:article:by:2183
$4
desc
$281
相信大家都知道非常著名的两个名词：异常和中断，不过，你真的理解这两个名词在说什么吗？它们之间有什么区别呢？      1.中断      大家都知道，当我们在敲击键盘的同时就会产生中断，当硬盘读写完数...
*4
$4
HSET
$25
hash:csdn:article:by:2183
$9
readCount
$4
2320
*4
$4
HSET
$25
hash:csdn:article:by:2183
$14
articleContent
$42
csdn/linux/1_0_2_13_1504264503.653902.html
*4
$4
HSET
$25
hash:csdn:article:by:2183
$4
date
$16
2013-08-09 15:38
*4
$4
HSET
$25
hash:csdn:article:by:2183
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2183
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2183
$9
labelList
$43
处理器,内核,硬件,Linux Kernel,Linux,
*4
$4
HSET
$25
hash:csdn:article:by:2183
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2183
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2183
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2184
$2
id
$4
2184
*4
$4
HSET
$25
hash:csdn:article:by:2184
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2184
$3
url
$63
http://blog.csdn.net/romantichjwhjwhjw/article/details/38601469
*4
$4
HSET
$25
hash:csdn:article:by:2184
$5
title
$73
jplogic开发案例之服务器状态信息监控（服务器端监控）
*4
$4
HSET
$25
hash:csdn:article:by:2184
$4
desc
$42
在软件项目中我们时常需要时再
*4
$4
HSET
$25
hash:csdn:article:by:2184
$9
readCount
$4
1248
*4
$4
HSET
$25
hash:csdn:article:by:2184
$14
articleContent
$41
csdn/java/1_1_1_16_1504264504.279262.html
*4
$4
HSET
$25
hash:csdn:article:by:2184
$4
date
$16
2014-08-16 01:03
*4
$4
HSET
$25
hash:csdn:article:by:2184
$6
author
$17
romantichjwhjwhjw
*4
$4
HSET
$25
hash:csdn:article:by:2184
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2184
$9
labelList
$44
服务器监控,jplogic  极速商业逻辑,
*4
$4
HSET
$25
hash:csdn:article:by:2184
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2184
$10
authorLink
$36
http://my.csdn.net/romantichjwhjwhjw
*4
$4
HSET
$25
hash:csdn:article:by:2184
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2185
$2
id
$4
2185
*4
$4
HSET
$25
hash:csdn:article:by:2185
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2185
$3
url
$59
http://blog.csdn.net/dlutbrucezhang/article/details/9925651
*4
$4
HSET
$25
hash:csdn:article:by:2185
$5
title
$23
直接内存访问(DMA)
*4
$4
HSET
$25
hash:csdn:article:by:2185
$4
desc
$273
1. 什么是DMA直接内存访问是一种硬件机制，它允许外围设备和主内存之间直接传输它们的I/O数据，而不需要系统处理器的参与。使用这种机制可以大大提高与设备通信的吞吐量。 2. DMA数据传输有两种方式...
*4
$4
HSET
$25
hash:csdn:article:by:2185
$9
readCount
$4
1236
*4
$4
HSET
$25
hash:csdn:article:by:2185
$14
articleContent
$42
csdn/linux/1_0_2_11_1504264504.406581.html
*4
$4
HSET
$25
hash:csdn:article:by:2185
$4
date
$16
2013-08-12 14:48
*4
$4
HSET
$25
hash:csdn:article:by:2185
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2185
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2185
$9
labelList
$40
内存,struct,Linux Kernel,硬件,Linux,
*4
$4
HSET
$25
hash:csdn:article:by:2185
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2185
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2185
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2186
$2
id
$4
2186
*4
$4
HSET
$25
hash:csdn:article:by:2186
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2186
$3
url
$63
http://blog.csdn.net/romantichjwhjwhjw/article/details/39024051
*4
$4
HSET
$25
hash:csdn:article:by:2186
$5
title
$65
java web服务器监控（j2ee web 服务器各项参数监控）
*4
$4
HSET
$25
hash:csdn:article:by:2186
$4
desc
$83
续 《jplogic开发案例之服务器状态信息监控（服务器端监控）》
*4
$4
HSET
$25
hash:csdn:article:by:2186
$9
readCount
$4
2893
*4
$4
HSET
$25
hash:csdn:article:by:2186
$14
articleContent
$41
csdn/java/1_1_1_17_1504264505.444223.html
*4
$4
HSET
$25
hash:csdn:article:by:2186
$4
date
$16
2014-09-03 10:28
*4
$4
HSET
$25
hash:csdn:article:by:2186
$6
author
$17
romantichjwhjwhjw
*4
$4
HSET
$25
hash:csdn:article:by:2186
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2186
$9
labelList
$40
服务器监控,java web服务器监控,
*4
$4
HSET
$25
hash:csdn:article:by:2186
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2186
$10
authorLink
$36
http://my.csdn.net/romantichjwhjwhjw
*4
$4
HSET
$25
hash:csdn:article:by:2186
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2187
$2
id
$4
2187
*4
$4
HSET
$25
hash:csdn:article:by:2187
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2187
$3
url
$59
http://blog.csdn.net/dlutbrucezhang/article/details/9821187
*4
$4
HSET
$25
hash:csdn:article:by:2187
$5
title
$35
Linux2.6 --系统调用处理程序
*4
$4
HSET
$25
hash:csdn:article:by:2187
$4
desc
$294
用户空间的程序无法直接执行内核代码。它们不能直接调用内核空间中的函数，因为内核驻留在受保护的地址空间上。如果进程可以直接在内核的地址空间上读写的话，系统的安全性和稳定性将不复存在。      所以，应...
*4
$4
HSET
$25
hash:csdn:article:by:2187
$9
readCount
$4
1354
*4
$4
HSET
$25
hash:csdn:article:by:2187
$14
articleContent
$42
csdn/linux/1_0_2_17_1504264505.488661.html
*4
$4
HSET
$25
hash:csdn:article:by:2187
$4
date
$16
2013-08-07 18:57
*4
$4
HSET
$25
hash:csdn:article:by:2187
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2187
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2187
$9
labelList
$46
应用,异常,异常处理,Linux,Linux Kernel,
*4
$4
HSET
$25
hash:csdn:article:by:2187
$9
likeCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2187
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2187
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2188
$2
id
$4
2188
*4
$4
HSET
$25
hash:csdn:article:by:2188
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2188
$3
url
$59
http://blog.csdn.net/dlutbrucezhang/article/details/9962637
*4
$4
HSET
$25
hash:csdn:article:by:2188
$5
title
$21
Linux2.6--Linus电梯
*4
$4
HSET
$25
hash:csdn:article:by:2188
$4
desc
$299
内核为了处理来自IO层的请求，需要进行相应的优化，因为当请求很多时，且请求的块又都几种在一块，那么如果按照顺序处理这些请求无疑是很大的时间开销，所以，我们需要寻求方法来处理这种情况（当然，不只是这一种...
*4
$4
HSET
$25
hash:csdn:article:by:2188
$9
readCount
$4
1766
*4
$4
HSET
$25
hash:csdn:article:by:2188
$14
articleContent
$40
csdn/linux/1_0_2_7_1504264506.66042.html
*4
$4
HSET
$25
hash:csdn:article:by:2188
$4
date
$16
2013-08-14 13:31
*4
$4
HSET
$25
hash:csdn:article:by:2188
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2188
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2188
$9
labelList
$54
磁盘,Linus Torvalds,移动开发,Linux,Linux Kernel,
*4
$4
HSET
$25
hash:csdn:article:by:2188
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2188
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2188
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2189
$2
id
$4
2189
*4
$4
HSET
$25
hash:csdn:article:by:2189
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2189
$3
url
$63
http://blog.csdn.net/romantichjwhjwhjw/article/details/38450711
*4
$4
HSET
$25
hash:csdn:article:by:2189
$5
title
$130
jplogic 开发案例(FMS流媒体服务集成) 之 视频会议管理 (多人互动呼叫-应答模式视频会议含共享白板)
*4
$4
HSET
$25
hash:csdn:article:by:2189
$4
desc
$39
本人之前有做过类似视频语音
*4
$4
HSET
$25
hash:csdn:article:by:2189
$9
readCount
$4
3554
*4
$4
HSET
$25
hash:csdn:article:by:2189
$14
articleContent
$41
csdn/java/1_1_1_15_1504264506.703636.html
*4
$4
HSET
$25
hash:csdn:article:by:2189
$4
date
$16
2014-08-09 01:32
*4
$4
HSET
$25
hash:csdn:article:by:2189
$6
author
$17
romantichjwhjwhjw
*4
$4
HSET
$25
hash:csdn:article:by:2189
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2189
$9
labelList
$122
Java快速开发平台,Flex视频会议多人聊天,共享白板,jplogic  极速商业逻辑,Flex+java+FMS流媒体应用,
*4
$4
HSET
$25
hash:csdn:article:by:2189
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2189
$10
authorLink
$36
http://my.csdn.net/romantichjwhjwhjw
*4
$4
HSET
$25
hash:csdn:article:by:2189
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2190
$2
id
$4
2190
*4
$4
HSET
$25
hash:csdn:article:by:2190
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2190
$3
url
$63
http://blog.csdn.net/romantichjwhjwhjw/article/details/30063783
*4
$4
HSET
$25
hash:csdn:article:by:2190
$5
title
$138
jplogic v1.0 开发案例--知识库管理（视频资料上传、格式转化、视频截图、视频预览、视频信息索引检索）
*4
$4
HSET
$25
hash:csdn:article:by:2190
$4
desc
$72
由于目前很多项目中应用到视频上传预览等功能，本文
*4
$4
HSET
$25
hash:csdn:article:by:2190
$9
readCount
$4
1236
*4
$4
HSET
$25
hash:csdn:article:by:2190
$14
articleContent
$41
csdn/java/1_1_1_12_1504264507.649962.html
*4
$4
HSET
$25
hash:csdn:article:by:2190
$4
date
$16
2014-06-11 16:42
*4
$4
HSET
$25
hash:csdn:article:by:2190
$6
author
$17
romantichjwhjwhjw
*4
$4
HSET
$25
hash:csdn:article:by:2190
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2190
$9
labelList
$107
Java快速开发平台,视频上传,视频格式转化视频截图,视频检索,jplogic 极速商业逻辑,
*4
$4
HSET
$25
hash:csdn:article:by:2190
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2190
$10
authorLink
$36
http://my.csdn.net/romantichjwhjwhjw
*4
$4
HSET
$25
hash:csdn:article:by:2190
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2191
$2
id
$4
2191
*4
$4
HSET
$25
hash:csdn:article:by:2191
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2191
$3
url
$59
http://blog.csdn.net/dlutbrucezhang/article/details/9959419
*4
$4
HSET
$25
hash:csdn:article:by:2191
$5
title
$28
Linux2.6--虚拟文件系统
*4
$4
HSET
$25
hash:csdn:article:by:2191
$4
desc
$271
虚拟文件系统(有时也称作虚拟文件交换,更常见的是简称做VFS)作为内核子系统,为用户空间程序提供了文件和文件系统相关的接口.系统中的所有文件系统不但依赖VFS共存,而且也依赖VFS系统协同工作.通过虚...
*4
$4
HSET
$25
hash:csdn:article:by:2191
$9
readCount
$4
1612
*4
$4
HSET
$25
hash:csdn:article:by:2191
$14
articleContent
$41
csdn/linux/1_0_2_8_1504264507.918879.html
*4
$4
HSET
$25
hash:csdn:article:by:2191
$4
date
$16
2013-08-14 10:10
*4
$4
HSET
$25
hash:csdn:article:by:2191
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2191
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2191
$9
labelList
$46
Linux,文件系统,Linux Kernel,内核,标准,
*4
$4
HSET
$25
hash:csdn:article:by:2191
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2191
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2191
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2192
$2
id
$4
2192
*4
$4
HSET
$25
hash:csdn:article:by:2192
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2192
$3
url
$63
http://blog.csdn.net/romantichjwhjwhjw/article/details/34445253
*4
$4
HSET
$25
hash:csdn:article:by:2192
$5
title
$41
jplogic 之图形报表统计开发案例
*4
$4
HSET
$25
hash:csdn:article:by:2192
$4
desc
$63
纵观目前各种系统项目中都运用到了报表统计，
*4
$4
HSET
$25
hash:csdn:article:by:2192
$9
readCount
$4
1271
*4
$4
HSET
$25
hash:csdn:article:by:2192
$14
articleContent
$41
csdn/java/1_1_1_13_1504264508.577606.html
*4
$4
HSET
$25
hash:csdn:article:by:2192
$4
date
$16
2014-06-25 16:29
*4
$4
HSET
$25
hash:csdn:article:by:2192
$6
author
$17
romantichjwhjwhjw
*4
$4
HSET
$25
hash:csdn:article:by:2192
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2192
$9
labelList
$68
jplogic快速开发平台,highcharts开发实例,图形报表统计,
*4
$4
HSET
$25
hash:csdn:article:by:2192
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2192
$10
authorLink
$36
http://my.csdn.net/romantichjwhjwhjw
*4
$4
HSET
$25
hash:csdn:article:by:2192
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2193
$2
id
$4
2193
*4
$4
HSET
$25
hash:csdn:article:by:2193
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2193
$3
url
$59
http://blog.csdn.net/dlutbrucezhang/article/details/9928209
*4
$4
HSET
$25
hash:csdn:article:by:2193
$5
title
$21
Linux2.6中的Slab层
*4
$4
HSET
$25
hash:csdn:article:by:2193
$4
desc
$278
还记得一个进程创建的时候是什么给它分配的“进程描述符”吗？没错，是slab分配器，那么，这个slab分配器是个什么东西呢？      分配和释放数据结构是所有内核中最普遍的操作之一。为了便于结构的频繁...
*4
$4
HSET
$25
hash:csdn:article:by:2193
$9
readCount
$4
1503
*4
$4
HSET
$25
hash:csdn:article:by:2193
$14
articleContent
$41
csdn/linux/1_0_2_9_1504264508.622575.html
*4
$4
HSET
$25
hash:csdn:article:by:2193
$4
date
$16
2013-08-12 16:23
*4
$4
HSET
$25
hash:csdn:article:by:2193
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2193
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2193
$9
labelList
$46
Cache,数据结构,内核,链表,Linux Kernel,
*4
$4
HSET
$25
hash:csdn:article:by:2193
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2193
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2193
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2194
$2
id
$4
2194
*4
$4
HSET
$25
hash:csdn:article:by:2194
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2194
$3
url
$63
http://blog.csdn.net/romantichjwhjwhjw/article/details/41399123
*4
$4
HSET
$25
hash:csdn:article:by:2194
$5
title
$48
浅谈各类RAD快速开发平台存在的意义
*4
$4
HSET
$25
hash:csdn:article:by:2194
$4
desc
$82
今天和大伙谈论一个话题各类快速开发平台（jplogic）存在意义
*4
$4
HSET
$25
hash:csdn:article:by:2194
$9
readCount
$4
2087
*4
$4
HSET
$25
hash:csdn:article:by:2194
$14
articleContent
$40
csdn/java/1_1_1_1_1504264509.715665.html
*4
$4
HSET
$25
hash:csdn:article:by:2194
$4
date
$16
2014-12-01 00:07
*4
$4
HSET
$25
hash:csdn:article:by:2194
$6
author
$17
romantichjwhjwhjw
*4
$4
HSET
$25
hash:csdn:article:by:2194
$12
commentCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2194
$9
labelList
$65
jplogic  极速商业逻辑,各类快速开发平台存在意义,
*4
$4
HSET
$25
hash:csdn:article:by:2194
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2194
$10
authorLink
$36
http://my.csdn.net/romantichjwhjwhjw
*4
$4
HSET
$25
hash:csdn:article:by:2194
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2195
$2
id
$4
2195
*4
$4
HSET
$25
hash:csdn:article:by:2195
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2195
$3
url
$60
http://blog.csdn.net/dlutbrucezhang/article/details/10062105
*4
$4
HSET
$25
hash:csdn:article:by:2195
$5
title
$40
Linux2.6--进程抢占和上下文切换
*4
$4
HSET
$25
hash:csdn:article:by:2195
$4
desc
$231
上下文切换，也就是从一个可执行进程切换到另一个可执行进程，由定义在kernel/sched.c中的context_switch()函数负责处理。每当一个新的进程被选出来准备投入运行的时候，schedu...
*4
$4
HSET
$25
hash:csdn:article:by:2195
$9
readCount
$4
2371
*4
$4
HSET
$25
hash:csdn:article:by:2195
$14
articleContent
$41
csdn/linux/1_0_2_1_1504264509.838912.html
*4
$4
HSET
$25
hash:csdn:article:by:2195
$4
date
$16
2013-08-19 10:07
*4
$4
HSET
$25
hash:csdn:article:by:2195
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2195
$12
commentCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2195
$9
labelList
$41
处理器,switch,Linux,Linux Kernel,Unix,
*4
$4
HSET
$25
hash:csdn:article:by:2195
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2195
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2195
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2196
$2
id
$4
2196
*4
$4
HSET
$25
hash:csdn:article:by:2196
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2196
$3
url
$59
http://blog.csdn.net/dlutbrucezhang/article/details/9998781
*4
$4
HSET
$25
hash:csdn:article:by:2196
$5
title
$56
读《Linux内核设计与实现》我想到了这些书
*4
$4
HSET
$25
hash:csdn:article:by:2196
$4
desc
$274
从题目中可以看到，这篇文章是以我读《Linux内核设计与实现》而想到的其他我读过的书，所以，这篇文章的主要支撑点是《Linux内核》。      开始读这本书已经是很久以前的事了，不过，由于时间和精力...
*4
$4
HSET
$25
hash:csdn:article:by:2196
$9
readCount
$4
9210
*4
$4
HSET
$25
hash:csdn:article:by:2196
$14
articleContent
$41
csdn/linux/1_0_2_2_1504264509.885008.html
*4
$4
HSET
$25
hash:csdn:article:by:2196
$4
date
$16
2013-08-19 08:59
*4
$4
HSET
$25
hash:csdn:article:by:2196
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2196
$12
commentCount
$2
37
*4
$4
HSET
$25
hash:csdn:article:by:2196
$9
labelList
$44
内核,数据结构,Linux,Linux Kernel,Unix,
*4
$4
HSET
$25
hash:csdn:article:by:2196
$9
likeCount
$2
17
*4
$4
HSET
$25
hash:csdn:article:by:2196
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2196
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2197
$2
id
$4
2197
*4
$4
HSET
$25
hash:csdn:article:by:2197
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2197
$3
url
$63
http://blog.csdn.net/romantichjwhjwhjw/article/details/39960083
*4
$4
HSET
$25
hash:csdn:article:by:2197
$5
title
$51
国内O2O运营模式逐渐改变我们生活方式
*4
$4
HSET
$25
hash:csdn:article:by:2197
$4
desc
$45
最近看了一篇关于O2O的文章，让我
*4
$4
HSET
$25
hash:csdn:article:by:2197
$9
readCount
$4
1650
*4
$4
HSET
$25
hash:csdn:article:by:2197
$14
articleContent
$40
csdn/java/1_1_1_6_1504264510.614827.html
*4
$4
HSET
$25
hash:csdn:article:by:2197
$4
date
$16
2014-10-10 14:21
*4
$4
HSET
$25
hash:csdn:article:by:2197
$6
author
$17
romantichjwhjwhjw
*4
$4
HSET
$25
hash:csdn:article:by:2197
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2197
$9
labelList
$24
商业模式,运营,o2o,
*4
$4
HSET
$25
hash:csdn:article:by:2197
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2197
$10
authorLink
$36
http://my.csdn.net/romantichjwhjwhjw
*4
$4
HSET
$25
hash:csdn:article:by:2197
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2198
$2
id
$4
2198
*4
$4
HSET
$25
hash:csdn:article:by:2198
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2198
$3
url
$63
http://blog.csdn.net/romantichjwhjwhjw/article/details/41514403
*4
$4
HSET
$25
hash:csdn:article:by:2198
$5
title
$91
Java web自定义标签按钮级别权限控制完美诠释（jplogic 快速开发平台）
*4
$4
HSET
$25
hash:csdn:article:by:2198
$4
desc
$223
接下来跟大家聊聊JavaWeb中权限控制，往大的方向说可以聊聊整合应用系统中的权限控制。在聊权限控制之前先跟大家聊聊RBAC。那么什么是RBAC呢？RBAC（Role-Based
 Access Co...
*4
$4
HSET
$25
hash:csdn:article:by:2198
$9
readCount
$4
3717
*4
$4
HSET
$25
hash:csdn:article:by:2198
$14
articleContent
$40
csdn/java/1_1_1_2_1504264510.661706.html
*4
$4
HSET
$25
hash:csdn:article:by:2198
$4
date
$16
2014-12-01 00:06
*4
$4
HSET
$25
hash:csdn:article:by:2198
$6
author
$17
romantichjwhjwhjw
*4
$4
HSET
$25
hash:csdn:article:by:2198
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2198
$9
labelList
$57
标签,自定义标签按钮级别权限控制,可视化,
*4
$4
HSET
$25
hash:csdn:article:by:2198
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2198
$10
authorLink
$36
http://my.csdn.net/romantichjwhjwhjw
*4
$4
HSET
$25
hash:csdn:article:by:2198
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2199
$2
id
$4
2199
*4
$4
HSET
$25
hash:csdn:article:by:2199
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2199
$3
url
$59
http://blog.csdn.net/dlutbrucezhang/article/details/9981643
*4
$4
HSET
$25
hash:csdn:article:by:2199
$5
title
$24
Linux/Unix--设备类型
*4
$4
HSET
$25
hash:csdn:article:by:2199
$4
desc
$232
在Linux以及所有的Unix系统中，设备被分为以下三种类型：      块设备      字符设备      网络设备       块设备通常写为 blkdev ，它是可以寻址的，寻址以块为单位，块...
*4
$4
HSET
$25
hash:csdn:article:by:2199
$9
readCount
$4
1330
*4
$4
HSET
$25
hash:csdn:article:by:2199
$14
articleContent
$41
csdn/linux/1_0_2_4_1504264510.912357.html
*4
$4
HSET
$25
hash:csdn:article:by:2199
$4
date
$16
2013-08-15 13:22
*4
$4
HSET
$25
hash:csdn:article:by:2199
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2199
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2199
$9
labelList
$35
类,网络,Unix,Linux Kernel,Linux,
*4
$4
HSET
$25
hash:csdn:article:by:2199
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2199
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2199
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2200
$2
id
$4
2200
*4
$4
HSET
$25
hash:csdn:article:by:2200
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2200
$3
url
$59
http://blog.csdn.net/dlutbrucezhang/article/details/9967849
*4
$4
HSET
$25
hash:csdn:article:by:2200
$5
title
$29
Linux内存映射--mmap函数
*4
$4
HSET
$25
hash:csdn:article:by:2200
$4
desc
$245
Linux提供了内存映射函数mmap, 它把文件内容映射到一段内存上(准确说是虚拟内存上), 通过对这段内存的读取和修改, 实现对文件的读取和修改, 先来看一下mmap的函数声明:头文件:原型: vo...
*4
$4
HSET
$25
hash:csdn:article:by:2200
$9
readCount
$4
2095
*4
$4
HSET
$25
hash:csdn:article:by:2200
$14
articleContent
$41
csdn/linux/1_0_2_5_1504264511.663361.html
*4
$4
HSET
$25
hash:csdn:article:by:2200
$4
date
$16
2013-08-14 17:12
*4
$4
HSET
$25
hash:csdn:article:by:2200
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2200
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2200
$9
labelList
$37
内存,Linux Kernel,Linux,DST,内核,
*4
$4
HSET
$25
hash:csdn:article:by:2200
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2200
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2200
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2201
$2
id
$4
2201
*4
$4
HSET
$25
hash:csdn:article:by:2201
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2201
$3
url
$63
http://blog.csdn.net/romantichjwhjwhjw/article/details/22123527
*4
$4
HSET
$25
hash:csdn:article:by:2201
$5
title
$76
jplogic v1.0 Java快速开发平台  Vs 目前市面上的快速开发平台
*4
$4
HSET
$25
hash:csdn:article:by:2201
$4
desc
$267
平台登录界面（支持多系统登录或者单点登录）：


系统主页面（demo）：


主页页面的内容可以需要灵活定制
本人往后会陆续更新平台使用案例，平台交流、技术交流或项目合作可以加群交流：3764471...
*4
$4
HSET
$25
hash:csdn:article:by:2201
$9
readCount
$4
3651
*4
$4
HSET
$25
hash:csdn:article:by:2201
$14
articleContent
$40
csdn/java/1_1_1_8_1504264511.702687.html
*4
$4
HSET
$25
hash:csdn:article:by:2201
$4
date
$16
2014-03-26 01:50
*4
$4
HSET
$25
hash:csdn:article:by:2201
$6
author
$17
romantichjwhjwhjw
*4
$4
HSET
$25
hash:csdn:article:by:2201
$12
commentCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2201
$9
labelList
$68
jplogic  极速商业逻辑,平台,Java快速开发平台,云服务,
*4
$4
HSET
$25
hash:csdn:article:by:2201
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2201
$10
authorLink
$36
http://my.csdn.net/romantichjwhjwhjw
*4
$4
HSET
$25
hash:csdn:article:by:2201
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2202
$2
id
$4
2202
*4
$4
HSET
$25
hash:csdn:article:by:2202
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2202
$3
url
$63
http://blog.csdn.net/romantichjwhjwhjw/article/details/22582471
*4
$4
HSET
$25
hash:csdn:article:by:2202
$5
title
$54
jplogic v1.0案例开发之人员信息管理（一）
*4
$4
HSET
$25
hash:csdn:article:by:2202
$4
desc
$267
个人技术交流、合作群：376447127，我分享了使用jplogic来进行企业基础模块项目的开发的相关方法，每一个模块都使用平台通用的UI控件，控件本身绑定了相应的校验功能、以及权限控制属性等，组件还...
*4
$4
HSET
$25
hash:csdn:article:by:2202
$9
readCount
$4
2603
*4
$4
HSET
$25
hash:csdn:article:by:2202
$14
articleContent
$40
csdn/java/1_1_1_9_1504264512.680452.html
*4
$4
HSET
$25
hash:csdn:article:by:2202
$4
date
$16
2014-03-30 14:31
*4
$4
HSET
$25
hash:csdn:article:by:2202
$6
author
$17
romantichjwhjwhjw
*4
$4
HSET
$25
hash:csdn:article:by:2202
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2202
$9
labelList
$73
jplogic  极速商业逻辑,快速开发案例,jplogic快速开发平台,
*4
$4
HSET
$25
hash:csdn:article:by:2202
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2202
$10
authorLink
$36
http://my.csdn.net/romantichjwhjwhjw
*4
$4
HSET
$25
hash:csdn:article:by:2202
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2203
$2
id
$4
2203
*4
$4
HSET
$25
hash:csdn:article:by:2203
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2203
$3
url
$59
http://blog.csdn.net/dlutbrucezhang/article/details/9985371
*4
$4
HSET
$25
hash:csdn:article:by:2203
$5
title
$20
linux下字节对齐
*4
$4
HSET
$25
hash:csdn:article:by:2203
$4
desc
$275
一，内存地址对齐的概念   计算机内存中排列、访问数据的一种方式，包含基本数据对齐和结构体数据对齐。   32位系统中，数据总线宽度为32，每次能够读取4字节数据。地址总线为32，最大寻址空间为4GB...
*4
$4
HSET
$25
hash:csdn:article:by:2203
$9
readCount
$4
2148
*4
$4
HSET
$25
hash:csdn:article:by:2203
$14
articleContent
$41
csdn/linux/1_0_2_3_1504264512.917497.html
*4
$4
HSET
$25
hash:csdn:article:by:2203
$4
date
$16
2013-08-15 16:11
*4
$4
HSET
$25
hash:csdn:article:by:2203
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2203
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2203
$9
labelList
$36
Structure,存储,类,C,Linux Kernel,
*4
$4
HSET
$25
hash:csdn:article:by:2203
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2203
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2203
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2204
$2
id
$4
2204
*4
$4
HSET
$25
hash:csdn:article:by:2204
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2204
$3
url
$63
http://blog.csdn.net/romantichjwhjwhjw/article/details/21025737
*4
$4
HSET
$25
hash:csdn:article:by:2204
$5
title
$22
java快速开发平台
*4
$4
HSET
$25
hash:csdn:article:by:2204
$4
desc
$303
一直没有习惯写技术博客，看着诸多大牛分享自己的一些项目经验。本人也突然有想写博客的冲动，旨在结交有识之士（朋友），彼此分享经验。同时也希望中国的软件行业有更大突破性的发展。当然如果希望进行项目合作也可...
*4
$4
HSET
$25
hash:csdn:article:by:2204
$9
readCount
$4
2461
*4
$4
HSET
$25
hash:csdn:article:by:2204
$14
articleContent
$39
csdn/java/1_1_1_7_1504264513.99425.html
*4
$4
HSET
$25
hash:csdn:article:by:2204
$4
date
$16
2014-03-11 17:15
*4
$4
HSET
$25
hash:csdn:article:by:2204
$6
author
$17
romantichjwhjwhjw
*4
$4
HSET
$25
hash:csdn:article:by:2204
$12
commentCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2204
$9
labelList
$90
dhtmlxscheduler,jplogic快速开发平台,web快速开发平台,日程安排,权限管理,
*4
$4
HSET
$25
hash:csdn:article:by:2204
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2204
$10
authorLink
$36
http://my.csdn.net/romantichjwhjwhjw
*4
$4
HSET
$25
hash:csdn:article:by:2204
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2205
$2
id
$4
2205
*4
$4
HSET
$25
hash:csdn:article:by:2205
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2205
$3
url
$59
http://blog.csdn.net/dlutbrucezhang/article/details/9853463
*4
$4
HSET
$25
hash:csdn:article:by:2205
$5
title
$20
linux2.6内核链表
*4
$4
HSET
$25
hash:csdn:article:by:2205
$4
desc
$283
一、        链表数据结构简介      链表是一种常用的组织有序数据的数据结构，它通过指针将一系列数据节点连接成一条数据链，是线性表的一种重要实现方式。相对于数组，链表具有更好的动态性，建立链...
*4
$4
HSET
$25
hash:csdn:article:by:2205
$9
readCount
$4
1142
*4
$4
HSET
$25
hash:csdn:article:by:2205
$14
articleContent
$42
csdn/linux/1_0_2_14_1504264514.040282.html
*4
$4
HSET
$25
hash:csdn:article:by:2205
$4
date
$16
2013-08-09 13:09
*4
$4
HSET
$25
hash:csdn:article:by:2205
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2205
$12
commentCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2205
$9
labelList
$40
struct,C++,单链表,Linux Kernel,Linux,
*4
$4
HSET
$25
hash:csdn:article:by:2205
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2205
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2205
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2206
$2
id
$4
2206
*4
$4
HSET
$25
hash:csdn:article:by:2206
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2206
$3
url
$63
http://blog.csdn.net/romantichjwhjwhjw/article/details/41562039
*4
$4
HSET
$25
hash:csdn:article:by:2206
$5
title
$37
jplogic之GIS搜狗地图开发案例
*4
$4
HSET
$25
hash:csdn:article:by:2206
$4
desc
$290
在项目开发过程中我们可能遇到各种各样的需求，而GIS在应用便是其中一个。特别是在web类型的项目中会经常用到。我们都知道 网络地图服务，以其实时性、大信息量、丰富的功能，成为传统地图的延伸，同时扩展出...
*4
$4
HSET
$25
hash:csdn:article:by:2206
$9
readCount
$4
1181
*4
$4
HSET
$25
hash:csdn:article:by:2206
$14
articleContent
$40
csdn/java/1_1_1_3_1504264515.004601.html
*4
$4
HSET
$25
hash:csdn:article:by:2206
$4
date
$16
2014-12-01 00:06
*4
$4
HSET
$25
hash:csdn:article:by:2206
$6
author
$17
romantichjwhjwhjw
*4
$4
HSET
$25
hash:csdn:article:by:2206
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2206
$9
labelList
$29
GIS开发实例,搜狗地图,
*4
$4
HSET
$25
hash:csdn:article:by:2206
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2206
$10
authorLink
$36
http://my.csdn.net/romantichjwhjwhjw
*4
$4
HSET
$25
hash:csdn:article:by:2206
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2207
$2
id
$4
2207
*4
$4
HSET
$25
hash:csdn:article:by:2207
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2207
$3
url
$59
http://blog.csdn.net/dlutbrucezhang/article/details/9817951
*4
$4
HSET
$25
hash:csdn:article:by:2207
$5
title
$22
Linux2.6内核--抢占
*4
$4
HSET
$25
hash:csdn:article:by:2207
$4
desc
$189
【摘要】本文首先介绍非抢占式内核(Non-Preemptive Kernel)和可抢占式内核(Preemptive Kernel)的区别。接着分析Linux下有两种抢占：用户态抢占(User Pree...
*4
$4
HSET
$25
hash:csdn:article:by:2207
$9
readCount
$4
1218
*4
$4
HSET
$25
hash:csdn:article:by:2207
$14
articleContent
$42
csdn/linux/1_0_2_18_1504264515.053555.html
*4
$4
HSET
$25
hash:csdn:article:by:2207
$4
date
$16
2013-08-07 15:40
*4
$4
HSET
$25
hash:csdn:article:by:2207
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2207
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2207
$9
labelList
$49
内核,处理器,数据结构,Linux,Linux Kernel,
*4
$4
HSET
$25
hash:csdn:article:by:2207
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2207
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2207
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2208
$2
id
$4
2208
*4
$4
HSET
$25
hash:csdn:article:by:2208
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2208
$3
url
$63
http://blog.csdn.net/romantichjwhjwhjw/article/details/41043809
*4
$4
HSET
$25
hash:csdn:article:by:2208
$5
title
$74
jplogic之activiti modeler流程设计器集成案例（非spring集成）
*4
$4
HSET
$25
hash:csdn:article:by:2208
$4
desc
$95
续《jplogic之activiti整合案例（自定义流程引擎[非开源框架]待续）》关于
*4
$4
HSET
$25
hash:csdn:article:by:2208
$9
readCount
$4
2130
*4
$4
HSET
$25
hash:csdn:article:by:2208
$14
articleContent
$40
csdn/java/1_1_1_4_1504264515.848724.html
*4
$4
HSET
$25
hash:csdn:article:by:2208
$4
date
$16
2014-11-12 15:56
*4
$4
HSET
$25
hash:csdn:article:by:2208
$6
author
$17
romantichjwhjwhjw
*4
$4
HSET
$25
hash:csdn:article:by:2208
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2208
$9
labelList
$77
jplogic  极速商业逻辑,工作流,activiti modeler,在线流程设计器,
*4
$4
HSET
$25
hash:csdn:article:by:2208
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2208
$10
authorLink
$36
http://my.csdn.net/romantichjwhjwhjw
*4
$4
HSET
$25
hash:csdn:article:by:2208
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2209
$2
id
$4
2209
*4
$4
HSET
$25
hash:csdn:article:by:2209
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2209
$3
url
$59
http://blog.csdn.net/dlutbrucezhang/article/details/9807939
*4
$4
HSET
$25
hash:csdn:article:by:2209
$5
title
$20
linux内核cfs浅析
*4
$4
HSET
$25
hash:csdn:article:by:2209
$4
desc
$267
linux调度器的一般原理请参阅《linux进程调度浅析》。之前的调度器cfs之前的linux调度器一般使用用户设定的静态优先级，加上对于进程交互性的判断来生成动态优先级，再根据动态优先级决定进程被调...
*4
$4
HSET
$25
hash:csdn:article:by:2209
$9
readCount
$4
1259
*4
$4
HSET
$25
hash:csdn:article:by:2209
$14
articleContent
$42
csdn/linux/1_0_2_19_1504264515.907319.html
*4
$4
HSET
$25
hash:csdn:article:by:2209
$4
date
$16
2013-08-07 04:28
*4
$4
HSET
$25
hash:csdn:article:by:2209
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2209
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2209
$9
labelList
$49
处理器,迁移,负载均衡,Linux,Linux Kernel,
*4
$4
HSET
$25
hash:csdn:article:by:2209
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2209
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2209
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2210
$2
id
$4
2210
*4
$4
HSET
$25
hash:csdn:article:by:2210
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2210
$3
url
$63
http://blog.csdn.net/romantichjwhjwhjw/article/details/40624413
*4
$4
HSET
$25
hash:csdn:article:by:2210
$5
title
$80
jplogic之activiti整合案例（自定义流程引擎[非开源框架]待续）
*4
$4
HSET
$25
hash:csdn:article:by:2210
$4
desc
$233
Activiti 作为一个遵从 Apache 许可的工作流和业务流程管理开源平台，其核心是基于 Java
 的超快速、超稳定的 BPMN 2.0 流程引擎，强调流程服务的可嵌入性和可扩展性，同时更加...
*4
$4
HSET
$25
hash:csdn:article:by:2210
$9
readCount
$4
2061
*4
$4
HSET
$25
hash:csdn:article:by:2210
$14
articleContent
$40
csdn/java/1_1_1_5_1504264516.815842.html
*4
$4
HSET
$25
hash:csdn:article:by:2210
$4
date
$16
2014-11-01 00:15
*4
$4
HSET
$25
hash:csdn:article:by:2210
$6
author
$17
romantichjwhjwhjw
*4
$4
HSET
$25
hash:csdn:article:by:2210
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2210
$9
labelList
$41
工作流引擎,activiti实例,工作流,
*4
$4
HSET
$25
hash:csdn:article:by:2210
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2210
$10
authorLink
$36
http://my.csdn.net/romantichjwhjwhjw
*4
$4
HSET
$25
hash:csdn:article:by:2210
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2211
$2
id
$4
2211
*4
$4
HSET
$25
hash:csdn:article:by:2211
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2211
$3
url
$59
http://blog.csdn.net/dlutbrucezhang/article/details/9824407
*4
$4
HSET
$25
hash:csdn:article:by:2211
$5
title
$15
机制与策略
*4
$4
HSET
$25
hash:csdn:article:by:2211
$4
desc
$245
Unix/Linux的接口设计有一句通用的格言“提供机制而不是策略”。区别对待机制（mechanism）和策略（policy）是Unix设计中的一大亮点。大部分的编程问题都可以被切割成两个部分：“需要...
*4
$4
HSET
$25
hash:csdn:article:by:2211
$9
readCount
$4
2186
*4
$4
HSET
$25
hash:csdn:article:by:2211
$14
articleContent
$41
csdn/linux/1_0_2_15_1504264516.99444.html
*4
$4
HSET
$25
hash:csdn:article:by:2211
$4
date
$16
2013-08-07 22:51
*4
$4
HSET
$25
hash:csdn:article:by:2211
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2211
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2211
$9
labelList
$49
操作系统,框架,多线程,Linux,Linux Kernel,
*4
$4
HSET
$25
hash:csdn:article:by:2211
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2211
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2211
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2212
$2
id
$4
2212
*4
$4
HSET
$25
hash:csdn:article:by:2212
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2212
$3
url
$59
http://blog.csdn.net/dlutbrucezhang/article/details/9821527
*4
$4
HSET
$25
hash:csdn:article:by:2212
$5
title
$38
Linux系统调用的实现机制分析
*4
$4
HSET
$25
hash:csdn:article:by:2212
$4
desc
$303
【摘要】本文介绍了系统调用的一些实现细节。首先分析了系统调用的意义，它们与库函数和应用程序接口有怎样的关系。然后，我们考察了内核如何实现系统调用，以及执行系统调用的连锁反应：陷入内核，传递系统调用号和...
*4
$4
HSET
$25
hash:csdn:article:by:2212
$9
readCount
$4
3197
*4
$4
HSET
$25
hash:csdn:article:by:2212
$14
articleContent
$41
csdn/linux/1_0_2_16_1504264517.97748.html
*4
$4
HSET
$25
hash:csdn:article:by:2212
$4
date
$16
2013-08-07 19:23
*4
$4
HSET
$25
hash:csdn:article:by:2212
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2212
$12
commentCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2212
$9
labelList
$42
内核,应用,行业数据,C,Linux Kernel,
*4
$4
HSET
$25
hash:csdn:article:by:2212
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2212
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2212
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2213
$2
id
$4
2213
*4
$4
HSET
$25
hash:csdn:article:by:2213
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2213
$3
url
$55
http://blog.csdn.net/supera_li/article/details/45198341
*4
$4
HSET
$25
hash:csdn:article:by:2213
$5
title
$53
【总结】Effective java经验之谈，并发编程
*4
$4
HSET
$25
hash:csdn:article:by:2213
$4
desc
$147
内容包括，并发与并行，并发约束，并发下的集合类性能分析，并发相关包的概述，并发场景，并发总结集合包
*4
$4
HSET
$25
hash:csdn:article:by:2213
$9
readCount
$4
1360
*4
$4
HSET
$25
hash:csdn:article:by:2213
$14
articleContent
$40
csdn/java/1_1_1_0_1504264518.810351.html
*4
$4
HSET
$25
hash:csdn:article:by:2213
$4
date
$16
2015-04-22 17:49
*4
$4
HSET
$25
hash:csdn:article:by:2213
$6
author
$10
superMarss
*4
$4
HSET
$25
hash:csdn:article:by:2213
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2213
$9
labelList
$25
接口,并发,set,集合,
*4
$4
HSET
$25
hash:csdn:article:by:2213
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2213
$10
authorLink
$29
http://my.csdn.net/superMarss
*4
$4
HSET
$25
hash:csdn:article:by:2213
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2214
$2
id
$4
2214
*4
$4
HSET
$25
hash:csdn:article:by:2214
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2214
$3
url
$55
http://blog.csdn.net/supera_li/article/details/45155857
*4
$4
HSET
$25
hash:csdn:article:by:2214
$5
title
$89
【总结】Effective java经验之谈，枚举，注解，方法，通用设计，异常
*4
$4
HSET
$25
hash:csdn:article:by:2214
$4
desc
$299
这几章看的比较快，内容就如同标题一样比较容易理解，所以只有部分内容会在[]中解释，其他的就直接理解标题，并不影响阅读质量。不过如果时间充足的话，还是仔细读一读原书的内容，相信还是有所收获的。主要最近自...
*4
$4
HSET
$25
hash:csdn:article:by:2214
$9
readCount
$4
1315
*4
$4
HSET
$25
hash:csdn:article:by:2214
$14
articleContent
$40
csdn/java/1_1_1_1_1504264520.021046.html
*4
$4
HSET
$25
hash:csdn:article:by:2214
$4
date
$16
2015-04-20 21:27
*4
$4
HSET
$25
hash:csdn:article:by:2214
$6
author
$10
superMarss
*4
$4
HSET
$25
hash:csdn:article:by:2214
$12
commentCount
$1
5
*4
$4
HSET
$25
hash:csdn:article:by:2214
$9
labelList
$35
注解,方法,编程,异常,设计,
*4
$4
HSET
$25
hash:csdn:article:by:2214
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2214
$10
authorLink
$29
http://my.csdn.net/superMarss
*4
$4
HSET
$25
hash:csdn:article:by:2214
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2215
$2
id
$4
2215
*4
$4
HSET
$25
hash:csdn:article:by:2215
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2215
$3
url
$55
http://blog.csdn.net/supera_li/article/details/44940563
*4
$4
HSET
$25
hash:csdn:article:by:2215
$5
title
$53
【总结】Effective java经验之谈，类与接口
*4
$4
HSET
$25
hash:csdn:article:by:2215
$4
desc
$296
本章描述的是，自己在做系统重构的时候，阅读的章节，给自己在架构方面提供很大帮助。总结出一些干货分享一下啊啊啊~~主要应用场景是编写类与接口的时候需要注意的问题。每一章不一定按照顺序更新。欢迎拍砖补充。
*4
$4
HSET
$25
hash:csdn:article:by:2215
$9
readCount
$3
953
*4
$4
HSET
$25
hash:csdn:article:by:2215
$14
articleContent
$40
csdn/java/1_1_1_3_1504264520.942652.html
*4
$4
HSET
$25
hash:csdn:article:by:2215
$4
date
$16
2015-04-08 14:45
*4
$4
HSET
$25
hash:csdn:article:by:2215
$6
author
$10
superMarss
*4
$4
HSET
$25
hash:csdn:article:by:2215
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2215
$9
labelList
$9
java,类,
*4
$4
HSET
$25
hash:csdn:article:by:2215
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2215
$10
authorLink
$29
http://my.csdn.net/superMarss
*4
$4
HSET
$25
hash:csdn:article:by:2215
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2216
$2
id
$4
2216
*4
$4
HSET
$25
hash:csdn:article:by:2216
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2216
$3
url
$55
http://blog.csdn.net/supera_li/article/details/45064081
*4
$4
HSET
$25
hash:csdn:article:by:2216
$5
title
$47
【总结】Effective java经验之谈，泛型
*4
$4
HSET
$25
hash:csdn:article:by:2216
$4
desc
$198
对于泛型这一章，在起始写框架的时候，并没有注意细节，造成了很多方法或者类的错误设计。这本书在这点上弥补了我一个短板。大概的总结如下。
*4
$4
HSET
$25
hash:csdn:article:by:2216
$9
readCount
$4
1017
*4
$4
HSET
$25
hash:csdn:article:by:2216
$14
articleContent
$40
csdn/java/1_1_1_4_1504264522.188482.html
*4
$4
HSET
$25
hash:csdn:article:by:2216
$4
date
$16
2015-04-15 20:02
*4
$4
HSET
$25
hash:csdn:article:by:2216
$6
author
$10
superMarss
*4
$4
HSET
$25
hash:csdn:article:by:2216
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2216
$9
labelList
$33
java,设计,泛型,api,arraylist,
*4
$4
HSET
$25
hash:csdn:article:by:2216
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2216
$10
authorLink
$29
http://my.csdn.net/superMarss
*4
$4
HSET
$25
hash:csdn:article:by:2216
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2217
$2
id
$4
2217
*4
$4
HSET
$25
hash:csdn:article:by:2217
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2217
$3
url
$55
http://blog.csdn.net/supera_li/article/details/44940277
*4
$4
HSET
$25
hash:csdn:article:by:2217
$5
title
$62
【总结】Effective java经验之谈，创建和销毁对象
*4
$4
HSET
$25
hash:csdn:article:by:2217
$4
desc
$237
关于Effective java 这本书，自己的一些总结性的思考。篇幅可能不按照目录来，因为自己喜欢先看哪一章就直接阅读了。不过能确定的是，每一章都会有总结。欢迎大家拍砖与补充。
*4
$4
HSET
$25
hash:csdn:article:by:2217
$9
readCount
$4
1114
*4
$4
HSET
$25
hash:csdn:article:by:2217
$14
articleContent
$40
csdn/java/1_1_1_5_1504264523.145457.html
*4
$4
HSET
$25
hash:csdn:article:by:2217
$4
date
$16
2015-04-08 14:38
*4
$4
HSET
$25
hash:csdn:article:by:2217
$6
author
$10
superMarss
*4
$4
HSET
$25
hash:csdn:article:by:2217
$12
commentCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2217
$9
labelList
$25
java,开发经验,编码,
*4
$4
HSET
$25
hash:csdn:article:by:2217
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2217
$10
authorLink
$29
http://my.csdn.net/superMarss
*4
$4
HSET
$25
hash:csdn:article:by:2217
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2218
$2
id
$4
2218
*4
$4
HSET
$25
hash:csdn:article:by:2218
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2218
$3
url
$59
http://blog.csdn.net/dlutbrucezhang/article/details/9798527
*4
$4
HSET
$25
hash:csdn:article:by:2218
$5
title
$29
Linux内核2.6的进程调度
*4
$4
HSET
$25
hash:csdn:article:by:2218
$4
desc
$279
Linux是多任务抢占操作系统，多任务就是指多个进程间通过分时切换来并发执行。非抢占的系统是对每个进程而言，除非时间片用完或主动放弃否则不会被剥夺CPU,主动放弃包括调用一些调度的系统调用（比如sch...
*4
$4
HSET
$25
hash:csdn:article:by:2218
$9
readCount
$4
1410
*4
$4
HSET
$25
hash:csdn:article:by:2218
$14
articleContent
$41
csdn/linux/1_0_3_0_1504264523.352568.html
*4
$4
HSET
$25
hash:csdn:article:by:2218
$4
date
$16
2013-08-06 22:08
*4
$4
HSET
$25
hash:csdn:article:by:2218
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2218
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2218
$9
labelList
$43
处理器,算法,Linux Kernel,内核,Linux,
*4
$4
HSET
$25
hash:csdn:article:by:2218
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2218
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2218
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2219
$2
id
$4
2219
*4
$4
HSET
$25
hash:csdn:article:by:2219
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2219
$3
url
$55
http://blog.csdn.net/supera_li/article/details/45034203
*4
$4
HSET
$25
hash:csdn:article:by:2219
$5
title
$53
【总结】Effective java经验之谈，通用方法
*4
$4
HSET
$25
hash:csdn:article:by:2219
$4
desc
$228
对于通用方法，其实应用的场景是比较多的，我们在写一个类的时候，就要考虑是否要编写该方法的通用方法。这使得我们为以后该类的扩展性与使用方面提供很大的便利。
*4
$4
HSET
$25
hash:csdn:article:by:2219
$9
readCount
$4
1028
*4
$4
HSET
$25
hash:csdn:article:by:2219
$14
articleContent
$40
csdn/java/1_1_1_2_1504264524.314889.html
*4
$4
HSET
$25
hash:csdn:article:by:2219
$4
date
$16
2015-04-13 23:34
*4
$4
HSET
$25
hash:csdn:article:by:2219
$6
author
$10
superMarss
*4
$4
HSET
$25
hash:csdn:article:by:2219
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2219
$9
labelList
$38
设计,hashcode,equals,继承,boolean,
*4
$4
HSET
$25
hash:csdn:article:by:2219
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2219
$10
authorLink
$29
http://my.csdn.net/superMarss
*4
$4
HSET
$25
hash:csdn:article:by:2219
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2220
$2
id
$4
2220
*4
$4
HSET
$25
hash:csdn:article:by:2220
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2220
$3
url
$59
http://blog.csdn.net/dlutbrucezhang/article/details/8699776
*4
$4
HSET
$25
hash:csdn:article:by:2220
$5
title
$23
Linux中的中断处理
*4
$4
HSET
$25
hash:csdn:article:by:2220
$4
desc
$161
与Linux设备驱动中中断处理相关的首先是申请与释放IRQ的API request_irq()和free_irq()，
request_irq()的原型为：
int request_irq(uns...
*4
$4
HSET
$25
hash:csdn:article:by:2220
$9
readCount
$4
3356
*4
$4
HSET
$25
hash:csdn:article:by:2220
$14
articleContent
$41
csdn/linux/1_0_3_6_1504264524.363123.html
*4
$4
HSET
$25
hash:csdn:article:by:2220
$4
date
$16
2013-03-22 14:19
*4
$4
HSET
$25
hash:csdn:article:by:2220
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2220
$12
commentCount
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2220
$9
labelList
$62
Linux,UNIX,中断,中断处理程序,注册中断中断函数,
*4
$4
HSET
$25
hash:csdn:article:by:2220
$9
likeCount
$1
5
*4
$4
HSET
$25
hash:csdn:article:by:2220
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2220
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2221
$2
id
$4
2221
*4
$4
HSET
$25
hash:csdn:article:by:2221
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2221
$3
url
$59
http://blog.csdn.net/dlutbrucezhang/article/details/8694999
*4
$4
HSET
$25
hash:csdn:article:by:2221
$5
title
$17
Linux进程状态
*4
$4
HSET
$25
hash:csdn:article:by:2221
$4
desc
$228
进程状态

在linux下，通过ps命令我们能够查看到系统中存在的进程，以及它们的状态：

R (TASK_RUNNING)，可执行状态。

只有在该状态的进程才可能在CPU上运行。而同一...
*4
$4
HSET
$25
hash:csdn:article:by:2221
$9
readCount
$4
1719
*4
$4
HSET
$25
hash:csdn:article:by:2221
$14
articleContent
$42
csdn/linux/1_0_3_10_1504264525.558145.html
*4
$4
HSET
$25
hash:csdn:article:by:2221
$4
date
$16
2013-03-20 10:04
*4
$4
HSET
$25
hash:csdn:article:by:2221
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2221
$12
commentCount
$1
3
*4
$4
HSET
$25
hash:csdn:article:by:2221
$9
labelList
$32
Linux,Unix,信号,进程,状态,
*4
$4
HSET
$25
hash:csdn:article:by:2221
$9
likeCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2221
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2221
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2222
$2
id
$4
2222
*4
$4
HSET
$25
hash:csdn:article:by:2222
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2222
$3
url
$59
http://blog.csdn.net/dlutbrucezhang/article/details/8694793
*4
$4
HSET
$25
hash:csdn:article:by:2222
$5
title
$33
Linux2.6 内核进程调度分析
*4
$4
HSET
$25
hash:csdn:article:by:2222
$4
desc
$244
Linux2.6 内核进程调度分析


   进程的调度时机与引起进程调度的原因和进程调度的方式有关。在 2.6 中,除核心应用
    主动调用调度器之外, 核心还在应用不完全感知的情况下在...
*4
$4
HSET
$25
hash:csdn:article:by:2222
$9
readCount
$4
2471
*4
$4
HSET
$25
hash:csdn:article:by:2222
$14
articleContent
$42
csdn/linux/1_0_3_11_1504264526.411986.html
*4
$4
HSET
$25
hash:csdn:article:by:2222
$4
date
$16
2013-03-20 09:37
*4
$4
HSET
$25
hash:csdn:article:by:2222
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2222
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2222
$9
labelList
$37
Linux2.6,进程,调度,schedule,UNIX,
*4
$4
HSET
$25
hash:csdn:article:by:2222
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2222
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2222
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2223
$2
id
$4
2223
*4
$4
HSET
$25
hash:csdn:article:by:2223
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2223
$3
url
$57
http://blog.csdn.net/qq_26525215/article/details/51136848
*4
$4
HSET
$25
hash:csdn:article:by:2223
$5
title
$76
Java-单机版的书店管理系统(练习设计模块和思想_系列 五 )
*4
$4
HSET
$25
hash:csdn:article:by:2223
$4
desc
$225
经过前几次的发博客。。 
我发现这样发代码太费劲了。。所以我把目前我完成的源代码上传到百度云里面去了。 
百度云链接： 
http://pan.baidu.com/s/1o7X1Kk6 
链接如果失效...
*4
$4
HSET
$25
hash:csdn:article:by:2223
$9
readCount
$5
12657
*4
$4
HSET
$25
hash:csdn:article:by:2223
$14
articleContent
$41
csdn/java/1_0_1_12_1504264527.374729.html
*4
$4
HSET
$25
hash:csdn:article:by:2223
$4
date
$16
2016-04-12 20:54
*4
$4
HSET
$25
hash:csdn:article:by:2223
$6
author
$11
qq_26525215
*4
$4
HSET
$25
hash:csdn:article:by:2223
$12
commentCount
$1
8
*4
$4
HSET
$25
hash:csdn:article:by:2223
$9
labelList
$39
设计,管理,数据,java,模块设计,
*4
$4
HSET
$25
hash:csdn:article:by:2223
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2223
$10
authorLink
$30
http://my.csdn.net/qq_26525215
*4
$4
HSET
$25
hash:csdn:article:by:2223
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2224
$2
id
$4
2224
*4
$4
HSET
$25
hash:csdn:article:by:2224
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2224
$3
url
$59
http://blog.csdn.net/dlutbrucezhang/article/details/8701666
*4
$4
HSET
$25
hash:csdn:article:by:2224
$5
title
$17
Linux系统调用
*4
$4
HSET
$25
hash:csdn:article:by:2224
$4
desc
$276
1       系统调用意义

linux内核中设置了一组用于实现系统功能的子程序，称为系统调用。系统调用和普通库函数调用非常相似，只是系统调用由操作系统核心提供，运行于核心态，而普通的函数调用由...
*4
$4
HSET
$25
hash:csdn:article:by:2224
$9
readCount
$4
1657
*4
$4
HSET
$25
hash:csdn:article:by:2224
$14
articleContent
$41
csdn/linux/1_0_3_7_1504264527.436571.html
*4
$4
HSET
$25
hash:csdn:article:by:2224
$4
date
$16
2013-03-22 14:19
*4
$4
HSET
$25
hash:csdn:article:by:2224
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2224
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2224
$9
labelList
$46
Linux,系统调用,内核,进程,操作系统,
*4
$4
HSET
$25
hash:csdn:article:by:2224
$9
likeCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2224
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2224
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2225
$2
id
$4
2225
*4
$4
HSET
$25
hash:csdn:article:by:2225
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2225
$3
url
$57
http://blog.csdn.net/qq_26525215/article/details/51117135
*4
$4
HSET
$25
hash:csdn:article:by:2225
$5
title
$79
Java-单机版的书店管理系统(练习设计模块和思想_系列 四(2) )
*4
$4
HSET
$25
hash:csdn:article:by:2225
$4
desc
$267
说明：本博客为补全上篇-Java-单机版的书店管理系统(练习设计模块和思想_系列 四(1) )的，所以如果不懂，请先看上一篇。 
本系列都是我一步一步学习来的， 
所以，可能比较适合初学设计模块的人来...
*4
$4
HSET
$25
hash:csdn:article:by:2225
$9
readCount
$4
7138
*4
$4
HSET
$25
hash:csdn:article:by:2225
$14
articleContent
$40
csdn/java/1_0_1_13_1504264528.61916.html
*4
$4
HSET
$25
hash:csdn:article:by:2225
$4
date
$16
2016-04-11 00:36
*4
$4
HSET
$25
hash:csdn:article:by:2225
$6
author
$11
qq_26525215
*4
$4
HSET
$25
hash:csdn:article:by:2225
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2225
$9
labelList
$27
设计,管理,博客,class,
*4
$4
HSET
$25
hash:csdn:article:by:2225
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2225
$10
authorLink
$30
http://my.csdn.net/qq_26525215
*4
$4
HSET
$25
hash:csdn:article:by:2225
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2226
$2
id
$4
2226
*4
$4
HSET
$25
hash:csdn:article:by:2226
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2226
$3
url
$59
http://blog.csdn.net/dlutbrucezhang/article/details/8696296
*4
$4
HSET
$25
hash:csdn:article:by:2226
$5
title
$23
Linux进程模型总结
*4
$4
HSET
$25
hash:csdn:article:by:2226
$4
desc
$297
一个进程在CPU上运行可以有两种运行模式（进程状态）：用户模式和内核模式。如果当前运行的是用户程序（用户代码），那么对应进程就处于用户模式（用户态），如果出现系统调用或者发生中断，那么对应进程就处于内...
*4
$4
HSET
$25
hash:csdn:article:by:2226
$9
readCount
$4
2461
*4
$4
HSET
$25
hash:csdn:article:by:2226
$14
articleContent
$41
csdn/linux/1_0_3_8_1504264528.702365.html
*4
$4
HSET
$25
hash:csdn:article:by:2226
$4
date
$16
2013-03-20 14:26
*4
$4
HSET
$25
hash:csdn:article:by:2226
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2226
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2226
$9
labelList
$30
Linux,UNIX,进程,模型,fork,
*4
$4
HSET
$25
hash:csdn:article:by:2226
$9
likeCount
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2226
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2226
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2227
$2
id
$4
2227
*4
$4
HSET
$25
hash:csdn:article:by:2227
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2227
$3
url
$59
http://blog.csdn.net/dlutbrucezhang/article/details/8695224
*4
$4
HSET
$25
hash:csdn:article:by:2227
$5
title
$26
Linux进程休眠和唤醒
*4
$4
HSET
$25
hash:csdn:article:by:2227
$4
desc
$291
当进程以阻塞的方式通信，在得到结果前进程会挂起休眠。
为了将进程以一种安全的方式进入休眠，我们需要牢记两条规则：
一、永远不要在原子上下文中进入休眠。
二、进程休眠后，对环境一无所知。唤醒后，必...
*4
$4
HSET
$25
hash:csdn:article:by:2227
$9
readCount
$4
4160
*4
$4
HSET
$25
hash:csdn:article:by:2227
$14
articleContent
$41
csdn/linux/1_0_3_9_1504264529.564963.html
*4
$4
HSET
$25
hash:csdn:article:by:2227
$4
date
$16
2013-03-20 10:39
*4
$4
HSET
$25
hash:csdn:article:by:2227
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2227
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2227
$9
labelList
$32
Linux,Unix,进程,休眠,唤醒,
*4
$4
HSET
$25
hash:csdn:article:by:2227
$9
likeCount
$1
3
*4
$4
HSET
$25
hash:csdn:article:by:2227
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2227
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2228
$2
id
$4
2228
*4
$4
HSET
$25
hash:csdn:article:by:2228
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2228
$3
url
$57
http://blog.csdn.net/qq_26525215/article/details/51089734
*4
$4
HSET
$25
hash:csdn:article:by:2228
$5
title
$76
Java-单机版的书店管理系统(练习设计模块和思想_系列 二 )
*4
$4
HSET
$25
hash:csdn:article:by:2228
$4
desc
$279
今天对前面的代码有了小小的修改，让代码更加完善了一点。 
至于用户唯一标识码uuid，会在以后修改成程序内部生成的， 
现在的uuid还是由用户自己设置。今天对这个程序，添加了用户界面的表现层的一部分...
*4
$4
HSET
$25
hash:csdn:article:by:2228
$9
readCount
$4
5596
*4
$4
HSET
$25
hash:csdn:article:by:2228
$14
articleContent
$41
csdn/java/1_0_1_16_1504264529.684558.html
*4
$4
HSET
$25
hash:csdn:article:by:2228
$4
date
$16
2016-04-07 21:40
*4
$4
HSET
$25
hash:csdn:article:by:2228
$6
author
$11
qq_26525215
*4
$4
HSET
$25
hash:csdn:article:by:2228
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2228
$9
labelList
$36
界面,管理,java,模块设计,app,
*4
$4
HSET
$25
hash:csdn:article:by:2228
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2228
$10
authorLink
$30
http://my.csdn.net/qq_26525215
*4
$4
HSET
$25
hash:csdn:article:by:2228
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2229
$2
id
$4
2229
*4
$4
HSET
$25
hash:csdn:article:by:2229
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2229
$3
url
$57
http://blog.csdn.net/qq_26525215/article/details/51054965
*4
$4
HSET
$25
hash:csdn:article:by:2229
$5
title
$33
Java---设计模块(装饰模式)
*4
$4
HSET
$25
hash:csdn:article:by:2229
$4
desc
$233
★ 场景和问题在不对原有对象类进行修改的基础上，如何给一个或多个已有的类对象提供增强额外的功能？★ 引例 
写一个MyBufferedReader类，使它能够对字符流(如FileReader、Inpu...
*4
$4
HSET
$25
hash:csdn:article:by:2229
$9
readCount
$4
3337
*4
$4
HSET
$25
hash:csdn:article:by:2229
$14
articleContent
$41
csdn/java/1_0_1_19_1504264530.578956.html
*4
$4
HSET
$25
hash:csdn:article:by:2229
$4
date
$16
2016-04-04 00:58
*4
$4
HSET
$25
hash:csdn:article:by:2229
$6
author
$11
qq_26525215
*4
$4
HSET
$25
hash:csdn:article:by:2229
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2229
$9
labelList
$24
字符流,设计,对象,
*4
$4
HSET
$25
hash:csdn:article:by:2229
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2229
$10
authorLink
$30
http://my.csdn.net/qq_26525215
*4
$4
HSET
$25
hash:csdn:article:by:2229
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2230
$2
id
$4
2230
*4
$4
HSET
$25
hash:csdn:article:by:2230
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2230
$3
url
$57
http://blog.csdn.net/qq_26525215/article/details/51071653
*4
$4
HSET
$25
hash:csdn:article:by:2230
$5
title
$43
Java---设计模式app小软件汇总应用
*4
$4
HSET
$25
hash:csdn:article:by:2230
$4
desc
$261
写了一个app小软件，重点不在于软件，软件bug挺多，也没去修改。 
这个小软件只是为了更好的说明和了解设计模块而做的。 
Java 程序设计–包结构 
Java程序设计的系统体系结构很大一部分都体现...
*4
$4
HSET
$25
hash:csdn:article:by:2230
$9
readCount
$4
5373
*4
$4
HSET
$25
hash:csdn:article:by:2230
$14
articleContent
$41
csdn/java/1_0_1_18_1504264530.630782.html
*4
$4
HSET
$25
hash:csdn:article:by:2230
$4
date
$16
2016-04-06 02:21
*4
$4
HSET
$25
hash:csdn:article:by:2230
$6
author
$11
qq_26525215
*4
$4
HSET
$25
hash:csdn:article:by:2230
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2230
$9
labelList
$32
设计模式,java,应用,结构,
*4
$4
HSET
$25
hash:csdn:article:by:2230
$9
likeCount
$1
3
*4
$4
HSET
$25
hash:csdn:article:by:2230
$10
authorLink
$30
http://my.csdn.net/qq_26525215
*4
$4
HSET
$25
hash:csdn:article:by:2230
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2231
$2
id
$4
2231
*4
$4
HSET
$25
hash:csdn:article:by:2231
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2231
$3
url
$59
http://blog.csdn.net/dlutbrucezhang/article/details/9792203
*4
$4
HSET
$25
hash:csdn:article:by:2231
$5
title
$37
Linux上程序调试的基石(2)--GDB
*4
$4
HSET
$25
hash:csdn:article:by:2231
$4
desc
$253
3. GDB的实现 GDB是GNU发布的一个强大的程序调试工具，用以调试C/C++程序。可以使程序员在程序运行的时候观察程序在内存/寄存器中的使用情况。它的实现也是基于ptrace系统调用来完成的。 ...
*4
$4
HSET
$25
hash:csdn:article:by:2231
$9
readCount
$4
1508
*4
$4
HSET
$25
hash:csdn:article:by:2231
$14
articleContent
$41
csdn/linux/1_0_3_1_1504264530.789566.html
*4
$4
HSET
$25
hash:csdn:article:by:2231
$4
date
$16
2013-08-06 15:22
*4
$4
HSET
$25
hash:csdn:article:by:2231
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2231
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2231
$9
labelList
$24
调试,GDB,内存,C++,C,
*4
$4
HSET
$25
hash:csdn:article:by:2231
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2231
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2231
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2232
$2
id
$4
2232
*4
$4
HSET
$25
hash:csdn:article:by:2232
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2232
$3
url
$59
http://blog.csdn.net/dlutbrucezhang/article/details/9792153
*4
$4
HSET
$25
hash:csdn:article:by:2232
$5
title
$40
Linux上程序调试的基石(1)--ptrace
*4
$4
HSET
$25
hash:csdn:article:by:2232
$4
desc
$180
引子: 1.在Linux系统中，进程状态除了我们所熟知的TASK_RUNNING，TASK_INTERRUPTIBLE，TASK_STOPPED等，还有一个TASK_TRACED。这表明这个进程处于什...
*4
$4
HSET
$25
hash:csdn:article:by:2232
$9
readCount
$4
1500
*4
$4
HSET
$25
hash:csdn:article:by:2232
$14
articleContent
$41
csdn/linux/1_0_3_2_1504264530.996703.html
*4
$4
HSET
$25
hash:csdn:article:by:2232
$4
date
$16
2013-08-06 15:20
*4
$4
HSET
$25
hash:csdn:article:by:2232
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2232
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2232
$9
labelList
$31
调试,printf,helloworld,C,C++,
*4
$4
HSET
$25
hash:csdn:article:by:2232
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2232
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2232
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2233
$2
id
$4
2233
*4
$4
HSET
$25
hash:csdn:article:by:2233
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2233
$3
url
$57
http://blog.csdn.net/qq_26525215/article/details/51073546
*4
$4
HSET
$25
hash:csdn:article:by:2233
$5
title
$76
Java-单机版的书店管理系统(练习设计模块和思想_系列 一 )
*4
$4
HSET
$25
hash:csdn:article:by:2233
$4
desc
$247
书店管理系统：项目练习目标 ： 
1、Java应用程序基本分析 
2、培养面向对象编程的基本思想 
3、Java基本设计模式综合应用 
4、掌握分层和接口的基本设计 
5、构建合理的Java应用程序包...
*4
$4
HSET
$25
hash:csdn:article:by:2233
$9
readCount
$4
6178
*4
$4
HSET
$25
hash:csdn:article:by:2233
$14
articleContent
$41
csdn/java/1_0_1_17_1504264531.657311.html
*4
$4
HSET
$25
hash:csdn:article:by:2233
$4
date
$16
2016-04-06 14:05
*4
$4
HSET
$25
hash:csdn:article:by:2233
$6
author
$11
qq_26525215
*4
$4
HSET
$25
hash:csdn:article:by:2233
$12
commentCount
$1
7
*4
$4
HSET
$25
hash:csdn:article:by:2233
$9
labelList
$44
java,面向对象编程,设计模式,管理,
*4
$4
HSET
$25
hash:csdn:article:by:2233
$9
likeCount
$1
6
*4
$4
HSET
$25
hash:csdn:article:by:2233
$10
authorLink
$30
http://my.csdn.net/qq_26525215
*4
$4
HSET
$25
hash:csdn:article:by:2233
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2234
$2
id
$4
2234
*4
$4
HSET
$25
hash:csdn:article:by:2234
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2234
$3
url
$59
http://blog.csdn.net/dlutbrucezhang/article/details/9773279
*4
$4
HSET
$25
hash:csdn:article:by:2234
$5
title
$15
printk的用法
*4
$4
HSET
$25
hash:csdn:article:by:2234
$4
desc
$203
printk的用法内核通过 printk() 输出的信息具有日志级别，日志级别是通过在 printk() 输出的字符串前加一个带尖括号的整数来控制的，如 printk("Hello, world!\n...
*4
$4
HSET
$25
hash:csdn:article:by:2234
$9
readCount
$4
1459
*4
$4
HSET
$25
hash:csdn:article:by:2234
$14
articleContent
$41
csdn/linux/1_0_3_4_1504264531.935523.html
*4
$4
HSET
$25
hash:csdn:article:by:2234
$4
date
$16
2013-08-05 21:45
*4
$4
HSET
$25
hash:csdn:article:by:2234
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2234
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2234
$9
labelList
$31
IT,控制台,内核,调试,宏,
*4
$4
HSET
$25
hash:csdn:article:by:2234
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2234
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2234
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2235
$2
id
$4
2235
*4
$4
HSET
$25
hash:csdn:article:by:2235
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2235
$3
url
$57
http://blog.csdn.net/qq_26525215/article/details/51116429
*4
$4
HSET
$25
hash:csdn:article:by:2235
$5
title
$79
Java-单机版的书店管理系统(练习设计模块和思想_系列 四(1) )
*4
$4
HSET
$25
hash:csdn:article:by:2235
$4
desc
$279
本系列四介绍说明：主要是添加了Uuid模块，现在的uuid并不是由用户输入，而是我们通过软件内部自动生成（通过唱票模式），uuid是不会产生重复的！还有把主界面改了下，以后会改成登录页面的（待完善）。...
*4
$4
HSET
$25
hash:csdn:article:by:2235
$9
readCount
$4
5866
*4
$4
HSET
$25
hash:csdn:article:by:2235
$14
articleContent
$41
csdn/java/1_0_1_14_1504264532.720198.html
*4
$4
HSET
$25
hash:csdn:article:by:2235
$4
date
$16
2016-04-11 00:11
*4
$4
HSET
$25
hash:csdn:article:by:2235
$6
author
$11
qq_26525215
*4
$4
HSET
$25
hash:csdn:article:by:2235
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2235
$9
labelList
$35
设计,界面,软件,图书,管理,
*4
$4
HSET
$25
hash:csdn:article:by:2235
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2235
$10
authorLink
$30
http://my.csdn.net/qq_26525215
*4
$4
HSET
$25
hash:csdn:article:by:2235
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2236
$2
id
$4
2236
*4
$4
HSET
$25
hash:csdn:article:by:2236
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2236
$3
url
$59
http://blog.csdn.net/dlutbrucezhang/article/details/9772049
*4
$4
HSET
$25
hash:csdn:article:by:2236
$5
title
$17
Linux内核基础
*4
$4
HSET
$25
hash:csdn:article:by:2236
$4
desc
$291
Linux系统运行的应用程序通过系统调用来与内核通信。应用程序通常调用库函数（比如C库函数）再有库函数通过系统调用界面，让内核带其完成各种不同的任务。下面这张图显示的就是应用程序，内核和硬件之间的关系...
*4
$4
HSET
$25
hash:csdn:article:by:2236
$9
readCount
$4
1329
*4
$4
HSET
$25
hash:csdn:article:by:2236
$14
articleContent
$41
csdn/linux/1_0_3_5_1504264532.766295.html
*4
$4
HSET
$25
hash:csdn:article:by:2236
$4
date
$16
2013-08-05 20:42
*4
$4
HSET
$25
hash:csdn:article:by:2236
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2236
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2236
$9
labelList
$41
Linux Kernel,内核,应用,处理器,库,
*4
$4
HSET
$25
hash:csdn:article:by:2236
$9
likeCount
$1
3
*4
$4
HSET
$25
hash:csdn:article:by:2236
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2236
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2237
$2
id
$4
2237
*4
$4
HSET
$25
hash:csdn:article:by:2237
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2237
$3
url
$57
http://blog.csdn.net/qq_26525215/article/details/51099202
*4
$4
HSET
$25
hash:csdn:article:by:2237
$5
title
$76
Java-单机版的书店管理系统(练习设计模块和思想_系列 三 )
*4
$4
HSET
$25
hash:csdn:article:by:2237
$4
desc
$271
介绍今天对系列二的一个添加用户的输入小bug进行了解决， 
增加了用户模块的，删除用户，和修改用户模块。下面的代码是相对于系列二来说进行了修改或者是增加的类.先看AddPanel类的修改： 
在收集参...
*4
$4
HSET
$25
hash:csdn:article:by:2237
$9
readCount
$4
4549
*4
$4
HSET
$25
hash:csdn:article:by:2237
$14
articleContent
$41
csdn/java/1_0_1_15_1504264533.700442.html
*4
$4
HSET
$25
hash:csdn:article:by:2237
$4
date
$16
2016-04-08 19:53
*4
$4
HSET
$25
hash:csdn:article:by:2237
$6
author
$11
qq_26525215
*4
$4
HSET
$25
hash:csdn:article:by:2237
$12
commentCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2237
$9
labelList
$12
设计,java,
*4
$4
HSET
$25
hash:csdn:article:by:2237
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2237
$10
authorLink
$30
http://my.csdn.net/qq_26525215
*4
$4
HSET
$25
hash:csdn:article:by:2237
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2238
$2
id
$4
2238
*4
$4
HSET
$25
hash:csdn:article:by:2238
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2238
$3
url
$59
http://blog.csdn.net/dlutbrucezhang/article/details/9773317
*4
$4
HSET
$25
hash:csdn:article:by:2238
$5
title
$22
Linux中printk()实例
*4
$4
HSET
$25
hash:csdn:article:by:2238
$4
desc
$107
新建hello.c#include   
#include   
 
 
int init_module(void) 
{ 
    printk(KERN_INFO "Welcome.....\n"...
*4
$4
HSET
$25
hash:csdn:article:by:2238
$9
readCount
$4
1116
*4
$4
HSET
$25
hash:csdn:article:by:2238
$14
articleContent
$41
csdn/linux/1_0_3_3_1504264533.784398.html
*4
$4
HSET
$25
hash:csdn:article:by:2238
$4
date
$16
2013-08-05 21:47
*4
$4
HSET
$25
hash:csdn:article:by:2238
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2238
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2238
$9
labelList
$33
Linux,shell,测试,终端,实例,
*4
$4
HSET
$25
hash:csdn:article:by:2238
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2238
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2238
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2239
$2
id
$4
2239
*4
$4
HSET
$25
hash:csdn:article:by:2239
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2239
$3
url
$57
http://blog.csdn.net/qq_26525215/article/details/51202656
*4
$4
HSET
$25
hash:csdn:article:by:2239
$5
title
$77
Java-单机版的书店管理系统(练习设计模块和思想_系列汇总)
*4
$4
HSET
$25
hash:csdn:article:by:2239
$4
desc
$251
介绍：本软件系列到此，我已经全部写完了。项目练习目标 ：1、Java应用程序基本分析  
2、培养面向对象编程的基本思想  
3、Java基本设计模式综合应用  
4、掌握分层和接口的基本设计  
5...
*4
$4
HSET
$25
hash:csdn:article:by:2239
$9
readCount
$4
8957
*4
$4
HSET
$25
hash:csdn:article:by:2239
$14
articleContent
$40
csdn/java/1_0_1_8_1504264536.851537.html
*4
$4
HSET
$25
hash:csdn:article:by:2239
$4
date
$16
2016-04-20 17:26
*4
$4
HSET
$25
hash:csdn:article:by:2239
$6
author
$11
qq_26525215
*4
$4
HSET
$25
hash:csdn:article:by:2239
$12
commentCount
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2239
$9
labelList
$45
java,设计,管理,面向对象编程,应用,
*4
$4
HSET
$25
hash:csdn:article:by:2239
$9
likeCount
$1
3
*4
$4
HSET
$25
hash:csdn:article:by:2239
$10
authorLink
$30
http://my.csdn.net/qq_26525215
*4
$4
HSET
$25
hash:csdn:article:by:2239
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2240
$2
id
$4
2240
*4
$4
HSET
$25
hash:csdn:article:by:2240
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2240
$3
url
$59
http://blog.csdn.net/dlutbrucezhang/article/details/9086653
*4
$4
HSET
$25
hash:csdn:article:by:2240
$5
title
$36
Linux System Programming -- Appendix
*4
$4
HSET
$25
hash:csdn:article:by:2240
$4
desc
$255
这本书附录的名字是 “GCC对C语言的扩展” ，一下的内容是对扩展的总结类型发现GCC 允许通过变量的引用识别类型。这种操作支持泛型编程。在 C++、Ada 和 Java™ 语言等许多现代编程语言中都...
*4
$4
HSET
$25
hash:csdn:article:by:2240
$9
readCount
$4
1257
*4
$4
HSET
$25
hash:csdn:article:by:2240
$14
articleContent
$41
csdn/linux/1_1_1_0_1504264536.942217.html
*4
$4
HSET
$25
hash:csdn:article:by:2240
$4
date
$16
2013-06-18 08:41
*4
$4
HSET
$25
hash:csdn:article:by:2240
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2240
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2240
$9
labelList
$46
Linux,性能优化,行业数据,编译器,GCC,
*4
$4
HSET
$25
hash:csdn:article:by:2240
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2240
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2240
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2241
$2
id
$4
2241
*4
$4
HSET
$25
hash:csdn:article:by:2241
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2241
$3
url
$57
http://blog.csdn.net/qq_26525215/article/details/51190696
*4
$4
HSET
$25
hash:csdn:article:by:2241
$5
title
$76
Java-单机版的书店管理系统(练习设计模块和思想_系列 七 )
*4
$4
HSET
$25
hash:csdn:article:by:2241
$4
desc
$169
本系列前面博客的链接：Java-单机版的书店管理系统(练习设计模块和思想_系列 六 ) 
http://blog.csdn.net/qq_26525215/article/details/511692...
*4
$4
HSET
$25
hash:csdn:article:by:2241
$9
readCount
$4
6060
*4
$4
HSET
$25
hash:csdn:article:by:2241
$14
articleContent
$41
csdn/java/1_0_1_10_1504264537.805061.html
*4
$4
HSET
$25
hash:csdn:article:by:2241
$4
date
$16
2016-04-19 15:09
*4
$4
HSET
$25
hash:csdn:article:by:2241
$6
author
$11
qq_26525215
*4
$4
HSET
$25
hash:csdn:article:by:2241
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2241
$9
labelList
$21
博客,设计,管理,
*4
$4
HSET
$25
hash:csdn:article:by:2241
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2241
$10
authorLink
$30
http://my.csdn.net/qq_26525215
*4
$4
HSET
$25
hash:csdn:article:by:2241
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2242
$2
id
$4
2242
*4
$4
HSET
$25
hash:csdn:article:by:2242
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2242
$3
url
$59
http://blog.csdn.net/dlutbrucezhang/article/details/9046365
*4
$4
HSET
$25
hash:csdn:article:by:2242
$5
title
$39
Linux System Programming --Chapter Four
*4
$4
HSET
$25
hash:csdn:article:by:2242
$4
desc
$271
这一章介绍的主题是--高级文件 I/O一. 分散--聚集I/O分散聚集I/O是一种进行输入和输出的方法。通过此方法，单一系统调用可以将缓冲区向量写入单一数据流，或者将单一数据流读取到缓冲区向量。这个类...
*4
$4
HSET
$25
hash:csdn:article:by:2242
$9
readCount
$4
1618
*4
$4
HSET
$25
hash:csdn:article:by:2242
$14
articleContent
$41
csdn/linux/1_1_1_6_1504264537.922721.html
*4
$4
HSET
$25
hash:csdn:article:by:2242
$4
date
$16
2013-06-14 12:20
*4
$4
HSET
$25
hash:csdn:article:by:2242
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2242
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2242
$9
labelList
$43
Linux,性能优化,C,高级IO,系统调用,
*4
$4
HSET
$25
hash:csdn:article:by:2242
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2242
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2242
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2243
$2
id
$4
2243
*4
$4
HSET
$25
hash:csdn:article:by:2243
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2243
$3
url
$57
http://blog.csdn.net/qq_26525215/article/details/51169277
*4
$4
HSET
$25
hash:csdn:article:by:2243
$5
title
$76
Java-单机版的书店管理系统(练习设计模块和思想_系列 六 )
*4
$4
HSET
$25
hash:csdn:article:by:2243
$4
desc
$169
本系列前面博客的链接：Java-单机版的书店管理系统(练习设计模块和思想_系列 五 ) 
http://blog.csdn.net/qq_26525215/article/details/511368...
*4
$4
HSET
$25
hash:csdn:article:by:2243
$9
readCount
$4
6400
*4
$4
HSET
$25
hash:csdn:article:by:2243
$14
articleContent
$41
csdn/java/1_0_1_11_1504264538.972116.html
*4
$4
HSET
$25
hash:csdn:article:by:2243
$4
date
$16
2016-04-16 17:48
*4
$4
HSET
$25
hash:csdn:article:by:2243
$6
author
$11
qq_26525215
*4
$4
HSET
$25
hash:csdn:article:by:2243
$12
commentCount
$1
6
*4
$4
HSET
$25
hash:csdn:article:by:2243
$9
labelList
$35
设计,博客,管理,分层,模块,
*4
$4
HSET
$25
hash:csdn:article:by:2243
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2243
$10
authorLink
$30
http://my.csdn.net/qq_26525215
*4
$4
HSET
$25
hash:csdn:article:by:2243
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2244
$2
id
$4
2244
*4
$4
HSET
$25
hash:csdn:article:by:2244
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2244
$3
url
$59
http://blog.csdn.net/dlutbrucezhang/article/details/9080173
*4
$4
HSET
$25
hash:csdn:article:by:2244
$5
title
$47
Linux 内存映射函数 mmap（）函数详解
*4
$4
HSET
$25
hash:csdn:article:by:2244
$4
desc
$288
一、概述          内存映射，简而言之就是将用户空间的一段内存区域映射到内核空间，映射成功后，用户对这段内存区域的修改可以直接反映到内核空间，同样，内核空间对这段区域的修改也直接反映用户空间。...
*4
$4
HSET
$25
hash:csdn:article:by:2244
$9
readCount
$5
21369
*4
$4
HSET
$25
hash:csdn:article:by:2244
$14
articleContent
$41
csdn/linux/1_1_1_10_1504264539.01748.html
*4
$4
HSET
$25
hash:csdn:article:by:2244
$4
date
$16
2013-06-12 19:02
*4
$4
HSET
$25
hash:csdn:article:by:2244
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2244
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2244
$9
labelList
$40
Linux,内存,地图,内核,行业数据,
*4
$4
HSET
$25
hash:csdn:article:by:2244
$9
likeCount
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2244
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2244
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2245
$2
id
$4
2245
*4
$4
HSET
$25
hash:csdn:article:by:2245
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2245
$3
url
$59
http://blog.csdn.net/dlutbrucezhang/article/details/9058583
*4
$4
HSET
$25
hash:csdn:article:by:2245
$5
title
$42
Linux 虚拟内存和物理内存的理解
*4
$4
HSET
$25
hash:csdn:article:by:2245
$4
desc
$275
首先，让我们看下虚拟内存：第一层理解1.         每个进程都有自己独立的4G内存空间，各个进程的内存空间具有类似的结构2.       一个新进程建立的时候，将会建立起自己的内存空间，此进程的...
*4
$4
HSET
$25
hash:csdn:article:by:2245
$9
readCount
$5
15096
*4
$4
HSET
$25
hash:csdn:article:by:2245
$14
articleContent
$42
csdn/linux/1_1_1_12_1504264540.003742.html
*4
$4
HSET
$25
hash:csdn:article:by:2245
$4
date
$16
2013-06-12 09:48
*4
$4
HSET
$25
hash:csdn:article:by:2245
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2245
$12
commentCount
$1
3
*4
$4
HSET
$25
hash:csdn:article:by:2245
$9
labelList
$46
内存,Linux,内核,磁盘,物理虚拟内存,
*4
$4
HSET
$25
hash:csdn:article:by:2245
$9
likeCount
$1
5
*4
$4
HSET
$25
hash:csdn:article:by:2245
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2245
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2246
$2
id
$4
2246
*4
$4
HSET
$25
hash:csdn:article:by:2246
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2246
$3
url
$57
http://blog.csdn.net/qq_26525215/article/details/51195473
*4
$4
HSET
$25
hash:csdn:article:by:2246
$5
title
$76
Java-单机版的书店管理系统(练习设计模块和思想_系列 八 )
*4
$4
HSET
$25
hash:csdn:article:by:2246
$4
desc
$169
本系列前面博客的链接：Java-单机版的书店管理系统(练习设计模块和思想_系列 七 ) 
http://blog.csdn.net/qq_26525215/article/details/511906...
*4
$4
HSET
$25
hash:csdn:article:by:2246
$9
readCount
$4
8578
*4
$4
HSET
$25
hash:csdn:article:by:2246
$14
articleContent
$40
csdn/java/1_0_1_9_1504264540.103925.html
*4
$4
HSET
$25
hash:csdn:article:by:2246
$4
date
$16
2016-04-20 00:46
*4
$4
HSET
$25
hash:csdn:article:by:2246
$6
author
$11
qq_26525215
*4
$4
HSET
$25
hash:csdn:article:by:2246
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2246
$9
labelList
$25
设计模块,java,项目,
*4
$4
HSET
$25
hash:csdn:article:by:2246
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2246
$10
authorLink
$30
http://my.csdn.net/qq_26525215
*4
$4
HSET
$25
hash:csdn:article:by:2246
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2247
$2
id
$4
2247
*4
$4
HSET
$25
hash:csdn:article:by:2247
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2247
$3
url
$57
http://blog.csdn.net/qq_26525215/article/details/51020655
*4
$4
HSET
$25
hash:csdn:article:by:2247
$5
title
$67
【3】JAVA---地址App小软件（AddPanel.class）（表现层）
*4
$4
HSET
$25
hash:csdn:article:by:2247
$4
desc
$181
添加地址信息界面。年龄和地址必须是数字，否则会弹出窗口提示。 
地址信息不能为空。 
/*
 * AddPanel.java
 *
 * Created on __DATE__, __TIME__
 ...
*4
$4
HSET
$25
hash:csdn:article:by:2247
$9
readCount
$3
579
*4
$4
HSET
$25
hash:csdn:article:by:2247
$14
articleContent
$40
csdn/java/1_0_1_5_1504264540.935691.html
*4
$4
HSET
$25
hash:csdn:article:by:2247
$4
date
$16
2016-03-31 00:07
*4
$4
HSET
$25
hash:csdn:article:by:2247
$6
author
$11
qq_26525215
*4
$4
HSET
$25
hash:csdn:article:by:2247
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2247
$9
labelList
$7
软件,
*4
$4
HSET
$25
hash:csdn:article:by:2247
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2247
$10
authorLink
$30
http://my.csdn.net/qq_26525215
*4
$4
HSET
$25
hash:csdn:article:by:2247
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2248
$2
id
$4
2248
*4
$4
HSET
$25
hash:csdn:article:by:2248
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2248
$3
url
$59
http://blog.csdn.net/dlutbrucezhang/article/details/9058989
*4
$4
HSET
$25
hash:csdn:article:by:2248
$5
title
$9
缓冲区
*4
$4
HSET
$25
hash:csdn:article:by:2248
$4
desc
$303
什么是缓冲区缓冲区又称为缓存，它是内存空间的一部分。也就是说，在内存空间中预留了一定的存储空间，这些存储空间用来缓冲输入或输出的数据，这部分预留的空间就叫做缓冲区。缓冲区根据其对应的是输入设备还是输出...
*4
$4
HSET
$25
hash:csdn:article:by:2248
$9
readCount
$4
2477
*4
$4
HSET
$25
hash:csdn:article:by:2248
$14
articleContent
$42
csdn/linux/1_1_1_13_1504264541.191946.html
*4
$4
HSET
$25
hash:csdn:article:by:2248
$4
date
$16
2013-06-12 09:47
*4
$4
HSET
$25
hash:csdn:article:by:2248
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2248
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2248
$9
labelList
$42
磁盘,行业数据,处理器,C,缓冲区,
*4
$4
HSET
$25
hash:csdn:article:by:2248
$9
likeCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2248
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2248
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2249
$2
id
$4
2249
*4
$4
HSET
$25
hash:csdn:article:by:2249
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2249
$3
url
$59
http://blog.csdn.net/dlutbrucezhang/article/details/9080157
*4
$4
HSET
$25
hash:csdn:article:by:2249
$5
title
$37
程序（进程）内存分布 解析
*4
$4
HSET
$25
hash:csdn:article:by:2249
$4
desc
$251
在多任务操作系统中的每一个进程都运行在一个属于它自己的内存沙盘中。这个沙盘就是虚拟地址空间（virtual address space），在32位模式下它总是一个4GB的内存地址块。这些虚拟地址通过页...
*4
$4
HSET
$25
hash:csdn:article:by:2249
$9
readCount
$4
3535
*4
$4
HSET
$25
hash:csdn:article:by:2249
$14
articleContent
$42
csdn/linux/1_1_1_11_1504264541.977617.html
*4
$4
HSET
$25
hash:csdn:article:by:2249
$4
date
$16
2013-06-12 18:50
*4
$4
HSET
$25
hash:csdn:article:by:2249
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2249
$12
commentCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2249
$9
labelList
$37
内存,行业数据,栈,Linux,内核,
*4
$4
HSET
$25
hash:csdn:article:by:2249
$9
likeCount
$1
6
*4
$4
HSET
$25
hash:csdn:article:by:2249
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2249
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2250
$2
id
$4
2250
*4
$4
HSET
$25
hash:csdn:article:by:2250
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2250
$3
url
$59
http://blog.csdn.net/dlutbrucezhang/article/details/9030575
*4
$4
HSET
$25
hash:csdn:article:by:2250
$5
title
$15
有限状态机
*4
$4
HSET
$25
hash:csdn:article:by:2250
$4
desc
$303
有限状态机是一种数学概念，运用到程序中，可用于有限数量的状态的变化，每个子程序进行一些处理并选择下一种状态。基本的实现思路就是用一张表保存所有可能的状态，并列出进入每个状态时可能执行的所有动作，其中最...
*4
$4
HSET
$25
hash:csdn:article:by:2250
$9
readCount
$4
2933
*4
$4
HSET
$25
hash:csdn:article:by:2250
$14
articleContent
$42
csdn/linux/1_1_1_17_1504264543.135604.html
*4
$4
HSET
$25
hash:csdn:article:by:2250
$4
date
$16
2013-06-08 09:25
*4
$4
HSET
$25
hash:csdn:article:by:2250
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2250
$12
commentCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2250
$9
labelList
$38
存储,C++,编程,宏,有限状态机,
*4
$4
HSET
$25
hash:csdn:article:by:2250
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2250
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2250
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2251
$2
id
$4
2251
*4
$4
HSET
$25
hash:csdn:article:by:2251
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2251
$3
url
$57
http://blog.csdn.net/qq_26525215/article/details/51020570
*4
$4
HSET
$25
hash:csdn:article:by:2251
$5
title
$114
【1】JAVA---地址App小软件（AddressApp.class）（初步接触项目开发的分层思想）（表现层）
*4
$4
HSET
$25
hash:csdn:article:by:2251
$4
desc
$267
这个是表现层的main方法。 
实现的地址信息有： 
姓名，性别，年龄，电话，地址。 
实现的功能有： 
增加地址； 
删除地址； 
修改地址； 
查找地址：其中年龄的查找为年龄段的查找。数据存储的方...
*4
$4
HSET
$25
hash:csdn:article:by:2251
$9
readCount
$3
614
*4
$4
HSET
$25
hash:csdn:article:by:2251
$14
articleContent
$40
csdn/java/1_0_1_7_1504264543.184161.html
*4
$4
HSET
$25
hash:csdn:article:by:2251
$4
date
$16
2016-03-30 23:45
*4
$4
HSET
$25
hash:csdn:article:by:2251
$6
author
$11
qq_26525215
*4
$4
HSET
$25
hash:csdn:article:by:2251
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2251
$9
labelList
$11
软件,app,
*4
$4
HSET
$25
hash:csdn:article:by:2251
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2251
$10
authorLink
$30
http://my.csdn.net/qq_26525215
*4
$4
HSET
$25
hash:csdn:article:by:2251
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2252
$2
id
$4
2252
*4
$4
HSET
$25
hash:csdn:article:by:2252
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2252
$3
url
$59
http://blog.csdn.net/dlutbrucezhang/article/details/9084721
*4
$4
HSET
$25
hash:csdn:article:by:2252
$5
title
$39
字符编码总结（UTF-8，UNICODE）
*4
$4
HSET
$25
hash:csdn:article:by:2252
$4
desc
$231
UTF-8是Unicode的一种实现方式，也就是它的字节结构有特殊要求，所以我们说一个汉字的范围是0X4E00到0x9FA5，是指unicode值，至于放在utf-8的编码里去就是由三个字节来组织，所...
*4
$4
HSET
$25
hash:csdn:article:by:2252
$9
readCount
$4
2458
*4
$4
HSET
$25
hash:csdn:article:by:2252
$14
articleContent
$41
csdn/linux/1_1_1_7_1504264544.274125.html
*4
$4
HSET
$25
hash:csdn:article:by:2252
$4
date
$16
2013-06-13 14:18
*4
$4
HSET
$25
hash:csdn:article:by:2252
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2252
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2252
$9
labelList
$32
编码,Unicode,UTF-8,存储,ASC,
*4
$4
HSET
$25
hash:csdn:article:by:2252
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2252
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2252
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2253
$2
id
$4
2253
*4
$4
HSET
$25
hash:csdn:article:by:2253
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2253
$3
url
$59
http://blog.csdn.net/dlutbrucezhang/article/details/9042229
*4
$4
HSET
$25
hash:csdn:article:by:2253
$5
title
$40
Linux System Programming --Chapter Three
*4
$4
HSET
$25
hash:csdn:article:by:2253
$4
desc
$246
这一章的主题是--缓冲式I/O一，流与缓冲       流I/O是由C语言的标准函数提供的，这些I/O可以替代系统中提供的read和write函数。事实上流I/O的内部封装了这两个基本的文件读写系统调...
*4
$4
HSET
$25
hash:csdn:article:by:2253
$9
readCount
$4
1773
*4
$4
HSET
$25
hash:csdn:article:by:2253
$14
articleContent
$41
csdn/linux/1_1_1_8_1504264545.195313.html
*4
$4
HSET
$25
hash:csdn:article:by:2253
$4
date
$16
2013-06-13 09:48
*4
$4
HSET
$25
hash:csdn:article:by:2253
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2253
$12
commentCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2253
$9
labelList
$34
Linux,二进制,C,标准,缓冲IO,
*4
$4
HSET
$25
hash:csdn:article:by:2253
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2253
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2253
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2254
$2
id
$4
2254
*4
$4
HSET
$25
hash:csdn:article:by:2254
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2254
$3
url
$57
http://blog.csdn.net/qq_26525215/article/details/51020692
*4
$4
HSET
$25
hash:csdn:article:by:2254
$5
title
$70
【5】JAVA---地址App小软件（DeletePanel.class）（表现层）
*4
$4
HSET
$25
hash:csdn:article:by:2254
$4
desc
$207
删除地址的表现层类。 
如果没有选中要删除的地址信息，会出现窗口提示： 
删除地址界面：（无法修改数据，只能看） 
/*
 * DeletePanel.java
 *
 */package cn.hn...
*4
$4
HSET
$25
hash:csdn:article:by:2254
$9
readCount
$4
7658
*4
$4
HSET
$25
hash:csdn:article:by:2254
$14
articleContent
$40
csdn/java/1_0_1_3_1504264545.240339.html
*4
$4
HSET
$25
hash:csdn:article:by:2254
$4
date
$16
2016-03-31 00:17
*4
$4
HSET
$25
hash:csdn:article:by:2254
$6
author
$11
qq_26525215
*4
$4
HSET
$25
hash:csdn:article:by:2254
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2254
$9
labelList
$31
软件,app,界面,数据,class,
*4
$4
HSET
$25
hash:csdn:article:by:2254
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2254
$10
authorLink
$30
http://my.csdn.net/qq_26525215
*4
$4
HSET
$25
hash:csdn:article:by:2254
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2255
$2
id
$4
2255
*4
$4
HSET
$25
hash:csdn:article:by:2255
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2255
$3
url
$59
http://blog.csdn.net/dlutbrucezhang/article/details/9035825
*4
$4
HSET
$25
hash:csdn:article:by:2255
$5
title
$38
Linux System Programming --Chapter Two
*4
$4
HSET
$25
hash:csdn:article:by:2255
$4
desc
$275
首先，需要解释的东西是Linux系统调用一、 什么是系统调用     在Linux的世界里，我们经常会遇到系统调用这一术语，所谓系统调用，就是内核提供的、功能十分强大的一系列的函数。这些系统调用是在内...
*4
$4
HSET
$25
hash:csdn:article:by:2255
$9
readCount
$4
1993
*4
$4
HSET
$25
hash:csdn:article:by:2255
$14
articleContent
$41
csdn/linux/1_1_1_9_1504264546.420429.html
*4
$4
HSET
$25
hash:csdn:article:by:2255
$4
date
$16
2013-06-13 09:45
*4
$4
HSET
$25
hash:csdn:article:by:2255
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2255
$12
commentCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2255
$9
labelList
$36
Linux,磁盘,内核,标准,文件IO,
*4
$4
HSET
$25
hash:csdn:article:by:2255
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2255
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2255
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2256
$2
id
$4
2256
*4
$4
HSET
$25
hash:csdn:article:by:2256
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2256
$3
url
$59
http://blog.csdn.net/dlutbrucezhang/article/details/9082873
*4
$4
HSET
$25
hash:csdn:article:by:2256
$5
title
$39
Linux System Programming --Chapter Nine
*4
$4
HSET
$25
hash:csdn:article:by:2256
$4
desc
$289
这一章的标题是 “信号” ，所以本文将对信号的各个方面进行介绍，由于Linux中的信号机制远比想象的要复杂，所以，本文不会讲的很全面。。。信号机制是进程之间相互传递消息的一种方法，信号全称为软中断信号...
*4
$4
HSET
$25
hash:csdn:article:by:2256
$9
readCount
$4
1476
*4
$4
HSET
$25
hash:csdn:article:by:2256
$14
articleContent
$40
csdn/linux/1_1_1_1_1504264547.52845.html
*4
$4
HSET
$25
hash:csdn:article:by:2256
$4
date
$16
2013-06-18 08:41
*4
$4
HSET
$25
hash:csdn:article:by:2256
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2256
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2256
$9
labelList
$38
Linux,printf,内核,Linux kill,信号,
*4
$4
HSET
$25
hash:csdn:article:by:2256
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2256
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2256
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2257
$2
id
$4
2257
*4
$4
HSET
$25
hash:csdn:article:by:2257
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2257
$3
url
$59
http://blog.csdn.net/dlutbrucezhang/article/details/9080491
*4
$4
HSET
$25
hash:csdn:article:by:2257
$5
title
$40
Linux System Programming --Chapter Eight
*4
$4
HSET
$25
hash:csdn:article:by:2257
$4
desc
$169
内存管理一.分配动态内存的几个函数用户空间内存分配：malloc、calloc、realloc1、malloc原型如下：extern void *malloc(unsigned int num_byt...
*4
$4
HSET
$25
hash:csdn:article:by:2257
$9
readCount
$4
1564
*4
$4
HSET
$25
hash:csdn:article:by:2257
$14
articleContent
$41
csdn/linux/1_1_1_2_1504264548.594319.html
*4
$4
HSET
$25
hash:csdn:article:by:2257
$4
date
$16
2013-06-18 08:41
*4
$4
HSET
$25
hash:csdn:article:by:2257
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2257
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2257
$9
labelList
$35
Linux,内存,存储,行业数据,C,
*4
$4
HSET
$25
hash:csdn:article:by:2257
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2257
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2257
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2258
$2
id
$4
2258
*4
$4
HSET
$25
hash:csdn:article:by:2258
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2258
$3
url
$59
http://blog.csdn.net/dlutbrucezhang/article/details/9074891
*4
$4
HSET
$25
hash:csdn:article:by:2258
$5
title
$38
Linux System Programming --Chapter Six
*4
$4
HSET
$25
hash:csdn:article:by:2258
$4
desc
$265
这一章的题目是--高级进程管理，这篇文章将以书中所叙的顺序进行讲解1、让出处理器Linux提供一个系统调用运行进程主动让出执行权：sched_yield。进程运行的好好的，为什么需要这个函数呢？有一种...
*4
$4
HSET
$25
hash:csdn:article:by:2258
$9
readCount
$4
1282
*4
$4
HSET
$25
hash:csdn:article:by:2258
$14
articleContent
$41
csdn/linux/1_1_1_4_1504264549.616554.html
*4
$4
HSET
$25
hash:csdn:article:by:2258
$4
date
$16
2013-06-17 14:08
*4
$4
HSET
$25
hash:csdn:article:by:2258
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2258
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2258
$9
labelList
$46
Linux,处理器,内核,优先级,进程调度,
*4
$4
HSET
$25
hash:csdn:article:by:2258
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2258
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2258
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2259
$2
id
$4
2259
*4
$4
HSET
$25
hash:csdn:article:by:2259
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2259
$3
url
$59
http://blog.csdn.net/dlutbrucezhang/article/details/9070881
*4
$4
HSET
$25
hash:csdn:article:by:2259
$5
title
$39
Linux System Programming --Chapter Five
*4
$4
HSET
$25
hash:csdn:article:by:2259
$4
desc
$270
这一章中的内容出现在博主的多篇文章中，所以并不对这一章进行详细的说明解释，只是对几个比较重要的概念进行说明一.写时复制技术COW技术初窥：      在Linux程序中，fork（）会产生一个和父进程...
*4
$4
HSET
$25
hash:csdn:article:by:2259
$9
readCount
$4
1595
*4
$4
HSET
$25
hash:csdn:article:by:2259
$14
articleContent
$41
csdn/linux/1_1_1_5_1504264550.826422.html
*4
$4
HSET
$25
hash:csdn:article:by:2259
$4
date
$16
2013-06-14 12:20
*4
$4
HSET
$25
hash:csdn:article:by:2259
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2259
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2259
$9
labelList
$46
Linux,技术,内核,数据结构,守护进程,
*4
$4
HSET
$25
hash:csdn:article:by:2259
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2259
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2259
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2260
$2
id
$4
2260
*4
$4
HSET
$25
hash:csdn:article:by:2260
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2260
$3
url
$59
http://blog.csdn.net/dlutbrucezhang/article/details/9075433
*4
$4
HSET
$25
hash:csdn:article:by:2260
$5
title
$40
Linux System Programming --Chapter Seven
*4
$4
HSET
$25
hash:csdn:article:by:2260
$4
desc
$213
文件和目录管理一.文件与其元数据我们首先看一下一个简单的文本文件是怎么保存的：打开vim，编辑一段文本：[root@localhost ~]# vim hello.txt编辑内容如下：opencfg....
*4
$4
HSET
$25
hash:csdn:article:by:2260
$9
readCount
$4
1331
*4
$4
HSET
$25
hash:csdn:article:by:2260
$14
articleContent
$41
csdn/linux/1_1_1_3_1504264550.874244.html
*4
$4
HSET
$25
hash:csdn:article:by:2260
$4
date
$16
2013-06-17 14:09
*4
$4
HSET
$25
hash:csdn:article:by:2260
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2260
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2260
$9
labelList
$41
Linux,行业数据,类,文件系统,Unix,
*4
$4
HSET
$25
hash:csdn:article:by:2260
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2260
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2260
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2261
$2
id
$4
2261
*4
$4
HSET
$25
hash:csdn:article:by:2261
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2261
$3
url
$59
http://blog.csdn.net/dlutbrucezhang/article/details/9063581
*4
$4
HSET
$25
hash:csdn:article:by:2261
$5
title
$33
Linux 2.6 中的直接 I/O 技术
*4
$4
HSET
$25
hash:csdn:article:by:2261
$4
desc
$273
Linux 2.6 中提供的几种文件访问方式所有的 I/O 操作都是通过读文件或者写文件来完成的。在这里，我们把所有的外围设备，包括键盘和显示器，都看成是文件系统中的文件。访问文件的方法多种多样，这里...
*4
$4
HSET
$25
hash:csdn:article:by:2261
$9
readCount
$4
1763
*4
$4
HSET
$25
hash:csdn:article:by:2261
$14
articleContent
$42
csdn/linux/1_1_1_14_1504264551.747366.html
*4
$4
HSET
$25
hash:csdn:article:by:2261
$4
date
$16
2013-06-11 12:16
*4
$4
HSET
$25
hash:csdn:article:by:2261
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2261
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2261
$9
labelList
$46
Linux,行业数据,操作系统,应用,磁盘,
*4
$4
HSET
$25
hash:csdn:article:by:2261
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2261
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2261
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2262
$2
id
$4
2262
*4
$4
HSET
$25
hash:csdn:article:by:2262
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2262
$3
url
$59
http://blog.csdn.net/dlutbrucezhang/article/details/9050467
*4
$4
HSET
$25
hash:csdn:article:by:2262
$5
title
$45
Linux 内核详解以及内核缓冲区技术
*4
$4
HSET
$25
hash:csdn:article:by:2262
$4
desc
$235
Linux 内核简介现在让我们从一个比较高的高度来审视一下 GNU/Linux 操作系统的体系结构。您可以从两个层次上来考虑操作系统，如图 2 所示。图 2. GNU/Linux 操作系统的基本体系结...
*4
$4
HSET
$25
hash:csdn:article:by:2262
$9
readCount
$4
4797
*4
$4
HSET
$25
hash:csdn:article:by:2262
$14
articleContent
$42
csdn/linux/1_1_1_18_1504264552.836616.html
*4
$4
HSET
$25
hash:csdn:article:by:2262
$4
date
$16
2013-06-08 09:25
*4
$4
HSET
$25
hash:csdn:article:by:2262
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2262
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2262
$9
labelList
$40
Linux,内核,磁盘,Structure,缓冲区,
*4
$4
HSET
$25
hash:csdn:article:by:2262
$9
likeCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2262
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2262
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2263
$2
id
$4
2263
*4
$4
HSET
$25
hash:csdn:article:by:2263
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2263
$3
url
$59
http://blog.csdn.net/dlutbrucezhang/article/details/9049687
*4
$4
HSET
$25
hash:csdn:article:by:2263
$5
title
$36
Linux 用户进程内存空间详解
*4
$4
HSET
$25
hash:csdn:article:by:2263
$4
desc
$187
经常使用top命令了解进程信息，其中包括内存方面的信息。命令top帮助文档是这么解释各个字段的。VIRT	, Virtual Image (kb)RES, Resident size (kb)SHR,...
*4
$4
HSET
$25
hash:csdn:article:by:2263
$9
readCount
$4
2271
*4
$4
HSET
$25
hash:csdn:article:by:2263
$14
articleContent
$42
csdn/linux/1_1_1_19_1504264553.743916.html
*4
$4
HSET
$25
hash:csdn:article:by:2263
$4
date
$16
2013-06-08 09:19
*4
$4
HSET
$25
hash:csdn:article:by:2263
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2263
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2263
$9
labelList
$37
Linux,内存,malloc,磁盘,页存储,
*4
$4
HSET
$25
hash:csdn:article:by:2263
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2263
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2263
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2264
$2
id
$4
2264
*4
$4
HSET
$25
hash:csdn:article:by:2264
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2264
$3
url
$59
http://blog.csdn.net/dlutbrucezhang/article/details/9068017
*4
$4
HSET
$25
hash:csdn:article:by:2264
$5
title
$30
Linux 开机启动过程分析
*4
$4
HSET
$25
hash:csdn:article:by:2264
$4
desc
$263
开机过程指的是从打开计算机电源直到LINUX显示用户登录画面的全过程。分析LINUX开机过程也是深入了解LINUX核心工作原理的一个很好的途径。启动第一步－－加载BIOS当 你打开计算机电源，计算机会...
*4
$4
HSET
$25
hash:csdn:article:by:2264
$9
readCount
$4
3662
*4
$4
HSET
$25
hash:csdn:article:by:2264
$14
articleContent
$42
csdn/linux/1_1_1_15_1504264554.806303.html
*4
$4
HSET
$25
hash:csdn:article:by:2264
$4
date
$16
2013-06-11 12:08
*4
$4
HSET
$25
hash:csdn:article:by:2264
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2264
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2264
$9
labelList
$38
Linux,内核,内存,init,启动过程,
*4
$4
HSET
$25
hash:csdn:article:by:2264
$9
likeCount
$1
3
*4
$4
HSET
$25
hash:csdn:article:by:2264
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2264
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2265
$2
id
$4
2265
*4
$4
HSET
$25
hash:csdn:article:by:2265
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2265
$3
url
$59
http://blog.csdn.net/dlutbrucezhang/article/details/9030641
*4
$4
HSET
$25
hash:csdn:article:by:2265
$5
title
$17
How program works
*4
$4
HSET
$25
hash:csdn:article:by:2265
$4
desc
$167
1.gdb常用调试命令要用gdb调试的话，编译命令需要添加-g参数，例如[plain] view plaincopygcc -g main.c -o main  b linenum          ...
*4
$4
HSET
$25
hash:csdn:article:by:2265
$9
readCount
$4
1432
*4
$4
HSET
$25
hash:csdn:article:by:2265
$14
articleContent
$42
csdn/linux/1_1_1_16_1504264555.921151.html
*4
$4
HSET
$25
hash:csdn:article:by:2265
$4
date
$16
2013-06-08 09:26
*4
$4
HSET
$25
hash:csdn:article:by:2265
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2265
$12
commentCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2265
$9
labelList
$41
栈,操作系统,终端,内存,处理器,
*4
$4
HSET
$25
hash:csdn:article:by:2265
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2265
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2265
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2266
$2
id
$4
2266
*4
$4
HSET
$25
hash:csdn:article:by:2266
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2266
$3
url
$55
http://blog.csdn.net/kaikai_sk/article/details/50675439
*4
$4
HSET
$25
hash:csdn:article:by:2266
$5
title
$27
设计模式之单例模式
*4
$4
HSET
$25
hash:csdn:article:by:2266
$4
desc
$107
Car.java文件package com.bjsxt.dp.factory;public class Car
{
    *private static Car car=new Car();*   ...
*4
$4
HSET
$25
hash:csdn:article:by:2266
$9
readCount
$3
163
*4
$4
HSET
$25
hash:csdn:article:by:2266
$14
articleContent
$40
csdn/java/1_2_1_0_1504264571.316743.html
*4
$4
HSET
$25
hash:csdn:article:by:2266
$4
date
$16
2016-02-16 16:13
*4
$4
HSET
$25
hash:csdn:article:by:2266
$6
author
$9
kaikai_sk
*4
$4
HSET
$25
hash:csdn:article:by:2266
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2266
$9
labelList
$13
设计模式,
*4
$4
HSET
$25
hash:csdn:article:by:2266
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2266
$10
authorLink
$28
http://my.csdn.net/kaikai_sk
*4
$4
HSET
$25
hash:csdn:article:by:2266
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2267
$2
id
$4
2267
*4
$4
HSET
$25
hash:csdn:article:by:2267
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2267
$3
url
$55
http://blog.csdn.net/kaikai_sk/article/details/50676041
*4
$4
HSET
$25
hash:csdn:article:by:2267
$5
title
$33
设计模式之简单工厂模式
*4
$4
HSET
$25
hash:csdn:article:by:2267
$4
desc
$103
Moveable.java:public interface Moveable
{
    void Run();
}
VehicleFactory.java:public abstract clas...
*4
$4
HSET
$25
hash:csdn:article:by:2267
$9
readCount
$3
150
*4
$4
HSET
$25
hash:csdn:article:by:2267
$14
articleContent
$40
csdn/java/1_2_1_1_1504264572.452242.html
*4
$4
HSET
$25
hash:csdn:article:by:2267
$4
date
$16
2016-02-16 17:26
*4
$4
HSET
$25
hash:csdn:article:by:2267
$6
author
$9
kaikai_sk
*4
$4
HSET
$25
hash:csdn:article:by:2267
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2267
$9
labelList
$26
设计模式,简单工厂,
*4
$4
HSET
$25
hash:csdn:article:by:2267
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2267
$10
authorLink
$28
http://my.csdn.net/kaikai_sk
*4
$4
HSET
$25
hash:csdn:article:by:2267
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2268
$2
id
$4
2268
*4
$4
HSET
$25
hash:csdn:article:by:2268
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2268
$3
url
$55
http://blog.csdn.net/kaikai_sk/article/details/73330612
*4
$4
HSET
$25
hash:csdn:article:by:2268
$5
title
$24
设计模式之观察者
*4
$4
HSET
$25
hash:csdn:article:by:2268
$4
desc
$245
Internet气象站例题： 
    提供温度、气压和湿度的接口 
    测量数据更新时需时时通知给第三方 
    需要设计开放型API，便于其他第三方公司也能接入气象站获取数据观察者模式原理：...
*4
$4
HSET
$25
hash:csdn:article:by:2268
$9
readCount
$3
101
*4
$4
HSET
$25
hash:csdn:article:by:2268
$14
articleContent
$40
csdn/java/1_2_1_6_1504264573.534878.html
*4
$4
HSET
$25
hash:csdn:article:by:2268
$4
date
$16
2017-06-16 13:36
*4
$4
HSET
$25
hash:csdn:article:by:2268
$6
author
$9
kaikai_sk
*4
$4
HSET
$25
hash:csdn:article:by:2268
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2268
$9
labelList
$13
设计模式,
*4
$4
HSET
$25
hash:csdn:article:by:2268
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2268
$10
authorLink
$28
http://my.csdn.net/kaikai_sk
*4
$4
HSET
$25
hash:csdn:article:by:2268
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2269
$2
id
$4
2269
*4
$4
HSET
$25
hash:csdn:article:by:2269
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2269
$3
url
$55
http://blog.csdn.net/kaikai_sk/article/details/73385482
*4
$4
HSET
$25
hash:csdn:article:by:2269
$5
title
$30
设计模式之适配器模式
*4
$4
HSET
$25
hash:csdn:article:by:2269
$4
desc
$279
现实生活中一些适配器例子例题：用火鸡冒充鸭子 
适配器模式原理： 
适配器模式：将一个类的接口转换成另一种接口.让原本接口不兼容的类可以兼容. 
 
从用户的角度看不到被适配者，是解耦的 
用户调用适...
*4
$4
HSET
$25
hash:csdn:article:by:2269
$9
readCount
$2
60
*4
$4
HSET
$25
hash:csdn:article:by:2269
$14
articleContent
$41
csdn/java/1_2_1_10_1504264574.475593.html
*4
$4
HSET
$25
hash:csdn:article:by:2269
$4
date
$16
2017-06-17 21:17
*4
$4
HSET
$25
hash:csdn:article:by:2269
$6
author
$9
kaikai_sk
*4
$4
HSET
$25
hash:csdn:article:by:2269
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2269
$9
labelList
$13
设计模式,
*4
$4
HSET
$25
hash:csdn:article:by:2269
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2269
$10
authorLink
$28
http://my.csdn.net/kaikai_sk
*4
$4
HSET
$25
hash:csdn:article:by:2269
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2270
$2
id
$4
2270
*4
$4
HSET
$25
hash:csdn:article:by:2270
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2270
$3
url
$55
http://blog.csdn.net/kaikai_sk/article/details/73433636
*4
$4
HSET
$25
hash:csdn:article:by:2270
$5
title
$27
设计模式之模板模式
*4
$4
HSET
$25
hash:csdn:article:by:2270
$4
desc
$149
例题：泡咖啡和泡茶的步骤泡咖啡                                       泡茶 
水烧开                                    水烧开...
*4
$4
HSET
$25
hash:csdn:article:by:2270
$9
readCount
$3
105
*4
$4
HSET
$25
hash:csdn:article:by:2270
$14
articleContent
$41
csdn/java/1_2_1_12_1504264575.460372.html
*4
$4
HSET
$25
hash:csdn:article:by:2270
$4
date
$16
2017-06-18 16:26
*4
$4
HSET
$25
hash:csdn:article:by:2270
$6
author
$9
kaikai_sk
*4
$4
HSET
$25
hash:csdn:article:by:2270
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2270
$9
labelList
$13
设计模式,
*4
$4
HSET
$25
hash:csdn:article:by:2270
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2270
$10
authorLink
$28
http://my.csdn.net/kaikai_sk
*4
$4
HSET
$25
hash:csdn:article:by:2270
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2271
$2
id
$4
2271
*4
$4
HSET
$25
hash:csdn:article:by:2271
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2271
$3
url
$55
http://blog.csdn.net/kaikai_sk/article/details/73436688
*4
$4
HSET
$25
hash:csdn:article:by:2271
$5
title
$30
设计模式之迭代器模式
*4
$4
HSET
$25
hash:csdn:article:by:2271
$4
desc
$257
例题：两个菜馆合并后的菜单问题蛋糕店与餐厅合并后，怎么统一管理菜单项目 
问题：一个用ArrayList管理菜单，一个用数组管理迭代器模式的原理和设计关键代码：1. 实现迭代器额接口
public c...
*4
$4
HSET
$25
hash:csdn:article:by:2271
$9
readCount
$2
82
*4
$4
HSET
$25
hash:csdn:article:by:2271
$14
articleContent
$41
csdn/java/1_2_1_13_1504264576.612209.html
*4
$4
HSET
$25
hash:csdn:article:by:2271
$4
date
$16
2017-06-18 19:04
*4
$4
HSET
$25
hash:csdn:article:by:2271
$6
author
$9
kaikai_sk
*4
$4
HSET
$25
hash:csdn:article:by:2271
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2271
$9
labelList
$13
设计模式,
*4
$4
HSET
$25
hash:csdn:article:by:2271
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2271
$10
authorLink
$28
http://my.csdn.net/kaikai_sk
*4
$4
HSET
$25
hash:csdn:article:by:2271
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2272
$2
id
$4
2272
*4
$4
HSET
$25
hash:csdn:article:by:2272
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2272
$3
url
$55
http://blog.csdn.net/kaikai_sk/article/details/73429614
*4
$4
HSET
$25
hash:csdn:article:by:2272
$5
title
$21
设计模式之外观
*4
$4
HSET
$25
hash:csdn:article:by:2272
$4
desc
$289
例题：一个家庭影院项目组建一个家庭影院： 
DVD播放器、投影仪、自动屏幕、环绕立体声、爆米花机外观模式的原理和设计外观模式：提供一个统一的接口，来访问子系统中一群功能相关接口 
外观模式定义了一个高...
*4
$4
HSET
$25
hash:csdn:article:by:2272
$9
readCount
$2
86
*4
$4
HSET
$25
hash:csdn:article:by:2272
$14
articleContent
$41
csdn/java/1_2_1_11_1504264577.579647.html
*4
$4
HSET
$25
hash:csdn:article:by:2272
$4
date
$16
2017-06-18 13:02
*4
$4
HSET
$25
hash:csdn:article:by:2272
$6
author
$9
kaikai_sk
*4
$4
HSET
$25
hash:csdn:article:by:2272
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2272
$9
labelList
$13
设计模式,
*4
$4
HSET
$25
hash:csdn:article:by:2272
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2272
$10
authorLink
$28
http://my.csdn.net/kaikai_sk
*4
$4
HSET
$25
hash:csdn:article:by:2272
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2273
$2
id
$4
2273
*4
$4
HSET
$25
hash:csdn:article:by:2273
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2273
$3
url
$55
http://blog.csdn.net/kaikai_sk/article/details/73344360
*4
$4
HSET
$25
hash:csdn:article:by:2273
$5
title
$21
设计模式之单例
*4
$4
HSET
$25
hash:csdn:article:by:2273
$4
desc
$287
单例模式的意义有些对象我们只需要一个：线程池、缓存、硬件设备等 
如果多个实例会有造成冲突、结果的不一致性等问题 
是否可以用静态变量方式来实现？ 
或者程序员之间协商个全局变量？ 
单例模式：确保一...
*4
$4
HSET
$25
hash:csdn:article:by:2273
$9
readCount
$2
52
*4
$4
HSET
$25
hash:csdn:article:by:2273
$14
articleContent
$40
csdn/java/1_2_1_7_1504264578.775785.html
*4
$4
HSET
$25
hash:csdn:article:by:2273
$4
date
$16
2017-06-16 17:35
*4
$4
HSET
$25
hash:csdn:article:by:2273
$6
author
$9
kaikai_sk
*4
$4
HSET
$25
hash:csdn:article:by:2273
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2273
$9
labelList
$13
设计模式,
*4
$4
HSET
$25
hash:csdn:article:by:2273
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2273
$10
authorLink
$28
http://my.csdn.net/kaikai_sk
*4
$4
HSET
$25
hash:csdn:article:by:2273
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2274
$2
id
$4
2274
*4
$4
HSET
$25
hash:csdn:article:by:2274
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2274
$3
url
$55
http://blog.csdn.net/kaikai_sk/article/details/73381455
*4
$4
HSET
$25
hash:csdn:article:by:2274
$5
title
$27
设计模式之工厂系列
*4
$4
HSET
$25
hash:csdn:article:by:2274
$4
desc
$295
例题：披萨项目：要方便披萨品种的扩展、要便于维护、要能运行时扩展简单工厂模式 — 简单工厂模式的设计方案简单工厂模式的设计方案：定义一个实例化披萨对象的类，封装创建对象的代码 
简单工厂模式：定义了一...
*4
$4
HSET
$25
hash:csdn:article:by:2274
$9
readCount
$2
83
*4
$4
HSET
$25
hash:csdn:article:by:2274
$14
articleContent
$40
csdn/java/1_2_1_8_1504264578.819403.html
*4
$4
HSET
$25
hash:csdn:article:by:2274
$4
date
$16
2017-06-17 16:28
*4
$4
HSET
$25
hash:csdn:article:by:2274
$6
author
$9
kaikai_sk
*4
$4
HSET
$25
hash:csdn:article:by:2274
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2274
$9
labelList
$13
设计模式,
*4
$4
HSET
$25
hash:csdn:article:by:2274
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2274
$10
authorLink
$28
http://my.csdn.net/kaikai_sk
*4
$4
HSET
$25
hash:csdn:article:by:2274
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2275
$2
id
$4
2275
*4
$4
HSET
$25
hash:csdn:article:by:2275
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2275
$3
url
$55
http://blog.csdn.net/kaikai_sk/article/details/73382564
*4
$4
HSET
$25
hash:csdn:article:by:2275
$5
title
$27
设计模式之命令模式
*4
$4
HSET
$25
hash:csdn:article:by:2275
$4
desc
$205
例题：家电自动化遥控器API各家电API 
遥控器接口 
要求自动化遥控器：扩展性好、维护性好 
命令模式原理遥控器例题的类图code Address:http://download.csdn.net...
*4
$4
HSET
$25
hash:csdn:article:by:2275
$9
readCount
$2
80
*4
$4
HSET
$25
hash:csdn:article:by:2275
$14
articleContent
$40
csdn/java/1_2_1_9_1504264579.681577.html
*4
$4
HSET
$25
hash:csdn:article:by:2275
$4
date
$16
2017-06-17 19:54
*4
$4
HSET
$25
hash:csdn:article:by:2275
$6
author
$9
kaikai_sk
*4
$4
HSET
$25
hash:csdn:article:by:2275
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2275
$9
labelList
$13
设计模式,
*4
$4
HSET
$25
hash:csdn:article:by:2275
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2275
$10
authorLink
$28
http://my.csdn.net/kaikai_sk
*4
$4
HSET
$25
hash:csdn:article:by:2275
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2276
$2
id
$4
2276
*4
$4
HSET
$25
hash:csdn:article:by:2276
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2276
$3
url
$55
http://blog.csdn.net/kaikai_sk/article/details/50676245
*4
$4
HSET
$25
hash:csdn:article:by:2276
$5
title
$39
设计模式之分析和需求的概念
*4
$4
HSET
$25
hash:csdn:article:by:2276
$4
desc
$72
要实现怎样的功能？？怎样去实现我们所要的功能？？
*4
$4
HSET
$25
hash:csdn:article:by:2276
$9
readCount
$3
115
*4
$4
HSET
$25
hash:csdn:article:by:2276
$14
articleContent
$40
csdn/java/1_2_1_2_1504264580.744653.html
*4
$4
HSET
$25
hash:csdn:article:by:2276
$4
date
$16
2016-02-16 17:55
*4
$4
HSET
$25
hash:csdn:article:by:2276
$6
author
$9
kaikai_sk
*4
$4
HSET
$25
hash:csdn:article:by:2276
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2276
$9
labelList
$20
设计模式,需求,
*4
$4
HSET
$25
hash:csdn:article:by:2276
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2276
$10
authorLink
$28
http://my.csdn.net/kaikai_sk
*4
$4
HSET
$25
hash:csdn:article:by:2276
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2277
$2
id
$4
2277
*4
$4
HSET
$25
hash:csdn:article:by:2277
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2277
$3
url
$55
http://blog.csdn.net/kaikai_sk/article/details/73304598
*4
$4
HSET
$25
hash:csdn:article:by:2277
$5
title
$24
设计模式之装饰器
*4
$4
HSET
$25
hash:csdn:article:by:2277
$4
desc
$155
案例： 
   咖啡馆订单： 
    1）、咖啡种类：Espresso、ShortBlack、LongBlack、Decaf 
    2）、调料：Milk、Soy、Chocolate 
    3...
*4
$4
HSET
$25
hash:csdn:article:by:2277
$9
readCount
$2
77
*4
$4
HSET
$25
hash:csdn:article:by:2277
$14
articleContent
$40
csdn/java/1_2_1_3_1504264581.926302.html
*4
$4
HSET
$25
hash:csdn:article:by:2277
$4
date
$16
2017-06-15 22:45
*4
$4
HSET
$25
hash:csdn:article:by:2277
$6
author
$9
kaikai_sk
*4
$4
HSET
$25
hash:csdn:article:by:2277
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2277
$9
labelList
$13
设计模式,
*4
$4
HSET
$25
hash:csdn:article:by:2277
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2277
$10
authorLink
$28
http://my.csdn.net/kaikai_sk
*4
$4
HSET
$25
hash:csdn:article:by:2277
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2278
$2
id
$4
2278
*4
$4
HSET
$25
hash:csdn:article:by:2278
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2278
$3
url
$56
http://blog.csdn.net/ljy1988123/article/details/48978375
*4
$4
HSET
$25
hash:csdn:article:by:2278
$5
title
$50
Linux内核工程导论——电源管理子系统
*4
$4
HSET
$25
hash:csdn:article:by:2278
$4
desc
$48
电源管理子系统
ACPI
温度监测与控制
*4
$4
HSET
$25
hash:csdn:article:by:2278
$9
readCount
$3
650
*4
$4
HSET
$25
hash:csdn:article:by:2278
$14
articleContent
$41
csdn/linux/1_0_2_0_1504264583.049149.html
*4
$4
HSET
$25
hash:csdn:article:by:2278
$4
date
$16
2015-10-08 20:31
*4
$4
HSET
$25
hash:csdn:article:by:2278
$6
author
$10
ljy1988123
*4
$4
HSET
$25
hash:csdn:article:by:2278
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2278
$9
labelList
$20
linux kernel,内核,
*4
$4
HSET
$25
hash:csdn:article:by:2278
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2278
$10
authorLink
$29
http://my.csdn.net/ljy1988123
*4
$4
HSET
$25
hash:csdn:article:by:2278
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2279
$2
id
$4
2279
*4
$4
HSET
$25
hash:csdn:article:by:2279
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2279
$3
url
$55
http://blog.csdn.net/kaikai_sk/article/details/73321713
*4
$4
HSET
$25
hash:csdn:article:by:2279
$5
title
$21
设计模式之策略
*4
$4
HSET
$25
hash:csdn:article:by:2279
$4
desc
$249
例题：模拟鸭子 
          各种颜色，各种不同动作，如飞，叫，游泳 
    1）分析项目变化与不变部分，提取变化部分，抽象成接口+实现； 
    2）鸭子哪些功能是会根据新需求变化的？叫...
*4
$4
HSET
$25
hash:csdn:article:by:2279
$9
readCount
$2
63
*4
$4
HSET
$25
hash:csdn:article:by:2279
$14
articleContent
$40
csdn/java/1_2_1_5_1504264583.994671.html
*4
$4
HSET
$25
hash:csdn:article:by:2279
$4
date
$16
2017-06-16 09:59
*4
$4
HSET
$25
hash:csdn:article:by:2279
$6
author
$9
kaikai_sk
*4
$4
HSET
$25
hash:csdn:article:by:2279
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2279
$9
labelList
$13
设计模式,
*4
$4
HSET
$25
hash:csdn:article:by:2279
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2279
$10
authorLink
$28
http://my.csdn.net/kaikai_sk
*4
$4
HSET
$25
hash:csdn:article:by:2279
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2280
$2
id
$4
2280
*4
$4
HSET
$25
hash:csdn:article:by:2280
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2280
$3
url
$56
http://blog.csdn.net/ljy1988123/article/details/48978485
*4
$4
HSET
$25
hash:csdn:article:by:2280
$5
title
$53
Linux内核工程导论——硬件：音频子系统
*4
$4
HSET
$25
hash:csdn:article:by:2280
$4
desc
$285
音频子系统
音频框架
音频设备是非常常用，但又最容易在linux下出现问题的设备之一。音频设备种类和芯片繁多，所以必须提供足够多的驱动，并且有内核有足够的驱动与设备的匹配能力。也正是由于多样性，内...
*4
$4
HSET
$25
hash:csdn:article:by:2280
$9
readCount
$3
900
*4
$4
HSET
$25
hash:csdn:article:by:2280
$14
articleContent
$41
csdn/linux/1_0_2_2_1504264584.039919.html
*4
$4
HSET
$25
hash:csdn:article:by:2280
$4
date
$16
2015-10-08 20:37
*4
$4
HSET
$25
hash:csdn:article:by:2280
$6
author
$10
ljy1988123
*4
$4
HSET
$25
hash:csdn:article:by:2280
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2280
$9
labelList
$26
linux kernel,Linux,内核,
*4
$4
HSET
$25
hash:csdn:article:by:2280
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2280
$10
authorLink
$29
http://my.csdn.net/ljy1988123
*4
$4
HSET
$25
hash:csdn:article:by:2280
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2281
$2
id
$4
2281
*4
$4
HSET
$25
hash:csdn:article:by:2281
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2281
$3
url
$56
http://blog.csdn.net/ljy1988123/article/details/48978503
*4
$4
HSET
$25
hash:csdn:article:by:2281
$5
title
$53
Linux内核工程导论——硬件：无线子系统
*4
$4
HSET
$25
hash:csdn:article:by:2281
$4
desc
$259
WiMax
Wifi
内核中有一个rfkill子系统，使用这个可以关闭任何一个射频收发器。Linux中倾向于通用架构子系统，各个设备其实都是实现这个子系统规定的函数。这些子系统向上就提供操作同类函数的...
*4
$4
HSET
$25
hash:csdn:article:by:2281
$9
readCount
$4
1681
*4
$4
HSET
$25
hash:csdn:article:by:2281
$14
articleContent
$41
csdn/linux/1_0_2_3_1504264585.010362.html
*4
$4
HSET
$25
hash:csdn:article:by:2281
$4
date
$16
2015-10-08 20:37
*4
$4
HSET
$25
hash:csdn:article:by:2281
$6
author
$10
ljy1988123
*4
$4
HSET
$25
hash:csdn:article:by:2281
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2281
$9
labelList
$26
Linux,内核,linux kernel,
*4
$4
HSET
$25
hash:csdn:article:by:2281
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2281
$10
authorLink
$29
http://my.csdn.net/ljy1988123
*4
$4
HSET
$25
hash:csdn:article:by:2281
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2282
$2
id
$4
2282
*4
$4
HSET
$25
hash:csdn:article:by:2282
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2282
$3
url
$56
http://blog.csdn.net/ljy1988123/article/details/50912915
*4
$4
HSET
$25
hash:csdn:article:by:2282
$5
title
$41
Linux内核工程导论——内核种类
*4
$4
HSET
$25
hash:csdn:article:by:2282
$4
desc
$213
内核概览linux内核并不是唯一的内核，也并不是唯一的一种内核。实际上linux内核属于Monolithic kernel的一个实现，这种内核还包括Unix系列（BSD、SunOS等），dos和win...
*4
$4
HSET
$25
hash:csdn:article:by:2282
$9
readCount
$4
1472
*4
$4
HSET
$25
hash:csdn:article:by:2282
$14
articleContent
$42
csdn/linux/1_0_2_18_1504264587.061601.html
*4
$4
HSET
$25
hash:csdn:article:by:2282
$4
date
$16
2016-03-17 13:21
*4
$4
HSET
$25
hash:csdn:article:by:2282
$6
author
$10
ljy1988123
*4
$4
HSET
$25
hash:csdn:article:by:2282
$12
commentCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2282
$9
labelList
$13
linux kernel,
*4
$4
HSET
$25
hash:csdn:article:by:2282
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2282
$10
authorLink
$29
http://my.csdn.net/ljy1988123
*4
$4
HSET
$25
hash:csdn:article:by:2282
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2283
$2
id
$4
2283
*4
$4
HSET
$25
hash:csdn:article:by:2283
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2283
$3
url
$56
http://blog.csdn.net/ljy1988123/article/details/50579402
*4
$4
HSET
$25
hash:csdn:article:by:2283
$5
title
$59
Linux内核工程导论——网络：路由：路由原理
*4
$4
HSET
$25
hash:csdn:article:by:2283
$4
desc
$287
背景与概览

路由表

IP层通过路由将数据包送达该送达的目的地址，这就要求在整个网络中建立正确的路由表。路由表的内容是记录要到达哪里下一跳需要发到哪里（可以是端口可以是ip），如此整个网络在单个节点...
*4
$4
HSET
$25
hash:csdn:article:by:2283
$9
readCount
$4
1929
*4
$4
HSET
$25
hash:csdn:article:by:2283
$14
articleContent
$42
csdn/linux/1_0_2_15_1504264590.334454.html
*4
$4
HSET
$25
hash:csdn:article:by:2283
$4
date
$16
2016-01-25 19:50
*4
$4
HSET
$25
hash:csdn:article:by:2283
$6
author
$10
ljy1988123
*4
$4
HSET
$25
hash:csdn:article:by:2283
$12
commentCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2283
$9
labelList
$20
网络,linux kernel,
*4
$4
HSET
$25
hash:csdn:article:by:2283
$9
likeCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2283
$10
authorLink
$29
http://my.csdn.net/ljy1988123
*4
$4
HSET
$25
hash:csdn:article:by:2283
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2284
$2
id
$4
2284
*4
$4
HSET
$25
hash:csdn:article:by:2284
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2284
$3
url
$56
http://blog.csdn.net/ljy1988123/article/details/49870515
*4
$4
HSET
$25
hash:csdn:article:by:2284
$5
title
$44
Linux内核工程导论——安全：概览
*4
$4
HSET
$25
hash:csdn:article:by:2284
$4
desc
$237
linux从unix和posix那里继承了最基本的安全机制：用户、文件权限、进程capabilities。但是仅有这些是不够的，很多第三方实现了新的机制，通过补丁的形式提供。如安全增强Linux（SE...
*4
$4
HSET
$25
hash:csdn:article:by:2284
$9
readCount
$4
1503
*4
$4
HSET
$25
hash:csdn:article:by:2284
$14
articleContent
$42
csdn/linux/1_0_2_13_1504264591.502612.html
*4
$4
HSET
$25
hash:csdn:article:by:2284
$4
date
$16
2016-01-01 09:08
*4
$4
HSET
$25
hash:csdn:article:by:2284
$6
author
$10
ljy1988123
*4
$4
HSET
$25
hash:csdn:article:by:2284
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2284
$9
labelList
$20
linux kernel,安全,
*4
$4
HSET
$25
hash:csdn:article:by:2284
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2284
$10
authorLink
$29
http://my.csdn.net/ljy1988123
*4
$4
HSET
$25
hash:csdn:article:by:2284
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2285
$2
id
$4
2285
*4
$4
HSET
$25
hash:csdn:article:by:2285
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2285
$3
url
$56
http://blog.csdn.net/ljy1988123/article/details/49644587
*4
$4
HSET
$25
hash:csdn:article:by:2285
$5
title
$44
Linux内核工程导论——进程社会学
*4
$4
HSET
$25
hash:csdn:article:by:2285
$4
desc
$297
服务与进程	进程是满足用户需求的一系列任务，有的为了提供一个交互的界面，有的为了提供一个后台的演算，有的为了提供一个网络服务，有的为了利用磁盘资源做存储。归根到底，进程就是需求的承载体。PC本身就是通...
*4
$4
HSET
$25
hash:csdn:article:by:2285
$9
readCount
$4
1495
*4
$4
HSET
$25
hash:csdn:article:by:2285
$14
articleContent
$42
csdn/linux/1_0_2_11_1504264595.653467.html
*4
$4
HSET
$25
hash:csdn:article:by:2285
$4
date
$16
2015-11-04 22:43
*4
$4
HSET
$25
hash:csdn:article:by:2285
$6
author
$10
ljy1988123
*4
$4
HSET
$25
hash:csdn:article:by:2285
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2285
$9
labelList
$23
Linux,cpu,操作系统,
*4
$4
HSET
$25
hash:csdn:article:by:2285
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2285
$10
authorLink
$29
http://my.csdn.net/ljy1988123
*4
$4
HSET
$25
hash:csdn:article:by:2285
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2286
$2
id
$4
2286
*4
$4
HSET
$25
hash:csdn:article:by:2286
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2286
$3
url
$56
http://blog.csdn.net/ljy1988123/article/details/49593593
*4
$4
HSET
$25
hash:csdn:article:by:2286
$5
title
$55
Linux内核工程导论——网络：下半部分:core
*4
$4
HSET
$25
hash:csdn:article:by:2286
$4
desc
$209
总览         最外层是3个文件:socket、compat；、sysctl_net。socket文件定义了操作系统暴漏给用户程序的接口，compat是兼容性考虑的特殊socket接口（主要服务...
*4
$4
HSET
$25
hash:csdn:article:by:2286
$9
readCount
$4
1414
*4
$4
HSET
$25
hash:csdn:article:by:2286
$14
articleContent
$42
csdn/linux/1_0_2_10_1504264596.937889.html
*4
$4
HSET
$25
hash:csdn:article:by:2286
$4
date
$16
2015-11-02 23:02
*4
$4
HSET
$25
hash:csdn:article:by:2286
$6
author
$10
ljy1988123
*4
$4
HSET
$25
hash:csdn:article:by:2286
$12
commentCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2286
$9
labelList
$40
Linux,linux kernel,kernel,socket,网络,
*4
$4
HSET
$25
hash:csdn:article:by:2286
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2286
$10
authorLink
$29
http://my.csdn.net/ljy1988123
*4
$4
HSET
$25
hash:csdn:article:by:2286
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2287
$2
id
$4
2287
*4
$4
HSET
$25
hash:csdn:article:by:2287
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2287
$3
url
$56
http://blog.csdn.net/ljy1988123/article/details/48978663
*4
$4
HSET
$25
hash:csdn:article:by:2287
$5
title
$47
Linux内核工程导论——内核架构概览
*4
$4
HSET
$25
hash:csdn:article:by:2287
$4
desc
$251
Linux内核通用技术
linux内核技巧与手段
linux内核上下层通信方式
         定义一个接口体，包含各种函数指针，并且管理其列表。下层通过生成一个这样的结构体，将自己的操作函数...
*4
$4
HSET
$25
hash:csdn:article:by:2287
$9
readCount
$4
1044
*4
$4
HSET
$25
hash:csdn:article:by:2287
$14
articleContent
$40
csdn/linux/1_0_2_9_1504264597.39283.html
*4
$4
HSET
$25
hash:csdn:article:by:2287
$4
date
$16
2015-10-08 20:45
*4
$4
HSET
$25
hash:csdn:article:by:2287
$6
author
$10
ljy1988123
*4
$4
HSET
$25
hash:csdn:article:by:2287
$12
commentCount
$1
6
*4
$4
HSET
$25
hash:csdn:article:by:2287
$9
labelList
$26
linux kernel,Linux,内核,
*4
$4
HSET
$25
hash:csdn:article:by:2287
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2287
$10
authorLink
$29
http://my.csdn.net/ljy1988123
*4
$4
HSET
$25
hash:csdn:article:by:2287
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2288
$2
id
$4
2288
*4
$4
HSET
$25
hash:csdn:article:by:2288
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2288
$3
url
$56
http://blog.csdn.net/ljy1988123/article/details/48978591
*4
$4
HSET
$25
hash:csdn:article:by:2288
$5
title
$50
Linux内核工程导论——存储：通用块层
*4
$4
HSET
$25
hash:csdn:article:by:2288
$4
desc
$261
通用块层抽象
         通用块层位于scsi的上层，文件系统的下层，系统主要的内存管理和读写优化都是在这里完成的。DIRECT_IO是跳过这一层的。这一层不是驱动，而是一种机制。其代码位于l...
*4
$4
HSET
$25
hash:csdn:article:by:2288
$9
readCount
$4
2694
*4
$4
HSET
$25
hash:csdn:article:by:2288
$14
articleContent
$40
csdn/linux/1_0_2_7_1504264598.68181.html
*4
$4
HSET
$25
hash:csdn:article:by:2288
$4
date
$16
2015-10-08 20:43
*4
$4
HSET
$25
hash:csdn:article:by:2288
$6
author
$10
ljy1988123
*4
$4
HSET
$25
hash:csdn:article:by:2288
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2288
$9
labelList
$46
linux kernel,缓存,数据结构,Linux,内核,
*4
$4
HSET
$25
hash:csdn:article:by:2288
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2288
$10
authorLink
$29
http://my.csdn.net/ljy1988123
*4
$4
HSET
$25
hash:csdn:article:by:2288
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2289
$2
id
$4
2289
*4
$4
HSET
$25
hash:csdn:article:by:2289
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2289
$3
url
$56
http://blog.csdn.net/jjwwmlp456/article/details/40075219
*4
$4
HSET
$25
hash:csdn:article:by:2289
$5
title
$35
Java 实现访问者(Visitor)模式
*4
$4
HSET
$25
hash:csdn:article:by:2289
$4
desc
$105
interface Visitor {
	void visit(Gladiolus g);

	void visit(Chrysanthemum c);
}// concrete visitor		名...
*4
$4
HSET
$25
hash:csdn:article:by:2289
$9
readCount
$4
1030
*4
$4
HSET
$25
hash:csdn:article:by:2289
$14
articleContent
$40
csdn/java/1_0_2_0_1504264605.677381.html
*4
$4
HSET
$25
hash:csdn:article:by:2289
$4
date
$16
2014-10-14 12:56
*4
$4
HSET
$25
hash:csdn:article:by:2289
$6
author
$10
jjwwmlp456
*4
$4
HSET
$25
hash:csdn:article:by:2289
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2289
$9
labelList
$36
设计模式,访问者Visitor模式,
*4
$4
HSET
$25
hash:csdn:article:by:2289
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2289
$10
authorLink
$29
http://my.csdn.net/jjwwmlp456
*4
$4
HSET
$25
hash:csdn:article:by:2289
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2290
$2
id
$4
2290
*4
$4
HSET
$25
hash:csdn:article:by:2290
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2290
$3
url
$56
http://blog.csdn.net/ljy1988123/article/details/50458044
*4
$4
HSET
$25
hash:csdn:article:by:2290
$5
title
$53
Linux内核工程导论——网络：Netfilter概览
*4
$4
HSET
$25
hash:csdn:article:by:2290
$4
desc
$189
简介最早的内核包过滤机制是ipfwadm，后来是ipchains，再后来就是iptables/netfilter了。再往后，也就是现在是nftables。不过nftables与iptables还处于争...
*4
$4
HSET
$25
hash:csdn:article:by:2290
$9
readCount
$4
1657
*4
$4
HSET
$25
hash:csdn:article:by:2290
$14
articleContent
$42
csdn/linux/1_0_2_14_1504264605.957549.html
*4
$4
HSET
$25
hash:csdn:article:by:2290
$4
date
$16
2016-01-04 19:52
*4
$4
HSET
$25
hash:csdn:article:by:2290
$6
author
$10
ljy1988123
*4
$4
HSET
$25
hash:csdn:article:by:2290
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2290
$9
labelList
$29
Linux,内核,filter,iptables,
*4
$4
HSET
$25
hash:csdn:article:by:2290
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2290
$10
authorLink
$29
http://my.csdn.net/ljy1988123
*4
$4
HSET
$25
hash:csdn:article:by:2290
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2291
$2
id
$4
2291
*4
$4
HSET
$25
hash:csdn:article:by:2291
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2291
$3
url
$56
http://blog.csdn.net/jjwwmlp456/article/details/40077711
*4
$4
HSET
$25
hash:csdn:article:by:2291
$5
title
$36
Java 实现中介者(Mediator)模式
*4
$4
HSET
$25
hash:csdn:article:by:2291
$4
desc
$107
类图


public interface IMediator {

	public void createMediator();

	public void work();
}

/**
 ...
*4
$4
HSET
$25
hash:csdn:article:by:2291
$9
readCount
$4
1059
*4
$4
HSET
$25
hash:csdn:article:by:2291
$14
articleContent
$40
csdn/java/1_0_2_1_1504264606.803499.html
*4
$4
HSET
$25
hash:csdn:article:by:2291
$4
date
$16
2014-10-14 15:36
*4
$4
HSET
$25
hash:csdn:article:by:2291
$6
author
$10
jjwwmlp456
*4
$4
HSET
$25
hash:csdn:article:by:2291
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2291
$9
labelList
$37
设计模式,中介者Mediator模式,
*4
$4
HSET
$25
hash:csdn:article:by:2291
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2291
$10
authorLink
$29
http://my.csdn.net/jjwwmlp456
*4
$4
HSET
$25
hash:csdn:article:by:2291
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2292
$2
id
$4
2292
*4
$4
HSET
$25
hash:csdn:article:by:2292
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2292
$3
url
$56
http://blog.csdn.net/ljy1988123/article/details/49823785
*4
$4
HSET
$25
hash:csdn:article:by:2292
$5
title
$44
Linux内核工程导论–网络：TCP连接
*4
$4
HSET
$25
hash:csdn:article:by:2292
$4
desc
$245
Linux内核工程导论–网络：TCPTCP存在原因       TCP希望达成数据按序的，无损失的传输。 
       只要有TCP这个协议的需求，就有其带来的问题。其问题是，既然要保证按序到达和完...
*4
$4
HSET
$25
hash:csdn:article:by:2292
$9
readCount
$4
1918
*4
$4
HSET
$25
hash:csdn:article:by:2292
$14
articleContent
$42
csdn/linux/1_0_2_12_1504264607.027887.html
*4
$4
HSET
$25
hash:csdn:article:by:2292
$4
date
$16
2015-11-13 21:41
*4
$4
HSET
$25
hash:csdn:article:by:2292
$6
author
$10
ljy1988123
*4
$4
HSET
$25
hash:csdn:article:by:2292
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2292
$9
labelList
$17
linux kernel,TCP,
*4
$4
HSET
$25
hash:csdn:article:by:2292
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2292
$10
authorLink
$29
http://my.csdn.net/ljy1988123
*4
$4
HSET
$25
hash:csdn:article:by:2292
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2293
$2
id
$4
2293
*4
$4
HSET
$25
hash:csdn:article:by:2293
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2293
$3
url
$56
http://blog.csdn.net/jjwwmlp456/article/details/60875764
*4
$4
HSET
$25
hash:csdn:article:by:2293
$5
title
$75
Android 使用Java8新特性之Lambda expression (附命令者模式简化)
*4
$4
HSET
$25
hash:csdn:article:by:2293
$4
desc
$211
前言Lambda expression，java8的新特性。使用Lambda expression，可以替代只有一个函数的接口实现，告别匿名内部类，代码看起来更简洁易懂。 
java8还有其它一些新特...
*4
$4
HSET
$25
hash:csdn:article:by:2293
$9
readCount
$4
1789
*4
$4
HSET
$25
hash:csdn:article:by:2293
$14
articleContent
$40
csdn/java/1_0_2_6_1504264607.985195.html
*4
$4
HSET
$25
hash:csdn:article:by:2293
$4
date
$16
2017-03-08 16:55
*4
$4
HSET
$25
hash:csdn:article:by:2293
$6
author
$10
jjwwmlp456
*4
$4
HSET
$25
hash:csdn:article:by:2293
$12
commentCount
$1
9
*4
$4
HSET
$25
hash:csdn:article:by:2293
$9
labelList
$21
android,lambda,java8,
*4
$4
HSET
$25
hash:csdn:article:by:2293
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2293
$10
authorLink
$29
http://my.csdn.net/jjwwmlp456
*4
$4
HSET
$25
hash:csdn:article:by:2293
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2294
$2
id
$4
2294
*4
$4
HSET
$25
hash:csdn:article:by:2294
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2294
$3
url
$56
http://blog.csdn.net/jjwwmlp456/article/details/40080721
*4
$4
HSET
$25
hash:csdn:article:by:2294
$5
title
$39
Java 实现解释器(Interpreter)模式
*4
$4
HSET
$25
hash:csdn:article:by:2294
$4
desc
$125
/**
 * 声明一个抽象的解释操作
 * @author stone
 *
 */
public interface Interpreter {
	
	public void interpret(C...
*4
$4
HSET
$25
hash:csdn:article:by:2294
$9
readCount
$4
1029
*4
$4
HSET
$25
hash:csdn:article:by:2294
$14
articleContent
$40
csdn/java/1_0_2_2_1504264609.004558.html
*4
$4
HSET
$25
hash:csdn:article:by:2294
$4
date
$16
2014-10-14 17:30
*4
$4
HSET
$25
hash:csdn:article:by:2294
$6
author
$10
jjwwmlp456
*4
$4
HSET
$25
hash:csdn:article:by:2294
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2294
$9
labelList
$40
设计模式,解释器Interpreter模式,
*4
$4
HSET
$25
hash:csdn:article:by:2294
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2294
$10
authorLink
$29
http://my.csdn.net/jjwwmlp456
*4
$4
HSET
$25
hash:csdn:article:by:2294
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2295
$2
id
$4
2295
*4
$4
HSET
$25
hash:csdn:article:by:2295
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2295
$3
url
$56
http://blog.csdn.net/jjwwmlp456/article/details/46739035
*4
$4
HSET
$25
hash:csdn:article:by:2295
$5
title
$32
Android 建造者(Builder)模式
*4
$4
HSET
$25
hash:csdn:article:by:2295
$4
desc
$138
关于 Builder 模式 详述：http://blog.csdn.net/jjwwmlp456/article/details/39890699


先来张图
  
看到 Android  中 使用...
*4
$4
HSET
$25
hash:csdn:article:by:2295
$9
readCount
$4
1742
*4
$4
HSET
$25
hash:csdn:article:by:2295
$14
articleContent
$39
csdn/java/1_0_2_3_1504264610.12015.html
*4
$4
HSET
$25
hash:csdn:article:by:2295
$4
date
$16
2015-07-03 11:28
*4
$4
HSET
$25
hash:csdn:article:by:2295
$6
author
$10
jjwwmlp456
*4
$4
HSET
$25
hash:csdn:article:by:2295
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2295
$9
labelList
$16
Android,Builder,
*4
$4
HSET
$25
hash:csdn:article:by:2295
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2295
$10
authorLink
$29
http://my.csdn.net/jjwwmlp456
*4
$4
HSET
$25
hash:csdn:article:by:2295
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2296
$2
id
$4
2296
*4
$4
HSET
$25
hash:csdn:article:by:2296
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2296
$3
url
$56
http://blog.csdn.net/ljy1988123/article/details/48978625
*4
$4
HSET
$25
hash:csdn:article:by:2296
$5
title
$41
Linux内核工程导论——存储：USB
*4
$4
HSET
$25
hash:csdn:article:by:2296
$4
desc
$211
kernel USB驱动层
         首先USB（UniversalSerial Bus）是一种传输协议，并不是一种数据协议，也没有任何语义上的指令意义。USB传输协议所传输的SCSI命令才...
*4
$4
HSET
$25
hash:csdn:article:by:2296
$9
readCount
$3
882
*4
$4
HSET
$25
hash:csdn:article:by:2296
$14
articleContent
$41
csdn/linux/1_0_2_8_1504264611.504934.html
*4
$4
HSET
$25
hash:csdn:article:by:2296
$4
date
$16
2015-10-08 20:44
*4
$4
HSET
$25
hash:csdn:article:by:2296
$6
author
$10
ljy1988123
*4
$4
HSET
$25
hash:csdn:article:by:2296
$12
commentCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2296
$9
labelList
$37
kernel,usb,linux kernel,Linux,内核,
*4
$4
HSET
$25
hash:csdn:article:by:2296
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2296
$10
authorLink
$29
http://my.csdn.net/ljy1988123
*4
$4
HSET
$25
hash:csdn:article:by:2296
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2297
$2
id
$4
2297
*4
$4
HSET
$25
hash:csdn:article:by:2297
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2297
$3
url
$56
http://blog.csdn.net/jjwwmlp456/article/details/52495661
*4
$4
HSET
$25
hash:csdn:article:by:2297
$5
title
$29
HeadFirst 设计模式 笔记
*4
$4
HSET
$25
hash:csdn:article:by:2297
$4
desc
$263
设计原则
1. 找出应用中可能需要变化之处，把它们独立出来，不要和那些不需要变化的代码混在一起。
2. 针对接口编程，而不是针对实现编程。
       针对接口编程，实质上是指针对超类型(su...
*4
$4
HSET
$25
hash:csdn:article:by:2297
$9
readCount
$3
459
*4
$4
HSET
$25
hash:csdn:article:by:2297
$14
articleContent
$40
csdn/java/1_0_2_5_1504264612.047209.html
*4
$4
HSET
$25
hash:csdn:article:by:2297
$4
date
$16
2016-09-10 18:00
*4
$4
HSET
$25
hash:csdn:article:by:2297
$6
author
$10
jjwwmlp456
*4
$4
HSET
$25
hash:csdn:article:by:2297
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2297
$9
labelList
$13
设计模式,
*4
$4
HSET
$25
hash:csdn:article:by:2297
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2297
$10
authorLink
$29
http://my.csdn.net/jjwwmlp456
*4
$4
HSET
$25
hash:csdn:article:by:2297
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2298
$2
id
$4
2298
*4
$4
HSET
$25
hash:csdn:article:by:2298
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2298
$3
url
$56
http://blog.csdn.net/ljy1988123/article/details/48978533
*4
$4
HSET
$25
hash:csdn:article:by:2298
$5
title
$50
Linux内核工程导论——存储：文件系统
*4
$4
HSET
$25
hash:csdn:article:by:2298
$4
desc
$267
文件系统层
文件系统的种类和选用
         文件系统有很多种，linux内核是个大杂烩，同时满足企业和个人的需求，文件系统也是如此，发行版也是如此。其中原因自己分析。
         我们最...
*4
$4
HSET
$25
hash:csdn:article:by:2298
$9
readCount
$4
1084
*4
$4
HSET
$25
hash:csdn:article:by:2298
$14
articleContent
$41
csdn/linux/1_0_2_6_1504264613.337916.html
*4
$4
HSET
$25
hash:csdn:article:by:2298
$4
date
$16
2015-10-08 20:39
*4
$4
HSET
$25
hash:csdn:article:by:2298
$6
author
$10
ljy1988123
*4
$4
HSET
$25
hash:csdn:article:by:2298
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2298
$9
labelList
$46
linux kernel,Linux,内核,文件系统,存储,
*4
$4
HSET
$25
hash:csdn:article:by:2298
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2298
$10
authorLink
$29
http://my.csdn.net/ljy1988123
*4
$4
HSET
$25
hash:csdn:article:by:2298
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2299
$2
id
$4
2299
*4
$4
HSET
$25
hash:csdn:article:by:2299
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2299
$3
url
$56
http://blog.csdn.net/ljy1988123/article/details/48978567
*4
$4
HSET
$25
hash:csdn:article:by:2299
$5
title
$47
Linux内核工程导论——存储：缓存层
*4
$4
HSET
$25
hash:csdn:article:by:2299
$4
desc
$229
缓存层
bdi：缓存设备
         bdi是对块设备层的内存支持，相关代码页位于mm目录下。bdi的全称是backing device info，后备设备是非易失性存储器，但是这种存储器都比较...
*4
$4
HSET
$25
hash:csdn:article:by:2299
$9
readCount
$4
1668
*4
$4
HSET
$25
hash:csdn:article:by:2299
$14
articleContent
$41
csdn/linux/1_0_2_5_1504264614.346526.html
*4
$4
HSET
$25
hash:csdn:article:by:2299
$4
date
$16
2015-10-08 20:41
*4
$4
HSET
$25
hash:csdn:article:by:2299
$6
author
$10
ljy1988123
*4
$4
HSET
$25
hash:csdn:article:by:2299
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2299
$9
labelList
$46
缓存,文件系统,linux kernel,Linux,内核,
*4
$4
HSET
$25
hash:csdn:article:by:2299
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2299
$10
authorLink
$29
http://my.csdn.net/ljy1988123
*4
$4
HSET
$25
hash:csdn:article:by:2299
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2300
$2
id
$4
2300
*4
$4
HSET
$25
hash:csdn:article:by:2300
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2300
$3
url
$52
http://blog.csdn.net/yqj2065/article/details/8592375
*4
$4
HSET
$25
hash:csdn:article:by:2300
$5
title
$23
Java设计模式-导航
*4
$4
HSET
$25
hash:csdn:article:by:2300
$4
desc
$38
Java 设计模式++ 面向对象设计
*4
$4
HSET
$25
hash:csdn:article:by:2300
$9
readCount
$4
3860
*4
$4
HSET
$25
hash:csdn:article:by:2300
$14
articleContent
$40
csdn/java/1_1_2_7_1504264616.204731.html
*4
$4
HSET
$25
hash:csdn:article:by:2300
$4
date
$16
2013-02-19 21:37
*4
$4
HSET
$25
hash:csdn:article:by:2300
$6
author
$7
yqj2065
*4
$4
HSET
$25
hash:csdn:article:by:2300
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2300
$9
labelList
$57
Java 编程导论,设计模式,面向对象设计,导航,
*4
$4
HSET
$25
hash:csdn:article:by:2300
$9
likeCount
$2
15
*4
$4
HSET
$25
hash:csdn:article:by:2300
$10
authorLink
$26
http://my.csdn.net/yqj2065
*4
$4
HSET
$25
hash:csdn:article:by:2300
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2301
$2
id
$4
2301
*4
$4
HSET
$25
hash:csdn:article:by:2301
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2301
$3
url
$53
http://blog.csdn.net/gatieme/article/details/51005811
*4
$4
HSET
$25
hash:csdn:article:by:2301
$5
title
$75
进程间通信之-共享内存Shared Memory--linux内核剖析（十一）
*4
$4
HSET
$25
hash:csdn:article:by:2301
$4
desc
$283
共享内存共享内存是进程间通信中最简单的方式之一。共享内存是系统出于多个进程之间通讯的考虑，而预留的的一块内存区。共享内存允许两个或更多进程访问同一块内存，就如同 malloc() 函数向不同进程返回了...
*4
$4
HSET
$25
hash:csdn:article:by:2301
$9
readCount
$4
3937
*4
$4
HSET
$25
hash:csdn:article:by:2301
$14
articleContent
$41
csdn/linux/1_0_1_0_1504264616.416295.html
*4
$4
HSET
$25
hash:csdn:article:by:2301
$4
date
$16
2016-03-29 15:11
*4
$4
HSET
$25
hash:csdn:article:by:2301
$6
author
$7
gatieme
*4
$4
HSET
$25
hash:csdn:article:by:2301
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2301
$9
labelList
$35
函数,通信,内核,内存,malloc,
*4
$4
HSET
$25
hash:csdn:article:by:2301
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2301
$10
authorLink
$26
http://my.csdn.net/gatieme
*4
$4
HSET
$25
hash:csdn:article:by:2301
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2302
$2
id
$4
2302
*4
$4
HSET
$25
hash:csdn:article:by:2302
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2302
$3
url
$53
http://blog.csdn.net/gatieme/article/details/50994533
*4
$4
HSET
$25
hash:csdn:article:by:2302
$5
title
$65
进程间通信之-信号量semaphore--linux内核剖析（十）
*4
$4
HSET
$25
hash:csdn:article:by:2302
$4
desc
$295
信号量什么是信号量信号量的使用主要是用来保护共享资源，使得资源在一个时刻只有一个进程（线程）所拥有。
  信号量的值为正的时候，说明它空闲。所测试的线程可以锁定而使用它。若为0，说明它被占用，测试的线...
*4
$4
HSET
$25
hash:csdn:article:by:2302
$9
readCount
$4
4154
*4
$4
HSET
$25
hash:csdn:article:by:2302
$14
articleContent
$41
csdn/linux/1_0_1_1_1504264617.428158.html
*4
$4
HSET
$25
hash:csdn:article:by:2302
$4
date
$16
2016-03-28 23:37
*4
$4
HSET
$25
hash:csdn:article:by:2302
$6
author
$7
gatieme
*4
$4
HSET
$25
hash:csdn:article:by:2302
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2302
$9
labelList
$35
通信,线程,测试,内核,信号,
*4
$4
HSET
$25
hash:csdn:article:by:2302
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2302
$10
authorLink
$26
http://my.csdn.net/gatieme
*4
$4
HSET
$25
hash:csdn:article:by:2302
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2303
$2
id
$4
2303
*4
$4
HSET
$25
hash:csdn:article:by:2303
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2303
$3
url
$53
http://blog.csdn.net/gatieme/article/details/44958879
*4
$4
HSET
$25
hash:csdn:article:by:2303
$5
title
$47
Linux内核绪论----Linux内核剖析（二）
*4
$4
HSET
$25
hash:csdn:article:by:2303
$4
desc
$303
什么是内核内核是操作系统最基本的部分。它是为众多应用程序提供对计算机硬件的安全访问的一部分软件，这种访问是有限的，并且内核决定一个程序在什么时候对某部分硬件操作多长时间。内核的分类可分为单内核和双内核...
*4
$4
HSET
$25
hash:csdn:article:by:2303
$9
readCount
$4
9605
*4
$4
HSET
$25
hash:csdn:article:by:2303
$14
articleContent
$40
csdn/linux/1_0_1_10_1504264618.6433.html
*4
$4
HSET
$25
hash:csdn:article:by:2303
$4
date
$16
2015-04-09 15:48
*4
$4
HSET
$25
hash:csdn:article:by:2303
$6
author
$7
gatieme
*4
$4
HSET
$25
hash:csdn:article:by:2303
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2303
$9
labelList
$13
内核,linux,
*4
$4
HSET
$25
hash:csdn:article:by:2303
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2303
$10
authorLink
$26
http://my.csdn.net/gatieme
*4
$4
HSET
$25
hash:csdn:article:by:2303
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2304
$2
id
$4
2304
*4
$4
HSET
$25
hash:csdn:article:by:2304
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2304
$3
url
$53
http://blog.csdn.net/gatieme/article/details/44956431
*4
$4
HSET
$25
hash:csdn:article:by:2304
$5
title
$44
Linux的历史----Linux内核剖析（一）
*4
$4
HSET
$25
hash:csdn:article:by:2304
$4
desc
$243
Unix操作系统Unix的由来汤普逊和里奇最早是在贝尔实验室开发Unix的，此后的10年，Unix在学术机构和大型企业中得到了广泛的应用，当时的UNIX拥有者AT&T公司以低廉甚至免费的许可将Unix...
*4
$4
HSET
$25
hash:csdn:article:by:2304
$9
readCount
$5
10357
*4
$4
HSET
$25
hash:csdn:article:by:2304
$14
articleContent
$42
csdn/linux/1_0_1_11_1504264619.509449.html
*4
$4
HSET
$25
hash:csdn:article:by:2304
$4
date
$16
2015-04-09 10:51
*4
$4
HSET
$25
hash:csdn:article:by:2304
$6
author
$7
gatieme
*4
$4
HSET
$25
hash:csdn:article:by:2304
$12
commentCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2304
$9
labelList
$18
内核,linux,unix,
*4
$4
HSET
$25
hash:csdn:article:by:2304
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2304
$10
authorLink
$26
http://my.csdn.net/gatieme
*4
$4
HSET
$25
hash:csdn:article:by:2304
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2305
$2
id
$4
2305
*4
$4
HSET
$25
hash:csdn:article:by:2305
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2305
$3
url
$53
http://blog.csdn.net/gatieme/article/details/50990456
*4
$4
HSET
$25
hash:csdn:article:by:2305
$5
title
$59
进程间通信之-信号signal--linux内核剖析（九）
*4
$4
HSET
$25
hash:csdn:article:by:2305
$4
desc
$285
信号及信号来源什么是信号信号是UNIX和Linux系统响应某些条件而产生的一个事件，接收到该信号的进程会相应地采取一些行动。通常信号是由一个错误产生的。但它们还可以作为进程间通信或修改行为的一种方式，...
*4
$4
HSET
$25
hash:csdn:article:by:2305
$9
readCount
$4
2505
*4
$4
HSET
$25
hash:csdn:article:by:2305
$14
articleContent
$41
csdn/linux/1_0_1_2_1504264621.664224.html
*4
$4
HSET
$25
hash:csdn:article:by:2305
$4
date
$16
2016-03-27 13:22
*4
$4
HSET
$25
hash:csdn:article:by:2305
$6
author
$7
gatieme
*4
$4
HSET
$25
hash:csdn:article:by:2305
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2305
$9
labelList
$36
unix,通信,处理器,内核,软件,
*4
$4
HSET
$25
hash:csdn:article:by:2305
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2305
$10
authorLink
$26
http://my.csdn.net/gatieme
*4
$4
HSET
$25
hash:csdn:article:by:2305
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2306
$2
id
$4
2306
*4
$4
HSET
$25
hash:csdn:article:by:2306
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2306
$3
url
$53
http://blog.csdn.net/gatieme/article/details/50779184
*4
$4
HSET
$25
hash:csdn:article:by:2306
$5
title
$75
Linux系统调用详解（实现机制分析）--linux内核剖析（六）
*4
$4
HSET
$25
hash:csdn:article:by:2306
$4
desc
$283
本文介绍了系统调用的一些实现细节。首先分析了系统调用的意义，它们与库函数和应用程序接口(API)有怎样的关系。然后，我们考察了Linux内核如何实现系统调用，以及执行系统调用的连锁反应：陷入内核，传递...
*4
$4
HSET
$25
hash:csdn:article:by:2306
$9
readCount
$4
5602
*4
$4
HSET
$25
hash:csdn:article:by:2306
$14
articleContent
$41
csdn/linux/1_0_1_6_1504264622.743798.html
*4
$4
HSET
$25
hash:csdn:article:by:2306
$4
date
$16
2016-03-02 21:58
*4
$4
HSET
$25
hash:csdn:article:by:2306
$6
author
$7
gatieme
*4
$4
HSET
$25
hash:csdn:article:by:2306
$12
commentCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2306
$9
labelList
$37
函数,api,linux,linux kernel,应用,
*4
$4
HSET
$25
hash:csdn:article:by:2306
$9
likeCount
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2306
$10
authorLink
$26
http://my.csdn.net/gatieme
*4
$4
HSET
$25
hash:csdn:article:by:2306
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2307
$2
id
$4
2307
*4
$4
HSET
$25
hash:csdn:article:by:2307
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2307
$3
url
$53
http://blog.csdn.net/gatieme/article/details/48918399
*4
$4
HSET
$25
hash:csdn:article:by:2307
$5
title
$56
Linux内核的构建过程----Linux内核剖析（五）
*4
$4
HSET
$25
hash:csdn:article:by:2307
$4
desc
$193
参考 
  一次实验引发的故事 – kernel build system探索—vmlinux是如何炼成的– kernel makefile
问题在前面的博文中，我们先是为自己的Ubuntu安装了一套...
*4
$4
HSET
$25
hash:csdn:article:by:2307
$9
readCount
$4
2453
*4
$4
HSET
$25
hash:csdn:article:by:2307
$14
articleContent
$41
csdn/linux/1_0_1_7_1504264623.988499.html
*4
$4
HSET
$25
hash:csdn:article:by:2307
$4
date
$16
2015-10-08 15:53
*4
$4
HSET
$25
hash:csdn:article:by:2307
$6
author
$7
gatieme
*4
$4
HSET
$25
hash:csdn:article:by:2307
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2307
$9
labelList
$22
arm,linux kernel,make,
*4
$4
HSET
$25
hash:csdn:article:by:2307
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2307
$10
authorLink
$26
http://my.csdn.net/gatieme
*4
$4
HSET
$25
hash:csdn:article:by:2307
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2308
$2
id
$4
2308
*4
$4
HSET
$25
hash:csdn:article:by:2308
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2308
$3
url
$53
http://blog.csdn.net/gatieme/article/details/48846997
*4
$4
HSET
$25
hash:csdn:article:by:2308
$5
title
$57
为arm内核构建源码树----Linux内核剖析（四）
*4
$4
HSET
$25
hash:csdn:article:by:2308
$4
desc
$261
前面说到要做linux底层开发或者编写Linux的驱动，必须建立内核源码树，之前我们提到过在本机上构建源码树—-Linux内核剖析（三），其建立的源码树是针对i686平台的，但是我么嵌入式系统用的是a...
*4
$4
HSET
$25
hash:csdn:article:by:2308
$9
readCount
$4
1798
*4
$4
HSET
$25
hash:csdn:article:by:2308
$14
articleContent
$40
csdn/linux/1_0_1_8_1504264624.03277.html
*4
$4
HSET
$25
hash:csdn:article:by:2308
$4
date
$16
2015-10-01 17:24
*4
$4
HSET
$25
hash:csdn:article:by:2308
$6
author
$7
gatieme
*4
$4
HSET
$25
hash:csdn:article:by:2308
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2308
$9
labelList
$47
arm,内核,源码,linux kernel,嵌入式系统,
*4
$4
HSET
$25
hash:csdn:article:by:2308
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2308
$10
authorLink
$26
http://my.csdn.net/gatieme
*4
$4
HSET
$25
hash:csdn:article:by:2308
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2309
$2
id
$4
2309
*4
$4
HSET
$25
hash:csdn:article:by:2309
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2309
$3
url
$53
http://blog.csdn.net/yqj2065/article/details/39697081
*4
$4
HSET
$25
hash:csdn:article:by:2309
$5
title
$24
访问者模式的意图
*4
$4
HSET
$25
hash:csdn:article:by:2309
$4
desc
$54
访问者模式的访问者，是做专项检查的。
*4
$4
HSET
$25
hash:csdn:article:by:2309
$9
readCount
$4
1338
*4
$4
HSET
$25
hash:csdn:article:by:2309
$14
articleContent
$40
csdn/java/1_1_1_0_1504264624.636924.html
*4
$4
HSET
$25
hash:csdn:article:by:2309
$4
date
$16
2014-09-30 16:52
*4
$4
HSET
$25
hash:csdn:article:by:2309
$6
author
$7
yqj2065
*4
$4
HSET
$25
hash:csdn:article:by:2309
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2309
$9
labelList
$18
设计模式,Java,
*4
$4
HSET
$25
hash:csdn:article:by:2309
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2309
$10
authorLink
$26
http://my.csdn.net/yqj2065
*4
$4
HSET
$25
hash:csdn:article:by:2309
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2310
$2
id
$4
2310
*4
$4
HSET
$25
hash:csdn:article:by:2310
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2310
$3
url
$53
http://blog.csdn.net/gatieme/article/details/50908749
*4
$4
HSET
$25
hash:csdn:article:by:2310
$5
title
$69
Linux进程间通信的几种方式总结--linux内核剖析（七）
*4
$4
HSET
$25
hash:csdn:article:by:2310
$4
desc
$283
进程间通信概述进程通信的目的
数据传输 
一个进程需要将它的数据发送给另一个进程，发送的数据量在一个字节到几M字节之间
共享数据 
多个进程想要操作共享数据，一个进程对共享数据
通知事 
一个进程需要...
*4
$4
HSET
$25
hash:csdn:article:by:2310
$9
readCount
$5
10927
*4
$4
HSET
$25
hash:csdn:article:by:2310
$14
articleContent
$41
csdn/linux/1_0_1_5_1504264624.994248.html
*4
$4
HSET
$25
hash:csdn:article:by:2310
$4
date
$16
2016-03-16 22:09
*4
$4
HSET
$25
hash:csdn:article:by:2310
$6
author
$7
gatieme
*4
$4
HSET
$25
hash:csdn:article:by:2310
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2310
$9
labelList
$31
通信,linux,数据,内核,IPC,
*4
$4
HSET
$25
hash:csdn:article:by:2310
$9
likeCount
$2
10
*4
$4
HSET
$25
hash:csdn:article:by:2310
$10
authorLink
$26
http://my.csdn.net/gatieme
*4
$4
HSET
$25
hash:csdn:article:by:2310
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2311
$2
id
$4
2311
*4
$4
HSET
$25
hash:csdn:article:by:2311
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2311
$3
url
$53
http://blog.csdn.net/yqj2065/article/details/39127231
*4
$4
HSET
$25
hash:csdn:article:by:2311
$5
title
$15
3.1  n次策略
*4
$4
HSET
$25
hash:csdn:article:by:2311
$4
desc
$81
多次使用策略模式需要考虑两个问题：组合爆炸和无限可能。
*4
$4
HSET
$25
hash:csdn:article:by:2311
$9
readCount
$4
1574
*4
$4
HSET
$25
hash:csdn:article:by:2311
$14
articleContent
$41
csdn/java/1_1_1_17_1504264625.867075.html
*4
$4
HSET
$25
hash:csdn:article:by:2311
$4
date
$16
2014-09-08 01:05
*4
$4
HSET
$25
hash:csdn:article:by:2311
$6
author
$7
yqj2065
*4
$4
HSET
$25
hash:csdn:article:by:2311
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2311
$9
labelList
$42
Java,designpattern,重构,方法类型化,
*4
$4
HSET
$25
hash:csdn:article:by:2311
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2311
$10
authorLink
$26
http://my.csdn.net/yqj2065
*4
$4
HSET
$25
hash:csdn:article:by:2311
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2312
$2
id
$4
2312
*4
$4
HSET
$25
hash:csdn:article:by:2312
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2312
$3
url
$53
http://blog.csdn.net/gatieme/article/details/50914250
*4
$4
HSET
$25
hash:csdn:article:by:2312
$5
title
$89
linux系统启动过程详解-开机加电后发生了什么 --linux内核剖析（零）
*4
$4
HSET
$25
hash:csdn:article:by:2312
$4
desc
$179
http://www.mamicode.com/info-detail-243819.html总的来说在操作系统加电启动之后到main函数执行之前操作系统经历了以下3个大步骤 
*   启动BIOS。...
*4
$4
HSET
$25
hash:csdn:article:by:2312
$9
readCount
$4
3231
*4
$4
HSET
$25
hash:csdn:article:by:2312
$14
articleContent
$41
csdn/linux/1_0_1_3_1504264625.911022.html
*4
$4
HSET
$25
hash:csdn:article:by:2312
$4
date
$16
2016-03-17 16:35
*4
$4
HSET
$25
hash:csdn:article:by:2312
$6
author
$7
gatieme
*4
$4
HSET
$25
hash:csdn:article:by:2312
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2312
$9
labelList
$38
操作系统,函数,linux,内核,bios,
*4
$4
HSET
$25
hash:csdn:article:by:2312
$9
likeCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2312
$10
authorLink
$26
http://my.csdn.net/gatieme
*4
$4
HSET
$25
hash:csdn:article:by:2312
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2313
$2
id
$4
2313
*4
$4
HSET
$25
hash:csdn:article:by:2313
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2313
$3
url
$53
http://blog.csdn.net/gatieme/article/details/50909399
*4
$4
HSET
$25
hash:csdn:article:by:2313
$5
title
$53
进程间通信之-管道--linux内核剖析（八）
*4
$4
HSET
$25
hash:csdn:article:by:2313
$4
desc
$275
管道管道是一种两个进程间进行单向通信的机制。因为管道传递数据的单向性，管道又称为半双工管道。管道的这一特点决定了器使用的局限性。管道是Linux支持的最初Unix IPC形式之一，具有以下特点：
数据...
*4
$4
HSET
$25
hash:csdn:article:by:2313
$9
readCount
$4
1942
*4
$4
HSET
$25
hash:csdn:article:by:2313
$14
articleContent
$40
csdn/linux/1_0_1_4_1504264626.85974.html
*4
$4
HSET
$25
hash:csdn:article:by:2313
$4
date
$16
2016-03-16 23:30
*4
$4
HSET
$25
hash:csdn:article:by:2313
$6
author
$7
gatieme
*4
$4
HSET
$25
hash:csdn:article:by:2313
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2313
$9
labelList
$32
unix,通信,数据,内核,linux,
*4
$4
HSET
$25
hash:csdn:article:by:2313
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2313
$10
authorLink
$26
http://my.csdn.net/gatieme
*4
$4
HSET
$25
hash:csdn:article:by:2313
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2314
$2
id
$4
2314
*4
$4
HSET
$25
hash:csdn:article:by:2314
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2314
$3
url
$53
http://blog.csdn.net/yqj2065/article/details/38930281
*4
$4
HSET
$25
hash:csdn:article:by:2314
$5
title
$22
3.4  命令模式(5.2)
*4
$4
HSET
$25
hash:csdn:article:by:2314
$4
desc
$17
命令模式(5.2)
*4
$4
HSET
$25
hash:csdn:article:by:2314
$9
readCount
$4
1331
*4
$4
HSET
$25
hash:csdn:article:by:2314
$14
articleContent
$41
csdn/java/1_1_1_18_1504264626.986078.html
*4
$4
HSET
$25
hash:csdn:article:by:2314
$4
date
$16
2014-08-29 21:24
*4
$4
HSET
$25
hash:csdn:article:by:2314
$6
author
$7
yqj2065
*4
$4
HSET
$25
hash:csdn:article:by:2314
$12
commentCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2314
$9
labelList
$26
编程导论,command,Java,
*4
$4
HSET
$25
hash:csdn:article:by:2314
$9
likeCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2314
$10
authorLink
$26
http://my.csdn.net/yqj2065
*4
$4
HSET
$25
hash:csdn:article:by:2314
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2315
$2
id
$4
2315
*4
$4
HSET
$25
hash:csdn:article:by:2315
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2315
$3
url
$53
http://blog.csdn.net/yqj2065/article/details/39667587
*4
$4
HSET
$25
hash:csdn:article:by:2315
$5
title
$35
命令模式之2 Invoker Vs. Client
*4
$4
HSET
$25
hash:csdn:article:by:2315
$4
desc
$21
一个实用的例子
*4
$4
HSET
$25
hash:csdn:article:by:2315
$9
readCount
$4
1298
*4
$4
HSET
$25
hash:csdn:article:by:2315
$14
articleContent
$40
csdn/java/1_1_1_1_1504264628.906706.html
*4
$4
HSET
$25
hash:csdn:article:by:2315
$4
date
$16
2014-09-29 12:48
*4
$4
HSET
$25
hash:csdn:article:by:2315
$6
author
$7
yqj2065
*4
$4
HSET
$25
hash:csdn:article:by:2315
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2315
$9
labelList
$25
设计模式,Java,界面,
*4
$4
HSET
$25
hash:csdn:article:by:2315
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2315
$10
authorLink
$26
http://my.csdn.net/yqj2065
*4
$4
HSET
$25
hash:csdn:article:by:2315
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2316
$2
id
$4
2316
*4
$4
HSET
$25
hash:csdn:article:by:2316
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2316
$3
url
$55
http://blog.csdn.net/frogoscar/article/details/47162423
*4
$4
HSET
$25
hash:csdn:article:by:2316
$5
title
$76
【Linux探索之旅】第二部分第一课：终端Terminal，好戏上场
*4
$4
HSET
$25
hash:csdn:article:by:2316
$4
desc
$51
领略终端的奇妙世界，命令行就在眼前
*4
$4
HSET
$25
hash:csdn:article:by:2316
$9
readCount
$3
950
*4
$4
HSET
$25
hash:csdn:article:by:2316
$14
articleContent
$41
csdn/linux/1_1_2_0_1504264628.945806.html
*4
$4
HSET
$25
hash:csdn:article:by:2316
$4
date
$16
2015-07-31 01:35
*4
$4
HSET
$25
hash:csdn:article:by:2316
$6
author
$9
frogoscar
*4
$4
HSET
$25
hash:csdn:article:by:2316
$12
commentCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2316
$9
labelList
$59
Linux,操作系统,程序员联盟,ProgrammerLeague,终端,
*4
$4
HSET
$25
hash:csdn:article:by:2316
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2316
$10
authorLink
$28
http://my.csdn.net/frogoscar
*4
$4
HSET
$25
hash:csdn:article:by:2316
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2317
$2
id
$4
2317
*4
$4
HSET
$25
hash:csdn:article:by:2317
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2317
$3
url
$53
http://blog.csdn.net/yqj2065/article/details/39319493
*4
$4
HSET
$25
hash:csdn:article:by:2317
$5
title
$23
简明解释器模式-2
*4
$4
HSET
$25
hash:csdn:article:by:2317
$4
desc
$120
用户输入代数表达式，如"(a*a+b)*(c-d)"，程序按照优先级和括号的使用情况计算正确的结果。
*4
$4
HSET
$25
hash:csdn:article:by:2317
$9
readCount
$4
1104
*4
$4
HSET
$25
hash:csdn:article:by:2317
$14
articleContent
$40
csdn/java/1_1_1_9_1504264629.834187.html
*4
$4
HSET
$25
hash:csdn:article:by:2317
$4
date
$16
2014-09-16 17:21
*4
$4
HSET
$25
hash:csdn:article:by:2317
$6
author
$7
yqj2065
*4
$4
HSET
$25
hash:csdn:article:by:2317
$12
commentCount
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2317
$9
labelList
$21
Java,解释器模式,
*4
$4
HSET
$25
hash:csdn:article:by:2317
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2317
$10
authorLink
$26
http://my.csdn.net/yqj2065
*4
$4
HSET
$25
hash:csdn:article:by:2317
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2318
$2
id
$4
2318
*4
$4
HSET
$25
hash:csdn:article:by:2318
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2318
$3
url
$55
http://blog.csdn.net/frogoscar/article/details/47162391
*4
$4
HSET
$25
hash:csdn:article:by:2318
$5
title
$44
【Linux探索之旅】第一部分测试题
*4
$4
HSET
$25
hash:csdn:article:by:2318
$4
desc
$78
第一部分的测试题，忘了知识点请回去之前的课程复习噢。
*4
$4
HSET
$25
hash:csdn:article:by:2318
$9
readCount
$3
853
*4
$4
HSET
$25
hash:csdn:article:by:2318
$14
articleContent
$41
csdn/linux/1_1_2_1_1504264629.950918.html
*4
$4
HSET
$25
hash:csdn:article:by:2318
$4
date
$16
2015-07-31 01:24
*4
$4
HSET
$25
hash:csdn:article:by:2318
$6
author
$9
frogoscar
*4
$4
HSET
$25
hash:csdn:article:by:2318
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2318
$9
labelList
$62
Linux,操作系统,测试题,程序员联盟,ProgrammerLeague,
*4
$4
HSET
$25
hash:csdn:article:by:2318
$9
likeCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2318
$10
authorLink
$28
http://my.csdn.net/frogoscar
*4
$4
HSET
$25
hash:csdn:article:by:2318
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2319
$2
id
$4
2319
*4
$4
HSET
$25
hash:csdn:article:by:2319
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2319
$3
url
$55
http://blog.csdn.net/frogoscar/article/details/47758421
*4
$4
HSET
$25
hash:csdn:article:by:2319
$5
title
$79
【Linux探索之旅】第一部分第六课：Linux如何安装在虚拟机中
*4
$4
HSET
$25
hash:csdn:article:by:2319
$4
desc
$267
虽然我们带大家一起在电脑的硬盘上安装了Ubuntu这个Linux发行版，不过有的朋友也许电脑硬盘资源有限（莫不是贡献给了各种大型游戏和xxx，你们懂的。反正小编没有好嘛 :P ），所以要他们再划分一定...
*4
$4
HSET
$25
hash:csdn:article:by:2319
$9
readCount
$3
558
*4
$4
HSET
$25
hash:csdn:article:by:2319
$14
articleContent
$41
csdn/linux/1_1_2_2_1504264631.070954.html
*4
$4
HSET
$25
hash:csdn:article:by:2319
$4
date
$16
2015-08-18 20:19
*4
$4
HSET
$25
hash:csdn:article:by:2319
$6
author
$9
frogoscar
*4
$4
HSET
$25
hash:csdn:article:by:2319
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2319
$9
labelList
$50
Linux,虚拟机,Ubuntu,VirtualBox,程序员联盟,
*4
$4
HSET
$25
hash:csdn:article:by:2319
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2319
$10
authorLink
$28
http://my.csdn.net/frogoscar
*4
$4
HSET
$25
hash:csdn:article:by:2319
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2320
$2
id
$4
2320
*4
$4
HSET
$25
hash:csdn:article:by:2320
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2320
$3
url
$53
http://blog.csdn.net/yqj2065/article/details/39229481
*4
$4
HSET
$25
hash:csdn:article:by:2320
$5
title
$33
2.1.2 工厂方法模式（3.3）
*4
$4
HSET
$25
hash:csdn:article:by:2320
$4
desc
$213
工厂方法模式(factory method pattern)从2方面认识。
编程技巧：这是对参数化工厂方法加以改进的经典技术，以多态来重构if-else、switch-case等分支结构。
设计思路：...
*4
$4
HSET
$25
hash:csdn:article:by:2320
$9
readCount
$4
1259
*4
$4
HSET
$25
hash:csdn:article:by:2320
$14
articleContent
$41
csdn/java/1_1_1_13_1504264631.098138.html
*4
$4
HSET
$25
hash:csdn:article:by:2320
$4
date
$16
2014-09-12 15:27
*4
$4
HSET
$25
hash:csdn:article:by:2320
$6
author
$7
yqj2065
*4
$4
HSET
$25
hash:csdn:article:by:2320
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2320
$9
labelList
$19
Java,designpattern,
*4
$4
HSET
$25
hash:csdn:article:by:2320
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2320
$10
authorLink
$26
http://my.csdn.net/yqj2065
*4
$4
HSET
$25
hash:csdn:article:by:2320
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2321
$2
id
$4
2321
*4
$4
HSET
$25
hash:csdn:article:by:2321
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2321
$3
url
$53
http://blog.csdn.net/yqj2065/article/details/39183865
*4
$4
HSET
$25
hash:csdn:article:by:2321
$5
title
$61
《编程导论(Java)·2.1.1里氏替换原则》什么是LSP
*4
$4
HSET
$25
hash:csdn:article:by:2321
$4
desc
$111
你可以不知道继承、多态，但是必须知道里氏替换原则(Liskov SubstitutionPrinciple、LSP)。
*4
$4
HSET
$25
hash:csdn:article:by:2321
$9
readCount
$4
1653
*4
$4
HSET
$25
hash:csdn:article:by:2321
$14
articleContent
$41
csdn/java/1_1_1_15_1504264631.842914.html
*4
$4
HSET
$25
hash:csdn:article:by:2321
$4
date
$16
2014-09-10 17:30
*4
$4
HSET
$25
hash:csdn:article:by:2321
$6
author
$7
yqj2065
*4
$4
HSET
$25
hash:csdn:article:by:2321
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2321
$9
labelList
$29
Java,编程导论,design,LSP,
*4
$4
HSET
$25
hash:csdn:article:by:2321
$9
likeCount
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2321
$10
authorLink
$26
http://my.csdn.net/yqj2065
*4
$4
HSET
$25
hash:csdn:article:by:2321
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2322
$2
id
$4
2322
*4
$4
HSET
$25
hash:csdn:article:by:2322
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2322
$3
url
$55
http://blog.csdn.net/frogoscar/article/details/46563137
*4
$4
HSET
$25
hash:csdn:article:by:2322
$5
title
$73
【Linux探索之旅】第一部分第二课：下载Linux，免费的噢
*4
$4
HSET
$25
hash:csdn:article:by:2322
$4
desc
$48
1. Linux的多面性
2. 下载Ubuntu，烧写之
*4
$4
HSET
$25
hash:csdn:article:by:2322
$9
readCount
$4
1218
*4
$4
HSET
$25
hash:csdn:article:by:2322
$14
articleContent
$41
csdn/linux/1_1_2_6_1504264632.114533.html
*4
$4
HSET
$25
hash:csdn:article:by:2322
$4
date
$16
2015-06-19 16:59
*4
$4
HSET
$25
hash:csdn:article:by:2322
$6
author
$9
frogoscar
*4
$4
HSET
$25
hash:csdn:article:by:2322
$12
commentCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2322
$9
labelList
$49
Linux,操作系统,程序员联盟,编程,教程,
*4
$4
HSET
$25
hash:csdn:article:by:2322
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2322
$10
authorLink
$28
http://my.csdn.net/frogoscar
*4
$4
HSET
$25
hash:csdn:article:by:2322
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2323
$2
id
$4
2323
*4
$4
HSET
$25
hash:csdn:article:by:2323
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2323
$3
url
$55
http://blog.csdn.net/frogoscar/article/details/47758303
*4
$4
HSET
$25
hash:csdn:article:by:2323
$5
title
$82
【Linux探索之旅】第一部分第五课：Unity桌面，人生若只如初见
*4
$4
HSET
$25
hash:csdn:article:by:2323
$4
desc
$247
不容易啊，经过了前几课的学习，我们认识了Linux是什么，以及如何安装Linux系统（我们以Ubuntu这个Linux发行版为以后的演示系统），我们也在上一课终于把Ubuntu安装好了。
“很不错，掌...
*4
$4
HSET
$25
hash:csdn:article:by:2323
$9
readCount
$3
727
*4
$4
HSET
$25
hash:csdn:article:by:2323
$14
articleContent
$41
csdn/linux/1_1_2_3_1504264633.201825.html
*4
$4
HSET
$25
hash:csdn:article:by:2323
$4
date
$16
2015-08-18 20:15
*4
$4
HSET
$25
hash:csdn:article:by:2323
$6
author
$9
frogoscar
*4
$4
HSET
$25
hash:csdn:article:by:2323
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2323
$9
labelList
$48
Linux,操作系统,Ubuntu,Unity,程序员联盟,
*4
$4
HSET
$25
hash:csdn:article:by:2323
$9
likeCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2323
$10
authorLink
$28
http://my.csdn.net/frogoscar
*4
$4
HSET
$25
hash:csdn:article:by:2323
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2324
$2
id
$4
2324
*4
$4
HSET
$25
hash:csdn:article:by:2324
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2324
$3
url
$55
http://blog.csdn.net/frogoscar/article/details/46541445
*4
$4
HSET
$25
hash:csdn:article:by:2324
$5
title
$77
【Linux探索之旅】开宗明义+第一部分第一课：什么是Linux？
*4
$4
HSET
$25
hash:csdn:article:by:2324
$4
desc
$102
1、什么是操作系统？
2、天地霸气，爷们落地：Linux诞生
3、不同的Linux发行版
*4
$4
HSET
$25
hash:csdn:article:by:2324
$9
readCount
$4
1893
*4
$4
HSET
$25
hash:csdn:article:by:2324
$14
articleContent
$39
csdn/linux/1_1_2_7_1504264634.2024.html
*4
$4
HSET
$25
hash:csdn:article:by:2324
$4
date
$16
2015-06-18 01:57
*4
$4
HSET
$25
hash:csdn:article:by:2324
$6
author
$9
frogoscar
*4
$4
HSET
$25
hash:csdn:article:by:2324
$12
commentCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2324
$9
labelList
$49
Linux,操作系统,程序员联盟,编程,教程,
*4
$4
HSET
$25
hash:csdn:article:by:2324
$9
likeCount
$1
6
*4
$4
HSET
$25
hash:csdn:article:by:2324
$10
authorLink
$28
http://my.csdn.net/frogoscar
*4
$4
HSET
$25
hash:csdn:article:by:2324
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2325
$2
id
$4
2325
*4
$4
HSET
$25
hash:csdn:article:by:2325
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2325
$3
url
$53
http://blog.csdn.net/yqj2065/article/details/38978721
*4
$4
HSET
$25
hash:csdn:article:by:2325
$5
title
$21
5.6 外观模式(4.5)
*4
$4
HSET
$25
hash:csdn:article:by:2325
$4
desc
$119
外观模式(façade pattern)是门面型委派方式，它将解决的问题是减少客户对服务细节的了解。
*4
$4
HSET
$25
hash:csdn:article:by:2325
$9
readCount
$3
743
*4
$4
HSET
$25
hash:csdn:article:by:2325
$14
articleContent
$41
csdn/java/1_1_1_14_1504264634.249026.html
*4
$4
HSET
$25
hash:csdn:article:by:2325
$4
date
$16
2014-09-01 12:36
*4
$4
HSET
$25
hash:csdn:article:by:2325
$6
author
$7
yqj2065
*4
$4
HSET
$25
hash:csdn:article:by:2325
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2325
$9
labelList
$31
Java,设计模式,外观模式,
*4
$4
HSET
$25
hash:csdn:article:by:2325
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2325
$10
authorLink
$26
http://my.csdn.net/yqj2065
*4
$4
HSET
$25
hash:csdn:article:by:2325
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2326
$2
id
$4
2326
*4
$4
HSET
$25
hash:csdn:article:by:2326
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2326
$3
url
$53
http://blog.csdn.net/yqj2065/article/details/39304013
*4
$4
HSET
$25
hash:csdn:article:by:2326
$5
title
$23
5.3解释器模式(5.3)
*4
$4
HSET
$25
hash:csdn:article:by:2326
$4
desc
$36
解释器模式(Interpreter Pattern)
*4
$4
HSET
$25
hash:csdn:article:by:2326
$9
readCount
$4
1309
*4
$4
HSET
$25
hash:csdn:article:by:2326
$14
articleContent
$41
csdn/java/1_1_1_10_1504264635.001592.html
*4
$4
HSET
$25
hash:csdn:article:by:2326
$4
date
$16
2014-09-16 00:53
*4
$4
HSET
$25
hash:csdn:article:by:2326
$6
author
$7
yqj2065
*4
$4
HSET
$25
hash:csdn:article:by:2326
$12
commentCount
$1
3
*4
$4
HSET
$25
hash:csdn:article:by:2326
$9
labelList
$34
Java,设计模式,解释器模式,
*4
$4
HSET
$25
hash:csdn:article:by:2326
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2326
$10
authorLink
$26
http://my.csdn.net/yqj2065
*4
$4
HSET
$25
hash:csdn:article:by:2326
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2327
$2
id
$4
2327
*4
$4
HSET
$25
hash:csdn:article:by:2327
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2327
$3
url
$55
http://blog.csdn.net/frogoscar/article/details/47064401
*4
$4
HSET
$25
hash:csdn:article:by:2327
$5
title
$83
【Linux探索之旅】第一部分第四课：磁盘分区，并完成Ubuntu安装
*4
$4
HSET
$25
hash:csdn:article:by:2327
$4
desc
$289
上一课我们正式开始安装Ubuntu了，但是到了分区的那一步，小编却戛然而止。这是什么情况呢？
请读者们千万不要扁我；如果真的要扁，那就请“海扁”，让我一次挨（爱）个够（想到了庾澄庆的《让我一次爱个够》...
*4
$4
HSET
$25
hash:csdn:article:by:2327
$9
readCount
$4
1395
*4
$4
HSET
$25
hash:csdn:article:by:2327
$14
articleContent
$40
csdn/linux/1_1_2_4_1504264635.29354.html
*4
$4
HSET
$25
hash:csdn:article:by:2327
$4
date
$16
2015-07-26 04:30
*4
$4
HSET
$25
hash:csdn:article:by:2327
$6
author
$9
frogoscar
*4
$4
HSET
$25
hash:csdn:article:by:2327
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2327
$9
labelList
$59
Linux,ProgrammerLeague,Ubuntu,操作系统,程序员联盟,
*4
$4
HSET
$25
hash:csdn:article:by:2327
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2327
$10
authorLink
$28
http://my.csdn.net/frogoscar
*4
$4
HSET
$25
hash:csdn:article:by:2327
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2328
$2
id
$4
2328
*4
$4
HSET
$25
hash:csdn:article:by:2328
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2328
$3
url
$55
http://blog.csdn.net/frogoscar/article/details/47005085
*4
$4
HSET
$25
hash:csdn:article:by:2328
$5
title
$68
【Linux探索之旅】第一部分第三课：测试并安装Ubuntu
*4
$4
HSET
$25
hash:csdn:article:by:2328
$4
desc
$65
在正式开始Linux之旅前，我们要把操作系统安装好
*4
$4
HSET
$25
hash:csdn:article:by:2328
$9
readCount
$3
744
*4
$4
HSET
$25
hash:csdn:article:by:2328
$14
articleContent
$41
csdn/linux/1_1_2_5_1504264636.339172.html
*4
$4
HSET
$25
hash:csdn:article:by:2328
$4
date
$16
2015-07-22 16:14
*4
$4
HSET
$25
hash:csdn:article:by:2328
$6
author
$9
frogoscar
*4
$4
HSET
$25
hash:csdn:article:by:2328
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2328
$9
labelList
$59
Linux,操作系统,程序员联盟,Ubuntu,ProgrammerLeague,
*4
$4
HSET
$25
hash:csdn:article:by:2328
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2328
$10
authorLink
$28
http://my.csdn.net/frogoscar
*4
$4
HSET
$25
hash:csdn:article:by:2328
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2329
$2
id
$4
2329
*4
$4
HSET
$25
hash:csdn:article:by:2329
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2329
$3
url
$53
http://blog.csdn.net/yqj2065/article/details/39591119
*4
$4
HSET
$25
hash:csdn:article:by:2329
$5
title
$15
乒乓球问题
*4
$4
HSET
$25
hash:csdn:article:by:2329
$4
desc
$43
乒乓球问题，指方法的来回调用.
*4
$4
HSET
$25
hash:csdn:article:by:2329
$9
readCount
$4
1360
*4
$4
HSET
$25
hash:csdn:article:by:2329
$14
articleContent
$40
csdn/java/1_1_1_2_1504264638.159867.html
*4
$4
HSET
$25
hash:csdn:article:by:2329
$4
date
$16
2014-09-27 00:22
*4
$4
HSET
$25
hash:csdn:article:by:2329
$6
author
$7
yqj2065
*4
$4
HSET
$25
hash:csdn:article:by:2329
$12
commentCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2329
$9
labelList
$18
Java,设计模式,
*4
$4
HSET
$25
hash:csdn:article:by:2329
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2329
$10
authorLink
$26
http://my.csdn.net/yqj2065
*4
$4
HSET
$25
hash:csdn:article:by:2329
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2330
$2
id
$4
2330
*4
$4
HSET
$25
hash:csdn:article:by:2330
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2330
$3
url
$60
http://blog.csdn.net/dlutbrucezhang/article/details/11037159
*4
$4
HSET
$25
hash:csdn:article:by:2330
$5
title
$21
神奇的大内核锁
*4
$4
HSET
$25
hash:csdn:article:by:2330
$4
desc
$185
Big Kernel Lock（BKL）（大内核锁），是linux内核中使用到的一种锁，它跟普通的锁原理上的一样的：lock_kernel();/* 临界区 */unlock_kernel();但是它...
*4
$4
HSET
$25
hash:csdn:article:by:2330
$9
readCount
$4
1574
*4
$4
HSET
$25
hash:csdn:article:by:2330
$14
articleContent
$41
csdn/linux/1_0_1_0_1504264638.490547.html
*4
$4
HSET
$25
hash:csdn:article:by:2330
$4
date
$16
2013-09-04 10:55
*4
$4
HSET
$25
hash:csdn:article:by:2330
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2330
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2330
$9
labelList
$46
linux内核,全局变量,链表,内存,递归,
*4
$4
HSET
$25
hash:csdn:article:by:2330
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2330
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2330
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2331
$2
id
$4
2331
*4
$4
HSET
$25
hash:csdn:article:by:2331
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2331
$3
url
$53
http://blog.csdn.net/yqj2065/article/details/39402607
*4
$4
HSET
$25
hash:csdn:article:by:2331
$5
title
$31
简明 责任链模式（5.1）
*4
$4
HSET
$25
hash:csdn:article:by:2331
$4
desc
$149
责任链模式可以称为“推卸”式的代理，多个对象能够处理客户发出的请求，即它们都具有相应的方法如handle()。
*4
$4
HSET
$25
hash:csdn:article:by:2331
$9
readCount
$4
1240
*4
$4
HSET
$25
hash:csdn:article:by:2331
$14
articleContent
$40
csdn/java/1_1_1_5_1504264639.358123.html
*4
$4
HSET
$25
hash:csdn:article:by:2331
$4
date
$16
2014-09-19 20:44
*4
$4
HSET
$25
hash:csdn:article:by:2331
$6
author
$7
yqj2065
*4
$4
HSET
$25
hash:csdn:article:by:2331
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2331
$9
labelList
$25
Java,设计模式,链表,
*4
$4
HSET
$25
hash:csdn:article:by:2331
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2331
$10
authorLink
$26
http://my.csdn.net/yqj2065
*4
$4
HSET
$25
hash:csdn:article:by:2331
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2332
$2
id
$4
2332
*4
$4
HSET
$25
hash:csdn:article:by:2332
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2332
$3
url
$60
http://blog.csdn.net/dlutbrucezhang/article/details/10300421
*4
$4
HSET
$25
hash:csdn:article:by:2332
$5
title
$36
Linux2.6内核 -- 结构的初始化
*4
$4
HSET
$25
hash:csdn:article:by:2332
$4
desc
$193
Linux 内核中用到了大量的结构体，在编码规范中也给出了结构体初始化的规则，这篇文章中有对其的解释：http://blog.csdn.net/dlutbrucezhang/article/detai...
*4
$4
HSET
$25
hash:csdn:article:by:2332
$9
readCount
$4
1667
*4
$4
HSET
$25
hash:csdn:article:by:2332
$14
articleContent
$41
csdn/linux/1_0_1_1_1504264639.611558.html
*4
$4
HSET
$25
hash:csdn:article:by:2332
$4
date
$16
2013-08-25 15:06
*4
$4
HSET
$25
hash:csdn:article:by:2332
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2332
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2332
$9
labelList
$40
结构,内核,linux,Linux Kernel,指针,
*4
$4
HSET
$25
hash:csdn:article:by:2332
$9
likeCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2332
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2332
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2333
$2
id
$4
2333
*4
$4
HSET
$25
hash:csdn:article:by:2333
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2333
$3
url
$53
http://blog.csdn.net/yqj2065/article/details/39346303
*4
$4
HSET
$25
hash:csdn:article:by:2333
$5
title
$28
简明 状态模式（5.8）
*4
$4
HSET
$25
hash:csdn:article:by:2333
$4
desc
$39
屁股决定脑袋，状态决定行为
*4
$4
HSET
$25
hash:csdn:article:by:2333
$9
readCount
$4
1646
*4
$4
HSET
$25
hash:csdn:article:by:2333
$14
articleContent
$40
csdn/java/1_1_1_7_1504264640.618878.html
*4
$4
HSET
$25
hash:csdn:article:by:2333
$4
date
$16
2014-09-17 19:00
*4
$4
HSET
$25
hash:csdn:article:by:2333
$6
author
$7
yqj2065
*4
$4
HSET
$25
hash:csdn:article:by:2333
$12
commentCount
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2333
$9
labelList
$18
Java,设计模式,
*4
$4
HSET
$25
hash:csdn:article:by:2333
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2333
$10
authorLink
$26
http://my.csdn.net/yqj2065
*4
$4
HSET
$25
hash:csdn:article:by:2333
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2334
$2
id
$4
2334
*4
$4
HSET
$25
hash:csdn:article:by:2334
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2334
$3
url
$60
http://blog.csdn.net/dlutbrucezhang/article/details/10296897
*4
$4
HSET
$25
hash:csdn:article:by:2334
$5
title
$37
Linux2.6内核 -- 编码风格（3）
*4
$4
HSET
$25
hash:csdn:article:by:2334
$4
desc
$221
9.typedef    内核开发者们强烈反对使用 typedef 语句。他们的理由是：    1> typedef 掩盖了数据的真实类型    2> 由于数据类型隐藏起来了，所以很容易因此而犯错误，...
*4
$4
HSET
$25
hash:csdn:article:by:2334
$9
readCount
$4
1811
*4
$4
HSET
$25
hash:csdn:article:by:2334
$14
articleContent
$41
csdn/linux/1_0_1_2_1504264640.909459.html
*4
$4
HSET
$25
hash:csdn:article:by:2334
$4
date
$16
2013-08-25 13:48
*4
$4
HSET
$25
hash:csdn:article:by:2334
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2334
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2334
$9
labelList
$46
内核,编码,源码,linux内核,Linux Kernel,
*4
$4
HSET
$25
hash:csdn:article:by:2334
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2334
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2334
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2335
$2
id
$4
2335
*4
$4
HSET
$25
hash:csdn:article:by:2335
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2335
$3
url
$53
http://blog.csdn.net/yqj2065/article/details/39343193
*4
$4
HSET
$25
hash:csdn:article:by:2335
$5
title
$34
简明 抽象工厂模式（3.1）
*4
$4
HSET
$25
hash:csdn:article:by:2335
$4
desc
$45
一个工厂能够创建多个配套的产品
*4
$4
HSET
$25
hash:csdn:article:by:2335
$9
readCount
$4
1310
*4
$4
HSET
$25
hash:csdn:article:by:2335
$14
articleContent
$40
csdn/java/1_1_1_8_1504264641.496853.html
*4
$4
HSET
$25
hash:csdn:article:by:2335
$4
date
$16
2014-09-17 15:46
*4
$4
HSET
$25
hash:csdn:article:by:2335
$6
author
$7
yqj2065
*4
$4
HSET
$25
hash:csdn:article:by:2335
$12
commentCount
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2335
$9
labelList
$18
Java,设计模式,
*4
$4
HSET
$25
hash:csdn:article:by:2335
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2335
$10
authorLink
$26
http://my.csdn.net/yqj2065
*4
$4
HSET
$25
hash:csdn:article:by:2335
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2336
$2
id
$4
2336
*4
$4
HSET
$25
hash:csdn:article:by:2336
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2336
$3
url
$60
http://blog.csdn.net/dlutbrucezhang/article/details/10296389
*4
$4
HSET
$25
hash:csdn:article:by:2336
$5
title
$37
Linux2.6内核 -- 编码风格（2）
*4
$4
HSET
$25
hash:csdn:article:by:2336
$4
desc
$264
5.每行代码的长度      源代码中要尽可能的保证每行代码长度不超过80个字符，因为这样做可以使代码最适合在标准的 80 * 24 的终端上显示。事实上，并不存在一个广泛接受的标准--如果代码行超过...
*4
$4
HSET
$25
hash:csdn:article:by:2336
$9
readCount
$4
1841
*4
$4
HSET
$25
hash:csdn:article:by:2336
$14
articleContent
$41
csdn/linux/1_0_1_3_1504264641.823117.html
*4
$4
HSET
$25
hash:csdn:article:by:2336
$4
date
$16
2013-08-25 10:34
*4
$4
HSET
$25
hash:csdn:article:by:2336
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2336
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2336
$9
labelList
$43
内核,编码,Linux Kernel,Linux,源代码,
*4
$4
HSET
$25
hash:csdn:article:by:2336
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2336
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2336
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2337
$2
id
$4
2337
*4
$4
HSET
$25
hash:csdn:article:by:2337
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2337
$3
url
$53
http://blog.csdn.net/yqj2065/article/details/39371487
*4
$4
HSET
$25
hash:csdn:article:by:2337
$5
title
$34
有限状态机(FSM)的Java 演示
*4
$4
HSET
$25
hash:csdn:article:by:2337
$4
desc
$263
本文从简单的例子入手，逐步演变成非常复杂的程序。
在简明 状态模式（5.8）中，状态之间的变换由外界控制，或者说，多种状态是分割的、无关的。状态模式最有趣的地方正是讨论其状态的变迁。
*4
$4
HSET
$25
hash:csdn:article:by:2337
$9
readCount
$5
16083
*4
$4
HSET
$25
hash:csdn:article:by:2337
$14
articleContent
$40
csdn/java/1_1_1_6_1504264642.427853.html
*4
$4
HSET
$25
hash:csdn:article:by:2337
$4
date
$16
2014-09-18 14:51
*4
$4
HSET
$25
hash:csdn:article:by:2337
$6
author
$7
yqj2065
*4
$4
HSET
$25
hash:csdn:article:by:2337
$12
commentCount
$1
6
*4
$4
HSET
$25
hash:csdn:article:by:2337
$9
labelList
$28
Java,设计模式,状态机,
*4
$4
HSET
$25
hash:csdn:article:by:2337
$9
likeCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2337
$10
authorLink
$26
http://my.csdn.net/yqj2065
*4
$4
HSET
$25
hash:csdn:article:by:2337
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2338
$2
id
$4
2338
*4
$4
HSET
$25
hash:csdn:article:by:2338
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2338
$3
url
$60
http://blog.csdn.net/dlutbrucezhang/article/details/10094875
*4
$4
HSET
$25
hash:csdn:article:by:2338
$5
title
$32
Linux2.6内核中链表的实现
*4
$4
HSET
$25
hash:csdn:article:by:2338
$4
desc
$293
对于一个计算机专业的学生，链表这种数据结构对我们来说再熟悉不过了，毕竟在大学的《数据结构》中就讲解过，相信你也自己实现过，它实现起来可能是这个样子：（这里的例子都来自《Linux内核设计与实现》第三版...
*4
$4
HSET
$25
hash:csdn:article:by:2338
$9
readCount
$4
1786
*4
$4
HSET
$25
hash:csdn:article:by:2338
$14
articleContent
$42
csdn/linux/1_0_1_18_1504264642.771811.html
*4
$4
HSET
$25
hash:csdn:article:by:2338
$4
date
$16
2013-08-20 10:49
*4
$4
HSET
$25
hash:csdn:article:by:2338
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2338
$12
commentCount
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2338
$9
labelList
$46
数据结构,链表,struct,Linux,Linux Kernel,
*4
$4
HSET
$25
hash:csdn:article:by:2338
$9
likeCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2338
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2338
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2339
$2
id
$4
2339
*4
$4
HSET
$25
hash:csdn:article:by:2339
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2339
$3
url
$53
http://blog.csdn.net/yqj2065/article/details/39575455
*4
$4
HSET
$25
hash:csdn:article:by:2339
$5
title
$20
伪中介模式(5.5)
*4
$4
HSET
$25
hash:csdn:article:by:2339
$4
desc
$101
总之，股票交易所、婚姻介绍所、聊天室的例子，都不是[GoF]的中介者模式。
*4
$4
HSET
$25
hash:csdn:article:by:2339
$9
readCount
$4
1135
*4
$4
HSET
$25
hash:csdn:article:by:2339
$14
articleContent
$40
csdn/java/1_1_1_3_1504264643.518658.html
*4
$4
HSET
$25
hash:csdn:article:by:2339
$4
date
$16
2014-09-26 09:00
*4
$4
HSET
$25
hash:csdn:article:by:2339
$6
author
$7
yqj2065
*4
$4
HSET
$25
hash:csdn:article:by:2339
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2339
$9
labelList
$34
设计模式,Java,中介者模式,
*4
$4
HSET
$25
hash:csdn:article:by:2339
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2339
$10
authorLink
$26
http://my.csdn.net/yqj2065
*4
$4
HSET
$25
hash:csdn:article:by:2339
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2340
$2
id
$4
2340
*4
$4
HSET
$25
hash:csdn:article:by:2340
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2340
$3
url
$60
http://blog.csdn.net/dlutbrucezhang/article/details/10076565
*4
$4
HSET
$25
hash:csdn:article:by:2340
$5
title
$25
linux内核 asmlinkage宏
*4
$4
HSET
$25
hash:csdn:article:by:2340
$4
desc
$155
asmlinkage是个宏，使用它是为了保持参数在stack中。看一下/usr/include/asm/linkage.h里面的定义：#define asmlinkage CPP_ASMLINKAGE...
*4
$4
HSET
$25
hash:csdn:article:by:2340
$9
readCount
$4
2162
*4
$4
HSET
$25
hash:csdn:article:by:2340
$14
articleContent
$42
csdn/linux/1_0_1_19_1504264643.827725.html
*4
$4
HSET
$25
hash:csdn:article:by:2340
$4
date
$16
2013-08-19 16:30
*4
$4
HSET
$25
hash:csdn:article:by:2340
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2340
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2340
$9
labelList
$43
编译器,IT,性能优化,GCC,Linux Kernel,
*4
$4
HSET
$25
hash:csdn:article:by:2340
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2340
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2340
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2341
$2
id
$4
2341
*4
$4
HSET
$25
hash:csdn:article:by:2341
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2341
$3
url
$60
http://blog.csdn.net/dlutbrucezhang/article/details/10103371
*4
$4
HSET
$25
hash:csdn:article:by:2341
$5
title
$32
浅析linux内核中的idr机制
*4
$4
HSET
$25
hash:csdn:article:by:2341
$4
desc
$259
idr在linux内核中指的就是整数ID管理机制，从本质上来说，这就是一种将整数ID号和特定指针关联在一起的机制。这个机制最早是在2003年2月加入内核的，当时是作为POSIX定时器的一个补丁。现在，...
*4
$4
HSET
$25
hash:csdn:article:by:2341
$9
readCount
$4
4629
*4
$4
HSET
$25
hash:csdn:article:by:2341
$14
articleContent
$42
csdn/linux/1_0_1_17_1504264644.611963.html
*4
$4
HSET
$25
hash:csdn:article:by:2341
$4
date
$16
2013-08-20 12:26
*4
$4
HSET
$25
hash:csdn:article:by:2341
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2341
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2341
$9
labelList
$37
AMP,struct,内核,Linux,Linux Kernel,
*4
$4
HSET
$25
hash:csdn:article:by:2341
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2341
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2341
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2342
$2
id
$4
2342
*4
$4
HSET
$25
hash:csdn:article:by:2342
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2342
$3
url
$53
http://blog.csdn.net/yqj2065/article/details/39449253
*4
$4
HSET
$25
hash:csdn:article:by:2342
$5
title
$25
Java组合模式（4.3）
*4
$4
HSET
$25
hash:csdn:article:by:2342
$4
desc
$78
组合模式的要点是：叶子对象和各种容器能够统一地处理。
*4
$4
HSET
$25
hash:csdn:article:by:2342
$9
readCount
$4
1277
*4
$4
HSET
$25
hash:csdn:article:by:2342
$14
articleContent
$39
csdn/java/1_1_1_4_1504264644.66731.html
*4
$4
HSET
$25
hash:csdn:article:by:2342
$4
date
$16
2014-09-21 10:19
*4
$4
HSET
$25
hash:csdn:article:by:2342
$6
author
$7
yqj2065
*4
$4
HSET
$25
hash:csdn:article:by:2342
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2342
$9
labelList
$18
Java,设计模式,
*4
$4
HSET
$25
hash:csdn:article:by:2342
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2342
$10
authorLink
$26
http://my.csdn.net/yqj2065
*4
$4
HSET
$25
hash:csdn:article:by:2342
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2343
$2
id
$4
2343
*4
$4
HSET
$25
hash:csdn:article:by:2343
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2343
$3
url
$60
http://blog.csdn.net/dlutbrucezhang/article/details/10108559
*4
$4
HSET
$25
hash:csdn:article:by:2343
$5
title
$43
Linux2.6内核--中断线被关闭的情况
*4
$4
HSET
$25
hash:csdn:article:by:2343
$4
desc
$275
中断系统是现代操作系统中不可获取的一个子系统，它由硬件主动触发并发送到CPU，最后由内核调用中断处理程序处理中断。      那么中断有时候需要关闭，这是为什么呢？      一般分为两种情况：1.内...
*4
$4
HSET
$25
hash:csdn:article:by:2343
$9
readCount
$4
1955
*4
$4
HSET
$25
hash:csdn:article:by:2343
$14
articleContent
$42
csdn/linux/1_0_1_16_1504264645.965903.html
*4
$4
HSET
$25
hash:csdn:article:by:2343
$4
date
$16
2013-08-20 15:05
*4
$4
HSET
$25
hash:csdn:article:by:2343
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2343
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2343
$9
labelList
$49
硬件,操作系统,处理器,Linux,Linux Kernel,
*4
$4
HSET
$25
hash:csdn:article:by:2343
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2343
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2343
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2344
$2
id
$4
2344
*4
$4
HSET
$25
hash:csdn:article:by:2344
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2344
$3
url
$60
http://blog.csdn.net/dlutbrucezhang/article/details/10133251
*4
$4
HSET
$25
hash:csdn:article:by:2344
$5
title
$38
Linux2.6--中断机制中的 ksoftirqd
*4
$4
HSET
$25
hash:csdn:article:by:2344
$4
desc
$271
Linux中的中断机制被分为两个部分，回应硬件的中断请求的部分成为上半部（一般都是这样），而真正在做处理工作（耗时工作）的部分成为下半部，实现下半部在Linux2.6内核中存在三种方法：软中断，tas...
*4
$4
HSET
$25
hash:csdn:article:by:2344
$9
readCount
$4
3179
*4
$4
HSET
$25
hash:csdn:article:by:2344
$14
articleContent
$42
csdn/linux/1_0_1_15_1504264646.622797.html
*4
$4
HSET
$25
hash:csdn:article:by:2344
$4
date
$16
2013-08-21 09:50
*4
$4
HSET
$25
hash:csdn:article:by:2344
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2344
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2344
$9
labelList
$41
内核,多线程,Linux,Linux Kernel,Unix,
*4
$4
HSET
$25
hash:csdn:article:by:2344
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2344
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2344
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2345
$2
id
$4
2345
*4
$4
HSET
$25
hash:csdn:article:by:2345
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2345
$3
url
$60
http://blog.csdn.net/dlutbrucezhang/article/details/10154351
*4
$4
HSET
$25
hash:csdn:article:by:2345
$5
title
$21
LINUX自旋锁详解2
*4
$4
HSET
$25
hash:csdn:article:by:2345
$4
desc
$271
对于互斥, 旗标是一个有用的工具, 但是它们不是内核提供的唯一这样的工具. 相反, 大部分加锁是由一种称为自旋锁的机制来实现. 不象旗标, 自旋锁可用在不能睡眠的代码中, 例如中断处理. 当正确地使用...
*4
$4
HSET
$25
hash:csdn:article:by:2345
$9
readCount
$4
1193
*4
$4
HSET
$25
hash:csdn:article:by:2345
$14
articleContent
$42
csdn/linux/1_0_1_12_1504264647.631238.html
*4
$4
HSET
$25
hash:csdn:article:by:2345
$4
date
$16
2013-08-21 17:04
*4
$4
HSET
$25
hash:csdn:article:by:2345
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2345
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2345
$9
labelList
$38
内核,软件,Linux,Linux Kernel,Unix,
*4
$4
HSET
$25
hash:csdn:article:by:2345
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2345
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2345
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2346
$2
id
$4
2346
*4
$4
HSET
$25
hash:csdn:article:by:2346
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2346
$3
url
$60
http://blog.csdn.net/dlutbrucezhang/article/details/10142371
*4
$4
HSET
$25
hash:csdn:article:by:2346
$5
title
$56
Linux2.6内核--中断下半部实现方法 工作队列
*4
$4
HSET
$25
hash:csdn:article:by:2346
$4
desc
$303
工作队列子系统是一个用于创建内核线程的接口，通过它创建的进程负责执行由内核其他部分排到队列里的任务。它创建的这些内核线程称作工作者线程。工作队列可以让你的驱动程序创建一个专门的工作者线程来处理需要退后...
*4
$4
HSET
$25
hash:csdn:article:by:2346
$9
readCount
$4
1724
*4
$4
HSET
$25
hash:csdn:article:by:2346
$14
articleContent
$42
csdn/linux/1_0_1_14_1504264648.667129.html
*4
$4
HSET
$25
hash:csdn:article:by:2346
$4
date
$16
2013-08-21 13:15
*4
$4
HSET
$25
hash:csdn:article:by:2346
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2346
$12
commentCount
$1
5
*4
$4
HSET
$25
hash:csdn:article:by:2346
$9
labelList
$46
内核,Linux,Linux Kernel,工作队列,中断,
*4
$4
HSET
$25
hash:csdn:article:by:2346
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2346
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2346
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2347
$2
id
$4
2347
*4
$4
HSET
$25
hash:csdn:article:by:2347
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2347
$3
url
$60
http://blog.csdn.net/dlutbrucezhang/article/details/10154177
*4
$4
HSET
$25
hash:csdn:article:by:2347
$5
title
$20
LINUX自旋锁详解
*4
$4
HSET
$25
hash:csdn:article:by:2347
$4
desc
$289
加锁（locking）是一种广泛应用的同步技术。当内核控制路径必须访问共享数据结构或进入临界区时，就需要为自己获取一把“锁”。由锁机制保护的资源非常类似于限制于房间内的资源，当某人进入房间时，就把门锁...
*4
$4
HSET
$25
hash:csdn:article:by:2347
$9
readCount
$4
2398
*4
$4
HSET
$25
hash:csdn:article:by:2347
$14
articleContent
$42
csdn/linux/1_0_1_13_1504264649.728579.html
*4
$4
HSET
$25
hash:csdn:article:by:2347
$4
date
$16
2013-08-21 17:02
*4
$4
HSET
$25
hash:csdn:article:by:2347
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2347
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2347
$9
labelList
$33
内核,C,Linux Kernel,Linux,Unix,
*4
$4
HSET
$25
hash:csdn:article:by:2347
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2347
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2347
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2348
$2
id
$4
2348
*4
$4
HSET
$25
hash:csdn:article:by:2348
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2348
$3
url
$60
http://blog.csdn.net/dlutbrucezhang/article/details/10170649
*4
$4
HSET
$25
hash:csdn:article:by:2348
$5
title
$23
linux内存屏障浅析
*4
$4
HSET
$25
hash:csdn:article:by:2348
$4
desc
$297
内存屏障主要解决了两个问题：单处理器下的乱序问题和多处理器下的内存同步问题。为什么会乱序现在的CPU一般采用流水线来执行指令。一个指令的执行被分成：取指、译码、访存、执行、写回、等若干个阶段。然后，多...
*4
$4
HSET
$25
hash:csdn:article:by:2348
$9
readCount
$4
1296
*4
$4
HSET
$25
hash:csdn:article:by:2348
$14
articleContent
$42
csdn/linux/1_0_1_11_1504264650.697342.html
*4
$4
HSET
$25
hash:csdn:article:by:2348
$4
date
$16
2013-08-22 09:34
*4
$4
HSET
$25
hash:csdn:article:by:2348
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2348
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2348
$9
labelList
$42
内存,处理器,Cache,Linux,Linux Kernel,
*4
$4
HSET
$25
hash:csdn:article:by:2348
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2348
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2348
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2349
$2
id
$4
2349
*4
$4
HSET
$25
hash:csdn:article:by:2349
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2349
$3
url
$60
http://blog.csdn.net/dlutbrucezhang/article/details/10295487
*4
$4
HSET
$25
hash:csdn:article:by:2349
$5
title
$37
Linux2.6内核 -- 编码风格（1）
*4
$4
HSET
$25
hash:csdn:article:by:2349
$4
desc
$253
像所有其他大型软件一样，Linux 制定了一套编码风格，对代码的格式，风格和布局做出了规定。下面我就对 2.6 内核中的代码约定进行介绍。      1.缩进      缩进风格是用制表位（Tab）每...
*4
$4
HSET
$25
hash:csdn:article:by:2349
$9
readCount
$4
2018
*4
$4
HSET
$25
hash:csdn:article:by:2349
$14
articleContent
$41
csdn/linux/1_0_1_4_1504264651.718805.html
*4
$4
HSET
$25
hash:csdn:article:by:2349
$4
date
$16
2013-08-25 10:10
*4
$4
HSET
$25
hash:csdn:article:by:2349
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2349
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2349
$9
labelList
$40
内核,编程,重构,Linux Kernel,Linux,
*4
$4
HSET
$25
hash:csdn:article:by:2349
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2349
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2349
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2350
$2
id
$4
2350
*4
$4
HSET
$25
hash:csdn:article:by:2350
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2350
$3
url
$60
http://blog.csdn.net/dlutbrucezhang/article/details/10181535
*4
$4
HSET
$25
hash:csdn:article:by:2350
$5
title
$49
Linux2.6内核--内存管理（1）--分页机制
*4
$4
HSET
$25
hash:csdn:article:by:2350
$4
desc
$303
在内核里分配内存可不像在其他地方分配内存那么容易。造成这种局面的因素很多。从根本上讲，是因为内核本身不能像用户空间那样奢侈的使用内存。内核与用户空间不同，它不具备这种能力，它不支持简单便捷的内存分配方...
*4
$4
HSET
$25
hash:csdn:article:by:2350
$9
readCount
$4
1745
*4
$4
HSET
$25
hash:csdn:article:by:2350
$14
articleContent
$41
csdn/linux/1_0_1_8_1504264652.827594.html
*4
$4
HSET
$25
hash:csdn:article:by:2350
$4
date
$16
2013-08-22 14:51
*4
$4
HSET
$25
hash:csdn:article:by:2350
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2350
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2350
$9
labelList
$46
内核,内存管理,分页,Linux,Linux Kernel,
*4
$4
HSET
$25
hash:csdn:article:by:2350
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2350
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2350
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2351
$2
id
$4
2351
*4
$4
HSET
$25
hash:csdn:article:by:2351
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2351
$3
url
$60
http://blog.csdn.net/dlutbrucezhang/article/details/10180569
*4
$4
HSET
$25
hash:csdn:article:by:2351
$5
title
$23
Linux内核高端内存
*4
$4
HSET
$25
hash:csdn:article:by:2351
$4
desc
$256
Linux内核地址映射模型x86 CPU采用了段页式地址映射模型。进程代码中的地址为逻辑地址，经过段页式地址映射后，才真正访问物理内存。段页式机制如下图。 Linux内核地址空间划分通常32位Linu...
*4
$4
HSET
$25
hash:csdn:article:by:2351
$9
readCount
$4
1660
*4
$4
HSET
$25
hash:csdn:article:by:2351
$14
articleContent
$42
csdn/linux/1_0_1_10_1504264653.778166.html
*4
$4
HSET
$25
hash:csdn:article:by:2351
$4
date
$16
2013-08-22 14:11
*4
$4
HSET
$25
hash:csdn:article:by:2351
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2351
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2351
$9
labelList
$36
内核,X86,64位,Linux,Linux Kernel,
*4
$4
HSET
$25
hash:csdn:article:by:2351
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2351
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2351
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2352
$2
id
$4
2352
*4
$4
HSET
$25
hash:csdn:article:by:2352
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2352
$3
url
$60
http://blog.csdn.net/dlutbrucezhang/article/details/10220047
*4
$4
HSET
$25
hash:csdn:article:by:2352
$5
title
$55
Linux2.6内核--VFS层中和进程相关的数据结构
*4
$4
HSET
$25
hash:csdn:article:by:2352
$4
desc
$249
系统中的每一个进程都有自己的一组打开的文件，像根文件系统，当前工作目录，安装点等。有三个数据结构将 VFS 层和系统的进程紧密的联系在一起，它们分别是：file_struct，fs_struct 和 ...
*4
$4
HSET
$25
hash:csdn:article:by:2352
$9
readCount
$4
2055
*4
$4
HSET
$25
hash:csdn:article:by:2352
$14
articleContent
$41
csdn/linux/1_0_1_7_1504264654.065728.html
*4
$4
HSET
$25
hash:csdn:article:by:2352
$4
date
$16
2013-08-23 14:01
*4
$4
HSET
$25
hash:csdn:article:by:2352
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2352
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2352
$9
labelList
$49
文件系统,namespace,Linux,Linux Kernel,缓存,
*4
$4
HSET
$25
hash:csdn:article:by:2352
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2352
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2352
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2353
$2
id
$4
2353
*4
$4
HSET
$25
hash:csdn:article:by:2353
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2353
$3
url
$60
http://blog.csdn.net/dlutbrucezhang/article/details/10183315
*4
$4
HSET
$25
hash:csdn:article:by:2353
$5
title
$40
Linux2.6内核--内存管理（2）--区
*4
$4
HSET
$25
hash:csdn:article:by:2353
$4
desc
$243
由于硬件的限制，内核不能对所有的页一视同仁。有些页位于内存中的特定物理地址上，所以，不能将其用于一些特别的任务。（关于内存分页机制可以查看：http://blog.csdn.net/dlutbruce...
*4
$4
HSET
$25
hash:csdn:article:by:2353
$9
readCount
$4
1820
*4
$4
HSET
$25
hash:csdn:article:by:2353
$14
articleContent
$41
csdn/linux/1_0_1_9_1504264654.931242.html
*4
$4
HSET
$25
hash:csdn:article:by:2353
$4
date
$16
2013-08-22 15:21
*4
$4
HSET
$25
hash:csdn:article:by:2353
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2353
$12
commentCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2353
$9
labelList
$52
内存管理,硬件,Linux,Linux Kernel,高端内存,
*4
$4
HSET
$25
hash:csdn:article:by:2353
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2353
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2353
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2354
$2
id
$4
2354
*4
$4
HSET
$25
hash:csdn:article:by:2354
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2354
$3
url
$60
http://blog.csdn.net/dlutbrucezhang/article/details/10279207
*4
$4
HSET
$25
hash:csdn:article:by:2354
$5
title
$10
mmap详解
*4
$4
HSET
$25
hash:csdn:article:by:2354
$4
desc
$293
共享内存可以说是最有用的进程间通信方式，也是最快的IPC形式, 因为进程可以直接读写内存，而不需要任何数据的拷贝。对于像管道和消息队列等通信方式，则需要在内核和用户空间进行四次的数据拷贝，而共享内存则...
*4
$4
HSET
$25
hash:csdn:article:by:2354
$9
readCount
$4
1797
*4
$4
HSET
$25
hash:csdn:article:by:2354
$14
articleContent
$41
csdn/linux/1_0_1_5_1504264655.931734.html
*4
$4
HSET
$25
hash:csdn:article:by:2354
$4
date
$16
2013-08-24 17:37
*4
$4
HSET
$25
hash:csdn:article:by:2354
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2354
$12
commentCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2354
$9
labelList
$40
存储,数据,指针,Linux Kernel,Linux,
*4
$4
HSET
$25
hash:csdn:article:by:2354
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2354
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2354
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2355
$2
id
$4
2355
*4
$4
HSET
$25
hash:csdn:article:by:2355
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2355
$3
url
$60
http://blog.csdn.net/dlutbrucezhang/article/details/10225703
*4
$4
HSET
$25
hash:csdn:article:by:2355
$5
title
$42
Linux2.6内核--对块IO层操作的讨论
*4
$4
HSET
$25
hash:csdn:article:by:2355
$4
desc
$303
当一个块被调入内存时（也就是说，在读入后或等待写出时），它要存储在缓冲区中。每个缓冲区与一个块对应，它相当于是磁盘块在内存中的表示。块包含一个或多个扇区，但大小不能超过一页，所以一页可以容纳一个或多个...
*4
$4
HSET
$25
hash:csdn:article:by:2355
$9
readCount
$4
1880
*4
$4
HSET
$25
hash:csdn:article:by:2355
$14
articleContent
$41
csdn/linux/1_0_1_6_1504264656.961495.html
*4
$4
HSET
$25
hash:csdn:article:by:2355
$4
date
$16
2013-08-23 15:44
*4
$4
HSET
$25
hash:csdn:article:by:2355
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2355
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2355
$9
labelList
$36
内存,磁盘,Linux,Linux Kernel,io,
*4
$4
HSET
$25
hash:csdn:article:by:2355
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2355
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2355
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2356
$2
id
$4
2356
*4
$4
HSET
$25
hash:csdn:article:by:2356
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2356
$3
url
$55
http://blog.csdn.net/lulei9876/article/details/40303427
*4
$4
HSET
$25
hash:csdn:article:by:2356
$5
title
$59
菜鸟版JAVA设计模式-从抽象与实现说桥接模式
*4
$4
HSET
$25
hash:csdn:article:by:2356
$4
desc
$301
桥接模式，初学的时候其实很不理解为什么要把这个模式命名为桥接模式，脑海里突然联想到。其实我学习是一件比较痛苦的事情，因为我必须要知道来龙去脉才能学的进去，所以，很快我就对这个命名产生了兴趣，桥接？
嗯...
*4
$4
HSET
$25
hash:csdn:article:by:2356
$9
readCount
$4
1862
*4
$4
HSET
$25
hash:csdn:article:by:2356
$14
articleContent
$39
csdn/java/1_0_1_0_1504264658.00462.html
*4
$4
HSET
$25
hash:csdn:article:by:2356
$4
date
$16
2014-10-22 15:26
*4
$4
HSET
$25
hash:csdn:article:by:2356
$6
author
$9
lulei9876
*4
$4
HSET
$25
hash:csdn:article:by:2356
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2356
$9
labelList
$56
java设计模式,桥接模式,设计模式,面向对象,
*4
$4
HSET
$25
hash:csdn:article:by:2356
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2356
$10
authorLink
$28
http://my.csdn.net/lulei9876
*4
$4
HSET
$25
hash:csdn:article:by:2356
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2357
$2
id
$4
2357
*4
$4
HSET
$25
hash:csdn:article:by:2357
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2357
$3
url
$55
http://blog.csdn.net/lulei9876/article/details/39994825
*4
$4
HSET
$25
hash:csdn:article:by:2357
$5
title
$79
菜鸟版JAVA设计模式—适配器模式，装饰模式，代理模式异同
*4
$4
HSET
$25
hash:csdn:article:by:2357
$4
desc
$297
节前把3个设计模式的学习心得分享了一下，分别是适配器模式，装饰模式，代理模式。
但是似乎越写越有些迷糊，这三种模式都有着一些大同小异的地方，总是有些搞不清。
今天再重新学习下，把学习心得分享给大家一下...
*4
$4
HSET
$25
hash:csdn:article:by:2357
$9
readCount
$4
9459
*4
$4
HSET
$25
hash:csdn:article:by:2357
$14
articleContent
$40
csdn/java/1_0_1_2_1504264659.896492.html
*4
$4
HSET
$25
hash:csdn:article:by:2357
$4
date
$16
2014-10-14 10:55
*4
$4
HSET
$25
hash:csdn:article:by:2357
$6
author
$9
lulei9876
*4
$4
HSET
$25
hash:csdn:article:by:2357
$12
commentCount
$1
9
*4
$4
HSET
$25
hash:csdn:article:by:2357
$9
labelList
$60
JAVA,设计模式,适配器模式,装饰模式,代理模式,
*4
$4
HSET
$25
hash:csdn:article:by:2357
$9
likeCount
$1
7
*4
$4
HSET
$25
hash:csdn:article:by:2357
$10
authorLink
$28
http://my.csdn.net/lulei9876
*4
$4
HSET
$25
hash:csdn:article:by:2357
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2358
$2
id
$4
2358
*4
$4
HSET
$25
hash:csdn:article:by:2358
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2358
$3
url
$53
http://blog.csdn.net/tinylab/article/details/45330771
*4
$4
HSET
$25
hash:csdn:article:by:2358
$5
title
$46
［授权发表］用 kGDB 调试 Linux 内核
*4
$4
HSET
$25
hash:csdn:article:by:2358
$4
desc
$199
本文记录了用 kGDB 调试 Linux 内核的全过程，都是在前人工作基础上的一些总结。以下操作都是基于特定板子来进行，但是大部分都能应用于其他平台。
*4
$4
HSET
$25
hash:csdn:article:by:2358
$9
readCount
$3
980
*4
$4
HSET
$25
hash:csdn:article:by:2358
$14
articleContent
$41
csdn/linux/1_0_1_0_1504264661.044641.html
*4
$4
HSET
$25
hash:csdn:article:by:2358
$4
date
$16
2015-04-28 08:16
*4
$4
HSET
$25
hash:csdn:article:by:2358
$6
author
$8
hifalcon
*4
$4
HSET
$25
hash:csdn:article:by:2358
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2358
$9
labelList
$18
Linux,KGDB,调试,
*4
$4
HSET
$25
hash:csdn:article:by:2358
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2358
$10
authorLink
$27
http://my.csdn.net/hifalcon
*4
$4
HSET
$25
hash:csdn:article:by:2358
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2359
$2
id
$4
2359
*4
$4
HSET
$25
hash:csdn:article:by:2359
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2359
$3
url
$55
http://blog.csdn.net/lulei9876/article/details/39582677
*4
$4
HSET
$25
hash:csdn:article:by:2359
$5
title
$55
菜鸟版JAVA设计模式—从买房子看代理模式
*4
$4
HSET
$25
hash:csdn:article:by:2359
$4
desc
$299
相对于适配器模式，或者说装饰器模式，代理模式理解起来更加简单。
代理这个词应该比较好理解，代替去做就是代理。
比如，我们买卖房子，那么我们会找中介，我要卖房子，但是我们没有时间去卖，我主动交给中介，中...
*4
$4
HSET
$25
hash:csdn:article:by:2359
$9
readCount
$4
2849
*4
$4
HSET
$25
hash:csdn:article:by:2359
$14
articleContent
$40
csdn/java/1_0_1_3_1504264661.272887.html
*4
$4
HSET
$25
hash:csdn:article:by:2359
$4
date
$16
2014-09-28 15:34
*4
$4
HSET
$25
hash:csdn:article:by:2359
$6
author
$9
lulei9876
*4
$4
HSET
$25
hash:csdn:article:by:2359
$12
commentCount
$1
3
*4
$4
HSET
$25
hash:csdn:article:by:2359
$9
labelList
$35
JAVA,java设计模式,代理模式,
*4
$4
HSET
$25
hash:csdn:article:by:2359
$9
likeCount
$1
3
*4
$4
HSET
$25
hash:csdn:article:by:2359
$10
authorLink
$28
http://my.csdn.net/lulei9876
*4
$4
HSET
$25
hash:csdn:article:by:2359
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2360
$2
id
$4
2360
*4
$4
HSET
$25
hash:csdn:article:by:2360
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2360
$3
url
$55
http://blog.csdn.net/lulei9876/article/details/39552631
*4
$4
HSET
$25
hash:csdn:article:by:2360
$5
title
$61
菜鸟版JAVA设计模式—从火锅底料到装饰器模式
*4
$4
HSET
$25
hash:csdn:article:by:2360
$4
desc
$301
“老板，来份全辣锅底，不要给我用装饰器模式来配料！”我特地狠狠的强调了最后一句话。
不到一会，老板给我端来了一个火锅和几个盘子，火锅里装了盐水，而盘子里放了辣椒，花椒，茴香，大蒜等佐料。。。。。。。。...
*4
$4
HSET
$25
hash:csdn:article:by:2360
$9
readCount
$4
2852
*4
$4
HSET
$25
hash:csdn:article:by:2360
$14
articleContent
$40
csdn/java/1_0_1_4_1504264662.080399.html
*4
$4
HSET
$25
hash:csdn:article:by:2360
$4
date
$16
2014-09-25 16:52
*4
$4
HSET
$25
hash:csdn:article:by:2360
$6
author
$9
lulei9876
*4
$4
HSET
$25
hash:csdn:article:by:2360
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2360
$9
labelList
$48
JAVA,java设计模式,面向对象,设计模式,
*4
$4
HSET
$25
hash:csdn:article:by:2360
$9
likeCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2360
$10
authorLink
$28
http://my.csdn.net/lulei9876
*4
$4
HSET
$25
hash:csdn:article:by:2360
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2361
$2
id
$4
2361
*4
$4
HSET
$25
hash:csdn:article:by:2361
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2361
$3
url
$53
http://blog.csdn.net/tinylab/article/details/45330757
*4
$4
HSET
$25
hash:csdn:article:by:2361
$5
title
$51
［授权发表］Linux内核Section Mismatch详解
*4
$4
HSET
$25
hash:csdn:article:by:2361
$4
desc
$251
Section Mismatch是非常严重的Bug，可能会导致无法预测的内存访问问题，建议谨慎对待，如果添加的驱动中有类似Warning，可能需要密切关注并解决掉。本文就该问题的检测、原因、解决思路以...
*4
$4
HSET
$25
hash:csdn:article:by:2361
$9
readCount
$3
856
*4
$4
HSET
$25
hash:csdn:article:by:2361
$14
articleContent
$41
csdn/linux/1_0_1_2_1504264662.113645.html
*4
$4
HSET
$25
hash:csdn:article:by:2361
$4
date
$16
2015-04-28 08:12
*4
$4
HSET
$25
hash:csdn:article:by:2361
$6
author
$8
hifalcon
*4
$4
HSET
$25
hash:csdn:article:by:2361
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2361
$9
labelList
$23
Linux,Mismatch,Section,
*4
$4
HSET
$25
hash:csdn:article:by:2361
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2361
$10
authorLink
$27
http://my.csdn.net/hifalcon
*4
$4
HSET
$25
hash:csdn:article:by:2361
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2362
$2
id
$4
2362
*4
$4
HSET
$25
hash:csdn:article:by:2362
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2362
$3
url
$53
http://blog.csdn.net/tinylab/article/details/45330795
*4
$4
HSET
$25
hash:csdn:article:by:2362
$5
title
$67
［授权发表］如何快速定位 Linux Panic 出错的代码行
*4
$4
HSET
$25
hash:csdn:article:by:2362
$4
desc
$238
内核调试中最常见的一个问题是：内核 Panic 后，如何快速定位到出错的代码行？就是这样一个常见的问题，面试过的大部分同学都未能很好地回答，这里希望能够做很彻底地解答。
*4
$4
HSET
$25
hash:csdn:article:by:2362
$9
readCount
$3
776
*4
$4
HSET
$25
hash:csdn:article:by:2362
$14
articleContent
$40
csdn/linux/1_0_1_1_1504264663.11105.html
*4
$4
HSET
$25
hash:csdn:article:by:2362
$4
date
$16
2015-04-28 08:25
*4
$4
HSET
$25
hash:csdn:article:by:2362
$6
author
$8
hifalcon
*4
$4
HSET
$25
hash:csdn:article:by:2362
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2362
$9
labelList
$19
Linux,Panic,调试,
*4
$4
HSET
$25
hash:csdn:article:by:2362
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2362
$10
authorLink
$27
http://my.csdn.net/hifalcon
*4
$4
HSET
$25
hash:csdn:article:by:2362
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2363
$2
id
$4
2363
*4
$4
HSET
$25
hash:csdn:article:by:2363
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2363
$3
url
$59
http://blog.csdn.net/dlutbrucezhang/article/details/9159431
*4
$4
HSET
$25
hash:csdn:article:by:2363
$5
title
$44
Linux中link，unlink，close，fclose详解
*4
$4
HSET
$25
hash:csdn:article:by:2363
$4
desc
$241
unlink系统调用】   
    
功能描述： 
从文件系统中删除一个名称。如果名称是文件的最后一个连接，并且没有其它进程将文件打开，名称对应的文件会实际被删除。 
 
用法：  
#includ...
*4
$4
HSET
$25
hash:csdn:article:by:2363
$9
readCount
$4
6214
*4
$4
HSET
$25
hash:csdn:article:by:2363
$14
articleContent
$41
csdn/linux/1_1_2_0_1504264665.068039.html
*4
$4
HSET
$25
hash:csdn:article:by:2363
$4
date
$16
2013-06-24 10:44
*4
$4
HSET
$25
hash:csdn:article:by:2363
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2363
$12
commentCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2363
$9
labelList
$39
Linux,printf,shell,链接,文件操作,
*4
$4
HSET
$25
hash:csdn:article:by:2363
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2363
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2363
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2364
$2
id
$4
2364
*4
$4
HSET
$25
hash:csdn:article:by:2364
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2364
$3
url
$59
http://blog.csdn.net/dlutbrucezhang/article/details/9152529
*4
$4
HSET
$25
hash:csdn:article:by:2364
$5
title
$6
魔数
*4
$4
HSET
$25
hash:csdn:article:by:2364
$4
desc
$257
魔数（magic number），即在编写程序时直接在程序中运用数字，而不是采用定义宏或是const变量的方式，图1是使用了魔数的一个示例程序。其中的64是指Msk的最大字节数。从这一程序中可以看出，...
*4
$4
HSET
$25
hash:csdn:article:by:2364
$9
readCount
$4
1247
*4
$4
HSET
$25
hash:csdn:article:by:2364
$14
articleContent
$41
csdn/linux/1_1_2_3_1504264666.292326.html
*4
$4
HSET
$25
hash:csdn:article:by:2364
$4
date
$16
2013-06-22 21:13
*4
$4
HSET
$25
hash:csdn:article:by:2364
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2364
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2364
$9
labelList
$40
宏,注释,命名空间,iostream,魔数,
*4
$4
HSET
$25
hash:csdn:article:by:2364
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2364
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2364
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2365
$2
id
$4
2365
*4
$4
HSET
$25
hash:csdn:article:by:2365
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2365
$3
url
$59
http://blog.csdn.net/dlutbrucezhang/article/details/9140693
*4
$4
HSET
$25
hash:csdn:article:by:2365
$5
title
$18
协处理器简介
*4
$4
HSET
$25
hash:csdn:article:by:2365
$4
desc
$194
原文出自：http://blog.csdn.net/liukun321/article/details/5548877协处理器 　　一种芯片，用于减轻系统微处理器的特定处理任务。例如，数学协处理器可以...
*4
$4
HSET
$25
hash:csdn:article:by:2365
$9
readCount
$3
910
*4
$4
HSET
$25
hash:csdn:article:by:2365
$14
articleContent
$41
csdn/linux/1_1_2_5_1504264667.181746.html
*4
$4
HSET
$25
hash:csdn:article:by:2365
$4
date
$16
2013-06-20 20:56
*4
$4
HSET
$25
hash:csdn:article:by:2365
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2365
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2365
$9
labelList
$35
处理器,ARM,扩展,存储,编程,
*4
$4
HSET
$25
hash:csdn:article:by:2365
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2365
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2365
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2366
$2
id
$4
2366
*4
$4
HSET
$25
hash:csdn:article:by:2366
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2366
$3
url
$59
http://blog.csdn.net/dlutbrucezhang/article/details/9140279
*4
$4
HSET
$25
hash:csdn:article:by:2366
$5
title
$32
linux进程管理之进程创建
*4
$4
HSET
$25
hash:csdn:article:by:2366
$4
desc
$271
所谓进程就是程序执行时的一个实例. 它是现代操作系统中一个很重要的抽象,我们从进程的生命周期:创建,执行,消亡来分析一下Linux上的进程管理实现.一:前言进程管理结构;在内核中,每一个进程对应一个t...
*4
$4
HSET
$25
hash:csdn:article:by:2366
$9
readCount
$4
1127
*4
$4
HSET
$25
hash:csdn:article:by:2366
$14
articleContent
$41
csdn/linux/1_1_2_6_1504264668.363066.html
*4
$4
HSET
$25
hash:csdn:article:by:2366
$4
date
$16
2013-06-20 20:21
*4
$4
HSET
$25
hash:csdn:article:by:2366
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2366
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2366
$9
labelList
$30
Linux,管理,MM,struct,进程,
*4
$4
HSET
$25
hash:csdn:article:by:2366
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2366
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2366
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2367
$2
id
$4
2367
*4
$4
HSET
$25
hash:csdn:article:by:2367
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2367
$3
url
$59
http://blog.csdn.net/dlutbrucezhang/article/details/9089371
*4
$4
HSET
$25
hash:csdn:article:by:2367
$5
title
$27
搭建Linux0.11系统环境
*4
$4
HSET
$25
hash:csdn:article:by:2367
$4
desc
$180
学习Linux0.11内核源代码，我们需要搭建一个基于Linux0.11的操作平台：                    1） boch仿真器：可以从http://bochs.sourceforge...
*4
$4
HSET
$25
hash:csdn:article:by:2367
$9
readCount
$4
2816
*4
$4
HSET
$25
hash:csdn:article:by:2367
$14
articleContent
$41
csdn/linux/1_1_2_12_1504264669.18624.html
*4
$4
HSET
$25
hash:csdn:article:by:2367
$4
date
$16
2013-06-13 20:08
*4
$4
HSET
$25
hash:csdn:article:by:2367
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2367
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2367
$9
labelList
$43
Linux,内核,文件系统,扩展,源代码,
*4
$4
HSET
$25
hash:csdn:article:by:2367
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2367
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2367
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2368
$2
id
$4
2368
*4
$4
HSET
$25
hash:csdn:article:by:2368
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2368
$3
url
$59
http://blog.csdn.net/dlutbrucezhang/article/details/9107811
*4
$4
HSET
$25
hash:csdn:article:by:2368
$5
title
$31
Linux0.11 中对地址的管理
*4
$4
HSET
$25
hash:csdn:article:by:2368
$4
desc
$264
逻辑地址（Logical Address） 是指由程序产生的与段相关的偏移地址部分。例如，你在进行C语言指针编程中，可以读取指针变量本身值(&操作)，实际上这个值就是逻辑地址，它是相对于你当前进程数据...
*4
$4
HSET
$25
hash:csdn:article:by:2368
$9
readCount
$4
1039
*4
$4
HSET
$25
hash:csdn:article:by:2368
$14
articleContent
$42
csdn/linux/1_1_2_10_1504264670.323208.html
*4
$4
HSET
$25
hash:csdn:article:by:2368
$4
date
$16
2013-06-18 08:43
*4
$4
HSET
$25
hash:csdn:article:by:2368
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2368
$12
commentCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2368
$9
labelList
$32
Linux,内存,X,处理器,内核,
*4
$4
HSET
$25
hash:csdn:article:by:2368
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2368
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2368
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2369
$2
id
$4
2369
*4
$4
HSET
$25
hash:csdn:article:by:2369
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2369
$3
url
$59
http://blog.csdn.net/dlutbrucezhang/article/details/9150455
*4
$4
HSET
$25
hash:csdn:article:by:2369
$5
title
$28
Linux系统的shell是什么
*4
$4
HSET
$25
hash:csdn:article:by:2369
$4
desc
$217
shell是用户和Linux操作系统之间的接口。Linux中有多种shell，其中缺省使用的是Bash。本章讲述了shell的工作原理，shell的种类，shell的一般操作及Bash的特性。　什么是...
*4
$4
HSET
$25
hash:csdn:article:by:2369
$9
readCount
$4
1190
*4
$4
HSET
$25
hash:csdn:article:by:2369
$14
articleContent
$41
csdn/linux/1_1_2_4_1504264671.327805.html
*4
$4
HSET
$25
hash:csdn:article:by:2369
$4
date
$16
2013-06-22 13:37
*4
$4
HSET
$25
hash:csdn:article:by:2369
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2369
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2369
$9
labelList
$34
Linux,shell,编程语言,应用,C,
*4
$4
HSET
$25
hash:csdn:article:by:2369
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2369
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2369
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2370
$2
id
$4
2370
*4
$4
HSET
$25
hash:csdn:article:by:2370
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2370
$3
url
$59
http://blog.csdn.net/dlutbrucezhang/article/details/9157087
*4
$4
HSET
$25
hash:csdn:article:by:2370
$5
title
$11
理解inode
*4
$4
HSET
$25
hash:csdn:article:by:2370
$4
desc
$251
一、inode是什么？理解inode，要从文件储存说起。文件储存在硬盘上，硬盘的最小存储单位叫做"扇区"（Sector）。每个扇区储存512字节（相当于0.5KB）。操作系统读取硬盘的时候，不会一个个...
*4
$4
HSET
$25
hash:csdn:article:by:2370
$9
readCount
$4
1168
*4
$4
HSET
$25
hash:csdn:article:by:2370
$14
articleContent
$41
csdn/linux/1_1_2_1_1504264672.333265.html
*4
$4
HSET
$25
hash:csdn:article:by:2370
$4
date
$16
2013-06-23 21:16
*4
$4
HSET
$25
hash:csdn:article:by:2370
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2370
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2370
$9
labelList
$47
行业数据,操作系统,软件,存储,硬盘,
*4
$4
HSET
$25
hash:csdn:article:by:2370
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2370
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2370
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2371
$2
id
$4
2371
*4
$4
HSET
$25
hash:csdn:article:by:2371
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2371
$3
url
$59
http://blog.csdn.net/dlutbrucezhang/article/details/9156555
*4
$4
HSET
$25
hash:csdn:article:by:2371
$5
title
$53
linux中文件描述符fd和文件指针flip的理解
*4
$4
HSET
$25
hash:csdn:article:by:2371
$4
desc
$255
简单归纳：fd只是一个整数，在open时产生。起到一个索引的作用，进程通过PCB中的文件描述符表找到该fd所指向的文件指针filp。文件描述符的操作(如: open)返回的是一个文件描述符,内核会在每...
*4
$4
HSET
$25
hash:csdn:article:by:2371
$9
readCount
$4
1325
*4
$4
HSET
$25
hash:csdn:article:by:2371
$14
articleContent
$41
csdn/linux/1_1_2_2_1504264673.434668.html
*4
$4
HSET
$25
hash:csdn:article:by:2371
$4
date
$16
2013-06-23 19:54
*4
$4
HSET
$25
hash:csdn:article:by:2371
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2371
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2371
$9
labelList
$37
Linux,指针,Structure,磁盘,内核,
*4
$4
HSET
$25
hash:csdn:article:by:2371
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2371
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2371
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2372
$2
id
$4
2372
*4
$4
HSET
$25
hash:csdn:article:by:2372
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2372
$3
url
$59
http://blog.csdn.net/dlutbrucezhang/article/details/9106517
*4
$4
HSET
$25
hash:csdn:article:by:2372
$5
title
$42
对Linux0.11 中 进程0 和 进程1分析
*4
$4
HSET
$25
hash:csdn:article:by:2372
$4
desc
$297
1. 背景进程的创建过程无疑是最重要的操作系统处理过程之一，很多书和教材上说的最多的还是一些原理的部分，忽略了很多细节。比如，子进程复制父进程所拥有的资源，或者子进程和父进程共享相同的物理页面，拥有自...
*4
$4
HSET
$25
hash:csdn:article:by:2372
$9
readCount
$4
1885
*4
$4
HSET
$25
hash:csdn:article:by:2372
$14
articleContent
$42
csdn/linux/1_1_2_11_1504264674.559105.html
*4
$4
HSET
$25
hash:csdn:article:by:2372
$4
date
$16
2013-06-18 08:43
*4
$4
HSET
$25
hash:csdn:article:by:2372
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2372
$12
commentCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2372
$9
labelList
$43
操作系统,Linux,struct,处理器,进程,
*4
$4
HSET
$25
hash:csdn:article:by:2372
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2372
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2372
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2373
$2
id
$4
2373
*4
$4
HSET
$25
hash:csdn:article:by:2373
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2373
$3
url
$59
http://blog.csdn.net/dlutbrucezhang/article/details/9137373
*4
$4
HSET
$25
hash:csdn:article:by:2373
$5
title
$56
C 语言内存区域分配（进程的各个段）详解
*4
$4
HSET
$25
hash:csdn:article:by:2373
$4
desc
$290
C语言可执行代码结构 名称内容代码段 可执行代码、字符串常量数据段 已初始化全局变量、已初始化全局静态变量、局部静态变量、常量数据BSS段 未初始化全局变量，未初始化全局静态变量栈 局部变量、函数参数...
*4
$4
HSET
$25
hash:csdn:article:by:2373
$9
readCount
$4
2090
*4
$4
HSET
$25
hash:csdn:article:by:2373
$14
articleContent
$41
csdn/linux/1_1_2_7_1504264675.521026.html
*4
$4
HSET
$25
hash:csdn:article:by:2373
$4
date
$16
2013-06-20 15:14
*4
$4
HSET
$25
hash:csdn:article:by:2373
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2373
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2373
$9
labelList
$37
编程语言,C,内存,行业数据,X,
*4
$4
HSET
$25
hash:csdn:article:by:2373
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2373
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2373
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2374
$2
id
$4
2374
*4
$4
HSET
$25
hash:csdn:article:by:2374
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2374
$3
url
$59
http://blog.csdn.net/dlutbrucezhang/article/details/9117483
*4
$4
HSET
$25
hash:csdn:article:by:2374
$5
title
$47
Linux进程状态解析之R、S、D、T、Z、X
*4
$4
HSET
$25
hash:csdn:article:by:2374
$4
desc
$173
文章转载自：http://hi.baidu.com/shining_pc/item/21abcb32a4d2d484c3cf2950Linux是一个多用户，多任务的系统，可以同时运行多个用户的多个程序...
*4
$4
HSET
$25
hash:csdn:article:by:2374
$9
readCount
$4
1082
*4
$4
HSET
$25
hash:csdn:article:by:2374
$14
articleContent
$41
csdn/linux/1_1_2_9_1504264676.623031.html
*4
$4
HSET
$25
hash:csdn:article:by:2374
$4
date
$16
2013-06-18 09:36
*4
$4
HSET
$25
hash:csdn:article:by:2374
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2374
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2374
$9
labelList
$40
Linux,处理器,内核,struct,多线程,
*4
$4
HSET
$25
hash:csdn:article:by:2374
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2374
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2374
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2375
$2
id
$4
2375
*4
$4
HSET
$25
hash:csdn:article:by:2375
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2375
$3
url
$59
http://blog.csdn.net/dlutbrucezhang/article/details/9151099
*4
$4
HSET
$25
hash:csdn:article:by:2375
$5
title
$22
实例分析exec函数
*4
$4
HSET
$25
hash:csdn:article:by:2375
$4
desc
$285
fork()函数通过系统调用创建一个与原来进程(父进程)几乎完全相同的进程(子进程是父进程的副本，它将获得父进程数据空间、堆、栈等资源的副本。注意，子进程持有的是上述存储空间的“副本”，这意味着父子进...
*4
$4
HSET
$25
hash:csdn:article:by:2375
$9
readCount
$4
1032
*4
$4
HSET
$25
hash:csdn:article:by:2375
$14
articleContent
$40
csdn/linux/1_1_2_8_1504264677.60306.html
*4
$4
HSET
$25
hash:csdn:article:by:2375
$4
date
$16
2013-06-22 15:41
*4
$4
HSET
$25
hash:csdn:article:by:2375
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2375
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2375
$9
labelList
$35
实例,指针,Path,Makefile,存储,
*4
$4
HSET
$25
hash:csdn:article:by:2375
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2375
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2375
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2376
$2
id
$4
2376
*4
$4
HSET
$25
hash:csdn:article:by:2376
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2376
$3
url
$56
http://blog.csdn.net/ljy1988123/article/details/47983095
*4
$4
HSET
$25
hash:csdn:article:by:2376
$5
title
$50
Linux内核工程导论——内存管理（一）
*4
$4
HSET
$25
hash:csdn:article:by:2376
$4
desc
$259
Linux内存管理
概要
物理地址管理
很多小型操作系统，例如eCos，vxworks等嵌入式系统，程序中所采用的地址就是实际的物理地址。这里所说的物理地址是CPU所能见到的地址，至于这个地址如何映射...
*4
$4
HSET
$25
hash:csdn:article:by:2376
$9
readCount
$4
1729
*4
$4
HSET
$25
hash:csdn:article:by:2376
$14
articleContent
$41
csdn/linux/1_0_1_0_1504264681.929859.html
*4
$4
HSET
$25
hash:csdn:article:by:2376
$4
date
$16
2015-08-25 20:43
*4
$4
HSET
$25
hash:csdn:article:by:2376
$6
author
$10
ljy1988123
*4
$4
HSET
$25
hash:csdn:article:by:2376
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2376
$9
labelList
$20
内核,linux kernel,
*4
$4
HSET
$25
hash:csdn:article:by:2376
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2376
$10
authorLink
$29
http://my.csdn.net/ljy1988123
*4
$4
HSET
$25
hash:csdn:article:by:2376
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2377
$2
id
$4
2377
*4
$4
HSET
$25
hash:csdn:article:by:2377
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2377
$3
url
$56
http://blog.csdn.net/ljy1988123/article/details/47983195
*4
$4
HSET
$25
hash:csdn:article:by:2377
$5
title
$50
Linux内核工程导论——内存管理（二）
*4
$4
HSET
$25
hash:csdn:article:by:2377
$4
desc
$281
页面回收算法（PFRA）
请求调页机制，只要用户态进程继续执行，他们就能获得页框，然而，请求调页没有办法强制进程释放不再使用的页框。因此，迟早所有空闲内存将被分配给进程和高速缓存，Linux内核的页...
*4
$4
HSET
$25
hash:csdn:article:by:2377
$9
readCount
$4
1935
*4
$4
HSET
$25
hash:csdn:article:by:2377
$14
articleContent
$41
csdn/linux/1_0_1_1_1504264682.933388.html
*4
$4
HSET
$25
hash:csdn:article:by:2377
$4
date
$16
2015-08-25 20:49
*4
$4
HSET
$25
hash:csdn:article:by:2377
$6
author
$10
ljy1988123
*4
$4
HSET
$25
hash:csdn:article:by:2377
$12
commentCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2377
$9
labelList
$20
内核,linux kernel,
*4
$4
HSET
$25
hash:csdn:article:by:2377
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2377
$10
authorLink
$29
http://my.csdn.net/ljy1988123
*4
$4
HSET
$25
hash:csdn:article:by:2377
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2378
$2
id
$4
2378
*4
$4
HSET
$25
hash:csdn:article:by:2378
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2378
$3
url
$56
http://blog.csdn.net/ljy1988123/article/details/48064727
*4
$4
HSET
$25
hash:csdn:article:by:2378
$5
title
$53
Linux内核工程导论——用户空间设备管理
*4
$4
HSET
$25
hash:csdn:article:by:2378
$4
desc
$277
用户空间设备管理
         用户空间所能见到的所有设备都放在/dev目录下（当然，只是一个目录，是可以变化的），文件系统所在的分区被当成一个单独的设备也放在该目录下。以前的2.4版本的曾经出现...
*4
$4
HSET
$25
hash:csdn:article:by:2378
$9
readCount
$4
1088
*4
$4
HSET
$25
hash:csdn:article:by:2378
$14
articleContent
$41
csdn/linux/1_0_1_8_1504264684.151387.html
*4
$4
HSET
$25
hash:csdn:article:by:2378
$4
date
$16
2015-08-28 23:02
*4
$4
HSET
$25
hash:csdn:article:by:2378
$6
author
$10
ljy1988123
*4
$4
HSET
$25
hash:csdn:article:by:2378
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2378
$9
labelList
$26
linux kernel,内核,Linux,
*4
$4
HSET
$25
hash:csdn:article:by:2378
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2378
$10
authorLink
$29
http://my.csdn.net/ljy1988123
*4
$4
HSET
$25
hash:csdn:article:by:2378
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2379
$2
id
$4
2379
*4
$4
HSET
$25
hash:csdn:article:by:2379
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2379
$3
url
$56
http://blog.csdn.net/ljy1988123/article/details/48380845
*4
$4
HSET
$25
hash:csdn:article:by:2379
$5
title
$44
Linux内核工程导论——网络：Socket
*4
$4
HSET
$25
hash:csdn:article:by:2379
$4
desc
$251
网络架构
         我们通常见到的网络是以太网络和无线网络，但是linux是个大而全的操作系统，其支持的无线网络很多。主要有：业余无线电、CAN网络、红外线（IrDA）、蓝牙（Bluetoo...
*4
$4
HSET
$25
hash:csdn:article:by:2379
$9
readCount
$3
787
*4
$4
HSET
$25
hash:csdn:article:by:2379
$14
articleContent
$41
csdn/linux/1_0_1_9_1504264685.005995.html
*4
$4
HSET
$25
hash:csdn:article:by:2379
$4
date
$16
2015-09-11 22:26
*4
$4
HSET
$25
hash:csdn:article:by:2379
$6
author
$10
ljy1988123
*4
$4
HSET
$25
hash:csdn:article:by:2379
$12
commentCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2379
$9
labelList
$40
linux kernel,内核,Linux,网络,socket,
*4
$4
HSET
$25
hash:csdn:article:by:2379
$9
likeCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2379
$10
authorLink
$29
http://my.csdn.net/ljy1988123
*4
$4
HSET
$25
hash:csdn:article:by:2379
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2380
$2
id
$4
2380
*4
$4
HSET
$25
hash:csdn:article:by:2380
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2380
$3
url
$56
http://blog.csdn.net/ljy1988123/article/details/48977953
*4
$4
HSET
$25
hash:csdn:article:by:2380
$5
title
$50
Linux内核工程导论——网络：网络特性
*4
$4
HSET
$25
hash:csdn:article:by:2380
$4
desc
$131
网络特性
       QoS and/orfair queueing
IP层以下
802.1d以太网桥
802.1Q/802.1ad VLAN Support
ANSI/IEEE 802.2 LLC...
*4
$4
HSET
$25
hash:csdn:article:by:2380
$9
readCount
$3
684
*4
$4
HSET
$25
hash:csdn:article:by:2380
$14
articleContent
$42
csdn/linux/1_0_1_17_1504264687.147456.html
*4
$4
HSET
$25
hash:csdn:article:by:2380
$4
date
$16
2015-10-08 20:09
*4
$4
HSET
$25
hash:csdn:article:by:2380
$6
author
$10
ljy1988123
*4
$4
HSET
$25
hash:csdn:article:by:2380
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2380
$9
labelList
$26
Linux,linux kernel,网络,
*4
$4
HSET
$25
hash:csdn:article:by:2380
$9
likeCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2380
$10
authorLink
$29
http://my.csdn.net/ljy1988123
*4
$4
HSET
$25
hash:csdn:article:by:2380
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2381
$2
id
$4
2381
*4
$4
HSET
$25
hash:csdn:article:by:2381
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2381
$3
url
$56
http://blog.csdn.net/ljy1988123/article/details/48975433
*4
$4
HSET
$25
hash:csdn:article:by:2381
$5
title
$59
Linux内核工程导论——进程：用户进程间通信
*4
$4
HSET
$25
hash:csdn:article:by:2381
$4
desc
$135
应用程序间通信
writev/readv
System V IPC
管道
fifo
dbus
unix domain
信号
POSIX IPC
mailbox
         模...
*4
$4
HSET
$25
hash:csdn:article:by:2381
$9
readCount
$3
545
*4
$4
HSET
$25
hash:csdn:article:by:2381
$14
articleContent
$42
csdn/linux/1_0_1_16_1504264687.947007.html
*4
$4
HSET
$25
hash:csdn:article:by:2381
$4
date
$16
2015-10-08 17:32
*4
$4
HSET
$25
hash:csdn:article:by:2381
$6
author
$10
ljy1988123
*4
$4
HSET
$25
hash:csdn:article:by:2381
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2381
$9
labelList
$26
linux kernel,Linux,内核,
*4
$4
HSET
$25
hash:csdn:article:by:2381
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2381
$10
authorLink
$29
http://my.csdn.net/ljy1988123
*4
$4
HSET
$25
hash:csdn:article:by:2381
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2382
$2
id
$4
2382
*4
$4
HSET
$25
hash:csdn:article:by:2382
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2382
$3
url
$56
http://blog.csdn.net/ljy1988123/article/details/48975203
*4
$4
HSET
$25
hash:csdn:article:by:2382
$5
title
$74
Linux内核工程导论——进程：内核与用户空间的进程通信
*4
$4
HSET
$25
hash:csdn:article:by:2382
$4
desc
$204
内核与用户程序通信
netlink
用户端使用

    netlink被纳入socket操作的框架中，确切的说是在socket框架中设计的netlink通信接口。用户态创建、销毁socket...
*4
$4
HSET
$25
hash:csdn:article:by:2382
$9
readCount
$3
640
*4
$4
HSET
$25
hash:csdn:article:by:2382
$14
articleContent
$42
csdn/linux/1_0_1_15_1504264689.022733.html
*4
$4
HSET
$25
hash:csdn:article:by:2382
$4
date
$16
2015-10-08 17:30
*4
$4
HSET
$25
hash:csdn:article:by:2382
$6
author
$10
ljy1988123
*4
$4
HSET
$25
hash:csdn:article:by:2382
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2382
$9
labelList
$33
Linux,linux kernel,内核,socket,
*4
$4
HSET
$25
hash:csdn:article:by:2382
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2382
$10
authorLink
$29
http://my.csdn.net/ljy1988123
*4
$4
HSET
$25
hash:csdn:article:by:2382
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2383
$2
id
$4
2383
*4
$4
HSET
$25
hash:csdn:article:by:2383
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2383
$3
url
$56
http://blog.csdn.net/ljy1988123/article/details/48064233
*4
$4
HSET
$25
hash:csdn:article:by:2383
$5
title
$41
Linux内核工程导论——基础架构
*4
$4
HSET
$25
hash:csdn:article:by:2383
$4
desc
$261
基础功能元素
workqueue
         linux下的工作队列时一种将工作推后执行的方式，其可以被睡眠、调度，与内核线程表现基本一致，但又比内核线程使用简单，一般用来处理任务内容比较动态的...
*4
$4
HSET
$25
hash:csdn:article:by:2383
$9
readCount
$4
1989
*4
$4
HSET
$25
hash:csdn:article:by:2383
$14
articleContent
$41
csdn/linux/1_0_1_6_1504264690.030737.html
*4
$4
HSET
$25
hash:csdn:article:by:2383
$4
date
$16
2015-08-28 22:44
*4
$4
HSET
$25
hash:csdn:article:by:2383
$6
author
$10
ljy1988123
*4
$4
HSET
$25
hash:csdn:article:by:2383
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2383
$9
labelList
$26
linux kernel,内核,Linux,
*4
$4
HSET
$25
hash:csdn:article:by:2383
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2383
$10
authorLink
$29
http://my.csdn.net/ljy1988123
*4
$4
HSET
$25
hash:csdn:article:by:2383
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2384
$2
id
$4
2384
*4
$4
HSET
$25
hash:csdn:article:by:2384
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2384
$3
url
$56
http://blog.csdn.net/ljy1988123/article/details/48064267
*4
$4
HSET
$25
hash:csdn:article:by:2384
$5
title
$35
Linux内核工程导论——进程
*4
$4
HSET
$25
hash:csdn:article:by:2384
$4
desc
$267
进程
进程调度
概要
         linux是个多进程的环境，不但用户空间可以有多个进程，而且内核内部也可以有内核进程。linux内核中线程与进程没有区别，因此叫线程和进程都是一样的。调度器调度...
*4
$4
HSET
$25
hash:csdn:article:by:2384
$9
readCount
$4
1487
*4
$4
HSET
$25
hash:csdn:article:by:2384
$14
articleContent
$40
csdn/linux/1_0_1_7_1504264691.14261.html
*4
$4
HSET
$25
hash:csdn:article:by:2384
$4
date
$16
2015-08-28 22:46
*4
$4
HSET
$25
hash:csdn:article:by:2384
$6
author
$10
ljy1988123
*4
$4
HSET
$25
hash:csdn:article:by:2384
$12
commentCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2384
$9
labelList
$26
linux kernel,内核,Linux,
*4
$4
HSET
$25
hash:csdn:article:by:2384
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2384
$10
authorLink
$29
http://my.csdn.net/ljy1988123
*4
$4
HSET
$25
hash:csdn:article:by:2384
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2385
$2
id
$4
2385
*4
$4
HSET
$25
hash:csdn:article:by:2385
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2385
$3
url
$56
http://blog.csdn.net/ljy1988123/article/details/48526087
*4
$4
HSET
$25
hash:csdn:article:by:2385
$5
title
$40
Linux内核工程导论——网络：IP
*4
$4
HSET
$25
hash:csdn:article:by:2385
$4
desc
$255
TCP/IP网络
IP
         TCP/IP是目前通用性最高的网络系统，本来各个硬件体系大都会定义自己的通信协议，并且以太网上也是曾经存在很多通信协议（例如IPX），但是随着产业的发展，所有...
*4
$4
HSET
$25
hash:csdn:article:by:2385
$9
readCount
$3
734
*4
$4
HSET
$25
hash:csdn:article:by:2385
$14
articleContent
$42
csdn/linux/1_0_1_13_1504264692.099775.html
*4
$4
HSET
$25
hash:csdn:article:by:2385
$4
date
$16
2015-09-17 19:09
*4
$4
HSET
$25
hash:csdn:article:by:2385
$6
author
$10
ljy1988123
*4
$4
HSET
$25
hash:csdn:article:by:2385
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2385
$9
labelList
$33
Linux,linux kernel,内核,网络,
*4
$4
HSET
$25
hash:csdn:article:by:2385
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2385
$10
authorLink
$29
http://my.csdn.net/ljy1988123
*4
$4
HSET
$25
hash:csdn:article:by:2385
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2386
$2
id
$4
2386
*4
$4
HSET
$25
hash:csdn:article:by:2386
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2386
$3
url
$56
http://blog.csdn.net/ljy1988123/article/details/48978041
*4
$4
HSET
$25
hash:csdn:article:by:2386
$5
title
$49
Linux内核工程导论——网络：IP：隧道
*4
$4
HSET
$25
hash:csdn:article:by:2386
$4
desc
$253
Linux中IP隧道
为什么需要IP隧道？
没有接触过这个概念的人自然提出这样的疑问。实际上概念最初的提出很简单，为了在TCP/IP网络中传输其他协议的数据包。设想IPX协议或 X.25封装的数据包如...
*4
$4
HSET
$25
hash:csdn:article:by:2386
$9
readCount
$3
957
*4
$4
HSET
$25
hash:csdn:article:by:2386
$14
articleContent
$42
csdn/linux/1_0_1_18_1504264693.149691.html
*4
$4
HSET
$25
hash:csdn:article:by:2386
$4
date
$16
2015-10-08 20:15
*4
$4
HSET
$25
hash:csdn:article:by:2386
$6
author
$10
ljy1988123
*4
$4
HSET
$25
hash:csdn:article:by:2386
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2386
$9
labelList
$33
Linux,linux kernel,内核,网络,
*4
$4
HSET
$25
hash:csdn:article:by:2386
$9
likeCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2386
$10
authorLink
$29
http://my.csdn.net/ljy1988123
*4
$4
HSET
$25
hash:csdn:article:by:2386
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2387
$2
id
$4
2387
*4
$4
HSET
$25
hash:csdn:article:by:2387
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2387
$3
url
$56
http://blog.csdn.net/ljy1988123/article/details/48477287
*4
$4
HSET
$25
hash:csdn:article:by:2387
$5
title
$54
Linux内核工程导论——存储：SCSI、ATA与SAS
*4
$4
HSET
$25
hash:csdn:article:by:2387
$4
desc
$207
SCSI、ATA与T10的SAS
         1981年SCSI产生。后一致与ATA并行竞争发展。例如串行的SATA的出现就导致了串行的SCSI：SAS的出现。SCSI目前的最新标准是T10，而...
*4
$4
HSET
$25
hash:csdn:article:by:2387
$9
readCount
$4
2283
*4
$4
HSET
$25
hash:csdn:article:by:2387
$14
articleContent
$42
csdn/linux/1_0_1_11_1504264694.257685.html
*4
$4
HSET
$25
hash:csdn:article:by:2387
$4
date
$16
2015-09-15 22:48
*4
$4
HSET
$25
hash:csdn:article:by:2387
$6
author
$10
ljy1988123
*4
$4
HSET
$25
hash:csdn:article:by:2387
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2387
$9
labelList
$30
linux kernel,内核,Linux,sas,
*4
$4
HSET
$25
hash:csdn:article:by:2387
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2387
$10
authorLink
$29
http://my.csdn.net/ljy1988123
*4
$4
HSET
$25
hash:csdn:article:by:2387
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2388
$2
id
$4
2388
*4
$4
HSET
$25
hash:csdn:article:by:2388
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2388
$3
url
$56
http://blog.csdn.net/ljy1988123/article/details/47983273
*4
$4
HSET
$25
hash:csdn:article:by:2388
$5
title
$50
Linux内核工程导论——内存管理（三）
*4
$4
HSET
$25
hash:csdn:article:by:2388
$4
desc
$158
用户端内核内存参数调整
/proc/sys/vm/ （需要根据内核版本调整）
交换相关
swap_token_timeout
 Thisfile contains valid hold tim...
*4
$4
HSET
$25
hash:csdn:article:by:2388
$9
readCount
$4
1059
*4
$4
HSET
$25
hash:csdn:article:by:2388
$14
articleContent
$41
csdn/linux/1_0_1_2_1504264695.205697.html
*4
$4
HSET
$25
hash:csdn:article:by:2388
$4
date
$16
2015-08-25 20:53
*4
$4
HSET
$25
hash:csdn:article:by:2388
$6
author
$10
ljy1988123
*4
$4
HSET
$25
hash:csdn:article:by:2388
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2388
$9
labelList
$19
linux kernel,Linux,
*4
$4
HSET
$25
hash:csdn:article:by:2388
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2388
$10
authorLink
$29
http://my.csdn.net/ljy1988123
*4
$4
HSET
$25
hash:csdn:article:by:2388
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2389
$2
id
$4
2389
*4
$4
HSET
$25
hash:csdn:article:by:2389
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2389
$3
url
$56
http://blog.csdn.net/liaodehong/article/details/48130299
*4
$4
HSET
$25
hash:csdn:article:by:2389
$5
title
$24
spring入门实例详解
*4
$4
HSET
$25
hash:csdn:article:by:2389
$4
desc
$261
spring框架在我们的开发中用到的很多,前面几篇博客也理解了一下spring的基本概念，现在准备写一个spring框架的入门实例，以一个登陆认证签到模块为例子；
实例说明：
登陆签到模块其实很简单，...
*4
$4
HSET
$25
hash:csdn:article:by:2389
$9
readCount
$4
7996
*4
$4
HSET
$25
hash:csdn:article:by:2389
$14
articleContent
$41
csdn/java/1_2_1_17_1504264696.025961.html
*4
$4
HSET
$25
hash:csdn:article:by:2389
$4
date
$16
2015-09-06 17:14
*4
$4
HSET
$25
hash:csdn:article:by:2389
$6
author
$10
liaodehong
*4
$4
HSET
$25
hash:csdn:article:by:2389
$12
commentCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2389
$9
labelList
$25
spring,springjdbc,登陆,
*4
$4
HSET
$25
hash:csdn:article:by:2389
$9
likeCount
$2
11
*4
$4
HSET
$25
hash:csdn:article:by:2389
$10
authorLink
$29
http://my.csdn.net/liaodehong
*4
$4
HSET
$25
hash:csdn:article:by:2389
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2390
$2
id
$4
2390
*4
$4
HSET
$25
hash:csdn:article:by:2390
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2390
$3
url
$56
http://blog.csdn.net/ljy1988123/article/details/48526185
*4
$4
HSET
$25
hash:csdn:article:by:2390
$5
title
$62
Linux内核工程导论——网络：服务质量与安全性
*4
$4
HSET
$25
hash:csdn:article:by:2390
$4
desc
$273
TCP

TCP希望达成数据按序的，无损失的传输。

只要有TCP这个协议的需求，就有其带来的问题。其问题是，既然要保证按序到达和完全到达，如何保证？不但要保证，还要保证速度，又如何设计机制？最终TC...
*4
$4
HSET
$25
hash:csdn:article:by:2390
$9
readCount
$3
656
*4
$4
HSET
$25
hash:csdn:article:by:2390
$14
articleContent
$42
csdn/linux/1_0_1_14_1504264698.433545.html
*4
$4
HSET
$25
hash:csdn:article:by:2390
$4
date
$16
2015-09-17 19:16
*4
$4
HSET
$25
hash:csdn:article:by:2390
$6
author
$10
ljy1988123
*4
$4
HSET
$25
hash:csdn:article:by:2390
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2390
$9
labelList
$37
Linux,linux kernel,内核,网络,tcp,
*4
$4
HSET
$25
hash:csdn:article:by:2390
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2390
$10
authorLink
$29
http://my.csdn.net/ljy1988123
*4
$4
HSET
$25
hash:csdn:article:by:2390
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2391
$2
id
$4
2391
*4
$4
HSET
$25
hash:csdn:article:by:2391
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2391
$3
url
$56
http://blog.csdn.net/liaodehong/article/details/52634911
*4
$4
HSET
$25
hash:csdn:article:by:2391
$5
title
$31
SSM整合+Dubbo+zookeeper-3.4.6
*4
$4
HSET
$25
hash:csdn:article:by:2391
$4
desc
$253
最近刚好有点时间，特意来整合一下项目，以后会陆续把前端框架和一些组件也给整合进去，今天就先来整合一下SSM+mysql+dubbo+zookeeper来做一个用户列表功能。关于理论性的知识，大家可以自...
*4
$4
HSET
$25
hash:csdn:article:by:2391
$9
readCount
$4
5057
*4
$4
HSET
$25
hash:csdn:article:by:2391
$14
articleContent
$40
csdn/java/1_2_1_10_1504264699.23045.html
*4
$4
HSET
$25
hash:csdn:article:by:2391
$4
date
$16
2016-09-23 16:07
*4
$4
HSET
$25
hash:csdn:article:by:2391
$6
author
$10
liaodehong
*4
$4
HSET
$25
hash:csdn:article:by:2391
$12
commentCount
$1
5
*4
$4
HSET
$25
hash:csdn:article:by:2391
$9
labelList
$27
dubbo,mysql,web开发,java,
*4
$4
HSET
$25
hash:csdn:article:by:2391
$9
likeCount
$1
5
*4
$4
HSET
$25
hash:csdn:article:by:2391
$10
authorLink
$29
http://my.csdn.net/liaodehong
*4
$4
HSET
$25
hash:csdn:article:by:2391
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2392
$2
id
$4
2392
*4
$4
HSET
$25
hash:csdn:article:by:2392
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2392
$3
url
$56
http://blog.csdn.net/ljy1988123/article/details/48477497
*4
$4
HSET
$25
hash:csdn:article:by:2392
$5
title
$46
Linux内核工程导论——总线：Platform
*4
$4
HSET
$25
hash:csdn:article:by:2392
$4
desc
$243
Platform总线
         PCI总线只是一种USB挂载的总线选择。USB总线虽然是慢速总线，需要挂载在较快的总线上作为缓存，但也有例外的情况，例如CPU中直接集成USB控制模块，这在很...
*4
$4
HSET
$25
hash:csdn:article:by:2392
$9
readCount
$3
599
*4
$4
HSET
$25
hash:csdn:article:by:2392
$14
articleContent
$42
csdn/linux/1_0_1_12_1504264700.444713.html
*4
$4
HSET
$25
hash:csdn:article:by:2392
$4
date
$16
2015-09-15 22:57
*4
$4
HSET
$25
hash:csdn:article:by:2392
$6
author
$10
ljy1988123
*4
$4
HSET
$25
hash:csdn:article:by:2392
$12
commentCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2392
$9
labelList
$33
linux kernel,Linux,内核,总线,
*4
$4
HSET
$25
hash:csdn:article:by:2392
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2392
$10
authorLink
$29
http://my.csdn.net/ljy1988123
*4
$4
HSET
$25
hash:csdn:article:by:2392
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2393
$2
id
$4
2393
*4
$4
HSET
$25
hash:csdn:article:by:2393
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2393
$3
url
$56
http://blog.csdn.net/ljy1988123/article/details/48380859
*4
$4
HSET
$25
hash:csdn:article:by:2393
$5
title
$50
Linux内核工程导论——网络：内核特性
*4
$4
HSET
$25
hash:csdn:article:by:2393
$4
desc
$255
TCP/IP网络
IP
         TCP/IP是目前通用性最高的网络系统，本来各个硬件体系大都会定义自己的通信协议，并且以太网上也是曾经存在很多通信协议（例如IPX），但是随着产业的发展，所有...
*4
$4
HSET
$25
hash:csdn:article:by:2393
$9
readCount
$3
665
*4
$4
HSET
$25
hash:csdn:article:by:2393
$14
articleContent
$42
csdn/linux/1_0_1_10_1504264701.522136.html
*4
$4
HSET
$25
hash:csdn:article:by:2393
$4
date
$16
2015-09-11 22:29
*4
$4
HSET
$25
hash:csdn:article:by:2393
$6
author
$10
ljy1988123
*4
$4
HSET
$25
hash:csdn:article:by:2393
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2393
$9
labelList
$33
linux kernel,内核,Linux,网络,
*4
$4
HSET
$25
hash:csdn:article:by:2393
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2393
$10
authorLink
$29
http://my.csdn.net/ljy1988123
*4
$4
HSET
$25
hash:csdn:article:by:2393
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2394
$2
id
$4
2394
*4
$4
HSET
$25
hash:csdn:article:by:2394
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2394
$3
url
$59
http://blog.csdn.net/dlutbrucezhang/article/details/9030327
*4
$4
HSET
$25
hash:csdn:article:by:2394
$5
title
$34
C语言中自动变量栈的分配
*4
$4
HSET
$25
hash:csdn:article:by:2394
$4
desc
$301
大家都知道在c语言的运行过程中，局部变量都是存放在栈中的，且是从高位到低位进行进行空间分配。先看一个程序。很明显，地址从高到低分配，和预计的一样。稍微修改一下，再运行。很明显，从低位到高位！！！明确一...
*4
$4
HSET
$25
hash:csdn:article:by:2394
$9
readCount
$4
1438
*4
$4
HSET
$25
hash:csdn:article:by:2394
$14
articleContent
$41
csdn/linux/1_1_2_0_1504264704.555163.html
*4
$4
HSET
$25
hash:csdn:article:by:2394
$4
date
$16
2013-06-05 14:10
*4
$4
HSET
$25
hash:csdn:article:by:2394
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2394
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2394
$9
labelList
$22
C,栈,X,Ubuntu,printf,
*4
$4
HSET
$25
hash:csdn:article:by:2394
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2394
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2394
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2395
$2
id
$4
2395
*4
$4
HSET
$25
hash:csdn:article:by:2395
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2395
$3
url
$59
http://blog.csdn.net/yaozhenguo2006/article/details/7696679
*4
$4
HSET
$25
hash:csdn:article:by:2395
$5
title
$36
Linux USB Gadget--各环节的整合
*4
$4
HSET
$25
hash:csdn:article:by:2395
$4
desc
$215
Linux USB Gadget软件结构一文中分析Linux USB Gadget软件分为三层。这三层其中两层是与硬件无关的，分别是Gadget功能驱动层，USB设备层。一层是与硬件相关的是UDC层。...
*4
$4
HSET
$25
hash:csdn:article:by:2395
$9
readCount
$5
13223
*4
$4
HSET
$25
hash:csdn:article:by:2395
$14
articleContent
$41
csdn/linux/1_1_1_0_1504264706.604644.html
*4
$4
HSET
$25
hash:csdn:article:by:2395
$4
date
$16
2012-06-27 16:55
*4
$4
HSET
$25
hash:csdn:article:by:2395
$6
author
$14
YAOZHENGUO2006
*4
$4
HSET
$25
hash:csdn:article:by:2395
$12
commentCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2395
$9
labelList
$53
linux,struct,function,string,descriptor,数据结构,
*4
$4
HSET
$25
hash:csdn:article:by:2395
$9
likeCount
$1
9
*4
$4
HSET
$25
hash:csdn:article:by:2395
$10
authorLink
$33
http://my.csdn.net/YAOZHENGUO2006
*4
$4
HSET
$25
hash:csdn:article:by:2395
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2396
$2
id
$4
2396
*4
$4
HSET
$25
hash:csdn:article:by:2396
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2396
$3
url
$59
http://blog.csdn.net/yaozhenguo2006/article/details/6824970
*4
$4
HSET
$25
hash:csdn:article:by:2396
$5
title
$28
linux RTC 驱动模型分析
*4
$4
HSET
$25
hash:csdn:article:by:2396
$4
desc
$201
linux RTC 驱动模型分析
        RTC(real time clock)实时时钟，主要作用是给Linux系统提供时间。RTC因为是电池供电的，所以掉电后时间不丢失。Linux内核把...
*4
$4
HSET
$25
hash:csdn:article:by:2396
$9
readCount
$5
21496
*4
$4
HSET
$25
hash:csdn:article:by:2396
$14
articleContent
$41
csdn/linux/1_1_1_3_1504264708.794233.html
*4
$4
HSET
$25
hash:csdn:article:by:2396
$4
date
$16
2011-09-27 10:28
*4
$4
HSET
$25
hash:csdn:article:by:2396
$6
author
$14
YAOZHENGUO2006
*4
$4
HSET
$25
hash:csdn:article:by:2396
$12
commentCount
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2396
$9
labelList
$43
linux,struct,linux内核,class,file,module,
*4
$4
HSET
$25
hash:csdn:article:by:2396
$9
likeCount
$2
11
*4
$4
HSET
$25
hash:csdn:article:by:2396
$10
authorLink
$33
http://my.csdn.net/YAOZHENGUO2006
*4
$4
HSET
$25
hash:csdn:article:by:2396
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2397
$2
id
$4
2397
*4
$4
HSET
$25
hash:csdn:article:by:2397
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2397
$3
url
$59
http://blog.csdn.net/yaozhenguo2006/article/details/6761183
*4
$4
HSET
$25
hash:csdn:article:by:2397
$5
title
$26
mini2440驱动分析之LED
*4
$4
HSET
$25
hash:csdn:article:by:2397
$4
desc
$241
mini2440驱动分析之LED
        看LDD3有一段时间了，里面的例程也大部分实践了一下。现在进入真正的驱动程序学习。从友善之臂mini2440提供的驱动程序开始，把一些基本的驱动程序...
*4
$4
HSET
$25
hash:csdn:article:by:2397
$9
readCount
$4
4254
*4
$4
HSET
$25
hash:csdn:article:by:2397
$14
articleContent
$41
csdn/linux/1_1_1_11_1504264709.82406.html
*4
$4
HSET
$25
hash:csdn:article:by:2397
$4
date
$16
2011-09-08 17:43
*4
$4
HSET
$25
hash:csdn:article:by:2397
$6
author
$14
YAOZHENGUO2006
*4
$4
HSET
$25
hash:csdn:article:by:2397
$12
commentCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2397
$9
labelList
$39
c,table,output,struct,cmd,数据结构,
*4
$4
HSET
$25
hash:csdn:article:by:2397
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2397
$10
authorLink
$33
http://my.csdn.net/YAOZHENGUO2006
*4
$4
HSET
$25
hash:csdn:article:by:2397
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2398
$2
id
$4
2398
*4
$4
HSET
$25
hash:csdn:article:by:2398
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2398
$3
url
$57
http://blog.csdn.net/renpengddxx/article/details/72517015
*4
$4
HSET
$25
hash:csdn:article:by:2398
$5
title
$28
php、java实现桥接模式
*4
$4
HSET
$25
hash:csdn:article:by:2398
$4
desc
$173
该模式主要目的在于解耦，将模块的粒度分隔的更细，便于需求的更改类图 
java实现public interface Implementor {
    public void doSomething(...
*4
$4
HSET
$25
hash:csdn:article:by:2398
$9
readCount
$3
434
*4
$4
HSET
$25
hash:csdn:article:by:2398
$14
articleContent
$40
csdn/java/1_0_1_0_1504264710.849243.html
*4
$4
HSET
$25
hash:csdn:article:by:2398
$4
date
$16
2017-05-19 09:23
*4
$4
HSET
$25
hash:csdn:article:by:2398
$6
author
$11
renpengddxx
*4
$4
HSET
$25
hash:csdn:article:by:2398
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2398
$9
labelList
$22
桥接模式,java,php,
*4
$4
HSET
$25
hash:csdn:article:by:2398
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2398
$10
authorLink
$30
http://my.csdn.net/renpengddxx
*4
$4
HSET
$25
hash:csdn:article:by:2398
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2399
$2
id
$4
2399
*4
$4
HSET
$25
hash:csdn:article:by:2399
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2399
$3
url
$57
http://blog.csdn.net/renpengddxx/article/details/65441742
*4
$4
HSET
$25
hash:csdn:article:by:2399
$5
title
$26
php,java实现代理模式
*4
$4
HSET
$25
hash:csdn:article:by:2399
$4
desc
$215
普通代理模式类似于装饰者模式，将真实的实现逻辑的对象包装起来，外界通过访问其代理来调用真是的逻辑代码类图 
java代码实现public interface Subject {    public v...
*4
$4
HSET
$25
hash:csdn:article:by:2399
$9
readCount
$3
103
*4
$4
HSET
$25
hash:csdn:article:by:2399
$14
articleContent
$41
csdn/java/1_0_1_15_1504264712.009188.html
*4
$4
HSET
$25
hash:csdn:article:by:2399
$4
date
$16
2017-03-23 11:46
*4
$4
HSET
$25
hash:csdn:article:by:2399
$6
author
$11
renpengddxx
*4
$4
HSET
$25
hash:csdn:article:by:2399
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2399
$9
labelList
$4
php,
*4
$4
HSET
$25
hash:csdn:article:by:2399
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2399
$10
authorLink
$30
http://my.csdn.net/renpengddxx
*4
$4
HSET
$25
hash:csdn:article:by:2399
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2400
$2
id
$4
2400
*4
$4
HSET
$25
hash:csdn:article:by:2400
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2400
$3
url
$57
http://blog.csdn.net/renpengddxx/article/details/64438307
*4
$4
HSET
$25
hash:csdn:article:by:2400
$5
title
$29
php,java实现建造者模式
*4
$4
HSET
$25
hash:csdn:article:by:2400
$4
desc
$303
很容易将建造者模式和工厂方法模式混淆，他们的区别是工厂方法模式侧重生产出相同的对象实例，而建造者模式强调的是对同一个对象实例的生产，不同的生产工艺（方法的执行顺序和对属性的赋值）将产生不同效果的对象类...
*4
$4
HSET
$25
hash:csdn:article:by:2400
$9
readCount
$2
93
*4
$4
HSET
$25
hash:csdn:article:by:2400
$14
articleContent
$40
csdn/java/1_0_1_16_1504264712.97503.html
*4
$4
HSET
$25
hash:csdn:article:by:2400
$4
date
$16
2017-03-21 09:54
*4
$4
HSET
$25
hash:csdn:article:by:2400
$6
author
$11
renpengddxx
*4
$4
HSET
$25
hash:csdn:article:by:2400
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2400
$9
labelList
$9
php,java,
*4
$4
HSET
$25
hash:csdn:article:by:2400
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2400
$10
authorLink
$30
http://my.csdn.net/renpengddxx
*4
$4
HSET
$25
hash:csdn:article:by:2400
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2401
$2
id
$4
2401
*4
$4
HSET
$25
hash:csdn:article:by:2401
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2401
$3
url
$59
http://blog.csdn.net/yaozhenguo2006/article/details/6769482
*4
$4
HSET
$25
hash:csdn:article:by:2401
$5
title
$31
linux input 子系统分析 一
*4
$4
HSET
$25
hash:csdn:article:by:2401
$4
desc
$241
linux input子系统分析--概述与数据结构
        Input子系统处理输入事务，任何输入设备的驱动程序都可以通过Input输入子系统提供的接口注册到内核，利用子系统提供的功能来与用...
*4
$4
HSET
$25
hash:csdn:article:by:2401
$9
readCount
$4
5200
*4
$4
HSET
$25
hash:csdn:article:by:2401
$14
articleContent
$41
csdn/linux/1_1_1_7_1504264713.119264.html
*4
$4
HSET
$25
hash:csdn:article:by:2401
$4
date
$16
2011-09-12 18:31
*4
$4
HSET
$25
hash:csdn:article:by:2401
$6
author
$14
YAOZHENGUO2006
*4
$4
HSET
$25
hash:csdn:article:by:2401
$12
commentCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2401
$9
labelList
$50
input,linux,struct,硬件驱动,数据结构,list,
*4
$4
HSET
$25
hash:csdn:article:by:2401
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2401
$10
authorLink
$33
http://my.csdn.net/YAOZHENGUO2006
*4
$4
HSET
$25
hash:csdn:article:by:2401
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2402
$2
id
$4
2402
*4
$4
HSET
$25
hash:csdn:article:by:2402
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2402
$3
url
$59
http://blog.csdn.net/yaozhenguo2006/article/details/7690707
*4
$4
HSET
$25
hash:csdn:article:by:2402
$5
title
$30
Linux USB Gadget--软件结构
*4
$4
HSET
$25
hash:csdn:article:by:2402
$4
desc
$211
USB Gadget是分层的软件结构，本文分析的是2.6.32.2版本的Gadget软件结构，这个软件结构与以前版本的变化很大。USB Gadget软件结构总共分为三层：
一. UDC层
    ...
*4
$4
HSET
$25
hash:csdn:article:by:2402
$9
readCount
$4
8634
*4
$4
HSET
$25
hash:csdn:article:by:2402
$14
articleContent
$40
csdn/linux/1_1_1_1_1504264714.04979.html
*4
$4
HSET
$25
hash:csdn:article:by:2402
$4
date
$16
2012-06-25 18:34
*4
$4
HSET
$25
hash:csdn:article:by:2402
$6
author
$14
YAOZHENGUO2006
*4
$4
HSET
$25
hash:csdn:article:by:2402
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2402
$9
labelList
$51
linux,struct,数据结构,c,descriptor,linux内核,
*4
$4
HSET
$25
hash:csdn:article:by:2402
$9
likeCount
$1
7
*4
$4
HSET
$25
hash:csdn:article:by:2402
$10
authorLink
$33
http://my.csdn.net/YAOZHENGUO2006
*4
$4
HSET
$25
hash:csdn:article:by:2402
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2403
$2
id
$4
2403
*4
$4
HSET
$25
hash:csdn:article:by:2403
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2403
$3
url
$59
http://blog.csdn.net/yaozhenguo2006/article/details/6769507
*4
$4
HSET
$25
hash:csdn:article:by:2403
$5
title
$31
linux input 子系统分析 二
*4
$4
HSET
$25
hash:csdn:article:by:2403
$4
desc
$244
linux input子系统分析--主要函数
 一. 各种注册函数
    因为分析一所讲的每种数据结构都代表一类对象，所以每种数据结构都会对应一个注册函数，他们都定义在子系统核心的input.c...
*4
$4
HSET
$25
hash:csdn:article:by:2403
$9
readCount
$4
5114
*4
$4
HSET
$25
hash:csdn:article:by:2403
$14
articleContent
$41
csdn/linux/1_1_1_6_1504264715.208629.html
*4
$4
HSET
$25
hash:csdn:article:by:2403
$4
date
$16
2011-09-12 18:57
*4
$4
HSET
$25
hash:csdn:article:by:2403
$6
author
$14
YAOZHENGUO2006
*4
$4
HSET
$25
hash:csdn:article:by:2403
$12
commentCount
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2403
$9
labelList
$43
input,linux,struct,list,table,数据结构,
*4
$4
HSET
$25
hash:csdn:article:by:2403
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2403
$10
authorLink
$33
http://my.csdn.net/YAOZHENGUO2006
*4
$4
HSET
$25
hash:csdn:article:by:2403
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2404
$2
id
$4
2404
*4
$4
HSET
$25
hash:csdn:article:by:2404
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2404
$3
url
$57
http://blog.csdn.net/renpengddxx/article/details/63680049
*4
$4
HSET
$25
hash:csdn:article:by:2404
$5
title
$34
php，java实现抽象工厂模式
*4
$4
HSET
$25
hash:csdn:article:by:2404
$4
desc
$303
概念理解抽象工厂模式：生产出不同业务品种的不同业务分类，强调的是每个不同品种下的分类，而他的生产类中是按照业务分类来区别的，就像《设计模式之禅》举的例子，有奔驰车和宝马车，这个车强调的就是业务品种，要...
*4
$4
HSET
$25
hash:csdn:article:by:2404
$9
readCount
$2
96
*4
$4
HSET
$25
hash:csdn:article:by:2404
$14
articleContent
$41
csdn/java/1_0_1_18_1504264715.849239.html
*4
$4
HSET
$25
hash:csdn:article:by:2404
$4
date
$16
2017-03-19 09:48
*4
$4
HSET
$25
hash:csdn:article:by:2404
$6
author
$11
renpengddxx
*4
$4
HSET
$25
hash:csdn:article:by:2404
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2404
$9
labelList
$13
设计模式,
*4
$4
HSET
$25
hash:csdn:article:by:2404
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2404
$10
authorLink
$30
http://my.csdn.net/renpengddxx
*4
$4
HSET
$25
hash:csdn:article:by:2404
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2405
$2
id
$4
2405
*4
$4
HSET
$25
hash:csdn:article:by:2405
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2405
$3
url
$59
http://blog.csdn.net/yaozhenguo2006/article/details/6775751
*4
$4
HSET
$25
hash:csdn:article:by:2405
$5
title
$31
linux input 子系统分析 三
*4
$4
HSET
$25
hash:csdn:article:by:2405
$4
desc
$200
linux input子系统分析--子系统核心.事件处理层.事件传递过程

一.  输入子系统核心分析。
    1.输入子系统核心对应与/drivers/input/input.c文件,这个也...
*4
$4
HSET
$25
hash:csdn:article:by:2405
$9
readCount
$4
6986
*4
$4
HSET
$25
hash:csdn:article:by:2405
$14
articleContent
$41
csdn/linux/1_1_1_5_1504264716.092698.html
*4
$4
HSET
$25
hash:csdn:article:by:2405
$4
date
$16
2011-09-14 19:48
*4
$4
HSET
$25
hash:csdn:article:by:2405
$6
author
$14
YAOZHENGUO2006
*4
$4
HSET
$25
hash:csdn:article:by:2405
$12
commentCount
$1
6
*4
$4
HSET
$25
hash:csdn:article:by:2405
$9
labelList
$37
input,linux,struct,buffer,list,table,
*4
$4
HSET
$25
hash:csdn:article:by:2405
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2405
$10
authorLink
$33
http://my.csdn.net/YAOZHENGUO2006
*4
$4
HSET
$25
hash:csdn:article:by:2405
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2406
$2
id
$4
2406
*4
$4
HSET
$25
hash:csdn:article:by:2406
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2406
$3
url
$57
http://blog.csdn.net/renpengddxx/article/details/71519064
*4
$4
HSET
$25
hash:csdn:article:by:2406
$5
title
$29
php、java 实现享元模式
*4
$4
HSET
$25
hash:csdn:article:by:2406
$4
desc
$177
避免无限制的创建对象，建立一个对象池，将可以共享的对象存起来复用。类图 
java实现public abstract class Flyweight {    private String intri...
*4
$4
HSET
$25
hash:csdn:article:by:2406
$9
readCount
$3
382
*4
$4
HSET
$25
hash:csdn:article:by:2406
$14
articleContent
$39
csdn/java/1_0_1_1_1504264716.88968.html
*4
$4
HSET
$25
hash:csdn:article:by:2406
$4
date
$16
2017-05-10 13:18
*4
$4
HSET
$25
hash:csdn:article:by:2406
$6
author
$11
renpengddxx
*4
$4
HSET
$25
hash:csdn:article:by:2406
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2406
$9
labelList
$9
java,php,
*4
$4
HSET
$25
hash:csdn:article:by:2406
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2406
$10
authorLink
$30
http://my.csdn.net/renpengddxx
*4
$4
HSET
$25
hash:csdn:article:by:2406
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2407
$2
id
$4
2407
*4
$4
HSET
$25
hash:csdn:article:by:2407
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2407
$3
url
$59
http://blog.csdn.net/yaozhenguo2006/article/details/6760575
*4
$4
HSET
$25
hash:csdn:article:by:2407
$5
title
$29
linux MISC 驱动模型分析
*4
$4
HSET
$25
hash:csdn:article:by:2407
$4
desc
$211
linux MISC 驱动模型分析


        阅读led驱动程序的代码的时候，没有发现ldd3中提到的各种字符设备注册函数，而是发现了一个misc_register函数，这说明led设...
*4
$4
HSET
$25
hash:csdn:article:by:2407
$9
readCount
$5
12186
*4
$4
HSET
$25
hash:csdn:article:by:2407
$14
articleContent
$42
csdn/linux/1_1_1_12_1504264717.279034.html
*4
$4
HSET
$25
hash:csdn:article:by:2407
$4
date
$16
2011-09-08 16:18
*4
$4
HSET
$25
hash:csdn:article:by:2407
$6
author
$14
YAOZHENGUO2006
*4
$4
HSET
$25
hash:csdn:article:by:2407
$12
commentCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2407
$9
labelList
$41
linux,class,list,struct,linux内核,null,
*4
$4
HSET
$25
hash:csdn:article:by:2407
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2407
$10
authorLink
$33
http://my.csdn.net/YAOZHENGUO2006
*4
$4
HSET
$25
hash:csdn:article:by:2407
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2408
$2
id
$4
2408
*4
$4
HSET
$25
hash:csdn:article:by:2408
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2408
$3
url
$57
http://blog.csdn.net/renpengddxx/article/details/69055627
*4
$4
HSET
$25
hash:csdn:article:by:2408
$5
title
$26
php,java实现组合模式
*4
$4
HSET
$25
hash:csdn:article:by:2408
$4
desc
$165
组合模式强调整体与部分的关系，如数据结构中的树结构等类图： 
java实现public abstract class AbsPart {    public abstract void getInfo...
*4
$4
HSET
$25
hash:csdn:article:by:2408
$9
readCount
$3
664
*4
$4
HSET
$25
hash:csdn:article:by:2408
$14
articleContent
$40
csdn/java/1_0_1_7_1504264718.094249.html
*4
$4
HSET
$25
hash:csdn:article:by:2408
$4
date
$16
2017-04-04 10:11
*4
$4
HSET
$25
hash:csdn:article:by:2408
$6
author
$11
renpengddxx
*4
$4
HSET
$25
hash:csdn:article:by:2408
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2408
$9
labelList
$29
php,java,数据结构,结构,
*4
$4
HSET
$25
hash:csdn:article:by:2408
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2408
$10
authorLink
$30
http://my.csdn.net/renpengddxx
*4
$4
HSET
$25
hash:csdn:article:by:2408
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2409
$2
id
$4
2409
*4
$4
HSET
$25
hash:csdn:article:by:2409
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2409
$3
url
$59
http://blog.csdn.net/yaozhenguo2006/article/details/6801161
*4
$4
HSET
$25
hash:csdn:article:by:2409
$5
title
$26
mini2440驱动分析之LCD
*4
$4
HSET
$25
hash:csdn:article:by:2409
$4
desc
$183
mini2440驱动分析之LCD
        mini2440集成了lcd控制器的接口，板子上接的lcd硬件是统宝240*320，TFT型lcd。lcd驱动对应的文件为s3c2410fb.c。要...
*4
$4
HSET
$25
hash:csdn:article:by:2409
$9
readCount
$4
8748
*4
$4
HSET
$25
hash:csdn:article:by:2409
$14
articleContent
$41
csdn/linux/1_1_1_4_1504264718.259735.html
*4
$4
HSET
$25
hash:csdn:article:by:2409
$4
date
$16
2011-09-22 16:56
*4
$4
HSET
$25
hash:csdn:article:by:2409
$6
author
$14
YAOZHENGUO2006
*4
$4
HSET
$25
hash:csdn:article:by:2409
$12
commentCount
$1
5
*4
$4
HSET
$25
hash:csdn:article:by:2409
$9
labelList
$40
struct,c,video,数据结构,buffer,null,
*4
$4
HSET
$25
hash:csdn:article:by:2409
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2409
$10
authorLink
$33
http://my.csdn.net/YAOZHENGUO2006
*4
$4
HSET
$25
hash:csdn:article:by:2409
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2410
$2
id
$4
2410
*4
$4
HSET
$25
hash:csdn:article:by:2410
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2410
$3
url
$57
http://blog.csdn.net/renpengddxx/article/details/66968024
*4
$4
HSET
$25
hash:csdn:article:by:2410
$5
title
$29
php,java实现责任链模式
*4
$4
HSET
$25
hash:csdn:article:by:2410
$4
desc
$287
当我们的请求根据不同的情况需要不同的处理者处理的时候，可以使用该模式，将多个处理者和请求者隔离，只暴露一个处理者，当满足处理条件时处理，不满足时将请求传递，类似于Android的事件分发机制。类图： ...
*4
$4
HSET
$25
hash:csdn:article:by:2410
$9
readCount
$3
281
*4
$4
HSET
$25
hash:csdn:article:by:2410
$14
articleContent
$41
csdn/java/1_0_1_11_1504264719.067131.html
*4
$4
HSET
$25
hash:csdn:article:by:2410
$4
date
$16
2017-03-27 09:29
*4
$4
HSET
$25
hash:csdn:article:by:2410
$6
author
$11
renpengddxx
*4
$4
HSET
$25
hash:csdn:article:by:2410
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2410
$9
labelList
$9
php,java,
*4
$4
HSET
$25
hash:csdn:article:by:2410
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2410
$10
authorLink
$30
http://my.csdn.net/renpengddxx
*4
$4
HSET
$25
hash:csdn:article:by:2410
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2411
$2
id
$4
2411
*4
$4
HSET
$25
hash:csdn:article:by:2411
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2411
$3
url
$57
http://blog.csdn.net/renpengddxx/article/details/65937239
*4
$4
HSET
$25
hash:csdn:article:by:2411
$5
title
$31
php，java实现中介者模式
*4
$4
HSET
$25
hash:csdn:article:by:2411
$4
desc
$207
当多个对象之间产生网状的关系时，适合中介者模式，把多对多的依赖转化为只对中介者的依赖类图 
java实现中介者抽象类public abstract class AbsMediation {    pr...
*4
$4
HSET
$25
hash:csdn:article:by:2411
$9
readCount
$3
292
*4
$4
HSET
$25
hash:csdn:article:by:2411
$14
articleContent
$41
csdn/java/1_0_1_13_1504264720.089487.html
*4
$4
HSET
$25
hash:csdn:article:by:2411
$4
date
$16
2017-03-25 15:47
*4
$4
HSET
$25
hash:csdn:article:by:2411
$6
author
$11
renpengddxx
*4
$4
HSET
$25
hash:csdn:article:by:2411
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2411
$9
labelList
$9
java,php,
*4
$4
HSET
$25
hash:csdn:article:by:2411
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2411
$10
authorLink
$30
http://my.csdn.net/renpengddxx
*4
$4
HSET
$25
hash:csdn:article:by:2411
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2412
$2
id
$4
2412
*4
$4
HSET
$25
hash:csdn:article:by:2412
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2412
$3
url
$55
http://blog.csdn.net/shanshanpt/article/details/7477027
*4
$4
HSET
$25
hash:csdn:article:by:2412
$5
title
$28
Linux 服务器设计( 二 )
*4
$4
HSET
$25
hash:csdn:article:by:2412
$4
desc
$247
上一篇的介绍已经OK，那么此处就只贴上代码！
   CODE_1 : 主线程accept，但是线程比进程有一个好处是，对于conn_fd资源来说是可以直接共享的，所以就可以不需要像在进程中那样需要传...
*4
$4
HSET
$25
hash:csdn:article:by:2412
$9
readCount
$4
1154
*4
$4
HSET
$25
hash:csdn:article:by:2412
$14
articleContent
$41
csdn/linux/1_1_1_0_1504264720.243716.html
*4
$4
HSET
$25
hash:csdn:article:by:2412
$4
date
$16
2012-04-19 12:39
*4
$4
HSET
$25
hash:csdn:article:by:2412
$6
author
$10
shanshanpt
*4
$4
HSET
$25
hash:csdn:article:by:2412
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2412
$9
labelList
$42
服务器,linux,struct,thread,socket,null,
*4
$4
HSET
$25
hash:csdn:article:by:2412
$9
likeCount
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2412
$10
authorLink
$29
http://my.csdn.net/shanshanpt
*4
$4
HSET
$25
hash:csdn:article:by:2412
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2413
$2
id
$4
2413
*4
$4
HSET
$25
hash:csdn:article:by:2413
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2413
$3
url
$57
http://blog.csdn.net/renpengddxx/article/details/65626905
*4
$4
HSET
$25
hash:csdn:article:by:2413
$5
title
$26
php,java实现原型模式
*4
$4
HSET
$25
hash:csdn:article:by:2413
$4
desc
$227
当我们要使用或者批量使用一个对象，他们完全相同，并且该对象的初始化过程十分复杂，可以使用该模式克隆出对个对象。类图 
java代码实现：public class Subject implements ...
*4
$4
HSET
$25
hash:csdn:article:by:2413
$9
readCount
$3
120
*4
$4
HSET
$25
hash:csdn:article:by:2413
$14
articleContent
$41
csdn/java/1_0_1_14_1504264721.048636.html
*4
$4
HSET
$25
hash:csdn:article:by:2413
$4
date
$16
2017-03-24 09:47
*4
$4
HSET
$25
hash:csdn:article:by:2413
$6
author
$11
renpengddxx
*4
$4
HSET
$25
hash:csdn:article:by:2413
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2413
$9
labelList
$9
java,php,
*4
$4
HSET
$25
hash:csdn:article:by:2413
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2413
$10
authorLink
$30
http://my.csdn.net/renpengddxx
*4
$4
HSET
$25
hash:csdn:article:by:2413
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2414
$2
id
$4
2414
*4
$4
HSET
$25
hash:csdn:article:by:2414
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2414
$3
url
$55
http://blog.csdn.net/shanshanpt/article/details/7383400
*4
$4
HSET
$25
hash:csdn:article:by:2414
$5
title
$36
linux 网络编程：epoll 的实例
*4
$4
HSET
$25
hash:csdn:article:by:2414
$4
desc
$221
在前面已经经过了PPC、TPC、select之类( TPC就是使用进程处理data，TPC就是使用线程处理 ),前面两个的缺点大家应该都是知道的是吧，对于select( 其实poll和他差不多 )，缺...
*4
$4
HSET
$25
hash:csdn:article:by:2414
$9
readCount
$4
6791
*4
$4
HSET
$25
hash:csdn:article:by:2414
$14
articleContent
$41
csdn/linux/1_1_1_3_1504264721.215339.html
*4
$4
HSET
$25
hash:csdn:article:by:2414
$4
date
$16
2012-03-22 15:39
*4
$4
HSET
$25
hash:csdn:article:by:2414
$6
author
$10
shanshanpt
*4
$4
HSET
$25
hash:csdn:article:by:2414
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2414
$9
labelList
$41
linux,编程,网络,socket,struct,server,
*4
$4
HSET
$25
hash:csdn:article:by:2414
$9
likeCount
$1
3
*4
$4
HSET
$25
hash:csdn:article:by:2414
$10
authorLink
$29
http://my.csdn.net/shanshanpt
*4
$4
HSET
$25
hash:csdn:article:by:2414
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2415
$2
id
$4
2415
*4
$4
HSET
$25
hash:csdn:article:by:2415
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2415
$3
url
$55
http://blog.csdn.net/shanshanpt/article/details/7381616
*4
$4
HSET
$25
hash:csdn:article:by:2415
$5
title
$42
UNIX domain  (  UNIX  域协议  )  实例
*4
$4
HSET
$25
hash:csdn:article:by:2415
$4
desc
$235
一般在我们自己的主机上通信的时候，前面也讲到过可以使用pipe，fifo，msg，共享内存之类，如果你想使用套接字的话，当然TCP/IP的套接字也是可以的，只要指定server的IP = 127.0....
*4
$4
HSET
$25
hash:csdn:article:by:2415
$9
readCount
$4
1168
*4
$4
HSET
$25
hash:csdn:article:by:2415
$14
articleContent
$41
csdn/linux/1_1_1_4_1504264722.303373.html
*4
$4
HSET
$25
hash:csdn:article:by:2415
$4
date
$16
2012-03-22 06:45
*4
$4
HSET
$25
hash:csdn:article:by:2415
$6
author
$10
shanshanpt
*4
$4
HSET
$25
hash:csdn:article:by:2415
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2415
$9
labelList
$38
unix,domain,socket,struct,file,stream,
*4
$4
HSET
$25
hash:csdn:article:by:2415
$9
likeCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2415
$10
authorLink
$29
http://my.csdn.net/shanshanpt
*4
$4
HSET
$25
hash:csdn:article:by:2415
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2416
$2
id
$4
2416
*4
$4
HSET
$25
hash:csdn:article:by:2416
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2416
$3
url
$57
http://blog.csdn.net/renpengddxx/article/details/71158423
*4
$4
HSET
$25
hash:csdn:article:by:2416
$5
title
$28
php、java实现状态模式
*4
$4
HSET
$25
hash:csdn:article:by:2416
$4
desc
$191
个人理解：根据事物状态的不同，导致其行为的不同，切换状态，相应的行为也会发生变化类图 
php实现abstract class Status
{
    protected $context;    ...
*4
$4
HSET
$25
hash:csdn:article:by:2416
$9
readCount
$3
402
*4
$4
HSET
$25
hash:csdn:article:by:2416
$14
articleContent
$40
csdn/java/1_0_1_2_1504264726.190857.html
*4
$4
HSET
$25
hash:csdn:article:by:2416
$4
date
$16
2017-05-04 10:01
*4
$4
HSET
$25
hash:csdn:article:by:2416
$6
author
$11
renpengddxx
*4
$4
HSET
$25
hash:csdn:article:by:2416
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2416
$9
labelList
$9
php,java,
*4
$4
HSET
$25
hash:csdn:article:by:2416
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2416
$10
authorLink
$30
http://my.csdn.net/renpengddxx
*4
$4
HSET
$25
hash:csdn:article:by:2416
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2417
$2
id
$4
2417
*4
$4
HSET
$25
hash:csdn:article:by:2417
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2417
$3
url
$55
http://blog.csdn.net/shanshanpt/article/details/7476988
*4
$4
HSET
$25
hash:csdn:article:by:2417
$5
title
$35
Linux 下服务器设计（ 一 ）
*4
$4
HSET
$25
hash:csdn:article:by:2417
$4
desc
$252
这里讲的仅仅是一个简单的server的模型！为了处理同时来到很多小的链接请求( 解释：就是请求很简单，持续时间很短，那么if  server在请求到来时在fork来处理它，有可能fork的时间比应答请...
*4
$4
HSET
$25
hash:csdn:article:by:2417
$9
readCount
$4
1853
*4
$4
HSET
$25
hash:csdn:article:by:2417
$14
articleContent
$41
csdn/linux/1_1_1_1_1504264726.805796.html
*4
$4
HSET
$25
hash:csdn:article:by:2417
$4
date
$16
2012-04-19 12:31
*4
$4
HSET
$25
hash:csdn:article:by:2417
$6
author
$10
shanshanpt
*4
$4
HSET
$25
hash:csdn:article:by:2417
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2417
$9
labelList
$44
服务器,linux,socket,server,struct,stream,
*4
$4
HSET
$25
hash:csdn:article:by:2417
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2417
$10
authorLink
$29
http://my.csdn.net/shanshanpt
*4
$4
HSET
$25
hash:csdn:article:by:2417
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2418
$2
id
$4
2418
*4
$4
HSET
$25
hash:csdn:article:by:2418
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2418
$3
url
$57
http://blog.csdn.net/renpengddxx/article/details/70046429
*4
$4
HSET
$25
hash:csdn:article:by:2418
$5
title
$29
php,java实现访问者模式
*4
$4
HSET
$25
hash:csdn:article:by:2418
$4
desc
$219
定义一个类，使用它对数据类进行访问，可以减少对数据类的污染，并且可以随意定制数据展示和计算等。类图 
java实现： 
数据源抽象类public abstract class Element {   ...
*4
$4
HSET
$25
hash:csdn:article:by:2418
$9
readCount
$3
283
*4
$4
HSET
$25
hash:csdn:article:by:2418
$14
articleContent
$40
csdn/java/1_0_1_3_1504264727.480649.html
*4
$4
HSET
$25
hash:csdn:article:by:2418
$4
date
$16
2017-04-11 09:59
*4
$4
HSET
$25
hash:csdn:article:by:2418
$6
author
$11
renpengddxx
*4
$4
HSET
$25
hash:csdn:article:by:2418
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2418
$9
labelList
$9
java,php,
*4
$4
HSET
$25
hash:csdn:article:by:2418
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2418
$10
authorLink
$30
http://my.csdn.net/renpengddxx
*4
$4
HSET
$25
hash:csdn:article:by:2418
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2419
$2
id
$4
2419
*4
$4
HSET
$25
hash:csdn:article:by:2419
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2419
$3
url
$57
http://blog.csdn.net/renpengddxx/article/details/69499614
*4
$4
HSET
$25
hash:csdn:article:by:2419
$5
title
$38
php,java实现门面（外观）模式
*4
$4
HSET
$25
hash:csdn:article:by:2419
$4
desc
$229
外观模式，就是将负复杂的业务路基统一到一个类中，该类提供了一个简易的访问接口，只需要调用该接口，就可以完成复杂的逻辑。类图: 
java实现public class BusinessClass1 { ...
*4
$4
HSET
$25
hash:csdn:article:by:2419
$9
readCount
$3
351
*4
$4
HSET
$25
hash:csdn:article:by:2419
$14
articleContent
$40
csdn/java/1_0_1_5_1504264728.344539.html
*4
$4
HSET
$25
hash:csdn:article:by:2419
$4
date
$16
2017-04-07 09:14
*4
$4
HSET
$25
hash:csdn:article:by:2419
$6
author
$11
renpengddxx
*4
$4
HSET
$25
hash:csdn:article:by:2419
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2419
$9
labelList
$9
java,php,
*4
$4
HSET
$25
hash:csdn:article:by:2419
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2419
$10
authorLink
$30
http://my.csdn.net/renpengddxx
*4
$4
HSET
$25
hash:csdn:article:by:2419
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2420
$2
id
$4
2420
*4
$4
HSET
$25
hash:csdn:article:by:2420
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2420
$3
url
$57
http://blog.csdn.net/renpengddxx/article/details/69222159
*4
$4
HSET
$25
hash:csdn:article:by:2420
$5
title
$29
php,java实现观察者模式
*4
$4
HSET
$25
hash:csdn:article:by:2420
$4
desc
$121
类图： 
java实现 
被观察者public abstract class Observable extends java.util.Observable{    private ArrayList...
*4
$4
HSET
$25
hash:csdn:article:by:2420
$9
readCount
$3
455
*4
$4
HSET
$25
hash:csdn:article:by:2420
$14
articleContent
$39
csdn/java/1_0_1_6_1504264729.44845.html
*4
$4
HSET
$25
hash:csdn:article:by:2420
$4
date
$16
2017-04-05 09:33
*4
$4
HSET
$25
hash:csdn:article:by:2420
$6
author
$11
renpengddxx
*4
$4
HSET
$25
hash:csdn:article:by:2420
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2420
$9
labelList
$9
java,php,
*4
$4
HSET
$25
hash:csdn:article:by:2420
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2420
$10
authorLink
$30
http://my.csdn.net/renpengddxx
*4
$4
HSET
$25
hash:csdn:article:by:2420
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2421
$2
id
$4
2421
*4
$4
HSET
$25
hash:csdn:article:by:2421
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2421
$3
url
$57
http://blog.csdn.net/renpengddxx/article/details/69941813
*4
$4
HSET
$25
hash:csdn:article:by:2421
$5
title
$31
php，java实现备忘录模式
*4
$4
HSET
$25
hash:csdn:article:by:2421
$4
desc
$173
适用于想要回复某个时间点的数据，类似于数据库的恢复。类图： 
java实现： 
原始类public class Originator {    private String status = ""; ...
*4
$4
HSET
$25
hash:csdn:article:by:2421
$9
readCount
$3
313
*4
$4
HSET
$25
hash:csdn:article:by:2421
$14
articleContent
$40
csdn/java/1_0_1_4_1504264730.608431.html
*4
$4
HSET
$25
hash:csdn:article:by:2421
$4
date
$16
2017-04-10 08:56
*4
$4
HSET
$25
hash:csdn:article:by:2421
$6
author
$11
renpengddxx
*4
$4
HSET
$25
hash:csdn:article:by:2421
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2421
$9
labelList
$9
java,php,
*4
$4
HSET
$25
hash:csdn:article:by:2421
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2421
$10
authorLink
$30
http://my.csdn.net/renpengddxx
*4
$4
HSET
$25
hash:csdn:article:by:2421
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2422
$2
id
$4
2422
*4
$4
HSET
$25
hash:csdn:article:by:2422
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2422
$3
url
$59
http://blog.csdn.net/dlutbrucezhang/article/details/9088951
*4
$4
HSET
$25
hash:csdn:article:by:2422
$5
title
$28
LINUX0.11 内核阅读笔记
*4
$4
HSET
$25
hash:csdn:article:by:2422
$4
desc
$273
一．源码目录图1二．系统总体流程：系统从boot开始动作，把内核从启动盘装到正确的位置，进行一些基本的初始化，如检测内存，保护模式相关，建立页目录和内存页表，GDT表，IDT表。然后进入main进行初...
*4
$4
HSET
$25
hash:csdn:article:by:2422
$9
readCount
$4
1709
*4
$4
HSET
$25
hash:csdn:article:by:2422
$14
articleContent
$41
csdn/linux/1_1_1_0_1504264730.655474.html
*4
$4
HSET
$25
hash:csdn:article:by:2422
$4
date
$16
2013-07-21 19:07
*4
$4
HSET
$25
hash:csdn:article:by:2422
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2422
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2422
$9
labelList
$40
Linux,内核,内存,源代码,Linux0.11,
*4
$4
HSET
$25
hash:csdn:article:by:2422
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2422
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2422
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2423
$2
id
$4
2423
*4
$4
HSET
$25
hash:csdn:article:by:2423
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2423
$3
url
$59
http://blog.csdn.net/dlutbrucezhang/article/details/9332103
*4
$4
HSET
$25
hash:csdn:article:by:2423
$5
title
$39
Linux0.11进程分配时间片的策略
*4
$4
HSET
$25
hash:csdn:article:by:2423
$4
desc
$187
想知道内核什么时候给进程重新分配时间片，最好的办法就是阅读源代码（其中已经打了注释）/*********************************************************...
*4
$4
HSET
$25
hash:csdn:article:by:2423
$9
readCount
$4
1511
*4
$4
HSET
$25
hash:csdn:article:by:2423
$14
articleContent
$41
csdn/linux/1_1_1_1_1504264731.676152.html
*4
$4
HSET
$25
hash:csdn:article:by:2423
$4
date
$16
2013-07-15 14:46
*4
$4
HSET
$25
hash:csdn:article:by:2423
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2423
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2423
$9
labelList
$49
Linux,进程,时间片,进程调度,进程切换,
*4
$4
HSET
$25
hash:csdn:article:by:2423
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2423
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2423
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2424
$2
id
$4
2424
*4
$4
HSET
$25
hash:csdn:article:by:2424
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2424
$3
url
$59
http://blog.csdn.net/dlutbrucezhang/article/details/9313397
*4
$4
HSET
$25
hash:csdn:article:by:2424
$5
title
$29
Linux进程－进程的创建
*4
$4
HSET
$25
hash:csdn:article:by:2424
$4
desc
$261
今天学习了Linux的进程创建的基本原理，是基于0.11版本核心的。下面对其作一下简单的总结。一、Linux进程在内存中的相关资源   很容易理解，Linux进程的创建过程就是内存中进程相关资源产生的...
*4
$4
HSET
$25
hash:csdn:article:by:2424
$9
readCount
$4
1632
*4
$4
HSET
$25
hash:csdn:article:by:2424
$14
articleContent
$41
csdn/linux/1_1_1_5_1504264732.643633.html
*4
$4
HSET
$25
hash:csdn:article:by:2424
$4
date
$16
2013-07-12 17:01
*4
$4
HSET
$25
hash:csdn:article:by:2424
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2424
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2424
$9
labelList
$38
Linux,fork,进程,汇编,系统调用,
*4
$4
HSET
$25
hash:csdn:article:by:2424
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2424
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2424
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2425
$2
id
$4
2425
*4
$4
HSET
$25
hash:csdn:article:by:2425
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2425
$3
url
$53
http://blog.csdn.net/ysc1123/article/details/50097317
*4
$4
HSET
$25
hash:csdn:article:by:2425
$5
title
$24
润乾报表实用教程
*4
$4
HSET
$25
hash:csdn:article:by:2425
$4
desc
$264
我们都知道在Java领域的开发中，有一个常用的报表--润乾报表。但是对于新手来讲，我们究竟如何在一个较短的时间内最高效的使用它呢？下面一起来看：
☁ 报表设计步骤
                ...
*4
$4
HSET
$25
hash:csdn:article:by:2425
$9
readCount
$4
3100
*4
$4
HSET
$25
hash:csdn:article:by:2425
$14
articleContent
$40
csdn/java/1_1_1_0_1504264733.399085.html
*4
$4
HSET
$25
hash:csdn:article:by:2425
$4
date
$16
2015-11-29 16:59
*4
$4
HSET
$25
hash:csdn:article:by:2425
$6
author
$7
YSC1123
*4
$4
HSET
$25
hash:csdn:article:by:2425
$12
commentCount
$2
26
*4
$4
HSET
$25
hash:csdn:article:by:2425
$9
labelList
$19
Java,报表,北京,
*4
$4
HSET
$25
hash:csdn:article:by:2425
$9
likeCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2425
$10
authorLink
$26
http://my.csdn.net/YSC1123
*4
$4
HSET
$25
hash:csdn:article:by:2425
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2426
$2
id
$4
2426
*4
$4
HSET
$25
hash:csdn:article:by:2426
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2426
$3
url
$59
http://blog.csdn.net/dlutbrucezhang/article/details/9207173
*4
$4
HSET
$25
hash:csdn:article:by:2426
$5
title
$15
Linux0.11小结
*4
$4
HSET
$25
hash:csdn:article:by:2426
$4
desc
$291
第一部分 基础内容1.操作系统基础    操作系统是计算机硬件系统与用户程序间重要环节，理解操作系统的原理是编写优秀代码的基础。教课书中阐述的操作系统一般由5部分组成。一个最简单的操作系统，可以不需要...
*4
$4
HSET
$25
hash:csdn:article:by:2426
$9
readCount
$4
1790
*4
$4
HSET
$25
hash:csdn:article:by:2426
$14
articleContent
$42
csdn/linux/1_1_1_13_1504264733.699226.html
*4
$4
HSET
$25
hash:csdn:article:by:2426
$4
date
$16
2013-06-30 13:34
*4
$4
HSET
$25
hash:csdn:article:by:2426
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2426
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2426
$9
labelList
$43
Linux,内核,栈,行业数据,操作系统,
*4
$4
HSET
$25
hash:csdn:article:by:2426
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2426
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2426
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2427
$2
id
$4
2427
*4
$4
HSET
$25
hash:csdn:article:by:2427
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2427
$3
url
$53
http://blog.csdn.net/ysc1123/article/details/48465727
*4
$4
HSET
$25
hash:csdn:article:by:2427
$5
title
$39
小荷才露尖尖角之struts的秘密
*4
$4
HSET
$25
hash:csdn:article:by:2427
$4
desc
$252
我们都知道SSH是目前比较流行的一个Web应用程序开源框架，而struts又是之中的领头框架，究竟它有怎样的力量竟然可以博客IT界的眼球，下面请听我一一道来：
 一、MVC
要了解struts必须先来...
*4
$4
HSET
$25
hash:csdn:article:by:2427
$9
readCount
$3
865
*4
$4
HSET
$25
hash:csdn:article:by:2427
$14
articleContent
$40
csdn/java/1_1_1_1_1504264734.670927.html
*4
$4
HSET
$25
hash:csdn:article:by:2427
$4
date
$16
2015-09-15 20:00
*4
$4
HSET
$25
hash:csdn:article:by:2427
$6
author
$7
YSC1123
*4
$4
HSET
$25
hash:csdn:article:by:2427
$12
commentCount
$2
28
*4
$4
HSET
$25
hash:csdn:article:by:2427
$9
labelList
$19
SSH,Java,struts2.0,
*4
$4
HSET
$25
hash:csdn:article:by:2427
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2427
$10
authorLink
$26
http://my.csdn.net/YSC1123
*4
$4
HSET
$25
hash:csdn:article:by:2427
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2428
$2
id
$4
2428
*4
$4
HSET
$25
hash:csdn:article:by:2428
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2428
$3
url
$59
http://blog.csdn.net/dlutbrucezhang/article/details/9167195
*4
$4
HSET
$25
hash:csdn:article:by:2428
$5
title
$42
Linux进程-命令行参数和环境列表
*4
$4
HSET
$25
hash:csdn:article:by:2428
$4
desc
$141
命令行参数在C中，main函数有很多的变种，比如main(),
int main(),
int main(int argc, char *argv[]),
int main(int argc, cha...
*4
$4
HSET
$25
hash:csdn:article:by:2428
$9
readCount
$4
2484
*4
$4
HSET
$25
hash:csdn:article:by:2428
$14
articleContent
$42
csdn/linux/1_1_1_18_1504264734.760718.html
*4
$4
HSET
$25
hash:csdn:article:by:2428
$4
date
$16
2013-06-25 09:43
*4
$4
HSET
$25
hash:csdn:article:by:2428
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2428
$12
commentCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2428
$9
labelList
$28
Linux,存储,String,shell,C,
*4
$4
HSET
$25
hash:csdn:article:by:2428
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2428
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2428
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2429
$2
id
$4
2429
*4
$4
HSET
$25
hash:csdn:article:by:2429
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2429
$3
url
$59
http://blog.csdn.net/dlutbrucezhang/article/details/9165479
*4
$4
HSET
$25
hash:csdn:article:by:2429
$5
title
$27
进程内核栈、用户栈
*4
$4
HSET
$25
hash:csdn:article:by:2429
$4
desc
$271
1.进程的堆栈     内核在创建进程的时候，在创建task_struct的同事，会为进程创建相应的堆栈。每个进程会有两个栈，一个用户栈，存在于用户空间，一个内核栈，存在于内核空间。当进程在用户空间运...
*4
$4
HSET
$25
hash:csdn:article:by:2429
$9
readCount
$4
1184
*4
$4
HSET
$25
hash:csdn:article:by:2429
$14
articleContent
$41
csdn/linux/1_1_1_19_1504264734.79808.html
*4
$4
HSET
$25
hash:csdn:article:by:2429
$4
date
$16
2013-06-24 21:43
*4
$4
HSET
$25
hash:csdn:article:by:2429
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2429
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2429
$9
labelList
$35
栈,内核,指针,处理器,struct,
*4
$4
HSET
$25
hash:csdn:article:by:2429
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2429
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2429
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2430
$2
id
$4
2430
*4
$4
HSET
$25
hash:csdn:article:by:2430
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2430
$3
url
$53
http://blog.csdn.net/ysc1123/article/details/44588795
*4
$4
HSET
$25
hash:csdn:article:by:2430
$5
title
$19
教你Servlet入门
*4
$4
HSET
$25
hash:csdn:article:by:2430
$4
desc
$215
Web 技术成为当今主流的互联网 Web 应用技术之一，而 Servlet 是 Java Web 技术的核心基础。这篇博客主要帮助大家了解一个 Web 工程在 Servlet 容器中是如何启动的？ S...
*4
$4
HSET
$25
hash:csdn:article:by:2430
$9
readCount
$4
1218
*4
$4
HSET
$25
hash:csdn:article:by:2430
$14
articleContent
$40
csdn/java/1_1_1_8_1504264734.863159.html
*4
$4
HSET
$25
hash:csdn:article:by:2430
$4
date
$16
2015-03-24 14:44
*4
$4
HSET
$25
hash:csdn:article:by:2430
$6
author
$7
YSC1123
*4
$4
HSET
$25
hash:csdn:article:by:2430
$12
commentCount
$2
13
*4
$4
HSET
$25
hash:csdn:article:by:2430
$9
labelList
$4
drp,
*4
$4
HSET
$25
hash:csdn:article:by:2430
$9
likeCount
$1
5
*4
$4
HSET
$25
hash:csdn:article:by:2430
$10
authorLink
$26
http://my.csdn.net/YSC1123
*4
$4
HSET
$25
hash:csdn:article:by:2430
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2431
$2
id
$4
2431
*4
$4
HSET
$25
hash:csdn:article:by:2431
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2431
$3
url
$53
http://blog.csdn.net/ysc1123/article/details/44919647
*4
$4
HSET
$25
hash:csdn:article:by:2431
$5
title
$22
jsp、servlet一家亲
*4
$4
HSET
$25
hash:csdn:article:by:2431
$4
desc
$217
上个月写了《教你servlet入门》，今天来探究一下关于jsp的那些故事。
§ 回顾

    1． 什么是Web应用程序？
    2． 什么是Servlet，和一般Java程序有什么区别？...
*4
$4
HSET
$25
hash:csdn:article:by:2431
$9
readCount
$4
1073
*4
$4
HSET
$25
hash:csdn:article:by:2431
$14
articleContent
$40
csdn/java/1_1_1_9_1504264735.616165.html
*4
$4
HSET
$25
hash:csdn:article:by:2431
$4
date
$16
2015-04-07 15:27
*4
$4
HSET
$25
hash:csdn:article:by:2431
$6
author
$7
YSC1123
*4
$4
HSET
$25
hash:csdn:article:by:2431
$12
commentCount
$2
16
*4
$4
HSET
$25
hash:csdn:article:by:2431
$9
labelList
$16
drp,jsp,servlet,
*4
$4
HSET
$25
hash:csdn:article:by:2431
$9
likeCount
$1
3
*4
$4
HSET
$25
hash:csdn:article:by:2431
$10
authorLink
$26
http://my.csdn.net/YSC1123
*4
$4
HSET
$25
hash:csdn:article:by:2431
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2432
$2
id
$4
2432
*4
$4
HSET
$25
hash:csdn:article:by:2432
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2432
$3
url
$59
http://blog.csdn.net/dlutbrucezhang/article/details/9168255
*4
$4
HSET
$25
hash:csdn:article:by:2432
$5
title
$132
内存分配的原理__进程分配内存有两种方式，分别由两个系统调用完成：brk和mmap（不考虑共享内存）
*4
$4
HSET
$25
hash:csdn:article:by:2432
$4
desc
$188
如何查看进程发生缺页中断的次数？         用ps -o majflt,minflt -C program命令查看。          majflt代表major fault，中文名叫大错误，m...
*4
$4
HSET
$25
hash:csdn:article:by:2432
$9
readCount
$4
2725
*4
$4
HSET
$25
hash:csdn:article:by:2432
$14
articleContent
$42
csdn/linux/1_1_1_17_1504264735.958755.html
*4
$4
HSET
$25
hash:csdn:article:by:2432
$4
date
$16
2013-06-25 11:09
*4
$4
HSET
$25
hash:csdn:article:by:2432
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2432
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2432
$9
labelList
$42
内存,内存分配,malloc,C,行业数据,
*4
$4
HSET
$25
hash:csdn:article:by:2432
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2432
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2432
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2433
$2
id
$4
2433
*4
$4
HSET
$25
hash:csdn:article:by:2433
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2433
$3
url
$53
http://blog.csdn.net/ysc1123/article/details/50062321
*4
$4
HSET
$25
hash:csdn:article:by:2433
$5
title
$32
Oracle语句的再深化--转码
*4
$4
HSET
$25
hash:csdn:article:by:2433
$4
desc
$137
当我们面对一个数据表，且表结构为：
create table R_ExtSubFina_Month
(
        rptdate date not null,
        rptname v...
*4
$4
HSET
$25
hash:csdn:article:by:2433
$9
readCount
$4
1097
*4
$4
HSET
$25
hash:csdn:article:by:2433
$14
articleContent
$40
csdn/java/1_1_1_2_1504264736.722254.html
*4
$4
HSET
$25
hash:csdn:article:by:2433
$4
date
$16
2015-11-26 23:11
*4
$4
HSET
$25
hash:csdn:article:by:2433
$6
author
$7
YSC1123
*4
$4
HSET
$25
hash:csdn:article:by:2433
$12
commentCount
$2
14
*4
$4
HSET
$25
hash:csdn:article:by:2433
$9
labelList
$25
北京,oracle,工作,sql,
*4
$4
HSET
$25
hash:csdn:article:by:2433
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2433
$10
authorLink
$26
http://my.csdn.net/YSC1123
*4
$4
HSET
$25
hash:csdn:article:by:2433
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2434
$2
id
$4
2434
*4
$4
HSET
$25
hash:csdn:article:by:2434
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2434
$3
url
$59
http://blog.csdn.net/dlutbrucezhang/article/details/9168289
*4
$4
HSET
$25
hash:csdn:article:by:2434
$5
title
$34
Linux--缺页中断和交换技术
*4
$4
HSET
$25
hash:csdn:article:by:2434
$4
desc
$255
1．请求调页中断：进程线性地址空间里的页面不必常驻内存，例如进程的分配请求被理解满足，空间仅仅保留vm_area_struct的空间，页面可能被交换到后援存储器，或者写一个只读页面(COW)。Linu...
*4
$4
HSET
$25
hash:csdn:article:by:2434
$9
readCount
$4
1835
*4
$4
HSET
$25
hash:csdn:article:by:2434
$14
articleContent
$42
csdn/linux/1_1_1_16_1504264737.003872.html
*4
$4
HSET
$25
hash:csdn:article:by:2434
$4
date
$16
2013-06-25 11:11
*4
$4
HSET
$25
hash:csdn:article:by:2434
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2434
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2434
$9
labelList
$34
Cache,磁盘,链表,内存,struct,
*4
$4
HSET
$25
hash:csdn:article:by:2434
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2434
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2434
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2435
$2
id
$4
2435
*4
$4
HSET
$25
hash:csdn:article:by:2435
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2435
$3
url
$53
http://blog.csdn.net/ysc1123/article/details/50462924
*4
$4
HSET
$25
hash:csdn:article:by:2435
$5
title
$39
静态代理和动态代理的再学习
*4
$4
HSET
$25
hash:csdn:article:by:2435
$4
desc
$289
学过设计模式的编友们，一定对代理模式很熟悉，最近在学习中发现Spring中更好的使用了动态带来来降低耦合，提高代码复用性，那么为什么要使用动态代理？动态代理和我们之前使用的普通代理有什么区别和好处？
...
*4
$4
HSET
$25
hash:csdn:article:by:2435
$9
readCount
$3
773
*4
$4
HSET
$25
hash:csdn:article:by:2435
$14
articleContent
$40
csdn/java/1_1_1_4_1504264737.929776.html
*4
$4
HSET
$25
hash:csdn:article:by:2435
$4
date
$16
2016-01-05 17:30
*4
$4
HSET
$25
hash:csdn:article:by:2435
$6
author
$7
YSC1123
*4
$4
HSET
$25
hash:csdn:article:by:2435
$12
commentCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2435
$9
labelList
$29
Java,设计模式,ssh,spring,
*4
$4
HSET
$25
hash:csdn:article:by:2435
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2435
$10
authorLink
$26
http://my.csdn.net/YSC1123
*4
$4
HSET
$25
hash:csdn:article:by:2435
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2436
$2
id
$4
2436
*4
$4
HSET
$25
hash:csdn:article:by:2436
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2436
$3
url
$59
http://blog.csdn.net/dlutbrucezhang/article/details/9173951
*4
$4
HSET
$25
hash:csdn:article:by:2436
$5
title
$33
Linux0.11进程切换和TSS结构
*4
$4
HSET
$25
hash:csdn:article:by:2436
$4
desc
$244
TSS 全称为task state segment，是指在操作系统进程管理的过程中，进程切换时的任务现场信息。 　　      X86体系从硬件上支持任务间的切换。为此目的，它增设了一个新段：任务状态...
*4
$4
HSET
$25
hash:csdn:article:by:2436
$9
readCount
$4
1686
*4
$4
HSET
$25
hash:csdn:article:by:2436
$14
articleContent
$42
csdn/linux/1_1_1_15_1504264737.978957.html
*4
$4
HSET
$25
hash:csdn:article:by:2436
$4
date
$16
2013-06-25 22:11
*4
$4
HSET
$25
hash:csdn:article:by:2436
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2436
$12
commentCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2436
$9
labelList
$49
Linux,struct,进程切换,进程调度,时间片,
*4
$4
HSET
$25
hash:csdn:article:by:2436
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2436
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2436
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2437
$2
id
$4
2437
*4
$4
HSET
$25
hash:csdn:article:by:2437
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2437
$3
url
$53
http://blog.csdn.net/ysc1123/article/details/48004933
*4
$4
HSET
$25
hash:csdn:article:by:2437
$5
title
$62
笨鸟先飞之Java--MySql中文数据乱码为哪般？？？
*4
$4
HSET
$25
hash:csdn:article:by:2437
$4
desc
$141
看问题要全面，在解决问题的过程中要学者全面分析和思考问题，不要犯”头痛医头脚痛医脚“的错误！！
*4
$4
HSET
$25
hash:csdn:article:by:2437
$9
readCount
$3
936
*4
$4
HSET
$25
hash:csdn:article:by:2437
$14
articleContent
$40
csdn/java/1_1_1_6_1504264738.898466.html
*4
$4
HSET
$25
hash:csdn:article:by:2437
$4
date
$16
2015-08-27 20:12
*4
$4
HSET
$25
hash:csdn:article:by:2437
$6
author
$7
YSC1123
*4
$4
HSET
$25
hash:csdn:article:by:2437
$12
commentCount
$2
35
*4
$4
HSET
$25
hash:csdn:article:by:2437
$9
labelList
$12
乱码,Java,
*4
$4
HSET
$25
hash:csdn:article:by:2437
$9
likeCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2437
$10
authorLink
$26
http://my.csdn.net/YSC1123
*4
$4
HSET
$25
hash:csdn:article:by:2437
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2438
$2
id
$4
2438
*4
$4
HSET
$25
hash:csdn:article:by:2438
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2438
$3
url
$59
http://blog.csdn.net/dlutbrucezhang/article/details/9207167
*4
$4
HSET
$25
hash:csdn:article:by:2438
$5
title
$21
Linux0.11启动过程
*4
$4
HSET
$25
hash:csdn:article:by:2438
$4
desc
$277
从开机加电，到执行main函数之前的过程好吧，这里应该是有执行3个汇编的文件，但是我不太了解。囧从main函数，到启动OK（即可以响应用户操作了）这个步骤做了3件事情：创建进程0，使之具备在主机中进行...
*4
$4
HSET
$25
hash:csdn:article:by:2438
$9
readCount
$4
1083
*4
$4
HSET
$25
hash:csdn:article:by:2438
$14
articleContent
$42
csdn/linux/1_1_1_12_1504264738.965395.html
*4
$4
HSET
$25
hash:csdn:article:by:2438
$4
date
$16
2013-06-30 13:32
*4
$4
HSET
$25
hash:csdn:article:by:2438
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2438
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2438
$9
labelList
$43
Linux,行业数据,管理,硬盘,Structure,
*4
$4
HSET
$25
hash:csdn:article:by:2438
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2438
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2438
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2439
$2
id
$4
2439
*4
$4
HSET
$25
hash:csdn:article:by:2439
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2439
$3
url
$53
http://blog.csdn.net/ysc1123/article/details/45421777
*4
$4
HSET
$25
hash:csdn:article:by:2439
$5
title
$75
严重：StandardServer.await:create[localhost 8005]:java.net.BindException
*4
$4
HSET
$25
hash:csdn:article:by:2439
$4
desc
$254
在使用tomcat服务器运行程序时，我们可能会遇到这样的问题：
 
       由上面的信息可以发现，该问题是由于8005端口号已经被占用，所以我们需要对这样的端口号进行设置，因而找到tomca...
*4
$4
HSET
$25
hash:csdn:article:by:2439
$9
readCount
$4
1995
*4
$4
HSET
$25
hash:csdn:article:by:2439
$14
articleContent
$40
csdn/java/1_1_1_7_1504264739.807179.html
*4
$4
HSET
$25
hash:csdn:article:by:2439
$4
date
$16
2015-05-01 21:07
*4
$4
HSET
$25
hash:csdn:article:by:2439
$6
author
$7
YSC1123
*4
$4
HSET
$25
hash:csdn:article:by:2439
$12
commentCount
$2
10
*4
$4
HSET
$25
hash:csdn:article:by:2439
$9
labelList
$28
drp,socket,myeclipse,tomcat,
*4
$4
HSET
$25
hash:csdn:article:by:2439
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2439
$10
authorLink
$26
http://my.csdn.net/YSC1123
*4
$4
HSET
$25
hash:csdn:article:by:2439
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2440
$2
id
$4
2440
*4
$4
HSET
$25
hash:csdn:article:by:2440
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2440
$3
url
$59
http://blog.csdn.net/dlutbrucezhang/article/details/9319577
*4
$4
HSET
$25
hash:csdn:article:by:2440
$5
title
$25
Linux 句柄是什么 ？
*4
$4
HSET
$25
hash:csdn:article:by:2440
$4
desc
$283
1.句柄就是一个标识符，只要获得对象的句柄，我们就可以对对象进行任意的操作。2.句柄不是指针，操作系统用句柄可以找到一块内存，这个句柄可能是标识符，map的key，也可能是指针，看操作系统怎么处理的了...
*4
$4
HSET
$25
hash:csdn:article:by:2440
$9
readCount
$4
6626
*4
$4
HSET
$25
hash:csdn:article:by:2440
$14
articleContent
$40
csdn/linux/1_1_1_4_1504264740.23272.html
*4
$4
HSET
$25
hash:csdn:article:by:2440
$4
date
$16
2013-07-13 16:55
*4
$4
HSET
$25
hash:csdn:article:by:2440
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2440
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2440
$9
labelList
$34
Linux,文件,句柄,打开,读取,
*4
$4
HSET
$25
hash:csdn:article:by:2440
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2440
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2440
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2441
$2
id
$4
2441
*4
$4
HSET
$25
hash:csdn:article:by:2441
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2441
$3
url
$53
http://blog.csdn.net/ysc1123/article/details/47955299
*4
$4
HSET
$25
hash:csdn:article:by:2441
$5
title
$52
笨鸟先飞之Java---缠缠绵绵的注解和注释
*4
$4
HSET
$25
hash:csdn:article:by:2441
$4
desc
$202
在平时的编程中注释一直与我们为伴，但是在Java编程中我们会经常性的使用注解。一字之差，也不知是否会有“失之毫厘差以千里”之说？？一起来看：
*4
$4
HSET
$25
hash:csdn:article:by:2441
$9
readCount
$4
1763
*4
$4
HSET
$25
hash:csdn:article:by:2441
$14
articleContent
$40
csdn/java/1_1_1_5_1504264740.836072.html
*4
$4
HSET
$25
hash:csdn:article:by:2441
$4
date
$16
2015-08-24 19:29
*4
$4
HSET
$25
hash:csdn:article:by:2441
$6
author
$7
YSC1123
*4
$4
HSET
$25
hash:csdn:article:by:2441
$12
commentCount
$2
28
*4
$4
HSET
$25
hash:csdn:article:by:2441
$9
labelList
$18
Java,笨鸟先飞,
*4
$4
HSET
$25
hash:csdn:article:by:2441
$9
likeCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2441
$10
authorLink
$26
http://my.csdn.net/YSC1123
*4
$4
HSET
$25
hash:csdn:article:by:2441
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2442
$2
id
$4
2442
*4
$4
HSET
$25
hash:csdn:article:by:2442
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2442
$3
url
$59
http://blog.csdn.net/dlutbrucezhang/article/details/9214031
*4
$4
HSET
$25
hash:csdn:article:by:2442
$5
title
$36
两篇文章说中断和异常之一
*4
$4
HSET
$25
hash:csdn:article:by:2442
$4
desc
$168
转载自：http://www.cnblogs.com/javawebsoa/archive/2013/05/05/3061787.html中断和异常的概念* 中断： 硬件通过中断来通知内核。中断是一种...
*4
$4
HSET
$25
hash:csdn:article:by:2442
$9
readCount
$4
1214
*4
$4
HSET
$25
hash:csdn:article:by:2442
$14
articleContent
$41
csdn/linux/1_1_1_10_1504264741.30052.html
*4
$4
HSET
$25
hash:csdn:article:by:2442
$4
date
$16
2013-07-01 14:46
*4
$4
HSET
$25
hash:csdn:article:by:2442
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2442
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2442
$9
labelList
$38
异常,职场,内核,struct,处理器,
*4
$4
HSET
$25
hash:csdn:article:by:2442
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2442
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2442
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2443
$2
id
$4
2443
*4
$4
HSET
$25
hash:csdn:article:by:2443
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2443
$3
url
$53
http://blog.csdn.net/ysc1123/article/details/50416919
*4
$4
HSET
$25
hash:csdn:article:by:2443
$5
title
$27
数字溢出的那点事儿
*4
$4
HSET
$25
hash:csdn:article:by:2443
$4
desc
$277
近期的工作中，使用报表的频度越来越高，虽然展示数据更加方便了，但是报表加载数据时的各种问题也就迎之而来，最典型的问题：数字溢出；
      先来看一下运行的错误日志：   
    ❦故事背景：
 ...
*4
$4
HSET
$25
hash:csdn:article:by:2443
$9
readCount
$3
797
*4
$4
HSET
$25
hash:csdn:article:by:2443
$14
articleContent
$40
csdn/java/1_1_1_3_1504264741.909615.html
*4
$4
HSET
$25
hash:csdn:article:by:2443
$4
date
$16
2015-12-28 10:12
*4
$4
HSET
$25
hash:csdn:article:by:2443
$6
author
$7
YSC1123
*4
$4
HSET
$25
hash:csdn:article:by:2443
$12
commentCount
$1
8
*4
$4
HSET
$25
hash:csdn:article:by:2443
$9
labelList
$19
北京,Java,报表,
*4
$4
HSET
$25
hash:csdn:article:by:2443
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2443
$10
authorLink
$26
http://my.csdn.net/YSC1123
*4
$4
HSET
$25
hash:csdn:article:by:2443
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2444
$2
id
$4
2444
*4
$4
HSET
$25
hash:csdn:article:by:2444
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2444
$3
url
$59
http://blog.csdn.net/dlutbrucezhang/article/details/9212067
*4
$4
HSET
$25
hash:csdn:article:by:2444
$5
title
$24
Linux 进程等待队列
*4
$4
HSET
$25
hash:csdn:article:by:2444
$4
desc
$259
Linux内核的等待队列是以双循环链表为基础数据结构，与进程调度机制紧密结合，能够用于实现核心的异步事件通知机制。在这个链表中，有两种数据结构：等待队列头（wait_queue_head_t）和等待队...
*4
$4
HSET
$25
hash:csdn:article:by:2444
$9
readCount
$4
1356
*4
$4
HSET
$25
hash:csdn:article:by:2444
$14
articleContent
$42
csdn/linux/1_1_1_11_1504264742.207041.html
*4
$4
HSET
$25
hash:csdn:article:by:2444
$4
date
$16
2013-07-01 10:51
*4
$4
HSET
$25
hash:csdn:article:by:2444
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2444
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2444
$9
labelList
$30
Linux,struct,数据结构,宏,
*4
$4
HSET
$25
hash:csdn:article:by:2444
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2444
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2444
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2445
$2
id
$4
2445
*4
$4
HSET
$25
hash:csdn:article:by:2445
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2445
$3
url
$59
http://blog.csdn.net/dlutbrucezhang/article/details/9214061
*4
$4
HSET
$25
hash:csdn:article:by:2445
$5
title
$36
两篇文章说异常和中断之二
*4
$4
HSET
$25
hash:csdn:article:by:2445
$4
desc
$282
一、基本概念1. 产生的位置发生的时刻时序中断CPU外部随机异步异常CPU正在执行的程序一条指令终止执行后同步2.由中断或异常执行的代码不是一个进程，而是一个内核控制路径，代表中断发生时正在运行的进程...
*4
$4
HSET
$25
hash:csdn:article:by:2445
$9
readCount
$4
1606
*4
$4
HSET
$25
hash:csdn:article:by:2445
$14
articleContent
$41
csdn/linux/1_1_1_9_1504264743.186532.html
*4
$4
HSET
$25
hash:csdn:article:by:2445
$4
date
$16
2013-07-01 14:47
*4
$4
HSET
$25
hash:csdn:article:by:2445
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2445
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2445
$9
labelList
$37
异常,Linux,栈,异常处理,内核,
*4
$4
HSET
$25
hash:csdn:article:by:2445
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2445
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2445
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2446
$2
id
$4
2446
*4
$4
HSET
$25
hash:csdn:article:by:2446
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2446
$3
url
$59
http://blog.csdn.net/dlutbrucezhang/article/details/9287093
*4
$4
HSET
$25
hash:csdn:article:by:2446
$5
title
$26
Linux根文件系统介绍
*4
$4
HSET
$25
hash:csdn:article:by:2446
$4
desc
$293
系统　　根文件系统首先是一种文件系统，但是相对于普通的文件系统，它的特殊之处在于，它是内核启动时所mount的第一个文件系统，内核代码映像文件保存在根文件系统中，而系统引导启动程序会在根文件系统挂载之...
*4
$4
HSET
$25
hash:csdn:article:by:2446
$9
readCount
$4
5299
*4
$4
HSET
$25
hash:csdn:article:by:2446
$14
articleContent
$41
csdn/linux/1_1_1_8_1504264744.190514.html
*4
$4
HSET
$25
hash:csdn:article:by:2446
$4
date
$16
2013-07-10 08:52
*4
$4
HSET
$25
hash:csdn:article:by:2446
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2446
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2446
$9
labelList
$37
根文件系统,Linux,Root,多用户,
*4
$4
HSET
$25
hash:csdn:article:by:2446
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2446
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2446
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2447
$2
id
$4
2447
*4
$4
HSET
$25
hash:csdn:article:by:2447
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2447
$3
url
$59
http://blog.csdn.net/dlutbrucezhang/article/details/9300741
*4
$4
HSET
$25
hash:csdn:article:by:2447
$5
title
$58
Linux0.11 创建进程的过程分析--fork函数的使用
*4
$4
HSET
$25
hash:csdn:article:by:2447
$4
desc
$147
/*
* linux/kernel/fork.c
*
* (C) 1991 Linus Torvalds
*/
/*
注意：signal.c和fork.c文件的编译选项内不能有vc变量优化选项/Og，...
*4
$4
HSET
$25
hash:csdn:article:by:2447
$9
readCount
$4
1352
*4
$4
HSET
$25
hash:csdn:article:by:2447
$14
articleContent
$41
csdn/linux/1_1_1_7_1504264745.333593.html
*4
$4
HSET
$25
hash:csdn:article:by:2447
$4
date
$16
2013-07-11 14:52
*4
$4
HSET
$25
hash:csdn:article:by:2447
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2447
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2447
$9
labelList
$13
fork,linux,C,
*4
$4
HSET
$25
hash:csdn:article:by:2447
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2447
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2447
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2448
$2
id
$4
2448
*4
$4
HSET
$25
hash:csdn:article:by:2448
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2448
$3
url
$59
http://blog.csdn.net/dlutbrucezhang/article/details/9196129
*4
$4
HSET
$25
hash:csdn:article:by:2448
$5
title
$33
深入解析Linux中的fork函数
*4
$4
HSET
$25
hash:csdn:article:by:2448
$4
desc
$189
1、定义
#include 
#include
pid_t fork( void );pid_t 是一个宏定义，其实质是int，被定义在#include中返回值：若成功调用一次则返回两个值，子进程返回...
*4
$4
HSET
$25
hash:csdn:article:by:2448
$9
readCount
$4
1633
*4
$4
HSET
$25
hash:csdn:article:by:2448
$14
articleContent
$42
csdn/linux/1_1_1_14_1504264746.601816.html
*4
$4
HSET
$25
hash:csdn:article:by:2448
$4
date
$16
2013-06-28 13:43
*4
$4
HSET
$25
hash:csdn:article:by:2448
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2448
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2448
$9
labelList
$35
Linux,printf,存储,Unix,Prototype,
*4
$4
HSET
$25
hash:csdn:article:by:2448
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2448
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2448
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2449
$2
id
$4
2449
*4
$4
HSET
$25
hash:csdn:article:by:2449
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2449
$3
url
$59
http://blog.csdn.net/dlutbrucezhang/article/details/9329591
*4
$4
HSET
$25
hash:csdn:article:by:2449
$5
title
$48
Linux0.11中对文本文件进行修改的策略
*4
$4
HSET
$25
hash:csdn:article:by:2449
$4
desc
$191
现在，假设 hello.txt 是硬盘上已有的一个文件，而且内容为 “hello, world” ，在文件的当前指针设置完毕后，我们来介绍 sys_read , sys_write , sys_lse...
*4
$4
HSET
$25
hash:csdn:article:by:2449
$9
readCount
$4
1546
*4
$4
HSET
$25
hash:csdn:article:by:2449
$14
articleContent
$41
csdn/linux/1_1_1_2_1504264747.336688.html
*4
$4
HSET
$25
hash:csdn:article:by:2449
$4
date
$16
2013-07-15 14:05
*4
$4
HSET
$25
hash:csdn:article:by:2449
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2449
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2449
$9
labelList
$52
Linux,文件修改,文件指针,文件偏移,函数,
*4
$4
HSET
$25
hash:csdn:article:by:2449
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2449
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2449
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2450
$2
id
$4
2450
*4
$4
HSET
$25
hash:csdn:article:by:2450
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2450
$3
url
$59
http://blog.csdn.net/dlutbrucezhang/article/details/9303621
*4
$4
HSET
$25
hash:csdn:article:by:2450
$5
title
$18
什么是文件头
*4
$4
HSET
$25
hash:csdn:article:by:2450
$4
desc
$229
要求每个文件均有特殊的、可识别的文件头。文件头偏移	代号	数据类型	字节数	默认值	名称	说明0	FUM	P-BCD	2	 文件统一标识	所有文件均含有此标识符2	FDT	P-BCD	1	 文件数据类...
*4
$4
HSET
$25
hash:csdn:article:by:2450
$9
readCount
$4
2182
*4
$4
HSET
$25
hash:csdn:article:by:2450
$14
articleContent
$40
csdn/linux/1_1_1_6_1504264748.36518.html
*4
$4
HSET
$25
hash:csdn:article:by:2450
$4
date
$16
2013-07-11 19:09
*4
$4
HSET
$25
hash:csdn:article:by:2450
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2450
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2450
$9
labelList
$34
java,文件头,文件类型,Linux,
*4
$4
HSET
$25
hash:csdn:article:by:2450
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2450
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2450
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2451
$2
id
$4
2451
*4
$4
HSET
$25
hash:csdn:article:by:2451
$10
categroyId
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2451
$3
url
$59
http://blog.csdn.net/dlutbrucezhang/article/details/9326857
*4
$4
HSET
$25
hash:csdn:article:by:2451
$5
title
$30
进程的用户栈和内核栈
*4
$4
HSET
$25
hash:csdn:article:by:2451
$4
desc
$303
进程是程序的一次执行过程。用剧本和演出来类比，程序相当于剧本，而进程则相当于剧本的一次演出，舞台、灯光则相当于进程的运行环境。进程的堆栈每个进程都有自己的堆栈，内核在创建一个新的进程时，在创建进程控制...
*4
$4
HSET
$25
hash:csdn:article:by:2451
$9
readCount
$4
2803
*4
$4
HSET
$25
hash:csdn:article:by:2451
$14
articleContent
$41
csdn/linux/1_1_1_3_1504264749.460836.html
*4
$4
HSET
$25
hash:csdn:article:by:2451
$4
date
$16
2013-07-14 22:11
*4
$4
HSET
$25
hash:csdn:article:by:2451
$6
author
$14
DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2451
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2451
$9
labelList
$26
Linux,进程管理,内存,
*4
$4
HSET
$25
hash:csdn:article:by:2451
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2451
$10
authorLink
$33
http://my.csdn.net/DLUTBruceZhang
*4
$4
HSET
$25
hash:csdn:article:by:2451
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2452
$2
id
$4
2452
*4
$4
HSET
$25
hash:csdn:article:by:2452
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2452
$3
url
$56
http://blog.csdn.net/wiker_yong/article/details/50781969
*4
$4
HSET
$25
hash:csdn:article:by:2452
$5
title
$29
JAVA设计模式-代理模式
*4
$4
HSET
$25
hash:csdn:article:by:2452
$4
desc
$303
代理模式代理模式使用代理对象完成用户请求，屏蔽用户对真实对象的访问。现实世界的代理人被授权执行当事人的一些事宜，无需当事人出面，从第三方的角度看，似乎当事人并不存在，因为他只和代理人通信。而事实上代理...
*4
$4
HSET
$25
hash:csdn:article:by:2452
$9
readCount
$3
943
*4
$4
HSET
$25
hash:csdn:article:by:2452
$14
articleContent
$40
csdn/java/1_0_1_0_1504264756.611221.html
*4
$4
HSET
$25
hash:csdn:article:by:2452
$4
date
$16
2016-03-02 18:08
*4
$4
HSET
$25
hash:csdn:article:by:2452
$6
author
$15
yangwei19680827
*4
$4
HSET
$25
hash:csdn:article:by:2452
$12
commentCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2452
$9
labelList
$17
java设计模式,
*4
$4
HSET
$25
hash:csdn:article:by:2452
$9
likeCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2452
$10
authorLink
$34
http://my.csdn.net/yangwei19680827
*4
$4
HSET
$25
hash:csdn:article:by:2452
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2453
$2
id
$4
2453
*4
$4
HSET
$25
hash:csdn:article:by:2453
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2453
$3
url
$54
http://blog.csdn.net/odeviloo/article/details/52382338
*4
$4
HSET
$25
hash:csdn:article:by:2453
$5
title
$48
一天一个设计模式---分类与六大原则
*4
$4
HSET
$25
hash:csdn:article:by:2453
$4
desc
$176
介绍23中设计模式的分类方式，结合《设计模式》一书的插图更加明显。详细说明设计模式中的六大原则，结合场景分析其解决方案。
*4
$4
HSET
$25
hash:csdn:article:by:2453
$9
readCount
$4
2658
*4
$4
HSET
$25
hash:csdn:article:by:2453
$14
articleContent
$40
csdn/java/1_0_1_0_1504264761.935354.html
*4
$4
HSET
$25
hash:csdn:article:by:2453
$4
date
$16
2016-08-31 14:37
*4
$4
HSET
$25
hash:csdn:article:by:2453
$6
author
$8
oDeviloo
*4
$4
HSET
$25
hash:csdn:article:by:2453
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2453
$9
labelList
$13
设计模式,
*4
$4
HSET
$25
hash:csdn:article:by:2453
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2453
$10
authorLink
$27
http://my.csdn.net/oDeviloo
*4
$4
HSET
$25
hash:csdn:article:by:2453
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2454
$2
id
$4
2454
*4
$4
HSET
$25
hash:csdn:article:by:2454
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2454
$3
url
$54
http://blog.csdn.net/odeviloo/article/details/53292575
*4
$4
HSET
$25
hash:csdn:article:by:2454
$5
title
$42
一天一个设计模式---中介者模式
*4
$4
HSET
$25
hash:csdn:article:by:2454
$4
desc
$303
我们去租房子时，每次价格变动的时候，房东通知下面的各个有意向的房客，而我们又需要对每个房东进行反馈。这样，一个房客和每个房东，以及一个房东和每个房客的关系都紧密相连。如果我们通过中介，中介会帮我们处理...
*4
$4
HSET
$25
hash:csdn:article:by:2454
$9
readCount
$3
570
*4
$4
HSET
$25
hash:csdn:article:by:2454
$14
articleContent
$39
csdn/java/1_0_1_1_1504264762.85544.html
*4
$4
HSET
$25
hash:csdn:article:by:2454
$4
date
$16
2016-11-22 22:09
*4
$4
HSET
$25
hash:csdn:article:by:2454
$6
author
$8
oDeviloo
*4
$4
HSET
$25
hash:csdn:article:by:2454
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2454
$9
labelList
$13
设计模式,
*4
$4
HSET
$25
hash:csdn:article:by:2454
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2454
$10
authorLink
$27
http://my.csdn.net/oDeviloo
*4
$4
HSET
$25
hash:csdn:article:by:2454
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2455
$2
id
$4
2455
*4
$4
HSET
$25
hash:csdn:article:by:2455
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2455
$3
url
$54
http://blog.csdn.net/odeviloo/article/details/52458677
*4
$4
HSET
$25
hash:csdn:article:by:2455
$5
title
$39
一天一个设计模式---享元模式
*4
$4
HSET
$25
hash:csdn:article:by:2455
$4
desc
$246
这是在这么多种设计模式中极少的以提高程序性能为目的的模式。其主要思想为—如果系统中存在多个相同对象，那么只需要一份对象的拷贝，而不必在每次使用的时候去新建一个对象。
*4
$4
HSET
$25
hash:csdn:article:by:2455
$9
readCount
$3
733
*4
$4
HSET
$25
hash:csdn:article:by:2455
$14
articleContent
$41
csdn/java/1_0_1_18_1504264764.008791.html
*4
$4
HSET
$25
hash:csdn:article:by:2455
$4
date
$16
2016-09-07 13:27
*4
$4
HSET
$25
hash:csdn:article:by:2455
$6
author
$8
oDeviloo
*4
$4
HSET
$25
hash:csdn:article:by:2455
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2455
$9
labelList
$20
设计模式,性能,
*4
$4
HSET
$25
hash:csdn:article:by:2455
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2455
$10
authorLink
$27
http://my.csdn.net/oDeviloo
*4
$4
HSET
$25
hash:csdn:article:by:2455
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2456
$2
id
$4
2456
*4
$4
HSET
$25
hash:csdn:article:by:2456
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2456
$3
url
$54
http://blog.csdn.net/odeviloo/article/details/52420690
*4
$4
HSET
$25
hash:csdn:article:by:2456
$5
title
$39
一天一个设计模式---代理模式
*4
$4
HSET
$25
hash:csdn:article:by:2456
$4
desc
$152
让我通过成龙大哥和经纪人的故事来讲解静态代理。通过JDK动态代理和CGLIB动态代理详细说明动态代理的实现方法。
*4
$4
HSET
$25
hash:csdn:article:by:2456
$9
readCount
$3
657
*4
$4
HSET
$25
hash:csdn:article:by:2456
$14
articleContent
$41
csdn/java/1_0_1_19_1504264764.951108.html
*4
$4
HSET
$25
hash:csdn:article:by:2456
$4
date
$16
2016-09-03 00:53
*4
$4
HSET
$25
hash:csdn:article:by:2456
$6
author
$8
oDeviloo
*4
$4
HSET
$25
hash:csdn:article:by:2456
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2456
$9
labelList
$13
设计模式,
*4
$4
HSET
$25
hash:csdn:article:by:2456
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2456
$10
authorLink
$27
http://my.csdn.net/oDeviloo
*4
$4
HSET
$25
hash:csdn:article:by:2456
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2457
$2
id
$4
2457
*4
$4
HSET
$25
hash:csdn:article:by:2457
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2457
$3
url
$54
http://blog.csdn.net/odeviloo/article/details/52471559
*4
$4
HSET
$25
hash:csdn:article:by:2457
$5
title
$45
一天一个设计模式---抽象工厂模式
*4
$4
HSET
$25
hash:csdn:article:by:2457
$4
desc
$59
继续上篇文章讲述Pizza供应商和工厂的故事。
*4
$4
HSET
$25
hash:csdn:article:by:2457
$9
readCount
$3
979
*4
$4
HSET
$25
hash:csdn:article:by:2457
$14
articleContent
$41
csdn/java/1_0_1_17_1504264765.932739.html
*4
$4
HSET
$25
hash:csdn:article:by:2457
$4
date
$16
2016-09-08 14:55
*4
$4
HSET
$25
hash:csdn:article:by:2457
$6
author
$8
oDeviloo
*4
$4
HSET
$25
hash:csdn:article:by:2457
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2457
$9
labelList
$26
工厂模式,设计模式,
*4
$4
HSET
$25
hash:csdn:article:by:2457
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2457
$10
authorLink
$27
http://my.csdn.net/oDeviloo
*4
$4
HSET
$25
hash:csdn:article:by:2457
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2458
$2
id
$4
2458
*4
$4
HSET
$25
hash:csdn:article:by:2458
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2458
$3
url
$54
http://blog.csdn.net/odeviloo/article/details/53292643
*4
$4
HSET
$25
hash:csdn:article:by:2458
$5
title
$42
一天一个设计模式---迭代器模式
*4
$4
HSET
$25
hash:csdn:article:by:2458
$4
desc
$117
使用Array、List、Map我们一般都会进行迭代操作，现在照着源码，来实现自定义的迭代器。
*4
$4
HSET
$25
hash:csdn:article:by:2458
$9
readCount
$3
593
*4
$4
HSET
$25
hash:csdn:article:by:2458
$14
articleContent
$40
csdn/java/1_0_1_2_1504264767.120785.html
*4
$4
HSET
$25
hash:csdn:article:by:2458
$4
date
$16
2016-11-22 22:14
*4
$4
HSET
$25
hash:csdn:article:by:2458
$6
author
$8
oDeviloo
*4
$4
HSET
$25
hash:csdn:article:by:2458
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2458
$9
labelList
$23
设计模式,迭代器,
*4
$4
HSET
$25
hash:csdn:article:by:2458
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2458
$10
authorLink
$27
http://my.csdn.net/oDeviloo
*4
$4
HSET
$25
hash:csdn:article:by:2458
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2459
$2
id
$4
2459
*4
$4
HSET
$25
hash:csdn:article:by:2459
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2459
$3
url
$54
http://blog.csdn.net/odeviloo/article/details/52684935
*4
$4
HSET
$25
hash:csdn:article:by:2459
$5
title
$42
一天一个设计模式---生成器模式
*4
$4
HSET
$25
hash:csdn:article:by:2459
$4
desc
$303
玩过《我的世界》这类沙盒游戏的玩家，很多都是冲着其开放式的制作功能去的。比如，我们要建造一个房子就需要很多东西。使得同样的构建过程可以创建不同的表示场景：我们在创建对象时可能会碰到过一个问题，比如，如...
*4
$4
HSET
$25
hash:csdn:article:by:2459
$9
readCount
$4
1344
*4
$4
HSET
$25
hash:csdn:article:by:2459
$14
articleContent
$41
csdn/java/1_0_1_10_1504264768.147976.html
*4
$4
HSET
$25
hash:csdn:article:by:2459
$4
date
$16
2016-09-27 21:33
*4
$4
HSET
$25
hash:csdn:article:by:2459
$6
author
$8
oDeviloo
*4
$4
HSET
$25
hash:csdn:article:by:2459
$12
commentCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2459
$9
labelList
$13
设计模式,
*4
$4
HSET
$25
hash:csdn:article:by:2459
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2459
$10
authorLink
$27
http://my.csdn.net/oDeviloo
*4
$4
HSET
$25
hash:csdn:article:by:2459
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2460
$2
id
$4
2460
*4
$4
HSET
$25
hash:csdn:article:by:2460
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2460
$3
url
$54
http://blog.csdn.net/odeviloo/article/details/52535105
*4
$4
HSET
$25
hash:csdn:article:by:2460
$5
title
$42
一天一个设计模式---适配器模式
*4
$4
HSET
$25
hash:csdn:article:by:2460
$4
desc
$129
小明从香港买了港版的iphone7 puls，回家发现插头用不了，但是通过转换头我们就能解决这个问题。
*4
$4
HSET
$25
hash:csdn:article:by:2460
$9
readCount
$3
762
*4
$4
HSET
$25
hash:csdn:article:by:2460
$14
articleContent
$41
csdn/java/1_0_1_14_1504264768.983949.html
*4
$4
HSET
$25
hash:csdn:article:by:2460
$4
date
$16
2016-09-14 09:40
*4
$4
HSET
$25
hash:csdn:article:by:2460
$6
author
$8
oDeviloo
*4
$4
HSET
$25
hash:csdn:article:by:2460
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2460
$9
labelList
$13
设计模式,
*4
$4
HSET
$25
hash:csdn:article:by:2460
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2460
$10
authorLink
$27
http://my.csdn.net/oDeviloo
*4
$4
HSET
$25
hash:csdn:article:by:2460
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2461
$2
id
$4
2461
*4
$4
HSET
$25
hash:csdn:article:by:2461
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2461
$3
url
$54
http://blog.csdn.net/odeviloo/article/details/52488283
*4
$4
HSET
$25
hash:csdn:article:by:2461
$5
title
$42
一天一个设计模式---装饰者模式
*4
$4
HSET
$25
hash:csdn:article:by:2461
$4
desc
$63
通过奶茶哥哥开奶茶店的例子来说说装饰者模式
*4
$4
HSET
$25
hash:csdn:article:by:2461
$9
readCount
$3
534
*4
$4
HSET
$25
hash:csdn:article:by:2461
$14
articleContent
$41
csdn/java/1_0_1_16_1504264769.980433.html
*4
$4
HSET
$25
hash:csdn:article:by:2461
$4
date
$16
2016-09-09 16:18
*4
$4
HSET
$25
hash:csdn:article:by:2461
$6
author
$8
oDeviloo
*4
$4
HSET
$25
hash:csdn:article:by:2461
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2461
$9
labelList
$13
设计模式,
*4
$4
HSET
$25
hash:csdn:article:by:2461
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2461
$10
authorLink
$27
http://my.csdn.net/oDeviloo
*4
$4
HSET
$25
hash:csdn:article:by:2461
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2462
$2
id
$4
2462
*4
$4
HSET
$25
hash:csdn:article:by:2462
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2462
$3
url
$54
http://blog.csdn.net/odeviloo/article/details/52507234
*4
$4
HSET
$25
hash:csdn:article:by:2462
$5
title
$42
一天一个设计模式---观察者模式
*4
$4
HSET
$25
hash:csdn:article:by:2462
$4
desc
$81
班里的同学在玩手机，聊天，而殊不知老师就在窗边观察着。
*4
$4
HSET
$25
hash:csdn:article:by:2462
$9
readCount
$3
934
*4
$4
HSET
$25
hash:csdn:article:by:2462
$14
articleContent
$40
csdn/java/1_0_1_15_1504264770.91447.html
*4
$4
HSET
$25
hash:csdn:article:by:2462
$4
date
$16
2016-09-11 22:56
*4
$4
HSET
$25
hash:csdn:article:by:2462
$6
author
$8
oDeviloo
*4
$4
HSET
$25
hash:csdn:article:by:2462
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2462
$9
labelList
$13
设计模式,
*4
$4
HSET
$25
hash:csdn:article:by:2462
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2462
$10
authorLink
$27
http://my.csdn.net/oDeviloo
*4
$4
HSET
$25
hash:csdn:article:by:2462
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2463
$2
id
$4
2463
*4
$4
HSET
$25
hash:csdn:article:by:2463
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2463
$3
url
$54
http://blog.csdn.net/odeviloo/article/details/52600518
*4
$4
HSET
$25
hash:csdn:article:by:2463
$5
title
$39
一天一个设计模式---状态模式
*4
$4
HSET
$25
hash:csdn:article:by:2463
$4
desc
$138
有些生存类游戏，比如《饥荒》中树木生长就是一个非常复杂的过程。现在我们就来模拟树木生长过程。
*4
$4
HSET
$25
hash:csdn:article:by:2463
$9
readCount
$3
962
*4
$4
HSET
$25
hash:csdn:article:by:2463
$14
articleContent
$41
csdn/java/1_0_1_13_1504264771.998414.html
*4
$4
HSET
$25
hash:csdn:article:by:2463
$4
date
$16
2016-09-20 21:39
*4
$4
HSET
$25
hash:csdn:article:by:2463
$6
author
$8
oDeviloo
*4
$4
HSET
$25
hash:csdn:article:by:2463
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2463
$9
labelList
$13
设计模式,
*4
$4
HSET
$25
hash:csdn:article:by:2463
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2463
$10
authorLink
$27
http://my.csdn.net/oDeviloo
*4
$4
HSET
$25
hash:csdn:article:by:2463
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2464
$2
id
$4
2464
*4
$4
HSET
$25
hash:csdn:article:by:2464
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2464
$3
url
$54
http://blog.csdn.net/odeviloo/article/details/52671340
*4
$4
HSET
$25
hash:csdn:article:by:2464
$5
title
$45
一天一个设计模式---模板方法模式
*4
$4
HSET
$25
hash:csdn:article:by:2464
$4
desc
$225
对于多个业务，它们的业务中有很多功能是相似的，有部分功能需要独自实现。这样我们就可以使用模板方法模式，将功能打散，抽取出更小的功能块，并减少重复代码。
*4
$4
HSET
$25
hash:csdn:article:by:2464
$9
readCount
$4
1279
*4
$4
HSET
$25
hash:csdn:article:by:2464
$14
articleContent
$40
csdn/java/1_0_1_11_1504264773.11834.html
*4
$4
HSET
$25
hash:csdn:article:by:2464
$4
date
$16
2016-09-26 16:21
*4
$4
HSET
$25
hash:csdn:article:by:2464
$6
author
$8
oDeviloo
*4
$4
HSET
$25
hash:csdn:article:by:2464
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2464
$9
labelList
$13
设计模式,
*4
$4
HSET
$25
hash:csdn:article:by:2464
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2464
$10
authorLink
$27
http://my.csdn.net/oDeviloo
*4
$4
HSET
$25
hash:csdn:article:by:2464
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2465
$2
id
$4
2465
*4
$4
HSET
$25
hash:csdn:article:by:2465
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2465
$3
url
$54
http://blog.csdn.net/odeviloo/article/details/52610961
*4
$4
HSET
$25
hash:csdn:article:by:2465
$5
title
$39
一天一个设计模式---策略模式
*4
$4
HSET
$25
hash:csdn:article:by:2465
$4
desc
$262
一套好的VR设备是十分昂贵的，在初期设备的价格高于官方报价。过了一段时间，卖家会降价，再过段时间，VR的势头过去，堆积的商品会进行促销。这里就可以使用策略模式来解决价格变动的问题。
*4
$4
HSET
$25
hash:csdn:article:by:2465
$9
readCount
$4
1360
*4
$4
HSET
$25
hash:csdn:article:by:2465
$14
articleContent
$41
csdn/java/1_0_1_12_1504264773.966487.html
*4
$4
HSET
$25
hash:csdn:article:by:2465
$4
date
$16
2016-09-21 17:50
*4
$4
HSET
$25
hash:csdn:article:by:2465
$6
author
$8
oDeviloo
*4
$4
HSET
$25
hash:csdn:article:by:2465
$12
commentCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2465
$9
labelList
$13
设计模式,
*4
$4
HSET
$25
hash:csdn:article:by:2465
$9
likeCount
$1
3
*4
$4
HSET
$25
hash:csdn:article:by:2465
$10
authorLink
$27
http://my.csdn.net/oDeviloo
*4
$4
HSET
$25
hash:csdn:article:by:2465
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2466
$2
id
$4
2466
*4
$4
HSET
$25
hash:csdn:article:by:2466
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2466
$3
url
$54
http://blog.csdn.net/odeviloo/article/details/52760783
*4
$4
HSET
$25
hash:csdn:article:by:2466
$5
title
$39
一天一个设计模式---原型模式
*4
$4
HSET
$25
hash:csdn:article:by:2466
$4
desc
$225
小米买了PSP，如果小明买的PSP和小米的使用的是同个对象，那么小明对其操作会导致小米的PSP也造成同样的改变。为了改变这种局面，我们就应该在应用中使用原型模式。
*4
$4
HSET
$25
hash:csdn:article:by:2466
$9
readCount
$3
910
*4
$4
HSET
$25
hash:csdn:article:by:2466
$14
articleContent
$40
csdn/java/1_0_1_9_1504264774.898729.html
*4
$4
HSET
$25
hash:csdn:article:by:2466
$4
date
$16
2016-10-08 21:34
*4
$4
HSET
$25
hash:csdn:article:by:2466
$6
author
$8
oDeviloo
*4
$4
HSET
$25
hash:csdn:article:by:2466
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2466
$9
labelList
$13
设计模式,
*4
$4
HSET
$25
hash:csdn:article:by:2466
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2466
$10
authorLink
$27
http://my.csdn.net/oDeviloo
*4
$4
HSET
$25
hash:csdn:article:by:2466
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2467
$2
id
$4
2467
*4
$4
HSET
$25
hash:csdn:article:by:2467
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2467
$3
url
$54
http://blog.csdn.net/odeviloo/article/details/53184547
*4
$4
HSET
$25
hash:csdn:article:by:2467
$5
title
$42
一天一个设计模式---解释器模式
*4
$4
HSET
$25
hash:csdn:article:by:2467
$4
desc
$177
对于语法的解释，是十分复杂的，比如打造一款计算器，我们需要让程序知道加减乘除和数字的关系，这个时候就可以用到解释器模式
*4
$4
HSET
$25
hash:csdn:article:by:2467
$9
readCount
$3
768
*4
$4
HSET
$25
hash:csdn:article:by:2467
$14
articleContent
$40
csdn/java/1_0_1_3_1504264775.981779.html
*4
$4
HSET
$25
hash:csdn:article:by:2467
$4
date
$16
2016-11-16 11:09
*4
$4
HSET
$25
hash:csdn:article:by:2467
$6
author
$8
oDeviloo
*4
$4
HSET
$25
hash:csdn:article:by:2467
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2467
$9
labelList
$13
设计模式,
*4
$4
HSET
$25
hash:csdn:article:by:2467
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2467
$10
authorLink
$27
http://my.csdn.net/oDeviloo
*4
$4
HSET
$25
hash:csdn:article:by:2467
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2468
$2
id
$4
2468
*4
$4
HSET
$25
hash:csdn:article:by:2468
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2468
$3
url
$54
http://blog.csdn.net/odeviloo/article/details/52918773
*4
$4
HSET
$25
hash:csdn:article:by:2468
$5
title
$39
一天一个设计模式---外观模式
*4
$4
HSET
$25
hash:csdn:article:by:2468
$4
desc
$261
如果让我们来制作一个苹果手机，我们需要实现拍照、视频聊天、通话的功能。通过外观模式，相当于对外提供了几个接口，拍照、视频聊天、通话的接口，而具体的内部处理，用户并不需要关心。
*4
$4
HSET
$25
hash:csdn:article:by:2468
$9
readCount
$3
782
*4
$4
HSET
$25
hash:csdn:article:by:2468
$14
articleContent
$40
csdn/java/1_0_1_6_1504264777.154181.html
*4
$4
HSET
$25
hash:csdn:article:by:2468
$4
date
$16
2016-10-25 10:00
*4
$4
HSET
$25
hash:csdn:article:by:2468
$6
author
$8
oDeviloo
*4
$4
HSET
$25
hash:csdn:article:by:2468
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2468
$9
labelList
$13
设计模式,
*4
$4
HSET
$25
hash:csdn:article:by:2468
$9
likeCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2468
$10
authorLink
$27
http://my.csdn.net/oDeviloo
*4
$4
HSET
$25
hash:csdn:article:by:2468
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2469
$2
id
$4
2469
*4
$4
HSET
$25
hash:csdn:article:by:2469
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2469
$3
url
$54
http://blog.csdn.net/odeviloo/article/details/52816069
*4
$4
HSET
$25
hash:csdn:article:by:2469
$5
title
$39
一天一个设计模式---桥接模式
*4
$4
HSET
$25
hash:csdn:article:by:2469
$4
desc
$267
举个桥梁的例子来说明。首先，说下原来的业务，中国建筑师只会造中国桥，美国建筑师会造美国桥。但是中国建筑师牛逼啊，学会了美国桥的建造。如果没有使用桥接模式，可能代码上会有很多问题。
*4
$4
HSET
$25
hash:csdn:article:by:2469
$9
readCount
$3
831
*4
$4
HSET
$25
hash:csdn:article:by:2469
$14
articleContent
$40
csdn/java/1_0_1_8_1504264777.991631.html
*4
$4
HSET
$25
hash:csdn:article:by:2469
$4
date
$16
2016-10-14 15:08
*4
$4
HSET
$25
hash:csdn:article:by:2469
$6
author
$8
oDeviloo
*4
$4
HSET
$25
hash:csdn:article:by:2469
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2469
$9
labelList
$33
桥接模式,设计模式,多态,
*4
$4
HSET
$25
hash:csdn:article:by:2469
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2469
$10
authorLink
$27
http://my.csdn.net/oDeviloo
*4
$4
HSET
$25
hash:csdn:article:by:2469
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2470
$2
id
$4
2470
*4
$4
HSET
$25
hash:csdn:article:by:2470
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2470
$3
url
$54
http://blog.csdn.net/odeviloo/article/details/52839170
*4
$4
HSET
$25
hash:csdn:article:by:2470
$5
title
$39
一天一个设计模式---组合模式
*4
$4
HSET
$25
hash:csdn:article:by:2470
$4
desc
$149
我们平时常用的dom4j框架其实其中就使用了组合模式来实现各个节点。我们就大致模仿，制作一个简单的xml框架。
*4
$4
HSET
$25
hash:csdn:article:by:2470
$9
readCount
$4
1063
*4
$4
HSET
$25
hash:csdn:article:by:2470
$14
articleContent
$40
csdn/java/1_0_1_7_1504264778.995822.html
*4
$4
HSET
$25
hash:csdn:article:by:2470
$4
date
$16
2016-10-17 15:37
*4
$4
HSET
$25
hash:csdn:article:by:2470
$6
author
$8
oDeviloo
*4
$4
HSET
$25
hash:csdn:article:by:2470
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2470
$9
labelList
$30
设计模式,xml,文件系统,
*4
$4
HSET
$25
hash:csdn:article:by:2470
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2470
$10
authorLink
$27
http://my.csdn.net/oDeviloo
*4
$4
HSET
$25
hash:csdn:article:by:2470
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2471
$2
id
$4
2471
*4
$4
HSET
$25
hash:csdn:article:by:2471
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2471
$3
url
$54
http://blog.csdn.net/odeviloo/article/details/53081455
*4
$4
HSET
$25
hash:csdn:article:by:2471
$5
title
$39
一天一个设计模式---命令模式
*4
$4
HSET
$25
hash:csdn:article:by:2471
$4
desc
$116
用命令模式来实现一个2D飞行射击游戏，能左右按钮躲避敌人的子弹，切换武器，射击。
*4
$4
HSET
$25
hash:csdn:article:by:2471
$9
readCount
$3
877
*4
$4
HSET
$25
hash:csdn:article:by:2471
$14
articleContent
$40
csdn/java/1_0_1_4_1504264780.053803.html
*4
$4
HSET
$25
hash:csdn:article:by:2471
$4
date
$16
2016-11-08 13:50
*4
$4
HSET
$25
hash:csdn:article:by:2471
$6
author
$8
oDeviloo
*4
$4
HSET
$25
hash:csdn:article:by:2471
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2471
$9
labelList
$13
设计模式,
*4
$4
HSET
$25
hash:csdn:article:by:2471
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2471
$10
authorLink
$27
http://my.csdn.net/oDeviloo
*4
$4
HSET
$25
hash:csdn:article:by:2471
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2472
$2
id
$4
2472
*4
$4
HSET
$25
hash:csdn:article:by:2472
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2472
$3
url
$54
http://blog.csdn.net/odeviloo/article/details/53022407
*4
$4
HSET
$25
hash:csdn:article:by:2472
$5
title
$42
一天一个设计模式---责任链模式
*4
$4
HSET
$25
hash:csdn:article:by:2472
$4
desc
$97
当时学习时，十分神秘的拦截器/过滤器，现在我也终于有思路去实现了！
*4
$4
HSET
$25
hash:csdn:article:by:2472
$9
readCount
$3
815
*4
$4
HSET
$25
hash:csdn:article:by:2472
$14
articleContent
$40
csdn/java/1_0_1_5_1504264781.274046.html
*4
$4
HSET
$25
hash:csdn:article:by:2472
$4
date
$16
2016-11-03 16:00
*4
$4
HSET
$25
hash:csdn:article:by:2472
$6
author
$8
oDeviloo
*4
$4
HSET
$25
hash:csdn:article:by:2472
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2472
$9
labelList
$13
设计模式,
*4
$4
HSET
$25
hash:csdn:article:by:2472
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2472
$10
authorLink
$27
http://my.csdn.net/oDeviloo
*4
$4
HSET
$25
hash:csdn:article:by:2472
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2473
$2
id
$4
2473
*4
$4
HSET
$25
hash:csdn:article:by:2473
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2473
$3
url
$54
http://blog.csdn.net/odeviloo/article/details/52388833
*4
$4
HSET
$25
hash:csdn:article:by:2473
$5
title
$39
一天一个设计模式---单例模式
*4
$4
HSET
$25
hash:csdn:article:by:2473
$4
desc
$117
介绍单利模式的主要思想、优点。使用基本的懒汉式和饿汉式的相关实例代码具体说明。
*4
$4
HSET
$25
hash:csdn:article:by:2473
$9
readCount
$3
794
*4
$4
HSET
$25
hash:csdn:article:by:2473
$14
articleContent
$40
csdn/java/1_0_2_0_1504264783.117375.html
*4
$4
HSET
$25
hash:csdn:article:by:2473
$4
date
$16
2016-08-31 21:12
*4
$4
HSET
$25
hash:csdn:article:by:2473
$6
author
$8
oDeviloo
*4
$4
HSET
$25
hash:csdn:article:by:2473
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2473
$9
labelList
$13
设计模式,
*4
$4
HSET
$25
hash:csdn:article:by:2473
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2473
$10
authorLink
$27
http://my.csdn.net/oDeviloo
*4
$4
HSET
$25
hash:csdn:article:by:2473
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2474
$2
id
$4
2474
*4
$4
HSET
$25
hash:csdn:article:by:2474
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2474
$3
url
$54
http://blog.csdn.net/odeviloo/article/details/52335899
*4
$4
HSET
$25
hash:csdn:article:by:2474
$5
title
$27
泛型让代码安全简单
*4
$4
HSET
$25
hash:csdn:article:by:2474
$4
desc
$114
合理的使用泛型，能让代码中的类型转换更加安全，而且在写代码的时候会更加简单。
*4
$4
HSET
$25
hash:csdn:article:by:2474
$9
readCount
$3
699
*4
$4
HSET
$25
hash:csdn:article:by:2474
$14
articleContent
$40
csdn/java/1_0_2_1_1504264784.082509.html
*4
$4
HSET
$25
hash:csdn:article:by:2474
$4
date
$16
2016-08-27 16:50
*4
$4
HSET
$25
hash:csdn:article:by:2474
$6
author
$8
oDeviloo
*4
$4
HSET
$25
hash:csdn:article:by:2474
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2474
$9
labelList
$12
java,泛型,
*4
$4
HSET
$25
hash:csdn:article:by:2474
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2474
$10
authorLink
$27
http://my.csdn.net/oDeviloo
*4
$4
HSET
$25
hash:csdn:article:by:2474
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2475
$2
id
$4
2475
*4
$4
HSET
$25
hash:csdn:article:by:2475
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2475
$3
url
$54
http://blog.csdn.net/odeviloo/article/details/52320030
*4
$4
HSET
$25
hash:csdn:article:by:2475
$5
title
$40
你知道这Java类型转换问题么？
*4
$4
HSET
$25
hash:csdn:article:by:2475
$4
desc
$84
一些我们忽视的类型转换问题，有你知道的，也有你不知道的。
*4
$4
HSET
$25
hash:csdn:article:by:2475
$9
readCount
$3
629
*4
$4
HSET
$25
hash:csdn:article:by:2475
$14
articleContent
$40
csdn/java/1_0_2_2_1504264785.118414.html
*4
$4
HSET
$25
hash:csdn:article:by:2475
$4
date
$16
2016-08-26 00:45
*4
$4
HSET
$25
hash:csdn:article:by:2475
$6
author
$8
oDeviloo
*4
$4
HSET
$25
hash:csdn:article:by:2475
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2475
$9
labelList
$5
java,
*4
$4
HSET
$25
hash:csdn:article:by:2475
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2475
$10
authorLink
$27
http://my.csdn.net/oDeviloo
*4
$4
HSET
$25
hash:csdn:article:by:2475
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2476
$2
id
$4
2476
*4
$4
HSET
$25
hash:csdn:article:by:2476
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2476
$3
url
$54
http://blog.csdn.net/odeviloo/article/details/50390641
*4
$4
HSET
$25
hash:csdn:article:by:2476
$5
title
$18
类和对象理解
*4
$4
HSET
$25
hash:csdn:article:by:2476
$4
desc
$257
最近看了TIOBE排行，java居然已经超过了c语言，排在了第一位。心理莫名的激动了一下，不是想说java有多牛逼，只是感慨现在java程序员越来越多，竞争压力加大。java区别于c语言，很重要的一点...
*4
$4
HSET
$25
hash:csdn:article:by:2476
$9
readCount
$3
454
*4
$4
HSET
$25
hash:csdn:article:by:2476
$14
articleContent
$41
csdn/java/1_0_2_10_1504264786.360581.html
*4
$4
HSET
$25
hash:csdn:article:by:2476
$4
date
$16
2015-12-23 23:59
*4
$4
HSET
$25
hash:csdn:article:by:2476
$6
author
$8
oDeviloo
*4
$4
HSET
$25
hash:csdn:article:by:2476
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2476
$9
labelList
$18
java,面向对象,
*4
$4
HSET
$25
hash:csdn:article:by:2476
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2476
$10
authorLink
$27
http://my.csdn.net/oDeviloo
*4
$4
HSET
$25
hash:csdn:article:by:2476
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2477
$2
id
$4
2477
*4
$4
HSET
$25
hash:csdn:article:by:2477
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2477
$3
url
$54
http://blog.csdn.net/odeviloo/article/details/50546545
*4
$4
HSET
$25
hash:csdn:article:by:2477
$5
title
$21
java--多线程与juc
*4
$4
HSET
$25
hash:csdn:article:by:2477
$4
desc
$155
刚刚研究多线程和juc发现一个写的比较不错的地址。多线程：http://www.cnblogs.com/skywang12345/p/java_threads_category.htmljuc:htt...
*4
$4
HSET
$25
hash:csdn:article:by:2477
$9
readCount
$3
433
*4
$4
HSET
$25
hash:csdn:article:by:2477
$14
articleContent
$40
csdn/java/1_0_2_3_1504264787.278852.html
*4
$4
HSET
$25
hash:csdn:article:by:2477
$4
date
$16
2016-01-20 09:58
*4
$4
HSET
$25
hash:csdn:article:by:2477
$6
author
$8
oDeviloo
*4
$4
HSET
$25
hash:csdn:article:by:2477
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2477
$9
labelList
$10
多线程,
*4
$4
HSET
$25
hash:csdn:article:by:2477
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2477
$10
authorLink
$27
http://my.csdn.net/oDeviloo
*4
$4
HSET
$25
hash:csdn:article:by:2477
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2478
$2
id
$4
2478
*4
$4
HSET
$25
hash:csdn:article:by:2478
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2478
$3
url
$54
http://blog.csdn.net/odeviloo/article/details/51482238
*4
$4
HSET
$25
hash:csdn:article:by:2478
$5
title
$39
Socket编程(六)---TCP/NIO实例讲解
*4
$4
HSET
$25
hash:csdn:article:by:2478
$4
desc
$105
本文将通过Channel(通道)、Buffer(缓冲区)以及Selector(选择器)来实现TCP下NIO的实例。
*4
$4
HSET
$25
hash:csdn:article:by:2478
$9
readCount
$3
624
*4
$4
HSET
$25
hash:csdn:article:by:2478
$14
articleContent
$40
csdn/java/1_0_2_4_1504264788.124652.html
*4
$4
HSET
$25
hash:csdn:article:by:2478
$4
date
$16
2016-05-23 15:49
*4
$4
HSET
$25
hash:csdn:article:by:2478
$6
author
$8
oDeviloo
*4
$4
HSET
$25
hash:csdn:article:by:2478
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2478
$9
labelList
$28
socket,实例,编程,buffer,
*4
$4
HSET
$25
hash:csdn:article:by:2478
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2478
$10
authorLink
$27
http://my.csdn.net/oDeviloo
*4
$4
HSET
$25
hash:csdn:article:by:2478
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2479
$2
id
$4
2479
*4
$4
HSET
$25
hash:csdn:article:by:2479
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2479
$3
url
$54
http://blog.csdn.net/odeviloo/article/details/51469478
*4
$4
HSET
$25
hash:csdn:article:by:2479
$5
title
$43
Socket编程(三)---仿QQ多人聊天实例
*4
$4
HSET
$25
hash:csdn:article:by:2479
$4
desc
$164
这次的实例，目的是为了模仿QQ上和好友聊天的功能，也就是用户登录后，点击用户头像，发送信息，好友就会接受到信息。
*4
$4
HSET
$25
hash:csdn:article:by:2479
$9
readCount
$4
2245
*4
$4
HSET
$25
hash:csdn:article:by:2479
$14
articleContent
$40
csdn/java/1_0_2_7_1504264789.165158.html
*4
$4
HSET
$25
hash:csdn:article:by:2479
$4
date
$16
2016-05-21 15:47
*4
$4
HSET
$25
hash:csdn:article:by:2479
$6
author
$8
oDeviloo
*4
$4
HSET
$25
hash:csdn:article:by:2479
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2479
$9
labelList
$28
socket,聊天,编程,实例,
*4
$4
HSET
$25
hash:csdn:article:by:2479
$9
likeCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2479
$10
authorLink
$27
http://my.csdn.net/oDeviloo
*4
$4
HSET
$25
hash:csdn:article:by:2479
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2480
$2
id
$4
2480
*4
$4
HSET
$25
hash:csdn:article:by:2480
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2480
$3
url
$54
http://blog.csdn.net/odeviloo/article/details/51459887
*4
$4
HSET
$25
hash:csdn:article:by:2480
$5
title
$32
Socket编程(一)---图解Socket
*4
$4
HSET
$25
hash:csdn:article:by:2480
$4
desc
$55
TCP/UDP基本概念介绍，socket相关行为的解释
*4
$4
HSET
$25
hash:csdn:article:by:2480
$9
readCount
$4
1612
*4
$4
HSET
$25
hash:csdn:article:by:2480
$14
articleContent
$40
csdn/java/1_0_2_9_1504264790.099086.html
*4
$4
HSET
$25
hash:csdn:article:by:2480
$4
date
$16
2016-05-20 10:46
*4
$4
HSET
$25
hash:csdn:article:by:2480
$6
author
$8
oDeviloo
*4
$4
HSET
$25
hash:csdn:article:by:2480
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2480
$9
labelList
$18
socket,编程,tcp,
*4
$4
HSET
$25
hash:csdn:article:by:2480
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2480
$10
authorLink
$27
http://my.csdn.net/oDeviloo
*4
$4
HSET
$25
hash:csdn:article:by:2480
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2481
$2
id
$4
2481
*4
$4
HSET
$25
hash:csdn:article:by:2481
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2481
$3
url
$54
http://blog.csdn.net/odeviloo/article/details/51461212
*4
$4
HSET
$25
hash:csdn:article:by:2481
$5
title
$35
Socket编程(二)---TCP简单实例
*4
$4
HSET
$25
hash:csdn:article:by:2481
$4
desc
$120
从上篇文章我们已经对Socket有了初步的认识，现在我们就通过一个例子来实现TCP简单实例。
*4
$4
HSET
$25
hash:csdn:article:by:2481
$9
readCount
$3
825
*4
$4
HSET
$25
hash:csdn:article:by:2481
$14
articleContent
$40
csdn/java/1_0_2_8_1504264791.147888.html
*4
$4
HSET
$25
hash:csdn:article:by:2481
$4
date
$16
2016-05-20 14:42
*4
$4
HSET
$25
hash:csdn:article:by:2481
$6
author
$8
oDeviloo
*4
$4
HSET
$25
hash:csdn:article:by:2481
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2481
$9
labelList
$35
socket,编程,server,通信,实例,
*4
$4
HSET
$25
hash:csdn:article:by:2481
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2481
$10
authorLink
$27
http://my.csdn.net/oDeviloo
*4
$4
HSET
$25
hash:csdn:article:by:2481
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2482
$2
id
$4
2482
*4
$4
HSET
$25
hash:csdn:article:by:2482
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2482
$3
url
$54
http://blog.csdn.net/odeviloo/article/details/51479958
*4
$4
HSET
$25
hash:csdn:article:by:2482
$5
title
$35
Socket编程(五)---NIO原理解读
*4
$4
HSET
$25
hash:csdn:article:by:2482
$4
desc
$113
参考文章： 
http://www.cnblogs.com/flyoung2008/p/3251826.html 
http://weixiaolu.iteye.com/blog/14796561.I...
*4
$4
HSET
$25
hash:csdn:article:by:2482
$9
readCount
$3
552
*4
$4
HSET
$25
hash:csdn:article:by:2482
$14
articleContent
$40
csdn/java/1_0_2_5_1504264792.082337.html
*4
$4
HSET
$25
hash:csdn:article:by:2482
$4
date
$16
2016-05-23 11:20
*4
$4
HSET
$25
hash:csdn:article:by:2482
$6
author
$8
oDeviloo
*4
$4
HSET
$25
hash:csdn:article:by:2482
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2482
$9
labelList
$34
socket,编程,clientserver,server,
*4
$4
HSET
$25
hash:csdn:article:by:2482
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2482
$10
authorLink
$27
http://my.csdn.net/oDeviloo
*4
$4
HSET
$25
hash:csdn:article:by:2482
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2483
$2
id
$4
2483
*4
$4
HSET
$25
hash:csdn:article:by:2483
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2483
$3
url
$54
http://blog.csdn.net/odeviloo/article/details/51479109
*4
$4
HSET
$25
hash:csdn:article:by:2483
$5
title
$50
Socket编程(四)---使用线程池优化服务端
*4
$4
HSET
$25
hash:csdn:article:by:2483
$4
desc
$66
在服务端使用线程池，来优化服务端处理的能力。
*4
$4
HSET
$25
hash:csdn:article:by:2483
$9
readCount
$4
1197
*4
$4
HSET
$25
hash:csdn:article:by:2483
$14
articleContent
$40
csdn/java/1_0_2_6_1504264793.311422.html
*4
$4
HSET
$25
hash:csdn:article:by:2483
$4
date
$16
2016-05-23 09:19
*4
$4
HSET
$25
hash:csdn:article:by:2483
$6
author
$8
oDeviloo
*4
$4
HSET
$25
hash:csdn:article:by:2483
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2483
$9
labelList
$35
socket,jvm,线程池,优化,编程,
*4
$4
HSET
$25
hash:csdn:article:by:2483
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2483
$10
authorLink
$27
http://my.csdn.net/oDeviloo
*4
$4
HSET
$25
hash:csdn:article:by:2483
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2484
$2
id
$4
2484
*4
$4
HSET
$25
hash:csdn:article:by:2484
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2484
$3
url
$58
http://blog.csdn.net/tototuzuoquan/article/details/7710508
*4
$4
HSET
$25
hash:csdn:article:by:2484
$5
title
$13
struts2校验
*4
$4
HSET
$25
hash:csdn:article:by:2484
$4
desc
$256
Struts2提供两种校验规则：字段校验器配置风格和非字段配置风格。
字段校验器的格式：



参数值
-->
校验失败时的提示信息


下一个要校验的字段à

字段校验器以元素为基本元素，该元素的n...
*4
$4
HSET
$25
hash:csdn:article:by:2484
$9
readCount
$3
666
*4
$4
HSET
$25
hash:csdn:article:by:2484
$14
articleContent
$40
csdn/java/1_0_1_4_1504264800.660985.html
*4
$4
HSET
$25
hash:csdn:article:by:2484
$4
date
$16
2012-07-03 05:35
*4
$4
HSET
$25
hash:csdn:article:by:2484
$6
author
$14
toto1297488504
*4
$4
HSET
$25
hash:csdn:article:by:2484
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2484
$9
labelList
$14
struts,action,
*4
$4
HSET
$25
hash:csdn:article:by:2484
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2484
$10
authorLink
$33
http://my.csdn.net/toto1297488504
*4
$4
HSET
$25
hash:csdn:article:by:2484
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2485
$2
id
$4
2485
*4
$4
HSET
$25
hash:csdn:article:by:2485
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2485
$3
url
$58
http://blog.csdn.net/tototuzuoquan/article/details/8043574
*4
$4
HSET
$25
hash:csdn:article:by:2485
$5
title
$21
Hibernate优化策略
*4
$4
HSET
$25
hash:csdn:article:by:2485
$4
desc
$170
1、抓取策略：
 当提取一个对象的关联对象时，所要求的策略。
 
 fetch="select"
 
 
  customer:  lazy="false" 或者  session.get(Custo...
*4
$4
HSET
$25
hash:csdn:article:by:2485
$9
readCount
$3
805
*4
$4
HSET
$25
hash:csdn:article:by:2485
$14
articleContent
$41
csdn/java/1_0_1_13_1504264805.665798.html
*4
$4
HSET
$25
hash:csdn:article:by:2485
$4
date
$16
2012-10-06 17:57
*4
$4
HSET
$25
hash:csdn:article:by:2485
$6
author
$14
toto1297488504
*4
$4
HSET
$25
hash:csdn:article:by:2485
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2485
$9
labelList
$36
hibernate,优化,session,sql,object,
*4
$4
HSET
$25
hash:csdn:article:by:2485
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2485
$10
authorLink
$33
http://my.csdn.net/toto1297488504
*4
$4
HSET
$25
hash:csdn:article:by:2485
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2486
$2
id
$4
2486
*4
$4
HSET
$25
hash:csdn:article:by:2486
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2486
$3
url
$58
http://blog.csdn.net/tototuzuoquan/article/details/7841817
*4
$4
HSET
$25
hash:csdn:article:by:2486
$5
title
$23
OA项目中环境准备
*4
$4
HSET
$25
hash:csdn:article:by:2486
$4
desc
$192
1，新建工程，类型为Web Project，设置默认编码为UTF-8，并创建如下文件夹
 1，Source Folder
  1，src  项目源码
  2，conf  配置文件
  3，test  ...
*4
$4
HSET
$25
hash:csdn:article:by:2486
$9
readCount
$4
1269
*4
$4
HSET
$25
hash:csdn:article:by:2486
$14
articleContent
$40
csdn/java/1_0_1_5_1504264808.630293.html
*4
$4
HSET
$25
hash:csdn:article:by:2486
$4
date
$16
2012-08-08 09:19
*4
$4
HSET
$25
hash:csdn:article:by:2486
$6
author
$14
toto1297488504
*4
$4
HSET
$25
hash:csdn:article:by:2486
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2486
$9
labelList
$39
struts,hibernate,spring,myeclipse,jbpm,
*4
$4
HSET
$25
hash:csdn:article:by:2486
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2486
$10
authorLink
$33
http://my.csdn.net/toto1297488504
*4
$4
HSET
$25
hash:csdn:article:by:2486
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2487
$2
id
$4
2487
*4
$4
HSET
$25
hash:csdn:article:by:2487
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2487
$3
url
$58
http://blog.csdn.net/tototuzuoquan/article/details/8043564
*4
$4
HSET
$25
hash:csdn:article:by:2487
$5
title
$36
Hibernate开发中常见错误总结
*4
$4
HSET
$25
hash:csdn:article:by:2487
$4
desc
$107
org.hibernate.MappingException: Unknown entity: cn.itcast.hibernate717.helloworld.Person
hibernate框架...
*4
$4
HSET
$25
hash:csdn:article:by:2487
$9
readCount
$5
12895
*4
$4
HSET
$25
hash:csdn:article:by:2487
$14
articleContent
$41
csdn/java/1_0_1_10_1504264810.672586.html
*4
$4
HSET
$25
hash:csdn:article:by:2487
$4
date
$16
2012-10-06 17:54
*4
$4
HSET
$25
hash:csdn:article:by:2487
$6
author
$14
toto1297488504
*4
$4
HSET
$25
hash:csdn:article:by:2487
$12
commentCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2487
$9
labelList
$42
hibernate,object,数据库,delete,session,
*4
$4
HSET
$25
hash:csdn:article:by:2487
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2487
$10
authorLink
$33
http://my.csdn.net/toto1297488504
*4
$4
HSET
$25
hash:csdn:article:by:2487
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2488
$2
id
$4
2488
*4
$4
HSET
$25
hash:csdn:article:by:2488
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2488
$3
url
$58
http://blog.csdn.net/tototuzuoquan/article/details/7848597
*4
$4
HSET
$25
hash:csdn:article:by:2488
$5
title
$166
OA中总结：s:select,关于使用modelDriven,项目分层，@Transactional，jspf,各个层上配置注解交给spring管理的方法，简单的OGNL表达式写法
*4
$4
HSET
$25
hash:csdn:article:by:2488
$4
desc
$160
%

 list:需要进行迭代的list集合
 listKey:需要提交的值
 listValue:需要在页面上显示的值
============================
优化
1.Actio...
*4
$4
HSET
$25
hash:csdn:article:by:2488
$9
readCount
$4
1707
*4
$4
HSET
$25
hash:csdn:article:by:2488
$14
articleContent
$40
csdn/java/1_0_1_9_1504264811.699423.html
*4
$4
HSET
$25
hash:csdn:article:by:2488
$4
date
$16
2012-08-09 17:52
*4
$4
HSET
$25
hash:csdn:article:by:2488
$6
author
$14
toto1297488504
*4
$4
HSET
$25
hash:csdn:article:by:2488
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2488
$9
labelList
$38
spring,service,action,session,include,
*4
$4
HSET
$25
hash:csdn:article:by:2488
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2488
$10
authorLink
$33
http://my.csdn.net/toto1297488504
*4
$4
HSET
$25
hash:csdn:article:by:2488
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2489
$2
id
$4
2489
*4
$4
HSET
$25
hash:csdn:article:by:2489
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2489
$3
url
$58
http://blog.csdn.net/tototuzuoquan/article/details/7841822
*4
$4
HSET
$25
hash:csdn:article:by:2489
$5
title
$25
OA中SSH+JBPM项目整合
*4
$4
HSET
$25
hash:csdn:article:by:2489
$4
desc
$131
一，集成 Spring 与 Hibernate
 1，配置SessionFactory
  1，配置
   ---------------------- applicationContext.xml ...
*4
$4
HSET
$25
hash:csdn:article:by:2489
$9
readCount
$4
2159
*4
$4
HSET
$25
hash:csdn:article:by:2489
$14
articleContent
$40
csdn/java/1_0_1_6_1504264813.032858.html
*4
$4
HSET
$25
hash:csdn:article:by:2489
$4
date
$16
2012-08-08 09:21
*4
$4
HSET
$25
hash:csdn:article:by:2489
$6
author
$14
toto1297488504
*4
$4
HSET
$25
hash:csdn:article:by:2489
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2489
$9
labelList
$32
jbpm,ssh,spring,hibernate,class,
*4
$4
HSET
$25
hash:csdn:article:by:2489
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2489
$10
authorLink
$33
http://my.csdn.net/toto1297488504
*4
$4
HSET
$25
hash:csdn:article:by:2489
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2490
$2
id
$4
2490
*4
$4
HSET
$25
hash:csdn:article:by:2490
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2490
$3
url
$59
http://blog.csdn.net/tototuzuoquan/article/details/26178115
*4
$4
HSET
$25
hash:csdn:article:by:2490
$5
title
$104
基于XML配置的Spring MVC（所需jar包，web.xml配置，处理器配置，视图解析器配置）
*4
$4
HSET
$25
hash:csdn:article:by:2490
$4
desc
$117
1、添加jar

2、web.xml配置


 xmlns="http://java.sun.com/xml/ns/javaee"

 xmlns:xsi="http://www.w3.org/200...
*4
$4
HSET
$25
hash:csdn:article:by:2490
$9
readCount
$4
1492
*4
$4
HSET
$25
hash:csdn:article:by:2490
$14
articleContent
$40
csdn/java/1_0_2_8_1504264826.922156.html
*4
$4
HSET
$25
hash:csdn:article:by:2490
$4
date
$16
2014-05-18 23:55
*4
$4
HSET
$25
hash:csdn:article:by:2490
$6
author
$14
toto1297488504
*4
$4
HSET
$25
hash:csdn:article:by:2490
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2490
$9
labelList
$11
Spring MVC,
*4
$4
HSET
$25
hash:csdn:article:by:2490
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2490
$10
authorLink
$33
http://my.csdn.net/toto1297488504
*4
$4
HSET
$25
hash:csdn:article:by:2490
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2491
$2
id
$4
2491
*4
$4
HSET
$25
hash:csdn:article:by:2491
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2491
$3
url
$52
http://blog.csdn.net/xu__cg/article/details/52901464
*4
$4
HSET
$25
hash:csdn:article:by:2491
$5
title
$43
Java设计模式学习——前言与介绍
*4
$4
HSET
$25
hash:csdn:article:by:2491
$4
desc
$303
前言　　在我平时的学习与项目工作中，经常会纠结于类的框架搭建，以及类间的关系梳理，而当我通过查看一些牛人的代码解释时总会有一种有一种豁然开朗之感，感觉别人写的代码层次清晰，易于理解。久而久之，我确实感...
*4
$4
HSET
$25
hash:csdn:article:by:2491
$9
readCount
$3
595
*4
$4
HSET
$25
hash:csdn:article:by:2491
$14
articleContent
$40
csdn/java/1_1_1_0_1504264842.918989.html
*4
$4
HSET
$25
hash:csdn:article:by:2491
$4
date
$16
2016-10-23 14:04
*4
$4
HSET
$25
hash:csdn:article:by:2491
$6
author
$6
xu__cg
*4
$4
HSET
$25
hash:csdn:article:by:2491
$12
commentCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2491
$9
labelList
$30
java设计模式,设计模式,
*4
$4
HSET
$25
hash:csdn:article:by:2491
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2491
$10
authorLink
$25
http://my.csdn.net/xu__cg
*4
$4
HSET
$25
hash:csdn:article:by:2491
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2492
$2
id
$4
2492
*4
$4
HSET
$25
hash:csdn:article:by:2492
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2492
$3
url
$52
http://blog.csdn.net/xu__cg/article/details/52909769
*4
$4
HSET
$25
hash:csdn:article:by:2492
$5
title
$42
Java设计模式学习02——工厂模式
*4
$4
HSET
$25
hash:csdn:article:by:2492
$4
desc
$289
工厂模式工厂模式主要是为创建对象提供接口，将创建对象的过程隔离起来，实现了创建者与调用者的分离，提高了程序的灵活性。 
核心本质：
实例化对象，用工厂方法代替new操作。
将选择实现类、创建对象统一管...
*4
$4
HSET
$25
hash:csdn:article:by:2492
$9
readCount
$3
771
*4
$4
HSET
$25
hash:csdn:article:by:2492
$14
articleContent
$39
csdn/java/1_1_1_1_1504264843.98766.html
*4
$4
HSET
$25
hash:csdn:article:by:2492
$4
date
$16
2016-10-24 12:39
*4
$4
HSET
$25
hash:csdn:article:by:2492
$6
author
$6
xu__cg
*4
$4
HSET
$25
hash:csdn:article:by:2492
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2492
$9
labelList
$35
java设计模式,工厂模式,java,
*4
$4
HSET
$25
hash:csdn:article:by:2492
$9
likeCount
$1
3
*4
$4
HSET
$25
hash:csdn:article:by:2492
$10
authorLink
$25
http://my.csdn.net/xu__cg
*4
$4
HSET
$25
hash:csdn:article:by:2492
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2493
$2
id
$4
2493
*4
$4
HSET
$25
hash:csdn:article:by:2493
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2493
$3
url
$52
http://blog.csdn.net/xu__cg/article/details/52923835
*4
$4
HSET
$25
hash:csdn:article:by:2493
$5
title
$45
Java设计模式学习03——建造者模式
*4
$4
HSET
$25
hash:csdn:article:by:2493
$4
desc
$253
一、场景 
        当需要生产一辆汽车时，我们需要为其装配发动机、轮胎、座椅等等部件，这个装配过程是比较复杂的而且也需要较高的组装技术。而建造者模式（Builder Pattern）就是为了将...
*4
$4
HSET
$25
hash:csdn:article:by:2493
$9
readCount
$3
562
*4
$4
HSET
$25
hash:csdn:article:by:2493
$14
articleContent
$40
csdn/java/1_1_1_2_1504264844.946896.html
*4
$4
HSET
$25
hash:csdn:article:by:2493
$4
date
$16
2016-10-25 16:24
*4
$4
HSET
$25
hash:csdn:article:by:2493
$6
author
$6
xu__cg
*4
$4
HSET
$25
hash:csdn:article:by:2493
$12
commentCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2493
$9
labelList
$33
java设计模式,建造者模式,
*4
$4
HSET
$25
hash:csdn:article:by:2493
$9
likeCount
$1
3
*4
$4
HSET
$25
hash:csdn:article:by:2493
$10
authorLink
$25
http://my.csdn.net/xu__cg
*4
$4
HSET
$25
hash:csdn:article:by:2493
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2494
$2
id
$4
2494
*4
$4
HSET
$25
hash:csdn:article:by:2494
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2494
$3
url
$52
http://blog.csdn.net/xu__cg/article/details/52948633
*4
$4
HSET
$25
hash:csdn:article:by:2494
$5
title
$45
Java设计模式学习05——适配器模式
*4
$4
HSET
$25
hash:csdn:article:by:2494
$4
desc
$299
之前讲的几种模式都是创建型模式，现在开始讲结构型模式。何为结构型模式？结构型模式的 核心作用， 是从程序结构上实现松耦合，从而可以扩大整体的类结构，用来解决更大的问题。一、适配器模式定义适配器模式，把...
*4
$4
HSET
$25
hash:csdn:article:by:2494
$9
readCount
$3
447
*4
$4
HSET
$25
hash:csdn:article:by:2494
$14
articleContent
$40
csdn/java/1_1_1_4_1504264845.942677.html
*4
$4
HSET
$25
hash:csdn:article:by:2494
$4
date
$16
2016-10-27 18:55
*4
$4
HSET
$25
hash:csdn:article:by:2494
$6
author
$6
xu__cg
*4
$4
HSET
$25
hash:csdn:article:by:2494
$12
commentCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2494
$9
labelList
$38
java设计模式,java,适配器模式,
*4
$4
HSET
$25
hash:csdn:article:by:2494
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2494
$10
authorLink
$25
http://my.csdn.net/xu__cg
*4
$4
HSET
$25
hash:csdn:article:by:2494
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2495
$2
id
$4
2495
*4
$4
HSET
$25
hash:csdn:article:by:2495
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2495
$3
url
$52
http://blog.csdn.net/xu__cg/article/details/52970885
*4
$4
HSET
$25
hash:csdn:article:by:2495
$5
title
$57
Java设计模式学习06——静态代理与动态代理
*4
$4
HSET
$25
hash:csdn:article:by:2495
$4
desc
$303
一、代理模式为某个对象提供一个代理，从而控制这个代理的访问。代理类和委托类具有共同的父类或父接口，这样在任何使用委托类对象的地方都可以使用代理类对象替代。代理类负责请求的预处理、过滤、将请求分配给委托...
*4
$4
HSET
$25
hash:csdn:article:by:2495
$9
readCount
$3
955
*4
$4
HSET
$25
hash:csdn:article:by:2495
$14
articleContent
$40
csdn/java/1_1_1_5_1504264846.887893.html
*4
$4
HSET
$25
hash:csdn:article:by:2495
$4
date
$16
2016-10-30 09:57
*4
$4
HSET
$25
hash:csdn:article:by:2495
$6
author
$6
xu__cg
*4
$4
HSET
$25
hash:csdn:article:by:2495
$12
commentCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2495
$9
labelList
$45
java设计模式,静态代理与动态代理,
*4
$4
HSET
$25
hash:csdn:article:by:2495
$9
likeCount
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2495
$10
authorLink
$25
http://my.csdn.net/xu__cg
*4
$4
HSET
$25
hash:csdn:article:by:2495
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2496
$2
id
$4
2496
*4
$4
HSET
$25
hash:csdn:article:by:2496
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2496
$3
url
$52
http://blog.csdn.net/xu__cg/article/details/52932028
*4
$4
HSET
$25
hash:csdn:article:by:2496
$5
title
$42
Java设计模式学习04——原型模式
*4
$4
HSET
$25
hash:csdn:article:by:2496
$4
desc
$289
原型模式　　当我们需要构建一个与已经存在对象相似时，再通过new去产生一个新对象需要非常繁琐的数据准备或访问权限，而这时就可以用到原型模式，原型模式实现就是Java中的克隆技术，以某个对象为原型，复制...
*4
$4
HSET
$25
hash:csdn:article:by:2496
$9
readCount
$3
370
*4
$4
HSET
$25
hash:csdn:article:by:2496
$14
articleContent
$40
csdn/java/1_1_1_3_1504264847.964694.html
*4
$4
HSET
$25
hash:csdn:article:by:2496
$4
date
$16
2016-10-26 10:38
*4
$4
HSET
$25
hash:csdn:article:by:2496
$6
author
$6
xu__cg
*4
$4
HSET
$25
hash:csdn:article:by:2496
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2496
$9
labelList
$35
java,java设计模式,原型模式,
*4
$4
HSET
$25
hash:csdn:article:by:2496
$9
likeCount
$1
3
*4
$4
HSET
$25
hash:csdn:article:by:2496
$10
authorLink
$25
http://my.csdn.net/xu__cg
*4
$4
HSET
$25
hash:csdn:article:by:2496
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2497
$2
id
$4
2497
*4
$4
HSET
$25
hash:csdn:article:by:2497
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2497
$3
url
$52
http://blog.csdn.net/xu__cg/article/details/53190763
*4
$4
HSET
$25
hash:csdn:article:by:2497
$5
title
$36
Java设计模式18——状态模式
*4
$4
HSET
$25
hash:csdn:article:by:2497
$4
desc
$227
一、定义状态(State)模式又称为状态对象模式(Pattern of Objects for State),状态模式是对象的行为模式。状态模式允许一个对象在其内部状态改变时改变其行为，用于解决系统中...
*4
$4
HSET
$25
hash:csdn:article:by:2497
$9
readCount
$3
587
*4
$4
HSET
$25
hash:csdn:article:by:2497
$14
articleContent
$41
csdn/java/1_1_1_17_1504264848.931682.html
*4
$4
HSET
$25
hash:csdn:article:by:2497
$4
date
$16
2016-11-16 19:46
*4
$4
HSET
$25
hash:csdn:article:by:2497
$6
author
$6
xu__cg
*4
$4
HSET
$25
hash:csdn:article:by:2497
$12
commentCount
$1
5
*4
$4
HSET
$25
hash:csdn:article:by:2497
$9
labelList
$30
java设计模式,状态模式,
*4
$4
HSET
$25
hash:csdn:article:by:2497
$9
likeCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2497
$10
authorLink
$25
http://my.csdn.net/xu__cg
*4
$4
HSET
$25
hash:csdn:article:by:2497
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2498
$2
id
$4
2498
*4
$4
HSET
$25
hash:csdn:article:by:2498
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2498
$3
url
$52
http://blog.csdn.net/xu__cg/article/details/52999636
*4
$4
HSET
$25
hash:csdn:article:by:2498
$5
title
$42
Java设计模式学习07——桥接模式
*4
$4
HSET
$25
hash:csdn:article:by:2498
$4
desc
$231
一、场景商城系统中常见的商品分类，以电脑为例，如何良好的处理商品分类销售的问题？
我们可以用多层继承实现下图的关系：
实现代码如下：public interface Computer {
    vo...
*4
$4
HSET
$25
hash:csdn:article:by:2498
$9
readCount
$3
573
*4
$4
HSET
$25
hash:csdn:article:by:2498
$14
articleContent
$40
csdn/java/1_1_1_6_1504264850.037878.html
*4
$4
HSET
$25
hash:csdn:article:by:2498
$4
date
$16
2016-11-01 20:03
*4
$4
HSET
$25
hash:csdn:article:by:2498
$6
author
$6
xu__cg
*4
$4
HSET
$25
hash:csdn:article:by:2498
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2498
$9
labelList
$30
java设计模式,桥接模式,
*4
$4
HSET
$25
hash:csdn:article:by:2498
$9
likeCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2498
$10
authorLink
$25
http://my.csdn.net/xu__cg
*4
$4
HSET
$25
hash:csdn:article:by:2498
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2499
$2
id
$4
2499
*4
$4
HSET
$25
hash:csdn:article:by:2499
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2499
$3
url
$52
http://blog.csdn.net/xu__cg/article/details/53143349
*4
$4
HSET
$25
hash:csdn:article:by:2499
$5
title
$36
Java设计模式15——命令模式
*4
$4
HSET
$25
hash:csdn:article:by:2499
$4
desc
$261
一、介绍命令模式：将一个请求封装为对象，从而使我们可用不同的请求对客户进行参数化；对请求排队或者记录请求日志，以及支持可撤销的操作。也称为：动作(Action)模式、事务(transaction)模式...
*4
$4
HSET
$25
hash:csdn:article:by:2499
$9
readCount
$3
284
*4
$4
HSET
$25
hash:csdn:article:by:2499
$14
articleContent
$41
csdn/java/1_1_1_14_1504264850.947705.html
*4
$4
HSET
$25
hash:csdn:article:by:2499
$4
date
$16
2016-11-12 21:49
*4
$4
HSET
$25
hash:csdn:article:by:2499
$6
author
$6
xu__cg
*4
$4
HSET
$25
hash:csdn:article:by:2499
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2499
$9
labelList
$30
java设计模式,命令模式,
*4
$4
HSET
$25
hash:csdn:article:by:2499
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2499
$10
authorLink
$25
http://my.csdn.net/xu__cg
*4
$4
HSET
$25
hash:csdn:article:by:2499
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2500
$2
id
$4
2500
*4
$4
HSET
$25
hash:csdn:article:by:2500
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2500
$3
url
$52
http://blog.csdn.net/xu__cg/article/details/53242995
*4
$4
HSET
$25
hash:csdn:article:by:2500
$5
title
$39
Java设计模式19——观察者模式
*4
$4
HSET
$25
hash:csdn:article:by:2500
$4
desc
$301
一、定义观察者模式定义了一个一对多的依赖关系，让多个观察者对象同时监听同一个主题对象。当这个主题状态发生改变时，会通知所有观察者对象，让它们自动更新自己。二、类似场景
聊天室程序的创建。服务器创建好后...
*4
$4
HSET
$25
hash:csdn:article:by:2500
$9
readCount
$3
384
*4
$4
HSET
$25
hash:csdn:article:by:2500
$14
articleContent
$41
csdn/java/1_1_1_18_1504264851.909149.html
*4
$4
HSET
$25
hash:csdn:article:by:2500
$4
date
$16
2016-11-20 18:37
*4
$4
HSET
$25
hash:csdn:article:by:2500
$6
author
$6
xu__cg
*4
$4
HSET
$25
hash:csdn:article:by:2500
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2500
$9
labelList
$33
java设计模式,观察者模式,
*4
$4
HSET
$25
hash:csdn:article:by:2500
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2500
$10
authorLink
$25
http://my.csdn.net/xu__cg
*4
$4
HSET
$25
hash:csdn:article:by:2500
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2501
$2
id
$4
2501
*4
$4
HSET
$25
hash:csdn:article:by:2501
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2501
$3
url
$52
http://blog.csdn.net/xu__cg/article/details/53432286
*4
$4
HSET
$25
hash:csdn:article:by:2501
$5
title
$34
Java设计模式20-备忘录模式
*4
$4
HSET
$25
hash:csdn:article:by:2501
$4
desc
$291
一、场景当我们使用文本编译器记录一些内容时，发现这一步写错了，往往可以使用Ctrl+Z的方式会退到上一个状态，其中运用到的知识就是备忘录模式。二、定义备忘录模式，即保存某个对象内部状态的拷贝，这样以后...
*4
$4
HSET
$25
hash:csdn:article:by:2501
$9
readCount
$3
314
*4
$4
HSET
$25
hash:csdn:article:by:2501
$14
articleContent
$41
csdn/java/1_1_1_19_1504264853.003265.html
*4
$4
HSET
$25
hash:csdn:article:by:2501
$4
date
$16
2016-12-02 10:34
*4
$4
HSET
$25
hash:csdn:article:by:2501
$6
author
$6
xu__cg
*4
$4
HSET
$25
hash:csdn:article:by:2501
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2501
$9
labelList
$33
java设计模式,备忘录模式,
*4
$4
HSET
$25
hash:csdn:article:by:2501
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2501
$10
authorLink
$25
http://my.csdn.net/xu__cg
*4
$4
HSET
$25
hash:csdn:article:by:2501
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2502
$2
id
$4
2502
*4
$4
HSET
$25
hash:csdn:article:by:2502
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2502
$3
url
$52
http://blog.csdn.net/xu__cg/article/details/53133134
*4
$4
HSET
$25
hash:csdn:article:by:2502
$5
title
$49
Java设计模式14——中介者(Mediator)模式
*4
$4
HSET
$25
hash:csdn:article:by:2502
$4
desc
$303
一、定义用一个中介对象封装一系列对象的交互，中介者是多个对象不需要显示的相互作用，而且可以独立的改变他们的交互。二、举例通过上述定义可能不好理解，下面举一个例子，假如在一个没有总经理的公司中，有三个部...
*4
$4
HSET
$25
hash:csdn:article:by:2502
$9
readCount
$3
390
*4
$4
HSET
$25
hash:csdn:article:by:2502
$14
articleContent
$40
csdn/java/1_1_1_13_1504264854.22654.html
*4
$4
HSET
$25
hash:csdn:article:by:2502
$4
date
$16
2016-11-11 21:06
*4
$4
HSET
$25
hash:csdn:article:by:2502
$6
author
$6
xu__cg
*4
$4
HSET
$25
hash:csdn:article:by:2502
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2502
$9
labelList
$33
java设计模式,中介者模式,
*4
$4
HSET
$25
hash:csdn:article:by:2502
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2502
$10
authorLink
$25
http://my.csdn.net/xu__cg
*4
$4
HSET
$25
hash:csdn:article:by:2502
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2503
$2
id
$4
2503
*4
$4
HSET
$25
hash:csdn:article:by:2503
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2503
$3
url
$52
http://blog.csdn.net/xu__cg/article/details/53155551
*4
$4
HSET
$25
hash:csdn:article:by:2503
$5
title
$36
Java设计模式16——策略模式
*4
$4
HSET
$25
hash:csdn:article:by:2503
$4
desc
$281
一、定义　　策略(strategy)模式属于对象的行为模式。其用途是针对一组算法，将每个不同算法封装到具有共同接口的独立类中，从而使他们可以相互替换。即使 算法和对象分开来，使得算法可以独立于使用它的...
*4
$4
HSET
$25
hash:csdn:article:by:2503
$9
readCount
$3
714
*4
$4
HSET
$25
hash:csdn:article:by:2503
$14
articleContent
$41
csdn/java/1_1_1_15_1504264855.032455.html
*4
$4
HSET
$25
hash:csdn:article:by:2503
$4
date
$16
2016-11-14 08:30
*4
$4
HSET
$25
hash:csdn:article:by:2503
$6
author
$6
xu__cg
*4
$4
HSET
$25
hash:csdn:article:by:2503
$12
commentCount
$1
5
*4
$4
HSET
$25
hash:csdn:article:by:2503
$9
labelList
$30
java设计模式,策略模式,
*4
$4
HSET
$25
hash:csdn:article:by:2503
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2503
$10
authorLink
$25
http://my.csdn.net/xu__cg
*4
$4
HSET
$25
hash:csdn:article:by:2503
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2504
$2
id
$4
2504
*4
$4
HSET
$25
hash:csdn:article:by:2504
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2504
$3
url
$52
http://blog.csdn.net/xu__cg/article/details/53174505
*4
$4
HSET
$25
hash:csdn:article:by:2504
$5
title
$42
Java设计模式17——模板方法模式
*4
$4
HSET
$25
hash:csdn:article:by:2504
$4
desc
$303
一、介绍模板方法模式是编程中经常用到的模式。它定义了一个操作中的算法骨架，将某些步骤延迟到子类中实现。这样，新的子类可以在不改变一个算法结构的前提下重新定义该算法的某些特定步骤。二、场景举例当一个客户...
*4
$4
HSET
$25
hash:csdn:article:by:2504
$9
readCount
$3
420
*4
$4
HSET
$25
hash:csdn:article:by:2504
$14
articleContent
$41
csdn/java/1_1_1_16_1504264856.125967.html
*4
$4
HSET
$25
hash:csdn:article:by:2504
$4
date
$16
2016-11-15 18:20
*4
$4
HSET
$25
hash:csdn:article:by:2504
$6
author
$6
xu__cg
*4
$4
HSET
$25
hash:csdn:article:by:2504
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2504
$9
labelList
$36
java设计模式,模板方法模式,
*4
$4
HSET
$25
hash:csdn:article:by:2504
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2504
$10
authorLink
$25
http://my.csdn.net/xu__cg
*4
$4
HSET
$25
hash:csdn:article:by:2504
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2505
$2
id
$4
2505
*4
$4
HSET
$25
hash:csdn:article:by:2505
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2505
$3
url
$52
http://blog.csdn.net/xu__cg/article/details/53011258
*4
$4
HSET
$25
hash:csdn:article:by:2505
$5
title
$42
Java设计模式学习08——组合模式
*4
$4
HSET
$25
hash:csdn:article:by:2505
$4
desc
$279
一、组合模式适用场景把部分和整体的关系用树形结构来表示，从而使客户端可以使用统一的方式对部分对象和整体对象进行管理。二、组合模式结构
抽象构件(Conponent)角色：所有类的共有接口，定义了叶子和...
*4
$4
HSET
$25
hash:csdn:article:by:2505
$9
readCount
$3
325
*4
$4
HSET
$25
hash:csdn:article:by:2505
$14
articleContent
$40
csdn/java/1_1_1_7_1504264857.111527.html
*4
$4
HSET
$25
hash:csdn:article:by:2505
$4
date
$16
2016-11-02 19:44
*4
$4
HSET
$25
hash:csdn:article:by:2505
$6
author
$6
xu__cg
*4
$4
HSET
$25
hash:csdn:article:by:2505
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2505
$9
labelList
$30
java设计模式,组合模式,
*4
$4
HSET
$25
hash:csdn:article:by:2505
$9
likeCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2505
$10
authorLink
$25
http://my.csdn.net/xu__cg
*4
$4
HSET
$25
hash:csdn:article:by:2505
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2506
$2
id
$4
2506
*4
$4
HSET
$25
hash:csdn:article:by:2506
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2506
$3
url
$52
http://blog.csdn.net/xu__cg/article/details/53054439
*4
$4
HSET
$25
hash:csdn:article:by:2506
$5
title
$36
Java设计模式11——享元模式
*4
$4
HSET
$25
hash:csdn:article:by:2506
$4
desc
$301
一、适用场景　　内存属于稀缺资源，不能随意浪费。如果在一个系统中有很多个完全相同或相似的对象，我们就可以使用享元模式，让他们共享一份内存即可，不必每个都去实例化对象，从而节省内存空间。二、模式核心
享...
*4
$4
HSET
$25
hash:csdn:article:by:2506
$9
readCount
$3
686
*4
$4
HSET
$25
hash:csdn:article:by:2506
$14
articleContent
$41
csdn/java/1_1_1_10_1504264858.090727.html
*4
$4
HSET
$25
hash:csdn:article:by:2506
$4
date
$16
2016-11-06 14:58
*4
$4
HSET
$25
hash:csdn:article:by:2506
$6
author
$6
xu__cg
*4
$4
HSET
$25
hash:csdn:article:by:2506
$12
commentCount
$1
3
*4
$4
HSET
$25
hash:csdn:article:by:2506
$9
labelList
$30
java设计模式,享元模式,
*4
$4
HSET
$25
hash:csdn:article:by:2506
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2506
$10
authorLink
$25
http://my.csdn.net/xu__cg
*4
$4
HSET
$25
hash:csdn:article:by:2506
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2507
$2
id
$4
2507
*4
$4
HSET
$25
hash:csdn:article:by:2507
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2507
$3
url
$52
http://blog.csdn.net/xu__cg/article/details/53103970
*4
$4
HSET
$25
hash:csdn:article:by:2507
$5
title
$39
Java设计模式13——迭代器模式
*4
$4
HSET
$25
hash:csdn:article:by:2507
$4
desc
$207
一、场景对于学习了Java的同学来说，“迭代”这个词并不会陌生，我们经常使用Iterator接口对Collection下的集合类进行遍历，常见代码：Iterator iterator=list.ite...
*4
$4
HSET
$25
hash:csdn:article:by:2507
$9
readCount
$3
253
*4
$4
HSET
$25
hash:csdn:article:by:2507
$14
articleContent
$41
csdn/java/1_1_1_12_1504264859.056061.html
*4
$4
HSET
$25
hash:csdn:article:by:2507
$4
date
$16
2016-11-09 19:15
*4
$4
HSET
$25
hash:csdn:article:by:2507
$6
author
$6
xu__cg
*4
$4
HSET
$25
hash:csdn:article:by:2507
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2507
$9
labelList
$27
java设计模式,迭代器,
*4
$4
HSET
$25
hash:csdn:article:by:2507
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2507
$10
authorLink
$25
http://my.csdn.net/xu__cg
*4
$4
HSET
$25
hash:csdn:article:by:2507
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2508
$2
id
$4
2508
*4
$4
HSET
$25
hash:csdn:article:by:2508
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2508
$3
url
$52
http://blog.csdn.net/xu__cg/article/details/53069998
*4
$4
HSET
$25
hash:csdn:article:by:2508
$5
title
$39
Java设计模式12——责任链模式
*4
$4
HSET
$25
hash:csdn:article:by:2508
$4
desc
$297
一、定义　　将能够处理同一类请求的对象连成一条链，所提交的请求将沿着这条链传递，链上的对象逐个判断是否有能力处理该请求，如果有则处理，如果没有则将请求传递给下一个对象处理。二、场景举例1.生活中场景 ...
*4
$4
HSET
$25
hash:csdn:article:by:2508
$9
readCount
$3
296
*4
$4
HSET
$25
hash:csdn:article:by:2508
$14
articleContent
$41
csdn/java/1_1_1_11_1504264860.123131.html
*4
$4
HSET
$25
hash:csdn:article:by:2508
$4
date
$16
2016-11-07 20:07
*4
$4
HSET
$25
hash:csdn:article:by:2508
$6
author
$6
xu__cg
*4
$4
HSET
$25
hash:csdn:article:by:2508
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2508
$9
labelList
$33
java设计模式,责任链模式,
*4
$4
HSET
$25
hash:csdn:article:by:2508
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2508
$10
authorLink
$25
http://my.csdn.net/xu__cg
*4
$4
HSET
$25
hash:csdn:article:by:2508
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2509
$2
id
$4
2509
*4
$4
HSET
$25
hash:csdn:article:by:2509
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2509
$3
url
$52
http://blog.csdn.net/xu__cg/article/details/53024490
*4
$4
HSET
$25
hash:csdn:article:by:2509
$5
title
$42
Java设计模式学习09——装饰模式
*4
$4
HSET
$25
hash:csdn:article:by:2509
$4
desc
$261
一、定义装饰(Decorate)模式又称为包装(Wrapper)模式。装饰模式是以对客户端透明的方式扩展对象的功能，是继承关系的一个替代方案。二、职责
动态的为一个对象增加新的功能。
装饰模式是一种用...
*4
$4
HSET
$25
hash:csdn:article:by:2509
$9
readCount
$4
1242
*4
$4
HSET
$25
hash:csdn:article:by:2509
$14
articleContent
$40
csdn/java/1_1_1_8_1504264861.092748.html
*4
$4
HSET
$25
hash:csdn:article:by:2509
$4
date
$16
2016-11-03 19:11
*4
$4
HSET
$25
hash:csdn:article:by:2509
$6
author
$6
xu__cg
*4
$4
HSET
$25
hash:csdn:article:by:2509
$12
commentCount
$1
3
*4
$4
HSET
$25
hash:csdn:article:by:2509
$9
labelList
$30
java设计模式,装饰模式,
*4
$4
HSET
$25
hash:csdn:article:by:2509
$9
likeCount
$1
7
*4
$4
HSET
$25
hash:csdn:article:by:2509
$10
authorLink
$25
http://my.csdn.net/xu__cg
*4
$4
HSET
$25
hash:csdn:article:by:2509
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2510
$2
id
$4
2510
*4
$4
HSET
$25
hash:csdn:article:by:2510
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2510
$3
url
$52
http://blog.csdn.net/xu__cg/article/details/53047880
*4
$4
HSET
$25
hash:csdn:article:by:2510
$5
title
$36
Java设计模式10——外观模式
*4
$4
HSET
$25
hash:csdn:article:by:2510
$4
desc
$197
外观模式是最简单的设计模式之一，所以我就不再去重写了，简单的总结转载看到的一篇文章，原文链接：http://blog.csdn.net/jason0539/article/details/227753...
*4
$4
HSET
$25
hash:csdn:article:by:2510
$9
readCount
$3
255
*4
$4
HSET
$25
hash:csdn:article:by:2510
$14
articleContent
$40
csdn/java/1_1_1_9_1504264862.165889.html
*4
$4
HSET
$25
hash:csdn:article:by:2510
$4
date
$16
2016-11-05 21:09
*4
$4
HSET
$25
hash:csdn:article:by:2510
$6
author
$6
xu__cg
*4
$4
HSET
$25
hash:csdn:article:by:2510
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2510
$9
labelList
$43
java设计模式,设计模式,外观模式,
*4
$4
HSET
$25
hash:csdn:article:by:2510
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2510
$10
authorLink
$25
http://my.csdn.net/xu__cg
*4
$4
HSET
$25
hash:csdn:article:by:2510
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2511
$2
id
$4
2511
*4
$4
HSET
$25
hash:csdn:article:by:2511
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2511
$3
url
$57
http://blog.csdn.net/dawanganban/article/details/36189165
*4
$4
HSET
$25
hash:csdn:article:by:2511
$5
title
$30
设计模式——代理模式
*4
$4
HSET
$25
hash:csdn:article:by:2511
$4
desc
$155
代理模式的作用是控制和管理访问先看一段代码：package com.test;
/**
 * 抽象角色
 * @author Administrator
 *
 */
abstract public ...
*4
$4
HSET
$25
hash:csdn:article:by:2511
$9
readCount
$4
1867
*4
$4
HSET
$25
hash:csdn:article:by:2511
$14
articleContent
$40
csdn/java/1_0_1_0_1504264864.298592.html
*4
$4
HSET
$25
hash:csdn:article:by:2511
$4
date
$16
2014-07-01 21:51
*4
$4
HSET
$25
hash:csdn:article:by:2511
$6
author
$8
lxq_xsyu
*4
$4
HSET
$25
hash:csdn:article:by:2511
$12
commentCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2511
$9
labelList
$26
设计模式,代理模式,
*4
$4
HSET
$25
hash:csdn:article:by:2511
$9
likeCount
$2
15
*4
$4
HSET
$25
hash:csdn:article:by:2511
$10
authorLink
$27
http://my.csdn.net/lxq_xsyu
*4
$4
HSET
$25
hash:csdn:article:by:2511
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2512
$2
id
$4
2512
*4
$4
HSET
$25
hash:csdn:article:by:2512
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2512
$3
url
$57
http://blog.csdn.net/dawanganban/article/details/28627111
*4
$4
HSET
$25
hash:csdn:article:by:2512
$5
title
$33
设计模式——观察者模式
*4
$4
HSET
$25
hash:csdn:article:by:2512
$4
desc
$183
观察者模式是对象的行为模式，又叫发布-订阅(Publish/Subscribe)模式、模型-视图(Model/View)模式、源-监听器(Source/Listener)模式或从属者(Dependen...
*4
$4
HSET
$25
hash:csdn:article:by:2512
$9
readCount
$4
2199
*4
$4
HSET
$25
hash:csdn:article:by:2512
$14
articleContent
$40
csdn/java/1_0_1_1_1504264865.233129.html
*4
$4
HSET
$25
hash:csdn:article:by:2512
$4
date
$16
2014-06-05 15:28
*4
$4
HSET
$25
hash:csdn:article:by:2512
$6
author
$8
lxq_xsyu
*4
$4
HSET
$25
hash:csdn:article:by:2512
$12
commentCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2512
$9
labelList
$34
Java,设计模式,观察者模式,
*4
$4
HSET
$25
hash:csdn:article:by:2512
$9
likeCount
$2
11
*4
$4
HSET
$25
hash:csdn:article:by:2512
$10
authorLink
$27
http://my.csdn.net/lxq_xsyu
*4
$4
HSET
$25
hash:csdn:article:by:2512
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2513
$2
id
$4
2513
*4
$4
HSET
$25
hash:csdn:article:by:2513
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2513
$3
url
$56
http://blog.csdn.net/dawanganban/article/details/9990405
*4
$4
HSET
$25
hash:csdn:article:by:2513
$5
title
$33
设计模式——建造者模式
*4
$4
HSET
$25
hash:csdn:article:by:2513
$4
desc
$263
什么是建造者模式
Builder模式也叫建造者模式或者生成器模式，是由GoF提出的23种设计模式中的一种。Builder模式是一种对象创建型模式之一，用来隐藏复合对象的创建过程，它把复合对象的创建过程...
*4
$4
HSET
$25
hash:csdn:article:by:2513
$9
readCount
$4
1873
*4
$4
HSET
$25
hash:csdn:article:by:2513
$14
articleContent
$40
csdn/java/1_0_1_3_1504264866.385597.html
*4
$4
HSET
$25
hash:csdn:article:by:2513
$4
date
$16
2013-08-15 22:14
*4
$4
HSET
$25
hash:csdn:article:by:2513
$6
author
$8
lxq_xsyu
*4
$4
HSET
$25
hash:csdn:article:by:2513
$12
commentCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2513
$9
labelList
$34
java,设计模式,建造者模式,
*4
$4
HSET
$25
hash:csdn:article:by:2513
$9
likeCount
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2513
$10
authorLink
$27
http://my.csdn.net/lxq_xsyu
*4
$4
HSET
$25
hash:csdn:article:by:2513
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2514
$2
id
$4
2514
*4
$4
HSET
$25
hash:csdn:article:by:2514
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2514
$3
url
$56
http://blog.csdn.net/dawanganban/article/details/9899785
*4
$4
HSET
$25
hash:csdn:article:by:2514
$5
title
$30
设计模式——单例模式
*4
$4
HSET
$25
hash:csdn:article:by:2514
$4
desc
$291
单例模式
一、什么是单例模式：
单例模式是一种对象创建形模式，使用单例模式，可以保证为一个类只生成唯一的实例对象。也就是说，在整个程序空间中，该类只存在一个实例对象。
其实，GoF对单例模式的定义是：...
*4
$4
HSET
$25
hash:csdn:article:by:2514
$9
readCount
$4
1826
*4
$4
HSET
$25
hash:csdn:article:by:2514
$14
articleContent
$40
csdn/java/1_0_1_5_1504264867.311838.html
*4
$4
HSET
$25
hash:csdn:article:by:2514
$4
date
$16
2013-08-11 14:55
*4
$4
HSET
$25
hash:csdn:article:by:2514
$6
author
$8
lxq_xsyu
*4
$4
HSET
$25
hash:csdn:article:by:2514
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2514
$9
labelList
$51
java,设计模式,单例模式,饿汉式,懒汉式,
*4
$4
HSET
$25
hash:csdn:article:by:2514
$9
likeCount
$1
6
*4
$4
HSET
$25
hash:csdn:article:by:2514
$10
authorLink
$27
http://my.csdn.net/lxq_xsyu
*4
$4
HSET
$25
hash:csdn:article:by:2514
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2515
$2
id
$4
2515
*4
$4
HSET
$25
hash:csdn:article:by:2515
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2515
$3
url
$56
http://blog.csdn.net/dawanganban/article/details/9884681
*4
$4
HSET
$25
hash:csdn:article:by:2515
$5
title
$72
设计模式——工厂模式在开发中的应用（简单计算器）
*4
$4
HSET
$25
hash:csdn:article:by:2515
$4
desc
$197
下面以一个简单的计算器为例子来说明，怎么用工厂模式。
如果你没有用任何设计模式，你可能会这样写：
package com.meritit;

import java.util.Scanner;

pu...
*4
$4
HSET
$25
hash:csdn:article:by:2515
$9
readCount
$4
2616
*4
$4
HSET
$25
hash:csdn:article:by:2515
$14
articleContent
$40
csdn/java/1_0_1_6_1504264868.266653.html
*4
$4
HSET
$25
hash:csdn:article:by:2515
$4
date
$16
2013-08-10 22:16
*4
$4
HSET
$25
hash:csdn:article:by:2515
$6
author
$8
lxq_xsyu
*4
$4
HSET
$25
hash:csdn:article:by:2515
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2515
$9
labelList
$35
java,工厂模式,应用,计算器,
*4
$4
HSET
$25
hash:csdn:article:by:2515
$9
likeCount
$1
3
*4
$4
HSET
$25
hash:csdn:article:by:2515
$10
authorLink
$27
http://my.csdn.net/lxq_xsyu
*4
$4
HSET
$25
hash:csdn:article:by:2515
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2516
$2
id
$4
2516
*4
$4
HSET
$25
hash:csdn:article:by:2516
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2516
$3
url
$56
http://blog.csdn.net/dawanganban/article/details/9900539
*4
$4
HSET
$25
hash:csdn:article:by:2516
$5
title
$30
设计模式——原形模式
*4
$4
HSET
$25
hash:csdn:article:by:2516
$4
desc
$227
Prototype模式是一种对象创建模式，它采用取复制原型对象的方法来创建对象的实例。使用Prototype模式创建的实例，具有与原型一样的数据。
先看以下代码：
package com.meriti...
*4
$4
HSET
$25
hash:csdn:article:by:2516
$9
readCount
$4
1536
*4
$4
HSET
$25
hash:csdn:article:by:2516
$14
articleContent
$40
csdn/java/1_0_1_4_1504264869.368428.html
*4
$4
HSET
$25
hash:csdn:article:by:2516
$4
date
$16
2013-08-11 16:45
*4
$4
HSET
$25
hash:csdn:article:by:2516
$6
author
$8
lxq_xsyu
*4
$4
HSET
$25
hash:csdn:article:by:2516
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2516
$9
labelList
$54
java,设计模式,原型模式,浅克隆,深度克隆,
*4
$4
HSET
$25
hash:csdn:article:by:2516
$9
likeCount
$1
5
*4
$4
HSET
$25
hash:csdn:article:by:2516
$10
authorLink
$27
http://my.csdn.net/lxq_xsyu
*4
$4
HSET
$25
hash:csdn:article:by:2516
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2517
$2
id
$4
2517
*4
$4
HSET
$25
hash:csdn:article:by:2517
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2517
$3
url
$57
http://blog.csdn.net/dawanganban/article/details/10012013
*4
$4
HSET
$25
hash:csdn:article:by:2517
$5
title
$30
设计模式——装饰模式
*4
$4
HSET
$25
hash:csdn:article:by:2517
$4
desc
$239
装饰（ Decorator）模式又叫做包装模式。通过一种对客户端透明的方式来扩展对象的功能，是继承关系的一个替换方案。
假如现在要一个会跑的车，我们会这样做：
package com.meritit;...
*4
$4
HSET
$25
hash:csdn:article:by:2517
$9
readCount
$4
2051
*4
$4
HSET
$25
hash:csdn:article:by:2517
$14
articleContent
$40
csdn/java/1_0_1_2_1504264870.352265.html
*4
$4
HSET
$25
hash:csdn:article:by:2517
$4
date
$16
2013-08-16 22:59
*4
$4
HSET
$25
hash:csdn:article:by:2517
$6
author
$8
lxq_xsyu
*4
$4
HSET
$25
hash:csdn:article:by:2517
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2517
$9
labelList
$31
java,设计模式,装饰模式,
*4
$4
HSET
$25
hash:csdn:article:by:2517
$9
likeCount
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2517
$10
authorLink
$27
http://my.csdn.net/lxq_xsyu
*4
$4
HSET
$25
hash:csdn:article:by:2517
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2518
$2
id
$4
2518
*4
$4
HSET
$25
hash:csdn:article:by:2518
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2518
$3
url
$56
http://blog.csdn.net/dawanganban/article/details/9882193
*4
$4
HSET
$25
hash:csdn:article:by:2518
$5
title
$90
设计模式——简单工厂模式—工厂方法模式—抽象工厂模式（比较）
*4
$4
HSET
$25
hash:csdn:article:by:2518
$4
desc
$280
一、简单工厂模式：
       简单工厂模式是对对象创建的简单封装，可以通过一个工厂类来实现对象的实例化，但是这种方式如果要增加一个新的产品就要修改工厂方法，这样就产生了工厂方法模式。
      ...
*4
$4
HSET
$25
hash:csdn:article:by:2518
$9
readCount
$4
2468
*4
$4
HSET
$25
hash:csdn:article:by:2518
$14
articleContent
$40
csdn/java/1_0_1_7_1504264871.621547.html
*4
$4
HSET
$25
hash:csdn:article:by:2518
$4
date
$16
2013-08-10 18:25
*4
$4
HSET
$25
hash:csdn:article:by:2518
$6
author
$8
lxq_xsyu
*4
$4
HSET
$25
hash:csdn:article:by:2518
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2518
$9
labelList
$33
设计模式,工厂模式,比较,
*4
$4
HSET
$25
hash:csdn:article:by:2518
$9
likeCount
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2518
$10
authorLink
$27
http://my.csdn.net/lxq_xsyu
*4
$4
HSET
$25
hash:csdn:article:by:2518
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2519
$2
id
$4
2519
*4
$4
HSET
$25
hash:csdn:article:by:2519
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2519
$3
url
$56
http://blog.csdn.net/dawanganban/article/details/9879427
*4
$4
HSET
$25
hash:csdn:article:by:2519
$5
title
$36
设计模式——抽象工厂模式
*4
$4
HSET
$25
hash:csdn:article:by:2519
$4
desc
$285
抽象工厂模式是所有形态的工厂模式中最为抽象和最具一般性的。抽象工厂模式可以向客户端提供一个接口，使得客户端在不必指定产品的具体类型的情况下，能够创建多个产品族的产品对象。




（1）创建一个Fru...
*4
$4
HSET
$25
hash:csdn:article:by:2519
$9
readCount
$4
1873
*4
$4
HSET
$25
hash:csdn:article:by:2519
$14
articleContent
$40
csdn/java/1_0_1_8_1504264872.398513.html
*4
$4
HSET
$25
hash:csdn:article:by:2519
$4
date
$16
2013-08-10 17:33
*4
$4
HSET
$25
hash:csdn:article:by:2519
$6
author
$8
lxq_xsyu
*4
$4
HSET
$25
hash:csdn:article:by:2519
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2519
$9
labelList
$37
java,设计模式,抽象工厂模式,
*4
$4
HSET
$25
hash:csdn:article:by:2519
$9
likeCount
$1
3
*4
$4
HSET
$25
hash:csdn:article:by:2519
$10
authorLink
$27
http://my.csdn.net/lxq_xsyu
*4
$4
HSET
$25
hash:csdn:article:by:2519
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2520
$2
id
$4
2520
*4
$4
HSET
$25
hash:csdn:article:by:2520
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2520
$3
url
$56
http://blog.csdn.net/dawanganban/article/details/9877593
*4
$4
HSET
$25
hash:csdn:article:by:2520
$5
title
$36
设计模式——工厂方法模式
*4
$4
HSET
$25
hash:csdn:article:by:2520
$4
desc
$303
工厂方法模式同样属于类的创建模式又被称为多态工厂模式。工厂方法模式的意义是定义一个创建产品对象的工厂接口，将实际创建工作推迟到子类当中。核心工厂类不再负责产品的创建，这样核心类成为一个抽象的工厂角色，...
*4
$4
HSET
$25
hash:csdn:article:by:2520
$9
readCount
$4
1864
*4
$4
HSET
$25
hash:csdn:article:by:2520
$14
articleContent
$40
csdn/java/1_0_1_9_1504264873.440141.html
*4
$4
HSET
$25
hash:csdn:article:by:2520
$4
date
$16
2013-08-10 15:51
*4
$4
HSET
$25
hash:csdn:article:by:2520
$6
author
$8
lxq_xsyu
*4
$4
HSET
$25
hash:csdn:article:by:2520
$12
commentCount
$1
5
*4
$4
HSET
$25
hash:csdn:article:by:2520
$9
labelList
$37
java,设计模式,工厂方法模式,
*4
$4
HSET
$25
hash:csdn:article:by:2520
$9
likeCount
$1
3
*4
$4
HSET
$25
hash:csdn:article:by:2520
$10
authorLink
$27
http://my.csdn.net/lxq_xsyu
*4
$4
HSET
$25
hash:csdn:article:by:2520
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2521
$2
id
$4
2521
*4
$4
HSET
$25
hash:csdn:article:by:2521
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2521
$3
url
$56
http://blog.csdn.net/dawanganban/article/details/9875873
*4
$4
HSET
$25
hash:csdn:article:by:2521
$5
title
$30
设计模式——简单工厂
*4
$4
HSET
$25
hash:csdn:article:by:2521
$4
desc
$129
第一个小例子：
public class Apple {
	/*
	 * 采集
	 */
	public void get(){
		System.out.println("采集苹果");
	}
}
...
*4
$4
HSET
$25
hash:csdn:article:by:2521
$9
readCount
$4
2168
*4
$4
HSET
$25
hash:csdn:article:by:2521
$14
articleContent
$41
csdn/java/1_0_1_10_1504264874.341045.html
*4
$4
HSET
$25
hash:csdn:article:by:2521
$4
date
$16
2013-08-10 14:53
*4
$4
HSET
$25
hash:csdn:article:by:2521
$6
author
$8
lxq_xsyu
*4
$4
HSET
$25
hash:csdn:article:by:2521
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2521
$9
labelList
$37
java,设计模式,简单工厂模式,
*4
$4
HSET
$25
hash:csdn:article:by:2521
$9
likeCount
$1
5
*4
$4
HSET
$25
hash:csdn:article:by:2521
$10
authorLink
$27
http://my.csdn.net/lxq_xsyu
*4
$4
HSET
$25
hash:csdn:article:by:2521
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2522
$2
id
$4
2522
*4
$4
HSET
$25
hash:csdn:article:by:2522
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2522
$3
url
$59
http://blog.csdn.net/smile_miracle/article/details/53185016
*4
$4
HSET
$25
hash:csdn:article:by:2522
$5
title
$30
tomcat配置默认显示页面
*4
$4
HSET
$25
hash:csdn:article:by:2522
$4
desc
$231
所谓的修改tomcat的默认主页，就是在tomcat服务器开启时输入ip：port能直接进入你自己定义的主页而不是tomcat主页，具体有以下几个步骤：①首先进入tomcat 下的conf目录，修改s...
*4
$4
HSET
$25
hash:csdn:article:by:2522
$9
readCount
$3
758
*4
$4
HSET
$25
hash:csdn:article:by:2522
$14
articleContent
$39
csdn/java/1_1_1_0_1504264878.31873.html
*4
$4
HSET
$25
hash:csdn:article:by:2522
$4
date
$16
2016-11-16 11:52
*4
$4
HSET
$25
hash:csdn:article:by:2522
$6
author
$13
Smile_Miracle
*4
$4
HSET
$25
hash:csdn:article:by:2522
$12
commentCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2522
$9
labelList
$17
tomcat,服务器,
*4
$4
HSET
$25
hash:csdn:article:by:2522
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2522
$10
authorLink
$32
http://my.csdn.net/Smile_Miracle
*4
$4
HSET
$25
hash:csdn:article:by:2522
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2523
$2
id
$4
2523
*4
$4
HSET
$25
hash:csdn:article:by:2523
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2523
$3
url
$59
http://blog.csdn.net/smile_miracle/article/details/53709723
*4
$4
HSET
$25
hash:csdn:article:by:2523
$5
title
$38
linux环境下配置tomcat HTTPS协议
*4
$4
HSET
$25
hash:csdn:article:by:2523
$4
desc
$229
https简介    它是由Netscape开发并内置于其浏览器中，用于对数据进行压缩和解压操作，并返回网络上传送回的结果。HTTPS实际上应用了Netscape的安全套接字层（SSL）作为HTTP应...
*4
$4
HSET
$25
hash:csdn:article:by:2523
$9
readCount
$3
124
*4
$4
HSET
$25
hash:csdn:article:by:2523
$14
articleContent
$40
csdn/java/1_1_1_1_1504264879.495232.html
*4
$4
HSET
$25
hash:csdn:article:by:2523
$4
date
$16
2016-12-17 17:26
*4
$4
HSET
$25
hash:csdn:article:by:2523
$6
author
$13
Smile_Miracle
*4
$4
HSET
$25
hash:csdn:article:by:2523
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2523
$9
labelList
$17
ssl,tomcat,linux,
*4
$4
HSET
$25
hash:csdn:article:by:2523
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2523
$10
authorLink
$32
http://my.csdn.net/Smile_Miracle
*4
$4
HSET
$25
hash:csdn:article:by:2523
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2524
$2
id
$4
2524
*4
$4
HSET
$25
hash:csdn:article:by:2524
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2524
$3
url
$59
http://blog.csdn.net/smile_miracle/article/details/69948740
*4
$4
HSET
$25
hash:csdn:article:by:2524
$5
title
$107
List集合切割实现对已有数据的分页显示（LIST容器数据量不大的情况下推荐使用）
*4
$4
HSET
$25
hash:csdn:article:by:2524
$4
desc
$103
package com.lyt.usermanage.utils;import java.util.ArrayList;
import java.util.LinkedList;
import jav...
*4
$4
HSET
$25
hash:csdn:article:by:2524
$9
readCount
$3
324
*4
$4
HSET
$25
hash:csdn:article:by:2524
$14
articleContent
$40
csdn/java/1_1_1_3_1504264880.244732.html
*4
$4
HSET
$25
hash:csdn:article:by:2524
$4
date
$16
2017-04-10 15:06
*4
$4
HSET
$25
hash:csdn:article:by:2524
$6
author
$13
Smile_Miracle
*4
$4
HSET
$25
hash:csdn:article:by:2524
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2524
$9
labelList
$20
class,分页,数据,
*4
$4
HSET
$25
hash:csdn:article:by:2524
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2524
$10
authorLink
$32
http://my.csdn.net/Smile_Miracle
*4
$4
HSET
$25
hash:csdn:article:by:2524
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2525
$2
id
$4
2525
*4
$4
HSET
$25
hash:csdn:article:by:2525
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2525
$3
url
$59
http://blog.csdn.net/smile_miracle/article/details/71550548
*4
$4
HSET
$25
hash:csdn:article:by:2525
$5
title
$40
Java中如何优雅正确的终止线程
*4
$4
HSET
$25
hash:csdn:article:by:2525
$4
desc
$269
Java中终止线程的方式主要有三种：1、使用stop()方法，已被弃用。原因是：stop()是立即终止，会导致一些数据被到处理一部分就会被终止，而用户并不知道哪些数据被处理，哪些没有被处理，产生了不完...
*4
$4
HSET
$25
hash:csdn:article:by:2525
$9
readCount
$4
1745
*4
$4
HSET
$25
hash:csdn:article:by:2525
$14
articleContent
$40
csdn/java/1_1_1_5_1504264881.342659.html
*4
$4
HSET
$25
hash:csdn:article:by:2525
$4
date
$16
2017-05-10 16:53
*4
$4
HSET
$25
hash:csdn:article:by:2525
$6
author
$13
Smile_Miracle
*4
$4
HSET
$25
hash:csdn:article:by:2525
$12
commentCount
$1
9
*4
$4
HSET
$25
hash:csdn:article:by:2525
$9
labelList
$12
java,线程,
*4
$4
HSET
$25
hash:csdn:article:by:2525
$9
likeCount
$1
6
*4
$4
HSET
$25
hash:csdn:article:by:2525
$10
authorLink
$32
http://my.csdn.net/Smile_Miracle
*4
$4
HSET
$25
hash:csdn:article:by:2525
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2526
$2
id
$4
2526
*4
$4
HSET
$25
hash:csdn:article:by:2526
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2526
$3
url
$59
http://blog.csdn.net/smile_miracle/article/details/71620437
*4
$4
HSET
$25
hash:csdn:article:by:2526
$5
title
$54
Java多线程wait,notify以及同步锁的运用实例
*4
$4
HSET
$25
hash:csdn:article:by:2526
$4
desc
$171
一个开多线程打印10次ABC的小Demo,如何保证线程执行的有序性，以下面这个Demo来做说明：package com.lyt.usermanage.test;public class MyThrea...
*4
$4
HSET
$25
hash:csdn:article:by:2526
$9
readCount
$3
252
*4
$4
HSET
$25
hash:csdn:article:by:2526
$14
articleContent
$40
csdn/java/1_1_1_6_1504264882.327227.html
*4
$4
HSET
$25
hash:csdn:article:by:2526
$4
date
$16
2017-05-11 13:35
*4
$4
HSET
$25
hash:csdn:article:by:2526
$6
author
$13
Smile_Miracle
*4
$4
HSET
$25
hash:csdn:article:by:2526
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2526
$9
labelList
$22
java,多线程,线程,
*4
$4
HSET
$25
hash:csdn:article:by:2526
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2526
$10
authorLink
$32
http://my.csdn.net/Smile_Miracle
*4
$4
HSET
$25
hash:csdn:article:by:2526
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2527
$2
id
$4
2527
*4
$4
HSET
$25
hash:csdn:article:by:2527
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2527
$3
url
$59
http://blog.csdn.net/smile_miracle/article/details/74332182
*4
$4
HSET
$25
hash:csdn:article:by:2527
$5
title
$78
SpringMVC项目中偶尔用到servlet，如何在servlet中注入service笔记
*4
$4
HSET
$25
hash:csdn:article:by:2527
$4
desc
$149
仅此做个笔记，防止注入时而成功时而失败的问题。package com.zhy.spdb.sso;import java.io.IOException;import javax.servlet.Serv...
*4
$4
HSET
$25
hash:csdn:article:by:2527
$9
readCount
$3
196
*4
$4
HSET
$25
hash:csdn:article:by:2527
$14
articleContent
$39
csdn/java/1_1_1_18_1504264883.5146.html
*4
$4
HSET
$25
hash:csdn:article:by:2527
$4
date
$16
2017-07-04 16:19
*4
$4
HSET
$25
hash:csdn:article:by:2527
$6
author
$13
Smile_Miracle
*4
$4
HSET
$25
hash:csdn:article:by:2527
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2527
$9
labelList
$19
servlet,spring mvc,
*4
$4
HSET
$25
hash:csdn:article:by:2527
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2527
$10
authorLink
$32
http://my.csdn.net/Smile_Miracle
*4
$4
HSET
$25
hash:csdn:article:by:2527
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2528
$2
id
$4
2528
*4
$4
HSET
$25
hash:csdn:article:by:2528
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2528
$3
url
$59
http://blog.csdn.net/smile_miracle/article/details/70102262
*4
$4
HSET
$25
hash:csdn:article:by:2528
$5
title
$63
Java 判断一个时间段（YYYY-MM-DD）是否在一个区间
*4
$4
HSET
$25
hash:csdn:article:by:2528
$4
desc
$135
/** 
    * @Title: isInDate 
    * @Description: 判断一个时间段（YYYY-MM-DD）是否在一个区间 
    * @param @param dat...
*4
$4
HSET
$25
hash:csdn:article:by:2528
$9
readCount
$4
1095
*4
$4
HSET
$25
hash:csdn:article:by:2528
$14
articleContent
$39
csdn/java/1_1_1_4_1504264884.25655.html
*4
$4
HSET
$25
hash:csdn:article:by:2528
$4
date
$16
2017-04-11 19:03
*4
$4
HSET
$25
hash:csdn:article:by:2528
$6
author
$13
Smile_Miracle
*4
$4
HSET
$25
hash:csdn:article:by:2528
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2528
$9
labelList
$5
java,
*4
$4
HSET
$25
hash:csdn:article:by:2528
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2528
$10
authorLink
$32
http://my.csdn.net/Smile_Miracle
*4
$4
HSET
$25
hash:csdn:article:by:2528
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2529
$2
id
$4
2529
*4
$4
HSET
$25
hash:csdn:article:by:2529
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2529
$3
url
$59
http://blog.csdn.net/smile_miracle/article/details/53791453
*4
$4
HSET
$25
hash:csdn:article:by:2529
$5
title
$63
linux+tomcat配置域名访问指定项目，不用接项目名
*4
$4
HSET
$25
hash:csdn:article:by:2529
$4
desc
$68
直接上码，tomcat/conf/server.xml配置如下：

  
  <Listener
*4
$4
HSET
$25
hash:csdn:article:by:2529
$9
readCount
$3
123
*4
$4
HSET
$25
hash:csdn:article:by:2529
$14
articleContent
$40
csdn/java/1_1_1_2_1504264886.195514.html
*4
$4
HSET
$25
hash:csdn:article:by:2529
$4
date
$16
2016-12-21 21:10
*4
$4
HSET
$25
hash:csdn:article:by:2529
$6
author
$13
Smile_Miracle
*4
$4
HSET
$25
hash:csdn:article:by:2529
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2529
$9
labelList
$6
linux,
*4
$4
HSET
$25
hash:csdn:article:by:2529
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2529
$10
authorLink
$32
http://my.csdn.net/Smile_Miracle
*4
$4
HSET
$25
hash:csdn:article:by:2529
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2530
$2
id
$4
2530
*4
$4
HSET
$25
hash:csdn:article:by:2530
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2530
$3
url
$59
http://blog.csdn.net/smile_miracle/article/details/71653194
*4
$4
HSET
$25
hash:csdn:article:by:2530
$5
title
$25
Java自定义注解解析
*4
$4
HSET
$25
hash:csdn:article:by:2530
$4
desc
$239
什么是注解Annotation（注解）就是Java提供了一种元程序中的元素关联任何信息和着任何元数据（metadata）的途径和方法。Annotion(注解)是一个接口，程序可以通过反射来获取指定程序...
*4
$4
HSET
$25
hash:csdn:article:by:2530
$9
readCount
$3
146
*4
$4
HSET
$25
hash:csdn:article:by:2530
$14
articleContent
$41
csdn/java/1_1_1_14_1504264886.823559.html
*4
$4
HSET
$25
hash:csdn:article:by:2530
$4
date
$16
2017-05-11 17:54
*4
$4
HSET
$25
hash:csdn:article:by:2530
$6
author
$13
Smile_Miracle
*4
$4
HSET
$25
hash:csdn:article:by:2530
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2530
$9
labelList
$9
java,jdk,
*4
$4
HSET
$25
hash:csdn:article:by:2530
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2530
$10
authorLink
$32
http://my.csdn.net/Smile_Miracle
*4
$4
HSET
$25
hash:csdn:article:by:2530
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2531
$2
id
$4
2531
*4
$4
HSET
$25
hash:csdn:article:by:2531
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2531
$3
url
$59
http://blog.csdn.net/smile_miracle/article/details/72364708
*4
$4
HSET
$25
hash:csdn:article:by:2531
$5
title
$39
线程中的乐观与悲观锁的区别
*4
$4
HSET
$25
hash:csdn:article:by:2531
$4
desc
$299
线程中的锁可以分为乐观锁和悲观锁，这两个都是实现锁机制的两种办法。 
悲观锁：根据字面意思，悲观，就是不是太好的。当一个线程访问这个数据的时候，悲观锁会把这个数据给锁住，不被其他线程所访问，直到这个线...
*4
$4
HSET
$25
hash:csdn:article:by:2531
$9
readCount
$3
152
*4
$4
HSET
$25
hash:csdn:article:by:2531
$14
articleContent
$40
csdn/java/1_1_1_7_1504264887.453092.html
*4
$4
HSET
$25
hash:csdn:article:by:2531
$4
date
$16
2017-05-17 11:20
*4
$4
HSET
$25
hash:csdn:article:by:2531
$6
author
$13
Smile_Miracle
*4
$4
HSET
$25
hash:csdn:article:by:2531
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2531
$9
labelList
$27
线程,乐观锁,悲观锁,
*4
$4
HSET
$25
hash:csdn:article:by:2531
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2531
$10
authorLink
$32
http://my.csdn.net/Smile_Miracle
*4
$4
HSET
$25
hash:csdn:article:by:2531
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2532
$2
id
$4
2532
*4
$4
HSET
$25
hash:csdn:article:by:2532
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2532
$3
url
$59
http://blog.csdn.net/smile_miracle/article/details/72529165
*4
$4
HSET
$25
hash:csdn:article:by:2532
$5
title
$26
浅谈对ActiveMQ的理解
*4
$4
HSET
$25
hash:csdn:article:by:2532
$4
desc
$303
现如今项目开发过程中由于功能多，流程长，机制繁多且复杂，让一个线程去跑完一个业务的整个流程的话会显得非常繁琐且耦合性太强，代码量很大，这个时候我们就可以用到一款技术叫做消息队列，我们可以通过定义好发送...
*4
$4
HSET
$25
hash:csdn:article:by:2532
$9
readCount
$3
220
*4
$4
HSET
$25
hash:csdn:article:by:2532
$14
articleContent
$41
csdn/java/1_1_1_15_1504264888.550877.html
*4
$4
HSET
$25
hash:csdn:article:by:2532
$4
date
$16
2017-05-19 14:57
*4
$4
HSET
$25
hash:csdn:article:by:2532
$6
author
$13
Smile_Miracle
*4
$4
HSET
$25
hash:csdn:article:by:2532
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2532
$9
labelList
$16
activemq,技术,
*4
$4
HSET
$25
hash:csdn:article:by:2532
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2532
$10
authorLink
$32
http://my.csdn.net/Smile_Miracle
*4
$4
HSET
$25
hash:csdn:article:by:2532
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2533
$2
id
$4
2533
*4
$4
HSET
$25
hash:csdn:article:by:2533
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2533
$3
url
$59
http://blog.csdn.net/smile_miracle/article/details/76269537
*4
$4
HSET
$25
hash:csdn:article:by:2533
$5
title
$120
Spring整合Quartz实现定时任务的时间更新，暂停和启用（不需要重启项目并且配置多数据源）
*4
$4
HSET
$25
hash:csdn:article:by:2533
$4
desc
$221
这是一套独立的定时系统，暂时不涉及与外界三方系统的交互，如有需求可自己根据场景来修改。配置项目基于spring4+mybatis3+quartz2.2.1来构建的，pom文件如下：<project x...
*4
$4
HSET
$25
hash:csdn:article:by:2533
$9
readCount
$3
315
*4
$4
HSET
$25
hash:csdn:article:by:2533
$14
articleContent
$41
csdn/java/1_1_1_19_1504264889.419407.html
*4
$4
HSET
$25
hash:csdn:article:by:2533
$4
date
$16
2017-07-28 16:52
*4
$4
HSET
$25
hash:csdn:article:by:2533
$6
author
$13
Smile_Miracle
*4
$4
HSET
$25
hash:csdn:article:by:2533
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2533
$9
labelList
$29
quartz,spring,数据,mybatis,
*4
$4
HSET
$25
hash:csdn:article:by:2533
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2533
$10
authorLink
$32
http://my.csdn.net/Smile_Miracle
*4
$4
HSET
$25
hash:csdn:article:by:2533
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2534
$2
id
$4
2534
*4
$4
HSET
$25
hash:csdn:article:by:2534
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2534
$3
url
$59
http://blog.csdn.net/smile_miracle/article/details/73795670
*4
$4
HSET
$25
hash:csdn:article:by:2534
$5
title
$54
关于Spring项目配置多个数据源的实例演示
*4
$4
HSET
$25
hash:csdn:article:by:2534
$4
desc
$295
一、多数据源动态切换原理项目中我们经常会遇到多数据源的问题，尤其是数据同步或定时任务等项目更是如此；又例如：读写分离数据库配置的系统。1、多数据源设置： 
1）静态数据源切换：一般情况下，我们可以配置...
*4
$4
HSET
$25
hash:csdn:article:by:2534
$9
readCount
$3
118
*4
$4
HSET
$25
hash:csdn:article:by:2534
$14
articleContent
$41
csdn/java/1_1_1_17_1504264891.550587.html
*4
$4
HSET
$25
hash:csdn:article:by:2534
$4
date
$16
2017-06-27 14:34
*4
$4
HSET
$25
hash:csdn:article:by:2534
$6
author
$13
Smile_Miracle
*4
$4
HSET
$25
hash:csdn:article:by:2534
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2534
$9
labelList
$24
spring,数据库,实例,
*4
$4
HSET
$25
hash:csdn:article:by:2534
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2534
$10
authorLink
$32
http://my.csdn.net/Smile_Miracle
*4
$4
HSET
$25
hash:csdn:article:by:2534
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2535
$2
id
$4
2535
*4
$4
HSET
$25
hash:csdn:article:by:2535
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2535
$3
url
$59
http://blog.csdn.net/smile_miracle/article/details/53287671
*4
$4
HSET
$25
hash:csdn:article:by:2535
$5
title
$19
mybatis级联查询
*4
$4
HSET
$25
hash:csdn:article:by:2535
$4
desc
$297
关联有嵌套查询和嵌套结果两种方式，本文是按照 嵌套结果 这种方式来说明的上一章介绍了多对一的关系，用到了，这是一个复杂类型的关联。我们选择一个示例来回顾下,比如：一个博客有一个用户，关联映射就工作于这...
*4
$4
HSET
$25
hash:csdn:article:by:2535
$9
readCount
$3
630
*4
$4
HSET
$25
hash:csdn:article:by:2535
$14
articleContent
$40
csdn/java/1_1_1_8_1504264892.540249.html
*4
$4
HSET
$25
hash:csdn:article:by:2535
$4
date
$16
2016-11-22 16:32
*4
$4
HSET
$25
hash:csdn:article:by:2535
$6
author
$13
Smile_Miracle
*4
$4
HSET
$25
hash:csdn:article:by:2535
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2535
$9
labelList
$15
mybatis,结构,
*4
$4
HSET
$25
hash:csdn:article:by:2535
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2535
$10
authorLink
$32
http://my.csdn.net/Smile_Miracle
*4
$4
HSET
$25
hash:csdn:article:by:2535
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2536
$2
id
$4
2536
*4
$4
HSET
$25
hash:csdn:article:by:2536
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2536
$3
url
$59
http://blog.csdn.net/smile_miracle/article/details/53857096
*4
$4
HSET
$25
hash:csdn:article:by:2536
$5
title
$63
封装通用分页工具，通过反射指定具体的实现类
*4
$4
HSET
$25
hash:csdn:article:by:2536
$4
desc
$117
分页具体实现类
import java.util.ArrayList;
import java.util.List;public class NavPageInfo {
    private sta...
*4
$4
HSET
$25
hash:csdn:article:by:2536
$9
readCount
$3
211
*4
$4
HSET
$25
hash:csdn:article:by:2536
$14
articleContent
$40
csdn/java/1_1_1_11_1504264893.66129.html
*4
$4
HSET
$25
hash:csdn:article:by:2536
$4
date
$16
2016-12-24 10:49
*4
$4
HSET
$25
hash:csdn:article:by:2536
$6
author
$13
Smile_Miracle
*4
$4
HSET
$25
hash:csdn:article:by:2536
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2536
$9
labelList
$13
分页,class,
*4
$4
HSET
$25
hash:csdn:article:by:2536
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2536
$10
authorLink
$32
http://my.csdn.net/Smile_Miracle
*4
$4
HSET
$25
hash:csdn:article:by:2536
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2537
$2
id
$4
2537
*4
$4
HSET
$25
hash:csdn:article:by:2537
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2537
$3
url
$59
http://blog.csdn.net/smile_miracle/article/details/71516502
*4
$4
HSET
$25
hash:csdn:article:by:2537
$5
title
$68
Java多线程Thread类和Runable接口的区别以及线程类详解
*4
$4
HSET
$25
hash:csdn:article:by:2537
$4
desc
$215
在Java中可有两种方式实现多线程，一种是继承Thread类，一种是实现Runnable接口；Thread类是在java.lang包中定义的。一个类只要继承了Thread类同时覆写了本类中的run()...
*4
$4
HSET
$25
hash:csdn:article:by:2537
$9
readCount
$3
309
*4
$4
HSET
$25
hash:csdn:article:by:2537
$14
articleContent
$40
csdn/java/1_1_1_13_1504264894.60784.html
*4
$4
HSET
$25
hash:csdn:article:by:2537
$4
date
$16
2017-05-10 11:52
*4
$4
HSET
$25
hash:csdn:article:by:2537
$6
author
$13
Smile_Miracle
*4
$4
HSET
$25
hash:csdn:article:by:2537
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2537
$9
labelList
$29
java,多线程,线程,继承,
*4
$4
HSET
$25
hash:csdn:article:by:2537
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2537
$10
authorLink
$32
http://my.csdn.net/Smile_Miracle
*4
$4
HSET
$25
hash:csdn:article:by:2537
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2538
$2
id
$4
2538
*4
$4
HSET
$25
hash:csdn:article:by:2538
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2538
$3
url
$59
http://blog.csdn.net/smile_miracle/article/details/58593168
*4
$4
HSET
$25
hash:csdn:article:by:2538
$5
title
$31
JAVA SDK 极光推送后台DEMO
*4
$4
HSET
$25
hash:csdn:article:by:2538
$4
desc
$92
pom导依赖 
        1.1.1
       
       
            cn.jpush.api
            jpush-clien
*4
$4
HSET
$25
hash:csdn:article:by:2538
$9
readCount
$4
1123
*4
$4
HSET
$25
hash:csdn:article:by:2538
$14
articleContent
$41
csdn/java/1_1_1_12_1504264895.589071.html
*4
$4
HSET
$25
hash:csdn:article:by:2538
$4
date
$16
2017-02-28 13:43
*4
$4
HSET
$25
hash:csdn:article:by:2538
$6
author
$13
Smile_Miracle
*4
$4
HSET
$25
hash:csdn:article:by:2538
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2538
$9
labelList
$9
sdk,java,
*4
$4
HSET
$25
hash:csdn:article:by:2538
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2538
$10
authorLink
$32
http://my.csdn.net/Smile_Miracle
*4
$4
HSET
$25
hash:csdn:article:by:2538
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2539
$2
id
$4
2539
*4
$4
HSET
$25
hash:csdn:article:by:2539
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2539
$3
url
$59
http://blog.csdn.net/smile_miracle/article/details/53303165
*4
$4
HSET
$25
hash:csdn:article:by:2539
$5
title
$45
集成通用Mapper，单表操作从此轻松
*4
$4
HSET
$25
hash:csdn:article:by:2539
$4
desc
$183
如果你使用的Maven开发，你只需在pom.xml文件中加入如下依赖：
    com.github.abel533
    mapper
    2.3.4
如果你想导入架包：下面是连接，由于Map...
*4
$4
HSET
$25
hash:csdn:article:by:2539
$9
readCount
$4
1098
*4
$4
HSET
$25
hash:csdn:article:by:2539
$14
articleContent
$40
csdn/java/1_1_1_9_1504264896.509379.html
*4
$4
HSET
$25
hash:csdn:article:by:2539
$4
date
$16
2016-11-23 12:00
*4
$4
HSET
$25
hash:csdn:article:by:2539
$6
author
$13
Smile_Miracle
*4
$4
HSET
$25
hash:csdn:article:by:2539
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2539
$9
labelList
$10
maven,jpa,
*4
$4
HSET
$25
hash:csdn:article:by:2539
$9
likeCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2539
$10
authorLink
$32
http://my.csdn.net/Smile_Miracle
*4
$4
HSET
$25
hash:csdn:article:by:2539
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2540
$2
id
$4
2540
*4
$4
HSET
$25
hash:csdn:article:by:2540
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2540
$3
url
$59
http://blog.csdn.net/smile_miracle/article/details/53318521
*4
$4
HSET
$25
hash:csdn:article:by:2540
$5
title
$40
Spring集成HttpClient实现跨域请求
*4
$4
HSET
$25
hash:csdn:article:by:2540
$4
desc
$213
在配置spring集成httpclient之前我们先说一下Jsonp，这是一种基于页面script标签的src属性实现的跨域请求，相比于httpclient，jsonp有两点很大的缺点，首先，它只能发...
*4
$4
HSET
$25
hash:csdn:article:by:2540
$9
readCount
$4
1479
*4
$4
HSET
$25
hash:csdn:article:by:2540
$14
articleContent
$40
csdn/java/1_1_1_10_1504264897.74515.html
*4
$4
HSET
$25
hash:csdn:article:by:2540
$4
date
$16
2016-11-24 11:25
*4
$4
HSET
$25
hash:csdn:article:by:2540
$6
author
$13
Smile_Miracle
*4
$4
HSET
$25
hash:csdn:article:by:2540
$12
commentCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2540
$9
labelList
$7
spring,
*4
$4
HSET
$25
hash:csdn:article:by:2540
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2540
$10
authorLink
$32
http://my.csdn.net/Smile_Miracle
*4
$4
HSET
$25
hash:csdn:article:by:2540
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2541
$2
id
$4
2541
*4
$4
HSET
$25
hash:csdn:article:by:2541
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2541
$3
url
$53
http://blog.csdn.net/he90227/article/details/41546193
*4
$4
HSET
$25
hash:csdn:article:by:2541
$5
title
$60
淘宝网采用什么技术架构来实现网站高负载的
*4
$4
HSET
$25
hash:csdn:article:by:2541
$4
desc
$293
时间过得很快，来淘宝已经两个月了，在这两个月的时间里，自己也感受颇深。下面就结合淘宝目前的一些底层技术框架以及自己的一些感触来说说如何构建一个可 伸缩，高性能，高可用性的分布式互联网应用。

相关...
*4
$4
HSET
$25
hash:csdn:article:by:2541
$9
readCount
$4
1514
*4
$4
HSET
$25
hash:csdn:article:by:2541
$14
articleContent
$41
csdn/java/1_0_1_17_1504264906.934209.html
*4
$4
HSET
$25
hash:csdn:article:by:2541
$4
date
$16
2014-11-27 14:53
*4
$4
HSET
$25
hash:csdn:article:by:2541
$6
author
$7
he90227
*4
$4
HSET
$25
hash:csdn:article:by:2541
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2541
$9
labelList
$26
系统架构,架构设计,
*4
$4
HSET
$25
hash:csdn:article:by:2541
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2541
$10
authorLink
$26
http://my.csdn.net/he90227
*4
$4
HSET
$25
hash:csdn:article:by:2541
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2542
$2
id
$4
2542
*4
$4
HSET
$25
hash:csdn:article:by:2542
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2542
$3
url
$53
http://blog.csdn.net/he90227/article/details/41545773
*4
$4
HSET
$25
hash:csdn:article:by:2542
$5
title
$42
国内外大型SNS网站后台架构对比
*4
$4
HSET
$25
hash:csdn:article:by:2542
$4
desc
$249
要问时下什么类型的站点人气最旺？答案当属SNS网站。短短几年的时间，SNS便迅速确立了Web 2.0核心的地位。用户的增长量之快更是让人咂舌，而Facebook访问量首次超越Google的消息也让人觉...
*4
$4
HSET
$25
hash:csdn:article:by:2542
$9
readCount
$4
1261
*4
$4
HSET
$25
hash:csdn:article:by:2542
$14
articleContent
$41
csdn/java/1_0_1_14_1504264910.075052.html
*4
$4
HSET
$25
hash:csdn:article:by:2542
$4
date
$16
2014-11-27 14:33
*4
$4
HSET
$25
hash:csdn:article:by:2542
$6
author
$7
he90227
*4
$4
HSET
$25
hash:csdn:article:by:2542
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2542
$9
labelList
$26
系统架构,架构设计,
*4
$4
HSET
$25
hash:csdn:article:by:2542
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2542
$10
authorLink
$26
http://my.csdn.net/he90227
*4
$4
HSET
$25
hash:csdn:article:by:2542
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2543
$2
id
$4
2543
*4
$4
HSET
$25
hash:csdn:article:by:2543
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2543
$3
url
$53
http://blog.csdn.net/he90227/article/details/41545873
*4
$4
HSET
$25
hash:csdn:article:by:2543
$5
title
$51
构建高并发高可用的电商平台架构实践
*4
$4
HSET
$25
hash:csdn:article:by:2543
$4
desc
$136
原文出自：http://blog.csdn.net/yangbutao/article/details/12242441


一、 设计理念


 


 

1.      空...
*4
$4
HSET
$25
hash:csdn:article:by:2543
$9
readCount
$3
771
*4
$4
HSET
$25
hash:csdn:article:by:2543
$14
articleContent
$39
csdn/java/1_0_1_16_1504264911.6188.html
*4
$4
HSET
$25
hash:csdn:article:by:2543
$4
date
$16
2014-11-27 14:38
*4
$4
HSET
$25
hash:csdn:article:by:2543
$6
author
$7
he90227
*4
$4
HSET
$25
hash:csdn:article:by:2543
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2543
$9
labelList
$13
架构设计,
*4
$4
HSET
$25
hash:csdn:article:by:2543
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2543
$10
authorLink
$26
http://my.csdn.net/he90227
*4
$4
HSET
$25
hash:csdn:article:by:2543
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2544
$2
id
$4
2544
*4
$4
HSET
$25
hash:csdn:article:by:2544
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2544
$3
url
$53
http://blog.csdn.net/he90227/article/details/41545829
*4
$4
HSET
$25
hash:csdn:article:by:2544
$5
title
$30
各大网站架构总结笔记
*4
$4
HSET
$25
hash:csdn:article:by:2544
$4
desc
$291
各大网站架构总结笔记


记得在大学里不止一次关注网站架构方面的东西了，但每次都是泛泛了解，也没有着重记录，一段时间后对各种架构的思想也就模糊了。这几天不知怎么的又心血来潮（可能是快毕业了冲动了...
*4
$4
HSET
$25
hash:csdn:article:by:2544
$9
readCount
$4
3441
*4
$4
HSET
$25
hash:csdn:article:by:2544
$14
articleContent
$41
csdn/java/1_0_1_15_1504264912.498851.html
*4
$4
HSET
$25
hash:csdn:article:by:2544
$4
date
$16
2014-11-27 14:36
*4
$4
HSET
$25
hash:csdn:article:by:2544
$6
author
$7
he90227
*4
$4
HSET
$25
hash:csdn:article:by:2544
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2544
$9
labelList
$13
架构设计,
*4
$4
HSET
$25
hash:csdn:article:by:2544
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2544
$10
authorLink
$26
http://my.csdn.net/he90227
*4
$4
HSET
$25
hash:csdn:article:by:2544
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2545
$2
id
$4
2545
*4
$4
HSET
$25
hash:csdn:article:by:2545
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2545
$3
url
$53
http://blog.csdn.net/he90227/article/details/41545615
*4
$4
HSET
$25
hash:csdn:article:by:2545
$5
title
$30
大型网站的架构设计图
*4
$4
HSET
$25
hash:csdn:article:by:2545
$4
desc
$303
近段时间以来，通过接触有关海量数据处理和搜索引擎的诸多技术，常常见识到不少精妙绝伦的架构图。除了每每感叹于每幅图表面上的绘制的精细之外，更为架构图背后所隐藏的设计思想所叹服。个人这两天一直在搜集各大型...
*4
$4
HSET
$25
hash:csdn:article:by:2545
$9
readCount
$3
471
*4
$4
HSET
$25
hash:csdn:article:by:2545
$14
articleContent
$41
csdn/java/1_0_1_13_1504264913.308992.html
*4
$4
HSET
$25
hash:csdn:article:by:2545
$4
date
$16
2014-11-27 14:22
*4
$4
HSET
$25
hash:csdn:article:by:2545
$6
author
$7
he90227
*4
$4
HSET
$25
hash:csdn:article:by:2545
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2545
$9
labelList
$13
架构设计,
*4
$4
HSET
$25
hash:csdn:article:by:2545
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2545
$10
authorLink
$26
http://my.csdn.net/he90227
*4
$4
HSET
$25
hash:csdn:article:by:2545
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2546
$2
id
$4
2546
*4
$4
HSET
$25
hash:csdn:article:by:2546
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2546
$3
url
$53
http://blog.csdn.net/he90227/article/details/41545465
*4
$4
HSET
$25
hash:csdn:article:by:2546
$5
title
$27
一步步构建大型网站
*4
$4
HSET
$25
hash:csdn:article:by:2546
$4
desc
$221
之前我简单向大家介绍了各个知名大型网站的架构，MySpace的五个里程碑、Flickr的架构、YouTube的架构、PlentyOfFish的架构、WikiPedia的架构。这几个都很典型，我们可以从...
*4
$4
HSET
$25
hash:csdn:article:by:2546
$9
readCount
$3
399
*4
$4
HSET
$25
hash:csdn:article:by:2546
$14
articleContent
$41
csdn/java/1_0_1_12_1504264915.092604.html
*4
$4
HSET
$25
hash:csdn:article:by:2546
$4
date
$16
2014-11-27 14:13
*4
$4
HSET
$25
hash:csdn:article:by:2546
$6
author
$7
he90227
*4
$4
HSET
$25
hash:csdn:article:by:2546
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2546
$9
labelList
$26
系统架构,负载均衡,
*4
$4
HSET
$25
hash:csdn:article:by:2546
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2546
$10
authorLink
$26
http://my.csdn.net/he90227
*4
$4
HSET
$25
hash:csdn:article:by:2546
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2547
$2
id
$4
2547
*4
$4
HSET
$25
hash:csdn:article:by:2547
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2547
$3
url
$60
http://blog.csdn.net/sinat_29843547/article/details/51337082
*4
$4
HSET
$25
hash:csdn:article:by:2547
$5
title
$36
javascript设计模式--单例模式
*4
$4
HSET
$25
hash:csdn:article:by:2547
$4
desc
$221
单例模式：只允许实例化一次的对象类 
这种在基本的编程中可能已经经常的用到，只是不知道是单例模式 
比如config.js文件，service.js里都会经常用到：app.factory('payIn...
*4
$4
HSET
$25
hash:csdn:article:by:2547
$9
readCount
$3
632
*4
$4
HSET
$25
hash:csdn:article:by:2547
$14
articleContent
$39
csdn/java/1_1_1_0_1504264924.56747.html
*4
$4
HSET
$25
hash:csdn:article:by:2547
$4
date
$16
2016-05-07 11:43
*4
$4
HSET
$25
hash:csdn:article:by:2547
$6
author
$14
sinat_29843547
*4
$4
HSET
$25
hash:csdn:article:by:2547
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2547
$9
labelList
$24
javascript,设计模式,
*4
$4
HSET
$25
hash:csdn:article:by:2547
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2547
$10
authorLink
$33
http://my.csdn.net/sinat_29843547
*4
$4
HSET
$25
hash:csdn:article:by:2547
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2548
$2
id
$4
2548
*4
$4
HSET
$25
hash:csdn:article:by:2548
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2548
$3
url
$60
http://blog.csdn.net/sinat_29843547/article/details/51240552
*4
$4
HSET
$25
hash:csdn:article:by:2548
$5
title
$36
javascript设计模式--原型模式
*4
$4
HSET
$25
hash:csdn:article:by:2548
$4
desc
$203
Prototype:用原型实例指向创建对象的类，使用于创建新的对象的类共享原型对象的属性及方法．创建一个焦点图//图片轮播类
var LoopImages = function(imgArr,cont...
*4
$4
HSET
$25
hash:csdn:article:by:2548
$9
readCount
$3
363
*4
$4
HSET
$25
hash:csdn:article:by:2548
$14
articleContent
$40
csdn/java/1_1_1_1_1504264925.508514.html
*4
$4
HSET
$25
hash:csdn:article:by:2548
$4
date
$16
2016-04-25 10:40
*4
$4
HSET
$25
hash:csdn:article:by:2548
$6
author
$14
sinat_29843547
*4
$4
HSET
$25
hash:csdn:article:by:2548
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2548
$9
labelList
$34
javascript,prototype,设计模式,
*4
$4
HSET
$25
hash:csdn:article:by:2548
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2548
$10
authorLink
$33
http://my.csdn.net/sinat_29843547
*4
$4
HSET
$25
hash:csdn:article:by:2548
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2549
$2
id
$4
2549
*4
$4
HSET
$25
hash:csdn:article:by:2549
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2549
$3
url
$60
http://blog.csdn.net/sinat_29843547/article/details/51225722
*4
$4
HSET
$25
hash:csdn:article:by:2549
$5
title
$31
javascript设计模式--Builder
*4
$4
HSET
$25
hash:csdn:article:by:2549
$4
desc
$189
Builder:将一个复杂对象的构建层与其表示层相互分离，同样的构件过程可采用不同的表示．    //创建一位人类
    var Human = function(param){
        /...
*4
$4
HSET
$25
hash:csdn:article:by:2549
$9
readCount
$3
627
*4
$4
HSET
$25
hash:csdn:article:by:2549
$14
articleContent
$40
csdn/java/1_1_1_2_1504264926.537561.html
*4
$4
HSET
$25
hash:csdn:article:by:2549
$4
date
$16
2016-04-23 12:35
*4
$4
HSET
$25
hash:csdn:article:by:2549
$6
author
$14
sinat_29843547
*4
$4
HSET
$25
hash:csdn:article:by:2549
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2549
$9
labelList
$13
设计模式,
*4
$4
HSET
$25
hash:csdn:article:by:2549
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2549
$10
authorLink
$33
http://my.csdn.net/sinat_29843547
*4
$4
HSET
$25
hash:csdn:article:by:2549
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2550
$2
id
$4
2550
*4
$4
HSET
$25
hash:csdn:article:by:2550
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2550
$3
url
$60
http://blog.csdn.net/sinat_29843547/article/details/51218102
*4
$4
HSET
$25
hash:csdn:article:by:2550
$5
title
$42
javascript设计模式--抽象工厂模式
*4
$4
HSET
$25
hash:csdn:article:by:2550
$4
desc
$243
抽象工厂模式（abstract Fctory）:通过对类的工厂抽象使其业务用于对产品类鏃的创建，而不负责创建某一类产品的实例．    //汽车抽象类，当使用其实例对象的方法时会抛出错误
    var...
*4
$4
HSET
$25
hash:csdn:article:by:2550
$9
readCount
$3
495
*4
$4
HSET
$25
hash:csdn:article:by:2550
$14
articleContent
$40
csdn/java/1_1_1_3_1504264927.538513.html
*4
$4
HSET
$25
hash:csdn:article:by:2550
$4
date
$16
2016-04-22 10:46
*4
$4
HSET
$25
hash:csdn:article:by:2550
$6
author
$14
sinat_29843547
*4
$4
HSET
$25
hash:csdn:article:by:2550
$12
commentCount
$1
3
*4
$4
HSET
$25
hash:csdn:article:by:2550
$9
labelList
$37
工厂模式,javascript,设计模式,
*4
$4
HSET
$25
hash:csdn:article:by:2550
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2550
$10
authorLink
$33
http://my.csdn.net/sinat_29843547
*4
$4
HSET
$25
hash:csdn:article:by:2550
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2551
$2
id
$4
2551
*4
$4
HSET
$25
hash:csdn:article:by:2551
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2551
$3
url
$60
http://blog.csdn.net/sinat_29843547/article/details/51188368
*4
$4
HSET
$25
hash:csdn:article:by:2551
$5
title
$46
javascript设计模式－－工厂方法模式
*4
$4
HSET
$25
hash:csdn:article:by:2551
$4
desc
$191
工厂方法模式将实际创建对象工作推迟到子类当中。 
1.安全模式类，用new和不用new都能够得到预期的对象。    var Demo = function(){}
    Demo.prototype...
*4
$4
HSET
$25
hash:csdn:article:by:2551
$9
readCount
$3
312
*4
$4
HSET
$25
hash:csdn:article:by:2551
$14
articleContent
$40
csdn/java/1_1_1_4_1504264928.482445.html
*4
$4
HSET
$25
hash:csdn:article:by:2551
$4
date
$16
2016-04-19 10:51
*4
$4
HSET
$25
hash:csdn:article:by:2551
$6
author
$14
sinat_29843547
*4
$4
HSET
$25
hash:csdn:article:by:2551
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2551
$9
labelList
$38
javascript,设计模式,函数,对象,
*4
$4
HSET
$25
hash:csdn:article:by:2551
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2551
$10
authorLink
$33
http://my.csdn.net/sinat_29843547
*4
$4
HSET
$25
hash:csdn:article:by:2551
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2552
$2
id
$4
2552
*4
$4
HSET
$25
hash:csdn:article:by:2552
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2552
$3
url
$54
http://blog.csdn.net/ruishenh/article/details/18319687
*4
$4
HSET
$25
hash:csdn:article:by:2552
$5
title
$49
设计模式-结构型模式总结实例（三）
*4
$4
HSET
$25
hash:csdn:article:by:2552
$4
desc
$247
装饰模式
动态地给一个对象增加一些额外的职责，就增加的功能来说，Decorator模式相比生成子类更加灵活。
 
 
Component（被装饰对象基类）： 定义对象的接口，可以给这些对象动态...
*4
$4
HSET
$25
hash:csdn:article:by:2552
$9
readCount
$4
1320
*4
$4
HSET
$25
hash:csdn:article:by:2552
$14
articleContent
$40
csdn/java/1_0_1_0_1504264945.970071.html
*4
$4
HSET
$25
hash:csdn:article:by:2552
$4
date
$16
2014-01-15 19:48
*4
$4
HSET
$25
hash:csdn:article:by:2552
$6
author
$8
ruishenh
*4
$4
HSET
$25
hash:csdn:article:by:2552
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2552
$9
labelList
$72
设计模式,享元模式,装饰者模式,桥接模式,java设计模式,
*4
$4
HSET
$25
hash:csdn:article:by:2552
$9
likeCount
$2
22
*4
$4
HSET
$25
hash:csdn:article:by:2552
$10
authorLink
$27
http://my.csdn.net/ruishenh
*4
$4
HSET
$25
hash:csdn:article:by:2552
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2553
$2
id
$4
2553
*4
$4
HSET
$25
hash:csdn:article:by:2553
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2553
$3
url
$54
http://blog.csdn.net/ruishenh/article/details/18315735
*4
$4
HSET
$25
hash:csdn:article:by:2553
$5
title
$49
设计模式-结构型模式总结实例（二）
*4
$4
HSET
$25
hash:csdn:article:by:2553
$4
desc
$290
代理模式
为其他对象提供一种代理以控制对这个对象的访问。在某些情况下，一个对象不适合或者不能直接引用另一个对象，而代理对象可以在客户端和目标对象之间起到中介的作用。
 
抽象角色：声明真实对象和...
*4
$4
HSET
$25
hash:csdn:article:by:2553
$9
readCount
$4
1312
*4
$4
HSET
$25
hash:csdn:article:by:2553
$14
articleContent
$40
csdn/java/1_0_1_1_1504264946.717355.html
*4
$4
HSET
$25
hash:csdn:article:by:2553
$4
date
$16
2014-01-15 17:12
*4
$4
HSET
$25
hash:csdn:article:by:2553
$6
author
$8
ruishenh
*4
$4
HSET
$25
hash:csdn:article:by:2553
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2553
$9
labelList
$78
设计模式,java设计模式,代理模式,动态代理模式,适配器模式,
*4
$4
HSET
$25
hash:csdn:article:by:2553
$9
likeCount
$2
22
*4
$4
HSET
$25
hash:csdn:article:by:2553
$10
authorLink
$27
http://my.csdn.net/ruishenh
*4
$4
HSET
$25
hash:csdn:article:by:2553
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2554
$2
id
$4
2554
*4
$4
HSET
$25
hash:csdn:article:by:2554
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2554
$3
url
$54
http://blog.csdn.net/ruishenh/article/details/18315591
*4
$4
HSET
$25
hash:csdn:article:by:2554
$5
title
$49
设计模式-结构型模式总结实例（一）
*4
$4
HSET
$25
hash:csdn:article:by:2554
$4
desc
$288
组合模式
 将对象以树形结构组织起来,以达成“部分－整体”的层次结构，使得客户端对单个对象和组合对象的使用具有一致性.
有时候又叫做部分-整体模式，它使我们树型结构的问题中，模糊了简单元素和复杂元...
*4
$4
HSET
$25
hash:csdn:article:by:2554
$9
readCount
$4
1507
*4
$4
HSET
$25
hash:csdn:article:by:2554
$14
articleContent
$40
csdn/java/1_0_1_2_1504264947.824552.html
*4
$4
HSET
$25
hash:csdn:article:by:2554
$4
date
$16
2014-01-15 17:09
*4
$4
HSET
$25
hash:csdn:article:by:2554
$6
author
$8
ruishenh
*4
$4
HSET
$25
hash:csdn:article:by:2554
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2554
$9
labelList
$69
java设计模式,设计模式,组合模式,外观模式,门面模式,
*4
$4
HSET
$25
hash:csdn:article:by:2554
$9
likeCount
$2
22
*4
$4
HSET
$25
hash:csdn:article:by:2554
$10
authorLink
$27
http://my.csdn.net/ruishenh
*4
$4
HSET
$25
hash:csdn:article:by:2554
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2555
$2
id
$4
2555
*4
$4
HSET
$25
hash:csdn:article:by:2555
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2555
$3
url
$54
http://blog.csdn.net/ruishenh/article/details/18230757
*4
$4
HSET
$25
hash:csdn:article:by:2555
$5
title
$49
设计模式-行为型模式总结实例（四）
*4
$4
HSET
$25
hash:csdn:article:by:2555
$4
desc
$209
解释器模式
给定一个语言，定义他的文法的一个表示，并定义一个解释器，这个解释器使用该表示来解释语言中的句子。

package com.ruishenh.designPatter.action....
*4
$4
HSET
$25
hash:csdn:article:by:2555
$9
readCount
$3
950
*4
$4
HSET
$25
hash:csdn:article:by:2555
$14
articleContent
$40
csdn/java/1_0_1_3_1504264948.662676.html
*4
$4
HSET
$25
hash:csdn:article:by:2555
$4
date
$16
2014-01-13 20:02
*4
$4
HSET
$25
hash:csdn:article:by:2555
$6
author
$8
ruishenh
*4
$4
HSET
$25
hash:csdn:article:by:2555
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2555
$9
labelList
$56
设计模式,解释器模式,备忘录模式,java设计,
*4
$4
HSET
$25
hash:csdn:article:by:2555
$9
likeCount
$2
20
*4
$4
HSET
$25
hash:csdn:article:by:2555
$10
authorLink
$27
http://my.csdn.net/ruishenh
*4
$4
HSET
$25
hash:csdn:article:by:2555
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2556
$2
id
$4
2556
*4
$4
HSET
$25
hash:csdn:article:by:2556
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2556
$3
url
$54
http://blog.csdn.net/ruishenh/article/details/18217061
*4
$4
HSET
$25
hash:csdn:article:by:2556
$5
title
$49
设计模式-行为型模式总结实例（三）
*4
$4
HSET
$25
hash:csdn:article:by:2556
$4
desc
$184
职责链模式
使多个对象都有机会处理请求，从而避免请求的发送者和接收者之间的耦合关系 
 package com.ruishenh.designPatter.action.chainOfResp;
...
*4
$4
HSET
$25
hash:csdn:article:by:2556
$9
readCount
$4
1201
*4
$4
HSET
$25
hash:csdn:article:by:2556
$14
articleContent
$40
csdn/java/1_0_1_4_1504264949.930243.html
*4
$4
HSET
$25
hash:csdn:article:by:2556
$4
date
$16
2014-01-13 11:04
*4
$4
HSET
$25
hash:csdn:article:by:2556
$6
author
$8
ruishenh
*4
$4
HSET
$25
hash:csdn:article:by:2556
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2556
$9
labelList
$72
设计模式,访问者模式,职责链模式,中介者模式,java设计,
*4
$4
HSET
$25
hash:csdn:article:by:2556
$9
likeCount
$2
26
*4
$4
HSET
$25
hash:csdn:article:by:2556
$10
authorLink
$27
http://my.csdn.net/ruishenh
*4
$4
HSET
$25
hash:csdn:article:by:2556
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2557
$2
id
$4
2557
*4
$4
HSET
$25
hash:csdn:article:by:2557
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2557
$3
url
$54
http://blog.csdn.net/ruishenh/article/details/18149655
*4
$4
HSET
$25
hash:csdn:article:by:2557
$5
title
$49
设计模式-行为型模式总结实例（二）
*4
$4
HSET
$25
hash:csdn:article:by:2557
$4
desc
$228
命令模式
将一个请求封装为一个对象，从而使你可以用不同的请求对客户进行参数化，对请求排队和记录请求日志，以及支持可撤销的操作。
 
package com.ruishenh.designPatt...
*4
$4
HSET
$25
hash:csdn:article:by:2557
$9
readCount
$4
1330
*4
$4
HSET
$25
hash:csdn:article:by:2557
$14
articleContent
$40
csdn/java/1_0_1_5_1504264950.980989.html
*4
$4
HSET
$25
hash:csdn:article:by:2557
$4
date
$16
2014-01-11 21:15
*4
$4
HSET
$25
hash:csdn:article:by:2557
$6
author
$8
ruishenh
*4
$4
HSET
$25
hash:csdn:article:by:2557
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2557
$9
labelList
$69
设计模式,命令模式,状态模式,策略模式,java设计模式,
*4
$4
HSET
$25
hash:csdn:article:by:2557
$9
likeCount
$2
28
*4
$4
HSET
$25
hash:csdn:article:by:2557
$10
authorLink
$27
http://my.csdn.net/ruishenh
*4
$4
HSET
$25
hash:csdn:article:by:2557
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2558
$2
id
$4
2558
*4
$4
HSET
$25
hash:csdn:article:by:2558
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2558
$3
url
$54
http://blog.csdn.net/ruishenh/article/details/18046885
*4
$4
HSET
$25
hash:csdn:article:by:2558
$5
title
$49
设计模式-行为型模式总结实例（一）
*4
$4
HSET
$25
hash:csdn:article:by:2558
$4
desc
$190
迭代器模式
提供一个方法顺序访问一个聚合对象的各个元素，而又不需要暴露该对象的内部表示。
 
package com.ruishenh.designPatter.action.iterator;...
*4
$4
HSET
$25
hash:csdn:article:by:2558
$9
readCount
$4
1170
*4
$4
HSET
$25
hash:csdn:article:by:2558
$14
articleContent
$40
csdn/java/1_0_1_6_1504264951.984428.html
*4
$4
HSET
$25
hash:csdn:article:by:2558
$4
date
$16
2014-01-09 18:21
*4
$4
HSET
$25
hash:csdn:article:by:2558
$6
author
$8
ruishenh
*4
$4
HSET
$25
hash:csdn:article:by:2558
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2558
$9
labelList
$75
行为模式,设计模式,java设计模式,迭代器模式,观察者模式,
*4
$4
HSET
$25
hash:csdn:article:by:2558
$9
likeCount
$2
20
*4
$4
HSET
$25
hash:csdn:article:by:2558
$10
authorLink
$27
http://my.csdn.net/ruishenh
*4
$4
HSET
$25
hash:csdn:article:by:2558
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2559
$2
id
$4
2559
*4
$4
HSET
$25
hash:csdn:article:by:2559
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2559
$3
url
$54
http://blog.csdn.net/ruishenh/article/details/17795505
*4
$4
HSET
$25
hash:csdn:article:by:2559
$5
title
$34
设计模式-创建型总结实例
*4
$4
HSET
$25
hash:csdn:article:by:2559
$4
desc
$266
创建型
 
单例模式
Singleton，单例模式：保证一个类只有一个实例，并提供一个访问它的全局访问点 
java中单例模式是一种常见的设计模式，单例模式分三种：懒汉式单例、饿汉式单例、登记式单例三...
*4
$4
HSET
$25
hash:csdn:article:by:2559
$9
readCount
$4
1671
*4
$4
HSET
$25
hash:csdn:article:by:2559
$14
articleContent
$40
csdn/java/1_0_1_7_1504264953.104042.html
*4
$4
HSET
$25
hash:csdn:article:by:2559
$4
date
$16
2014-01-03 17:46
*4
$4
HSET
$25
hash:csdn:article:by:2559
$6
author
$8
ruishenh
*4
$4
HSET
$25
hash:csdn:article:by:2559
$12
commentCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2559
$9
labelList
$43
java,设计模式,所有的创建型模式,
*4
$4
HSET
$25
hash:csdn:article:by:2559
$9
likeCount
$2
27
*4
$4
HSET
$25
hash:csdn:article:by:2559
$10
authorLink
$27
http://my.csdn.net/ruishenh
*4
$4
HSET
$25
hash:csdn:article:by:2559
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2560
$2
id
$4
2560
*4
$4
HSET
$25
hash:csdn:article:by:2560
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2560
$3
url
$58
http://blog.csdn.net/fs1360472174/article/details/75708257
*4
$4
HSET
$25
hash:csdn:article:by:2560
$5
title
$36
mongo driver类加载导致的错误
*4
$4
HSET
$25
hash:csdn:article:by:2560
$4
desc
$285
摘要一次类加载导致的错误，之所以要记录下来，是因为错误的发现不是在本地开发环境或者预部署环境，而是在生产环境。这应该是个易于重现的问题，但是不知道为什么直到生产环境部署时才报错。问题Unsatisfi...
*4
$4
HSET
$25
hash:csdn:article:by:2560
$9
readCount
$3
213
*4
$4
HSET
$25
hash:csdn:article:by:2560
$14
articleContent
$40
csdn/java/1_1_1_0_1504264958.186124.html
*4
$4
HSET
$25
hash:csdn:article:by:2560
$4
date
$16
2017-07-22 10:40
*4
$4
HSET
$25
hash:csdn:article:by:2560
$6
author
$12
FS1360472174
*4
$4
HSET
$25
hash:csdn:article:by:2560
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2560
$9
labelList
$32
java,类加载,mongo,spring-dat,
*4
$4
HSET
$25
hash:csdn:article:by:2560
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2560
$10
authorLink
$31
http://my.csdn.net/FS1360472174
*4
$4
HSET
$25
hash:csdn:article:by:2560
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2561
$2
id
$4
2561
*4
$4
HSET
$25
hash:csdn:article:by:2561
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2561
$3
url
$58
http://blog.csdn.net/fs1360472174/article/details/74044426
*4
$4
HSET
$25
hash:csdn:article:by:2561
$5
title
$41
Warning maven relocated xml-apis to 1.0.b
*4
$4
HSET
$25
hash:csdn:article:by:2561
$4
desc
$259
maven 依赖在ｍａｖｅｎ项目中，一些基础的ｊａｒ包被引用多次是很常见的事情。ｍａｖｅｎ选择ｊａｒ的版本是基于 
－　依赖深度浅的　比如Ｃ项目依赖xml.jar。Ｃ依赖的Ｂ也引入了xml.jar。那...
*4
$4
HSET
$25
hash:csdn:article:by:2561
$9
readCount
$3
330
*4
$4
HSET
$25
hash:csdn:article:by:2561
$14
articleContent
$40
csdn/java/1_1_1_1_1504264959.303324.html
*4
$4
HSET
$25
hash:csdn:article:by:2561
$4
date
$16
2017-07-01 11:29
*4
$4
HSET
$25
hash:csdn:article:by:2561
$6
author
$12
FS1360472174
*4
$4
HSET
$25
hash:csdn:article:by:2561
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2561
$9
labelList
$30
maven,jar,dependency,xml-apis,
*4
$4
HSET
$25
hash:csdn:article:by:2561
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2561
$10
authorLink
$31
http://my.csdn.net/FS1360472174
*4
$4
HSET
$25
hash:csdn:article:by:2561
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2562
$2
id
$4
2562
*4
$4
HSET
$25
hash:csdn:article:by:2562
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2562
$3
url
$58
http://blog.csdn.net/fs1360472174/article/details/69817523
*4
$4
HSET
$25
hash:csdn:article:by:2562
$5
title
$28
cassandra 堆外内存管理
*4
$4
HSET
$25
hash:csdn:article:by:2562
$4
desc
$241
为什么需要堆外内存呢单有一些大内存对象的时候，JVM进行垃圾回收时需要收集所有的这些对象的内存也。增加了GC压力。因此需要使用堆外内存。java 分配堆外内存org.apache.cassandra....
*4
$4
HSET
$25
hash:csdn:article:by:2562
$9
readCount
$3
703
*4
$4
HSET
$25
hash:csdn:article:by:2562
$14
articleContent
$40
csdn/java/1_1_1_2_1504264960.115355.html
*4
$4
HSET
$25
hash:csdn:article:by:2562
$4
date
$16
2017-04-09 15:11
*4
$4
HSET
$25
hash:csdn:article:by:2562
$6
author
$12
FS1360472174
*4
$4
HSET
$25
hash:csdn:article:by:2562
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2562
$9
labelList
$31
cassandra,java,jvm,offheap,ohc,
*4
$4
HSET
$25
hash:csdn:article:by:2562
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2562
$10
authorLink
$31
http://my.csdn.net/FS1360472174
*4
$4
HSET
$25
hash:csdn:article:by:2562
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2563
$2
id
$4
2563
*4
$4
HSET
$25
hash:csdn:article:by:2563
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2563
$3
url
$58
http://blog.csdn.net/fs1360472174/article/details/52494383
*4
$4
HSET
$25
hash:csdn:article:by:2563
$5
title
$39
Spring Boot 中应用Spring data mongdb
*4
$4
HSET
$25
hash:csdn:article:by:2563
$4
desc
$205
摘要本文主要简单介绍下如何在Spring Boot 项目中使用Spring data mongdb.没有深入探究，仅供入门参考。 
文末有代码链接准备安装mongodb 
需要连接mongodb，所以...
*4
$4
HSET
$25
hash:csdn:article:by:2563
$9
readCount
$3
726
*4
$4
HSET
$25
hash:csdn:article:by:2563
$14
articleContent
$40
csdn/java/1_1_1_3_1504264961.317322.html
*4
$4
HSET
$25
hash:csdn:article:by:2563
$4
date
$16
2016-09-10 12:48
*4
$4
HSET
$25
hash:csdn:article:by:2563
$6
author
$12
FS1360472174
*4
$4
HSET
$25
hash:csdn:article:by:2563
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2563
$9
labelList
$40
springboot,spr-mongo,repository,mongodb,
*4
$4
HSET
$25
hash:csdn:article:by:2563
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2563
$10
authorLink
$31
http://my.csdn.net/FS1360472174
*4
$4
HSET
$25
hash:csdn:article:by:2563
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2564
$2
id
$4
2564
*4
$4
HSET
$25
hash:csdn:article:by:2564
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2564
$3
url
$58
http://blog.csdn.net/fs1360472174/article/details/26141577
*4
$4
HSET
$25
hash:csdn:article:by:2564
$5
title
$52
基于Struts+Hibernate开发过程中遇到的错误
*4
$4
HSET
$25
hash:csdn:article:by:2564
$4
desc
$156
1.import  javax.servlet.http.HttpServletRequest 导入包出错

导入包出错，通常是包未引入，HttpServletRequest包是浏览器通过http...
*4
$4
HSET
$25
hash:csdn:article:by:2564
$9
readCount
$3
892
*4
$4
HSET
$25
hash:csdn:article:by:2564
$14
articleContent
$41
csdn/java/1_1_1_11_1504264962.227282.html
*4
$4
HSET
$25
hash:csdn:article:by:2564
$4
date
$16
2014-05-18 13:22
*4
$4
HSET
$25
hash:csdn:article:by:2564
$6
author
$12
FS1360472174
*4
$4
HSET
$25
hash:csdn:article:by:2564
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2564
$9
labelList
$24
Struts hibernate 调试,
*4
$4
HSET
$25
hash:csdn:article:by:2564
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2564
$10
authorLink
$31
http://my.csdn.net/FS1360472174
*4
$4
HSET
$25
hash:csdn:article:by:2564
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2565
$2
id
$4
2565
*4
$4
HSET
$25
hash:csdn:article:by:2565
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2565
$3
url
$58
http://blog.csdn.net/fs1360472174/article/details/52141800
*4
$4
HSET
$25
hash:csdn:article:by:2565
$5
title
$32
JDK 源码学习——ByteBuffer
*4
$4
HSET
$25
hash:csdn:article:by:2565
$4
desc
$175
ByteBuffer 在NIO的作用Java SE4 开始引入Java NIO,相比较于老的IO，更加依赖底层实现。引入通道(Channels)，选择器(selector)，缓冲(Buffers).都...
*4
$4
HSET
$25
hash:csdn:article:by:2565
$9
readCount
$4
1249
*4
$4
HSET
$25
hash:csdn:article:by:2565
$14
articleContent
$38
csdn/java/1_1_1_4_1504264963.2659.html
*4
$4
HSET
$25
hash:csdn:article:by:2565
$4
date
$16
2016-08-07 13:33
*4
$4
HSET
$25
hash:csdn:article:by:2565
$6
author
$12
FS1360472174
*4
$4
HSET
$25
hash:csdn:article:by:2565
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2565
$9
labelList
$34
jdk,java,ByteBuffer,缓冲器-NIO,
*4
$4
HSET
$25
hash:csdn:article:by:2565
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2565
$10
authorLink
$31
http://my.csdn.net/FS1360472174
*4
$4
HSET
$25
hash:csdn:article:by:2565
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2566
$2
id
$4
2566
*4
$4
HSET
$25
hash:csdn:article:by:2566
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2566
$3
url
$58
http://blog.csdn.net/fs1360472174/article/details/50464432
*4
$4
HSET
$25
hash:csdn:article:by:2566
$5
title
$37
Anakia 转换xml文档为其他格式
*4
$4
HSET
$25
hash:csdn:article:by:2566
$4
desc
$183
一.简介 
Anakia 使用JDOM 和Velocity将XML文档转换为特定格式的文档二.解析xml文档方法1.DOMjava jdk,xml-api.jar 
需要加载整个xml文档来构建层次结...
*4
$4
HSET
$25
hash:csdn:article:by:2566
$9
readCount
$3
495
*4
$4
HSET
$25
hash:csdn:article:by:2566
$14
articleContent
$40
csdn/java/1_1_1_5_1504264964.259007.html
*4
$4
HSET
$25
hash:csdn:article:by:2566
$4
date
$16
2016-01-05 18:23
*4
$4
HSET
$25
hash:csdn:article:by:2566
$6
author
$12
FS1360472174
*4
$4
HSET
$25
hash:csdn:article:by:2566
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2566
$9
labelList
$24
Anakia,Velocity,Ant,Xml,
*4
$4
HSET
$25
hash:csdn:article:by:2566
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2566
$10
authorLink
$31
http://my.csdn.net/FS1360472174
*4
$4
HSET
$25
hash:csdn:article:by:2566
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2567
$2
id
$4
2567
*4
$4
HSET
$25
hash:csdn:article:by:2567
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2567
$3
url
$58
http://blog.csdn.net/fs1360472174/article/details/51997080
*4
$4
HSET
$25
hash:csdn:article:by:2567
$5
title
$19
gradle 入门介绍
*4
$4
HSET
$25
hash:csdn:article:by:2567
$4
desc
$103
gradle ????Groovy??????????,?maven????????????xml?????script????gradle ???????build.gradle ????,buil...
*4
$4
HSET
$25
hash:csdn:article:by:2567
$9
readCount
$4
1269
*4
$4
HSET
$25
hash:csdn:article:by:2567
$14
articleContent
$40
csdn/java/1_1_1_8_1504264965.187355.html
*4
$4
HSET
$25
hash:csdn:article:by:2567
$4
date
$16
2016-07-22 17:40
*4
$4
HSET
$25
hash:csdn:article:by:2567
$6
author
$12
FS1360472174
*4
$4
HSET
$25
hash:csdn:article:by:2567
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2567
$9
labelList
$28
groovy,gradle,plugin,custom,
*4
$4
HSET
$25
hash:csdn:article:by:2567
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2567
$10
authorLink
$31
http://my.csdn.net/FS1360472174
*4
$4
HSET
$25
hash:csdn:article:by:2567
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2568
$2
id
$4
2568
*4
$4
HSET
$25
hash:csdn:article:by:2568
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2568
$3
url
$58
http://blog.csdn.net/fs1360472174/article/details/43340889
*4
$4
HSET
$25
hash:csdn:article:by:2568
$5
title
$26
Java读取properties文件
*4
$4
HSET
$25
hash:csdn:article:by:2568
$4
desc
$155
1.jsp页面展示代码

{CSDN:CODE:594235}


2. 代码结构图


其中common中的Prop.java是读取properties文件
3.代码实现
一.初...
*4
$4
HSET
$25
hash:csdn:article:by:2568
$9
readCount
$3
848
*4
$4
HSET
$25
hash:csdn:article:by:2568
$14
articleContent
$41
csdn/java/1_1_1_10_1504264966.059801.html
*4
$4
HSET
$25
hash:csdn:article:by:2568
$4
date
$16
2015-01-31 18:09
*4
$4
HSET
$25
hash:csdn:article:by:2568
$6
author
$12
FS1360472174
*4
$4
HSET
$25
hash:csdn:article:by:2568
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2568
$9
labelList
$29
java,读取properties,缓存,
*4
$4
HSET
$25
hash:csdn:article:by:2568
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2568
$10
authorLink
$31
http://my.csdn.net/FS1360472174
*4
$4
HSET
$25
hash:csdn:article:by:2568
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2569
$2
id
$4
2569
*4
$4
HSET
$25
hash:csdn:article:by:2569
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2569
$3
url
$58
http://blog.csdn.net/fs1360472174/article/details/44727159
*4
$4
HSET
$25
hash:csdn:article:by:2569
$5
title
$52
ajax post请求request.getParameter("")取值为null
*4
$4
HSET
$25
hash:csdn:article:by:2569
$4
desc
$153
写一个简单的ajax 请求，发现通过request.getParamter(“”)取到的值为null 
前台代码：



$(document).ready(function(){
    $("#a...
*4
$4
HSET
$25
hash:csdn:article:by:2569
$9
readCount
$4
5342
*4
$4
HSET
$25
hash:csdn:article:by:2569
$14
articleContent
$40
csdn/java/1_1_1_9_1504264966.988935.html
*4
$4
HSET
$25
hash:csdn:article:by:2569
$4
date
$16
2015-03-29 15:34
*4
$4
HSET
$25
hash:csdn:article:by:2569
$6
author
$12
FS1360472174
*4
$4
HSET
$25
hash:csdn:article:by:2569
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2569
$9
labelList
$19
ajax,post请求-re,
*4
$4
HSET
$25
hash:csdn:article:by:2569
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2569
$10
authorLink
$31
http://my.csdn.net/FS1360472174
*4
$4
HSET
$25
hash:csdn:article:by:2569
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2570
$2
id
$4
2570
*4
$4
HSET
$25
hash:csdn:article:by:2570
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2570
$3
url
$58
http://blog.csdn.net/fs1360472174/article/details/50455598
*4
$4
HSET
$25
hash:csdn:article:by:2570
$5
title
$24
introduction of velocity
*4
$4
HSET
$25
hash:csdn:article:by:2570
$4
desc
$205
introduction of velocity一.velocity 简介基于java 的模板引擎，apache 旗下的开源软件项目。 
目的在于隔离 表示层和业务逻辑层，当然现在做的不仅仅是这些。二...
*4
$4
HSET
$25
hash:csdn:article:by:2570
$9
readCount
$3
439
*4
$4
HSET
$25
hash:csdn:article:by:2570
$14
articleContent
$40
csdn/java/1_1_1_6_1504264968.296471.html
*4
$4
HSET
$25
hash:csdn:article:by:2570
$4
date
$16
2016-01-04 13:55
*4
$4
HSET
$25
hash:csdn:article:by:2570
$6
author
$12
FS1360472174
*4
$4
HSET
$25
hash:csdn:article:by:2570
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2570
$9
labelList
$16
velocity-j,java,
*4
$4
HSET
$25
hash:csdn:article:by:2570
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2570
$10
authorLink
$31
http://my.csdn.net/FS1360472174
*4
$4
HSET
$25
hash:csdn:article:by:2570
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2571
$2
id
$4
2571
*4
$4
HSET
$25
hash:csdn:article:by:2571
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2571
$3
url
$58
http://blog.csdn.net/fs1360472174/article/details/51147051
*4
$4
HSET
$25
hash:csdn:article:by:2571
$5
title
$24
Eclipse中设置VM参数
*4
$4
HSET
$25
hash:csdn:article:by:2571
$4
desc
$189
eclipse.ini
-Xms256m //设置堆最小值
-Xmx1024m //设置堆最大值



Eclipse
做JVM 的分析时,需要动态设置JVM的参数来进行各种测试，
可以在下图地方进行...
*4
$4
HSET
$25
hash:csdn:article:by:2571
$9
readCount
$4
4308
*4
$4
HSET
$25
hash:csdn:article:by:2571
$14
articleContent
$40
csdn/java/1_1_1_7_1504264969.060317.html
*4
$4
HSET
$25
hash:csdn:article:by:2571
$4
date
$16
2016-04-13 22:00
*4
$4
HSET
$25
hash:csdn:article:by:2571
$6
author
$12
FS1360472174
*4
$4
HSET
$25
hash:csdn:article:by:2571
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2571
$9
labelList
$28
jvm参数,eclipse,堆大小,
*4
$4
HSET
$25
hash:csdn:article:by:2571
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2571
$10
authorLink
$31
http://my.csdn.net/FS1360472174
*4
$4
HSET
$25
hash:csdn:article:by:2571
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2572
$2
id
$4
2572
*4
$4
HSET
$25
hash:csdn:article:by:2572
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2572
$3
url
$59
http://blog.csdn.net/smile_miracle/article/details/76682385
*4
$4
HSET
$25
hash:csdn:article:by:2572
$5
title
$33
Maven Web项目解决跨域问题
*4
$4
HSET
$25
hash:csdn:article:by:2572
$4
desc
$201
跨域问题目前笔者所用到的方案大致有三种:jsonp,SpringMVC 4以上注解方式和cros三方过滤器。JsonpJSONP(JSON with Padding)是一个非官方的协议，它允许在服务器...
*4
$4
HSET
$25
hash:csdn:article:by:2572
$9
readCount
$3
145
*4
$4
HSET
$25
hash:csdn:article:by:2572
$14
articleContent
$40
csdn/java/1_1_2_0_1504265007.453906.html
*4
$4
HSET
$25
hash:csdn:article:by:2572
$4
date
$16
2017-08-04 14:11
*4
$4
HSET
$25
hash:csdn:article:by:2572
$6
author
$13
Smile_Miracle
*4
$4
HSET
$25
hash:csdn:article:by:2572
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2572
$9
labelList
$25
spring mvc,服务器,web,
*4
$4
HSET
$25
hash:csdn:article:by:2572
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2572
$10
authorLink
$32
http://my.csdn.net/Smile_Miracle
*4
$4
HSET
$25
hash:csdn:article:by:2572
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2573
$2
id
$4
2573
*4
$4
HSET
$25
hash:csdn:article:by:2573
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2573
$3
url
$59
http://blog.csdn.net/smile_miracle/article/details/76684829
*4
$4
HSET
$25
hash:csdn:article:by:2573
$5
title
$44
web项目Log4j日志输出路径配置问题
*4
$4
HSET
$25
hash:csdn:article:by:2573
$4
desc
$259
问题描述：一个web项目想在一个tomcat下运行多个实例（通过修改war包名称的实现），然后每个实例都将日志输出到tomcat的logs目录下实例名命名的文件夹下进行区分查看每个实例日志，要求通过尽...
*4
$4
HSET
$25
hash:csdn:article:by:2573
$9
readCount
$3
136
*4
$4
HSET
$25
hash:csdn:article:by:2573
$14
articleContent
$40
csdn/java/1_1_2_1_1504265008.421972.html
*4
$4
HSET
$25
hash:csdn:article:by:2573
$4
date
$16
2017-08-04 14:50
*4
$4
HSET
$25
hash:csdn:article:by:2573
$6
author
$13
Smile_Miracle
*4
$4
HSET
$25
hash:csdn:article:by:2573
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2573
$9
labelList
$18
log4j,web.xml,web,
*4
$4
HSET
$25
hash:csdn:article:by:2573
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2573
$10
authorLink
$32
http://my.csdn.net/Smile_Miracle
*4
$4
HSET
$25
hash:csdn:article:by:2573
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2574
$2
id
$4
2574
*4
$4
HSET
$25
hash:csdn:article:by:2574
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2574
$3
url
$59
http://blog.csdn.net/smile_miracle/article/details/76849830
*4
$4
HSET
$25
hash:csdn:article:by:2574
$5
title
$54
关于web项目log日志指定输出文件位置配置
*4
$4
HSET
$25
hash:csdn:article:by:2574
$4
desc
$209
首先我们定义一个可以在运行时动态的找出项目的路径WebAppRootKey,这么做的原因是为了在后面配置log4j输出文件路径的时候能随心配置。
         webAppRootKey
    ...
*4
$4
HSET
$25
hash:csdn:article:by:2574
$9
readCount
$3
211
*4
$4
HSET
$25
hash:csdn:article:by:2574
$14
articleContent
$40
csdn/java/1_1_2_2_1504265009.444733.html
*4
$4
HSET
$25
hash:csdn:article:by:2574
$4
date
$16
2017-08-07 15:34
*4
$4
HSET
$25
hash:csdn:article:by:2574
$6
author
$13
Smile_Miracle
*4
$4
HSET
$25
hash:csdn:article:by:2574
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2574
$9
labelList
$10
web,log4j,
*4
$4
HSET
$25
hash:csdn:article:by:2574
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2574
$10
authorLink
$32
http://my.csdn.net/Smile_Miracle
*4
$4
HSET
$25
hash:csdn:article:by:2574
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2575
$2
id
$4
2575
*4
$4
HSET
$25
hash:csdn:article:by:2575
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2575
$3
url
$60
http://blog.csdn.net/han_yankun2009/article/details/19917733
*4
$4
HSET
$25
hash:csdn:article:by:2575
$5
title
$11
java--IO流
*4
$4
HSET
$25
hash:csdn:article:by:2575
$4
desc
$259
java中的流按照不同的方式，可以有不同的分类标准 。
但还是有基本的公有方法，读，写，关闭，缓冲等。


 
 
不同的标准有不同的类型。
 
按照功能分配，有节点和处理。节点和处理...
*4
$4
HSET
$25
hash:csdn:article:by:2575
$9
readCount
$4
1636
*4
$4
HSET
$25
hash:csdn:article:by:2575
$14
articleContent
$40
csdn/java/1_1_1_0_1504265011.473885.html
*4
$4
HSET
$25
hash:csdn:article:by:2575
$4
date
$16
2014-02-25 15:47
*4
$4
HSET
$25
hash:csdn:article:by:2575
$6
author
$14
han_yankun2009
*4
$4
HSET
$25
hash:csdn:article:by:2575
$12
commentCount
$2
39
*4
$4
HSET
$25
hash:csdn:article:by:2575
$9
labelList
$5
java,
*4
$4
HSET
$25
hash:csdn:article:by:2575
$9
likeCount
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2575
$10
authorLink
$33
http://my.csdn.net/han_yankun2009
*4
$4
HSET
$25
hash:csdn:article:by:2575
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2576
$2
id
$4
2576
*4
$4
HSET
$25
hash:csdn:article:by:2576
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2576
$3
url
$60
http://blog.csdn.net/han_yankun2009/article/details/20465917
*4
$4
HSET
$25
hash:csdn:article:by:2576
$5
title
$13
java多线程
*4
$4
HSET
$25
hash:csdn:article:by:2576
$4
desc
$284
说道多线程
 
就得来认识下咱们经常说道的几个概念。
进程：
是一个静态的概念，它本身是不能动的，每个进程都是有一个主方法的执行路径，这个路径就是一个具体的线程。
 
线程：不同的程序执行路径。
 
...
*4
$4
HSET
$25
hash:csdn:article:by:2576
$9
readCount
$4
1691
*4
$4
HSET
$25
hash:csdn:article:by:2576
$14
articleContent
$40
csdn/java/1_1_1_1_1504265012.493952.html
*4
$4
HSET
$25
hash:csdn:article:by:2576
$4
date
$16
2014-03-04 15:55
*4
$4
HSET
$25
hash:csdn:article:by:2576
$6
author
$14
han_yankun2009
*4
$4
HSET
$25
hash:csdn:article:by:2576
$12
commentCount
$2
44
*4
$4
HSET
$25
hash:csdn:article:by:2576
$9
labelList
$15
java,多线程,
*4
$4
HSET
$25
hash:csdn:article:by:2576
$9
likeCount
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2576
$10
authorLink
$33
http://my.csdn.net/han_yankun2009
*4
$4
HSET
$25
hash:csdn:article:by:2576
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2577
$2
id
$4
2577
*4
$4
HSET
$25
hash:csdn:article:by:2577
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2577
$3
url
$60
http://blog.csdn.net/han_yankun2009/article/details/21552853
*4
$4
HSET
$25
hash:csdn:article:by:2577
$5
title
$10
J2EE--JDBC
*4
$4
HSET
$25
hash:csdn:article:by:2577
$4
desc
$187
JDBC


（java Data Base Connectivity Java数据库链接）是一种用于执行SQL语句的JavaAPI，可以为多种关系数据库提
供统一访问，它由一组用Java语言...
*4
$4
HSET
$25
hash:csdn:article:by:2577
$9
readCount
$4
1943
*4
$4
HSET
$25
hash:csdn:article:by:2577
$14
articleContent
$40
csdn/java/1_1_1_3_1504265013.516284.html
*4
$4
HSET
$25
hash:csdn:article:by:2577
$4
date
$16
2014-03-19 20:20
*4
$4
HSET
$25
hash:csdn:article:by:2577
$6
author
$14
han_yankun2009
*4
$4
HSET
$25
hash:csdn:article:by:2577
$12
commentCount
$2
40
*4
$4
HSET
$25
hash:csdn:article:by:2577
$9
labelList
$5
J2EE,
*4
$4
HSET
$25
hash:csdn:article:by:2577
$9
likeCount
$1
5
*4
$4
HSET
$25
hash:csdn:article:by:2577
$10
authorLink
$33
http://my.csdn.net/han_yankun2009
*4
$4
HSET
$25
hash:csdn:article:by:2577
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2578
$2
id
$4
2578
*4
$4
HSET
$25
hash:csdn:article:by:2578
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2578
$3
url
$60
http://blog.csdn.net/han_yankun2009/article/details/22605005
*4
$4
HSET
$25
hash:csdn:article:by:2578
$5
title
$14
J2EE---Servlet
*4
$4
HSET
$25
hash:csdn:article:by:2578
$4
desc
$259
Servlet


是一种独立于操作系统平台和网络传输协议的服务器端的Java应用程序，它用来扩展服务器的功能，可以生成动态的Web页面。最大的用途是通过动态响应客户机请求来扩展服务器功能。Servl...
*4
$4
HSET
$25
hash:csdn:article:by:2578
$9
readCount
$4
1867
*4
$4
HSET
$25
hash:csdn:article:by:2578
$14
articleContent
$40
csdn/java/1_1_1_4_1504265014.590389.html
*4
$4
HSET
$25
hash:csdn:article:by:2578
$4
date
$16
2014-03-30 20:39
*4
$4
HSET
$25
hash:csdn:article:by:2578
$6
author
$14
han_yankun2009
*4
$4
HSET
$25
hash:csdn:article:by:2578
$12
commentCount
$2
32
*4
$4
HSET
$25
hash:csdn:article:by:2578
$9
labelList
$5
J2EE,
*4
$4
HSET
$25
hash:csdn:article:by:2578
$9
likeCount
$1
7
*4
$4
HSET
$25
hash:csdn:article:by:2578
$10
authorLink
$33
http://my.csdn.net/han_yankun2009
*4
$4
HSET
$25
hash:csdn:article:by:2578
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2579
$2
id
$4
2579
*4
$4
HSET
$25
hash:csdn:article:by:2579
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2579
$3
url
$60
http://blog.csdn.net/han_yankun2009/article/details/21094917
*4
$4
HSET
$25
hash:csdn:article:by:2579
$5
title
$20
J2EE规范--Weblogic
*4
$4
HSET
$25
hash:csdn:article:by:2579
$4
desc
$224
什么是weblogic
  是美国Oracl公司出品的一个应用服务器。
 
Weblogic可以做什么
 
      是用于开发，继承，部署和管理分布式web应用，网络和数据库应用的java应用服务...
*4
$4
HSET
$25
hash:csdn:article:by:2579
$9
readCount
$4
1705
*4
$4
HSET
$25
hash:csdn:article:by:2579
$14
articleContent
$40
csdn/java/1_1_1_2_1504265015.679375.html
*4
$4
HSET
$25
hash:csdn:article:by:2579
$4
date
$16
2014-03-12 15:51
*4
$4
HSET
$25
hash:csdn:article:by:2579
$6
author
$14
han_yankun2009
*4
$4
HSET
$25
hash:csdn:article:by:2579
$12
commentCount
$2
37
*4
$4
HSET
$25
hash:csdn:article:by:2579
$9
labelList
$10
java,J2EE,
*4
$4
HSET
$25
hash:csdn:article:by:2579
$9
likeCount
$1
5
*4
$4
HSET
$25
hash:csdn:article:by:2579
$10
authorLink
$33
http://my.csdn.net/han_yankun2009
*4
$4
HSET
$25
hash:csdn:article:by:2579
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2580
$2
id
$4
2580
*4
$4
HSET
$25
hash:csdn:article:by:2580
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2580
$3
url
$56
http://blog.csdn.net/bingjianit/article/details/53607856
*4
$4
HSET
$25
hash:csdn:article:by:2580
$5
title
$30
设计模式之建造者模式
*4
$4
HSET
$25
hash:csdn:article:by:2580
$4
desc
$109
单例模式(Singleton Pattern)是最简单的一种设计模式。下面让我们开始学习单例模式。
*4
$4
HSET
$25
hash:csdn:article:by:2580
$9
readCount
$3
967
*4
$4
HSET
$25
hash:csdn:article:by:2580
$14
articleContent
$40
csdn/java/1_1_1_0_1504265017.644817.html
*4
$4
HSET
$25
hash:csdn:article:by:2580
$4
date
$16
2016-12-13 11:37
*4
$4
HSET
$25
hash:csdn:article:by:2580
$6
author
$10
bingjianIT
*4
$4
HSET
$25
hash:csdn:article:by:2580
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2580
$9
labelList
$34
java,建造者模式,设计模式,
*4
$4
HSET
$25
hash:csdn:article:by:2580
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2580
$10
authorLink
$29
http://my.csdn.net/bingjianIT
*4
$4
HSET
$25
hash:csdn:article:by:2580
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2581
$2
id
$4
2581
*4
$4
HSET
$25
hash:csdn:article:by:2581
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2581
$3
url
$56
http://blog.csdn.net/bingjianit/article/details/53560074
*4
$4
HSET
$25
hash:csdn:article:by:2581
$5
title
$27
设计模式之单例模式
*4
$4
HSET
$25
hash:csdn:article:by:2581
$4
desc
$109
单例模式(Singleton Pattern)是最简单的一种设计模式。下面让我们开始学习单例模式。
*4
$4
HSET
$25
hash:csdn:article:by:2581
$9
readCount
$3
652
*4
$4
HSET
$25
hash:csdn:article:by:2581
$14
articleContent
$39
csdn/java/1_1_1_1_1504265018.57862.html
*4
$4
HSET
$25
hash:csdn:article:by:2581
$4
date
$16
2016-12-10 18:10
*4
$4
HSET
$25
hash:csdn:article:by:2581
$6
author
$10
bingjianIT
*4
$4
HSET
$25
hash:csdn:article:by:2581
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2581
$9
labelList
$28
设计模式,singleton,java,
*4
$4
HSET
$25
hash:csdn:article:by:2581
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2581
$10
authorLink
$29
http://my.csdn.net/bingjianIT
*4
$4
HSET
$25
hash:csdn:article:by:2581
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2582
$2
id
$4
2582
*4
$4
HSET
$25
hash:csdn:article:by:2582
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2582
$3
url
$57
http://blog.csdn.net/qq_26525215/article/details/51052781
*4
$4
HSET
$25
hash:csdn:article:by:2582
$5
title
$30
Java---设计模块(值对象)
*4
$4
HSET
$25
hash:csdn:article:by:2582
$4
desc
$281
★ 场景和问题 
在Java开发时，需要来回交换大量的数据，比如要为方法传入参数，也要获取方法的返回值，该如何能更好的进行数据的交互？★ 基本的编写步骤 
◎第1步：写一个类，实现可序列化（如果以后数...
*4
$4
HSET
$25
hash:csdn:article:by:2582
$9
readCount
$3
807
*4
$4
HSET
$25
hash:csdn:article:by:2582
$14
articleContent
$40
csdn/java/1_0_2_0_1504265033.605077.html
*4
$4
HSET
$25
hash:csdn:article:by:2582
$4
date
$16
2016-04-03 23:32
*4
$4
HSET
$25
hash:csdn:article:by:2582
$6
author
$11
qq_26525215
*4
$4
HSET
$25
hash:csdn:article:by:2582
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2582
$9
labelList
$28
值对象,java,设计模块,
*4
$4
HSET
$25
hash:csdn:article:by:2582
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2582
$10
authorLink
$30
http://my.csdn.net/qq_26525215
*4
$4
HSET
$25
hash:csdn:article:by:2582
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2583
$2
id
$4
2583
*4
$4
HSET
$25
hash:csdn:article:by:2583
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2583
$3
url
$57
http://blog.csdn.net/qq_26525215/article/details/51052677
*4
$4
HSET
$25
hash:csdn:article:by:2583
$5
title
$33
Java---设计模块(工厂方法)
*4
$4
HSET
$25
hash:csdn:article:by:2583
$4
desc
$239
★ 场景和问题 
Java程序开发讲究面向接口编程，隐藏具体的实现类，可是如何得到接口呢？工厂类的命名规范：***Factory 
单例工厂方法的命名规范：getInstance()工厂的本质是“选择...
*4
$4
HSET
$25
hash:csdn:article:by:2583
$9
readCount
$3
616
*4
$4
HSET
$25
hash:csdn:article:by:2583
$14
articleContent
$40
csdn/java/1_0_2_1_1504265034.674185.html
*4
$4
HSET
$25
hash:csdn:article:by:2583
$4
date
$16
2016-04-03 23:07
*4
$4
HSET
$25
hash:csdn:article:by:2583
$6
author
$11
qq_26525215
*4
$4
HSET
$25
hash:csdn:article:by:2583
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2583
$9
labelList
$19
java,设计,工厂,
*4
$4
HSET
$25
hash:csdn:article:by:2583
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2583
$10
authorLink
$30
http://my.csdn.net/qq_26525215
*4
$4
HSET
$25
hash:csdn:article:by:2583
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2584
$2
id
$4
2584
*4
$4
HSET
$25
hash:csdn:article:by:2584
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2584
$3
url
$57
http://blog.csdn.net/qq_26525215/article/details/51045082
*4
$4
HSET
$25
hash:csdn:article:by:2584
$5
title
$44
Java---设计模块(单例的变形)(多例)
*4
$4
HSET
$25
hash:csdn:article:by:2584
$4
desc
$287
设计模式1——单例变形(多例) 
★ 缓存在单例中的使用 
缓存在编程中使用很频繁，有着非常重要的作用，它能够帮助程序实现以空间换取时间，通常被设计成整个应用程序所共享的一个空间，现要求实现一个用缓存...
*4
$4
HSET
$25
hash:csdn:article:by:2584
$9
readCount
$4
8295
*4
$4
HSET
$25
hash:csdn:article:by:2584
$14
articleContent
$39
csdn/java/1_0_2_2_1504265035.78254.html
*4
$4
HSET
$25
hash:csdn:article:by:2584
$4
date
$16
2016-04-02 19:21
*4
$4
HSET
$25
hash:csdn:article:by:2584
$6
author
$11
qq_26525215
*4
$4
HSET
$25
hash:csdn:article:by:2584
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2584
$9
labelList
$41
设计模式,设计,应用,对象,缓存,
*4
$4
HSET
$25
hash:csdn:article:by:2584
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2584
$10
authorLink
$30
http://my.csdn.net/qq_26525215
*4
$4
HSET
$25
hash:csdn:article:by:2584
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2585
$2
id
$4
2585
*4
$4
HSET
$25
hash:csdn:article:by:2585
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2585
$3
url
$57
http://blog.csdn.net/qq_26525215/article/details/51044941
*4
$4
HSET
$25
hash:csdn:article:by:2585
$5
title
$88
Java---设计模块（设计模块的简介及最简单的俩个单例代码加测试）
*4
$4
HSET
$25
hash:csdn:article:by:2585
$4
desc
$291
设计模式学习概述： 
★ 为什么要学习设计模式 
1、设计模式都是一些相对优秀的解决方案，很多问题都是典型的、有代表性的问题，学习设计模式，我们就不用自己从头来解决这些问题，相当于在巨人的肩膀上，复用...
*4
$4
HSET
$25
hash:csdn:article:by:2585
$9
readCount
$4
8473
*4
$4
HSET
$25
hash:csdn:article:by:2585
$14
articleContent
$40
csdn/java/1_0_2_3_1504265036.665518.html
*4
$4
HSET
$25
hash:csdn:article:by:2585
$4
date
$16
2016-04-02 18:42
*4
$4
HSET
$25
hash:csdn:article:by:2585
$6
author
$11
qq_26525215
*4
$4
HSET
$25
hash:csdn:article:by:2585
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2585
$9
labelList
$34
测试,设计,设计模式,架构,
*4
$4
HSET
$25
hash:csdn:article:by:2585
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2585
$10
authorLink
$30
http://my.csdn.net/qq_26525215
*4
$4
HSET
$25
hash:csdn:article:by:2585
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2586
$2
id
$4
2586
*4
$4
HSET
$25
hash:csdn:article:by:2586
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2586
$3
url
$51
http://blog.csdn.net/iihero/article/details/7506742
*4
$4
HSET
$25
hash:csdn:article:by:2586
$5
title
$64
设计模式(1)-创建型-单件(Singleton)模式 (个人笔记)
*4
$4
HSET
$25
hash:csdn:article:by:2586
$4
desc
$283
提起设计模式，确实有不少著作讨论它，>一书理论化很强，我这里干脆整理出一些用代码来体现的实例来说明。第一个就是Singleton模式，意指始终保证只创建或得到一个唯一的实例。其代码如下：提起设计模式，...
*4
$4
HSET
$25
hash:csdn:article:by:2586
$9
readCount
$4
2919
*4
$4
HSET
$25
hash:csdn:article:by:2586
$14
articleContent
$40
csdn/java/1_1_1_0_1504265043.615652.html
*4
$4
HSET
$25
hash:csdn:article:by:2586
$4
date
$16
2012-04-26 07:04
*4
$4
HSET
$25
hash:csdn:article:by:2586
$6
author
$6
iihero
*4
$4
HSET
$25
hash:csdn:article:by:2586
$12
commentCount
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2586
$9
labelList
$43
设计模式,class,多线程,string,null,c,
*4
$4
HSET
$25
hash:csdn:article:by:2586
$9
likeCount
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2586
$10
authorLink
$25
http://my.csdn.net/iihero
*4
$4
HSET
$25
hash:csdn:article:by:2586
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2587
$2
id
$4
2587
*4
$4
HSET
$25
hash:csdn:article:by:2587
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2587
$3
url
$51
http://blog.csdn.net/iihero/article/details/7506745
*4
$4
HSET
$25
hash:csdn:article:by:2587
$5
title
$68
设计模式(2)-创建型-工厂方法(Factory method)(个人笔记)
*4
$4
HSET
$25
hash:csdn:article:by:2587
$4
desc
$259
概述：定义一个用于创建对象的接口，让子类决定实例化哪一个类。FactoryMethod使一个类的实例化延迟到其子类。
适用性： 1.当一个类不知道它所必须创建的对象的类的时候。

 2.当一个类希望由...
*4
$4
HSET
$25
hash:csdn:article:by:2587
$9
readCount
$4
2407
*4
$4
HSET
$25
hash:csdn:article:by:2587
$14
articleContent
$39
csdn/java/1_1_1_1_1504265044.67208.html
*4
$4
HSET
$25
hash:csdn:article:by:2587
$4
date
$16
2012-04-26 07:06
*4
$4
HSET
$25
hash:csdn:article:by:2587
$6
author
$6
iihero
*4
$4
HSET
$25
hash:csdn:article:by:2587
$12
commentCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2587
$9
labelList
$43
设计模式,class,任务,interface,string,
*4
$4
HSET
$25
hash:csdn:article:by:2587
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2587
$10
authorLink
$25
http://my.csdn.net/iihero
*4
$4
HSET
$25
hash:csdn:article:by:2587
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2588
$2
id
$4
2588
*4
$4
HSET
$25
hash:csdn:article:by:2588
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2588
$3
url
$51
http://blog.csdn.net/iihero/article/details/7519467
*4
$4
HSET
$25
hash:csdn:article:by:2588
$5
title
$64
设计模式(6)-结构型-适配器模式(Adapter)(个人笔记)
*4
$4
HSET
$25
hash:csdn:article:by:2588
$4
desc
$266
概述    将一个类的接口转换成客户希望的另外一个接口。Adapter模式使得原本由于接口不兼容而不能一起工作的那些类可以一起工作。
 适用性    1.你想使用一个已经存在的类，而它的接口不符合你的...
*4
$4
HSET
$25
hash:csdn:article:by:2588
$9
readCount
$4
1849
*4
$4
HSET
$25
hash:csdn:article:by:2588
$14
articleContent
$40
csdn/java/1_1_1_5_1504265045.759409.html
*4
$4
HSET
$25
hash:csdn:article:by:2588
$4
date
$16
2012-04-28 11:47
*4
$4
HSET
$25
hash:csdn:article:by:2588
$6
author
$6
iihero
*4
$4
HSET
$25
hash:csdn:article:by:2588
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2588
$9
labelList
$40
设计模式,string,class,object,工作,
*4
$4
HSET
$25
hash:csdn:article:by:2588
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2588
$10
authorLink
$25
http://my.csdn.net/iihero
*4
$4
HSET
$25
hash:csdn:article:by:2588
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2589
$2
id
$4
2589
*4
$4
HSET
$25
hash:csdn:article:by:2589
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2589
$3
url
$51
http://blog.csdn.net/iihero/article/details/7713127
*4
$4
HSET
$25
hash:csdn:article:by:2589
$5
title
$60
设计模式(7)-结构型-桥接模式(Bridge)(个人笔记)
*4
$4
HSET
$25
hash:csdn:article:by:2589
$4
desc
$282
概述:将抽象部分与它的实现部分分离，使它们都可以独立地变化。适用性    1.你不希望在抽象和它的实现部分之间有一个固定的绑定关系。      例如这种情况可能是因为，在程序运行时刻实现部分应可以被选...
*4
$4
HSET
$25
hash:csdn:article:by:2589
$9
readCount
$4
3469
*4
$4
HSET
$25
hash:csdn:article:by:2589
$14
articleContent
$40
csdn/java/1_1_1_6_1504265048.810782.html
*4
$4
HSET
$25
hash:csdn:article:by:2589
$4
date
$16
2012-07-03 20:52
*4
$4
HSET
$25
hash:csdn:article:by:2589
$6
author
$6
iihero
*4
$4
HSET
$25
hash:csdn:article:by:2589
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2589
$9
labelList
$26
设计模式,class,string,
*4
$4
HSET
$25
hash:csdn:article:by:2589
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2589
$10
authorLink
$25
http://my.csdn.net/iihero
*4
$4
HSET
$25
hash:csdn:article:by:2589
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2590
$2
id
$4
2590
*4
$4
HSET
$25
hash:csdn:article:by:2590
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2590
$3
url
$51
http://blog.csdn.net/iihero/article/details/7506749
*4
$4
HSET
$25
hash:csdn:article:by:2590
$5
title
$70
设计模式(3)-创建型-抽象工厂(Abstract Factory)(个人笔记)
*4
$4
HSET
$25
hash:csdn:article:by:2590
$4
desc
$273
概述：提供一个创建一系列相关或相互依赖对象的接口，而无需指定它们具体的类。
适用性：    1.一个系统要独立于它的产品的创建、组合和表示时。

    2.一个系统要由多个产品系列中的一个来配置时。...
*4
$4
HSET
$25
hash:csdn:article:by:2590
$9
readCount
$4
1874
*4
$4
HSET
$25
hash:csdn:article:by:2590
$14
articleContent
$40
csdn/java/1_1_1_2_1504265050.760118.html
*4
$4
HSET
$25
hash:csdn:article:by:2590
$4
date
$16
2012-04-26 07:08
*4
$4
HSET
$25
hash:csdn:article:by:2590
$6
author
$6
iihero
*4
$4
HSET
$25
hash:csdn:article:by:2590
$12
commentCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2590
$9
labelList
$43
设计模式,产品,class,interface,string,
*4
$4
HSET
$25
hash:csdn:article:by:2590
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2590
$10
authorLink
$25
http://my.csdn.net/iihero
*4
$4
HSET
$25
hash:csdn:article:by:2590
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2591
$2
id
$4
2591
*4
$4
HSET
$25
hash:csdn:article:by:2591
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2591
$3
url
$51
http://blog.csdn.net/iihero/article/details/7506750
*4
$4
HSET
$25
hash:csdn:article:by:2591
$5
title
$58
设计模式(4)-创建型-建造者(Builder)(个人笔记)
*4
$4
HSET
$25
hash:csdn:article:by:2591
$4
desc
$273
概述：将一个复杂对象的构建与它的表示分离，使得同样的构建过程可以创建不同的表示。
适用性    1.当创建复杂对象的算法应该独立于该对象的组成部分以及它们的装配方式时。

    2.当构造过程必须允...
*4
$4
HSET
$25
hash:csdn:article:by:2591
$9
readCount
$4
1940
*4
$4
HSET
$25
hash:csdn:article:by:2591
$14
articleContent
$39
csdn/java/1_1_1_3_1504265051.79732.html
*4
$4
HSET
$25
hash:csdn:article:by:2591
$4
date
$16
2012-04-26 07:10
*4
$4
HSET
$25
hash:csdn:article:by:2591
$6
author
$6
iihero
*4
$4
HSET
$25
hash:csdn:article:by:2591
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2591
$9
labelList
$47
设计模式,string,制造,class,产品,算法,
*4
$4
HSET
$25
hash:csdn:article:by:2591
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2591
$10
authorLink
$25
http://my.csdn.net/iihero
*4
$4
HSET
$25
hash:csdn:article:by:2591
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2592
$2
id
$4
2592
*4
$4
HSET
$25
hash:csdn:article:by:2592
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2592
$3
url
$51
http://blog.csdn.net/iihero/article/details/7519456
*4
$4
HSET
$25
hash:csdn:article:by:2592
$5
title
$63
设计模式(5)-创建型-原型(Prototype)模式(个人笔记)
*4
$4
HSET
$25
hash:csdn:article:by:2592
$4
desc
$264
概述    用原型实例指定创建对象的种类，并且通过拷贝这些原型创建新的对象。
 适用性    1.当一个系统应该独立于它的产品创建、构成和表示时。

    2.当要实例化的类是在运行时刻指定时，例如...
*4
$4
HSET
$25
hash:csdn:article:by:2592
$9
readCount
$4
1807
*4
$4
HSET
$25
hash:csdn:article:by:2592
$14
articleContent
$40
csdn/java/1_1_1_4_1504265052.761093.html
*4
$4
HSET
$25
hash:csdn:article:by:2592
$4
date
$16
2012-04-28 11:44
*4
$4
HSET
$25
hash:csdn:article:by:2592
$6
author
$6
iihero
*4
$4
HSET
$25
hash:csdn:article:by:2592
$12
commentCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2592
$9
labelList
$53
prototype,设计模式,string,exception,class,产品,
*4
$4
HSET
$25
hash:csdn:article:by:2592
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2592
$10
authorLink
$25
http://my.csdn.net/iihero
*4
$4
HSET
$25
hash:csdn:article:by:2592
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2593
$2
id
$4
2593
*4
$4
HSET
$25
hash:csdn:article:by:2593
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2593
$3
url
$51
http://blog.csdn.net/iihero/article/details/8218750
*4
$4
HSET
$25
hash:csdn:article:by:2593
$5
title
$46
设计模式(20)-行为型-状态模式(State)
*4
$4
HSET
$25
hash:csdn:article:by:2593
$4
desc
$275
概述    定义对象间的一种一对多的依赖关系,当一个对象的状态发生改变时,所有依赖于它的对象都得到通知并被自动更新。
适用性    1.一个对象的行为取决于它的状态,并且它必须在运行时刻根据状态改变它...
*4
$4
HSET
$25
hash:csdn:article:by:2593
$9
readCount
$4
1842
*4
$4
HSET
$25
hash:csdn:article:by:2593
$14
articleContent
$41
csdn/java/1_1_1_19_1504265056.733126.html
*4
$4
HSET
$25
hash:csdn:article:by:2593
$4
date
$16
2012-11-24 06:16
*4
$4
HSET
$25
hash:csdn:article:by:2593
$6
author
$6
iihero
*4
$4
HSET
$25
hash:csdn:article:by:2593
$12
commentCount
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2593
$9
labelList
$20
设计模式 架构,
*4
$4
HSET
$25
hash:csdn:article:by:2593
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2593
$10
authorLink
$25
http://my.csdn.net/iihero
*4
$4
HSET
$25
hash:csdn:article:by:2593
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2594
$2
id
$4
2594
*4
$4
HSET
$25
hash:csdn:article:by:2594
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2594
$3
url
$59
http://blog.csdn.net/ysjian_pingcx/article/details/43730417
*4
$4
HSET
$25
hash:csdn:article:by:2594
$5
title
$36
设计模式(001) 开启设计之旅
*4
$4
HSET
$25
hash:csdn:article:by:2594
$4
desc
$303
“身体和灵魂，总有一个在路上”，有的人旅行，有的人看书，还有些人在旅行中写出启迪人心的好书来，身体在路上赋予了灵魂的力量。我的设计模式之旅，与你、与我，能带来什么呢？抛开遥远深邃的美丽传说，是为了感谢...
*4
$4
HSET
$25
hash:csdn:article:by:2594
$9
readCount
$4
1574
*4
$4
HSET
$25
hash:csdn:article:by:2594
$14
articleContent
$40
csdn/java/1_0_1_1_1504265065.899645.html
*4
$4
HSET
$25
hash:csdn:article:by:2594
$4
date
$16
2015-02-11 09:32
*4
$4
HSET
$25
hash:csdn:article:by:2594
$6
author
$13
ysjian_pingcx
*4
$4
HSET
$25
hash:csdn:article:by:2594
$12
commentCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2594
$9
labelList
$51
设计模式,面向对象,OOD,Java,互联网架构,
*4
$4
HSET
$25
hash:csdn:article:by:2594
$9
likeCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2594
$10
authorLink
$32
http://my.csdn.net/ysjian_pingcx
*4
$4
HSET
$25
hash:csdn:article:by:2594
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2595
$2
id
$4
2595
*4
$4
HSET
$25
hash:csdn:article:by:2595
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2595
$3
url
$55
http://blog.csdn.net/lee272616/article/details/54630243
*4
$4
HSET
$25
hash:csdn:article:by:2595
$5
title
$22
javaEE防盗版-前言
*4
$4
HSET
$25
hash:csdn:article:by:2595
$4
desc
$275
本专栏主要是提供一个思路，用于设计javaWeb项目的防盗版技术（针对付费产品的防盗版）。研究背景在于没有一家公司愿意将自己的产品项目被目标客户破解使用，造成研发公司的重大产品损失。
        ...
*4
$4
HSET
$25
hash:csdn:article:by:2595
$9
readCount
$3
314
*4
$4
HSET
$25
hash:csdn:article:by:2595
$14
articleContent
$40
csdn/java/1_0_1_0_1504265069.687502.html
*4
$4
HSET
$25
hash:csdn:article:by:2595
$4
date
$16
2017-01-20 11:55
*4
$4
HSET
$25
hash:csdn:article:by:2595
$6
author
$9
lee272616
*4
$4
HSET
$25
hash:csdn:article:by:2595
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2595
$9
labelList
$24
java ee,盗版,java web,
*4
$4
HSET
$25
hash:csdn:article:by:2595
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2595
$10
authorLink
$28
http://my.csdn.net/lee272616
*4
$4
HSET
$25
hash:csdn:article:by:2595
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2596
$2
id
$4
2596
*4
$4
HSET
$25
hash:csdn:article:by:2596
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2596
$3
url
$55
http://blog.csdn.net/lee272616/article/details/55057311
*4
$4
HSET
$25
hash:csdn:article:by:2596
$5
title
$29
javaEE防盗版-License开发
*4
$4
HSET
$25
hash:csdn:article:by:2596
$4
desc
$33
介绍java license的基本使用
*4
$4
HSET
$25
hash:csdn:article:by:2596
$9
readCount
$3
830
*4
$4
HSET
$25
hash:csdn:article:by:2596
$14
articleContent
$40
csdn/java/1_0_1_3_1504265070.943946.html
*4
$4
HSET
$25
hash:csdn:article:by:2596
$4
date
$16
2017-02-13 22:22
*4
$4
HSET
$25
hash:csdn:article:by:2596
$6
author
$9
lee272616
*4
$4
HSET
$25
hash:csdn:article:by:2596
$12
commentCount
$1
5
*4
$4
HSET
$25
hash:csdn:article:by:2596
$9
labelList
$23
java license,防盗版,
*4
$4
HSET
$25
hash:csdn:article:by:2596
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2596
$10
authorLink
$28
http://my.csdn.net/lee272616
*4
$4
HSET
$25
hash:csdn:article:by:2596
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2597
$2
id
$4
2597
*4
$4
HSET
$25
hash:csdn:article:by:2597
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2597
$3
url
$55
http://blog.csdn.net/lee272616/article/details/55058683
*4
$4
HSET
$25
hash:csdn:article:by:2597
$5
title
$39
javaEE防盗版-class文件加密思路
*4
$4
HSET
$25
hash:csdn:article:by:2597
$4
desc
$47
本文介绍class文件加密技术的思路。
*4
$4
HSET
$25
hash:csdn:article:by:2597
$9
readCount
$3
304
*4
$4
HSET
$25
hash:csdn:article:by:2597
$14
articleContent
$40
csdn/java/1_0_1_4_1504265072.782587.html
*4
$4
HSET
$25
hash:csdn:article:by:2597
$4
date
$16
2017-02-13 22:39
*4
$4
HSET
$25
hash:csdn:article:by:2597
$6
author
$9
lee272616
*4
$4
HSET
$25
hash:csdn:article:by:2597
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2597
$9
labelList
$28
防盗版,class文件加密,
*4
$4
HSET
$25
hash:csdn:article:by:2597
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2597
$10
authorLink
$28
http://my.csdn.net/lee272616
*4
$4
HSET
$25
hash:csdn:article:by:2597
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2598
$2
id
$4
2598
*4
$4
HSET
$25
hash:csdn:article:by:2598
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2598
$3
url
$55
http://blog.csdn.net/lee272616/article/details/54599612
*4
$4
HSET
$25
hash:csdn:article:by:2598
$5
title
$32
javaEE防盗版-java之类加载
*4
$4
HSET
$25
hash:csdn:article:by:2598
$4
desc
$267
前言
        类加载技术是java运行的核心部分之一，虽然对于开发来说运用到此技术的地方不多，但是作为JAVAEE防盗版技术的组成部分之一，这一部分对于研发来说也需要着重了解。
本文分析对象针...
*4
$4
HSET
$25
hash:csdn:article:by:2598
$9
readCount
$3
333
*4
$4
HSET
$25
hash:csdn:article:by:2598
$14
articleContent
$39
csdn/java/1_0_1_1_1504265073.71474.html
*4
$4
HSET
$25
hash:csdn:article:by:2598
$4
date
$16
2017-01-18 13:53
*4
$4
HSET
$25
hash:csdn:article:by:2598
$6
author
$9
lee272616
*4
$4
HSET
$25
hash:csdn:article:by:2598
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2598
$9
labelList
$10
类加载,
*4
$4
HSET
$25
hash:csdn:article:by:2598
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2598
$10
authorLink
$28
http://my.csdn.net/lee272616
*4
$4
HSET
$25
hash:csdn:article:by:2598
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2599
$2
id
$4
2599
*4
$4
HSET
$25
hash:csdn:article:by:2599
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2599
$3
url
$55
http://blog.csdn.net/lee272616/article/details/52689900
*4
$4
HSET
$25
hash:csdn:article:by:2599
$5
title
$37
javaEE防盗版-ProGuard 混淆技术
*4
$4
HSET
$25
hash:csdn:article:by:2599
$4
desc
$253
这里介绍一些java的混淆技术。混淆主要是为了保护产权，增加代码反编译后的阅读难度。


本文介绍的是ProGuard来进行代码混淆，集成在Maven环境中。常规环境的混淆技术以后再做介绍了


PO...
*4
$4
HSET
$25
hash:csdn:article:by:2599
$9
readCount
$4
3617
*4
$4
HSET
$25
hash:csdn:article:by:2599
$14
articleContent
$40
csdn/java/1_0_1_2_1504265074.009081.html
*4
$4
HSET
$25
hash:csdn:article:by:2599
$4
date
$16
2016-09-28 14:03
*4
$4
HSET
$25
hash:csdn:article:by:2599
$6
author
$9
lee272616
*4
$4
HSET
$25
hash:csdn:article:by:2599
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2599
$9
labelList
$27
ProGuard,混淆,java,Maven,
*4
$4
HSET
$25
hash:csdn:article:by:2599
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2599
$10
authorLink
$28
http://my.csdn.net/lee272616
*4
$4
HSET
$25
hash:csdn:article:by:2599
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2600
$2
id
$4
2600
*4
$4
HSET
$25
hash:csdn:article:by:2600
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2600
$3
url
$57
http://blog.csdn.net/qq_28602957/article/details/54728981
*4
$4
HSET
$25
hash:csdn:article:by:2600
$5
title
$42
给我一张名片——工厂方法模式
*4
$4
HSET
$25
hash:csdn:article:by:2600
$4
desc
$269
工厂方法模式（Factory Method）:通过对产品类的抽象使其创建业务主要负责用于创建多类产品的实例。广告是一个公司主要的一个经济来源，这不，很多企业等着要来公司首页打广告呢。广告展现“小白, ...
*4
$4
HSET
$25
hash:csdn:article:by:2600
$9
readCount
$3
586
*4
$4
HSET
$25
hash:csdn:article:by:2600
$14
articleContent
$40
csdn/java/1_0_1_0_1504265076.062304.html
*4
$4
HSET
$25
hash:csdn:article:by:2600
$4
date
$16
2017-01-25 11:39
*4
$4
HSET
$25
hash:csdn:article:by:2600
$6
author
$11
qq_28602957
*4
$4
HSET
$25
hash:csdn:article:by:2600
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2600
$9
labelList
$43
设计模式,JavaScript,工厂方法模式,
*4
$4
HSET
$25
hash:csdn:article:by:2600
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2600
$10
authorLink
$30
http://my.csdn.net/qq_28602957
*4
$4
HSET
$25
hash:csdn:article:by:2600
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2601
$2
id
$4
2601
*4
$4
HSET
$25
hash:csdn:article:by:2601
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2601
$3
url
$57
http://blog.csdn.net/qq_28602957/article/details/53130979
*4
$4
HSET
$25
hash:csdn:article:by:2601
$5
title
$28
灵活的语言---JavaScript
*4
$4
HSET
$25
hash:csdn:article:by:2601
$4
desc
$299
结束了4年的大学学习生活，小白信心满满地来到应聘的M公司。今天是入职的第一天，项目经理分下来一个验证表单功能的任务，内容不多，仅需要验证用户名、邮箱、密码等。入职第一天小白接到需求看了看，感觉很简单，...
*4
$4
HSET
$25
hash:csdn:article:by:2601
$9
readCount
$4
1483
*4
$4
HSET
$25
hash:csdn:article:by:2601
$14
articleContent
$40
csdn/java/1_0_1_4_1504265077.135193.html
*4
$4
HSET
$25
hash:csdn:article:by:2601
$4
date
$16
2016-11-11 17:53
*4
$4
HSET
$25
hash:csdn:article:by:2601
$6
author
$11
qq_28602957
*4
$4
HSET
$25
hash:csdn:article:by:2601
$12
commentCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2601
$9
labelList
$38
函数,语言,设计模式,JavaScript,
*4
$4
HSET
$25
hash:csdn:article:by:2601
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2601
$10
authorLink
$30
http://my.csdn.net/qq_28602957
*4
$4
HSET
$25
hash:csdn:article:by:2601
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2602
$2
id
$4
2602
*4
$4
HSET
$25
hash:csdn:article:by:2602
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2602
$3
url
$57
http://blog.csdn.net/qq_28602957/article/details/53228522
*4
$4
HSET
$25
hash:csdn:article:by:2602
$5
title
$42
神奇的魔术师——简单工厂模式
*4
$4
HSET
$25
hash:csdn:article:by:2602
$4
desc
$275
简单工厂模式（Simple Factory）：又叫静态工厂方法：由一个工厂对象决定创建某一产品对象的实例。主要用来创建同一类对象。小白经过几天对团队代码的学习，终于对面向对象思想有所认识，自己跳动的小...
*4
$4
HSET
$25
hash:csdn:article:by:2602
$9
readCount
$4
1309
*4
$4
HSET
$25
hash:csdn:article:by:2602
$14
articleContent
$40
csdn/java/1_0_1_1_1504265078.124825.html
*4
$4
HSET
$25
hash:csdn:article:by:2602
$4
date
$16
2016-11-19 11:18
*4
$4
HSET
$25
hash:csdn:article:by:2602
$6
author
$11
qq_28602957
*4
$4
HSET
$25
hash:csdn:article:by:2602
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2602
$9
labelList
$50
工厂模式,面向对象,设计模式,JavaScript,
*4
$4
HSET
$25
hash:csdn:article:by:2602
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2602
$10
authorLink
$30
http://my.csdn.net/qq_28602957
*4
$4
HSET
$25
hash:csdn:article:by:2602
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2603
$2
id
$4
2603
*4
$4
HSET
$25
hash:csdn:article:by:2603
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2603
$3
url
$57
http://blog.csdn.net/qq_28602957/article/details/53190858
*4
$4
HSET
$25
hash:csdn:article:by:2603
$5
title
$54
写的都是看到的——面向对象编程（二）
*4
$4
HSET
$25
hash:csdn:article:by:2603
$4
desc
$301
传宗接代——继承“小白，看继承呢？”小铭忙完自己的事情走过来。“是呀，刚才学习类，发现每个类都有3个部分，第一部分是构造函数内的，这是供实例化对象复制用的，第二部分是构造函数外的，直接通过点语法添加的...
*4
$4
HSET
$25
hash:csdn:article:by:2603
$9
readCount
$4
1265
*4
$4
HSET
$25
hash:csdn:article:by:2603
$14
articleContent
$40
csdn/java/1_0_1_2_1504265079.176344.html
*4
$4
HSET
$25
hash:csdn:article:by:2603
$4
date
$16
2016-11-16 19:49
*4
$4
HSET
$25
hash:csdn:article:by:2603
$6
author
$11
qq_28602957
*4
$4
HSET
$25
hash:csdn:article:by:2603
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2603
$9
labelList
$50
面向对象编程,JavaScript,设计模式,对象,
*4
$4
HSET
$25
hash:csdn:article:by:2603
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2603
$10
authorLink
$30
http://my.csdn.net/qq_28602957
*4
$4
HSET
$25
hash:csdn:article:by:2603
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2604
$2
id
$4
2604
*4
$4
HSET
$25
hash:csdn:article:by:2604
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2604
$3
url
$57
http://blog.csdn.net/qq_28602957/article/details/53141513
*4
$4
HSET
$25
hash:csdn:article:by:2604
$5
title
$54
写的都是看到的——面向对象编程（一）
*4
$4
HSET
$25
hash:csdn:article:by:2604
$4
desc
$303
第一天的经历使小白深深认识到校园学到的知识与实际工作中的偏差，所以想见识见识公司团队里大家都是如何书写代码并完成需求的。早晨走进公司的时候恰巧遇见了项目经理。两种编程风格——面向过程与面向对象“早！小...
*4
$4
HSET
$25
hash:csdn:article:by:2604
$9
readCount
$4
1501
*4
$4
HSET
$25
hash:csdn:article:by:2604
$14
articleContent
$40
csdn/java/1_0_1_3_1504265080.343787.html
*4
$4
HSET
$25
hash:csdn:article:by:2604
$4
date
$16
2016-11-12 16:36
*4
$4
HSET
$25
hash:csdn:article:by:2604
$6
author
$11
qq_28602957
*4
$4
HSET
$25
hash:csdn:article:by:2604
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2604
$9
labelList
$63
面向对象编程,函数,面向对象,设计模式,JavaScript,
*4
$4
HSET
$25
hash:csdn:article:by:2604
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2604
$10
authorLink
$30
http://my.csdn.net/qq_28602957
*4
$4
HSET
$25
hash:csdn:article:by:2604
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2605
$2
id
$4
2605
*4
$4
HSET
$25
hash:csdn:article:by:2605
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2605
$3
url
$56
http://blog.csdn.net/jjwwmlp456/article/details/38405579
*4
$4
HSET
$25
hash:csdn:article:by:2605
$5
title
$23
java 实现单例模式
*4
$4
HSET
$25
hash:csdn:article:by:2605
$4
desc
$103
public class Singleton {

private 
static Singleton intance;

private Singleton() {}



public 
stat...
*4
$4
HSET
$25
hash:csdn:article:by:2605
$9
readCount
$4
1289
*4
$4
HSET
$25
hash:csdn:article:by:2605
$14
articleContent
$39
csdn/java/1_0_1_0_1504265090.76142.html
*4
$4
HSET
$25
hash:csdn:article:by:2605
$4
date
$16
2014-08-06 19:15
*4
$4
HSET
$25
hash:csdn:article:by:2605
$6
author
$10
jjwwmlp456
*4
$4
HSET
$25
hash:csdn:article:by:2605
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2605
$9
labelList
$18
java,设计模式,
*4
$4
HSET
$25
hash:csdn:article:by:2605
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2605
$10
authorLink
$29
http://my.csdn.net/jjwwmlp456
*4
$4
HSET
$25
hash:csdn:article:by:2605
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2606
$2
id
$4
2606
*4
$4
HSET
$25
hash:csdn:article:by:2606
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2606
$3
url
$56
http://blog.csdn.net/jjwwmlp456/article/details/39895075
*4
$4
HSET
$25
hash:csdn:article:by:2606
$5
title
$37
Java 实现装饰者(Decorator)模式
*4
$4
HSET
$25
hash:csdn:article:by:2606
$4
desc
$153
在Java中，io包下的很多类就是典型的装饰者模式的体现，如：


new BufferedOutputStream(OutputStream out)

new BufferedInputStrea...
*4
$4
HSET
$25
hash:csdn:article:by:2606
$9
readCount
$4
1035
*4
$4
HSET
$25
hash:csdn:article:by:2606
$14
articleContent
$40
csdn/java/1_0_1_6_1504265091.696365.html
*4
$4
HSET
$25
hash:csdn:article:by:2606
$4
date
$16
2014-10-08 16:42
*4
$4
HSET
$25
hash:csdn:article:by:2606
$6
author
$10
jjwwmlp456
*4
$4
HSET
$25
hash:csdn:article:by:2606
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2606
$9
labelList
$38
设计模式,装饰者Decorator模式,
*4
$4
HSET
$25
hash:csdn:article:by:2606
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2606
$10
authorLink
$29
http://my.csdn.net/jjwwmlp456
*4
$4
HSET
$25
hash:csdn:article:by:2606
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2607
$2
id
$4
2607
*4
$4
HSET
$25
hash:csdn:article:by:2607
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2607
$3
url
$56
http://blog.csdn.net/jjwwmlp456/article/details/39936335
*4
$4
HSET
$25
hash:csdn:article:by:2607
$5
title
$34
Java 实现组合(Composite)模式
*4
$4
HSET
$25
hash:csdn:article:by:2607
$4
desc
$119
类图


/**
 * 树	整体
 * 
 * @author stone
 * 
 */
public class Tree {
	private TreeNode root; //根节点

	pu...
*4
$4
HSET
$25
hash:csdn:article:by:2607
$9
readCount
$4
1951
*4
$4
HSET
$25
hash:csdn:article:by:2607
$14
articleContent
$41
csdn/java/1_0_1_10_1504265092.741277.html
*4
$4
HSET
$25
hash:csdn:article:by:2607
$4
date
$16
2014-10-09 19:30
*4
$4
HSET
$25
hash:csdn:article:by:2607
$6
author
$10
jjwwmlp456
*4
$4
HSET
$25
hash:csdn:article:by:2607
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2607
$9
labelList
$35
设计模式,组合Composite模式,
*4
$4
HSET
$25
hash:csdn:article:by:2607
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2607
$10
authorLink
$29
http://my.csdn.net/jjwwmlp456
*4
$4
HSET
$25
hash:csdn:article:by:2607
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2608
$2
id
$4
2608
*4
$4
HSET
$25
hash:csdn:article:by:2608
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2608
$3
url
$56
http://blog.csdn.net/jjwwmlp456/article/details/39962937
*4
$4
HSET
$25
hash:csdn:article:by:2608
$5
title
$33
Java 实现策略(Strategy)模式
*4
$4
HSET
$25
hash:csdn:article:by:2608
$4
desc
$181
/**
 * 策略模式：针对同一命令(或行为),不同的策略做不同的动作
 *  商品促销
 *  本类为：收取现金的类
 *  
 *  @author stone
 */
public interf...
*4
$4
HSET
$25
hash:csdn:article:by:2608
$9
readCount
$4
1001
*4
$4
HSET
$25
hash:csdn:article:by:2608
$14
articleContent
$41
csdn/java/1_0_1_12_1504265093.743721.html
*4
$4
HSET
$25
hash:csdn:article:by:2608
$4
date
$16
2014-10-10 15:16
*4
$4
HSET
$25
hash:csdn:article:by:2608
$6
author
$10
jjwwmlp456
*4
$4
HSET
$25
hash:csdn:article:by:2608
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2608
$9
labelList
$34
设计模式,策略Strategy模式,
*4
$4
HSET
$25
hash:csdn:article:by:2608
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2608
$10
authorLink
$29
http://my.csdn.net/jjwwmlp456
*4
$4
HSET
$25
hash:csdn:article:by:2608
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2609
$2
id
$4
2609
*4
$4
HSET
$25
hash:csdn:article:by:2609
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2609
$3
url
$56
http://blog.csdn.net/jjwwmlp456/article/details/39963409
*4
$4
HSET
$25
hash:csdn:article:by:2609
$5
title
$45
Java 实现模板方法(TemplateMethod)模式
*4
$4
HSET
$25
hash:csdn:article:by:2609
$4
desc
$133
类图


/**
 * 业务流程模板，提供基本框架
 * @author stone
 *
 */
public abstract class BaseTemplate {
	
	public ...
*4
$4
HSET
$25
hash:csdn:article:by:2609
$9
readCount
$3
936
*4
$4
HSET
$25
hash:csdn:article:by:2609
$14
articleContent
$41
csdn/java/1_0_1_13_1504265094.778933.html
*4
$4
HSET
$25
hash:csdn:article:by:2609
$4
date
$16
2014-10-10 15:34
*4
$4
HSET
$25
hash:csdn:article:by:2609
$6
author
$10
jjwwmlp456
*4
$4
HSET
$25
hash:csdn:article:by:2609
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2609
$9
labelList
$46
设计模式,模板方法TemplateMethod模式,
*4
$4
HSET
$25
hash:csdn:article:by:2609
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2609
$10
authorLink
$29
http://my.csdn.net/jjwwmlp456
*4
$4
HSET
$25
hash:csdn:article:by:2609
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2610
$2
id
$4
2610
*4
$4
HSET
$25
hash:csdn:article:by:2610
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2610
$3
url
$56
http://blog.csdn.net/jjwwmlp456/article/details/39960193
*4
$4
HSET
$25
hash:csdn:article:by:2610
$5
title
$34
Java 实现享元(Flyweight)模式
*4
$4
HSET
$25
hash:csdn:article:by:2610
$4
desc
$107
/**
 * 字母
 * @author stone
 *
 */
public class Letter {

	private String name;

	public Letter(Strin...
*4
$4
HSET
$25
hash:csdn:article:by:2610
$9
readCount
$4
1068
*4
$4
HSET
$25
hash:csdn:article:by:2610
$14
articleContent
$41
csdn/java/1_0_1_11_1504265095.991994.html
*4
$4
HSET
$25
hash:csdn:article:by:2610
$4
date
$16
2014-10-10 12:13
*4
$4
HSET
$25
hash:csdn:article:by:2610
$6
author
$10
jjwwmlp456
*4
$4
HSET
$25
hash:csdn:article:by:2610
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2610
$9
labelList
$35
设计模式,享元Flyweight模式,
*4
$4
HSET
$25
hash:csdn:article:by:2610
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2610
$10
authorLink
$29
http://my.csdn.net/jjwwmlp456
*4
$4
HSET
$25
hash:csdn:article:by:2610
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2611
$2
id
$4
2611
*4
$4
HSET
$25
hash:csdn:article:by:2611
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2611
$3
url
$56
http://blog.csdn.net/jjwwmlp456/article/details/40042087
*4
$4
HSET
$25
hash:csdn:article:by:2611
$5
title
$32
Java 实现命令(Command)模式
*4
$4
HSET
$25
hash:csdn:article:by:2611
$4
desc
$107
类图


public interface ICommand {
	void execute();
}
public class ConcreteCommand implements ICommand...
*4
$4
HSET
$25
hash:csdn:article:by:2611
$9
readCount
$4
1041
*4
$4
HSET
$25
hash:csdn:article:by:2611
$14
articleContent
$41
csdn/java/1_0_1_17_1504265096.898736.html
*4
$4
HSET
$25
hash:csdn:article:by:2611
$4
date
$16
2014-10-13 11:28
*4
$4
HSET
$25
hash:csdn:article:by:2611
$6
author
$10
jjwwmlp456
*4
$4
HSET
$25
hash:csdn:article:by:2611
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2611
$9
labelList
$33
设计模式,命令Command模式,
*4
$4
HSET
$25
hash:csdn:article:by:2611
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2611
$10
authorLink
$29
http://my.csdn.net/jjwwmlp456
*4
$4
HSET
$25
hash:csdn:article:by:2611
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2612
$2
id
$4
2612
*4
$4
HSET
$25
hash:csdn:article:by:2612
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2612
$3
url
$56
http://blog.csdn.net/jjwwmlp456/article/details/39896015
*4
$4
HSET
$25
hash:csdn:article:by:2612
$5
title
$30
Java 实现代理(Proxy)模式
*4
$4
HSET
$25
hash:csdn:article:by:2612
$4
desc
$121
/**
 * 游戏者接口
 * @author stone
 * 
 */
public interface IGamePlayer {

	// 登录游戏
	public void login(St...
*4
$4
HSET
$25
hash:csdn:article:by:2612
$9
readCount
$4
1509
*4
$4
HSET
$25
hash:csdn:article:by:2612
$14
articleContent
$40
csdn/java/1_0_1_7_1504265097.923952.html
*4
$4
HSET
$25
hash:csdn:article:by:2612
$4
date
$16
2014-10-08 17:15
*4
$4
HSET
$25
hash:csdn:article:by:2612
$6
author
$10
jjwwmlp456
*4
$4
HSET
$25
hash:csdn:article:by:2612
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2612
$9
labelList
$31
设计模式,代理Proxy模式,
*4
$4
HSET
$25
hash:csdn:article:by:2612
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2612
$10
authorLink
$29
http://my.csdn.net/jjwwmlp456
*4
$4
HSET
$25
hash:csdn:article:by:2612
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2613
$2
id
$4
2613
*4
$4
HSET
$25
hash:csdn:article:by:2613
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2613
$3
url
$56
http://blog.csdn.net/jjwwmlp456/article/details/39896747
*4
$4
HSET
$25
hash:csdn:article:by:2613
$5
title
$31
java 实现外观(Facade)模式
*4
$4
HSET
$25
hash:csdn:article:by:2613
$4
desc
$107
/**
 * 角色
 * @author stone
 *
 */
public class Actor {
	public Actor(String name) {
		System.out.pri...
*4
$4
HSET
$25
hash:csdn:article:by:2613
$9
readCount
$3
887
*4
$4
HSET
$25
hash:csdn:article:by:2613
$14
articleContent
$40
csdn/java/1_0_1_8_1504265098.970246.html
*4
$4
HSET
$25
hash:csdn:article:by:2613
$4
date
$16
2014-10-08 18:21
*4
$4
HSET
$25
hash:csdn:article:by:2613
$6
author
$10
jjwwmlp456
*4
$4
HSET
$25
hash:csdn:article:by:2613
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2613
$9
labelList
$32
设计模式,外观Facade模式,
*4
$4
HSET
$25
hash:csdn:article:by:2613
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2613
$10
authorLink
$29
http://my.csdn.net/jjwwmlp456
*4
$4
HSET
$25
hash:csdn:article:by:2613
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2614
$2
id
$4
2614
*4
$4
HSET
$25
hash:csdn:article:by:2614
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2614
$3
url
$56
http://blog.csdn.net/jjwwmlp456/article/details/39914353
*4
$4
HSET
$25
hash:csdn:article:by:2614
$5
title
$31
Java 实现桥接(Bridge)模式
*4
$4
HSET
$25
hash:csdn:article:by:2614
$4
desc
$113
/**
 * 手机壳、套
 * @author stone
 *
 */
public abstract class BaseCellphoneShell {
	public abstract voi...
*4
$4
HSET
$25
hash:csdn:article:by:2614
$9
readCount
$4
1368
*4
$4
HSET
$25
hash:csdn:article:by:2614
$14
articleContent
$40
csdn/java/1_0_1_9_1504265099.954924.html
*4
$4
HSET
$25
hash:csdn:article:by:2614
$4
date
$16
2014-10-09 00:49
*4
$4
HSET
$25
hash:csdn:article:by:2614
$6
author
$10
jjwwmlp456
*4
$4
HSET
$25
hash:csdn:article:by:2614
$12
commentCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2614
$9
labelList
$32
设计模式,桥接Bridge模式,
*4
$4
HSET
$25
hash:csdn:article:by:2614
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2614
$10
authorLink
$29
http://my.csdn.net/jjwwmlp456
*4
$4
HSET
$25
hash:csdn:article:by:2614
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2615
$2
id
$4
2615
*4
$4
HSET
$25
hash:csdn:article:by:2615
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2615
$3
url
$56
http://blog.csdn.net/jjwwmlp456/article/details/39586991
*4
$4
HSET
$25
hash:csdn:article:by:2615
$5
title
$29
Java 实现简单工厂模式
*4
$4
HSET
$25
hash:csdn:article:by:2615
$4
desc
$184
工厂模式 属于创建型模式
简单工厂模式
通过一个厂类，以一个条件来创建对应的对象
//业务功能
public interface ICalculation {
	double getResult(d...
*4
$4
HSET
$25
hash:csdn:article:by:2615
$9
readCount
$4
1037
*4
$4
HSET
$25
hash:csdn:article:by:2615
$14
articleContent
$40
csdn/java/1_0_1_1_1504265101.039539.html
*4
$4
HSET
$25
hash:csdn:article:by:2615
$4
date
$16
2014-09-26 22:40
*4
$4
HSET
$25
hash:csdn:article:by:2615
$6
author
$10
jjwwmlp456
*4
$4
HSET
$25
hash:csdn:article:by:2615
$12
commentCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2615
$9
labelList
$13
工厂模式,
*4
$4
HSET
$25
hash:csdn:article:by:2615
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2615
$10
authorLink
$29
http://my.csdn.net/jjwwmlp456
*4
$4
HSET
$25
hash:csdn:article:by:2615
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2616
$2
id
$4
2616
*4
$4
HSET
$25
hash:csdn:article:by:2616
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2616
$3
url
$56
http://blog.csdn.net/jjwwmlp456/article/details/39637255
*4
$4
HSET
$25
hash:csdn:article:by:2616
$5
title
$29
Java 实现抽象工厂模式
*4
$4
HSET
$25
hash:csdn:article:by:2616
$4
desc
$281
抽象工厂模式
里面有几个概念：抽象工厂、实体工厂、抽象产品、实体产品
抽象工厂：定义创建产品的抽象方法
实体工厂：具体的创建哪种产品
抽象产品：一个接口或基类
实体产品：实现具体功能，或派生


...
*4
$4
HSET
$25
hash:csdn:article:by:2616
$9
readCount
$3
985
*4
$4
HSET
$25
hash:csdn:article:by:2616
$14
articleContent
$40
csdn/java/1_0_1_2_1504265102.217044.html
*4
$4
HSET
$25
hash:csdn:article:by:2616
$4
date
$16
2014-09-28 10:41
*4
$4
HSET
$25
hash:csdn:article:by:2616
$6
author
$10
jjwwmlp456
*4
$4
HSET
$25
hash:csdn:article:by:2616
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2616
$9
labelList
$13
工厂模式,
*4
$4
HSET
$25
hash:csdn:article:by:2616
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2616
$10
authorLink
$29
http://my.csdn.net/jjwwmlp456
*4
$4
HSET
$25
hash:csdn:article:by:2616
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2617
$2
id
$4
2617
*4
$4
HSET
$25
hash:csdn:article:by:2617
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2617
$3
url
$56
http://blog.csdn.net/jjwwmlp456/article/details/39891507
*4
$4
HSET
$25
hash:csdn:article:by:2617
$5
title
$34
Java 实现原型(Prototype)模式
*4
$4
HSET
$25
hash:csdn:article:by:2617
$4
desc
$109
public class BaseSpoon implements Cloneable {//spoon 匙, 调羹 
	String name;

	public String getName() ...
*4
$4
HSET
$25
hash:csdn:article:by:2617
$9
readCount
$3
943
*4
$4
HSET
$25
hash:csdn:article:by:2617
$14
articleContent
$40
csdn/java/1_0_1_4_1504265103.047093.html
*4
$4
HSET
$25
hash:csdn:article:by:2617
$4
date
$16
2014-10-08 11:35
*4
$4
HSET
$25
hash:csdn:article:by:2617
$6
author
$10
jjwwmlp456
*4
$4
HSET
$25
hash:csdn:article:by:2617
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2617
$9
labelList
$35
设计模式,原型Prototype模式,
*4
$4
HSET
$25
hash:csdn:article:by:2617
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2617
$10
authorLink
$29
http://my.csdn.net/jjwwmlp456
*4
$4
HSET
$25
hash:csdn:article:by:2617
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2618
$2
id
$4
2618
*4
$4
HSET
$25
hash:csdn:article:by:2618
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2618
$3
url
$56
http://blog.csdn.net/jjwwmlp456/article/details/39893723
*4
$4
HSET
$25
hash:csdn:article:by:2618
$5
title
$35
Java 实现适配器(Adapter)模式
*4
$4
HSET
$25
hash:csdn:article:by:2618
$4
desc
$303
平时我们会经常碰到这样的情况，有了两个现成的类，它们之间没有什么联系，但是我们现在既想用其中一个类的方法，同时也想用另外一个类的方法。有一个解决方法是，修改它们各自的接口，但是这是我们最不愿意看到的。...
*4
$4
HSET
$25
hash:csdn:article:by:2618
$9
readCount
$4
5471
*4
$4
HSET
$25
hash:csdn:article:by:2618
$14
articleContent
$40
csdn/java/1_0_1_5_1504265104.044177.html
*4
$4
HSET
$25
hash:csdn:article:by:2618
$4
date
$16
2014-10-08 15:21
*4
$4
HSET
$25
hash:csdn:article:by:2618
$6
author
$10
jjwwmlp456
*4
$4
HSET
$25
hash:csdn:article:by:2618
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2618
$9
labelList
$23
适配器Adapter模式,
*4
$4
HSET
$25
hash:csdn:article:by:2618
$9
likeCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2618
$10
authorLink
$29
http://my.csdn.net/jjwwmlp456
*4
$4
HSET
$25
hash:csdn:article:by:2618
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2619
$2
id
$4
2619
*4
$4
HSET
$25
hash:csdn:article:by:2619
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2619
$3
url
$56
http://blog.csdn.net/jjwwmlp456/article/details/39890699
*4
$4
HSET
$25
hash:csdn:article:by:2619
$5
title
$35
Java 实现建造者(Builder)模式
*4
$4
HSET
$25
hash:csdn:article:by:2619
$4
desc
$201
建造者(Builder)模式是创建型模式，创建了一个对外隐藏创建过程的产品，使用组合的方式，由指挥者(Director)来决定建造的流程

public interface Builder {
	vo...
*4
$4
HSET
$25
hash:csdn:article:by:2619
$9
readCount
$4
2461
*4
$4
HSET
$25
hash:csdn:article:by:2619
$14
articleContent
$40
csdn/java/1_0_1_3_1504265105.106889.html
*4
$4
HSET
$25
hash:csdn:article:by:2619
$4
date
$16
2014-10-08 10:58
*4
$4
HSET
$25
hash:csdn:article:by:2619
$6
author
$10
jjwwmlp456
*4
$4
HSET
$25
hash:csdn:article:by:2619
$12
commentCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2619
$9
labelList
$36
设计模式,建造者Builder模式,
*4
$4
HSET
$25
hash:csdn:article:by:2619
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2619
$10
authorLink
$29
http://my.csdn.net/jjwwmlp456
*4
$4
HSET
$25
hash:csdn:article:by:2619
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2620
$2
id
$4
2620
*4
$4
HSET
$25
hash:csdn:article:by:2620
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2620
$3
url
$56
http://blog.csdn.net/jjwwmlp456/article/details/39967021
*4
$4
HSET
$25
hash:csdn:article:by:2620
$5
title
$36
Java 实现观察者(Observer)模式
*4
$4
HSET
$25
hash:csdn:article:by:2620
$4
desc
$131
1. Java自带的实现
类图


/**
 * 观察目标 继承自 java.util.Observable
 * @author stone
 *
 */
public class Upda...
*4
$4
HSET
$25
hash:csdn:article:by:2620
$9
readCount
$4
1903
*4
$4
HSET
$25
hash:csdn:article:by:2620
$14
articleContent
$41
csdn/java/1_0_1_14_1504265106.039029.html
*4
$4
HSET
$25
hash:csdn:article:by:2620
$4
date
$16
2014-10-10 19:11
*4
$4
HSET
$25
hash:csdn:article:by:2620
$6
author
$10
jjwwmlp456
*4
$4
HSET
$25
hash:csdn:article:by:2620
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2620
$9
labelList
$37
设计模式,观察者Observer模式,
*4
$4
HSET
$25
hash:csdn:article:by:2620
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2620
$10
authorLink
$29
http://my.csdn.net/jjwwmlp456
*4
$4
HSET
$25
hash:csdn:article:by:2620
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2621
$2
id
$4
2621
*4
$4
HSET
$25
hash:csdn:article:by:2621
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2621
$3
url
$56
http://blog.csdn.net/jjwwmlp456/article/details/40053267
*4
$4
HSET
$25
hash:csdn:article:by:2621
$5
title
$35
Java 实现备忘录(Memento)模式
*4
$4
HSET
$25
hash:csdn:article:by:2621
$4
desc
$111
/**
 * 数据对象
 * @author stone
 *
 */
public class DataState {
	private String action;

	public void s...
*4
$4
HSET
$25
hash:csdn:article:by:2621
$9
readCount
$3
947
*4
$4
HSET
$25
hash:csdn:article:by:2621
$14
articleContent
$41
csdn/java/1_0_1_18_1504265107.188367.html
*4
$4
HSET
$25
hash:csdn:article:by:2621
$4
date
$16
2014-10-13 21:38
*4
$4
HSET
$25
hash:csdn:article:by:2621
$6
author
$10
jjwwmlp456
*4
$4
HSET
$25
hash:csdn:article:by:2621
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2621
$9
labelList
$36
设计模式,备忘录Memento模式,
*4
$4
HSET
$25
hash:csdn:article:by:2621
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2621
$10
authorLink
$29
http://my.csdn.net/jjwwmlp456
*4
$4
HSET
$25
hash:csdn:article:by:2621
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2622
$2
id
$4
2622
*4
$4
HSET
$25
hash:csdn:article:by:2622
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2622
$3
url
$56
http://blog.csdn.net/jjwwmlp456/article/details/40055905
*4
$4
HSET
$25
hash:csdn:article:by:2622
$5
title
$30
Java 实现状态(State)模式
*4
$4
HSET
$25
hash:csdn:article:by:2622
$4
desc
$103
/**
 * @author stone
 */
public class WindowState {
	private String stateValue;
	
	public WindowStat...
*4
$4
HSET
$25
hash:csdn:article:by:2622
$9
readCount
$4
2373
*4
$4
HSET
$25
hash:csdn:article:by:2622
$14
articleContent
$40
csdn/java/1_0_1_19_1504265108.13314.html
*4
$4
HSET
$25
hash:csdn:article:by:2622
$4
date
$16
2014-10-13 23:19
*4
$4
HSET
$25
hash:csdn:article:by:2622
$6
author
$10
jjwwmlp456
*4
$4
HSET
$25
hash:csdn:article:by:2622
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2622
$9
labelList
$31
设计模式,状态State模式,
*4
$4
HSET
$25
hash:csdn:article:by:2622
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2622
$10
authorLink
$29
http://my.csdn.net/jjwwmlp456
*4
$4
HSET
$25
hash:csdn:article:by:2622
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2623
$2
id
$4
2623
*4
$4
HSET
$25
hash:csdn:article:by:2623
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2623
$3
url
$56
http://blog.csdn.net/jjwwmlp456/article/details/39992057
*4
$4
HSET
$25
hash:csdn:article:by:2623
$5
title
$36
Java 实现迭代器(Iterator)模式
*4
$4
HSET
$25
hash:csdn:article:by:2623
$4
desc
$137
类图


/**
 * 自定义集合接口, 类似java.util.Collection
 * 用于数据存储
 * @author stone
 *
 */
public interface IColl...
*4
$4
HSET
$25
hash:csdn:article:by:2623
$9
readCount
$4
4067
*4
$4
HSET
$25
hash:csdn:article:by:2623
$14
articleContent
$41
csdn/java/1_0_1_15_1504265109.226014.html
*4
$4
HSET
$25
hash:csdn:article:by:2623
$4
date
$16
2014-10-11 12:21
*4
$4
HSET
$25
hash:csdn:article:by:2623
$6
author
$10
jjwwmlp456
*4
$4
HSET
$25
hash:csdn:article:by:2623
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2623
$9
labelList
$37
设计模式,迭代器Iterator模式,
*4
$4
HSET
$25
hash:csdn:article:by:2623
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2623
$10
authorLink
$29
http://my.csdn.net/jjwwmlp456
*4
$4
HSET
$25
hash:csdn:article:by:2623
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2624
$2
id
$4
2624
*4
$4
HSET
$25
hash:csdn:article:by:2624
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2624
$3
url
$56
http://blog.csdn.net/jjwwmlp456/article/details/39997217
*4
$4
HSET
$25
hash:csdn:article:by:2624
$5
title
$51
Java 实现责任链(Chain of Responsibility)模式
*4
$4
HSET
$25
hash:csdn:article:by:2624
$4
desc
$115
类图


/**
 * 抽象责任
 * @author stone
 *
 */
public abstract class IFilter {
	private IFilter successor;...
*4
$4
HSET
$25
hash:csdn:article:by:2624
$9
readCount
$4
1121
*4
$4
HSET
$25
hash:csdn:article:by:2624
$14
articleContent
$41
csdn/java/1_0_1_16_1504265110.229479.html
*4
$4
HSET
$25
hash:csdn:article:by:2624
$4
date
$16
2014-10-11 17:26
*4
$4
HSET
$25
hash:csdn:article:by:2624
$6
author
$10
jjwwmlp456
*4
$4
HSET
$25
hash:csdn:article:by:2624
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2624
$9
labelList
$40
设计模式,责任链Chain of Responsi,
*4
$4
HSET
$25
hash:csdn:article:by:2624
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2624
$10
authorLink
$29
http://my.csdn.net/jjwwmlp456
*4
$4
HSET
$25
hash:csdn:article:by:2624
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2625
$2
id
$4
2625
*4
$4
HSET
$25
hash:csdn:article:by:2625
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2625
$3
url
$57
http://blog.csdn.net/qq_16255321/article/details/54744269
*4
$4
HSET
$25
hash:csdn:article:by:2625
$5
title
$30
提交表单--get与post方式
*4
$4
HSET
$25
hash:csdn:article:by:2625
$4
desc
$248
我们经常在网页上输入信息，然后通过按钮提交，有两种提交方式，get和post
get方式效率高但安全性低，post是封装后进行提交安全性高。
get方式经常用于搜索，查询   post常用与用户注...
*4
$4
HSET
$25
hash:csdn:article:by:2625
$9
readCount
$3
167
*4
$4
HSET
$25
hash:csdn:article:by:2625
$14
articleContent
$40
csdn/java/1_0_1_0_1504265131.510718.html
*4
$4
HSET
$25
hash:csdn:article:by:2625
$4
date
$16
2017-01-26 15:49
*4
$4
HSET
$25
hash:csdn:article:by:2625
$6
author
$11
qq_16255321
*4
$4
HSET
$25
hash:csdn:article:by:2625
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2625
$9
labelList
$11
jsp,表单,
*4
$4
HSET
$25
hash:csdn:article:by:2625
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2625
$10
authorLink
$30
http://my.csdn.net/qq_16255321
*4
$4
HSET
$25
hash:csdn:article:by:2625
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2626
$2
id
$4
2626
*4
$4
HSET
$25
hash:csdn:article:by:2626
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2626
$3
url
$57
http://blog.csdn.net/qq_16255321/article/details/54744847
*4
$4
HSET
$25
hash:csdn:article:by:2626
$5
title
$8
JavaBean
*4
$4
HSET
$25
hash:csdn:article:by:2626
$4
desc
$229
一,JavaBean是什么
JavaBean 是一种JAVA语言写成的可重用组件。本质上是一组具有特殊规范的公共类。

为写成JavaBean，类必须是具体的和公共的，并且具有无参数的构造器。Java...
*4
$4
HSET
$25
hash:csdn:article:by:2626
$9
readCount
$3
234
*4
$4
HSET
$25
hash:csdn:article:by:2626
$14
articleContent
$40
csdn/java/1_0_1_1_1504265132.494839.html
*4
$4
HSET
$25
hash:csdn:article:by:2626
$4
date
$16
2017-01-26 20:04
*4
$4
HSET
$25
hash:csdn:article:by:2626
$6
author
$11
qq_16255321
*4
$4
HSET
$25
hash:csdn:article:by:2626
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2626
$9
labelList
$4
jsp,
*4
$4
HSET
$25
hash:csdn:article:by:2626
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2626
$10
authorLink
$30
http://my.csdn.net/qq_16255321
*4
$4
HSET
$25
hash:csdn:article:by:2626
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2627
$2
id
$4
2627
*4
$4
HSET
$25
hash:csdn:article:by:2627
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2627
$3
url
$57
http://blog.csdn.net/qq_16255321/article/details/54745279
*4
$4
HSET
$25
hash:csdn:article:by:2627
$5
title
$35
JavaWeb开发模式1：JSP+JavaBean
*4
$4
HSET
$25
hash:csdn:article:by:2627
$4
desc
$259
看了几天web开发，说一下体会吧：
开发分层：界面层（View）业务逻辑层，数据库层，但是单纯的JSP开发是将这个三层混在一起了，使得代码的维护性太差，如何解决？
分层，JavaBean封装业务逻...
*4
$4
HSET
$25
hash:csdn:article:by:2627
$9
readCount
$3
327
*4
$4
HSET
$25
hash:csdn:article:by:2627
$14
articleContent
$40
csdn/java/1_0_1_2_1504265133.282985.html
*4
$4
HSET
$25
hash:csdn:article:by:2627
$4
date
$16
2017-01-26 20:26
*4
$4
HSET
$25
hash:csdn:article:by:2627
$6
author
$11
qq_16255321
*4
$4
HSET
$25
hash:csdn:article:by:2627
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2627
$9
labelList
$22
jsp,java web,javabean,
*4
$4
HSET
$25
hash:csdn:article:by:2627
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2627
$10
authorLink
$30
http://my.csdn.net/qq_16255321
*4
$4
HSET
$25
hash:csdn:article:by:2627
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2628
$2
id
$4
2628
*4
$4
HSET
$25
hash:csdn:article:by:2628
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2628
$3
url
$58
http://blog.csdn.net/justloveyou_/article/details/74979754
*4
$4
HSET
$25
hash:csdn:article:by:2628
$5
title
$93
Java web Filter, Strurs2 Interceptor 和 SpringMVC Interceptor 三者之间的联系与区别
*4
$4
HSET
$25
hash:csdn:article:by:2628
$4
desc
$169
无论是Filter、Strurs2 Interceptor还是SpringMVC Interceptor，它们都是AOP理念的实现，本文结合源码详细解剖了三者在具体实现上的异同。
*4
$4
HSET
$25
hash:csdn:article:by:2628
$9
readCount
$3
358
*4
$4
HSET
$25
hash:csdn:article:by:2628
$14
articleContent
$40
csdn/java/1_0_1_0_1504265174.375248.html
*4
$4
HSET
$25
hash:csdn:article:by:2628
$4
date
$16
2017-07-11 15:58
*4
$4
HSET
$25
hash:csdn:article:by:2628
$6
author
$12
justloveyou_
*4
$4
HSET
$25
hash:csdn:article:by:2628
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2628
$9
labelList
$54
filter,struts2拦截器,AOP,责任链模式,springmvc,
*4
$4
HSET
$25
hash:csdn:article:by:2628
$9
likeCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2628
$10
authorLink
$31
http://my.csdn.net/justloveyou_
*4
$4
HSET
$25
hash:csdn:article:by:2628
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2629
$2
id
$4
2629
*4
$4
HSET
$25
hash:csdn:article:by:2629
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2629
$3
url
$58
http://blog.csdn.net/justloveyou_/article/details/74295728
*4
$4
HSET
$25
hash:csdn:article:by:2629
$5
title
$57
简述Spring容器与SpringMVC的容器的联系与区别
*4
$4
HSET
$25
hash:csdn:article:by:2629
$4
desc
$241
在Spring整体框架的核心概念中，容器的核心思想是管理Bean的整个生命周期。但在一个项目中，Spring容器往往不止一个，最常见的场景就是在一个项目中引入Spring和SpringMVC这两个框架...
*4
$4
HSET
$25
hash:csdn:article:by:2629
$9
readCount
$4
2472
*4
$4
HSET
$25
hash:csdn:article:by:2629
$14
articleContent
$40
csdn/java/1_0_1_1_1504265175.316187.html
*4
$4
HSET
$25
hash:csdn:article:by:2629
$4
date
$16
2017-07-04 10:55
*4
$4
HSET
$25
hash:csdn:article:by:2629
$6
author
$12
justloveyou_
*4
$4
HSET
$25
hash:csdn:article:by:2629
$12
commentCount
$2
13
*4
$4
HSET
$25
hash:csdn:article:by:2629
$9
labelList
$75
spring,spring mvc,Spring容器创建,容器的配置,不同容器的关系,
*4
$4
HSET
$25
hash:csdn:article:by:2629
$9
likeCount
$2
20
*4
$4
HSET
$25
hash:csdn:article:by:2629
$10
authorLink
$31
http://my.csdn.net/justloveyou_
*4
$4
HSET
$25
hash:csdn:article:by:2629
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2630
$2
id
$4
2630
*4
$4
HSET
$25
hash:csdn:article:by:2630
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2630
$3
url
$58
http://blog.csdn.net/justloveyou_/article/details/74379479
*4
$4
HSET
$25
hash:csdn:article:by:2630
$5
title
$64
REST风格框架实战：从MVC到前后端分离(附完整Demo)
*4
$4
HSET
$25
hash:csdn:article:by:2630
$4
desc
$253
本人在前辈《从MVC到前后端分离（REST-个人也认为是目前比较流行和比较好的方式）》一文的基础上，实现了一个基于Spring的符合REST风格的完整Demo，具有MVC分层结构并实现前后端分离，该项...
*4
$4
HSET
$25
hash:csdn:article:by:2630
$9
readCount
$4
1794
*4
$4
HSET
$25
hash:csdn:article:by:2630
$14
articleContent
$40
csdn/java/1_0_1_2_1504265176.371813.html
*4
$4
HSET
$25
hash:csdn:article:by:2630
$4
date
$16
2017-07-05 10:04
*4
$4
HSET
$25
hash:csdn:article:by:2630
$6
author
$12
justloveyou_
*4
$4
HSET
$25
hash:csdn:article:by:2630
$12
commentCount
$1
5
*4
$4
HSET
$25
hash:csdn:article:by:2630
$9
labelList
$76
MVC分层架构,REST架构风格,REST框架实现,SpringMVC,前后端分离,
*4
$4
HSET
$25
hash:csdn:article:by:2630
$9
likeCount
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2630
$10
authorLink
$31
http://my.csdn.net/justloveyou_
*4
$4
HSET
$25
hash:csdn:article:by:2630
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2631
$2
id
$4
2631
*4
$4
HSET
$25
hash:csdn:article:by:2631
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2631
$3
url
$58
http://blog.csdn.net/justloveyou_/article/details/55824500
*4
$4
HSET
$25
hash:csdn:article:by:2631
$5
title
$34
Java Web基础 --- Jsp 综述(上)
*4
$4
HSET
$25
hash:csdn:article:by:2631
$4
desc
$225
Servlet/Jsp是J2EE规范的一部分，是Tomcat的主要实现部分。当用户发送请求时，Servlet利用输出流动态生成HTML，这导致其开发效率极为低下。JSP技术通过实现普通静态HTML和动...
*4
$4
HSET
$25
hash:csdn:article:by:2631
$9
readCount
$4
3591
*4
$4
HSET
$25
hash:csdn:article:by:2631
$14
articleContent
$41
csdn/java/1_0_1_17_1504265177.400789.html
*4
$4
HSET
$25
hash:csdn:article:by:2631
$4
date
$16
2017-02-19 22:14
*4
$4
HSET
$25
hash:csdn:article:by:2631
$6
author
$12
justloveyou_
*4
$4
HSET
$25
hash:csdn:article:by:2631
$12
commentCount
$1
6
*4
$4
HSET
$25
hash:csdn:article:by:2631
$9
labelList
$86
JSP的原理与本质,转译时期,请求时期,JSP的编译指令,JSP的动作指令,
*4
$4
HSET
$25
hash:csdn:article:by:2631
$9
likeCount
$2
10
*4
$4
HSET
$25
hash:csdn:article:by:2631
$10
authorLink
$31
http://my.csdn.net/justloveyou_
*4
$4
HSET
$25
hash:csdn:article:by:2631
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2632
$2
id
$4
2632
*4
$4
HSET
$25
hash:csdn:article:by:2632
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2632
$3
url
$58
http://blog.csdn.net/justloveyou_/article/details/55827718
*4
$4
HSET
$25
hash:csdn:article:by:2632
$5
title
$44
JSP中文乱码问题终极解决方案(下)
*4
$4
HSET
$25
hash:csdn:article:by:2632
$4
desc
$263
本文首先从四个方面给出了在使用JSP过程中可能出现中文乱码的情形，具体包括JSP页面中文乱码、JSP源文件中文乱码、GET 请求的请求参数为中文乱码 和 POST 请求的请求参数为中文乱码四种情形，并...
*4
$4
HSET
$25
hash:csdn:article:by:2632
$9
readCount
$4
2356
*4
$4
HSET
$25
hash:csdn:article:by:2632
$14
articleContent
$41
csdn/java/1_0_1_18_1504265178.349719.html
*4
$4
HSET
$25
hash:csdn:article:by:2632
$4
date
$16
2017-02-19 22:42
*4
$4
HSET
$25
hash:csdn:article:by:2632
$6
author
$12
justloveyou_
*4
$4
HSET
$25
hash:csdn:article:by:2632
$12
commentCount
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2632
$9
labelList
$96
JSP源文件乱码,JSP页面乱码,GET请求参数乱码,POST请求参数乱码,转码与解码,
*4
$4
HSET
$25
hash:csdn:article:by:2632
$9
likeCount
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2632
$10
authorLink
$31
http://my.csdn.net/justloveyou_
*4
$4
HSET
$25
hash:csdn:article:by:2632
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2633
$2
id
$4
2633
*4
$4
HSET
$25
hash:csdn:article:by:2633
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2633
$3
url
$58
http://blog.csdn.net/justloveyou_/article/details/55002006
*4
$4
HSET
$25
hash:csdn:article:by:2633
$5
title
$56
Struts2 实战：从 登录Demo 看 Struts2 应用开发
*4
$4
HSET
$25
hash:csdn:article:by:2633
$4
desc
$221
作为 Struts2 的首篇文章，本文首先以登录Demo为例介绍了创建一个简单的 Struts2 应用的一般步骤和流程，紧接着以该 Demo 为出发点概述了 Struts2 的运行机制，揭示了 Str...
*4
$4
HSET
$25
hash:csdn:article:by:2633
$9
readCount
$3
775
*4
$4
HSET
$25
hash:csdn:article:by:2633
$14
articleContent
$41
csdn/java/1_0_1_15_1504265179.676994.html
*4
$4
HSET
$25
hash:csdn:article:by:2633
$4
date
$16
2017-02-12 16:19
*4
$4
HSET
$25
hash:csdn:article:by:2633
$6
author
$12
justloveyou_
*4
$4
HSET
$25
hash:csdn:article:by:2633
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2633
$9
labelList
$80
Struts运行机制,请求路由规则,Namespace,核心控制器,业务控制器,
*4
$4
HSET
$25
hash:csdn:article:by:2633
$9
likeCount
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2633
$10
authorLink
$31
http://my.csdn.net/justloveyou_
*4
$4
HSET
$25
hash:csdn:article:by:2633
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2634
$2
id
$4
2634
*4
$4
HSET
$25
hash:csdn:article:by:2634
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2634
$3
url
$58
http://blog.csdn.net/justloveyou_/article/details/52971667
*4
$4
HSET
$25
hash:csdn:article:by:2634
$5
title
$94
领域驱动设计系列文章（1）——通过现实例子显示领域驱动设计的威力
*4
$4
HSET
$25
hash:csdn:article:by:2634
$4
desc
$303
在本文中，将会拿出一个显示的例子，先用传统的面向过程方式，使用贫血模型进行设计，然后再逐步加入需求变更，让读者发现，随着系统的不断变更，基于贫血模型的设计将会让系统慢慢陷入泥潭，越来越难于维护，然后再...
*4
$4
HSET
$25
hash:csdn:article:by:2634
$9
readCount
$3
424
*4
$4
HSET
$25
hash:csdn:article:by:2634
$14
articleContent
$41
csdn/java/1_0_1_16_1504265180.370828.html
*4
$4
HSET
$25
hash:csdn:article:by:2634
$4
date
$16
2016-10-30 13:07
*4
$4
HSET
$25
hash:csdn:article:by:2634
$6
author
$12
justloveyou_
*4
$4
HSET
$25
hash:csdn:article:by:2634
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2634
$9
labelList
$62
领域驱动,贫血模型,充血模型,架构设计,模块化,
*4
$4
HSET
$25
hash:csdn:article:by:2634
$9
likeCount
$1
3
*4
$4
HSET
$25
hash:csdn:article:by:2634
$10
authorLink
$31
http://my.csdn.net/justloveyou_
*4
$4
HSET
$25
hash:csdn:article:by:2634
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2635
$2
id
$4
2635
*4
$4
HSET
$25
hash:csdn:article:by:2635
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2635
$3
url
$58
http://blog.csdn.net/justloveyou_/article/details/68961271
*4
$4
HSET
$25
hash:csdn:article:by:2635
$5
title
$36
再述 OGNL：在Struts2中的应用
*4
$4
HSET
$25
hash:csdn:article:by:2635
$4
desc
$281
MVC框架的分层结构提高了程序的可维护性、可移植性、可扩展性与可重用性，降低了程序的开发难度，但是也引来了一些新的问题，比如不同层次间的数据流转问题。OGNL的出现填平了这条沟壑，成为字符串与Java...
*4
$4
HSET
$25
hash:csdn:article:by:2635
$9
readCount
$4
2159
*4
$4
HSET
$25
hash:csdn:article:by:2635
$14
articleContent
$41
csdn/java/1_0_1_11_1504265181.331975.html
*4
$4
HSET
$25
hash:csdn:article:by:2635
$4
date
$16
2017-04-03 16:19
*4
$4
HSET
$25
hash:csdn:article:by:2635
$6
author
$12
justloveyou_
*4
$4
HSET
$25
hash:csdn:article:by:2635
$12
commentCount
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2635
$9
labelList
$94
MVC数据流转问题,Action上下文,ValueStack,表现层技术与模板语言,Struts2标签,
*4
$4
HSET
$25
hash:csdn:article:by:2635
$9
likeCount
$1
3
*4
$4
HSET
$25
hash:csdn:article:by:2635
$10
authorLink
$31
http://my.csdn.net/justloveyou_
*4
$4
HSET
$25
hash:csdn:article:by:2635
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2636
$2
id
$4
2636
*4
$4
HSET
$25
hash:csdn:article:by:2636
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2636
$3
url
$58
http://blog.csdn.net/justloveyou_/article/details/68922144
*4
$4
HSET
$25
hash:csdn:article:by:2636
$5
title
$33
Java Web 基础 --- Filter 综述
*4
$4
HSET
$25
hash:csdn:article:by:2636
$4
desc
$253
伴随J2EE一起发布的Servlet规范中还包括一个重要的组件——过滤器，其主要用于对用户请求进的预处理以及对服务器响应的后处理，是个典型的处理链，并且Servlet规范使用了三个接口Filter，F...
*4
$4
HSET
$25
hash:csdn:article:by:2636
$9
readCount
$4
1930
*4
$4
HSET
$25
hash:csdn:article:by:2636
$14
articleContent
$41
csdn/java/1_0_1_13_1504265182.327436.html
*4
$4
HSET
$25
hash:csdn:article:by:2636
$4
date
$16
2017-03-31 10:09
*4
$4
HSET
$25
hash:csdn:article:by:2636
$6
author
$12
justloveyou_
*4
$4
HSET
$25
hash:csdn:article:by:2636
$12
commentCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2636
$9
labelList
$81
Filter-机制,AOP理念,责任链模式,中文解码过滤器,典型的过滤链,
*4
$4
HSET
$25
hash:csdn:article:by:2636
$9
likeCount
$1
6
*4
$4
HSET
$25
hash:csdn:article:by:2636
$10
authorLink
$31
http://my.csdn.net/justloveyou_
*4
$4
HSET
$25
hash:csdn:article:by:2636
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2637
$2
id
$4
2637
*4
$4
HSET
$25
hash:csdn:article:by:2637
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2637
$3
url
$58
http://blog.csdn.net/justloveyou_/article/details/68491121
*4
$4
HSET
$25
hash:csdn:article:by:2637
$5
title
$54
责任链模式进阶：与AOP思想的融合与应用
*4
$4
HSET
$25
hash:csdn:article:by:2637
$4
desc
$261
AOP的理念可以很容易抽象出横切关注点，基于AOP理念我们可以将责任链模式中各具体处理角色中共同逻辑抽象出来并将其模块化以便提高代码复用率和系统可维护性。Java Web中的过滤器和Struts2中的...
*4
$4
HSET
$25
hash:csdn:article:by:2637
$9
readCount
$4
2212
*4
$4
HSET
$25
hash:csdn:article:by:2637
$14
articleContent
$41
csdn/java/1_0_1_14_1504265183.415267.html
*4
$4
HSET
$25
hash:csdn:article:by:2637
$4
date
$16
2017-03-30 18:15
*4
$4
HSET
$25
hash:csdn:article:by:2637
$6
author
$12
justloveyou_
*4
$4
HSET
$25
hash:csdn:article:by:2637
$12
commentCount
$2
10
*4
$4
HSET
$25
hash:csdn:article:by:2637
$9
labelList
$75
AOP理念,责任链模式,Filter过滤器,struts2拦截器,横切关注点,
*4
$4
HSET
$25
hash:csdn:article:by:2637
$9
likeCount
$1
7
*4
$4
HSET
$25
hash:csdn:article:by:2637
$10
authorLink
$31
http://my.csdn.net/justloveyou_
*4
$4
HSET
$25
hash:csdn:article:by:2637
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2638
$2
id
$4
2638
*4
$4
HSET
$25
hash:csdn:article:by:2638
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2638
$3
url
$58
http://blog.csdn.net/justloveyou_/article/details/68957129
*4
$4
HSET
$25
hash:csdn:article:by:2638
$5
title
$58
与MVC框架解耦的OGNL：前世今生及其基本用法
*4
$4
HSET
$25
hash:csdn:article:by:2638
$4
desc
$267
虽然我们通过MVC框架而结缘OGNL，但它并未与MVC框架耦合在一起，而是一个以独立的库文件出现的功能强大的表达式语言，是字符串与Java对象之间沟通的桥梁。它通过简单一致的语法，可以存取Java对象...
*4
$4
HSET
$25
hash:csdn:article:by:2638
$9
readCount
$4
4527
*4
$4
HSET
$25
hash:csdn:article:by:2638
$14
articleContent
$41
csdn/java/1_0_1_12_1504265184.350144.html
*4
$4
HSET
$25
hash:csdn:article:by:2638
$4
date
$16
2017-04-03 08:11
*4
$4
HSET
$25
hash:csdn:article:by:2638
$6
author
$12
justloveyou_
*4
$4
HSET
$25
hash:csdn:article:by:2638
$12
commentCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2638
$9
labelList
$101
OGNL的前世今生,数据流转与映射,Java对象树,OGNL三要素,表现层技术与模板语言,
*4
$4
HSET
$25
hash:csdn:article:by:2638
$9
likeCount
$1
7
*4
$4
HSET
$25
hash:csdn:article:by:2638
$10
authorLink
$31
http://my.csdn.net/justloveyou_
*4
$4
HSET
$25
hash:csdn:article:by:2638
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2639
$2
id
$4
2639
*4
$4
HSET
$25
hash:csdn:article:by:2639
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2639
$3
url
$58
http://blog.csdn.net/justloveyou_/article/details/69365627
*4
$4
HSET
$25
hash:csdn:article:by:2639
$5
title
$53
Struts1与Struts2的区别和对比（深度好文）
*4
$4
HSET
$25
hash:csdn:article:by:2639
$4
desc
$199
本文介绍了Struts2的起源，详细对比了Struts2和Struts1.x的差异，并穿插概述了Struts2框架和请求流程。本文详细介绍了Struts1.x和Struts2两者之间在Action方面...
*4
$4
HSET
$25
hash:csdn:article:by:2639
$9
readCount
$4
1593
*4
$4
HSET
$25
hash:csdn:article:by:2639
$14
articleContent
$41
csdn/java/1_0_1_10_1504265185.537105.html
*4
$4
HSET
$25
hash:csdn:article:by:2639
$4
date
$16
2017-04-05 22:31
*4
$4
HSET
$25
hash:csdn:article:by:2639
$6
author
$12
justloveyou_
*4
$4
HSET
$25
hash:csdn:article:by:2639
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2639
$9
labelList
$70
Struts与IOC,Struts拦截器,Struts框架对比,Struts起源,Pull-MVC,
*4
$4
HSET
$25
hash:csdn:article:by:2639
$9
likeCount
$1
3
*4
$4
HSET
$25
hash:csdn:article:by:2639
$10
authorLink
$31
http://my.csdn.net/justloveyou_
*4
$4
HSET
$25
hash:csdn:article:by:2639
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2640
$2
id
$4
2640
*4
$4
HSET
$25
hash:csdn:article:by:2640
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2640
$3
url
$58
http://blog.csdn.net/justloveyou_/article/details/73733278
*4
$4
HSET
$25
hash:csdn:article:by:2640
$5
title
$31
Spring 事务管理机制概述
*4
$4
HSET
$25
hash:csdn:article:by:2640
$4
desc
$293
用户的每次请求都对应一个业务逻辑方法，而一个业务逻辑方法往往包括一系列数据库原子访问操作，并且这些操作应绑定成一个事务来执行。使用传统事务编程策略时，程序代码必然和具体的事务操作代码耦合，而Sprin...
*4
$4
HSET
$25
hash:csdn:article:by:2640
$9
readCount
$4
1590
*4
$4
HSET
$25
hash:csdn:article:by:2640
$14
articleContent
$40
csdn/java/1_0_1_3_1504265186.429273.html
*4
$4
HSET
$25
hash:csdn:article:by:2640
$4
date
$16
2017-06-26 10:55
*4
$4
HSET
$25
hash:csdn:article:by:2640
$6
author
$12
justloveyou_
*4
$4
HSET
$25
hash:csdn:article:by:2640
$12
commentCount
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2640
$9
labelList
$104
编程式事务管理,声明式事务管理,spring事务管理,事务隔离级别,事务的传播行为,
*4
$4
HSET
$25
hash:csdn:article:by:2640
$9
likeCount
$1
8
*4
$4
HSET
$25
hash:csdn:article:by:2640
$10
authorLink
$31
http://my.csdn.net/justloveyou_
*4
$4
HSET
$25
hash:csdn:article:by:2640
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2641
$2
id
$4
2641
*4
$4
HSET
$25
hash:csdn:article:by:2641
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2641
$3
url
$58
http://blog.csdn.net/justloveyou_/article/details/70312810
*4
$4
HSET
$25
hash:csdn:article:by:2641
$5
title
$33
简述数据库事务并发机制
*4
$4
HSET
$25
hash:csdn:article:by:2641
$4
desc
$303
事务是最小的逻辑执行单元，也是数据库并发控制的基本单位，其执行的结果必须使数据库从一种一致性状态变到另一种一致性状态。事务具有四个重要特征，即原子性、一致性、隔离性和持久性。本文首先叙述了数据库中事务...
*4
$4
HSET
$25
hash:csdn:article:by:2641
$9
readCount
$4
2041
*4
$4
HSET
$25
hash:csdn:article:by:2641
$14
articleContent
$40
csdn/java/1_0_1_7_1504265187.462082.html
*4
$4
HSET
$25
hash:csdn:article:by:2641
$4
date
$16
2017-04-21 11:17
*4
$4
HSET
$25
hash:csdn:article:by:2641
$6
author
$12
justloveyou_
*4
$4
HSET
$25
hash:csdn:article:by:2641
$12
commentCount
$1
6
*4
$4
HSET
$25
hash:csdn:article:by:2641
$9
labelList
$112
事务的隔离性,乐观锁-悲观锁,数据库事务隔离级别,事务并发安全性,事务四大特性ACID,
*4
$4
HSET
$25
hash:csdn:article:by:2641
$9
likeCount
$1
6
*4
$4
HSET
$25
hash:csdn:article:by:2641
$10
authorLink
$31
http://my.csdn.net/justloveyou_
*4
$4
HSET
$25
hash:csdn:article:by:2641
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2642
$2
id
$4
2642
*4
$4
HSET
$25
hash:csdn:article:by:2642
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2642
$3
url
$58
http://blog.csdn.net/justloveyou_/article/details/69611328
*4
$4
HSET
$25
hash:csdn:article:by:2642
$5
title
$42
计算机网络体系结构综述（上）
*4
$4
HSET
$25
hash:csdn:article:by:2642
$4
desc
$303
计算机网络体系结构标准的制定使得两台计算机能够像两个知心朋友那样能够互相准确理解对方的意思并做出优雅的回应。本文首先概述了计算机网络体系结构的提出动机，并结合日常生活中的邮政系统介绍了设计的理念，并给...
*4
$4
HSET
$25
hash:csdn:article:by:2642
$9
readCount
$4
3035
*4
$4
HSET
$25
hash:csdn:article:by:2642
$14
articleContent
$40
csdn/java/1_0_1_9_1504265188.466111.html
*4
$4
HSET
$25
hash:csdn:article:by:2642
$4
date
$16
2017-04-07 18:54
*4
$4
HSET
$25
hash:csdn:article:by:2642
$6
author
$12
justloveyou_
*4
$4
HSET
$25
hash:csdn:article:by:2642
$12
commentCount
$2
10
*4
$4
HSET
$25
hash:csdn:article:by:2642
$9
labelList
$74
层次化网络体系结构,OSI,TCP-IP,通信协议的实质,分层思想,
*4
$4
HSET
$25
hash:csdn:article:by:2642
$9
likeCount
$1
7
*4
$4
HSET
$25
hash:csdn:article:by:2642
$10
authorLink
$31
http://my.csdn.net/justloveyou_
*4
$4
HSET
$25
hash:csdn:article:by:2642
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2643
$2
id
$4
2643
*4
$4
HSET
$25
hash:csdn:article:by:2643
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2643
$3
url
$58
http://blog.csdn.net/justloveyou_/article/details/69612153
*4
$4
HSET
$25
hash:csdn:article:by:2643
$5
title
$42
计算机网络体系结构综述（下）
*4
$4
HSET
$25
hash:csdn:article:by:2643
$4
desc
$257
我们知道TCP/IP与OSI最大的不同在于OSI是一个理论上的网络通信模型，而TCP/IP则是实际上的网络通信标准。在上篇[《高频笔试面试干货：计算机网络体系结构综述（上）》][1]的基础上，本文着重...
*4
$4
HSET
$25
hash:csdn:article:by:2643
$9
readCount
$4
2316
*4
$4
HSET
$25
hash:csdn:article:by:2643
$14
articleContent
$40
csdn/java/1_0_1_8_1504265189.468613.html
*4
$4
HSET
$25
hash:csdn:article:by:2643
$4
date
$16
2017-04-07 18:59
*4
$4
HSET
$25
hash:csdn:article:by:2643
$6
author
$12
justloveyou_
*4
$4
HSET
$25
hash:csdn:article:by:2643
$12
commentCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2643
$9
labelList
$98
OSI,TCP-IP,网络层与传输层的区别,链路层与网络层的区别,五层网络体系结构,
*4
$4
HSET
$25
hash:csdn:article:by:2643
$9
likeCount
$1
8
*4
$4
HSET
$25
hash:csdn:article:by:2643
$10
authorLink
$31
http://my.csdn.net/justloveyou_
*4
$4
HSET
$25
hash:csdn:article:by:2643
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2644
$2
id
$4
2644
*4
$4
HSET
$25
hash:csdn:article:by:2644
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2644
$3
url
$58
http://blog.csdn.net/justloveyou_/article/details/72835839
*4
$4
HSET
$25
hash:csdn:article:by:2644
$5
title
$59
Spring MVC 简述：从MVC框架普遍关注的问题说起
*4
$4
HSET
$25
hash:csdn:article:by:2644
$4
desc
$253
任何一个完备的MVC框架都需要解决Web开发过程中的一些共性的问题，比如请求的收集与分发、数据前后台流转与转换，当前最流行的SpringMVC和Struts2也不例外。本文首先概述MVC模式的分层思想...
*4
$4
HSET
$25
hash:csdn:article:by:2644
$9
readCount
$4
1791
*4
$4
HSET
$25
hash:csdn:article:by:2644
$14
articleContent
$40
csdn/java/1_0_1_6_1504265190.747879.html
*4
$4
HSET
$25
hash:csdn:article:by:2644
$4
date
$16
2017-06-01 22:19
*4
$4
HSET
$25
hash:csdn:article:by:2644
$6
author
$12
justloveyou_
*4
$4
HSET
$25
hash:csdn:article:by:2644
$12
commentCount
$2
10
*4
$4
HSET
$25
hash:csdn:article:by:2644
$9
labelList
$96
springmvc,struts2与springmvc的区别,消息转换机制,数据绑定机制,MVC模式与框架,
*4
$4
HSET
$25
hash:csdn:article:by:2644
$9
likeCount
$2
12
*4
$4
HSET
$25
hash:csdn:article:by:2644
$10
authorLink
$31
http://my.csdn.net/justloveyou_
*4
$4
HSET
$25
hash:csdn:article:by:2644
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2645
$2
id
$4
2645
*4
$4
HSET
$25
hash:csdn:article:by:2645
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2645
$3
url
$58
http://blog.csdn.net/justloveyou_/article/details/73612999
*4
$4
HSET
$25
hash:csdn:article:by:2645
$5
title
$19
理解RESTful架构
*4
$4
HSET
$25
hash:csdn:article:by:2645
$4
desc
$303
越来越多的人开始意识到，网站即软件，而且是一种新型的软件。但是传统上，软件和网络是两个不同的领域，很少有交集；软件开发主要针对单机环境，网络则主要研究系统之间的通信。互联网的兴起，使得这两个领域开始融...
*4
$4
HSET
$25
hash:csdn:article:by:2645
$9
readCount
$3
623
*4
$4
HSET
$25
hash:csdn:article:by:2645
$14
articleContent
$40
csdn/java/1_0_1_4_1504265191.628746.html
*4
$4
HSET
$25
hash:csdn:article:by:2645
$4
date
$16
2017-06-23 08:38
*4
$4
HSET
$25
hash:csdn:article:by:2645
$6
author
$12
justloveyou_
*4
$4
HSET
$25
hash:csdn:article:by:2645
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2645
$9
labelList
$84
RESTful架构,表现层状态转移,软件与网络,资源与表现层,状态转化,
*4
$4
HSET
$25
hash:csdn:article:by:2645
$9
likeCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2645
$10
authorLink
$31
http://my.csdn.net/justloveyou_
*4
$4
HSET
$25
hash:csdn:article:by:2645
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2646
$2
id
$4
2646
*4
$4
HSET
$25
hash:csdn:article:by:2646
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2646
$3
url
$58
http://blog.csdn.net/justloveyou_/article/details/73136260
*4
$4
HSET
$25
hash:csdn:article:by:2646
$5
title
$30
Spring 核心技术概览(一)
*4
$4
HSET
$25
hash:csdn:article:by:2646
$4
desc
$249
Spring是一个分层的Java SE/EE应用一站式的轻量级开源框架，其从持久层、业务层到表现层都拥有相应的支持，几乎为企业应用提供了所需的一切。本文首先概述了Spring容器的IoC控制反转和DI...
*4
$4
HSET
$25
hash:csdn:article:by:2646
$9
readCount
$3
990
*4
$4
HSET
$25
hash:csdn:article:by:2646
$14
articleContent
$40
csdn/java/1_0_1_5_1504265192.862015.html
*4
$4
HSET
$25
hash:csdn:article:by:2646
$4
date
$16
2017-06-12 21:14
*4
$4
HSET
$25
hash:csdn:article:by:2646
$6
author
$12
justloveyou_
*4
$4
HSET
$25
hash:csdn:article:by:2646
$12
commentCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2646
$9
labelList
$79
IoC控制反转,DI依赖注入,Spring容器,Bean的声明周期,Resource接口,
*4
$4
HSET
$25
hash:csdn:article:by:2646
$9
likeCount
$1
3
*4
$4
HSET
$25
hash:csdn:article:by:2646
$10
authorLink
$31
http://my.csdn.net/justloveyou_
*4
$4
HSET
$25
hash:csdn:article:by:2646
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2647
$2
id
$4
2647
*4
$4
HSET
$25
hash:csdn:article:by:2647
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2647
$3
url
$58
http://blog.csdn.net/justloveyou_/article/details/57154560
*4
$4
HSET
$25
hash:csdn:article:by:2647
$5
title
$34
Java Web基础 --- Jsp 综述(下)
*4
$4
HSET
$25
hash:csdn:article:by:2647
$4
desc
$255
JSP脚本中包含九个内置对象，它们都是Servlet-API接口的实例，并且JSP规范对它们进行了默认初始化。本文首先通过一个JSP实例来认识JSP内置对象的实质，紧接着以基于请求/响应架构应用的运行...
*4
$4
HSET
$25
hash:csdn:article:by:2647
$9
readCount
$4
2831
*4
$4
HSET
$25
hash:csdn:article:by:2647
$14
articleContent
$41
csdn/java/1_0_1_19_1504265193.763499.html
*4
$4
HSET
$25
hash:csdn:article:by:2647
$4
date
$16
2017-02-25 23:13
*4
$4
HSET
$25
hash:csdn:article:by:2647
$6
author
$12
justloveyou_
*4
$4
HSET
$25
hash:csdn:article:by:2647
$12
commentCount
$2
10
*4
$4
HSET
$25
hash:csdn:article:by:2647
$9
labelList
$82
九大内置对象,请求-响应架构,重定向,Cookie,请求周期-当前会话,
*4
$4
HSET
$25
hash:csdn:article:by:2647
$9
likeCount
$1
7
*4
$4
HSET
$25
hash:csdn:article:by:2647
$10
authorLink
$31
http://my.csdn.net/justloveyou_
*4
$4
HSET
$25
hash:csdn:article:by:2647
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2648
$2
id
$4
2648
*4
$4
HSET
$25
hash:csdn:article:by:2648
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2648
$3
url
$58
http://blog.csdn.net/justloveyou_/article/details/57156039
*4
$4
HSET
$25
hash:csdn:article:by:2648
$5
title
$69
使用 URLDecoder 和 URLEncoder 对中文字符进行编码和解码
*4
$4
HSET
$25
hash:csdn:article:by:2648
$4
desc
$167
URLDecoder 和 URLEncoder 用于完成普通字符串 和 application/x-www-form-urlencoded MIME 字符串之间的相互转换。在本文中，我们以使用URLD...
*4
$4
HSET
$25
hash:csdn:article:by:2648
$9
readCount
$4
3119
*4
$4
HSET
$25
hash:csdn:article:by:2648
$14
articleContent
$40
csdn/java/1_0_2_0_1504265195.748848.html
*4
$4
HSET
$25
hash:csdn:article:by:2648
$4
date
$16
2017-02-25 23:17
*4
$4
HSET
$25
hash:csdn:article:by:2648
$6
author
$12
justloveyou_
*4
$4
HSET
$25
hash:csdn:article:by:2648
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2648
$9
labelList
$61
URLDecoder,URLEncoder,字符串编码,字符串解码,乱码,
*4
$4
HSET
$25
hash:csdn:article:by:2648
$9
likeCount
$1
6
*4
$4
HSET
$25
hash:csdn:article:by:2648
$10
authorLink
$31
http://my.csdn.net/justloveyou_
*4
$4
HSET
$25
hash:csdn:article:by:2648
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2649
$2
id
$4
2649
*4
$4
HSET
$25
hash:csdn:article:by:2649
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2649
$3
url
$58
http://blog.csdn.net/justloveyou_/article/details/58048879
*4
$4
HSET
$25
hash:csdn:article:by:2649
$5
title
$44
JSP中文乱码问题终极解决方案(上)
*4
$4
HSET
$25
hash:csdn:article:by:2649
$4
desc
$275
本文首先介绍了一个JSP的源文件执行过程，即需要经过三个阶段，两次编码，才能完成一次完整的输出。特别需要注意的是，在这个过程中，编码问题贯穿始终。在JSP/Servlet中，主要有以下四种方式可以设置...
*4
$4
HSET
$25
hash:csdn:article:by:2649
$9
readCount
$4
1600
*4
$4
HSET
$25
hash:csdn:article:by:2649
$14
articleContent
$40
csdn/java/1_0_2_1_1504265196.738196.html
*4
$4
HSET
$25
hash:csdn:article:by:2649
$4
date
$16
2017-02-27 12:03
*4
$4
HSET
$25
hash:csdn:article:by:2649
$6
author
$12
justloveyou_
*4
$4
HSET
$25
hash:csdn:article:by:2649
$12
commentCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2649
$9
labelList
$83
JSP执行过程,JSP编码方式,JSP编码解决方案,乱码,编码作用优先级,
*4
$4
HSET
$25
hash:csdn:article:by:2649
$9
likeCount
$1
5
*4
$4
HSET
$25
hash:csdn:article:by:2649
$10
authorLink
$31
http://my.csdn.net/justloveyou_
*4
$4
HSET
$25
hash:csdn:article:by:2649
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2650
$2
id
$4
2650
*4
$4
HSET
$25
hash:csdn:article:by:2650
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2650
$3
url
$58
http://blog.csdn.net/justloveyou_/article/details/60964556
*4
$4
HSET
$25
hash:csdn:article:by:2650
$5
title
$44
Java Web基础 --- Servlet 综述(实践篇)
*4
$4
HSET
$25
hash:csdn:article:by:2650
$4
desc
$219
摘要：　　伴随 J2EE 6一起发布的Servlet 3.0规范是Servlet规范历史上最重要的变革之一，它的许多新的特性都极大的简化了 Java Web 应用的开发。本文从一个简单的 Servle...
*4
$4
HSET
$25
hash:csdn:article:by:2650
$9
readCount
$4
1557
*4
$4
HSET
$25
hash:csdn:article:by:2650
$14
articleContent
$40
csdn/java/1_0_2_2_1504265197.751627.html
*4
$4
HSET
$25
hash:csdn:article:by:2650
$4
date
$16
2017-03-09 18:00
*4
$4
HSET
$25
hash:csdn:article:by:2650
$6
author
$12
justloveyou_
*4
$4
HSET
$25
hash:csdn:article:by:2650
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2650
$9
labelList
$69
Servlet配置,Servlet新特性,异步处理,非阻塞IO,文件上传,
*4
$4
HSET
$25
hash:csdn:article:by:2650
$9
likeCount
$1
6
*4
$4
HSET
$25
hash:csdn:article:by:2650
$10
authorLink
$31
http://my.csdn.net/justloveyou_
*4
$4
HSET
$25
hash:csdn:article:by:2650
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2651
$2
id
$4
2651
*4
$4
HSET
$25
hash:csdn:article:by:2651
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2651
$3
url
$58
http://blog.csdn.net/justloveyou_/article/details/60964714
*4
$4
HSET
$25
hash:csdn:article:by:2651
$5
title
$44
Java Web基础 --- Servlet 综述(理论篇)
*4
$4
HSET
$25
hash:csdn:article:by:2651
$4
desc
$229
Web 技术成为当今主流的互联网Web应用技术之一，而Servlet是Java Web技术的核心基础。本文首先从请求/响应架构应用的大背景谈起Servlet的由来，明确Servlet的产生动机，揭示了...
*4
$4
HSET
$25
hash:csdn:article:by:2651
$9
readCount
$4
1759
*4
$4
HSET
$25
hash:csdn:article:by:2651
$14
articleContent
$40
csdn/java/1_0_2_3_1504265198.755073.html
*4
$4
HSET
$25
hash:csdn:article:by:2651
$4
date
$16
2017-03-09 18:09
*4
$4
HSET
$25
hash:csdn:article:by:2651
$6
author
$12
justloveyou_
*4
$4
HSET
$25
hash:csdn:article:by:2651
$12
commentCount
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2651
$9
labelList
$77
Servlet动机,Servlet本质,生命周期与执行流程,Servlet与并发,MVC,
*4
$4
HSET
$25
hash:csdn:article:by:2651
$9
likeCount
$1
6
*4
$4
HSET
$25
hash:csdn:article:by:2651
$10
authorLink
$31
http://my.csdn.net/justloveyou_
*4
$4
HSET
$25
hash:csdn:article:by:2651
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2652
$2
id
$4
2652
*4
$4
HSET
$25
hash:csdn:article:by:2652
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2652
$3
url
$53
http://blog.csdn.net/lhy_ycu/article/details/39760895
*4
$4
HSET
$25
hash:csdn:article:by:2652
$5
title
$66
Java设计模式菜鸟系列(四)工厂方法模式建模与实现
*4
$4
HSET
$25
hash:csdn:article:by:2652
$4
desc
$163
转载请注明出处：http://blog.csdn.net/lhy_ycu/article/details/39760895

工厂方法模式（Factory Method）分为三种：
一、普通工厂模式。...
*4
$4
HSET
$25
hash:csdn:article:by:2652
$9
readCount
$4
2112
*4
$4
HSET
$25
hash:csdn:article:by:2652
$14
articleContent
$40
csdn/java/1_0_2_0_1504265200.743564.html
*4
$4
HSET
$25
hash:csdn:article:by:2652
$4
date
$16
2014-10-04 22:29
*4
$4
HSET
$25
hash:csdn:article:by:2652
$6
author
$10
JAVE_LOVER
*4
$4
HSET
$25
hash:csdn:article:by:2652
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2652
$9
labelList
$39
java设计模式,工厂模式,uml,java,
*4
$4
HSET
$25
hash:csdn:article:by:2652
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2652
$10
authorLink
$29
http://my.csdn.net/JAVE_LOVER
*4
$4
HSET
$25
hash:csdn:article:by:2652
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2653
$2
id
$4
2653
*4
$4
HSET
$25
hash:csdn:article:by:2653
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2653
$3
url
$53
http://blog.csdn.net/lhy_ycu/article/details/39759199
*4
$4
HSET
$25
hash:csdn:article:by:2653
$5
title
$63
Java设计模式菜鸟系列(三)装饰者模式建模与实现
*4
$4
HSET
$25
hash:csdn:article:by:2653
$4
desc
$277
装饰者(Decorator)模式：动态地将责任附加到对象上，若要扩展功能，装饰者提供了比继承更具有弹性的替代方案。对于装饰者模式，它其实是一种包装，所以我更愿意称它为一种包装。像咱们以前经常使用的Ja...
*4
$4
HSET
$25
hash:csdn:article:by:2653
$9
readCount
$4
2133
*4
$4
HSET
$25
hash:csdn:article:by:2653
$14
articleContent
$40
csdn/java/1_0_2_1_1504265201.777276.html
*4
$4
HSET
$25
hash:csdn:article:by:2653
$4
date
$16
2014-10-03 22:23
*4
$4
HSET
$25
hash:csdn:article:by:2653
$6
author
$10
JAVE_LOVER
*4
$4
HSET
$25
hash:csdn:article:by:2653
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2653
$9
labelList
$29
设计模式,uml,设计,java,
*4
$4
HSET
$25
hash:csdn:article:by:2653
$9
likeCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2653
$10
authorLink
$29
http://my.csdn.net/JAVE_LOVER
*4
$4
HSET
$25
hash:csdn:article:by:2653
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2654
$2
id
$4
2654
*4
$4
HSET
$25
hash:csdn:article:by:2654
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2654
$3
url
$53
http://blog.csdn.net/lhy_ycu/article/details/39721563
*4
$4
HSET
$25
hash:csdn:article:by:2654
$5
title
$60
Java设计模式菜鸟系列(一)策略模式建模与实现
*4
$4
HSET
$25
hash:csdn:article:by:2654
$4
desc
$271
今天开始咱们来谈谈Java设计模式。这里会结合uml图形来讲解，有对uml建模不熟的可以参考我的另一篇博文uml建模。
首先，个人觉得模式的设计就是一个将变化的东西和不变(稳定)的东西分离的过程。咱们...
*4
$4
HSET
$25
hash:csdn:article:by:2654
$9
readCount
$4
2912
*4
$4
HSET
$25
hash:csdn:article:by:2654
$14
articleContent
$40
csdn/java/1_0_2_3_1504265202.783822.html
*4
$4
HSET
$25
hash:csdn:article:by:2654
$4
date
$16
2014-10-01 23:47
*4
$4
HSET
$25
hash:csdn:article:by:2654
$6
author
$10
JAVE_LOVER
*4
$4
HSET
$25
hash:csdn:article:by:2654
$12
commentCount
$1
3
*4
$4
HSET
$25
hash:csdn:article:by:2654
$9
labelList
$32
java,设计模式,架构,模式,
*4
$4
HSET
$25
hash:csdn:article:by:2654
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2654
$10
authorLink
$29
http://my.csdn.net/JAVE_LOVER
*4
$4
HSET
$25
hash:csdn:article:by:2654
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2655
$2
id
$4
2655
*4
$4
HSET
$25
hash:csdn:article:by:2655
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2655
$3
url
$53
http://blog.csdn.net/lhy_ycu/article/details/39755577
*4
$4
HSET
$25
hash:csdn:article:by:2655
$5
title
$63
Java设计模式菜鸟系列(二)观察者模式建模与实现
*4
$4
HSET
$25
hash:csdn:article:by:2655
$4
desc
$255
观察者(Observer)模式定义：在对象之间定义了一对多的依赖关系，这样一来，当一个对象改变状态时，依赖它的对象都会收到通知并自动跟新。Java已经提供了对观察者Observer模式的默认实现， J...
*4
$4
HSET
$25
hash:csdn:article:by:2655
$9
readCount
$4
2027
*4
$4
HSET
$25
hash:csdn:article:by:2655
$14
articleContent
$40
csdn/java/1_0_2_2_1504265203.749957.html
*4
$4
HSET
$25
hash:csdn:article:by:2655
$4
date
$16
2014-10-03 19:03
*4
$4
HSET
$25
hash:csdn:article:by:2655
$6
author
$10
JAVE_LOVER
*4
$4
HSET
$25
hash:csdn:article:by:2655
$12
commentCount
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2655
$9
labelList
$35
java,uml建模,设计模式,模式,
*4
$4
HSET
$25
hash:csdn:article:by:2655
$9
likeCount
$1
3
*4
$4
HSET
$25
hash:csdn:article:by:2655
$10
authorLink
$29
http://my.csdn.net/JAVE_LOVER
*4
$4
HSET
$25
hash:csdn:article:by:2655
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2656
$2
id
$4
2656
*4
$4
HSET
$25
hash:csdn:article:by:2656
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2656
$3
url
$56
http://blog.csdn.net/u011712163/article/details/72953689
*4
$4
HSET
$25
hash:csdn:article:by:2656
$5
title
$46
设计模式（一）— 什么是设计模式
*4
$4
HSET
$25
hash:csdn:article:by:2656
$4
desc
$128
设计模式（Design Pattern）是一套被反复使用、多数人知晓的、经过分类的、代码设计经验的总结。
*4
$4
HSET
$25
hash:csdn:article:by:2656
$9
readCount
$3
102
*4
$4
HSET
$25
hash:csdn:article:by:2656
$14
articleContent
$40
csdn/java/1_1_1_0_1504265219.060817.html
*4
$4
HSET
$25
hash:csdn:article:by:2656
$4
date
$16
2017-06-09 09:38
*4
$4
HSET
$25
hash:csdn:article:by:2656
$6
author
$10
u011712163
*4
$4
HSET
$25
hash:csdn:article:by:2656
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2656
$9
labelList
$13
设计模式,
*4
$4
HSET
$25
hash:csdn:article:by:2656
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2656
$10
authorLink
$29
http://my.csdn.net/u011712163
*4
$4
HSET
$25
hash:csdn:article:by:2656
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2657
$2
id
$4
2657
*4
$4
HSET
$25
hash:csdn:article:by:2657
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2657
$3
url
$56
http://blog.csdn.net/u011712163/article/details/72953712
*4
$4
HSET
$25
hash:csdn:article:by:2657
$5
title
$52
设计模式（二）— 为什么要用设计模式
*4
$4
HSET
$25
hash:csdn:article:by:2657
$4
desc
$238
使用设计模式的目的：为了代码可重用性、让代码更容易被他人理解、保证代码可靠性。 设计模式使代码编写真正工程化；设计模式是软件工程的基石脉络，如同大厦的结构一样。
*4
$4
HSET
$25
hash:csdn:article:by:2657
$9
readCount
$3
121
*4
$4
HSET
$25
hash:csdn:article:by:2657
$14
articleContent
$40
csdn/java/1_1_1_1_1504265220.150674.html
*4
$4
HSET
$25
hash:csdn:article:by:2657
$4
date
$16
2017-06-09 09:40
*4
$4
HSET
$25
hash:csdn:article:by:2657
$6
author
$10
u011712163
*4
$4
HSET
$25
hash:csdn:article:by:2657
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2657
$9
labelList
$13
设计模式,
*4
$4
HSET
$25
hash:csdn:article:by:2657
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2657
$10
authorLink
$29
http://my.csdn.net/u011712163
*4
$4
HSET
$25
hash:csdn:article:by:2657
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2658
$2
id
$4
2658
*4
$4
HSET
$25
hash:csdn:article:by:2658
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2658
$3
url
$56
http://blog.csdn.net/u011712163/article/details/72961826
*4
$4
HSET
$25
hash:csdn:article:by:2658
$5
title
$37
设计模式（三）— 设计原则
*4
$4
HSET
$25
hash:csdn:article:by:2658
$4
desc
$275
设计原则：
1.逻辑代码独立到单独的方法中，注重封装性--易读，易复用。

   不要在一个方法中，写下上百行的逻辑代码。把各小逻辑代码独立出来，写于其它方法中，易读其可重复调用。


2.写类，写方...
*4
$4
HSET
$25
hash:csdn:article:by:2658
$9
readCount
$3
106
*4
$4
HSET
$25
hash:csdn:article:by:2658
$14
articleContent
$40
csdn/java/1_1_1_2_1504265221.133612.html
*4
$4
HSET
$25
hash:csdn:article:by:2658
$4
date
$16
2017-06-09 16:15
*4
$4
HSET
$25
hash:csdn:article:by:2658
$6
author
$10
u011712163
*4
$4
HSET
$25
hash:csdn:article:by:2658
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2658
$9
labelList
$13
设计模式,
*4
$4
HSET
$25
hash:csdn:article:by:2658
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2658
$10
authorLink
$29
http://my.csdn.net/u011712163
*4
$4
HSET
$25
hash:csdn:article:by:2658
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2659
$2
id
$4
2659
*4
$4
HSET
$25
hash:csdn:article:by:2659
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2659
$3
url
$57
http://blog.csdn.net/qq_19558705/article/details/76419199
*4
$4
HSET
$25
hash:csdn:article:by:2659
$5
title
$46
架构师入门笔记一 初识线程关键字
*4
$4
HSET
$25
hash:csdn:article:by:2659
$4
desc
$248
架构师入门笔记一 初识线程关键字
本章主要介绍线程的关键字 synchronized，volatile  的含义，使用方法和使用场景，以及注意事项。下一章介绍线程的队列知识。
首先要了解线程安全概...
*4
$4
HSET
$25
hash:csdn:article:by:2659
$9
readCount
$4
5534
*4
$4
HSET
$25
hash:csdn:article:by:2659
$14
articleContent
$40
csdn/java/1_0_1_0_1504265251.594849.html
*4
$4
HSET
$25
hash:csdn:article:by:2659
$4
date
$16
2017-08-04 14:08
*4
$4
HSET
$25
hash:csdn:article:by:2659
$6
author
$11
qq_19558705
*4
$4
HSET
$25
hash:csdn:article:by:2659
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2659
$9
labelList
$17
架构师,线程,
*4
$4
HSET
$25
hash:csdn:article:by:2659
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2659
$10
authorLink
$30
http://my.csdn.net/qq_19558705
*4
$4
HSET
$25
hash:csdn:article:by:2659
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2660
$2
id
$4
2660
*4
$4
HSET
$25
hash:csdn:article:by:2660
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2660
$3
url
$57
http://blog.csdn.net/qq_19558705/article/details/76690531
*4
$4
HSET
$25
hash:csdn:article:by:2660
$5
title
$41
架构师入门笔记二 初识java容器
*4
$4
HSET
$25
hash:csdn:article:by:2660
$4
desc
$233
架构师入门笔记二 初识java容器
上一章简单介绍了 线程的关键字 synchronized 和 volatile 的用法及其注意事项。这章来讲解一下同步类容器，并发类容器，COW容器的原理和优缺点...
*4
$4
HSET
$25
hash:csdn:article:by:2660
$9
readCount
$4
1016
*4
$4
HSET
$25
hash:csdn:article:by:2660
$14
articleContent
$40
csdn/java/1_0_1_1_1504265252.589416.html
*4
$4
HSET
$25
hash:csdn:article:by:2660
$4
date
$16
2017-08-07 14:07
*4
$4
HSET
$25
hash:csdn:article:by:2660
$6
author
$11
qq_19558705
*4
$4
HSET
$25
hash:csdn:article:by:2660
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2660
$9
labelList
$17
架构师,容器,
*4
$4
HSET
$25
hash:csdn:article:by:2660
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2660
$10
authorLink
$30
http://my.csdn.net/qq_19558705
*4
$4
HSET
$25
hash:csdn:article:by:2660
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2661
$2
id
$4
2661
*4
$4
HSET
$25
hash:csdn:article:by:2661
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2661
$3
url
$57
http://blog.csdn.net/qq_19558705/article/details/77073871
*4
$4
HSET
$25
hash:csdn:article:by:2661
$5
title
$46
架构师入门笔记六 初识线程安全锁
*4
$4
HSET
$25
hash:csdn:article:by:2661
$4
desc
$177
架构师入门笔记六 初识线程安全锁
这章主要介绍Synchronized，ThreadLock，Lock，Concurrent.util等方法。


1 Lock 锁
在java多线程中，可以...
*4
$4
HSET
$25
hash:csdn:article:by:2661
$9
readCount
$3
391
*4
$4
HSET
$25
hash:csdn:article:by:2661
$14
articleContent
$39
csdn/java/1_0_1_5_1504265253.53683.html
*4
$4
HSET
$25
hash:csdn:article:by:2661
$4
date
$16
2017-08-26 09:37
*4
$4
HSET
$25
hash:csdn:article:by:2661
$6
author
$11
qq_19558705
*4
$4
HSET
$25
hash:csdn:article:by:2661
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2661
$9
labelList
$14
架构师,锁,
*4
$4
HSET
$25
hash:csdn:article:by:2661
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2661
$10
authorLink
$30
http://my.csdn.net/qq_19558705
*4
$4
HSET
$25
hash:csdn:article:by:2661
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2662
$2
id
$4
2662
*4
$4
HSET
$25
hash:csdn:article:by:2662
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2662
$3
url
$57
http://blog.csdn.net/qq_19558705/article/details/76695929
*4
$4
HSET
$25
hash:csdn:article:by:2662
$5
title
$42
架构师入门笔记三 初识Queue队列
*4
$4
HSET
$25
hash:csdn:article:by:2662
$4
desc
$210
架构师入门笔记三 初识Queue队列


1. wait和notify模拟Queue
1.1 wait / notify 基础知识
线程通信概念：线程是操作系统中独立的个体，但这些个体如果不经过特殊的...
*4
$4
HSET
$25
hash:csdn:article:by:2662
$9
readCount
$3
888
*4
$4
HSET
$25
hash:csdn:article:by:2662
$14
articleContent
$40
csdn/java/1_0_1_2_1504265254.615425.html
*4
$4
HSET
$25
hash:csdn:article:by:2662
$4
date
$16
2017-08-10 21:30
*4
$4
HSET
$25
hash:csdn:article:by:2662
$6
author
$11
qq_19558705
*4
$4
HSET
$25
hash:csdn:article:by:2662
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2662
$9
labelList
$16
架构师,Queue,
*4
$4
HSET
$25
hash:csdn:article:by:2662
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2662
$10
authorLink
$30
http://my.csdn.net/qq_19558705
*4
$4
HSET
$25
hash:csdn:article:by:2662
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2663
$2
id
$4
2663
*4
$4
HSET
$25
hash:csdn:article:by:2663
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2663
$3
url
$57
http://blog.csdn.net/qq_19558705/article/details/77036449
*4
$4
HSET
$25
hash:csdn:article:by:2663
$5
title
$40
架构师入门笔记五 初识线程池
*4
$4
HSET
$25
hash:csdn:article:by:2663
$4
desc
$295
架构师入门笔记五 初识线程池


线程池，顾名思义是线程的池子。当任务提交给线程池的时候，线程池会安排一个空闲的线程去执行任务，当任务执行结束后返回到线程池中。若没有空闲的线程去执行任务，则该任务就会...
*4
$4
HSET
$25
hash:csdn:article:by:2663
$9
readCount
$3
451
*4
$4
HSET
$25
hash:csdn:article:by:2663
$14
articleContent
$40
csdn/java/1_0_1_4_1504265255.543954.html
*4
$4
HSET
$25
hash:csdn:article:by:2663
$4
date
$16
2017-08-20 08:44
*4
$4
HSET
$25
hash:csdn:article:by:2663
$6
author
$11
qq_19558705
*4
$4
HSET
$25
hash:csdn:article:by:2663
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2663
$9
labelList
$20
架构师,线程池,
*4
$4
HSET
$25
hash:csdn:article:by:2663
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2663
$10
authorLink
$30
http://my.csdn.net/qq_19558705
*4
$4
HSET
$25
hash:csdn:article:by:2663
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2664
$2
id
$4
2664
*4
$4
HSET
$25
hash:csdn:article:by:2664
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2664
$3
url
$57
http://blog.csdn.net/qq_19558705/article/details/76888389
*4
$4
HSET
$25
hash:csdn:article:by:2664
$5
title
$52
架构师入门笔记四 初识多线程设计模式
*4
$4
HSET
$25
hash:csdn:article:by:2664
$4
desc
$249
架构师入门笔记四 初识多线程设计模式


这章讲解常用的并行设计模式，为后续的多线程打基础。常用的并行设计模式有：Future 模式、Master-Worker模式 和 生产者-消费者模式。其中生产者...
*4
$4
HSET
$25
hash:csdn:article:by:2664
$9
readCount
$3
711
*4
$4
HSET
$25
hash:csdn:article:by:2664
$14
articleContent
$40
csdn/java/1_0_1_3_1504265256.639035.html
*4
$4
HSET
$25
hash:csdn:article:by:2664
$4
date
$16
2017-08-15 18:52
*4
$4
HSET
$25
hash:csdn:article:by:2664
$6
author
$11
qq_19558705
*4
$4
HSET
$25
hash:csdn:article:by:2664
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2664
$9
labelList
$23
架构师,设计模式,
*4
$4
HSET
$25
hash:csdn:article:by:2664
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2664
$10
authorLink
$30
http://my.csdn.net/qq_19558705
*4
$4
HSET
$25
hash:csdn:article:by:2664
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2665
$2
id
$4
2665
*4
$4
HSET
$25
hash:csdn:article:by:2665
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2665
$3
url
$56
http://blog.csdn.net/maosijunzi/article/details/38704889
*4
$4
HSET
$25
hash:csdn:article:by:2665
$5
title
$39
java设计模式之享元模式（11）
*4
$4
HSET
$25
hash:csdn:article:by:2665
$4
desc
$180
是结构型设计模式，其目的是为了减少大量的重复对象。
java中String就是享元模式的。看下例子
 
package com.pattern.struct.flyweight;

public...
*4
$4
HSET
$25
hash:csdn:article:by:2665
$9
readCount
$3
758
*4
$4
HSET
$25
hash:csdn:article:by:2665
$14
articleContent
$40
csdn/java/1_0_1_0_1504265258.700019.html
*4
$4
HSET
$25
hash:csdn:article:by:2665
$4
date
$16
2014-08-20 13:30
*4
$4
HSET
$25
hash:csdn:article:by:2665
$6
author
$10
maosijunzi
*4
$4
HSET
$25
hash:csdn:article:by:2665
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2665
$9
labelList
$35
JAVA,java设计模式,设计模式,
*4
$4
HSET
$25
hash:csdn:article:by:2665
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2665
$10
authorLink
$29
http://my.csdn.net/maosijunzi
*4
$4
HSET
$25
hash:csdn:article:by:2665
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2666
$2
id
$4
2666
*4
$4
HSET
$25
hash:csdn:article:by:2666
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2666
$3
url
$56
http://blog.csdn.net/maosijunzi/article/details/38660429
*4
$4
HSET
$25
hash:csdn:article:by:2666
$5
title
$39
java设计模式之桥梁模式（10）
*4
$4
HSET
$25
hash:csdn:article:by:2666
$4
desc
$277
java设计模式之桥梁模式（10）
又叫桥连模式。
桥梁模式是对象的结构模式，桥梁模式的用意是:将抽象化与实现化脱耦，使得二者可以独立地变化。
接口就是抽象化，实现类就是实现化，把接口和实现类分...
*4
$4
HSET
$25
hash:csdn:article:by:2666
$9
readCount
$4
2083
*4
$4
HSET
$25
hash:csdn:article:by:2666
$14
articleContent
$40
csdn/java/1_0_1_1_1504265259.760147.html
*4
$4
HSET
$25
hash:csdn:article:by:2666
$4
date
$16
2014-08-18 14:39
*4
$4
HSET
$25
hash:csdn:article:by:2666
$6
author
$10
maosijunzi
*4
$4
HSET
$25
hash:csdn:article:by:2666
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2666
$9
labelList
$35
JAVA,java设计模式,设计模式,
*4
$4
HSET
$25
hash:csdn:article:by:2666
$9
likeCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2666
$10
authorLink
$29
http://my.csdn.net/maosijunzi
*4
$4
HSET
$25
hash:csdn:article:by:2666
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2667
$2
id
$4
2667
*4
$4
HSET
$25
hash:csdn:article:by:2667
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2667
$3
url
$56
http://blog.csdn.net/maosijunzi/article/details/38335359
*4
$4
HSET
$25
hash:csdn:article:by:2667
$5
title
$38
java设计模式之外观模式（9）
*4
$4
HSET
$25
hash:csdn:article:by:2667
$4
desc
$287
外观模式又叫门面模式。
门面模式是对象的结构模式，外部与一个子系统的通信必须通过一个统一的门面对象进行。
门面模式提供一个高层次的接口，使得子系统更易于使用。（注：这句话来自《java与模式》）。...
*4
$4
HSET
$25
hash:csdn:article:by:2667
$9
readCount
$3
760
*4
$4
HSET
$25
hash:csdn:article:by:2667
$14
articleContent
$40
csdn/java/1_0_1_2_1504265260.534216.html
*4
$4
HSET
$25
hash:csdn:article:by:2667
$4
date
$16
2014-08-01 13:54
*4
$4
HSET
$25
hash:csdn:article:by:2667
$6
author
$10
maosijunzi
*4
$4
HSET
$25
hash:csdn:article:by:2667
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2667
$9
labelList
$35
JAVA,java设计模式,设计模式,
*4
$4
HSET
$25
hash:csdn:article:by:2667
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2667
$10
authorLink
$29
http://my.csdn.net/maosijunzi
*4
$4
HSET
$25
hash:csdn:article:by:2667
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2668
$2
id
$4
2668
*4
$4
HSET
$25
hash:csdn:article:by:2668
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2668
$3
url
$56
http://blog.csdn.net/maosijunzi/article/details/38065001
*4
$4
HSET
$25
hash:csdn:article:by:2668
$5
title
$38
java设计模式之单例模式（1）
*4
$4
HSET
$25
hash:csdn:article:by:2668
$4
desc
$248
单例模式：属于创建型模式。项目中只存在某个类的一个对象，而且只可能存在一个对象。那么我们说这个类是单例模式，也叫单态模式。
单例模式分为两种 :懒汉式 和 饿汉式。
饿汉式
*4
$4
HSET
$25
hash:csdn:article:by:2668
$9
readCount
$3
822
*4
$4
HSET
$25
hash:csdn:article:by:2668
$14
articleContent
$41
csdn/java/1_0_1_10_1504265261.544801.html
*4
$4
HSET
$25
hash:csdn:article:by:2668
$4
date
$16
2014-07-23 15:30
*4
$4
HSET
$25
hash:csdn:article:by:2668
$6
author
$10
maosijunzi
*4
$4
HSET
$25
hash:csdn:article:by:2668
$12
commentCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2668
$9
labelList
$30
java设计模式,设计模式,
*4
$4
HSET
$25
hash:csdn:article:by:2668
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2668
$10
authorLink
$29
http://my.csdn.net/maosijunzi
*4
$4
HSET
$25
hash:csdn:article:by:2668
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2669
$2
id
$4
2669
*4
$4
HSET
$25
hash:csdn:article:by:2669
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2669
$3
url
$56
http://blog.csdn.net/maosijunzi/article/details/38090011
*4
$4
HSET
$25
hash:csdn:article:by:2669
$5
title
$38
java设计模式之工厂模式（2）
*4
$4
HSET
$25
hash:csdn:article:by:2669
$4
desc
$275
工厂模式：属于创建型模式。同我们生活中的厂家很相似。我们并不自己制造（new）产品，而是依靠厂家制造，我们只是拿来使用。简单的说就是让工厂
  根据我们的需求给我们new一个对象。
  
工厂模...
*4
$4
HSET
$25
hash:csdn:article:by:2669
$9
readCount
$3
904
*4
$4
HSET
$25
hash:csdn:article:by:2669
$14
articleContent
$40
csdn/java/1_0_1_9_1504265262.610081.html
*4
$4
HSET
$25
hash:csdn:article:by:2669
$4
date
$16
2014-07-24 18:21
*4
$4
HSET
$25
hash:csdn:article:by:2669
$6
author
$10
maosijunzi
*4
$4
HSET
$25
hash:csdn:article:by:2669
$12
commentCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2669
$9
labelList
$35
JAVA,java设计模式,设计模式,
*4
$4
HSET
$25
hash:csdn:article:by:2669
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2669
$10
authorLink
$29
http://my.csdn.net/maosijunzi
*4
$4
HSET
$25
hash:csdn:article:by:2669
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2670
$2
id
$4
2670
*4
$4
HSET
$25
hash:csdn:article:by:2670
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2670
$3
url
$56
http://blog.csdn.net/maosijunzi/article/details/38109171
*4
$4
HSET
$25
hash:csdn:article:by:2670
$5
title
$41
java设计模式之建造者模式（3）
*4
$4
HSET
$25
hash:csdn:article:by:2670
$4
desc
$293
建造者模式：属于创建型模式，和之前的工厂模式很相似。两者相比的话，建造者模式创建的对象是复杂的对象，而工厂模式创建的都是简单的单一对象。
    建造者模式就像一个 流水线，会把各种零件按照一定的顺...
*4
$4
HSET
$25
hash:csdn:article:by:2670
$9
readCount
$3
899
*4
$4
HSET
$25
hash:csdn:article:by:2670
$14
articleContent
$40
csdn/java/1_0_1_8_1504265263.725741.html
*4
$4
HSET
$25
hash:csdn:article:by:2670
$4
date
$16
2014-07-25 09:44
*4
$4
HSET
$25
hash:csdn:article:by:2670
$6
author
$10
maosijunzi
*4
$4
HSET
$25
hash:csdn:article:by:2670
$12
commentCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2670
$9
labelList
$35
JAVA,java设计模式,设计模式,
*4
$4
HSET
$25
hash:csdn:article:by:2670
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2670
$10
authorLink
$29
http://my.csdn.net/maosijunzi
*4
$4
HSET
$25
hash:csdn:article:by:2670
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2671
$2
id
$4
2671
*4
$4
HSET
$25
hash:csdn:article:by:2671
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2671
$3
url
$56
http://blog.csdn.net/maosijunzi/article/details/38122333
*4
$4
HSET
$25
hash:csdn:article:by:2671
$5
title
$58
java设计模式之三句话记住23种设计模式（4）
*4
$4
HSET
$25
hash:csdn:article:by:2671
$4
desc
$287
1：创建型模式：弹弓原件（单例，工厂，原型，建造）
2：结构型模式：外援组 佩戴桥石（外观，享元，组合，适配，代理，桥连，装饰）
3：行为型模式：爹责令房中介装备观测板（迭代，责任链，命令，访问者...
*4
$4
HSET
$25
hash:csdn:article:by:2671
$9
readCount
$4
1204
*4
$4
HSET
$25
hash:csdn:article:by:2671
$14
articleContent
$40
csdn/java/1_0_1_7_1504265263.872213.html
*4
$4
HSET
$25
hash:csdn:article:by:2671
$4
date
$16
2014-07-25 17:28
*4
$4
HSET
$25
hash:csdn:article:by:2671
$6
author
$10
maosijunzi
*4
$4
HSET
$25
hash:csdn:article:by:2671
$12
commentCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2671
$9
labelList
$35
JAVA,java设计模式,设计模式,
*4
$4
HSET
$25
hash:csdn:article:by:2671
$9
likeCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2671
$10
authorLink
$29
http://my.csdn.net/maosijunzi
*4
$4
HSET
$25
hash:csdn:article:by:2671
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2672
$2
id
$4
2672
*4
$4
HSET
$25
hash:csdn:article:by:2672
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2672
$3
url
$56
http://blog.csdn.net/maosijunzi/article/details/38228855
*4
$4
HSET
$25
hash:csdn:article:by:2672
$5
title
$38
java设计模式之原型模式（5）
*4
$4
HSET
$25
hash:csdn:article:by:2672
$4
desc
$277
原型模式也是一种创建型模式，只不过他创建的对象不是通过new来创建的，而是通过克隆来实现。为什么要通过克隆而不是new呢？
举个例子：比如一个对象的创建需要读取本地文件（Excel）中的信息，而且需...
*4
$4
HSET
$25
hash:csdn:article:by:2672
$9
readCount
$3
977
*4
$4
HSET
$25
hash:csdn:article:by:2672
$14
articleContent
$40
csdn/java/1_0_1_6_1504265264.767708.html
*4
$4
HSET
$25
hash:csdn:article:by:2672
$4
date
$16
2014-07-28 13:56
*4
$4
HSET
$25
hash:csdn:article:by:2672
$6
author
$10
maosijunzi
*4
$4
HSET
$25
hash:csdn:article:by:2672
$12
commentCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2672
$9
labelList
$35
JAVA,java设计模式,设计模式,
*4
$4
HSET
$25
hash:csdn:article:by:2672
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2672
$10
authorLink
$29
http://my.csdn.net/maosijunzi
*4
$4
HSET
$25
hash:csdn:article:by:2672
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2673
$2
id
$4
2673
*4
$4
HSET
$25
hash:csdn:article:by:2673
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2673
$3
url
$56
http://blog.csdn.net/maosijunzi/article/details/38321303
*4
$4
HSET
$25
hash:csdn:article:by:2673
$5
title
$38
java设计模式之代理模式（8）
*4
$4
HSET
$25
hash:csdn:article:by:2673
$4
desc
$295
代理模式就是，不直接调用目标函数，而是通过一个代理类来调用。
它的类继承关系和装饰模式很类似。但是它们的目的不一样。
代理模式不会增加新的功能，只是在调用和被调用之间加入代理层。而装饰模式旨在增加...
*4
$4
HSET
$25
hash:csdn:article:by:2673
$9
readCount
$3
761
*4
$4
HSET
$25
hash:csdn:article:by:2673
$14
articleContent
$40
csdn/java/1_0_1_3_1504265265.799443.html
*4
$4
HSET
$25
hash:csdn:article:by:2673
$4
date
$16
2014-07-31 17:52
*4
$4
HSET
$25
hash:csdn:article:by:2673
$6
author
$10
maosijunzi
*4
$4
HSET
$25
hash:csdn:article:by:2673
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2673
$9
labelList
$35
JAVA,java设计模式,设计模式,
*4
$4
HSET
$25
hash:csdn:article:by:2673
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2673
$10
authorLink
$29
http://my.csdn.net/maosijunzi
*4
$4
HSET
$25
hash:csdn:article:by:2673
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2674
$2
id
$4
2674
*4
$4
HSET
$25
hash:csdn:article:by:2674
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2674
$3
url
$56
http://blog.csdn.net/maosijunzi/article/details/38264871
*4
$4
HSET
$25
hash:csdn:article:by:2674
$5
title
$41
java设计模式之适配器模式（6）
*4
$4
HSET
$25
hash:csdn:article:by:2674
$4
desc
$293
属于结构型模式。适配器这三个字在生活中很常见。举个最简单的例子，那就是变压器，它可以把几万伏的高压变成我们生活用电220伏。
变压器就是一种适配器。适配器模式的作用就和生活中的适配器的作用是很相似的...
*4
$4
HSET
$25
hash:csdn:article:by:2674
$9
readCount
$3
855
*4
$4
HSET
$25
hash:csdn:article:by:2674
$14
articleContent
$40
csdn/java/1_0_1_5_1504265266.649672.html
*4
$4
HSET
$25
hash:csdn:article:by:2674
$4
date
$16
2014-07-29 13:46
*4
$4
HSET
$25
hash:csdn:article:by:2674
$6
author
$10
maosijunzi
*4
$4
HSET
$25
hash:csdn:article:by:2674
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2674
$9
labelList
$35
JAVA,java设计模式,设计模式,
*4
$4
HSET
$25
hash:csdn:article:by:2674
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2674
$10
authorLink
$29
http://my.csdn.net/maosijunzi
*4
$4
HSET
$25
hash:csdn:article:by:2674
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2675
$2
id
$4
2675
*4
$4
HSET
$25
hash:csdn:article:by:2675
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2675
$3
url
$56
http://blog.csdn.net/maosijunzi/article/details/38294633
*4
$4
HSET
$25
hash:csdn:article:by:2675
$5
title
$38
java设计模式之装饰模式（7）
*4
$4
HSET
$25
hash:csdn:article:by:2675
$4
desc
$283
属于结构型模式，装饰模式就是动态的给一个对象增加一些功能。
要求装饰对象和被装饰对象实现同一个接口，装饰对象持有被装饰对象的实例。
java的IO流的实现就是装饰模式。可以轻松的把一种流装饰成为另...
*4
$4
HSET
$25
hash:csdn:article:by:2675
$9
readCount
$3
838
*4
$4
HSET
$25
hash:csdn:article:by:2675
$14
articleContent
$40
csdn/java/1_0_1_4_1504265267.534465.html
*4
$4
HSET
$25
hash:csdn:article:by:2675
$4
date
$16
2014-07-30 10:36
*4
$4
HSET
$25
hash:csdn:article:by:2675
$6
author
$10
maosijunzi
*4
$4
HSET
$25
hash:csdn:article:by:2675
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2675
$9
labelList
$35
JAVA,java设计模式,设计模式,
*4
$4
HSET
$25
hash:csdn:article:by:2675
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2675
$10
authorLink
$29
http://my.csdn.net/maosijunzi
*4
$4
HSET
$25
hash:csdn:article:by:2675
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2676
$2
id
$4
2676
*4
$4
HSET
$25
hash:csdn:article:by:2676
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2676
$3
url
$56
http://blog.csdn.net/maosijunzi/article/details/38064795
*4
$4
HSET
$25
hash:csdn:article:by:2676
$5
title
$23
java设计模式（0）
*4
$4
HSET
$25
hash:csdn:article:by:2676
$4
desc
$295
总体来说设计模式分为三大类：创建型模式、结构型模式和行为型模式。
创建型模式：工厂方法模式、抽象工厂模式、单例模式、建造者模式、原型模式。
结构型模式：适配器模式、装饰器模式、代理模式、外观模式、...
*4
$4
HSET
$25
hash:csdn:article:by:2676
$9
readCount
$3
731
*4
$4
HSET
$25
hash:csdn:article:by:2676
$14
articleContent
$41
csdn/java/1_0_1_11_1504265268.786537.html
*4
$4
HSET
$25
hash:csdn:article:by:2676
$4
date
$16
2014-07-23 15:18
*4
$4
HSET
$25
hash:csdn:article:by:2676
$6
author
$10
maosijunzi
*4
$4
HSET
$25
hash:csdn:article:by:2676
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2676
$9
labelList
$30
java设计模式,设计模式,
*4
$4
HSET
$25
hash:csdn:article:by:2676
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2676
$10
authorLink
$29
http://my.csdn.net/maosijunzi
*4
$4
HSET
$25
hash:csdn:article:by:2676
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2677
$2
id
$4
2677
*4
$4
HSET
$25
hash:csdn:article:by:2677
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2677
$3
url
$51
http://blog.csdn.net/xvshu/article/details/46284875
*4
$4
HSET
$25
hash:csdn:article:by:2677
$5
title
$46
java架构解密——AOP之动态代理实现
*4
$4
HSET
$25
hash:csdn:article:by:2677
$4
desc
$131
深入spring aop 的核心，看看这个神秘的东西是怎么样的一幅面孔，看他是如何由简入难，化难为简！
*4
$4
HSET
$25
hash:csdn:article:by:2677
$9
readCount
$4
1367
*4
$4
HSET
$25
hash:csdn:article:by:2677
$14
articleContent
$38
csdn/java/1_0_1_2_1504265271.8805.html
*4
$4
HSET
$25
hash:csdn:article:by:2677
$4
date
$16
2015-05-31 13:34
*4
$4
HSET
$25
hash:csdn:article:by:2677
$6
author
$5
xvshu
*4
$4
HSET
$25
hash:csdn:article:by:2677
$12
commentCount
$2
15
*4
$4
HSET
$25
hash:csdn:article:by:2677
$9
labelList
$32
架构,aop,spring,框架,设计,
*4
$4
HSET
$25
hash:csdn:article:by:2677
$9
likeCount
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2677
$10
authorLink
$24
http://my.csdn.net/xvshu
*4
$4
HSET
$25
hash:csdn:article:by:2677
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2678
$2
id
$4
2678
*4
$4
HSET
$25
hash:csdn:article:by:2678
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2678
$3
url
$51
http://blog.csdn.net/xvshu/article/details/46288131
*4
$4
HSET
$25
hash:csdn:article:by:2678
$5
title
$37
java架构解密——深入再造AOP
*4
$4
HSET
$25
hash:csdn:article:by:2678
$4
desc
$150
随着AOP研究的深入，我们发现，核心概念变得极其重要，这些概念就是一幅图，指引我们在优化之路上越走越远！
*4
$4
HSET
$25
hash:csdn:article:by:2678
$9
readCount
$4
1260
*4
$4
HSET
$25
hash:csdn:article:by:2678
$14
articleContent
$40
csdn/java/1_0_1_1_1504265274.754792.html
*4
$4
HSET
$25
hash:csdn:article:by:2678
$4
date
$16
2015-05-31 15:08
*4
$4
HSET
$25
hash:csdn:article:by:2678
$6
author
$5
xvshu
*4
$4
HSET
$25
hash:csdn:article:by:2678
$12
commentCount
$2
10
*4
$4
HSET
$25
hash:csdn:article:by:2678
$9
labelList
$35
大数据,架构,优化,解密,aop,
*4
$4
HSET
$25
hash:csdn:article:by:2678
$9
likeCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2678
$10
authorLink
$24
http://my.csdn.net/xvshu
*4
$4
HSET
$25
hash:csdn:article:by:2678
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2679
$2
id
$4
2679
*4
$4
HSET
$25
hash:csdn:article:by:2679
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2679
$3
url
$51
http://blog.csdn.net/xvshu/article/details/42435167
*4
$4
HSET
$25
hash:csdn:article:by:2679
$5
title
$46
springMvc+Spring4+hibernate4整合常见错误
*4
$4
HSET
$25
hash:csdn:article:by:2679
$4
desc
$235
最近一直在做springMvc+Spring4+hibernate4的整合，出了不少错误，这都是我们宝贵的经验啊，在整合的过程中，最大的问题就是版本升级的问题，之前做过jdk1.6的例子，很顺利，但是...
*4
$4
HSET
$25
hash:csdn:article:by:2679
$9
readCount
$4
6888
*4
$4
HSET
$25
hash:csdn:article:by:2679
$14
articleContent
$40
csdn/java/1_0_1_6_1504265275.729173.html
*4
$4
HSET
$25
hash:csdn:article:by:2679
$4
date
$16
2015-01-05 23:33
*4
$4
HSET
$25
hash:csdn:article:by:2679
$6
author
$5
xvshu
*4
$4
HSET
$25
hash:csdn:article:by:2679
$12
commentCount
$2
17
*4
$4
HSET
$25
hash:csdn:article:by:2679
$9
labelList
$15
java,springMvc,
*4
$4
HSET
$25
hash:csdn:article:by:2679
$9
likeCount
$1
5
*4
$4
HSET
$25
hash:csdn:article:by:2679
$10
authorLink
$24
http://my.csdn.net/xvshu
*4
$4
HSET
$25
hash:csdn:article:by:2679
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2680
$2
id
$4
2680
*4
$4
HSET
$25
hash:csdn:article:by:2680
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2680
$3
url
$53
http://blog.csdn.net/lhy_ycu/article/details/40031567
*4
$4
HSET
$25
hash:csdn:article:by:2680
$5
title
$31
Java设计模式博客全目录
*4
$4
HSET
$25
hash:csdn:article:by:2680
$4
desc
$299
今天来对这23种设计模式做个总结。咱使用设计模式的目的是为了可重用代码、让代码更容易被他人理解、保证代码可靠性，当然设计模式并不是万能的，项目中的实际问题还有具体分析。咱不能为了使用设计模式而使用，而...
*4
$4
HSET
$25
hash:csdn:article:by:2680
$9
readCount
$4
4132
*4
$4
HSET
$25
hash:csdn:article:by:2680
$14
articleContent
$39
csdn/java/1_0_1_0_1504265278.74955.html
*4
$4
HSET
$25
hash:csdn:article:by:2680
$4
date
$16
2014-10-13 02:04
*4
$4
HSET
$25
hash:csdn:article:by:2680
$6
author
$10
JAVE_LOVER
*4
$4
HSET
$25
hash:csdn:article:by:2680
$12
commentCount
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2680
$9
labelList
$48
java设计模式,架构,uml,模式,设计模式,
*4
$4
HSET
$25
hash:csdn:article:by:2680
$9
likeCount
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2680
$10
authorLink
$29
http://my.csdn.net/JAVE_LOVER
*4
$4
HSET
$25
hash:csdn:article:by:2680
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2681
$2
id
$4
2681
*4
$4
HSET
$25
hash:csdn:article:by:2681
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2681
$3
url
$53
http://blog.csdn.net/lhy_ycu/article/details/40021651
*4
$4
HSET
$25
hash:csdn:article:by:2681
$5
title
$66
Java设计模式菜鸟系列(二十一)享元模式建模与实现
*4
$4
HSET
$25
hash:csdn:article:by:2681
$4
desc
$283
享元模式（Flyweight）：运用共享的技术有效地支持大量细粒度的对象。主要目的是实现对象的共享，即共享池，当系统中对象多的时候可以减少内存的开销。在某种程度上，你可以把单例看成是享元的一种特例。
...
*4
$4
HSET
$25
hash:csdn:article:by:2681
$9
readCount
$4
1708
*4
$4
HSET
$25
hash:csdn:article:by:2681
$14
articleContent
$40
csdn/java/1_0_1_3_1504265279.798814.html
*4
$4
HSET
$25
hash:csdn:article:by:2681
$4
date
$16
2014-10-12 22:27
*4
$4
HSET
$25
hash:csdn:article:by:2681
$6
author
$10
JAVE_LOVER
*4
$4
HSET
$25
hash:csdn:article:by:2681
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2681
$9
labelList
$48
java设计模式,uml,架构,设计模式,模式,
*4
$4
HSET
$25
hash:csdn:article:by:2681
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2681
$10
authorLink
$29
http://my.csdn.net/JAVE_LOVER
*4
$4
HSET
$25
hash:csdn:article:by:2681
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2682
$2
id
$4
2682
*4
$4
HSET
$25
hash:csdn:article:by:2682
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2682
$3
url
$53
http://blog.csdn.net/lhy_ycu/article/details/40019829
*4
$4
HSET
$25
hash:csdn:article:by:2682
$5
title
$66
Java设计模式菜鸟系列(二十)解释器模式建模与实现
*4
$4
HSET
$25
hash:csdn:article:by:2682
$4
desc
$263
解释器模式(Interpreter)：它定义了对象与对象之间进行某种操作之后会得到什么值。一般主要应用在OOP开发中的编译器

的开发中，所以适用面比较窄。

解释器模式用来做各种各样的解释器，如正则...
*4
$4
HSET
$25
hash:csdn:article:by:2682
$9
readCount
$4
1616
*4
$4
HSET
$25
hash:csdn:article:by:2682
$14
articleContent
$40
csdn/java/1_0_1_4_1504265280.818141.html
*4
$4
HSET
$25
hash:csdn:article:by:2682
$4
date
$16
2014-10-12 17:17
*4
$4
HSET
$25
hash:csdn:article:by:2682
$6
author
$10
JAVE_LOVER
*4
$4
HSET
$25
hash:csdn:article:by:2682
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2682
$9
labelList
$48
java设计模式,uml,架构,设计模式,模式,
*4
$4
HSET
$25
hash:csdn:article:by:2682
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2682
$10
authorLink
$29
http://my.csdn.net/JAVE_LOVER
*4
$4
HSET
$25
hash:csdn:article:by:2682
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2683
$2
id
$4
2683
*4
$4
HSET
$25
hash:csdn:article:by:2683
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2683
$3
url
$53
http://blog.csdn.net/lhy_ycu/article/details/39828653
*4
$4
HSET
$25
hash:csdn:article:by:2683
$5
title
$63
Java设计模式菜鸟系列(十二)组合模式建模与实现
*4
$4
HSET
$25
hash:csdn:article:by:2683
$4
desc
$169
转载请注明出处：http://blog.csdn.net/lhy_ycu/article/details/39828653

组合模式(Composite)：组合模式有时又叫部分-整体模式，将对象组合...
*4
$4
HSET
$25
hash:csdn:article:by:2683
$9
readCount
$4
2515
*4
$4
HSET
$25
hash:csdn:article:by:2683
$14
articleContent
$41
csdn/java/1_0_1_12_1504265281.772597.html
*4
$4
HSET
$25
hash:csdn:article:by:2683
$4
date
$16
2014-10-06 16:11
*4
$4
HSET
$25
hash:csdn:article:by:2683
$6
author
$10
JAVE_LOVER
*4
$4
HSET
$25
hash:csdn:article:by:2683
$12
commentCount
$1
3
*4
$4
HSET
$25
hash:csdn:article:by:2683
$9
labelList
$48
设计模式,java设计模式,模式,uml,架构,
*4
$4
HSET
$25
hash:csdn:article:by:2683
$9
likeCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2683
$10
authorLink
$29
http://my.csdn.net/JAVE_LOVER
*4
$4
HSET
$25
hash:csdn:article:by:2683
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2684
$2
id
$4
2684
*4
$4
HSET
$25
hash:csdn:article:by:2684
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2684
$3
url
$53
http://blog.csdn.net/lhy_ycu/article/details/39784403
*4
$4
HSET
$25
hash:csdn:article:by:2684
$5
title
$66
Java设计模式菜鸟系列(五)抽象工厂模式建模与实现
*4
$4
HSET
$25
hash:csdn:article:by:2684
$4
desc
$267
抽象工厂模式（Abstract Factory）：抽象工厂--顾名思义，就是把工厂抽象出来，不同的工厂生产不同的产品。这样做有个好处：一旦需要增加新的功能，直接增加新的工厂类就可以了，不需要修改之前的...
*4
$4
HSET
$25
hash:csdn:article:by:2684
$9
readCount
$4
1950
*4
$4
HSET
$25
hash:csdn:article:by:2684
$14
articleContent
$41
csdn/java/1_0_1_19_1504265282.836506.html
*4
$4
HSET
$25
hash:csdn:article:by:2684
$4
date
$16
2014-10-04 23:25
*4
$4
HSET
$25
hash:csdn:article:by:2684
$6
author
$10
JAVE_LOVER
*4
$4
HSET
$25
hash:csdn:article:by:2684
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2684
$9
labelList
$39
java设计模式,工厂模式,java,uml,
*4
$4
HSET
$25
hash:csdn:article:by:2684
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2684
$10
authorLink
$29
http://my.csdn.net/JAVE_LOVER
*4
$4
HSET
$25
hash:csdn:article:by:2684
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2685
$2
id
$4
2685
*4
$4
HSET
$25
hash:csdn:article:by:2685
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2685
$3
url
$53
http://blog.csdn.net/lhy_ycu/article/details/39785513
*4
$4
HSET
$25
hash:csdn:article:by:2685
$5
title
$60
Java设计模式菜鸟系列(六)单例模式建模与实现
*4
$4
HSET
$25
hash:csdn:article:by:2685
$4
desc
$301
单例模式保证了一个类只有一个实例，且提供一个访问全局点的方式，更加灵活的保证了实例的创建和访问约束。系统中只有一个实例，因此构造方法应该为私有 饿汉式：类加载时直接创建静态实例；懒汉式：第一次需要时才...
*4
$4
HSET
$25
hash:csdn:article:by:2685
$9
readCount
$4
2202
*4
$4
HSET
$25
hash:csdn:article:by:2685
$14
articleContent
$41
csdn/java/1_0_1_18_1504265283.596996.html
*4
$4
HSET
$25
hash:csdn:article:by:2685
$4
date
$16
2014-10-05 00:44
*4
$4
HSET
$25
hash:csdn:article:by:2685
$6
author
$10
JAVE_LOVER
*4
$4
HSET
$25
hash:csdn:article:by:2685
$12
commentCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2685
$9
labelList
$49
java设计模式,uml,java,设计模式,singleton,
*4
$4
HSET
$25
hash:csdn:article:by:2685
$9
likeCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2685
$10
authorLink
$29
http://my.csdn.net/JAVE_LOVER
*4
$4
HSET
$25
hash:csdn:article:by:2685
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2686
$2
id
$4
2686
*4
$4
HSET
$25
hash:csdn:article:by:2686
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2686
$3
url
$53
http://blog.csdn.net/lhy_ycu/article/details/39804057
*4
$4
HSET
$25
hash:csdn:article:by:2686
$5
title
$60
Java设计模式菜鸟系列(七)命令模式建模与实现
*4
$4
HSET
$25
hash:csdn:article:by:2686
$4
desc
$279
命令模式(Command)：将“请求”(命令/口令)封装成一个对象，以便使用不同的请求、队列或者日志来参数化其对象。命令模式也支持撤销操作。命令模式的目的就是达到命令的发出者和执行者之间解耦，实现请求...
*4
$4
HSET
$25
hash:csdn:article:by:2686
$9
readCount
$4
2641
*4
$4
HSET
$25
hash:csdn:article:by:2686
$14
articleContent
$41
csdn/java/1_0_1_17_1504265284.844097.html
*4
$4
HSET
$25
hash:csdn:article:by:2686
$4
date
$16
2014-10-05 17:08
*4
$4
HSET
$25
hash:csdn:article:by:2686
$6
author
$10
JAVE_LOVER
*4
$4
HSET
$25
hash:csdn:article:by:2686
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2686
$9
labelList
$48
设计模式,java设计模式,uml,架构,模式,
*4
$4
HSET
$25
hash:csdn:article:by:2686
$9
likeCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2686
$10
authorLink
$29
http://my.csdn.net/JAVE_LOVER
*4
$4
HSET
$25
hash:csdn:article:by:2686
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2687
$2
id
$4
2687
*4
$4
HSET
$25
hash:csdn:article:by:2687
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2687
$3
url
$53
http://blog.csdn.net/lhy_ycu/article/details/39805069
*4
$4
HSET
$25
hash:csdn:article:by:2687
$5
title
$63
Java设计模式菜鸟系列(八)适配器模式建模与实现
*4
$4
HSET
$25
hash:csdn:article:by:2687
$4
desc
$277
适配器模式(Adapter)：将某个类的接口转换成客户端期望的另一个接口表示，目的是消除由于接口不匹配所造成的类的兼容性问题。
主要分为三类：类的适配器模式、对象的适配器模式、接口的适配器模式。

1...
*4
$4
HSET
$25
hash:csdn:article:by:2687
$9
readCount
$4
2010
*4
$4
HSET
$25
hash:csdn:article:by:2687
$14
articleContent
$41
csdn/java/1_0_1_16_1504265286.199316.html
*4
$4
HSET
$25
hash:csdn:article:by:2687
$4
date
$16
2014-10-05 19:52
*4
$4
HSET
$25
hash:csdn:article:by:2687
$6
author
$10
JAVE_LOVER
*4
$4
HSET
$25
hash:csdn:article:by:2687
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2687
$9
labelList
$54
软件开发,java设计模式,设计模式,uml,架构,
*4
$4
HSET
$25
hash:csdn:article:by:2687
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2687
$10
authorLink
$29
http://my.csdn.net/JAVE_LOVER
*4
$4
HSET
$25
hash:csdn:article:by:2687
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2688
$2
id
$4
2688
*4
$4
HSET
$25
hash:csdn:article:by:2688
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2688
$3
url
$53
http://blog.csdn.net/lhy_ycu/article/details/39805735
*4
$4
HSET
$25
hash:csdn:article:by:2688
$5
title
$60
Java设计模式菜鸟系列(九)外观模式建模与实现
*4
$4
HSET
$25
hash:csdn:article:by:2688
$4
desc
$261
外观模式(Facade)：是为了解决类与类之间的依赖关系的，像spring一样，可以将类与类之间的关系配置到配置文件中，而外观模式就是将他们的
关系放在一个Facade类中，降低了类与类之间的耦合度，...
*4
$4
HSET
$25
hash:csdn:article:by:2688
$9
readCount
$4
2306
*4
$4
HSET
$25
hash:csdn:article:by:2688
$14
articleContent
$41
csdn/java/1_0_1_15_1504265286.593606.html
*4
$4
HSET
$25
hash:csdn:article:by:2688
$4
date
$16
2014-10-05 20:46
*4
$4
HSET
$25
hash:csdn:article:by:2688
$6
author
$10
JAVE_LOVER
*4
$4
HSET
$25
hash:csdn:article:by:2688
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2688
$9
labelList
$54
软件开发,java设计模式,设计模式,uml,架构,
*4
$4
HSET
$25
hash:csdn:article:by:2688
$9
likeCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2688
$10
authorLink
$29
http://my.csdn.net/JAVE_LOVER
*4
$4
HSET
$25
hash:csdn:article:by:2688
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2689
$2
id
$4
2689
*4
$4
HSET
$25
hash:csdn:article:by:2689
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2689
$3
url
$53
http://blog.csdn.net/lhy_ycu/article/details/39806973
*4
$4
HSET
$25
hash:csdn:article:by:2689
$5
title
$66
Java设计模式菜鸟系列(十)模板方法模式建模与实现
*4
$4
HSET
$25
hash:csdn:article:by:2689
$4
desc
$269
模板方法模式(Template Method)：在一个方法中定义了一个算法的骨架，而将一些步骤延迟到子类中。模板方法使得子类可以再不改变算法结构的情况下，重新定义算法中的某些步骤。简而言之：模板方法定...
*4
$4
HSET
$25
hash:csdn:article:by:2689
$9
readCount
$4
2004
*4
$4
HSET
$25
hash:csdn:article:by:2689
$14
articleContent
$41
csdn/java/1_0_1_14_1504265288.202563.html
*4
$4
HSET
$25
hash:csdn:article:by:2689
$4
date
$16
2014-10-05 21:47
*4
$4
HSET
$25
hash:csdn:article:by:2689
$6
author
$10
JAVE_LOVER
*4
$4
HSET
$25
hash:csdn:article:by:2689
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2689
$9
labelList
$48
设计模式,uml,java设计模式,架构,模式,
*4
$4
HSET
$25
hash:csdn:article:by:2689
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2689
$10
authorLink
$29
http://my.csdn.net/JAVE_LOVER
*4
$4
HSET
$25
hash:csdn:article:by:2689
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2690
$2
id
$4
2690
*4
$4
HSET
$25
hash:csdn:article:by:2690
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2690
$3
url
$53
http://blog.csdn.net/lhy_ycu/article/details/39829859
*4
$4
HSET
$25
hash:csdn:article:by:2690
$5
title
$63
Java设计模式菜鸟系列(十三)状态模式建模与实现
*4
$4
HSET
$25
hash:csdn:article:by:2690
$4
desc
$179
转载请注明出处：http://blog.csdn.net/lhy_ycu/article/details/39828653

状态模式(State)：允许对象在内部状态改变时改变它的行为，对象看起来好...
*4
$4
HSET
$25
hash:csdn:article:by:2690
$9
readCount
$4
1841
*4
$4
HSET
$25
hash:csdn:article:by:2690
$14
articleContent
$41
csdn/java/1_0_1_11_1504265288.999633.html
*4
$4
HSET
$25
hash:csdn:article:by:2690
$4
date
$16
2014-10-06 17:22
*4
$4
HSET
$25
hash:csdn:article:by:2690
$6
author
$10
JAVE_LOVER
*4
$4
HSET
$25
hash:csdn:article:by:2690
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2690
$9
labelList
$48
java设计模式,设计模式,架构,模式,uml,
*4
$4
HSET
$25
hash:csdn:article:by:2690
$9
likeCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2690
$10
authorLink
$29
http://my.csdn.net/JAVE_LOVER
*4
$4
HSET
$25
hash:csdn:article:by:2690
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2691
$2
id
$4
2691
*4
$4
HSET
$25
hash:csdn:article:by:2691
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2691
$3
url
$53
http://blog.csdn.net/lhy_ycu/article/details/39863125
*4
$4
HSET
$25
hash:csdn:article:by:2691
$5
title
$66
Java设计模式菜鸟系列(十五)建造者模式建模与实现
*4
$4
HSET
$25
hash:csdn:article:by:2691
$4
desc
$283
建造者模式(Builder)：工厂类模式提供的是创建单个类的模式，而建造者模式则是将各种产品集中起来进行管理。简单起见，就拿之前的工厂方法模式进行修改一下就可以得到建造者模式。
建造者模式将很多功能集...
*4
$4
HSET
$25
hash:csdn:article:by:2691
$9
readCount
$4
3142
*4
$4
HSET
$25
hash:csdn:article:by:2691
$14
articleContent
$39
csdn/java/1_0_1_9_1504265289.93602.html
*4
$4
HSET
$25
hash:csdn:article:by:2691
$4
date
$16
2014-10-07 23:32
*4
$4
HSET
$25
hash:csdn:article:by:2691
$6
author
$10
JAVE_LOVER
*4
$4
HSET
$25
hash:csdn:article:by:2691
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2691
$9
labelList
$48
java设计模式,uml,设计模式,架构,模式,
*4
$4
HSET
$25
hash:csdn:article:by:2691
$9
likeCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2691
$10
authorLink
$29
http://my.csdn.net/JAVE_LOVER
*4
$4
HSET
$25
hash:csdn:article:by:2691
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2692
$2
id
$4
2692
*4
$4
HSET
$25
hash:csdn:article:by:2692
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2692
$3
url
$53
http://blog.csdn.net/lhy_ycu/article/details/39856435
*4
$4
HSET
$25
hash:csdn:article:by:2692
$5
title
$63
Java设计模式菜鸟系列(十四)代理模式建模与实现
*4
$4
HSET
$25
hash:csdn:article:by:2692
$4
desc
$281
代理模式(Composite)：代理模式其实就是多一个代理类出来，替原对象进行一些操作。比如咱有的时候打官司需要请律师，因为律师在法律方面有专长，可以替咱进行操作表达咱的想法，这就是代理的意思。代理模...
*4
$4
HSET
$25
hash:csdn:article:by:2692
$9
readCount
$4
4308
*4
$4
HSET
$25
hash:csdn:article:by:2692
$14
articleContent
$40
csdn/java/1_0_1_10_1504265290.97938.html
*4
$4
HSET
$25
hash:csdn:article:by:2692
$4
date
$16
2014-10-07 19:41
*4
$4
HSET
$25
hash:csdn:article:by:2692
$6
author
$10
JAVE_LOVER
*4
$4
HSET
$25
hash:csdn:article:by:2692
$12
commentCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2692
$9
labelList
$54
java设计模式,设计模式,架构,代理模式,uml,
*4
$4
HSET
$25
hash:csdn:article:by:2692
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2692
$10
authorLink
$29
http://my.csdn.net/JAVE_LOVER
*4
$4
HSET
$25
hash:csdn:article:by:2692
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2693
$2
id
$4
2693
*4
$4
HSET
$25
hash:csdn:article:by:2693
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2693
$3
url
$53
http://blog.csdn.net/lhy_ycu/article/details/39997337
*4
$4
HSET
$25
hash:csdn:article:by:2693
$5
title
$63
Java设计模式菜鸟系列(十六)原型模式建模与实现
*4
$4
HSET
$25
hash:csdn:article:by:2693
$4
desc
$279
原型模式(Prototype)：该模式的思想就是将一个对象作为原型，对其进行复制、克隆，产生一个和原对象类似的新对象。而这里的复制有两种：浅复制、深复制。
浅复制：将一个对象复制后，基本数据类型的变量...
*4
$4
HSET
$25
hash:csdn:article:by:2693
$9
readCount
$4
1580
*4
$4
HSET
$25
hash:csdn:article:by:2693
$14
articleContent
$40
csdn/java/1_0_1_8_1504265291.925973.html
*4
$4
HSET
$25
hash:csdn:article:by:2693
$4
date
$16
2014-10-11 17:45
*4
$4
HSET
$25
hash:csdn:article:by:2693
$6
author
$10
JAVE_LOVER
*4
$4
HSET
$25
hash:csdn:article:by:2693
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2693
$9
labelList
$48
java设计模式,uml,设计模式,架构,模式,
*4
$4
HSET
$25
hash:csdn:article:by:2693
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2693
$10
authorLink
$29
http://my.csdn.net/JAVE_LOVER
*4
$4
HSET
$25
hash:csdn:article:by:2693
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2694
$2
id
$4
2694
*4
$4
HSET
$25
hash:csdn:article:by:2694
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2694
$3
url
$53
http://blog.csdn.net/lhy_ycu/article/details/40008711
*4
$4
HSET
$25
hash:csdn:article:by:2694
$5
title
$63
Java设计模式菜鸟系列(十七)桥接模式建模与实现
*4
$4
HSET
$25
hash:csdn:article:by:2694
$4
desc
$221
桥接模式(Bridge)： 把事物和其具体实现分开(抽象化与实现化解耦)，使他们可以各自独立的变化。
假设你的电脑是双系统(WinXP、Win7)，而且都安装了mysql、oracle、sqlserv...
*4
$4
HSET
$25
hash:csdn:article:by:2694
$9
readCount
$4
2080
*4
$4
HSET
$25
hash:csdn:article:by:2694
$14
articleContent
$40
csdn/java/1_0_1_7_1504265292.935912.html
*4
$4
HSET
$25
hash:csdn:article:by:2694
$4
date
$16
2014-10-12 01:20
*4
$4
HSET
$25
hash:csdn:article:by:2694
$6
author
$10
JAVE_LOVER
*4
$4
HSET
$25
hash:csdn:article:by:2694
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2694
$9
labelList
$48
java设计模式,uml,架构,设计模式,模式,
*4
$4
HSET
$25
hash:csdn:article:by:2694
$9
likeCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2694
$10
authorLink
$29
http://my.csdn.net/JAVE_LOVER
*4
$4
HSET
$25
hash:csdn:article:by:2694
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2695
$2
id
$4
2695
*4
$4
HSET
$25
hash:csdn:article:by:2695
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2695
$3
url
$53
http://blog.csdn.net/lhy_ycu/article/details/40018231
*4
$4
HSET
$25
hash:csdn:article:by:2695
$5
title
$66
Java设计模式菜鸟系列(十八)责任链模式建模与实现
*4
$4
HSET
$25
hash:csdn:article:by:2695
$4
desc
$255
责任链模式(ChainOfResponsibility)： 有多个对象，每个对象持有下一个对象的引用，形成一条链，请求在这条链上传递，直到某一对象决定处理该请求，但是发出者并不清楚最终哪个对象会处理该...
*4
$4
HSET
$25
hash:csdn:article:by:2695
$9
readCount
$4
1657
*4
$4
HSET
$25
hash:csdn:article:by:2695
$14
articleContent
$40
csdn/java/1_0_1_6_1504265294.162423.html
*4
$4
HSET
$25
hash:csdn:article:by:2695
$4
date
$16
2014-10-12 15:16
*4
$4
HSET
$25
hash:csdn:article:by:2695
$6
author
$10
JAVE_LOVER
*4
$4
HSET
$25
hash:csdn:article:by:2695
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2695
$9
labelList
$48
java设计模式,uml,架构,设计模式,模式,
*4
$4
HSET
$25
hash:csdn:article:by:2695
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2695
$10
authorLink
$29
http://my.csdn.net/JAVE_LOVER
*4
$4
HSET
$25
hash:csdn:article:by:2695
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2696
$2
id
$4
2696
*4
$4
HSET
$25
hash:csdn:article:by:2696
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2696
$3
url
$53
http://blog.csdn.net/lhy_ycu/article/details/39807741
*4
$4
HSET
$25
hash:csdn:article:by:2696
$5
title
$66
Java设计模式菜鸟系列(十一)迭代器模式建模与实现
*4
$4
HSET
$25
hash:csdn:article:by:2696
$4
desc
$173
转载请注明出处：http://blog.csdn.net/lhy_ycu/article/details/39807741

迭代器模式(Iterator)：提供了一种方法顺序访问一个聚合对象中的各个...
*4
$4
HSET
$25
hash:csdn:article:by:2696
$9
readCount
$4
1943
*4
$4
HSET
$25
hash:csdn:article:by:2696
$14
articleContent
$40
csdn/java/1_0_1_13_1504265295.45347.html
*4
$4
HSET
$25
hash:csdn:article:by:2696
$4
date
$16
2014-10-06 14:28
*4
$4
HSET
$25
hash:csdn:article:by:2696
$6
author
$10
JAVE_LOVER
*4
$4
HSET
$25
hash:csdn:article:by:2696
$12
commentCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2696
$9
labelList
$48
设计模式,uml,java设计模式,架构,模式,
*4
$4
HSET
$25
hash:csdn:article:by:2696
$9
likeCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2696
$10
authorLink
$29
http://my.csdn.net/JAVE_LOVER
*4
$4
HSET
$25
hash:csdn:article:by:2696
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2697
$2
id
$4
2697
*4
$4
HSET
$25
hash:csdn:article:by:2697
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2697
$3
url
$53
http://blog.csdn.net/lhy_ycu/article/details/40028509
*4
$4
HSET
$25
hash:csdn:article:by:2697
$5
title
$69
Java设计模式菜鸟系列(二十三)访问者模式建模与实现
*4
$4
HSET
$25
hash:csdn:article:by:2697
$4
desc
$285
访问者模式(Visitor)：把数据结构和作用于结构上的操作解耦合，使得操作集合可相对自由地演化。访问者模式适用于数据结构相对稳定而算法又容易变化的系统。访问者模式的优点是增加操作很容易，因为增加操作...
*4
$4
HSET
$25
hash:csdn:article:by:2697
$9
readCount
$4
2097
*4
$4
HSET
$25
hash:csdn:article:by:2697
$14
articleContent
$40
csdn/java/1_0_1_1_1504265296.129218.html
*4
$4
HSET
$25
hash:csdn:article:by:2697
$4
date
$16
2014-10-13 00:36
*4
$4
HSET
$25
hash:csdn:article:by:2697
$6
author
$10
JAVE_LOVER
*4
$4
HSET
$25
hash:csdn:article:by:2697
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2697
$9
labelList
$48
java设计模式,uml,架构,模式,设计模式,
*4
$4
HSET
$25
hash:csdn:article:by:2697
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2697
$10
authorLink
$29
http://my.csdn.net/JAVE_LOVER
*4
$4
HSET
$25
hash:csdn:article:by:2697
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2698
$2
id
$4
2698
*4
$4
HSET
$25
hash:csdn:article:by:2698
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2698
$3
url
$53
http://blog.csdn.net/lhy_ycu/article/details/40027109
*4
$4
HSET
$25
hash:csdn:article:by:2698
$5
title
$69
Java设计模式菜鸟系列(二十二)中介者模式建模与实现
*4
$4
HSET
$25
hash:csdn:article:by:2698
$4
desc
$275
中介者模式(Mediator)：主要用来降低类与类之间的耦合的，因为如果类与类之间有依赖关系的话，不利于功能的拓展和维护，因为只要修改一个对象，其它关联的对象都得进行修改。
中介者模式只需关心和Med...
*4
$4
HSET
$25
hash:csdn:article:by:2698
$9
readCount
$4
1774
*4
$4
HSET
$25
hash:csdn:article:by:2698
$14
articleContent
$40
csdn/java/1_0_1_2_1504265297.113574.html
*4
$4
HSET
$25
hash:csdn:article:by:2698
$4
date
$16
2014-10-13 00:02
*4
$4
HSET
$25
hash:csdn:article:by:2698
$6
author
$10
JAVE_LOVER
*4
$4
HSET
$25
hash:csdn:article:by:2698
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2698
$9
labelList
$48
java设计模式,uml,架构,设计模式,模式,
*4
$4
HSET
$25
hash:csdn:article:by:2698
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2698
$10
authorLink
$29
http://my.csdn.net/JAVE_LOVER
*4
$4
HSET
$25
hash:csdn:article:by:2698
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2699
$2
id
$4
2699
*4
$4
HSET
$25
hash:csdn:article:by:2699
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2699
$3
url
$53
http://blog.csdn.net/lhy_ycu/article/details/40018967
*4
$4
HSET
$25
hash:csdn:article:by:2699
$5
title
$66
Java设计模式菜鸟系列(十九)备忘录模式建模与实现
*4
$4
HSET
$25
hash:csdn:article:by:2699
$4
desc
$265
备忘录模式(Memento)： 主要目的是保存一个对象的某个状态，以便在适当的时候恢复对象。

Memento设计模式用来备份一个对象的当前状态，当需要的时候，用这个备份来恢复这个对象在某一个时刻的状...
*4
$4
HSET
$25
hash:csdn:article:by:2699
$9
readCount
$4
2263
*4
$4
HSET
$25
hash:csdn:article:by:2699
$14
articleContent
$40
csdn/java/1_0_1_5_1504265298.139207.html
*4
$4
HSET
$25
hash:csdn:article:by:2699
$4
date
$16
2014-10-12 16:21
*4
$4
HSET
$25
hash:csdn:article:by:2699
$6
author
$10
JAVE_LOVER
*4
$4
HSET
$25
hash:csdn:article:by:2699
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2699
$9
labelList
$48
java设计模式,uml,架构,设计模式,模式,
*4
$4
HSET
$25
hash:csdn:article:by:2699
$9
likeCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2699
$10
authorLink
$29
http://my.csdn.net/JAVE_LOVER
*4
$4
HSET
$25
hash:csdn:article:by:2699
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2700
$2
id
$4
2700
*4
$4
HSET
$25
hash:csdn:article:by:2700
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2700
$3
url
$57
http://blog.csdn.net/yelangjueqi/article/details/52345790
*4
$4
HSET
$25
hash:csdn:article:by:2700
$5
title
$15
中介者模式
*4
$4
HSET
$25
hash:csdn:article:by:2700
$4
desc
$15
中介者模式
*4
$4
HSET
$25
hash:csdn:article:by:2700
$9
readCount
$3
862
*4
$4
HSET
$25
hash:csdn:article:by:2700
$14
articleContent
$40
csdn/java/1_1_1_0_1504265300.115889.html
*4
$4
HSET
$25
hash:csdn:article:by:2700
$4
date
$16
2016-08-28 15:13
*4
$4
HSET
$25
hash:csdn:article:by:2700
$6
author
$14
dadaxiaoxiaode
*4
$4
HSET
$25
hash:csdn:article:by:2700
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2700
$9
labelList
$62
java,design pattern,设计模式,中介者模式,框架设计,
*4
$4
HSET
$25
hash:csdn:article:by:2700
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2700
$10
authorLink
$33
http://my.csdn.net/dadaxiaoxiaode
*4
$4
HSET
$25
hash:csdn:article:by:2700
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2701
$2
id
$4
2701
*4
$4
HSET
$25
hash:csdn:article:by:2701
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2701
$3
url
$57
http://blog.csdn.net/yelangjueqi/article/details/52336510
*4
$4
HSET
$25
hash:csdn:article:by:2701
$5
title
$12
状态模式
*4
$4
HSET
$25
hash:csdn:article:by:2701
$4
desc
$12
状态模式
*4
$4
HSET
$25
hash:csdn:article:by:2701
$9
readCount
$3
681
*4
$4
HSET
$25
hash:csdn:article:by:2701
$14
articleContent
$40
csdn/java/1_1_1_1_1504265301.078278.html
*4
$4
HSET
$25
hash:csdn:article:by:2701
$4
date
$16
2016-08-27 19:06
*4
$4
HSET
$25
hash:csdn:article:by:2701
$6
author
$14
dadaxiaoxiaode
*4
$4
HSET
$25
hash:csdn:article:by:2701
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2701
$9
labelList
$46
java,design pattern,设计模式,状态模式,
*4
$4
HSET
$25
hash:csdn:article:by:2701
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2701
$10
authorLink
$33
http://my.csdn.net/dadaxiaoxiaode
*4
$4
HSET
$25
hash:csdn:article:by:2701
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2702
$2
id
$4
2702
*4
$4
HSET
$25
hash:csdn:article:by:2702
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2702
$3
url
$57
http://blog.csdn.net/yelangjueqi/article/details/52297065
*4
$4
HSET
$25
hash:csdn:article:by:2702
$5
title
$12
外观模式
*4
$4
HSET
$25
hash:csdn:article:by:2702
$4
desc
$12
外观模式
*4
$4
HSET
$25
hash:csdn:article:by:2702
$9
readCount
$3
343
*4
$4
HSET
$25
hash:csdn:article:by:2702
$14
articleContent
$40
csdn/java/1_1_1_5_1504265302.101505.html
*4
$4
HSET
$25
hash:csdn:article:by:2702
$4
date
$16
2016-08-24 09:58
*4
$4
HSET
$25
hash:csdn:article:by:2702
$6
author
$14
dadaxiaoxiaode
*4
$4
HSET
$25
hash:csdn:article:by:2702
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2702
$9
labelList
$40
java,pattern,设计模式,对象,结构,
*4
$4
HSET
$25
hash:csdn:article:by:2702
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2702
$10
authorLink
$33
http://my.csdn.net/dadaxiaoxiaode
*4
$4
HSET
$25
hash:csdn:article:by:2702
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2703
$2
id
$4
2703
*4
$4
HSET
$25
hash:csdn:article:by:2703
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2703
$3
url
$57
http://blog.csdn.net/yelangjueqi/article/details/52219931
*4
$4
HSET
$25
hash:csdn:article:by:2703
$5
title
$27
如何学好设计模式？
*4
$4
HSET
$25
hash:csdn:article:by:2703
$4
desc
$27
如何学好设计模式？
*4
$4
HSET
$25
hash:csdn:article:by:2703
$9
readCount
$3
410
*4
$4
HSET
$25
hash:csdn:article:by:2703
$14
articleContent
$41
csdn/java/1_1_1_10_1504265303.915875.html
*4
$4
HSET
$25
hash:csdn:article:by:2703
$4
date
$16
2016-08-16 13:32
*4
$4
HSET
$25
hash:csdn:article:by:2703
$6
author
$14
dadaxiaoxiaode
*4
$4
HSET
$25
hash:csdn:article:by:2703
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2703
$9
labelList
$33
java,pattern,设计模式,思路,
*4
$4
HSET
$25
hash:csdn:article:by:2703
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2703
$10
authorLink
$33
http://my.csdn.net/dadaxiaoxiaode
*4
$4
HSET
$25
hash:csdn:article:by:2703
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2704
$2
id
$4
2704
*4
$4
HSET
$25
hash:csdn:article:by:2704
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2704
$3
url
$57
http://blog.csdn.net/yelangjueqi/article/details/52220042
*4
$4
HSET
$25
hash:csdn:article:by:2704
$5
title
$18
简单工厂模式
*4
$4
HSET
$25
hash:csdn:article:by:2704
$4
desc
$18
简单工厂模式
*4
$4
HSET
$25
hash:csdn:article:by:2704
$9
readCount
$3
345
*4
$4
HSET
$25
hash:csdn:article:by:2704
$14
articleContent
$40
csdn/java/1_1_1_9_1504265304.142167.html
*4
$4
HSET
$25
hash:csdn:article:by:2704
$4
date
$16
2016-08-16 13:49
*4
$4
HSET
$25
hash:csdn:article:by:2704
$6
author
$14
dadaxiaoxiaode
*4
$4
HSET
$25
hash:csdn:article:by:2704
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2704
$9
labelList
$45
java,pattern,简单工厂模式,设计模式,
*4
$4
HSET
$25
hash:csdn:article:by:2704
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2704
$10
authorLink
$33
http://my.csdn.net/dadaxiaoxiaode
*4
$4
HSET
$25
hash:csdn:article:by:2704
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2705
$2
id
$4
2705
*4
$4
HSET
$25
hash:csdn:article:by:2705
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2705
$3
url
$57
http://blog.csdn.net/yelangjueqi/article/details/52261001
*4
$4
HSET
$25
hash:csdn:article:by:2705
$5
title
$18
抽象工厂模式
*4
$4
HSET
$25
hash:csdn:article:by:2705
$4
desc
$36
抽象工厂模式根据实例讲述
*4
$4
HSET
$25
hash:csdn:article:by:2705
$9
readCount
$3
273
*4
$4
HSET
$25
hash:csdn:article:by:2705
$14
articleContent
$40
csdn/java/1_1_1_8_1504265305.285235.html
*4
$4
HSET
$25
hash:csdn:article:by:2705
$4
date
$16
2016-08-20 13:27
*4
$4
HSET
$25
hash:csdn:article:by:2705
$6
author
$14
dadaxiaoxiaode
*4
$4
HSET
$25
hash:csdn:article:by:2705
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2705
$9
labelList
$40
java,pattern,设计模式,结构,编程,
*4
$4
HSET
$25
hash:csdn:article:by:2705
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2705
$10
authorLink
$33
http://my.csdn.net/dadaxiaoxiaode
*4
$4
HSET
$25
hash:csdn:article:by:2705
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2706
$2
id
$4
2706
*4
$4
HSET
$25
hash:csdn:article:by:2706
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2706
$3
url
$57
http://blog.csdn.net/yelangjueqi/article/details/52275308
*4
$4
HSET
$25
hash:csdn:article:by:2706
$5
title
$18
工厂方法模式
*4
$4
HSET
$25
hash:csdn:article:by:2706
$4
desc
$18
工厂方法模式
*4
$4
HSET
$25
hash:csdn:article:by:2706
$9
readCount
$3
299
*4
$4
HSET
$25
hash:csdn:article:by:2706
$14
articleContent
$40
csdn/java/1_1_1_7_1504265306.311073.html
*4
$4
HSET
$25
hash:csdn:article:by:2706
$4
date
$16
2016-08-22 11:27
*4
$4
HSET
$25
hash:csdn:article:by:2706
$6
author
$14
dadaxiaoxiaode
*4
$4
HSET
$25
hash:csdn:article:by:2706
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2706
$9
labelList
$40
java,pattern,设计模式,实例,结构,
*4
$4
HSET
$25
hash:csdn:article:by:2706
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2706
$10
authorLink
$33
http://my.csdn.net/dadaxiaoxiaode
*4
$4
HSET
$25
hash:csdn:article:by:2706
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2707
$2
id
$4
2707
*4
$4
HSET
$25
hash:csdn:article:by:2707
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2707
$3
url
$57
http://blog.csdn.net/yelangjueqi/article/details/52312167
*4
$4
HSET
$25
hash:csdn:article:by:2707
$5
title
$15
适配器模式
*4
$4
HSET
$25
hash:csdn:article:by:2707
$4
desc
$15
适配器模式
*4
$4
HSET
$25
hash:csdn:article:by:2707
$9
readCount
$3
983
*4
$4
HSET
$25
hash:csdn:article:by:2707
$14
articleContent
$40
csdn/java/1_1_1_4_1504265307.313251.html
*4
$4
HSET
$25
hash:csdn:article:by:2707
$4
date
$16
2016-08-25 10:35
*4
$4
HSET
$25
hash:csdn:article:by:2707
$6
author
$14
dadaxiaoxiaode
*4
$4
HSET
$25
hash:csdn:article:by:2707
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2707
$9
labelList
$49
java,pattern,设计模式,结构,适配器模式,
*4
$4
HSET
$25
hash:csdn:article:by:2707
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2707
$10
authorLink
$33
http://my.csdn.net/dadaxiaoxiaode
*4
$4
HSET
$25
hash:csdn:article:by:2707
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2708
$2
id
$4
2708
*4
$4
HSET
$25
hash:csdn:article:by:2708
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2708
$3
url
$57
http://blog.csdn.net/yelangjueqi/article/details/52327432
*4
$4
HSET
$25
hash:csdn:article:by:2708
$5
title
$12
策略模式
*4
$4
HSET
$25
hash:csdn:article:by:2708
$4
desc
$12
策略模式
*4
$4
HSET
$25
hash:csdn:article:by:2708
$9
readCount
$4
1003
*4
$4
HSET
$25
hash:csdn:article:by:2708
$14
articleContent
$40
csdn/java/1_1_1_2_1504265308.254673.html
*4
$4
HSET
$25
hash:csdn:article:by:2708
$4
date
$16
2016-08-26 13:20
*4
$4
HSET
$25
hash:csdn:article:by:2708
$6
author
$14
dadaxiaoxiaode
*4
$4
HSET
$25
hash:csdn:article:by:2708
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2708
$9
labelList
$46
java,pattern,设计模式,策略模式,算法,
*4
$4
HSET
$25
hash:csdn:article:by:2708
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2708
$10
authorLink
$33
http://my.csdn.net/dadaxiaoxiaode
*4
$4
HSET
$25
hash:csdn:article:by:2708
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2709
$2
id
$4
2709
*4
$4
HSET
$25
hash:csdn:article:by:2709
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2709
$3
url
$57
http://blog.csdn.net/yelangjueqi/article/details/52275965
*4
$4
HSET
$25
hash:csdn:article:by:2709
$5
title
$12
单例模式
*4
$4
HSET
$25
hash:csdn:article:by:2709
$4
desc
$12
单例模式
*4
$4
HSET
$25
hash:csdn:article:by:2709
$9
readCount
$3
308
*4
$4
HSET
$25
hash:csdn:article:by:2709
$14
articleContent
$40
csdn/java/1_1_1_6_1504265309.220137.html
*4
$4
HSET
$25
hash:csdn:article:by:2709
$4
date
$16
2016-08-22 13:21
*4
$4
HSET
$25
hash:csdn:article:by:2709
$6
author
$14
dadaxiaoxiaode
*4
$4
HSET
$25
hash:csdn:article:by:2709
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2709
$9
labelList
$43
java,pattern,设计模式,singleton,安全,
*4
$4
HSET
$25
hash:csdn:article:by:2709
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2709
$10
authorLink
$33
http://my.csdn.net/dadaxiaoxiaode
*4
$4
HSET
$25
hash:csdn:article:by:2709
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2710
$2
id
$4
2710
*4
$4
HSET
$25
hash:csdn:article:by:2710
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2710
$3
url
$57
http://blog.csdn.net/yelangjueqi/article/details/52315250
*4
$4
HSET
$25
hash:csdn:article:by:2710
$5
title
$18
模板方法模式
*4
$4
HSET
$25
hash:csdn:article:by:2710
$4
desc
$18
模板方法模式
*4
$4
HSET
$25
hash:csdn:article:by:2710
$9
readCount
$3
543
*4
$4
HSET
$25
hash:csdn:article:by:2710
$14
articleContent
$40
csdn/java/1_1_1_3_1504265310.346879.html
*4
$4
HSET
$25
hash:csdn:article:by:2710
$4
date
$16
2016-08-25 15:49
*4
$4
HSET
$25
hash:csdn:article:by:2710
$6
author
$14
dadaxiaoxiaode
*4
$4
HSET
$25
hash:csdn:article:by:2710
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2710
$9
labelList
$52
java,pattern,设计模式,模板方法模式,结构,
*4
$4
HSET
$25
hash:csdn:article:by:2710
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2710
$10
authorLink
$33
http://my.csdn.net/dadaxiaoxiaode
*4
$4
HSET
$25
hash:csdn:article:by:2710
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2711
$2
id
$4
2711
*4
$4
HSET
$25
hash:csdn:article:by:2711
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2711
$3
url
$56
http://blog.csdn.net/u012706811/article/details/77096257
*4
$4
HSET
$25
hash:csdn:article:by:2711
$5
title
$38
Java8学习记录(一)-函数式接口
*4
$4
HSET
$25
hash:csdn:article:by:2711
$4
desc
$259
实习前只是粗略的看了下Java8的一些基本语法,但是没有系统的学习过.在使用一段时间后决定系统的对其进行一次分析,加深对Java8函数式编程的理解,提高自己的编码技巧.另外kotlin崛起,感兴趣的朋...
*4
$4
HSET
$25
hash:csdn:article:by:2711
$9
readCount
$3
205
*4
$4
HSET
$25
hash:csdn:article:by:2711
$14
articleContent
$40
csdn/java/1_0_1_0_1504265315.624839.html
*4
$4
HSET
$25
hash:csdn:article:by:2711
$4
date
$16
2017-08-11 13:06
*4
$4
HSET
$25
hash:csdn:article:by:2711
$6
author
$10
u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2711
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2711
$9
labelList
$31
函数式,函数式编程,java,
*4
$4
HSET
$25
hash:csdn:article:by:2711
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2711
$10
authorLink
$29
http://my.csdn.net/u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2711
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2712
$2
id
$4
2712
*4
$4
HSET
$25
hash:csdn:article:by:2712
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2712
$3
url
$56
http://blog.csdn.net/u012706811/article/details/77096261
*4
$4
HSET
$25
hash:csdn:article:by:2712
$5
title
$35
Java8学习记录(二)-Stream原理
*4
$4
HSET
$25
hash:csdn:article:by:2712
$4
desc
$179
推荐一篇博文,很好的介绍了Stream的原理.本文对其进行一些补充更加详细的讲解.
  作者: 李豪 
  地址: https://github.com/CarpenterLee/JavaLambda...
*4
$4
HSET
$25
hash:csdn:article:by:2712
$9
readCount
$3
240
*4
$4
HSET
$25
hash:csdn:article:by:2712
$14
articleContent
$40
csdn/java/1_0_1_1_1504265316.419101.html
*4
$4
HSET
$25
hash:csdn:article:by:2712
$4
date
$16
2017-08-11 13:06
*4
$4
HSET
$25
hash:csdn:article:by:2712
$6
author
$10
u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2712
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2712
$9
labelList
$21
java,函数式编程,
*4
$4
HSET
$25
hash:csdn:article:by:2712
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2712
$10
authorLink
$29
http://my.csdn.net/u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2712
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2713
$2
id
$4
2713
*4
$4
HSET
$25
hash:csdn:article:by:2713
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2713
$3
url
$56
http://blog.csdn.net/u012706811/article/details/68950852
*4
$4
HSET
$25
hash:csdn:article:by:2713
$5
title
$36
Docker学习记录(一)-基本概念
*4
$4
HSET
$25
hash:csdn:article:by:2713
$4
desc
$211
Docker学习记录(一)-基本概念标签（空格分隔）： docker因为做的项目用到了docker,所以开始学习下这方面的知识.1.基本概念docker虚拟机:docker环境,docker的操作都要...
*4
$4
HSET
$25
hash:csdn:article:by:2713
$9
readCount
$3
465
*4
$4
HSET
$25
hash:csdn:article:by:2713
$14
articleContent
$40
csdn/java/1_0_1_8_1504265317.234873.html
*4
$4
HSET
$25
hash:csdn:article:by:2713
$4
date
$16
2017-04-02 09:55
*4
$4
HSET
$25
hash:csdn:article:by:2713
$6
author
$10
u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2713
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2713
$9
labelList
$17
虚拟机,docker,
*4
$4
HSET
$25
hash:csdn:article:by:2713
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2713
$10
authorLink
$29
http://my.csdn.net/u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2713
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2714
$2
id
$4
2714
*4
$4
HSET
$25
hash:csdn:article:by:2714
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2714
$3
url
$56
http://blog.csdn.net/u012706811/article/details/68950903
*4
$4
HSET
$25
hash:csdn:article:by:2714
$5
title
$46
Docker学习记录(二)-Dockerfile创建镜像
*4
$4
HSET
$25
hash:csdn:article:by:2714
$4
desc
$185
Docker学习记录(二)-Dockerfile创建镜像标签（空格分隔）： docker
  个人独立博客: http://mrdear.cn
本文学习Dcokerfile的基本命令,并且创建一个支持...
*4
$4
HSET
$25
hash:csdn:article:by:2714
$9
readCount
$3
604
*4
$4
HSET
$25
hash:csdn:article:by:2714
$14
articleContent
$40
csdn/java/1_0_1_9_1504265318.328153.html
*4
$4
HSET
$25
hash:csdn:article:by:2714
$4
date
$16
2017-04-02 10:11
*4
$4
HSET
$25
hash:csdn:article:by:2714
$6
author
$10
u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2714
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2714
$9
labelList
$7
docker,
*4
$4
HSET
$25
hash:csdn:article:by:2714
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2714
$10
authorLink
$29
http://my.csdn.net/u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2714
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2715
$2
id
$4
2715
*4
$4
HSET
$25
hash:csdn:article:by:2715
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2715
$3
url
$56
http://blog.csdn.net/u012706811/article/details/52833682
*4
$4
HSET
$25
hash:csdn:article:by:2715
$5
title
$42
Spring Boot学习记录(四)--问题记录
*4
$4
HSET
$25
hash:csdn:article:by:2715
$4
desc
$173
记录spring boot出现的一些奇奇怪怪的问题解决方案.1.文件上传,临时文件夹无效问题异常信息:Caused by: java.io.IOException: The temporary upl...
*4
$4
HSET
$25
hash:csdn:article:by:2715
$9
readCount
$4
3025
*4
$4
HSET
$25
hash:csdn:article:by:2715
$14
articleContent
$41
csdn/java/1_0_1_19_1504265319.165465.html
*4
$4
HSET
$25
hash:csdn:article:by:2715
$4
date
$16
2016-10-16 22:32
*4
$4
HSET
$25
hash:csdn:article:by:2715
$6
author
$10
u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2715
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2715
$9
labelList
$7
spring,
*4
$4
HSET
$25
hash:csdn:article:by:2715
$9
likeCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2715
$10
authorLink
$29
http://my.csdn.net/u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2715
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2716
$2
id
$4
2716
*4
$4
HSET
$25
hash:csdn:article:by:2716
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2716
$3
url
$56
http://blog.csdn.net/u012706811/article/details/52988782
*4
$4
HSET
$25
hash:csdn:article:by:2716
$5
title
$48
JavaWEB后端支付银联,支付宝,微信对接
*4
$4
HSET
$25
hash:csdn:article:by:2716
$4
desc
$249
JavaWEB后端支付银联,支付宝,微信对接标签（空格分隔）： java项目概述最近项目需要后端打通支付,所以对接部分做成了一个小模块. 
先说下项目要求: 
后端要对接银联无跳转Token支付,支付...
*4
$4
HSET
$25
hash:csdn:article:by:2716
$9
readCount
$4
6727
*4
$4
HSET
$25
hash:csdn:article:by:2716
$14
articleContent
$41
csdn/java/1_0_1_17_1504265320.234071.html
*4
$4
HSET
$25
hash:csdn:article:by:2716
$4
date
$16
2016-10-31 23:32
*4
$4
HSET
$25
hash:csdn:article:by:2716
$6
author
$10
u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2716
$12
commentCount
$1
5
*4
$4
HSET
$25
hash:csdn:article:by:2716
$9
labelList
$12
java,支付,
*4
$4
HSET
$25
hash:csdn:article:by:2716
$9
likeCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2716
$10
authorLink
$29
http://my.csdn.net/u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2716
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2717
$2
id
$4
2717
*4
$4
HSET
$25
hash:csdn:article:by:2717
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2717
$3
url
$56
http://blog.csdn.net/u012706811/article/details/53218102
*4
$4
HSET
$25
hash:csdn:article:by:2717
$5
title
$53
SpringDataJPA学习记录(三)--复杂查询的封装
*4
$4
HSET
$25
hash:csdn:article:by:2717
$4
desc
$163
SpringDataJPA学习记录(三)–复杂查询的封装标签（空格分隔）： springJPA1.使用CriteriaBuilder构建JPQL在UserRepositoryImpl中使用Criter...
*4
$4
HSET
$25
hash:csdn:article:by:2717
$9
readCount
$4
5428
*4
$4
HSET
$25
hash:csdn:article:by:2717
$14
articleContent
$41
csdn/java/1_0_1_16_1504265321.541024.html
*4
$4
HSET
$25
hash:csdn:article:by:2717
$4
date
$16
2016-11-18 16:13
*4
$4
HSET
$25
hash:csdn:article:by:2717
$6
author
$10
u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2717
$12
commentCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2717
$9
labelList
$11
spring,jpa,
*4
$4
HSET
$25
hash:csdn:article:by:2717
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2717
$10
authorLink
$29
http://my.csdn.net/u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2717
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2718
$2
id
$4
2718
*4
$4
HSET
$25
hash:csdn:article:by:2718
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2718
$3
url
$56
http://blog.csdn.net/u012706811/article/details/53218083
*4
$4
HSET
$25
hash:csdn:article:by:2718
$5
title
$44
SpringDataJPA学习记录(二)--增删改查
*4
$4
HSET
$25
hash:csdn:article:by:2718
$4
desc
$211
SpringDataJPA学习记录(二)–增删改查标签（空格分隔）： springJPA环境配置后,开始增删改查,查是用的最多的,放在最后.1.增加增加可以使用JpaRepository接口里面的sa...
*4
$4
HSET
$25
hash:csdn:article:by:2718
$9
readCount
$4
5651
*4
$4
HSET
$25
hash:csdn:article:by:2718
$14
articleContent
$41
csdn/java/1_0_1_15_1504265322.639915.html
*4
$4
HSET
$25
hash:csdn:article:by:2718
$4
date
$16
2016-11-18 16:11
*4
$4
HSET
$25
hash:csdn:article:by:2718
$6
author
$10
u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2718
$12
commentCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2718
$9
labelList
$11
spring,jpa,
*4
$4
HSET
$25
hash:csdn:article:by:2718
$9
likeCount
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2718
$10
authorLink
$29
http://my.csdn.net/u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2718
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2719
$2
id
$4
2719
*4
$4
HSET
$25
hash:csdn:article:by:2719
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2719
$3
url
$56
http://blog.csdn.net/u012706811/article/details/68950926
*4
$4
HSET
$25
hash:csdn:article:by:2719
$5
title
$46
redis学习记录(三)-redis中的数据结构
*4
$4
HSET
$25
hash:csdn:article:by:2719
$4
desc
$191
redis学习记录(三)-redis中的数据结构标签（空格分隔）： redis
  个人独立博客:http://mrdear.cn
Redis学习记录(一)–入门知识 
Redis学习记录(二)–使用...
*4
$4
HSET
$25
hash:csdn:article:by:2719
$9
readCount
$3
503
*4
$4
HSET
$25
hash:csdn:article:by:2719
$14
articleContent
$40
csdn/java/1_0_1_6_1504265323.288971.html
*4
$4
HSET
$25
hash:csdn:article:by:2719
$4
date
$16
2017-04-02 10:18
*4
$4
HSET
$25
hash:csdn:article:by:2719
$6
author
$10
u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2719
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2719
$9
labelList
$6
redis,
*4
$4
HSET
$25
hash:csdn:article:by:2719
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2719
$10
authorLink
$29
http://my.csdn.net/u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2719
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2720
$2
id
$4
2720
*4
$4
HSET
$25
hash:csdn:article:by:2720
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2720
$3
url
$56
http://blog.csdn.net/u012706811/article/details/68950937
*4
$4
HSET
$25
hash:csdn:article:by:2720
$5
title
$44
redis学习记录(四)-SpringDataRedis分析
*4
$4
HSET
$25
hash:csdn:article:by:2720
$4
desc
$173
redis学习记录(四)-SpringDataRedis分析标签（空格分隔）： redis
  个人独立博客: http://mrdear.cn
Redis学习记录(一)–入门知识 
Redis学习记...
*4
$4
HSET
$25
hash:csdn:article:by:2720
$9
readCount
$4
1318
*4
$4
HSET
$25
hash:csdn:article:by:2720
$14
articleContent
$40
csdn/java/1_0_1_7_1504265324.427872.html
*4
$4
HSET
$25
hash:csdn:article:by:2720
$4
date
$16
2017-04-02 10:19
*4
$4
HSET
$25
hash:csdn:article:by:2720
$6
author
$10
u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2720
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2720
$9
labelList
$6
redis,
*4
$4
HSET
$25
hash:csdn:article:by:2720
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2720
$10
authorLink
$29
http://my.csdn.net/u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2720
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2721
$2
id
$4
2721
*4
$4
HSET
$25
hash:csdn:article:by:2721
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2721
$3
url
$56
http://blog.csdn.net/u012706811/article/details/53231598
*4
$4
HSET
$25
hash:csdn:article:by:2721
$5
title
$41
Java学习记录--ThreadLocal使用案例
*4
$4
HSET
$25
hash:csdn:article:by:2721
$4
desc
$193
java学习记录–ThreadLocal使用案例标签（空格分隔）： java最近整理公司项目,发现不少写的比较糟糕的地方,比如下面这个:public class DateUtil {    priva...
*4
$4
HSET
$25
hash:csdn:article:by:2721
$9
readCount
$4
1061
*4
$4
HSET
$25
hash:csdn:article:by:2721
$14
articleContent
$41
csdn/java/1_0_1_13_1504265325.577254.html
*4
$4
HSET
$25
hash:csdn:article:by:2721
$4
date
$16
2016-11-19 16:26
*4
$4
HSET
$25
hash:csdn:article:by:2721
$6
author
$10
u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2721
$12
commentCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2721
$9
labelList
$5
java,
*4
$4
HSET
$25
hash:csdn:article:by:2721
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2721
$10
authorLink
$29
http://my.csdn.net/u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2721
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2722
$2
id
$4
2722
*4
$4
HSET
$25
hash:csdn:article:by:2722
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2722
$3
url
$56
http://blog.csdn.net/u012706811/article/details/52868556
*4
$4
HSET
$25
hash:csdn:article:by:2722
$5
title
$27
Linux下搭建JavaWEB环境
*4
$4
HSET
$25
hash:csdn:article:by:2722
$4
desc
$169
Linux下搭建JavaWEB环境标签（空格分隔）： web1.安装JDK8首先使用wget下载jdk的安装包.这里下载tar.gz格式的.wget http://download.oracle.co...
*4
$4
HSET
$25
hash:csdn:article:by:2722
$9
readCount
$3
929
*4
$4
HSET
$25
hash:csdn:article:by:2722
$14
articleContent
$41
csdn/java/1_0_1_18_1504265326.645923.html
*4
$4
HSET
$25
hash:csdn:article:by:2722
$4
date
$16
2016-10-20 08:23
*4
$4
HSET
$25
hash:csdn:article:by:2722
$6
author
$10
u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2722
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2722
$9
labelList
$15
java web,linux,
*4
$4
HSET
$25
hash:csdn:article:by:2722
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2722
$10
authorLink
$29
http://my.csdn.net/u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2722
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2723
$2
id
$4
2723
*4
$4
HSET
$25
hash:csdn:article:by:2723
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2723
$3
url
$56
http://blog.csdn.net/u012706811/article/details/53432032
*4
$4
HSET
$25
hash:csdn:article:by:2723
$5
title
$54
SpringMVC学习记录(九)--RequestContextHolder分析
*4
$4
HSET
$25
hash:csdn:article:by:2723
$4
desc
$171
SpringMVC学习记录(九)–RequestContextHolder分析标签（空格分隔）： javaWEB最近遇到的问题是在service获取request和response,正常来说在serv...
*4
$4
HSET
$25
hash:csdn:article:by:2723
$9
readCount
$4
1593
*4
$4
HSET
$25
hash:csdn:article:by:2723
$14
articleContent
$41
csdn/java/1_0_1_11_1504265327.428434.html
*4
$4
HSET
$25
hash:csdn:article:by:2723
$4
date
$16
2016-12-02 10:18
*4
$4
HSET
$25
hash:csdn:article:by:2723
$6
author
$10
u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2723
$12
commentCount
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2723
$9
labelList
$11
spring mvc,
*4
$4
HSET
$25
hash:csdn:article:by:2723
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2723
$10
authorLink
$29
http://my.csdn.net/u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2723
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2724
$2
id
$4
2724
*4
$4
HSET
$25
hash:csdn:article:by:2724
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2724
$3
url
$56
http://blog.csdn.net/u012706811/article/details/76945038
*4
$4
HSET
$25
hash:csdn:article:by:2724
$5
title
$57
Spring Security学习记录(一) -- 初识Spring Security
*4
$4
HSET
$25
hash:csdn:article:by:2724
$4
desc
$155
Spring Security是什么?Spring Security是一套认证授权框架,支持认证模式如HTTP BASIC 认证头 (基于 IETF RFC-based 标准),HTTP Digest...
*4
$4
HSET
$25
hash:csdn:article:by:2724
$9
readCount
$3
293
*4
$4
HSET
$25
hash:csdn:article:by:2724
$14
articleContent
$40
csdn/java/1_0_1_2_1504265328.541416.html
*4
$4
HSET
$25
hash:csdn:article:by:2724
$4
date
$16
2017-08-08 22:56
*4
$4
HSET
$25
hash:csdn:article:by:2724
$6
author
$10
u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2724
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2724
$9
labelList
$23
spring,spring security,
*4
$4
HSET
$25
hash:csdn:article:by:2724
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2724
$10
authorLink
$29
http://my.csdn.net/u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2724
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2725
$2
id
$4
2725
*4
$4
HSET
$25
hash:csdn:article:by:2725
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2725
$3
url
$56
http://blog.csdn.net/u012706811/article/details/76945046
*4
$4
HSET
$25
hash:csdn:article:by:2725
$5
title
$61
Spring Security学习记录(三) -- JSON Web Token实践(上)
*4
$4
HSET
$25
hash:csdn:article:by:2725
$4
desc
$187
JWT实际上与Spring Security没多大关系,本文打算使用Spring Security配合JWT这种方式完成用户的认证和授权.JSON Web Token(JWT),是一个开放安全的行业标...
*4
$4
HSET
$25
hash:csdn:article:by:2725
$9
readCount
$3
291
*4
$4
HSET
$25
hash:csdn:article:by:2725
$14
articleContent
$40
csdn/java/1_0_1_4_1504265329.528519.html
*4
$4
HSET
$25
hash:csdn:article:by:2725
$4
date
$16
2017-08-08 22:57
*4
$4
HSET
$25
hash:csdn:article:by:2725
$6
author
$10
u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2725
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2725
$9
labelList
$23
spring security,spring,
*4
$4
HSET
$25
hash:csdn:article:by:2725
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2725
$10
authorLink
$29
http://my.csdn.net/u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2725
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2726
$2
id
$4
2726
*4
$4
HSET
$25
hash:csdn:article:by:2726
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2726
$3
url
$56
http://blog.csdn.net/u012706811/article/details/76945049
*4
$4
HSET
$25
hash:csdn:article:by:2726
$5
title
$61
Spring Security学习记录(四) -- JSON Web Token实践(下)
*4
$4
HSET
$25
hash:csdn:article:by:2726
$4
desc
$271
前提接着上篇的内容,了解了JWT Token后,发现这东西就是一个可信的用户信息存储方式,那么可信的话就可以省去验证这个步骤,只有当需要用户的详细信息时候才会去DB中查询用户的详细信息.那么现在的流程...
*4
$4
HSET
$25
hash:csdn:article:by:2726
$9
readCount
$3
332
*4
$4
HSET
$25
hash:csdn:article:by:2726
$14
articleContent
$40
csdn/java/1_0_1_5_1504265330.542141.html
*4
$4
HSET
$25
hash:csdn:article:by:2726
$4
date
$16
2017-08-08 22:58
*4
$4
HSET
$25
hash:csdn:article:by:2726
$6
author
$10
u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2726
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2726
$9
labelList
$23
spring security,spring,
*4
$4
HSET
$25
hash:csdn:article:by:2726
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2726
$10
authorLink
$29
http://my.csdn.net/u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2726
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2727
$2
id
$4
2727
*4
$4
HSET
$25
hash:csdn:article:by:2727
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2727
$3
url
$56
http://blog.csdn.net/u012706811/article/details/53218045
*4
$4
HSET
$25
hash:csdn:article:by:2727
$5
title
$44
SpringDataJPA学习记录(一)--环境配置
*4
$4
HSET
$25
hash:csdn:article:by:2727
$4
desc
$193
SpringDataJPA学习记录(一)–环境配置标签（空格分隔）： springJPA1.maven配置首先需要spring相关架包,其实spring-data-jpa里面已经依赖了,如果你想用自己...
*4
$4
HSET
$25
hash:csdn:article:by:2727
$9
readCount
$4
1170
*4
$4
HSET
$25
hash:csdn:article:by:2727
$14
articleContent
$41
csdn/java/1_0_1_14_1504265331.497898.html
*4
$4
HSET
$25
hash:csdn:article:by:2727
$4
date
$16
2016-11-18 16:09
*4
$4
HSET
$25
hash:csdn:article:by:2727
$6
author
$10
u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2727
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2727
$9
labelList
$11
jpa,spring,
*4
$4
HSET
$25
hash:csdn:article:by:2727
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2727
$10
authorLink
$29
http://my.csdn.net/u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2727
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2728
$2
id
$4
2728
*4
$4
HSET
$25
hash:csdn:article:by:2728
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2728
$3
url
$56
http://blog.csdn.net/u012706811/article/details/76945041
*4
$4
HSET
$25
hash:csdn:article:by:2728
$5
title
$60
Spring Security学习记录(二) -- Spring Security的Filter
*4
$4
HSET
$25
hash:csdn:article:by:2728
$4
desc
$229
上一篇学习了Spring Security是如何拦截请求,并把请求转向到Filter链的,该篇就主要学习下这些Filter链的节点的作用.下面是之前配置的内容,本文也是对这些内容 的执行分析.
   ...
*4
$4
HSET
$25
hash:csdn:article:by:2728
$9
readCount
$3
270
*4
$4
HSET
$25
hash:csdn:article:by:2728
$14
articleContent
$39
csdn/java/1_0_1_3_1504265332.68888.html
*4
$4
HSET
$25
hash:csdn:article:by:2728
$4
date
$16
2017-08-08 22:57
*4
$4
HSET
$25
hash:csdn:article:by:2728
$6
author
$10
u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2728
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2728
$9
labelList
$23
spring security,spring,
*4
$4
HSET
$25
hash:csdn:article:by:2728
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2728
$10
authorLink
$29
http://my.csdn.net/u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2728
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2729
$2
id
$4
2729
*4
$4
HSET
$25
hash:csdn:article:by:2729
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2729
$3
url
$56
http://blog.csdn.net/u012706811/article/details/53420757
*4
$4
HSET
$25
hash:csdn:article:by:2729
$5
title
$51
JavaWEB学习记录--Jenkins自动部署Maven项目
*4
$4
HSET
$25
hash:csdn:article:by:2729
$4
desc
$223
JavaWEB学习记录–Jenkins自动部署Maven项目标签（空格分隔）： javaWEB最近在研究jenkins的自动部署方案,有一些心得,记录下来以帮助其他人.如果对你有帮助记得点下赞哈.1....
*4
$4
HSET
$25
hash:csdn:article:by:2729
$9
readCount
$3
835
*4
$4
HSET
$25
hash:csdn:article:by:2729
$14
articleContent
$41
csdn/java/1_0_1_12_1504265333.401332.html
*4
$4
HSET
$25
hash:csdn:article:by:2729
$4
date
$16
2016-12-01 14:04
*4
$4
HSET
$25
hash:csdn:article:by:2729
$6
author
$10
u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2729
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2729
$9
labelList
$8
jenkins,
*4
$4
HSET
$25
hash:csdn:article:by:2729
$9
likeCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2729
$10
authorLink
$29
http://my.csdn.net/u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2729
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2730
$2
id
$4
2730
*4
$4
HSET
$25
hash:csdn:article:by:2730
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2730
$3
url
$56
http://blog.csdn.net/u012706811/article/details/68950913
*4
$4
HSET
$25
hash:csdn:article:by:2730
$5
title
$60
Docker学习记录(三)-构建非跨平台项目编译环境
*4
$4
HSET
$25
hash:csdn:article:by:2730
$4
desc
$213
Docker学习记录(三)-构建非跨平台项目编译环境标签（空格分隔）： docker
  个人独立博客: http://mrdear.cn
因为毕业设计的问题所以去学了docker,本文描述这个问题解...
*4
$4
HSET
$25
hash:csdn:article:by:2730
$9
readCount
$3
488
*4
$4
HSET
$25
hash:csdn:article:by:2730
$14
articleContent
$41
csdn/java/1_0_1_10_1504265334.472737.html
*4
$4
HSET
$25
hash:csdn:article:by:2730
$4
date
$16
2017-04-02 10:14
*4
$4
HSET
$25
hash:csdn:article:by:2730
$6
author
$10
u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2730
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2730
$9
labelList
$7
docker,
*4
$4
HSET
$25
hash:csdn:article:by:2730
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2730
$10
authorLink
$29
http://my.csdn.net/u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2730
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2731
$2
id
$4
2731
*4
$4
HSET
$25
hash:csdn:article:by:2731
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2731
$3
url
$56
http://blog.csdn.net/u012706811/article/details/51223026
*4
$4
HSET
$25
hash:csdn:article:by:2731
$5
title
$49
SpringMVC学习记录(八)--开发中的小问题
*4
$4
HSET
$25
hash:csdn:article:by:2731
$4
desc
$259
最近在做项目,用此贴记录遇到的一些小问题1.关于json首先需要引入3个包,我看网上有人说只需要两个,但是我没成功,引入3个之后才没问题的 
关于json的返回格式,如果想增加内容的话最好用一个map...
*4
$4
HSET
$25
hash:csdn:article:by:2731
$9
readCount
$4
2606
*4
$4
HSET
$25
hash:csdn:article:by:2731
$14
articleContent
$40
csdn/java/1_0_3_0_1504265341.453147.html
*4
$4
HSET
$25
hash:csdn:article:by:2731
$4
date
$16
2016-04-22 20:38
*4
$4
HSET
$25
hash:csdn:article:by:2731
$6
author
$10
u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2731
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2731
$9
labelList
$11
spring mvc,
*4
$4
HSET
$25
hash:csdn:article:by:2731
$9
likeCount
$1
3
*4
$4
HSET
$25
hash:csdn:article:by:2731
$10
authorLink
$29
http://my.csdn.net/u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2731
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2732
$2
id
$4
2732
*4
$4
HSET
$25
hash:csdn:article:by:2732
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2732
$3
url
$56
http://blog.csdn.net/u012706811/article/details/51184409
*4
$4
HSET
$25
hash:csdn:article:by:2732
$5
title
$47
Mybatis学习记录(五)--整合spring开发Dao
*4
$4
HSET
$25
hash:csdn:article:by:2732
$4
desc
$185
mybatis和spring整合,也就是通过spring管理SqlSessionFactory、mapper接口。一.导入架包除了spring的包和mybatis的包,还需要导入两者的整合包,目前这个...
*4
$4
HSET
$25
hash:csdn:article:by:2732
$9
readCount
$4
6028
*4
$4
HSET
$25
hash:csdn:article:by:2732
$14
articleContent
$39
csdn/java/1_0_3_2_1504265342.50696.html
*4
$4
HSET
$25
hash:csdn:article:by:2732
$4
date
$16
2016-04-18 22:41
*4
$4
HSET
$25
hash:csdn:article:by:2732
$6
author
$10
u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2732
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2732
$9
labelList
$15
mybatis,spring,
*4
$4
HSET
$25
hash:csdn:article:by:2732
$9
likeCount
$1
3
*4
$4
HSET
$25
hash:csdn:article:by:2732
$10
authorLink
$29
http://my.csdn.net/u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2732
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2733
$2
id
$4
2733
*4
$4
HSET
$25
hash:csdn:article:by:2733
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2733
$3
url
$56
http://blog.csdn.net/u012706811/article/details/51179383
*4
$4
HSET
$25
hash:csdn:article:by:2733
$5
title
$47
Mybatis学习记录(四)--高级查询和缓存
*4
$4
HSET
$25
hash:csdn:article:by:2733
$4
desc
$285
这些都是连贯的学习笔记,所以有的地方因为之前都说过,所以也就没怎么写详细了,看不太明白的可以看看之前的笔记.一.高级查询高级查询主要是一对一查询,一对多查询,多对多查询1.一对一查询有用户和订单两个表...
*4
$4
HSET
$25
hash:csdn:article:by:2733
$9
readCount
$4
8941
*4
$4
HSET
$25
hash:csdn:article:by:2733
$14
articleContent
$40
csdn/java/1_0_3_3_1504265343.018769.html
*4
$4
HSET
$25
hash:csdn:article:by:2733
$4
date
$16
2016-04-18 14:31
*4
$4
HSET
$25
hash:csdn:article:by:2733
$6
author
$10
u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2733
$12
commentCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2733
$9
labelList
$15
mybatis,缓存,
*4
$4
HSET
$25
hash:csdn:article:by:2733
$9
likeCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2733
$10
authorLink
$29
http://my.csdn.net/u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2733
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2734
$2
id
$4
2734
*4
$4
HSET
$25
hash:csdn:article:by:2734
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2734
$3
url
$56
http://blog.csdn.net/u012706811/article/details/51059419
*4
$4
HSET
$25
hash:csdn:article:by:2734
$5
title
$49
SpringMVC学习记录(四)--文件上传与下载
*4
$4
HSET
$25
hash:csdn:article:by:2734
$4
desc
$263
学习一个框架少不了学习文件上传和下载,原理来说上传和下载都是基本二进制流的转换,所以搞清楚了这一点就很容易理解上传和下载了在使用springMVC进行系统实现时，springMVC默认的解析器里面是没...
*4
$4
HSET
$25
hash:csdn:article:by:2734
$9
readCount
$5
12802
*4
$4
HSET
$25
hash:csdn:article:by:2734
$14
articleContent
$41
csdn/java/1_0_3_11_1504265343.564121.html
*4
$4
HSET
$25
hash:csdn:article:by:2734
$4
date
$16
2016-04-04 23:17
*4
$4
HSET
$25
hash:csdn:article:by:2734
$6
author
$10
u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2734
$12
commentCount
$1
5
*4
$4
HSET
$25
hash:csdn:article:by:2734
$9
labelList
$37
spring mvc,文件上传,文件下载,
*4
$4
HSET
$25
hash:csdn:article:by:2734
$9
likeCount
$2
10
*4
$4
HSET
$25
hash:csdn:article:by:2734
$10
authorLink
$29
http://my.csdn.net/u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2734
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2735
$2
id
$4
2735
*4
$4
HSET
$25
hash:csdn:article:by:2735
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2735
$3
url
$56
http://blog.csdn.net/u012706811/article/details/51056213
*4
$4
HSET
$25
hash:csdn:article:by:2735
$5
title
$40
SpringMVC学习记录(一)--环境配置
*4
$4
HSET
$25
hash:csdn:article:by:2735
$4
desc
$189
在IDEA下配置SpringMVC环境是相当简单的,这里强烈推荐Intellij IDEA开发javaWEB简直完爆eclipse.1.创建项目创建项目很简单,直接选择SpringMVC即可,并且ID...
*4
$4
HSET
$25
hash:csdn:article:by:2735
$9
readCount
$4
1777
*4
$4
HSET
$25
hash:csdn:article:by:2735
$14
articleContent
$41
csdn/java/1_0_3_14_1504265344.553381.html
*4
$4
HSET
$25
hash:csdn:article:by:2735
$4
date
$16
2016-04-04 15:04
*4
$4
HSET
$25
hash:csdn:article:by:2735
$6
author
$10
u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2735
$12
commentCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2735
$9
labelList
$25
spring mvc,intellij idea,
*4
$4
HSET
$25
hash:csdn:article:by:2735
$9
likeCount
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2735
$10
authorLink
$29
http://my.csdn.net/u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2735
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2736
$2
id
$4
2736
*4
$4
HSET
$25
hash:csdn:article:by:2736
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2736
$3
url
$56
http://blog.csdn.net/u012706811/article/details/51056864
*4
$4
HSET
$25
hash:csdn:article:by:2736
$5
title
$54
SpringMVC学习记录(二)--controller和view的联系
*4
$4
HSET
$25
hash:csdn:article:by:2736
$4
desc
$215
对于SpringMVC来说,controller由两个部分构成,分别是分发器和控制器,分发器DispatcherServlet决定着请求使用哪个控制器,并且决定着控制器返回哪个视图,整体结构如下. 
...
*4
$4
HSET
$25
hash:csdn:article:by:2736
$9
readCount
$4
3849
*4
$4
HSET
$25
hash:csdn:article:by:2736
$14
articleContent
$41
csdn/java/1_0_3_13_1504265345.493061.html
*4
$4
HSET
$25
hash:csdn:article:by:2736
$4
date
$16
2016-04-04 16:51
*4
$4
HSET
$25
hash:csdn:article:by:2736
$6
author
$10
u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2736
$12
commentCount
$1
5
*4
$4
HSET
$25
hash:csdn:article:by:2736
$9
labelList
$18
spring mvc,框架,
*4
$4
HSET
$25
hash:csdn:article:by:2736
$9
likeCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2736
$10
authorLink
$29
http://my.csdn.net/u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2736
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2737
$2
id
$4
2737
*4
$4
HSET
$25
hash:csdn:article:by:2737
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2737
$3
url
$56
http://blog.csdn.net/u012706811/article/details/51069537
*4
$4
HSET
$25
hash:csdn:article:by:2737
$5
title
$40
SpringMVC学习记录(五)--表单标签
*4
$4
HSET
$25
hash:csdn:article:by:2737
$4
desc
$235
在使用SpringMVC的时候我们可以使用Spring封装的一系列表单标签，这些标签都可以访问到ModelMap中的内容。下面将对这些标签一一介绍。1.引入标签头文件在正式介绍SpringMVC的表单...
*4
$4
HSET
$25
hash:csdn:article:by:2737
$9
readCount
$4
4329
*4
$4
HSET
$25
hash:csdn:article:by:2737
$14
articleContent
$41
csdn/java/1_0_3_10_1504265346.536141.html
*4
$4
HSET
$25
hash:csdn:article:by:2737
$4
date
$16
2016-04-06 00:32
*4
$4
HSET
$25
hash:csdn:article:by:2737
$6
author
$10
u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2737
$12
commentCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2737
$9
labelList
$18
spring mvc,标签,
*4
$4
HSET
$25
hash:csdn:article:by:2737
$9
likeCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2737
$10
authorLink
$29
http://my.csdn.net/u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2737
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2738
$2
id
$4
2738
*4
$4
HSET
$25
hash:csdn:article:by:2738
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2738
$3
url
$56
http://blog.csdn.net/u012706811/article/details/51100756
*4
$4
HSET
$25
hash:csdn:article:by:2738
$5
title
$46
SpringMVC学习记录(七)--拦截器的使用
*4
$4
HSET
$25
hash:csdn:article:by:2738
$4
desc
$191
SpringMVC的请求如下面这种图所示: 
可以看出所有的请求都要通过Dispatherservlet来接收,然后通过Handlermapping来决定使用哪个控制器,再根据ViewResolver...
*4
$4
HSET
$25
hash:csdn:article:by:2738
$9
readCount
$4
7759
*4
$4
HSET
$25
hash:csdn:article:by:2738
$14
articleContent
$40
csdn/java/1_0_3_8_1504265347.457533.html
*4
$4
HSET
$25
hash:csdn:article:by:2738
$4
date
$16
2016-04-08 23:46
*4
$4
HSET
$25
hash:csdn:article:by:2738
$6
author
$10
u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2738
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2738
$9
labelList
$21
spring mvc,拦截器,
*4
$4
HSET
$25
hash:csdn:article:by:2738
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2738
$10
authorLink
$29
http://my.csdn.net/u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2738
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2739
$2
id
$4
2739
*4
$4
HSET
$25
hash:csdn:article:by:2739
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2739
$3
url
$56
http://blog.csdn.net/u012706811/article/details/51079740
*4
$4
HSET
$25
hash:csdn:article:by:2739
$5
title
$43
SpringMVC学习记录(六)--Validator验证
*4
$4
HSET
$25
hash:csdn:article:by:2739
$4
desc
$211
SpringMVC服务器验证一种是有两种方式,一种是基于Validator接口,一种是使用Annotaion JSR-303标准的验证,下面主要是学习这两种,工作中推荐后者,方便很多一.基于Valid...
*4
$4
HSET
$25
hash:csdn:article:by:2739
$9
readCount
$5
15645
*4
$4
HSET
$25
hash:csdn:article:by:2739
$14
articleContent
$40
csdn/java/1_0_3_9_1504265348.548521.html
*4
$4
HSET
$25
hash:csdn:article:by:2739
$4
date
$16
2016-04-06 23:23
*4
$4
HSET
$25
hash:csdn:article:by:2739
$6
author
$10
u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2739
$12
commentCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2739
$9
labelList
$21
spring mvc,validator,
*4
$4
HSET
$25
hash:csdn:article:by:2739
$9
likeCount
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2739
$10
authorLink
$29
http://my.csdn.net/u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2739
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2740
$2
id
$4
2740
*4
$4
HSET
$25
hash:csdn:article:by:2740
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2740
$3
url
$56
http://blog.csdn.net/u012706811/article/details/51127121
*4
$4
HSET
$25
hash:csdn:article:by:2740
$5
title
$43
Maven学习记录(一)--IDEA下环境配置
*4
$4
HSET
$25
hash:csdn:article:by:2740
$4
desc
$251
一.什么是Maven?Maven 是一个项目管理和整合工具。Maven 为开发者提供了一套完整的构建生命周期框架。开发团队几乎不用花多少时间就能够自动完成工程的基础构建配置，因为 Maven 使用了一...
*4
$4
HSET
$25
hash:csdn:article:by:2740
$9
readCount
$4
7828
*4
$4
HSET
$25
hash:csdn:article:by:2740
$14
articleContent
$40
csdn/java/1_0_3_7_1504265349.480813.html
*4
$4
HSET
$25
hash:csdn:article:by:2740
$4
date
$16
2016-04-11 23:51
*4
$4
HSET
$25
hash:csdn:article:by:2740
$6
author
$10
u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2740
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2740
$9
labelList
$19
maven,项目管理,
*4
$4
HSET
$25
hash:csdn:article:by:2740
$9
likeCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2740
$10
authorLink
$29
http://my.csdn.net/u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2740
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2741
$2
id
$4
2741
*4
$4
HSET
$25
hash:csdn:article:by:2741
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2741
$3
url
$56
http://blog.csdn.net/u012706811/article/details/51222965
*4
$4
HSET
$25
hash:csdn:article:by:2741
$5
title
$47
Mybatis学习记录(六)--开发中的小问题
*4
$4
HSET
$25
hash:csdn:article:by:2741
$4
desc
$223
最近开始做项目,期间遇到一些小问题,开此贴记录一下1.关于order by今天写一个sql查询语句,用了order by但是一直没效果,后来才发现用了#{}取值,mybatis使用这个的话对于Stri...
*4
$4
HSET
$25
hash:csdn:article:by:2741
$9
readCount
$4
3897
*4
$4
HSET
$25
hash:csdn:article:by:2741
$14
articleContent
$40
csdn/java/1_0_3_1_1504265350.723321.html
*4
$4
HSET
$25
hash:csdn:article:by:2741
$4
date
$16
2016-04-22 20:26
*4
$4
HSET
$25
hash:csdn:article:by:2741
$6
author
$10
u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2741
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2741
$9
labelList
$8
mybatis,
*4
$4
HSET
$25
hash:csdn:article:by:2741
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2741
$10
authorLink
$29
http://my.csdn.net/u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2741
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2742
$2
id
$4
2742
*4
$4
HSET
$25
hash:csdn:article:by:2742
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2742
$3
url
$56
http://blog.csdn.net/u012706811/article/details/51147975
*4
$4
HSET
$25
hash:csdn:article:by:2742
$5
title
$39
Mybatis学习记录(一)--Mybatis入门
*4
$4
HSET
$25
hash:csdn:article:by:2742
$4
desc
$233
一.传统数据库解决方案对于数据库的连接,在java中简单的就是直接使用JDBC来控制数据库.传统的jdbc方式按照以下几步来操作数据库.1.加载驱动 2. 创建并获取连接 3. 创建jdbc stat...
*4
$4
HSET
$25
hash:csdn:article:by:2742
$9
readCount
$4
4851
*4
$4
HSET
$25
hash:csdn:article:by:2742
$14
articleContent
$40
csdn/java/1_0_3_6_1504265351.607775.html
*4
$4
HSET
$25
hash:csdn:article:by:2742
$4
date
$16
2016-04-13 23:36
*4
$4
HSET
$25
hash:csdn:article:by:2742
$6
author
$10
u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2742
$12
commentCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2742
$9
labelList
$18
mybatis,数据库,
*4
$4
HSET
$25
hash:csdn:article:by:2742
$9
likeCount
$1
3
*4
$4
HSET
$25
hash:csdn:article:by:2742
$10
authorLink
$29
http://my.csdn.net/u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2742
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2743
$2
id
$4
2743
*4
$4
HSET
$25
hash:csdn:article:by:2743
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2743
$3
url
$56
http://blog.csdn.net/u012706811/article/details/51156153
*4
$4
HSET
$25
hash:csdn:article:by:2743
$5
title
$48
Mybatis学习记录(二)--Mybatis开发DAO方式
*4
$4
HSET
$25
hash:csdn:article:by:2743
$4
desc
$217
mybatis开发dao的方法通常用两种,一种是传统DAO的方法,一种是基于mapper代理的方法,下面学习这两种开发模式.写dao之前应该要对SqlSession有一个更加细致的了解一.mybati...
*4
$4
HSET
$25
hash:csdn:article:by:2743
$9
readCount
$4
6902
*4
$4
HSET
$25
hash:csdn:article:by:2743
$14
articleContent
$40
csdn/java/1_0_3_5_1504265352.617573.html
*4
$4
HSET
$25
hash:csdn:article:by:2743
$4
date
$16
2016-04-14 23:34
*4
$4
HSET
$25
hash:csdn:article:by:2743
$6
author
$10
u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2743
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2743
$9
labelList
$15
mybatis,mapper,
*4
$4
HSET
$25
hash:csdn:article:by:2743
$9
likeCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2743
$10
authorLink
$29
http://my.csdn.net/u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2743
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2744
$2
id
$4
2744
*4
$4
HSET
$25
hash:csdn:article:by:2744
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2744
$3
url
$56
http://blog.csdn.net/u012706811/article/details/51057695
*4
$4
HSET
$25
hash:csdn:article:by:2744
$5
title
$40
SpringMVC学习记录(三)--异常处理
*4
$4
HSET
$25
hash:csdn:article:by:2744
$4
desc
$207
学习springMVC从大牛那借鉴了很多经验,感谢ITEYE的大牛springMVC提供的异常处理主要有两种方式，一种是直接实现自己的HandlerExceptionResolver，当然这也包括使用...
*4
$4
HSET
$25
hash:csdn:article:by:2744
$9
readCount
$4
2446
*4
$4
HSET
$25
hash:csdn:article:by:2744
$14
articleContent
$41
csdn/java/1_0_3_12_1504265353.872469.html
*4
$4
HSET
$25
hash:csdn:article:by:2744
$4
date
$16
2016-04-04 19:31
*4
$4
HSET
$25
hash:csdn:article:by:2744
$6
author
$10
u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2744
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2744
$9
labelList
$24
spring mvc,异常处理,
*4
$4
HSET
$25
hash:csdn:article:by:2744
$9
likeCount
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2744
$10
authorLink
$29
http://my.csdn.net/u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2744
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2745
$2
id
$4
2745
*4
$4
HSET
$25
hash:csdn:article:by:2745
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2745
$3
url
$56
http://blog.csdn.net/u012706811/article/details/51165791
*4
$4
HSET
$25
hash:csdn:article:by:2745
$5
title
$51
Mybatis学习记录(三)--Mybatis配置文件详解
*4
$4
HSET
$25
hash:csdn:article:by:2745
$4
desc
$181
关于mybatis的配置文件,主要有两个,一个是SqlMapperConfig.xml文件一个是mapper.xml文件,分别对这两个进行深入全面学习.一.SqlMapperConfig.xml文件1...
*4
$4
HSET
$25
hash:csdn:article:by:2745
$9
readCount
$4
7198
*4
$4
HSET
$25
hash:csdn:article:by:2745
$14
articleContent
$40
csdn/java/1_0_3_4_1504265354.740856.html
*4
$4
HSET
$25
hash:csdn:article:by:2745
$4
date
$16
2016-04-16 00:27
*4
$4
HSET
$25
hash:csdn:article:by:2745
$6
author
$10
u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2745
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2745
$9
labelList
$15
mybatis,配置,
*4
$4
HSET
$25
hash:csdn:article:by:2745
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2745
$10
authorLink
$29
http://my.csdn.net/u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2745
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2746
$2
id
$4
2746
*4
$4
HSET
$25
hash:csdn:article:by:2746
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2746
$3
url
$56
http://blog.csdn.net/u012706811/article/details/52454907
*4
$4
HSET
$25
hash:csdn:article:by:2746
$5
title
$46
SpringBoot实战记录(一)--MarkdownViewTools
*4
$4
HSET
$25
hash:csdn:article:by:2746
$4
desc
$207
SpringBoot实战记录(一)–MarkdownViewTools标签（空格分隔）： spring-boot在公司开发过程中,后端人员维护接口文档,前端妹子只看文档,两者通过SVN中转,一来一去每...
*4
$4
HSET
$25
hash:csdn:article:by:2746
$9
readCount
$4
1658
*4
$4
HSET
$25
hash:csdn:article:by:2746
$14
articleContent
$40
csdn/java/1_0_2_0_1504265356.667764.html
*4
$4
HSET
$25
hash:csdn:article:by:2746
$4
date
$16
2016-09-06 23:50
*4
$4
HSET
$25
hash:csdn:article:by:2746
$6
author
$10
u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2746
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2746
$9
labelList
$11
springboot,
*4
$4
HSET
$25
hash:csdn:article:by:2746
$9
likeCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2746
$10
authorLink
$29
http://my.csdn.net/u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2746
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2747
$2
id
$4
2747
*4
$4
HSET
$25
hash:csdn:article:by:2747
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2747
$3
url
$56
http://blog.csdn.net/u012706811/article/details/52185345
*4
$4
HSET
$25
hash:csdn:article:by:2747
$5
title
$45
Spring Boot学习记录(二)--thymeleaf模板
*4
$4
HSET
$25
hash:csdn:article:by:2747
$4
desc
$213
Spring Boot学习记录(二)–thymeleaf模板标签（空格分隔）： spring-boot自从来公司后都没用过jsp当界面渲染了,因为前后端分离不是很好,反而模板引擎用的比较多,thyme...
*4
$4
HSET
$25
hash:csdn:article:by:2747
$9
readCount
$5
58732
*4
$4
HSET
$25
hash:csdn:article:by:2747
$14
articleContent
$40
csdn/java/1_0_2_3_1504265357.661839.html
*4
$4
HSET
$25
hash:csdn:article:by:2747
$4
date
$16
2016-08-11 18:20
*4
$4
HSET
$25
hash:csdn:article:by:2747
$6
author
$10
u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2747
$12
commentCount
$2
15
*4
$4
HSET
$25
hash:csdn:article:by:2747
$9
labelList
$11
springboot,
*4
$4
HSET
$25
hash:csdn:article:by:2747
$9
likeCount
$2
18
*4
$4
HSET
$25
hash:csdn:article:by:2747
$10
authorLink
$29
http://my.csdn.net/u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2747
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2748
$2
id
$4
2748
*4
$4
HSET
$25
hash:csdn:article:by:2748
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2748
$3
url
$56
http://blog.csdn.net/u012706811/article/details/52168339
*4
$4
HSET
$25
hash:csdn:article:by:2748
$5
title
$42
Spring Boot学习记录(一)--环境搭建
*4
$4
HSET
$25
hash:csdn:article:by:2748
$4
desc
$217
Spring Boot学习记录(一)–环境搭建标签（空格分隔）： spring-boot最近趁着下班闲时间学习spring-boot,记录下学习历程,最后打算实战一个API管理平台,下面开始环境配置....
*4
$4
HSET
$25
hash:csdn:article:by:2748
$9
readCount
$4
5805
*4
$4
HSET
$25
hash:csdn:article:by:2748
$14
articleContent
$39
csdn/java/1_0_2_4_1504265358.69176.html
*4
$4
HSET
$25
hash:csdn:article:by:2748
$4
date
$16
2016-08-10 09:28
*4
$4
HSET
$25
hash:csdn:article:by:2748
$6
author
$10
u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2748
$12
commentCount
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2748
$9
labelList
$11
springboot,
*4
$4
HSET
$25
hash:csdn:article:by:2748
$9
likeCount
$1
3
*4
$4
HSET
$25
hash:csdn:article:by:2748
$10
authorLink
$29
http://my.csdn.net/u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2748
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2749
$2
id
$4
2749
*4
$4
HSET
$25
hash:csdn:article:by:2749
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2749
$3
url
$56
http://blog.csdn.net/u012706811/article/details/51813462
*4
$4
HSET
$25
hash:csdn:article:by:2749
$5
title
$25
近期javaWEB项目总结
*4
$4
HSET
$25
hash:csdn:article:by:2749
$4
desc
$285
找工作前把最近做的项目总结一下,面试的时候也好说说,虽然都不是什么很难得项目,但是对于最近学习的知识做到了一个很好的总结和巩固.1.微信后台开发这是学校老师接的一个项目,然后找我来做的,顺便吐槽下,老...
*4
$4
HSET
$25
hash:csdn:article:by:2749
$9
readCount
$4
4507
*4
$4
HSET
$25
hash:csdn:article:by:2749
$14
articleContent
$41
csdn/java/1_0_2_12_1504265359.720861.html
*4
$4
HSET
$25
hash:csdn:article:by:2749
$4
date
$16
2016-07-03 00:14
*4
$4
HSET
$25
hash:csdn:article:by:2749
$6
author
$10
u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2749
$12
commentCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2749
$9
labelList
$9
java web,
*4
$4
HSET
$25
hash:csdn:article:by:2749
$9
likeCount
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2749
$10
authorLink
$29
http://my.csdn.net/u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2749
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2750
$2
id
$4
2750
*4
$4
HSET
$25
hash:csdn:article:by:2750
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2750
$3
url
$56
http://blog.csdn.net/u012706811/article/details/51245579
*4
$4
HSET
$25
hash:csdn:article:by:2750
$5
title
$49
SSM实战记录(一)--一个大体的分页流程
*4
$4
HSET
$25
hash:csdn:article:by:2750
$4
desc
$213
这是一个使用springMVC+spring+mybatis+bootstrap table做的分页流程,网上之前搜到的类似的教程实在太少了,所以就想着写一个大体的过程(没写的很详细),能帮助到一些人...
*4
$4
HSET
$25
hash:csdn:article:by:2750
$9
readCount
$5
13551
*4
$4
HSET
$25
hash:csdn:article:by:2750
$14
articleContent
$41
csdn/java/1_0_2_19_1504265360.730294.html
*4
$4
HSET
$25
hash:csdn:article:by:2750
$4
date
$16
2016-04-25 21:29
*4
$4
HSET
$25
hash:csdn:article:by:2750
$6
author
$10
u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2750
$12
commentCount
$1
6
*4
$4
HSET
$25
hash:csdn:article:by:2750
$9
labelList
$28
bootstrap,分页,spring mvc,
*4
$4
HSET
$25
hash:csdn:article:by:2750
$9
likeCount
$1
3
*4
$4
HSET
$25
hash:csdn:article:by:2750
$10
authorLink
$29
http://my.csdn.net/u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2750
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2751
$2
id
$4
2751
*4
$4
HSET
$25
hash:csdn:article:by:2751
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2751
$3
url
$56
http://blog.csdn.net/u012706811/article/details/51404383
*4
$4
HSET
$25
hash:csdn:article:by:2751
$5
title
$32
JSON工具学习记录--FastJSON
*4
$4
HSET
$25
hash:csdn:article:by:2751
$4
desc
$227
最近做项目,总是与json打交道,在用了即可json工具后,个人认为fastJson最好用,很方便,API也清晰可见,所以记录下使用方法,给需要的人提供帮助.(部分摘抄自网络)一.API入口Fastj...
*4
$4
HSET
$25
hash:csdn:article:by:2751
$9
readCount
$4
5682
*4
$4
HSET
$25
hash:csdn:article:by:2751
$14
articleContent
$41
csdn/java/1_0_2_18_1504265361.690523.html
*4
$4
HSET
$25
hash:csdn:article:by:2751
$4
date
$16
2016-05-14 09:55
*4
$4
HSET
$25
hash:csdn:article:by:2751
$6
author
$10
u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2751
$12
commentCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2751
$9
labelList
$5
json,
*4
$4
HSET
$25
hash:csdn:article:by:2751
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2751
$10
authorLink
$29
http://my.csdn.net/u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2751
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2752
$2
id
$4
2752
*4
$4
HSET
$25
hash:csdn:article:by:2752
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2752
$3
url
$56
http://blog.csdn.net/u012706811/article/details/51448996
*4
$4
HSET
$25
hash:csdn:article:by:2752
$5
title
$23
Log4j使用学习记录
*4
$4
HSET
$25
hash:csdn:article:by:2752
$4
desc
$247
这是一篇Log4j使用教程,并不是一篇配置文件详解教程,主要的使用是按照需求来使用,所以随着我的需求增加会不断更新使用方法的.1.环境配置直接导入JAR就可以了,这里使用maven导入 
      ...
*4
$4
HSET
$25
hash:csdn:article:by:2752
$9
readCount
$4
3779
*4
$4
HSET
$25
hash:csdn:article:by:2752
$14
articleContent
$41
csdn/java/1_0_2_17_1504265362.842853.html
*4
$4
HSET
$25
hash:csdn:article:by:2752
$4
date
$16
2016-05-18 23:40
*4
$4
HSET
$25
hash:csdn:article:by:2752
$6
author
$10
u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2752
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2752
$9
labelList
$6
log4j,
*4
$4
HSET
$25
hash:csdn:article:by:2752
$9
likeCount
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2752
$10
authorLink
$29
http://my.csdn.net/u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2752
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2753
$2
id
$4
2753
*4
$4
HSET
$25
hash:csdn:article:by:2753
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2753
$3
url
$56
http://blog.csdn.net/u012706811/article/details/51567129
*4
$4
HSET
$25
hash:csdn:article:by:2753
$5
title
$48
Maven学习记录(三)--实战引入Spring支持
*4
$4
HSET
$25
hash:csdn:article:by:2753
$4
desc
$255
一.创建项目maven项目在IDEA下创建是相当容易然后给定项目坐标,确定即可二.完善项目目录结构IDEA创建完项目结构和标准的maven项目有些差异,这个时候就需要我们手动调整一下更改前结构 
更改...
*4
$4
HSET
$25
hash:csdn:article:by:2753
$9
readCount
$5
11147
*4
$4
HSET
$25
hash:csdn:article:by:2753
$14
articleContent
$40
csdn/java/1_0_2_15_1504265364.75726.html
*4
$4
HSET
$25
hash:csdn:article:by:2753
$4
date
$16
2016-06-02 14:49
*4
$4
HSET
$25
hash:csdn:article:by:2753
$6
author
$10
u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2753
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2753
$9
labelList
$6
maven,
*4
$4
HSET
$25
hash:csdn:article:by:2753
$9
likeCount
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2753
$10
authorLink
$29
http://my.csdn.net/u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2753
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2754
$2
id
$4
2754
*4
$4
HSET
$25
hash:csdn:article:by:2754
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2754
$3
url
$56
http://blog.csdn.net/u012706811/article/details/51564962
*4
$4
HSET
$25
hash:csdn:article:by:2754
$5
title
$41
Maven学习记录(二)--Maven核心概念
*4
$4
HSET
$25
hash:csdn:article:by:2754
$4
desc
$171
转载自 http://www.cnblogs.com/xdp-gacl/p/4051819.html   
博主写的很好,所以直接转载过来了    一、Maven坐标
1.1、什么是坐标？
　　在平面...
*4
$4
HSET
$25
hash:csdn:article:by:2754
$9
readCount
$3
943
*4
$4
HSET
$25
hash:csdn:article:by:2754
$14
articleContent
$41
csdn/java/1_0_2_16_1504265364.802409.html
*4
$4
HSET
$25
hash:csdn:article:by:2754
$4
date
$16
2016-06-02 11:14
*4
$4
HSET
$25
hash:csdn:article:by:2754
$6
author
$10
u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2754
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2754
$9
labelList
$6
maven,
*4
$4
HSET
$25
hash:csdn:article:by:2754
$9
likeCount
$1
3
*4
$4
HSET
$25
hash:csdn:article:by:2754
$10
authorLink
$29
http://my.csdn.net/u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2754
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2755
$2
id
$4
2755
*4
$4
HSET
$25
hash:csdn:article:by:2755
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2755
$3
url
$56
http://blog.csdn.net/u012706811/article/details/51570805
*4
$4
HSET
$25
hash:csdn:article:by:2755
$5
title
$45
Maven学习记录(四)--多模块开发配置
*4
$4
HSET
$25
hash:csdn:article:by:2755
$4
desc
$277
多模块的好处就是协同开发,对于大的项目这样分工可以提高效率,同时减轻代码耦合,看起来也一目了然,maven多模块还解决了不同人开发使用的架包版本冲突等问题一.创建项目1.创建父级容器不要使用模板,直接...
*4
$4
HSET
$25
hash:csdn:article:by:2755
$9
readCount
$4
3653
*4
$4
HSET
$25
hash:csdn:article:by:2755
$14
articleContent
$41
csdn/java/1_0_2_14_1504265365.665069.html
*4
$4
HSET
$25
hash:csdn:article:by:2755
$4
date
$16
2016-06-02 22:40
*4
$4
HSET
$25
hash:csdn:article:by:2755
$6
author
$10
u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2755
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2755
$9
labelList
$6
maven,
*4
$4
HSET
$25
hash:csdn:article:by:2755
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2755
$10
authorLink
$29
http://my.csdn.net/u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2755
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2756
$2
id
$4
2756
*4
$4
HSET
$25
hash:csdn:article:by:2756
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2756
$3
url
$56
http://blog.csdn.net/u012706811/article/details/51912474
*4
$4
HSET
$25
hash:csdn:article:by:2756
$5
title
$39
JavaWEB小知识学习--验证码生成
*4
$4
HSET
$25
hash:csdn:article:by:2756
$4
desc
$269
验证码是现在必不可少的一个小功能,可以放爆破,防垃圾请求,总之还是有一定约束力的SpringMVC实现验证码功能主要是提供一个URL请求,该请求对应的方法可以生成一张验证码图片,然后把该验证码数值存入...
*4
$4
HSET
$25
hash:csdn:article:by:2756
$9
readCount
$4
7136
*4
$4
HSET
$25
hash:csdn:article:by:2756
$14
articleContent
$41
csdn/java/1_0_2_11_1504265366.809937.html
*4
$4
HSET
$25
hash:csdn:article:by:2756
$4
date
$16
2016-07-14 20:10
*4
$4
HSET
$25
hash:csdn:article:by:2756
$6
author
$10
u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2756
$12
commentCount
$2
18
*4
$4
HSET
$25
hash:csdn:article:by:2756
$9
labelList
$20
java web,spring mvc,
*4
$4
HSET
$25
hash:csdn:article:by:2756
$9
likeCount
$1
7
*4
$4
HSET
$25
hash:csdn:article:by:2756
$10
authorLink
$29
http://my.csdn.net/u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2756
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2757
$2
id
$4
2757
*4
$4
HSET
$25
hash:csdn:article:by:2757
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2757
$3
url
$56
http://blog.csdn.net/u012706811/article/details/51927104
*4
$4
HSET
$25
hash:csdn:article:by:2757
$5
title
$33
JavaWEB小知识学习--Java Mail
*4
$4
HSET
$25
hash:csdn:article:by:2757
$4
desc
$223
本文主要使用java mail和spring mail来发送邮件教程,比较啰嗦,因为除了发邮件还写了其他工具类,不过很详细.1.使用java mail发送邮件首先把相关账号密码信息保存到一个prope...
*4
$4
HSET
$25
hash:csdn:article:by:2757
$9
readCount
$4
3015
*4
$4
HSET
$25
hash:csdn:article:by:2757
$14
articleContent
$40
csdn/java/1_0_2_9_1504265368.077865.html
*4
$4
HSET
$25
hash:csdn:article:by:2757
$4
date
$16
2016-07-16 23:28
*4
$4
HSET
$25
hash:csdn:article:by:2757
$6
author
$10
u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2757
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2757
$9
labelList
$9
java web,
*4
$4
HSET
$25
hash:csdn:article:by:2757
$9
likeCount
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2757
$10
authorLink
$29
http://my.csdn.net/u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2757
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2758
$2
id
$4
2758
*4
$4
HSET
$25
hash:csdn:article:by:2758
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2758
$3
url
$56
http://blog.csdn.net/u012706811/article/details/51923061
*4
$4
HSET
$25
hash:csdn:article:by:2758
$5
title
$34
JavaWEB小知识学习--原生AJAX
*4
$4
HSET
$25
hash:csdn:article:by:2758
$4
desc
$239
AJAX的作用局部刷新,作为提升页面体验还是很重要的,不过大家都说对SEO不是很友好,一直使用jQuery封装的AJAX,没有了解过原生的是什么样子的,特此学习下,补充知识1.原生AJAX的Get方式...
*4
$4
HSET
$25
hash:csdn:article:by:2758
$9
readCount
$4
1592
*4
$4
HSET
$25
hash:csdn:article:by:2758
$14
articleContent
$41
csdn/java/1_0_2_10_1504265368.857493.html
*4
$4
HSET
$25
hash:csdn:article:by:2758
$4
date
$16
2016-07-16 10:23
*4
$4
HSET
$25
hash:csdn:article:by:2758
$6
author
$10
u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2758
$12
commentCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2758
$9
labelList
$5
ajax,
*4
$4
HSET
$25
hash:csdn:article:by:2758
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2758
$10
authorLink
$29
http://my.csdn.net/u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2758
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2759
$2
id
$4
2759
*4
$4
HSET
$25
hash:csdn:article:by:2759
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2759
$3
url
$56
http://blog.csdn.net/u012706811/article/details/52054153
*4
$4
HSET
$25
hash:csdn:article:by:2759
$5
title
$37
Jersey学习记录(一)--环境配置
*4
$4
HSET
$25
hash:csdn:article:by:2759
$4
desc
$251
最近公司项目在用jersey做api接口,遂来学习一下,学习的第一步,先运行起来一个项目,也就是环境配置好.1.环境配置对于IDEA来说可以直接引用包方式建立,这样的话在新建项目的时候勾选上WEB A...
*4
$4
HSET
$25
hash:csdn:article:by:2759
$9
readCount
$4
2279
*4
$4
HSET
$25
hash:csdn:article:by:2759
$14
articleContent
$40
csdn/java/1_0_2_8_1504265369.890049.html
*4
$4
HSET
$25
hash:csdn:article:by:2759
$4
date
$16
2016-07-28 12:19
*4
$4
HSET
$25
hash:csdn:article:by:2759
$6
author
$10
u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2759
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2759
$9
labelList
$7
jersey,
*4
$4
HSET
$25
hash:csdn:article:by:2759
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2759
$10
authorLink
$29
http://my.csdn.net/u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2759
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2760
$2
id
$4
2760
*4
$4
HSET
$25
hash:csdn:article:by:2760
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2760
$3
url
$56
http://blog.csdn.net/u012706811/article/details/52054156
*4
$4
HSET
$25
hash:csdn:article:by:2760
$5
title
$52
Jersey学习记录(二)--请求映射和页面传值
*4
$4
HSET
$25
hash:csdn:article:by:2760
$4
desc
$159
jersey的webservice开发基本上都是使用注解,接下来学习常用注解.一.根资源类1.@PATH注解@Path("/hello")
public class HelloWorldControl...
*4
$4
HSET
$25
hash:csdn:article:by:2760
$9
readCount
$4
2791
*4
$4
HSET
$25
hash:csdn:article:by:2760
$14
articleContent
$40
csdn/java/1_0_2_7_1504265370.857547.html
*4
$4
HSET
$25
hash:csdn:article:by:2760
$4
date
$16
2016-07-28 12:20
*4
$4
HSET
$25
hash:csdn:article:by:2760
$6
author
$10
u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2760
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2760
$9
labelList
$7
jersey,
*4
$4
HSET
$25
hash:csdn:article:by:2760
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2760
$10
authorLink
$29
http://my.csdn.net/u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2760
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2761
$2
id
$4
2761
*4
$4
HSET
$25
hash:csdn:article:by:2761
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2761
$3
url
$56
http://blog.csdn.net/u012706811/article/details/52054157
*4
$4
HSET
$25
hash:csdn:article:by:2761
$5
title
$55
Jersey学习记录(三)--过滤拦截器与异常处理
*4
$4
HSET
$25
hash:csdn:article:by:2761
$4
desc
$245
本文记录全局异常返回,过滤器,拦截器.一.全局异常处理器webservice定义全局返回错误码是很重要的一个功能,jersey正好就能实现这一功能.整个流程就是当jersey托管的类发现了异常,抛出给...
*4
$4
HSET
$25
hash:csdn:article:by:2761
$9
readCount
$4
5792
*4
$4
HSET
$25
hash:csdn:article:by:2761
$14
articleContent
$40
csdn/java/1_0_2_6_1504265371.854454.html
*4
$4
HSET
$25
hash:csdn:article:by:2761
$4
date
$16
2016-07-28 12:20
*4
$4
HSET
$25
hash:csdn:article:by:2761
$6
author
$10
u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2761
$12
commentCount
$2
10
*4
$4
HSET
$25
hash:csdn:article:by:2761
$9
labelList
$7
jersey,
*4
$4
HSET
$25
hash:csdn:article:by:2761
$9
likeCount
$1
3
*4
$4
HSET
$25
hash:csdn:article:by:2761
$10
authorLink
$29
http://my.csdn.net/u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2761
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2762
$2
id
$4
2762
*4
$4
HSET
$25
hash:csdn:article:by:2762
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2762
$3
url
$56
http://blog.csdn.net/u012706811/article/details/51726591
*4
$4
HSET
$25
hash:csdn:article:by:2762
$5
title
$43
nginx学习记录--安装和转发到tomcat
*4
$4
HSET
$25
hash:csdn:article:by:2762
$4
desc
$283
有一段时间没写博客了,因为接了几个项目,并且临近期末,还要准备考试,比较忙.最近项目上线,项目主要是微信智能硬件管理,所以需要两个服务器,一个用来处理微信上传的消息,一个用来处理智能设备上传的消息,所...
*4
$4
HSET
$25
hash:csdn:article:by:2762
$9
readCount
$4
3669
*4
$4
HSET
$25
hash:csdn:article:by:2762
$14
articleContent
$41
csdn/java/1_0_2_13_1504265372.909351.html
*4
$4
HSET
$25
hash:csdn:article:by:2762
$4
date
$16
2016-06-21 13:21
*4
$4
HSET
$25
hash:csdn:article:by:2762
$6
author
$10
u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2762
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2762
$9
labelList
$6
nginx,
*4
$4
HSET
$25
hash:csdn:article:by:2762
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2762
$10
authorLink
$29
http://my.csdn.net/u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2762
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2763
$2
id
$4
2763
*4
$4
HSET
$25
hash:csdn:article:by:2763
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2763
$3
url
$56
http://blog.csdn.net/u012706811/article/details/52190847
*4
$4
HSET
$25
hash:csdn:article:by:2763
$5
title
$50
JSON工具学习记录--FastJSON循环引用问题
*4
$4
HSET
$25
hash:csdn:article:by:2763
$4
desc
$231
JSON工具学习记录–FastJSON循环引用问题标签（空格分隔）： fastjson最近基于他人项目做二次开发,遇到了循环引用的问题,简单来说A引用了B,B引用了C,C引用了A,那么转换json就会...
*4
$4
HSET
$25
hash:csdn:article:by:2763
$9
readCount
$4
2311
*4
$4
HSET
$25
hash:csdn:article:by:2763
$14
articleContent
$40
csdn/java/1_0_2_1_1504265374.034113.html
*4
$4
HSET
$25
hash:csdn:article:by:2763
$4
date
$16
2016-08-12 13:33
*4
$4
HSET
$25
hash:csdn:article:by:2763
$6
author
$10
u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2763
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2763
$9
labelList
$5
json,
*4
$4
HSET
$25
hash:csdn:article:by:2763
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2763
$10
authorLink
$29
http://my.csdn.net/u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2763
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2764
$2
id
$4
2764
*4
$4
HSET
$25
hash:csdn:article:by:2764
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2764
$3
url
$56
http://blog.csdn.net/u012706811/article/details/52198677
*4
$4
HSET
$25
hash:csdn:article:by:2764
$5
title
$43
Spring Boot学习记录(三)--整合Mybatis
*4
$4
HSET
$25
hash:csdn:article:by:2764
$4
desc
$213
Spring Boot学习记录(三)–整合Mybatis标签（空格分隔）： spring-boot控制器,视图解析器前面两篇都已弄好,这一篇学习持久层框架整合.1.数据源配置数据源使用druid,ma...
*4
$4
HSET
$25
hash:csdn:article:by:2764
$9
readCount
$4
8198
*4
$4
HSET
$25
hash:csdn:article:by:2764
$14
articleContent
$40
csdn/java/1_0_2_2_1504265374.932814.html
*4
$4
HSET
$25
hash:csdn:article:by:2764
$4
date
$16
2016-08-13 12:18
*4
$4
HSET
$25
hash:csdn:article:by:2764
$6
author
$10
u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2764
$12
commentCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2764
$9
labelList
$11
springboot,
*4
$4
HSET
$25
hash:csdn:article:by:2764
$9
likeCount
$1
9
*4
$4
HSET
$25
hash:csdn:article:by:2764
$10
authorLink
$29
http://my.csdn.net/u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2764
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2765
$2
id
$4
2765
*4
$4
HSET
$25
hash:csdn:article:by:2765
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2765
$3
url
$56
http://blog.csdn.net/u012706811/article/details/52142701
*4
$4
HSET
$25
hash:csdn:article:by:2765
$5
title
$36
SSM实战记录(二)--在线OJ系统
*4
$4
HSET
$25
hash:csdn:article:by:2765
$4
desc
$273
简介: 
学习SSM框架后,做出来的一个比较系统的项目,前端,数据库,后台全部自己完成,借鉴了很多前辈的经验,完成后颇有成就感,当然也学到了很多东西,至于能不能上线给学校用,还要看领导了…项目主要是类...
*4
$4
HSET
$25
hash:csdn:article:by:2765
$9
readCount
$4
1918
*4
$4
HSET
$25
hash:csdn:article:by:2765
$14
articleContent
$40
csdn/java/1_0_2_5_1504265375.974983.html
*4
$4
HSET
$25
hash:csdn:article:by:2765
$4
date
$16
2016-08-07 15:26
*4
$4
HSET
$25
hash:csdn:article:by:2765
$6
author
$10
u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2765
$12
commentCount
$1
4
*4
$4
HSET
$25
hash:csdn:article:by:2765
$9
labelList
$9
java web,
*4
$4
HSET
$25
hash:csdn:article:by:2765
$9
likeCount
$1
6
*4
$4
HSET
$25
hash:csdn:article:by:2765
$10
authorLink
$29
http://my.csdn.net/u012706811
*4
$4
HSET
$25
hash:csdn:article:by:2765
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2766
$2
id
$4
2766
*4
$4
HSET
$25
hash:csdn:article:by:2766
$10
categroyId
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2766
$3
url
$56
http://blog.csdn.net/u013239111/article/details/77719019
*4
$4
HSET
$25
hash:csdn:article:by:2766
$5
title
$25
设计模式-策略模式
*4
$4
HSET
$25
hash:csdn:article:by:2766
$4
desc
$299
介绍在项目开发中，经常会碰到需要根据不同的条件采用不同的算法，但是这些不同的算法又有些类似。例如商城下单中的打折功能（打八折、五折、一折），满减功能等等。 
地图中根据采用不同的出行方式计算时间、金额...
*4
$4
HSET
$25
hash:csdn:article:by:2766
$9
readCount
$2
10
*4
$4
HSET
$25
hash:csdn:article:by:2766
$14
articleContent
$41
csdn/mode/37_1_1_0_1504396836.119458.html
*4
$4
HSET
$25
hash:csdn:article:by:2766
$4
date
$16
2017-09-02 18:08
*4
$4
HSET
$25
hash:csdn:article:by:2766
$6
author
$10
u013239111
*4
$4
HSET
$25
hash:csdn:article:by:2766
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2766
$9
labelList
$53
设计模式,算法,策略模式,反射,简单工厂,
*4
$4
HSET
$25
hash:csdn:article:by:2766
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2766
$10
authorLink
$29
http://my.csdn.net/u013239111
*4
$4
HSET
$25
hash:csdn:article:by:2766
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2767
$2
id
$4
2767
*4
$4
HSET
$25
hash:csdn:article:by:2767
$10
categroyId
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2767
$3
url
$56
http://blog.csdn.net/u013239111/article/details/77824736
*4
$4
HSET
$25
hash:csdn:article:by:2767
$5
title
$25
设计模式-状态模式
*4
$4
HSET
$25
hash:csdn:article:by:2767
$4
desc
$303
介绍状态模式和策略模式是一对双胞胎，他们都属于行为设计模式。状态模式和策略模式都是为具有多种可能情形设计的模式，把不同的处理情形抽象为一个相同的接口，符合对扩展开放，对修改封闭的原则。策略模式封装了一...
*4
$4
HSET
$25
hash:csdn:article:by:2767
$9
readCount
$3
114
*4
$4
HSET
$25
hash:csdn:article:by:2767
$14
articleContent
$41
csdn/mode/37_0_1_0_1504569660.601471.html
*4
$4
HSET
$25
hash:csdn:article:by:2767
$4
date
$16
2017-09-04 19:08
*4
$4
HSET
$25
hash:csdn:article:by:2767
$6
author
$10
u013239111
*4
$4
HSET
$25
hash:csdn:article:by:2767
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2767
$9
labelList
$47
设计模式,对象,扩展,开放,状态模式,
*4
$4
HSET
$25
hash:csdn:article:by:2767
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2767
$10
authorLink
$29
http://my.csdn.net/u013239111
*4
$4
HSET
$25
hash:csdn:article:by:2767
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2768
$2
id
$4
2768
*4
$4
HSET
$25
hash:csdn:article:by:2768
$10
categroyId
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2768
$3
url
$56
http://blog.csdn.net/u013239111/article/details/77719043
*4
$4
HSET
$25
hash:csdn:article:by:2768
$5
title
$25
设计模式-享元模式
*4
$4
HSET
$25
hash:csdn:article:by:2768
$4
desc
$303
介绍享元模式简单的来说就是把一些重复的抽取出来提供给其他类使用。它使用共享物件，用来尽可能减少内存使用量以及分享资讯给尽可能多的相似物件；它适合用于当大量物件只是重复因而导致无法令人接受的使用大量内存...
*4
$4
HSET
$25
hash:csdn:article:by:2768
$9
readCount
$3
175
*4
$4
HSET
$25
hash:csdn:article:by:2768
$14
articleContent
$41
csdn/mode/37_0_1_1_1504569661.633582.html
*4
$4
HSET
$25
hash:csdn:article:by:2768
$4
date
$16
2017-09-03 19:23
*4
$4
HSET
$25
hash:csdn:article:by:2768
$6
author
$10
u013239111
*4
$4
HSET
$25
hash:csdn:article:by:2768
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2768
$9
labelList
$46
设计模式,享元模式,数据结构,对象,
*4
$4
HSET
$25
hash:csdn:article:by:2768
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2768
$10
authorLink
$29
http://my.csdn.net/u013239111
*4
$4
HSET
$25
hash:csdn:article:by:2768
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2769
$2
id
$4
2769
*4
$4
HSET
$25
hash:csdn:article:by:2769
$10
categroyId
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2769
$3
url
$56
http://blog.csdn.net/u013239111/article/details/77453337
*4
$4
HSET
$25
hash:csdn:article:by:2769
$5
title
$25
设计模式-原型模式
*4
$4
HSET
$25
hash:csdn:article:by:2769
$4
desc
$265
介绍原型模式（Prototype Pattern）是用于创建重复的对象，同时又能保证性能。这种类型的设计模式属于创建型模式，它提供了一种创建对象的最佳方式。 
原型模式多用于创建复杂的或者耗时的实例，...
*4
$4
HSET
$25
hash:csdn:article:by:2769
$9
readCount
$3
201
*4
$4
HSET
$25
hash:csdn:article:by:2769
$14
articleContent
$41
csdn/mode/37_0_1_2_1504569662.539871.html
*4
$4
HSET
$25
hash:csdn:article:by:2769
$4
date
$16
2017-09-03 16:05
*4
$4
HSET
$25
hash:csdn:article:by:2769
$6
author
$10
u013239111
*4
$4
HSET
$25
hash:csdn:article:by:2769
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2769
$9
labelList
$30
prototype,设计模式,对象,
*4
$4
HSET
$25
hash:csdn:article:by:2769
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2769
$10
authorLink
$29
http://my.csdn.net/u013239111
*4
$4
HSET
$25
hash:csdn:article:by:2769
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2770
$2
id
$4
2770
*4
$4
HSET
$25
hash:csdn:article:by:2770
$10
categroyId
$1
3
*4
$4
HSET
$25
hash:csdn:article:by:2770
$3
url
$57
http://blog.csdn.net/qq_35246620/article/details/77823968
*4
$4
HSET
$25
hash:csdn:article:by:2770
$5
title
$67
史上最简单的 MySQL 教程（三十三）「视图（上）」
*4
$4
HSET
$25
hash:csdn:article:by:2770
$4
desc
$295
视图视图：view，是一种有结构（有行有列），但没有结果（结构中不真实存放数据）的虚拟表，虚拟表的结构来源不是自己定义的，而是从对应的基表（视图的数据来源）中产生的。创建视图首先，给出创建视图的基本语...
*4
$4
HSET
$25
hash:csdn:article:by:2770
$9
readCount
$3
324
*4
$4
HSET
$25
hash:csdn:article:by:2770
$14
articleContent
$41
csdn/mysql/17_1_1_0_1504569767.51514.html
*4
$4
HSET
$25
hash:csdn:article:by:2770
$4
date
$16
2017-09-03 17:43
*4
$4
HSET
$25
hash:csdn:article:by:2770
$6
author
$11
qq_35246620
*4
$4
HSET
$25
hash:csdn:article:by:2770
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2770
$9
labelList
$28
view,mysql,视图,数据库,
*4
$4
HSET
$25
hash:csdn:article:by:2770
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2770
$10
authorLink
$30
http://my.csdn.net/qq_35246620
*4
$4
HSET
$25
hash:csdn:article:by:2770
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2771
$2
id
$4
2771
*4
$4
HSET
$25
hash:csdn:article:by:2771
$10
categroyId
$1
7
*4
$4
HSET
$25
hash:csdn:article:by:2771
$3
url
$65
http://blog.csdn.net/androidlushangderen/article/details/40918317
*4
$4
HSET
$25
hash:csdn:article:by:2771
$5
title
$64
Redis源码分析（三十六）--- Redis中的11大优秀设计
*4
$4
HSET
$25
hash:csdn:article:by:2771
$4
desc
$273
坚持了一个月左右的时间，从最开始的对Redis的代码做分类，从struct结构体分析开始，到最后分析main主程序结束，中间，各大模块的代码逐个击破，学习，总之，收获了非常多，好久没有这么久的耐心把一...
*4
$4
HSET
$25
hash:csdn:article:by:2771
$9
readCount
$5
11088
*4
$4
HSET
$25
hash:csdn:article:by:2771
$14
articleContent
$41
csdn/redis/1_0_1_0_1504578435.591825.html
*4
$4
HSET
$25
hash:csdn:article:by:2771
$4
date
$16
2014-11-08 10:16
*4
$4
HSET
$25
hash:csdn:article:by:2771
$6
author
$19
Androidlushangderen
*4
$4
HSET
$25
hash:csdn:article:by:2771
$12
commentCount
$1
6
*4
$4
HSET
$25
hash:csdn:article:by:2771
$9
labelList
$42
nosql数据库,源码,redis,框架,设计,
*4
$4
HSET
$25
hash:csdn:article:by:2771
$9
likeCount
$1
6
*4
$4
HSET
$25
hash:csdn:article:by:2771
$10
authorLink
$38
http://my.csdn.net/Androidlushangderen
*4
$4
HSET
$25
hash:csdn:article:by:2771
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2772
$2
id
$4
2772
*4
$4
HSET
$25
hash:csdn:article:by:2772
$10
categroyId
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2772
$3
url
$56
http://blog.csdn.net/u013239111/article/details/77824738
*4
$4
HSET
$25
hash:csdn:article:by:2772
$5
title
$25
设计模式-装饰模式
*4
$4
HSET
$25
hash:csdn:article:by:2772
$4
desc
$265
介绍装饰器模式（Decorator Pattern）允许向一个现有的对象添加新的功能，同时又不改变其结构。 
继承机制同样可以给现有类增加功能，通过继承一个现有类可以使得子类在拥有自身方法的同时还拥有...
*4
$4
HSET
$25
hash:csdn:article:by:2772
$9
readCount
$3
178
*4
$4
HSET
$25
hash:csdn:article:by:2772
$14
articleContent
$41
csdn/mode/37_7_1_0_1504742538.707862.html
*4
$4
HSET
$25
hash:csdn:article:by:2772
$4
date
$16
2017-09-05 16:28
*4
$4
HSET
$25
hash:csdn:article:by:2772
$6
author
$10
u013239111
*4
$4
HSET
$25
hash:csdn:article:by:2772
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2772
$9
labelList
$40
设计模式,继承,结构,装饰模式,
*4
$4
HSET
$25
hash:csdn:article:by:2772
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2772
$10
authorLink
$29
http://my.csdn.net/u013239111
*4
$4
HSET
$25
hash:csdn:article:by:2772
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2773
$2
id
$4
2773
*4
$4
HSET
$25
hash:csdn:article:by:2773
$10
categroyId
$1
3
*4
$4
HSET
$25
hash:csdn:article:by:2773
$3
url
$56
http://blog.csdn.net/erlian1992/article/details/77869100
*4
$4
HSET
$25
hash:csdn:article:by:2773
$5
title
$26
Union和Union All的区别
*4
$4
HSET
$25
hash:csdn:article:by:2773
$4
desc
$153
假设我们有一个表Student，包括以下字段与数据： [c-sharp] view plain copy drop table student;    create table student  ( ...
*4
$4
HSET
$25
hash:csdn:article:by:2773
$9
readCount
$3
126
*4
$4
HSET
$25
hash:csdn:article:by:2773
$14
articleContent
$41
csdn/mysql/17_2_1_0_1504742555.28375.html
*4
$4
HSET
$25
hash:csdn:article:by:2773
$4
date
$16
2017-09-06 17:25
*4
$4
HSET
$25
hash:csdn:article:by:2773
$6
author
$10
erlian1992
*4
$4
HSET
$25
hash:csdn:article:by:2773
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2773
$9
labelList
$45
mysql,数据库,联合查询,union,union all,
*4
$4
HSET
$25
hash:csdn:article:by:2773
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2773
$10
authorLink
$29
http://my.csdn.net/erlian1992
*4
$4
HSET
$25
hash:csdn:article:by:2773
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2774
$2
id
$4
2774
*4
$4
HSET
$25
hash:csdn:article:by:2774
$10
categroyId
$1
3
*4
$4
HSET
$25
hash:csdn:article:by:2774
$3
url
$56
http://blog.csdn.net/erlian1992/article/details/77854486
*4
$4
HSET
$25
hash:csdn:article:by:2774
$5
title
$29
mysql悲观锁总结和实践
*4
$4
HSET
$25
hash:csdn:article:by:2774
$4
desc
$302
最近学习了一下数据库的悲观锁和乐观锁，根据自己的理解和网上参考资料总结如下： 悲观锁介绍（百科）：悲观锁，正如其名，它指的是对数据被外界（包括本系统当前的其他事务，以及来自外部系统的事务处理）修改持保...
*4
$4
HSET
$25
hash:csdn:article:by:2774
$9
readCount
$3
154
*4
$4
HSET
$25
hash:csdn:article:by:2774
$14
articleContent
$42
csdn/mysql/17_2_1_3_1504742556.145474.html
*4
$4
HSET
$25
hash:csdn:article:by:2774
$4
date
$16
2017-09-05 18:05
*4
$4
HSET
$25
hash:csdn:article:by:2774
$6
author
$10
erlian1992
*4
$4
HSET
$25
hash:csdn:article:by:2774
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2774
$9
labelList
$46
mysql,数据库,悲观锁,乐观锁,锁机制,
*4
$4
HSET
$25
hash:csdn:article:by:2774
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2774
$10
authorLink
$29
http://my.csdn.net/erlian1992
*4
$4
HSET
$25
hash:csdn:article:by:2774
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2775
$2
id
$4
2775
*4
$4
HSET
$25
hash:csdn:article:by:2775
$10
categroyId
$1
3
*4
$4
HSET
$25
hash:csdn:article:by:2775
$3
url
$56
http://blog.csdn.net/erlian1992/article/details/77859810
*4
$4
HSET
$25
hash:csdn:article:by:2775
$5
title
$21
SQL语句优化技巧
*4
$4
HSET
$25
hash:csdn:article:by:2775
$4
desc
$231
1、应尽量避免在 where 子句中使用!=或2、对查询进行优化，应尽量避免全表扫描，首先应考虑在 where 及 order by 涉及的列上建立索引。3、应尽量避免在 where 子句中对字段进行...
*4
$4
HSET
$25
hash:csdn:article:by:2775
$9
readCount
$3
222
*4
$4
HSET
$25
hash:csdn:article:by:2775
$14
articleContent
$42
csdn/mysql/17_2_1_1_1504742557.120616.html
*4
$4
HSET
$25
hash:csdn:article:by:2775
$4
date
$16
2017-09-05 23:05
*4
$4
HSET
$25
hash:csdn:article:by:2775
$6
author
$10
erlian1992
*4
$4
HSET
$25
hash:csdn:article:by:2775
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2775
$9
labelList
$62
优化,sql,数据库性能优化,SQL语句优化,索引优化,
*4
$4
HSET
$25
hash:csdn:article:by:2775
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2775
$10
authorLink
$29
http://my.csdn.net/erlian1992
*4
$4
HSET
$25
hash:csdn:article:by:2775
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2776
$2
id
$4
2776
*4
$4
HSET
$25
hash:csdn:article:by:2776
$10
categroyId
$1
3
*4
$4
HSET
$25
hash:csdn:article:by:2776
$3
url
$56
http://blog.csdn.net/erlian1992/article/details/77854501
*4
$4
HSET
$25
hash:csdn:article:by:2776
$5
title
$29
mysql乐观锁总结和实践
*4
$4
HSET
$25
hash:csdn:article:by:2776
$4
desc
$283
上一篇文章《MySQL悲观锁总结和实践》谈到了MySQL悲观锁，但是悲观锁并不是适用于任何场景，它也有它存在的一些不足，因为悲观锁大多数情况下依靠数据库的锁机制实现，以保证操作最大程度的独占性。如果加...
*4
$4
HSET
$25
hash:csdn:article:by:2776
$9
readCount
$3
155
*4
$4
HSET
$25
hash:csdn:article:by:2776
$14
articleContent
$42
csdn/mysql/17_2_1_2_1504742558.153256.html
*4
$4
HSET
$25
hash:csdn:article:by:2776
$4
date
$16
2017-09-05 18:06
*4
$4
HSET
$25
hash:csdn:article:by:2776
$6
author
$10
erlian1992
*4
$4
HSET
$25
hash:csdn:article:by:2776
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2776
$9
labelList
$43
mysql,数据库,乐观锁,悲观锁,事务,
*4
$4
HSET
$25
hash:csdn:article:by:2776
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2776
$10
authorLink
$29
http://my.csdn.net/erlian1992
*4
$4
HSET
$25
hash:csdn:article:by:2776
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2777
$2
id
$4
2777
*4
$4
HSET
$25
hash:csdn:article:by:2777
$10
categroyId
$1
3
*4
$4
HSET
$25
hash:csdn:article:by:2777
$3
url
$59
http://blog.csdn.net/number1killer/article/details/77897855
*4
$4
HSET
$25
hash:csdn:article:by:2777
$5
title
$32
mysql七表查询实例（二）
*4
$4
HSET
$25
hash:csdn:article:by:2777
$4
desc
$289
而这个语句，这个结果的出现令我彻底蒙圈了。最后想了一个以毒攻毒的办法终于将之拿下。
然而并没有什么卵用......当然还是有正解的：出于科学严谨的态度（呃，好吧，是偶搞错太多次了，怕了），让我们一起来...
*4
$4
HSET
$25
hash:csdn:article:by:2777
$9
readCount
$3
198
*4
$4
HSET
$25
hash:csdn:article:by:2777
$14
articleContent
$42
csdn/mysql/17_4_1_0_1505001635.936508.html
*4
$4
HSET
$25
hash:csdn:article:by:2777
$4
date
$16
2017-09-08 19:59
*4
$4
HSET
$25
hash:csdn:article:by:2777
$6
author
$13
number1killer
*4
$4
HSET
$25
hash:csdn:article:by:2777
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2777
$9
labelList
$73
mysql,嵌套查询,求平均值导致的数值类型转变,奇葩,七表,
*4
$4
HSET
$25
hash:csdn:article:by:2777
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2777
$10
authorLink
$32
http://my.csdn.net/number1killer
*4
$4
HSET
$25
hash:csdn:article:by:2777
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2778
$2
id
$4
2778
*4
$4
HSET
$25
hash:csdn:article:by:2778
$10
categroyId
$1
3
*4
$4
HSET
$25
hash:csdn:article:by:2778
$3
url
$59
http://blog.csdn.net/number1killer/article/details/77896758
*4
$4
HSET
$25
hash:csdn:article:by:2778
$5
title
$32
mysql七表查询实例（一）
*4
$4
HSET
$25
hash:csdn:article:by:2778
$4
desc
$287
开始之前先说点有趣的事：经常听说没有主键就无法进行多表查询，其实这太过于片面了。实际上有些情况没有主键也是可以进行多表查询的（例一，所用到的表格也都是下面的表格，先来个4表查询热热身）。
mysql>...
*4
$4
HSET
$25
hash:csdn:article:by:2778
$9
readCount
$3
241
*4
$4
HSET
$25
hash:csdn:article:by:2778
$14
articleContent
$42
csdn/mysql/17_4_1_1_1505001637.016838.html
*4
$4
HSET
$25
hash:csdn:article:by:2778
$4
date
$16
2017-09-08 18:35
*4
$4
HSET
$25
hash:csdn:article:by:2778
$6
author
$13
number1killer
*4
$4
HSET
$25
hash:csdn:article:by:2778
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2778
$9
labelList
$40
mysql,实例,多表,联合查询,主键,
*4
$4
HSET
$25
hash:csdn:article:by:2778
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2778
$10
authorLink
$32
http://my.csdn.net/number1killer
*4
$4
HSET
$25
hash:csdn:article:by:2778
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2779
$2
id
$4
2779
*4
$4
HSET
$25
hash:csdn:article:by:2779
$10
categroyId
$1
3
*4
$4
HSET
$25
hash:csdn:article:by:2779
$3
url
$59
http://blog.csdn.net/number1killer/article/details/77799941
*4
$4
HSET
$25
hash:csdn:article:by:2779
$5
title
$58
MYSQL 中group by，order by用法详解及其特殊用法
*4
$4
HSET
$25
hash:csdn:article:by:2779
$4
desc
$251
我们可以看到GROUP BY 是优先对跟在他后面的第一个字段进行排序的并且也只对这一个字段进行排序，而且如果GROUP BY 后面跟的字段不只一个的话，那么GROUP BY就不会再对排序后的结果进行去...
*4
$4
HSET
$25
hash:csdn:article:by:2779
$9
readCount
$2
56
*4
$4
HSET
$25
hash:csdn:article:by:2779
$14
articleContent
$42
csdn/mysql/17_4_1_9_1505001638.053811.html
*4
$4
HSET
$25
hash:csdn:article:by:2779
$4
date
$16
2017-09-02 11:14
*4
$4
HSET
$25
hash:csdn:article:by:2779
$6
author
$13
number1killer
*4
$4
HSET
$25
hash:csdn:article:by:2779
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2779
$9
labelList
$38
mysql,order by,group by,详解,用法,
*4
$4
HSET
$25
hash:csdn:article:by:2779
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2779
$10
authorLink
$32
http://my.csdn.net/number1killer
*4
$4
HSET
$25
hash:csdn:article:by:2779
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2780
$2
id
$4
2780
*4
$4
HSET
$25
hash:csdn:article:by:2780
$10
categroyId
$1
3
*4
$4
HSET
$25
hash:csdn:article:by:2780
$3
url
$59
http://blog.csdn.net/number1killer/article/details/77839529
*4
$4
HSET
$25
hash:csdn:article:by:2780
$5
title
$50
mysql更新，修改语句汇总--update set,alter
*4
$4
HSET
$25
hash:csdn:article:by:2780
$4
desc
$201
update set 语句是mysql最常用的修改和更新语句。
其语法为：
update +表名 +set+ 变更后的信息 +where子句；
alter语句也具有修改的功能。而且alter的功能远远...
*4
$4
HSET
$25
hash:csdn:article:by:2780
$9
readCount
$2
59
*4
$4
HSET
$25
hash:csdn:article:by:2780
$14
articleContent
$43
csdn/mysql/17_4_1_15_1505001640.079859.html
*4
$4
HSET
$25
hash:csdn:article:by:2780
$4
date
$16
2017-09-04 17:24
*4
$4
HSET
$25
hash:csdn:article:by:2780
$6
author
$13
number1killer
*4
$4
HSET
$25
hash:csdn:article:by:2780
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2780
$9
labelList
$37
mysql,更新,alter,update set,修改,
*4
$4
HSET
$25
hash:csdn:article:by:2780
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2780
$10
authorLink
$32
http://my.csdn.net/number1killer
*4
$4
HSET
$25
hash:csdn:article:by:2780
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2781
$2
id
$4
2781
*4
$4
HSET
$25
hash:csdn:article:by:2781
$10
categroyId
$1
3
*4
$4
HSET
$25
hash:csdn:article:by:2781
$3
url
$59
http://blog.csdn.net/number1killer/article/details/77835755
*4
$4
HSET
$25
hash:csdn:article:by:2781
$5
title
$42
mysql的4种复制操作详解（下篇）
*4
$4
HSET
$25
hash:csdn:article:by:2781
$4
desc
$146
3.复制旧表的数据到新表（假设两个表的结构一样）：
4.复制旧表的数据到新表（假设两个表的结构不一样）：
*4
$4
HSET
$25
hash:csdn:article:by:2781
$9
readCount
$2
42
*4
$4
HSET
$25
hash:csdn:article:by:2781
$14
articleContent
$43
csdn/mysql/17_4_1_13_1505001640.150769.html
*4
$4
HSET
$25
hash:csdn:article:by:2781
$4
date
$16
2017-09-04 11:32
*4
$4
HSET
$25
hash:csdn:article:by:2781
$6
author
$13
number1killer
*4
$4
HSET
$25
hash:csdn:article:by:2781
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2781
$9
labelList
$43
mysql,插入数据,表结构,新表,复制,
*4
$4
HSET
$25
hash:csdn:article:by:2781
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2781
$10
authorLink
$32
http://my.csdn.net/number1killer
*4
$4
HSET
$25
hash:csdn:article:by:2781
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2782
$2
id
$4
2782
*4
$4
HSET
$25
hash:csdn:article:by:2782
$10
categroyId
$1
3
*4
$4
HSET
$25
hash:csdn:article:by:2782
$3
url
$59
http://blog.csdn.net/number1killer/article/details/77834693
*4
$4
HSET
$25
hash:csdn:article:by:2782
$5
title
$42
mysql的4种复制操作详解（上篇）
*4
$4
HSET
$25
hash:csdn:article:by:2782
$4
desc
$179
1.只复制表结构到新表
 
 2.复制表结构及数据到新表
 
 
 
 
 
 
 
 
 
 
 
 



1 CREATE TABLE 新表 LIKE 旧表 ;
 
 
 
 
 
 
 
 
...
*4
$4
HSET
$25
hash:csdn:article:by:2782
$9
readCount
$2
51
*4
$4
HSET
$25
hash:csdn:article:by:2782
$14
articleContent
$43
csdn/mysql/17_4_1_14_1505001641.068557.html
*4
$4
HSET
$25
hash:csdn:article:by:2782
$4
date
$16
2017-09-04 11:02
*4
$4
HSET
$25
hash:csdn:article:by:2782
$6
author
$13
number1killer
*4
$4
HSET
$25
hash:csdn:article:by:2782
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2782
$9
labelList
$34
mysql,复制,操作,语句,结构,
*4
$4
HSET
$25
hash:csdn:article:by:2782
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2782
$10
authorLink
$32
http://my.csdn.net/number1killer
*4
$4
HSET
$25
hash:csdn:article:by:2782
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2783
$2
id
$4
2783
*4
$4
HSET
$25
hash:csdn:article:by:2783
$10
categroyId
$1
3
*4
$4
HSET
$25
hash:csdn:article:by:2783
$3
url
$59
http://blog.csdn.net/number1killer/article/details/77833593
*4
$4
HSET
$25
hash:csdn:article:by:2783
$5
title
$56
mysql中几个不用结尾符号也能够执行的语句
*4
$4
HSET
$25
hash:csdn:article:by:2783
$4
desc
$255
众所周知mysql执行每一个可执行语句都是以分号结尾的,也就是说mysql识别语句是否结束，是根据分号决定的。
当然，你也可以用DELIMITER自定义一个语句的结束符号。
不知道大家有没有发现，...
*4
$4
HSET
$25
hash:csdn:article:by:2783
$9
readCount
$2
55
*4
$4
HSET
$25
hash:csdn:article:by:2783
$14
articleContent
$43
csdn/mysql/17_4_1_10_1505001642.031782.html
*4
$4
HSET
$25
hash:csdn:article:by:2783
$4
date
$16
2017-09-04 10:26
*4
$4
HSET
$25
hash:csdn:article:by:2783
$6
author
$13
number1killer
*4
$4
HSET
$25
hash:csdn:article:by:2783
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2783
$9
labelList
$32
mysql,分号,delimiter,use,exit,
*4
$4
HSET
$25
hash:csdn:article:by:2783
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2783
$10
authorLink
$32
http://my.csdn.net/number1killer
*4
$4
HSET
$25
hash:csdn:article:by:2783
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2784
$2
id
$4
2784
*4
$4
HSET
$25
hash:csdn:article:by:2784
$10
categroyId
$1
3
*4
$4
HSET
$25
hash:csdn:article:by:2784
$3
url
$59
http://blog.csdn.net/number1killer/article/details/77841565
*4
$4
HSET
$25
hash:csdn:article:by:2784
$5
title
$40
mysql中insert into语句详解（上）
*4
$4
HSET
$25
hash:csdn:article:by:2784
$4
desc
$227
insert into是mysql中最常用的插入语句，它有5种写法。下面让我们一起来看一看吧：
1向原表中某些字段中插入一条记录。
语法：insert into +表名（表中的字段，，）value（字...
*4
$4
HSET
$25
hash:csdn:article:by:2784
$9
readCount
$2
37
*4
$4
HSET
$25
hash:csdn:article:by:2784
$14
articleContent
$43
csdn/mysql/17_4_1_12_1505001644.163164.html
*4
$4
HSET
$25
hash:csdn:article:by:2784
$4
date
$16
2017-09-04 20:35
*4
$4
HSET
$25
hash:csdn:article:by:2784
$6
author
$13
number1killer
*4
$4
HSET
$25
hash:csdn:article:by:2784
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2784
$9
labelList
$39
mysql,insert into,插入,数字,原表,
*4
$4
HSET
$25
hash:csdn:article:by:2784
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2784
$10
authorLink
$32
http://my.csdn.net/number1killer
*4
$4
HSET
$25
hash:csdn:article:by:2784
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2785
$2
id
$4
2785
*4
$4
HSET
$25
hash:csdn:article:by:2785
$10
categroyId
$1
3
*4
$4
HSET
$25
hash:csdn:article:by:2785
$3
url
$59
http://blog.csdn.net/number1killer/article/details/77883676
*4
$4
HSET
$25
hash:csdn:article:by:2785
$5
title
$35
mysql中条件限制语句（二）
*4
$4
HSET
$25
hash:csdn:article:by:2785
$4
desc
$255
可以看出双百分号%%是全匹配，可以匹配表中的所有记录。那么，即便是NULL值也能够匹配吗？
可以看出当作用于多列的时候distinct就不再返回唯一记录了。
另外distinct还可以和一些数学运算的...
*4
$4
HSET
$25
hash:csdn:article:by:2785
$9
readCount
$3
197
*4
$4
HSET
$25
hash:csdn:article:by:2785
$14
articleContent
$42
csdn/mysql/17_4_1_2_1505001645.161407.html
*4
$4
HSET
$25
hash:csdn:article:by:2785
$4
date
$16
2017-09-07 16:42
*4
$4
HSET
$25
hash:csdn:article:by:2785
$6
author
$13
number1killer
*4
$4
HSET
$25
hash:csdn:article:by:2785
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2785
$9
labelList
$36
mysql,like,全匹配,distinct,limit,
*4
$4
HSET
$25
hash:csdn:article:by:2785
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2785
$10
authorLink
$32
http://my.csdn.net/number1killer
*4
$4
HSET
$25
hash:csdn:article:by:2785
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2786
$2
id
$4
2786
*4
$4
HSET
$25
hash:csdn:article:by:2786
$10
categroyId
$1
3
*4
$4
HSET
$25
hash:csdn:article:by:2786
$3
url
$59
http://blog.csdn.net/number1killer/article/details/77875386
*4
$4
HSET
$25
hash:csdn:article:by:2786
$5
title
$56
mysql最大值，最小值，总和查询与计数查询
*4
$4
HSET
$25
hash:csdn:article:by:2786
$4
desc
$253
我们可以看到尽管SNAME有很多记录，但是如果用SUM去查询它的总和，虽然语法上，并没有错误，但是结果显然是"错误的"。
而换用count来对SNAME来进行计数则没有问题。当然，NULL记录是不会被...
*4
$4
HSET
$25
hash:csdn:article:by:2786
$9
readCount
$2
35
*4
$4
HSET
$25
hash:csdn:article:by:2786
$14
articleContent
$42
csdn/mysql/17_4_1_5_1505001645.585119.html
*4
$4
HSET
$25
hash:csdn:article:by:2786
$4
date
$16
2017-09-06 23:26
*4
$4
HSET
$25
hash:csdn:article:by:2786
$6
author
$13
number1killer
*4
$4
HSET
$25
hash:csdn:article:by:2786
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2786
$9
labelList
$40
mysql,最大值,最小值,总和,计数,
*4
$4
HSET
$25
hash:csdn:article:by:2786
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2786
$10
authorLink
$32
http://my.csdn.net/number1killer
*4
$4
HSET
$25
hash:csdn:article:by:2786
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2787
$2
id
$4
2787
*4
$4
HSET
$25
hash:csdn:article:by:2787
$10
categroyId
$1
3
*4
$4
HSET
$25
hash:csdn:article:by:2787
$3
url
$59
http://blog.csdn.net/number1killer/article/details/77862638
*4
$4
HSET
$25
hash:csdn:article:by:2787
$5
title
$32
mysql删除语句大全（上）
*4
$4
HSET
$25
hash:csdn:article:by:2787
$4
desc
$239
1.drop语句。可以用来删除数据库和表。2.delete语句。用来删除表中的字段：
A通过where子句来指定删除表中的某个记录：注意：如果delete语句中没有加入where就会把表中的所有记录全...
*4
$4
HSET
$25
hash:csdn:article:by:2787
$9
readCount
$2
45
*4
$4
HSET
$25
hash:csdn:article:by:2787
$14
articleContent
$42
csdn/mysql/17_4_1_7_1505001646.441938.html
*4
$4
HSET
$25
hash:csdn:article:by:2787
$4
date
$16
2017-09-06 09:58
*4
$4
HSET
$25
hash:csdn:article:by:2787
$6
author
$13
number1killer
*4
$4
HSET
$25
hash:csdn:article:by:2787
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2787
$9
labelList
$34
mysql,drop,delete,truncate,删除,
*4
$4
HSET
$25
hash:csdn:article:by:2787
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2787
$10
authorLink
$32
http://my.csdn.net/number1killer
*4
$4
HSET
$25
hash:csdn:article:by:2787
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2788
$2
id
$4
2788
*4
$4
HSET
$25
hash:csdn:article:by:2788
$10
categroyId
$1
3
*4
$4
HSET
$25
hash:csdn:article:by:2788
$3
url
$59
http://blog.csdn.net/number1killer/article/details/77775399
*4
$4
HSET
$25
hash:csdn:article:by:2788
$5
title
$37
mysql中char与varchar的区别分析
*4
$4
HSET
$25
hash:csdn:article:by:2788
$4
desc
$249
char是一种固定长度的类型，varchar则是一种可变长度的类型 
　　char(M)类型的数据列里，每个值都占用M个字节，如果某个长度小于M，MySQL就会在它的右边用空格字符补足．（在检索操作中...
*4
$4
HSET
$25
hash:csdn:article:by:2788
$9
readCount
$2
80
*4
$4
HSET
$25
hash:csdn:article:by:2788
$14
articleContent
$42
csdn/mysql/17_4_1_8_1505001647.319842.html
*4
$4
HSET
$25
hash:csdn:article:by:2788
$4
date
$16
2017-09-01 17:19
*4
$4
HSET
$25
hash:csdn:article:by:2788
$6
author
$13
number1killer
*4
$4
HSET
$25
hash:csdn:article:by:2788
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2788
$9
labelList
$33
mysql,char,varchar,区别,分析,
*4
$4
HSET
$25
hash:csdn:article:by:2788
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2788
$10
authorLink
$32
http://my.csdn.net/number1killer
*4
$4
HSET
$25
hash:csdn:article:by:2788
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2789
$2
id
$4
2789
*4
$4
HSET
$25
hash:csdn:article:by:2789
$10
categroyId
$1
3
*4
$4
HSET
$25
hash:csdn:article:by:2789
$3
url
$59
http://blog.csdn.net/number1killer/article/details/77866298
*4
$4
HSET
$25
hash:csdn:article:by:2789
$5
title
$32
mysql删除语句大全（下）
*4
$4
HSET
$25
hash:csdn:article:by:2789
$4
desc
$235
4.update set 语句是mysql最常用的修改和更新语句，它更新信息时也会覆盖（删除）旧的信息。
注意：如果变更信息后面没有加where子句指定其变更的内容，那么update set语句就会把...
*4
$4
HSET
$25
hash:csdn:article:by:2789
$9
readCount
$3
124
*4
$4
HSET
$25
hash:csdn:article:by:2789
$14
articleContent
$42
csdn/mysql/17_4_1_6_1505001648.643907.html
*4
$4
HSET
$25
hash:csdn:article:by:2789
$4
date
$16
2017-09-06 14:48
*4
$4
HSET
$25
hash:csdn:article:by:2789
$6
author
$13
number1killer
*4
$4
HSET
$25
hash:csdn:article:by:2789
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2789
$9
labelList
$42
mysql,update set,alter drop,索引,删除,
*4
$4
HSET
$25
hash:csdn:article:by:2789
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2789
$10
authorLink
$32
http://my.csdn.net/number1killer
*4
$4
HSET
$25
hash:csdn:article:by:2789
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2790
$2
id
$4
2790
*4
$4
HSET
$25
hash:csdn:article:by:2790
$10
categroyId
$1
3
*4
$4
HSET
$25
hash:csdn:article:by:2790
$3
url
$59
http://blog.csdn.net/number1killer/article/details/77878754
*4
$4
HSET
$25
hash:csdn:article:by:2790
$5
title
$35
mysql中条件限制语句（一）
*4
$4
HSET
$25
hash:csdn:article:by:2790
$4
desc
$249
显然where的功能要比in强大得多，因此where的命令优先级也比高一些。而相同条件下where的搜寻范围也比in要大一点---毕竟功能多了，要搜寻的东西就多了。所以，相同的查询条件下where的效...
*4
$4
HSET
$25
hash:csdn:article:by:2790
$9
readCount
$3
122
*4
$4
HSET
$25
hash:csdn:article:by:2790
$14
articleContent
$42
csdn/mysql/17_4_1_3_1505001649.911091.html
*4
$4
HSET
$25
hash:csdn:article:by:2790
$4
date
$16
2017-09-07 11:01
*4
$4
HSET
$25
hash:csdn:article:by:2790
$6
author
$13
number1killer
*4
$4
HSET
$25
hash:csdn:article:by:2790
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2790
$9
labelList
$28
mysql,between and,and,or,in,
*4
$4
HSET
$25
hash:csdn:article:by:2790
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2790
$10
authorLink
$32
http://my.csdn.net/number1killer
*4
$4
HSET
$25
hash:csdn:article:by:2790
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2791
$2
id
$4
2791
*4
$4
HSET
$25
hash:csdn:article:by:2791
$10
categroyId
$1
3
*4
$4
HSET
$25
hash:csdn:article:by:2791
$3
url
$59
http://blog.csdn.net/number1killer/article/details/77878047
*4
$4
HSET
$25
hash:csdn:article:by:2791
$5
title
$66
mysql加减乘除，求余，求平均值,查询不等于某数值
*4
$4
HSET
$25
hash:csdn:article:by:2791
$4
desc
$117
1.mysql加减乘除操作：
mysql> select score,score+5,score-5,score*5,score/5 from 4a;
+-------+---------+---...
*4
$4
HSET
$25
hash:csdn:article:by:2791
$9
readCount
$2
98
*4
$4
HSET
$25
hash:csdn:article:by:2791
$14
articleContent
$42
csdn/mysql/17_4_1_4_1505001650.292154.html
*4
$4
HSET
$25
hash:csdn:article:by:2791
$4
date
$16
2017-09-07 10:25
*4
$4
HSET
$25
hash:csdn:article:by:2791
$6
author
$13
number1killer
*4
$4
HSET
$25
hash:csdn:article:by:2791
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2791
$9
labelList
$61
mysql,加减乘除,求余,求平均值,求不等于某数值,
*4
$4
HSET
$25
hash:csdn:article:by:2791
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2791
$10
authorLink
$32
http://my.csdn.net/number1killer
*4
$4
HSET
$25
hash:csdn:article:by:2791
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2792
$2
id
$4
2792
*4
$4
HSET
$25
hash:csdn:article:by:2792
$10
categroyId
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2792
$3
url
$56
http://blog.csdn.net/u013239111/article/details/77870085
*4
$4
HSET
$25
hash:csdn:article:by:2792
$5
title
$28
设计模式-观察者模式
*4
$4
HSET
$25
hash:csdn:article:by:2792
$4
desc
$299
在我们日常生活中，有些人会有订阅报纸的经历，当我们订阅时，都能定时的收到报纸，当我么取消订阅时，就不会再收到报纸。 
当然，互联网普及之后，报纸逐渐减少。但是类似的也有许多，例如微信的公众号，当我们订...
*4
$4
HSET
$25
hash:csdn:article:by:2792
$9
readCount
$3
183
*4
$4
HSET
$25
hash:csdn:article:by:2792
$14
articleContent
$41
csdn/mode/37_5_1_0_1505001777.996892.html
*4
$4
HSET
$25
hash:csdn:article:by:2792
$4
date
$16
2017-09-09 13:15
*4
$4
HSET
$25
hash:csdn:article:by:2792
$6
author
$10
u013239111
*4
$4
HSET
$25
hash:csdn:article:by:2792
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2792
$9
labelList
$34
设计模式,观察者模式,java,
*4
$4
HSET
$25
hash:csdn:article:by:2792
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2792
$10
authorLink
$29
http://my.csdn.net/u013239111
*4
$4
HSET
$25
hash:csdn:article:by:2792
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2793
$2
id
$4
2793
*4
$4
HSET
$25
hash:csdn:article:by:2793
$10
categroyId
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2793
$3
url
$56
http://blog.csdn.net/u013239111/article/details/77870086
*4
$4
HSET
$25
hash:csdn:article:by:2793
$5
title
$28
设计模式-中介者模式
*4
$4
HSET
$25
hash:csdn:article:by:2793
$4
desc
$303
在我们的日常生活中经常需要购买各种各样的东西，房子、车子、生活用品等等。那么我们并不会对各个产品都了解，所以销售人员应运而生，他们了解产品，然后他们根据你的需求在向你们推荐符合你们要求的产品。这些销售...
*4
$4
HSET
$25
hash:csdn:article:by:2793
$9
readCount
$3
200
*4
$4
HSET
$25
hash:csdn:article:by:2793
$14
articleContent
$41
csdn/mode/37_4_1_0_1505174526.090284.html
*4
$4
HSET
$25
hash:csdn:article:by:2793
$4
date
$16
2017-09-10 21:09
*4
$4
HSET
$25
hash:csdn:article:by:2793
$6
author
$10
u013239111
*4
$4
HSET
$25
hash:csdn:article:by:2793
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2793
$9
labelList
$53
设计模式,中介者模式,java设计模式,解耦,
*4
$4
HSET
$25
hash:csdn:article:by:2793
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2793
$10
authorLink
$29
http://my.csdn.net/u013239111
*4
$4
HSET
$25
hash:csdn:article:by:2793
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2794
$2
id
$4
2794
*4
$4
HSET
$25
hash:csdn:article:by:2794
$10
categroyId
$1
3
*4
$4
HSET
$25
hash:csdn:article:by:2794
$3
url
$57
http://blog.csdn.net/qq_35246620/article/details/77914472
*4
$4
HSET
$25
hash:csdn:article:by:2794
$5
title
$67
史上最简单的 MySQL 教程（三十四）「视图（下）」
*4
$4
HSET
$25
hash:csdn:article:by:2794
$4
desc
$96
视图操作视图操作：视图是可以进行数据写操作的，只不过有很多限制。
*4
$4
HSET
$25
hash:csdn:article:by:2794
$9
readCount
$3
257
*4
$4
HSET
$25
hash:csdn:article:by:2794
$14
articleContent
$42
csdn/mysql/17_3_1_0_1505174540.535324.html
*4
$4
HSET
$25
hash:csdn:article:by:2794
$4
date
$16
2017-09-09 12:52
*4
$4
HSET
$25
hash:csdn:article:by:2794
$6
author
$11
qq_35246620
*4
$4
HSET
$25
hash:csdn:article:by:2794
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2794
$9
labelList
$28
mysql,view,视图,数据库,
*4
$4
HSET
$25
hash:csdn:article:by:2794
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2794
$10
authorLink
$30
http://my.csdn.net/qq_35246620
*4
$4
HSET
$25
hash:csdn:article:by:2794
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2795
$2
id
$4
2795
*4
$4
HSET
$25
hash:csdn:article:by:2795
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2795
$3
url
$57
http://blog.csdn.net/qq_19558705/article/details/77247912
*4
$4
HSET
$25
hash:csdn:article:by:2795
$5
title
$58
架构师入门笔记八 并发框架Disruptor场景应用
*4
$4
HSET
$25
hash:csdn:article:by:2795
$4
desc
$261
架构师入门笔记八 并发框架Disruptor场景应用
今天用一个停车场问题来加深对Disruptor的理解。一个有关汽车进入停车场的问题。当汽车进入停车场时，系统首先会记录汽车信息。同时也会发送消息...
*4
$4
HSET
$25
hash:csdn:article:by:2795
$9
readCount
$3
395
*4
$4
HSET
$25
hash:csdn:article:by:2795
$14
articleContent
$40
csdn/java/37_1_1_0_1505260887.14977.html
*4
$4
HSET
$25
hash:csdn:article:by:2795
$4
date
$16
2017-09-09 16:31
*4
$4
HSET
$25
hash:csdn:article:by:2795
$6
author
$11
qq_19558705
*4
$4
HSET
$25
hash:csdn:article:by:2795
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2795
$9
labelList
$20
架构师,Disruptor,
*4
$4
HSET
$25
hash:csdn:article:by:2795
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2795
$10
authorLink
$30
http://my.csdn.net/qq_19558705
*4
$4
HSET
$25
hash:csdn:article:by:2795
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2796
$2
id
$4
2796
*4
$4
HSET
$25
hash:csdn:article:by:2796
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2796
$3
url
$57
http://blog.csdn.net/qq_19558705/article/details/77116949
*4
$4
HSET
$25
hash:csdn:article:by:2796
$5
title
$58
架构师入门笔记七 并发框架Disruptor快速入门
*4
$4
HSET
$25
hash:csdn:article:by:2796
$4
desc
$223
架构师入门笔记七 并发框架Disruptor快速入门
1. 什么是Disruptor
Disruptor它是一个高性能的异步处理的开源并发框架，能够在无锁的情况下实现网络的Queue并发操作。可以...
*4
$4
HSET
$25
hash:csdn:article:by:2796
$9
readCount
$3
397
*4
$4
HSET
$25
hash:csdn:article:by:2796
$14
articleContent
$41
csdn/java/37_1_1_1_1505260888.359308.html
*4
$4
HSET
$25
hash:csdn:article:by:2796
$4
date
$16
2017-09-01 21:46
*4
$4
HSET
$25
hash:csdn:article:by:2796
$6
author
$11
qq_19558705
*4
$4
HSET
$25
hash:csdn:article:by:2796
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2796
$9
labelList
$20
架构师,Disruptor,
*4
$4
HSET
$25
hash:csdn:article:by:2796
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2796
$10
authorLink
$30
http://my.csdn.net/qq_19558705
*4
$4
HSET
$25
hash:csdn:article:by:2796
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2797
$2
id
$4
2797
*4
$4
HSET
$25
hash:csdn:article:by:2797
$10
categroyId
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2797
$3
url
$52
http://blog.csdn.net/vtopqx/article/details/78052976
*4
$4
HSET
$25
hash:csdn:article:by:2797
$5
title
$44
Java设计模式_(结构型)_适配器模式
*4
$4
HSET
$25
hash:csdn:article:by:2797
$4
desc
$301
引用百科	在计算机编程中，适配器模式（有时候也称包装样式或者包装）将一个类的接口适配成用户所期待的。一个适配允许通常因为接口不兼容而不能在一起工作的类工作在一起，做法是将类自己的接口包裹在一个已存在的...
*4
$4
HSET
$25
hash:csdn:article:by:2797
$9
readCount
$3
116
*4
$4
HSET
$25
hash:csdn:article:by:2797
$14
articleContent
$40
csdn/mode/37_2_1_0_1506038455.68991.html
*4
$4
HSET
$25
hash:csdn:article:by:2797
$4
date
$16
2017-09-21 15:54
*4
$4
HSET
$25
hash:csdn:article:by:2797
$6
author
$6
vtopqx
*4
$4
HSET
$25
hash:csdn:article:by:2797
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2797
$9
labelList
$46
java设计模式,设计模式,适配器模式,
*4
$4
HSET
$25
hash:csdn:article:by:2797
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2797
$10
authorLink
$25
http://my.csdn.net/vtopqx
*4
$4
HSET
$25
hash:csdn:article:by:2797
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2798
$2
id
$4
2798
*4
$4
HSET
$25
hash:csdn:article:by:2798
$10
categroyId
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2798
$3
url
$52
http://blog.csdn.net/vtopqx/article/details/78042555
*4
$4
HSET
$25
hash:csdn:article:by:2798
$5
title
$44
Java设计模式_(创建型)_建造者模式
*4
$4
HSET
$25
hash:csdn:article:by:2798
$4
desc
$291
引用百科   建造者模式是设计模式的一种，将一个复杂对象的构建与它的表示分离，使得同样的构建过程可以创建不同的表示。实用范围1 当创建复杂对象的算法应该独立于该对象的组成部分以及它们的装配方式时。2 ...
*4
$4
HSET
$25
hash:csdn:article:by:2798
$9
readCount
$3
262
*4
$4
HSET
$25
hash:csdn:article:by:2798
$14
articleContent
$41
csdn/mode/37_2_1_1_1506038456.749904.html
*4
$4
HSET
$25
hash:csdn:article:by:2798
$4
date
$16
2017-09-20 16:40
*4
$4
HSET
$25
hash:csdn:article:by:2798
$6
author
$6
vtopqx
*4
$4
HSET
$25
hash:csdn:article:by:2798
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2798
$9
labelList
$46
设计模式,java设计模式,建造者模式,
*4
$4
HSET
$25
hash:csdn:article:by:2798
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2798
$10
authorLink
$25
http://my.csdn.net/vtopqx
*4
$4
HSET
$25
hash:csdn:article:by:2798
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2799
$2
id
$4
2799
*4
$4
HSET
$25
hash:csdn:article:by:2799
$10
categroyId
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2799
$3
url
$52
http://blog.csdn.net/vtopqx/article/details/78032366
*4
$4
HSET
$25
hash:csdn:article:by:2799
$5
title
$41
Java设计模式_(创建型)_原型模式
*4
$4
HSET
$25
hash:csdn:article:by:2799
$4
desc
$267
引用百科：用原型实例指定创建对象的种类，并且通过拷贝这些原型创建新的对象。Prototype原型模式是一种创建型设计模式，Prototype模式允许一个对象再创建另外一个可定制的对象，根本无需知道任何...
*4
$4
HSET
$25
hash:csdn:article:by:2799
$9
readCount
$3
297
*4
$4
HSET
$25
hash:csdn:article:by:2799
$14
articleContent
$41
csdn/mode/37_2_1_2_1506038457.690015.html
*4
$4
HSET
$25
hash:csdn:article:by:2799
$4
date
$16
2017-09-19 17:19
*4
$4
HSET
$25
hash:csdn:article:by:2799
$6
author
$6
vtopqx
*4
$4
HSET
$25
hash:csdn:article:by:2799
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2799
$9
labelList
$35
java,java设计模式,原型模式,
*4
$4
HSET
$25
hash:csdn:article:by:2799
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2799
$10
authorLink
$25
http://my.csdn.net/vtopqx
*4
$4
HSET
$25
hash:csdn:article:by:2799
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2800
$2
id
$4
2800
*4
$4
HSET
$25
hash:csdn:article:by:2800
$10
categroyId
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2800
$3
url
$52
http://blog.csdn.net/vtopqx/article/details/77852523
*4
$4
HSET
$25
hash:csdn:article:by:2800
$5
title
$41
Java设计模式_(创建型)_单例模式
*4
$4
HSET
$25
hash:csdn:article:by:2800
$4
desc
$279
1  概述单例模式，是一种常用的软件设计模式。在它的核心结构中只包含一个被称为单例的特殊类。通过单例模式可以保证系统中一个类只有一个实例。即一个类只有一个对象实例.数学与逻辑学中，singleton定...
*4
$4
HSET
$25
hash:csdn:article:by:2800
$9
readCount
$3
120
*4
$4
HSET
$25
hash:csdn:article:by:2800
$14
articleContent
$41
csdn/mode/37_2_1_4_1506038458.703667.html
*4
$4
HSET
$25
hash:csdn:article:by:2800
$4
date
$16
2017-09-05 15:57
*4
$4
HSET
$25
hash:csdn:article:by:2800
$6
author
$6
vtopqx
*4
$4
HSET
$25
hash:csdn:article:by:2800
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2800
$9
labelList
$44
设计模式,java 设计模式,单例模式,
*4
$4
HSET
$25
hash:csdn:article:by:2800
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2800
$10
authorLink
$25
http://my.csdn.net/vtopqx
*4
$4
HSET
$25
hash:csdn:article:by:2800
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2801
$2
id
$4
2801
*4
$4
HSET
$25
hash:csdn:article:by:2801
$10
categroyId
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2801
$3
url
$52
http://blog.csdn.net/vtopqx/article/details/78024523
*4
$4
HSET
$25
hash:csdn:article:by:2801
$5
title
$47
Java设计模式_(创建型)_抽象工厂模式
*4
$4
HSET
$25
hash:csdn:article:by:2801
$4
desc
$301
引用百科：	抽象工厂模式是所有形态的工厂模式中最为抽象和最具一般性的一种形态。抽象工厂模式是指当有多个抽象角色时，使用的一种工厂模式。抽象工厂模式可以向客户端提供一个接口，使客户端在不必指定产品的具体...
*4
$4
HSET
$25
hash:csdn:article:by:2801
$9
readCount
$2
93
*4
$4
HSET
$25
hash:csdn:article:by:2801
$14
articleContent
$41
csdn/mode/37_2_1_6_1506038459.745736.html
*4
$4
HSET
$25
hash:csdn:article:by:2801
$4
date
$16
2017-09-18 22:20
*4
$4
HSET
$25
hash:csdn:article:by:2801
$6
author
$6
vtopqx
*4
$4
HSET
$25
hash:csdn:article:by:2801
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2801
$9
labelList
$49
抽象工厂模式,设计模式,java抽象工厂,
*4
$4
HSET
$25
hash:csdn:article:by:2801
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2801
$10
authorLink
$25
http://my.csdn.net/vtopqx
*4
$4
HSET
$25
hash:csdn:article:by:2801
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2802
$2
id
$4
2802
*4
$4
HSET
$25
hash:csdn:article:by:2802
$10
categroyId
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2802
$3
url
$52
http://blog.csdn.net/vtopqx/article/details/77968734
*4
$4
HSET
$25
hash:csdn:article:by:2802
$5
title
$41
Java设计模式_(创建型)_工厂模式
*4
$4
HSET
$25
hash:csdn:article:by:2802
$4
desc
$273
引用百科：  	工厂模式是我们最常用的实例化对象模式了，是用工厂方法代替new操作的一种模式。著名的Jive论坛 ,就大量使用了工厂模式，工厂模式在Java程序系统可以说是随处可见。因为工厂模式就相当...
*4
$4
HSET
$25
hash:csdn:article:by:2802
$9
readCount
$2
56
*4
$4
HSET
$25
hash:csdn:article:by:2802
$14
articleContent
$41
csdn/mode/37_2_1_5_1506038460.410604.html
*4
$4
HSET
$25
hash:csdn:article:by:2802
$4
date
$16
2017-09-13 18:09
*4
$4
HSET
$25
hash:csdn:article:by:2802
$6
author
$6
vtopqx
*4
$4
HSET
$25
hash:csdn:article:by:2802
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2802
$9
labelList
$35
java,java设计模式,工厂模式,
*4
$4
HSET
$25
hash:csdn:article:by:2802
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2802
$10
authorLink
$25
http://my.csdn.net/vtopqx
*4
$4
HSET
$25
hash:csdn:article:by:2802
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2803
$2
id
$4
2803
*4
$4
HSET
$25
hash:csdn:article:by:2803
$10
categroyId
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2803
$3
url
$52
http://blog.csdn.net/vtopqx/article/details/77852319
*4
$4
HSET
$25
hash:csdn:article:by:2803
$5
title
$23
Java设计模式_描述
*4
$4
HSET
$25
hash:csdn:article:by:2803
$4
desc
$273
概述：设计模式（Design Pattern）是一套被反复使用、多数人知晓的、经过分类的、代码设计经验的总结。使用设计模式的目的：为了代码可重用性、让代码更容易被他人理解、保证代码可靠性。 设计模式使...
*4
$4
HSET
$25
hash:csdn:article:by:2803
$9
readCount
$2
80
*4
$4
HSET
$25
hash:csdn:article:by:2803
$14
articleContent
$41
csdn/mode/37_2_1_3_1506038461.703039.html
*4
$4
HSET
$25
hash:csdn:article:by:2803
$4
date
$16
2017-09-05 15:50
*4
$4
HSET
$25
hash:csdn:article:by:2803
$6
author
$6
vtopqx
*4
$4
HSET
$25
hash:csdn:article:by:2803
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2803
$9
labelList
$49
设计模式,java 设计模式,23中设计模式,
*4
$4
HSET
$25
hash:csdn:article:by:2803
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2803
$10
authorLink
$25
http://my.csdn.net/vtopqx
*4
$4
HSET
$25
hash:csdn:article:by:2803
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2804
$2
id
$4
2804
*4
$4
HSET
$25
hash:csdn:article:by:2804
$10
categroyId
$1
2
*4
$4
HSET
$25
hash:csdn:article:by:2804
$3
url
$57
http://blog.csdn.net/qq_19558705/article/details/77678432
*4
$4
HSET
$25
hash:csdn:article:by:2804
$5
title
$43
架构师入门笔记十 Netty5快速入门
*4
$4
HSET
$25
hash:csdn:article:by:2804
$4
desc
$223
架构师入门笔记十 Netty5快速入门


在了解IO，NIO，AIO知识后，学习Netty5便会轻松很多，本章节主要介绍Netty是如何接收，反馈数据和拆包粘包的问题。



1 Netty基础知识...
*4
$4
HSET
$25
hash:csdn:article:by:2804
$9
readCount
$2
29
*4
$4
HSET
$25
hash:csdn:article:by:2804
$14
articleContent
$41
csdn/java/37_3_1_0_1506094316.615497.html
*4
$4
HSET
$25
hash:csdn:article:by:2804
$4
date
$16
2017-09-22 15:40
*4
$4
HSET
$25
hash:csdn:article:by:2804
$6
author
$11
qq_19558705
*4
$4
HSET
$25
hash:csdn:article:by:2804
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2804
$9
labelList
$17
架构师,netty5,
*4
$4
HSET
$25
hash:csdn:article:by:2804
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2804
$10
authorLink
$30
http://my.csdn.net/qq_19558705
*4
$4
HSET
$25
hash:csdn:article:by:2804
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2805
$2
id
$4
2805
*4
$4
HSET
$25
hash:csdn:article:by:2805
$10
categroyId
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2805
$3
url
$52
http://blog.csdn.net/vtopqx/article/details/78063578
*4
$4
HSET
$25
hash:csdn:article:by:2805
$5
title
$41
Java设计模式_(结构型)_组合模式
*4
$4
HSET
$25
hash:csdn:article:by:2805
$4
desc
$287
引用百科组合模式，将对象组合成树形结构以表示“部分-整体”的层次结构，组合模式使得用户对单个对象和组合对象的使用具有一致性。掌握组合模式的重点是要理解清楚 “部分/整体” 还有 ”单个对象“ 与 "组...
*4
$4
HSET
$25
hash:csdn:article:by:2805
$9
readCount
$3
186
*4
$4
HSET
$25
hash:csdn:article:by:2805
$14
articleContent
$41
csdn/mode/37_0_1_0_1506211257.721213.html
*4
$4
HSET
$25
hash:csdn:article:by:2805
$4
date
$16
2017-09-22 15:37
*4
$4
HSET
$25
hash:csdn:article:by:2805
$6
author
$6
vtopqx
*4
$4
HSET
$25
hash:csdn:article:by:2805
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2805
$9
labelList
$66
java 设计模式,23中设计模式,组合模式,java组合模式,
*4
$4
HSET
$25
hash:csdn:article:by:2805
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2805
$10
authorLink
$25
http://my.csdn.net/vtopqx
*4
$4
HSET
$25
hash:csdn:article:by:2805
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2806
$2
id
$4
2806
*4
$4
HSET
$25
hash:csdn:article:by:2806
$10
categroyId
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2806
$3
url
$52
http://blog.csdn.net/vtopqx/article/details/78085256
*4
$4
HSET
$25
hash:csdn:article:by:2806
$5
title
$41
Java设计模式_(结构型)_外观模式
*4
$4
HSET
$25
hash:csdn:article:by:2806
$4
desc
$265
引用百科外观模式（Facade），为子系统中的一组接口提供一个一致的界面，定义一个高层接口，这个接口使得这一子系统更加容易使用。Facade这个外观类为子系统提供一个共同的对外接口Clients客户对...
*4
$4
HSET
$25
hash:csdn:article:by:2806
$9
readCount
$2
43
*4
$4
HSET
$25
hash:csdn:article:by:2806
$14
articleContent
$41
csdn/mode/37_5_1_0_1506384042.670113.html
*4
$4
HSET
$25
hash:csdn:article:by:2806
$4
date
$16
2017-09-25 14:54
*4
$4
HSET
$25
hash:csdn:article:by:2806
$6
author
$6
vtopqx
*4
$4
HSET
$25
hash:csdn:article:by:2806
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2806
$9
labelList
$66
23中设计模式,java,java设计模式,外观模式,门面模式,
*4
$4
HSET
$25
hash:csdn:article:by:2806
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2806
$10
authorLink
$25
http://my.csdn.net/vtopqx
*4
$4
HSET
$25
hash:csdn:article:by:2806
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2807
$2
id
$4
2807
*4
$4
HSET
$25
hash:csdn:article:by:2807
$10
categroyId
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2807
$3
url
$52
http://blog.csdn.net/vtopqx/article/details/78107933
*4
$4
HSET
$25
hash:csdn:article:by:2807
$5
title
$41
Java设计模式_(结构型)_代理模式
*4
$4
HSET
$25
hash:csdn:article:by:2807
$4
desc
$273
引用百科即Proxy Pattern，23种常用的面向对象软件的设计模式之一。代理模式的定义：为其他对象提供一种代理以控制对这个对象的访问。在某些情况下，一个对象不适合或者不能直接引用另一个对象，而代...
*4
$4
HSET
$25
hash:csdn:article:by:2807
$9
readCount
$3
180
*4
$4
HSET
$25
hash:csdn:article:by:2807
$14
articleContent
$41
csdn/mode/37_2_1_0_1506556848.581732.html
*4
$4
HSET
$25
hash:csdn:article:by:2807
$4
date
$16
2017-09-26 22:44
*4
$4
HSET
$25
hash:csdn:article:by:2807
$6
author
$6
vtopqx
*4
$4
HSET
$25
hash:csdn:article:by:2807
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2807
$9
labelList
$48
java设计模式,23中设计模式,代理模式,
*4
$4
HSET
$25
hash:csdn:article:by:2807
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2807
$10
authorLink
$25
http://my.csdn.net/vtopqx
*4
$4
HSET
$25
hash:csdn:article:by:2807
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2808
$2
id
$4
2808
*4
$4
HSET
$25
hash:csdn:article:by:2808
$10
categroyId
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2808
$3
url
$52
http://blog.csdn.net/vtopqx/article/details/78091917
*4
$4
HSET
$25
hash:csdn:article:by:2808
$5
title
$41
Java设计模式_(结构型)_桥接模式
*4
$4
HSET
$25
hash:csdn:article:by:2808
$4
desc
$245
引用百科	桥接模式是将抽象部分与它的实现部分分离，使它们都可以独立地变化。它是一种对象结构型模式，又称为柄体(Handle and Body)模式或接口(Interface)模式。在软件系统中，某些类...
*4
$4
HSET
$25
hash:csdn:article:by:2808
$9
readCount
$2
46
*4
$4
HSET
$25
hash:csdn:article:by:2808
$14
articleContent
$41
csdn/mode/37_2_1_1_1506556849.585141.html
*4
$4
HSET
$25
hash:csdn:article:by:2808
$4
date
$16
2017-09-26 09:44
*4
$4
HSET
$25
hash:csdn:article:by:2808
$6
author
$6
vtopqx
*4
$4
HSET
$25
hash:csdn:article:by:2808
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2808
$9
labelList
$61
23中设计模式,设计模式,java设计模式,桥接模式,
*4
$4
HSET
$25
hash:csdn:article:by:2808
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2808
$10
authorLink
$25
http://my.csdn.net/vtopqx
*4
$4
HSET
$25
hash:csdn:article:by:2808
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2809
$2
id
$4
2809
*4
$4
HSET
$25
hash:csdn:article:by:2809
$10
categroyId
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2809
$3
url
$52
http://blog.csdn.net/vtopqx/article/details/78134465
*4
$4
HSET
$25
hash:csdn:article:by:2809
$5
title
$41
Java设计模式_(结构型)_装饰模式
*4
$4
HSET
$25
hash:csdn:article:by:2809
$4
desc
$297
引用百科	装饰模式指的是在不必改变原类文件和使用继承的情况下，动态地扩展一个对象的功能。它是通过创建一个包装对象，也就是装饰来包裹真实的对象。特点（1） 装饰对象和真实对象有相同的接口。这样客户端对象...
*4
$4
HSET
$25
hash:csdn:article:by:2809
$9
readCount
$3
231
*4
$4
HSET
$25
hash:csdn:article:by:2809
$14
articleContent
$41
csdn/mode/37_4_1_0_1506729620.506558.html
*4
$4
HSET
$25
hash:csdn:article:by:2809
$4
date
$16
2017-09-29 15:38
*4
$4
HSET
$25
hash:csdn:article:by:2809
$6
author
$6
vtopqx
*4
$4
HSET
$25
hash:csdn:article:by:2809
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2809
$9
labelList
$48
23中设计模式,java设计模式,装饰模式,
*4
$4
HSET
$25
hash:csdn:article:by:2809
$9
likeCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2809
$10
authorLink
$25
http://my.csdn.net/vtopqx
*4
$4
HSET
$25
hash:csdn:article:by:2809
$6
status
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2810
$2
id
$4
2810
*4
$4
HSET
$25
hash:csdn:article:by:2810
$10
categroyId
$1
3
*4
$4
HSET
$25
hash:csdn:article:by:2810
$3
url
$57
http://blog.csdn.net/l1028386804/article/details/70544014
*4
$4
HSET
$25
hash:csdn:article:by:2810
$5
title
$32
MySQL之——集群的那些事
*4
$4
HSET
$25
hash:csdn:article:by:2810
$4
desc
$295
1   数据复制技术简介
数据库复制是指频繁的将数据从一个节点（服务器上的一个数据库）复制到另一个节点，可以将数据库复制系统看作一个分布式数据库，但是其中所有节点共享相同的信息。这类系统也称为数据库集...
*4
$4
HSET
$25
hash:csdn:article:by:2810
$9
readCount
$3
182
*4
$4
HSET
$25
hash:csdn:article:by:2810
$14
articleContent
$39
csdn/mysql/17_5_1_0_1506729669.112.html
*4
$4
HSET
$25
hash:csdn:article:by:2810
$4
date
$16
2017-09-05 22:39
*4
$4
HSET
$25
hash:csdn:article:by:2810
$6
author
$11
l1028386804
*4
$4
HSET
$25
hash:csdn:article:by:2810
$12
commentCount
$1
0
*4
$4
HSET
$25
hash:csdn:article:by:2810
$9
labelList
$6
mysql,
*4
$4
HSET
$25
hash:csdn:article:by:2810
$9
likeCount
$1
1
*4
$4
HSET
$25
hash:csdn:article:by:2810
$10
authorLink
$30
http://my.csdn.net/l1028386804
*4
$4
HSET
$25
hash:csdn:article:by:2810
$6
status
$1
1
*4
$4
HSET
$17
hash:menCacheKeys
$12
csdn_article
$4
true
*4
$4
HSET
$22
hash:article:by:100032
$2
id
$6
100032
*4
$4
HSET
$22
hash:article:by:100032
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100032
$9
articleId
$4
2019
*4
$4
HSET
$22
hash:article:by:100032
$5
title
$70
史上最简单的 MySQL 教程（三十二）「子查询（下）」
*4
$4
HSET
$22
hash:article:by:100032
$10
categoryId
$1
3
*4
$4
HSET
$22
hash:article:by:100032
$8
labelIds
$13
[7,8,9,10,11]
*4
$4
HSET
$22
hash:article:by:100032
$6
digest
$261
子查询子查询：sub query，查询是在某个查询结果之上进行的，一条select语句内部包含了另外一条select语句。行子查询行子查询，返回的结果可以使一行多列或者多行多列。需求：查询学生表中，年...
*4
$4
HSET
$22
hash:article:by:100032
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100032
$7
content
$41
csdn/mysql/17_0_1_0_1504235138.68905.html
*4
$4
HSET
$22
hash:article:by:100032
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100032
$10
readAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100032
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100032
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100032
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100032
$9
topStatus
$1
1
*4
$4
HSET
$22
hash:article:by:100032
$10
topEndTime
$13
1509494400000
*4
$4
HSET
$22
hash:article:by:100032
$10
createTime
$13
1503802800000
*4
$4
HSET
$22
hash:article:by:100032
$11
releaseTime
$13
1503802800000
*4
$4
HSET
$22
hash:article:by:100032
$10
updateTime
$13
1503802800000
*4
$4
LREM
$19
list:top:article:id
$2
-1
$6
100032
*4
$4
LREM
$33
list:top:article:by:category:id:3
$2
-1
$6
100032
*4
$7
ZINCRBY
$17
zset:article:read
$3
1.0
$6
100032
*4
$7
ZINCRBY
$28
zset:article:category:read:3
$3
1.0
$6
100032
*4
$4
HSET
$22
hash:article:by:100032
$2
id
$6
100032
*4
$4
HSET
$22
hash:article:by:100032
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100032
$9
articleId
$4
2019
*4
$4
HSET
$22
hash:article:by:100032
$5
title
$70
史上最简单的 MySQL 教程（三十二）「子查询（下）」
*4
$4
HSET
$22
hash:article:by:100032
$10
categoryId
$1
3
*4
$4
HSET
$22
hash:article:by:100032
$8
labelIds
$13
[7,8,9,10,11]
*4
$4
HSET
$22
hash:article:by:100032
$6
digest
$261
子查询子查询：sub query，查询是在某个查询结果之上进行的，一条select语句内部包含了另外一条select语句。行子查询行子查询，返回的结果可以使一行多列或者多行多列。需求：查询学生表中，年...
*4
$4
HSET
$22
hash:article:by:100032
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100032
$7
content
$41
csdn/mysql/17_0_1_0_1504235138.68905.html
*4
$4
HSET
$22
hash:article:by:100032
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100032
$10
readAmount
$1
1
*4
$4
HSET
$22
hash:article:by:100032
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100032
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100032
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100032
$9
topStatus
$1
1
*4
$4
HSET
$22
hash:article:by:100032
$10
topEndTime
$13
1509494400000
*4
$4
HSET
$22
hash:article:by:100032
$10
createTime
$13
1503802800000
*4
$4
HSET
$22
hash:article:by:100032
$11
releaseTime
$13
1503802800000
*4
$4
HSET
$22
hash:article:by:100032
$10
updateTime
$13
1503802800000
*4
$7
ZINCRBY
$17
zset:article:read
$3
1.0
$6
100033
*4
$7
ZINCRBY
$28
zset:article:category:read:2
$3
1.0
$6
100033
*4
$4
HSET
$22
hash:article:by:100033
$2
id
$6
100033
*4
$4
HSET
$22
hash:article:by:100033
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100033
$9
articleId
$4
2273
*4
$4
HSET
$22
hash:article:by:100033
$5
title
$21
设计模式之单例
*4
$4
HSET
$22
hash:article:by:100033
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100033
$8
labelIds
$4
[12]
*4
$4
HSET
$22
hash:article:by:100033
$6
digest
$287
单例模式的意义有些对象我们只需要一个：线程池、缓存、硬件设备等 
如果多个实例会有造成冲突、结果的不一致性等问题 
是否可以用静态变量方式来实现？ 
或者程序员之间协商个全局变量？ 
单例模式：确保一...
*4
$4
HSET
$22
hash:article:by:100033
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100033
$7
content
$40
csdn/java/1_2_1_7_1504264578.775785.html
*4
$4
HSET
$22
hash:article:by:100033
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100033
$10
readAmount
$1
1
*4
$4
HSET
$22
hash:article:by:100033
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100033
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100033
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100033
$9
topStatus
$1
1
*4
$4
HSET
$22
hash:article:by:100033
$10
topEndTime
$13
1509465600000
*4
$4
HSET
$22
hash:article:by:100033
$10
createTime
$13
1497628835000
*4
$4
HSET
$22
hash:article:by:100033
$11
releaseTime
$13
1497628835000
*4
$4
HSET
$22
hash:article:by:100033
$10
updateTime
$13
1497628835000
*4
$7
ZINCRBY
$17
zset:article:read
$3
1.0
$6
100034
*4
$7
ZINCRBY
$28
zset:article:category:read:2
$3
1.0
$6
100034
*4
$4
HSET
$22
hash:article:by:100034
$2
id
$6
100034
*4
$4
HSET
$22
hash:article:by:100034
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100034
$9
articleId
$4
2269
*4
$4
HSET
$22
hash:article:by:100034
$5
title
$30
设计模式之适配器模式
*4
$4
HSET
$22
hash:article:by:100034
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100034
$8
labelIds
$4
[12]
*4
$4
HSET
$22
hash:article:by:100034
$6
digest
$279
现实生活中一些适配器例子例题：用火鸡冒充鸭子 
适配器模式原理： 
适配器模式：将一个类的接口转换成另一种接口.让原本接口不兼容的类可以兼容. 
 
从用户的角度看不到被适配者，是解耦的 
用户调用适...
*4
$4
HSET
$22
hash:article:by:100034
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100034
$7
content
$41
csdn/java/1_2_1_10_1504264574.475593.html
*4
$4
HSET
$22
hash:article:by:100034
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100034
$10
readAmount
$1
1
*4
$4
HSET
$22
hash:article:by:100034
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100034
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100034
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100034
$9
topStatus
$1
1
*4
$4
HSET
$22
hash:article:by:100034
$10
topEndTime
$13
1509465600000
*4
$4
HSET
$22
hash:article:by:100034
$10
createTime
$13
1497729617000
*4
$4
HSET
$22
hash:article:by:100034
$11
releaseTime
$13
1497729617000
*4
$4
HSET
$22
hash:article:by:100034
$10
updateTime
$13
1497729617000
*4
$7
ZINCRBY
$17
zset:article:read
$3
1.0
$6
100035
*4
$7
ZINCRBY
$28
zset:article:category:read:2
$3
1.0
$6
100035
*4
$4
HSET
$22
hash:article:by:100035
$2
id
$6
100035
*4
$4
HSET
$22
hash:article:by:100035
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100035
$9
articleId
$4
2279
*4
$4
HSET
$22
hash:article:by:100035
$5
title
$21
设计模式之策略
*4
$4
HSET
$22
hash:article:by:100035
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100035
$8
labelIds
$4
[12]
*4
$4
HSET
$22
hash:article:by:100035
$6
digest
$249
例题：模拟鸭子 
          各种颜色，各种不同动作，如飞，叫，游泳 
    1）分析项目变化与不变部分，提取变化部分，抽象成接口+实现； 
    2）鸭子哪些功能是会根据新需求变化的？叫...
*4
$4
HSET
$22
hash:article:by:100035
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100035
$7
content
$40
csdn/java/1_2_1_5_1504264583.994671.html
*4
$4
HSET
$22
hash:article:by:100035
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100035
$10
readAmount
$1
1
*4
$4
HSET
$22
hash:article:by:100035
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100035
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100035
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100035
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100035
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100035
$10
createTime
$13
1497600059000
*4
$4
HSET
$22
hash:article:by:100035
$11
releaseTime
$13
1497600059000
*4
$4
HSET
$22
hash:article:by:100035
$10
updateTime
$13
1497600059000
*4
$7
ZINCRBY
$17
zset:article:read
$3
1.0
$6
100036
*4
$7
ZINCRBY
$28
zset:article:category:read:4
$3
1.0
$6
100036
*4
$4
HSET
$22
hash:article:by:100036
$2
id
$6
100036
*4
$4
HSET
$22
hash:article:by:100036
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100036
$9
articleId
$4
2031
*4
$4
HSET
$22
hash:article:by:100036
$5
title
$39
内核源码阅读（二）进程复制
*4
$4
HSET
$22
hash:article:by:100036
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100036
$8
labelIds
$7
[13,14]
*4
$4
HSET
$22
hash:article:by:100036
$6
digest
$239
进程复制
1.三种常见进程复制API:



1）fork()是一个重量级调用，因为它建立了一个父进程的完整副本，然后作为子进程执行。Linux后来采用了写时复制技术对其进行了优化。

...
*4
$4
HSET
$22
hash:article:by:100036
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100036
$7
content
$41
csdn/linux/1_0_1_7_1504264383.654236.html
*4
$4
HSET
$22
hash:article:by:100036
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100036
$10
readAmount
$1
1
*4
$4
HSET
$22
hash:article:by:100036
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100036
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100036
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100036
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100036
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100036
$10
createTime
$13
1502406008000
*4
$4
HSET
$22
hash:article:by:100036
$11
releaseTime
$13
1502406008000
*4
$4
HSET
$22
hash:article:by:100036
$10
updateTime
$13
1502406008000
*4
$7
ZINCRBY
$17
zset:article:read
$3
1.0
$6
100036
*4
$7
ZINCRBY
$28
zset:article:category:read:4
$3
1.0
$6
100036
*4
$4
HSET
$22
hash:article:by:100036
$2
id
$6
100036
*4
$4
HSET
$22
hash:article:by:100036
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100036
$9
articleId
$4
2031
*4
$4
HSET
$22
hash:article:by:100036
$5
title
$39
内核源码阅读（二）进程复制
*4
$4
HSET
$22
hash:article:by:100036
$10
categoryId
$1
4
*4
$4
HSET
$22
hash:article:by:100036
$8
labelIds
$7
[13,14]
*4
$4
HSET
$22
hash:article:by:100036
$6
digest
$239
进程复制
1.三种常见进程复制API:



1）fork()是一个重量级调用，因为它建立了一个父进程的完整副本，然后作为子进程执行。Linux后来采用了写时复制技术对其进行了优化。

...
*4
$4
HSET
$22
hash:article:by:100036
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100036
$7
content
$41
csdn/linux/1_0_1_7_1504264383.654236.html
*4
$4
HSET
$22
hash:article:by:100036
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100036
$10
readAmount
$1
2
*4
$4
HSET
$22
hash:article:by:100036
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100036
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100036
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100036
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100036
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100036
$10
createTime
$13
1502406008000
*4
$4
HSET
$22
hash:article:by:100036
$11
releaseTime
$13
1502406008000
*4
$4
HSET
$22
hash:article:by:100036
$10
updateTime
$13
1502406008000
*2
$6
SELECT
$1
0
*4
$7
ZINCRBY
$17
zset:article:read
$3
1.0
$6
100031
*4
$7
ZINCRBY
$28
zset:article:category:read:3
$3
1.0
$6
100031
*4
$4
HSET
$22
hash:article:by:100031
$2
id
$6
100031
*4
$4
HSET
$22
hash:article:by:100031
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100031
$9
articleId
$4
2020
*4
$4
HSET
$22
hash:article:by:100031
$5
title
$62
MySQL之——表数据文件损坏导致数据库无法启动
*4
$4
HSET
$22
hash:article:by:100031
$10
categoryId
$1
3
*4
$4
HSET
$22
hash:article:by:100031
$8
labelIds
$3
[7]
*4
$4
HSET
$22
hash:article:by:100031
$6
digest
$115
一、问题日志

2017-08-31 14:18:05 4122 [Note] InnoDB: Database was not shutdown normally!
2017-08-31 14:18...
*4
$4
HSET
$22
hash:article:by:100031
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100031
$7
content
$42
csdn/mysql/17_0_1_0_1504235155.096132.html
*4
$4
HSET
$22
hash:article:by:100031
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100031
$10
readAmount
$1
4
*4
$4
HSET
$22
hash:article:by:100031
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100031
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100031
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100031
$9
topStatus
$1
1
*4
$4
HSET
$22
hash:article:by:100031
$10
topEndTime
$13
1509465600000
*4
$4
HSET
$22
hash:article:by:100031
$10
createTime
$13
1504155619000
*4
$4
HSET
$22
hash:article:by:100031
$11
releaseTime
$13
1504155619000
*4
$4
HSET
$22
hash:article:by:100031
$10
updateTime
$13
1504155619000
*4
$7
ZINCRBY
$17
zset:article:read
$3
1.0
$6
100032
*4
$7
ZINCRBY
$28
zset:article:category:read:3
$3
1.0
$6
100032
*4
$4
HSET
$22
hash:article:by:100032
$2
id
$6
100032
*4
$4
HSET
$22
hash:article:by:100032
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100032
$9
articleId
$4
2019
*4
$4
HSET
$22
hash:article:by:100032
$5
title
$70
史上最简单的 MySQL 教程（三十二）「子查询（下）」
*4
$4
HSET
$22
hash:article:by:100032
$10
categoryId
$1
3
*4
$4
HSET
$22
hash:article:by:100032
$8
labelIds
$13
[7,8,9,10,11]
*4
$4
HSET
$22
hash:article:by:100032
$6
digest
$261
子查询子查询：sub query，查询是在某个查询结果之上进行的，一条select语句内部包含了另外一条select语句。行子查询行子查询，返回的结果可以使一行多列或者多行多列。需求：查询学生表中，年...
*4
$4
HSET
$22
hash:article:by:100032
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100032
$7
content
$41
csdn/mysql/17_0_1_0_1504235138.68905.html
*4
$4
HSET
$22
hash:article:by:100032
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100032
$10
readAmount
$1
2
*4
$4
HSET
$22
hash:article:by:100032
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100032
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100032
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100032
$9
topStatus
$1
1
*4
$4
HSET
$22
hash:article:by:100032
$10
topEndTime
$13
1509494400000
*4
$4
HSET
$22
hash:article:by:100032
$10
createTime
$13
1503802800000
*4
$4
HSET
$22
hash:article:by:100032
$11
releaseTime
$13
1503802800000
*4
$4
HSET
$22
hash:article:by:100032
$10
updateTime
$13
1503802800000
*4
$7
ZINCRBY
$17
zset:article:read
$3
1.0
$6
100033
*4
$7
ZINCRBY
$28
zset:article:category:read:2
$3
1.0
$6
100033
*4
$4
HSET
$22
hash:article:by:100033
$2
id
$6
100033
*4
$4
HSET
$22
hash:article:by:100033
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100033
$9
articleId
$4
2273
*4
$4
HSET
$22
hash:article:by:100033
$5
title
$21
设计模式之单例
*4
$4
HSET
$22
hash:article:by:100033
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100033
$8
labelIds
$4
[12]
*4
$4
HSET
$22
hash:article:by:100033
$6
digest
$287
单例模式的意义有些对象我们只需要一个：线程池、缓存、硬件设备等 
如果多个实例会有造成冲突、结果的不一致性等问题 
是否可以用静态变量方式来实现？ 
或者程序员之间协商个全局变量？ 
单例模式：确保一...
*4
$4
HSET
$22
hash:article:by:100033
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100033
$7
content
$40
csdn/java/1_2_1_7_1504264578.775785.html
*4
$4
HSET
$22
hash:article:by:100033
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100033
$10
readAmount
$1
2
*4
$4
HSET
$22
hash:article:by:100033
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100033
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100033
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100033
$9
topStatus
$1
1
*4
$4
HSET
$22
hash:article:by:100033
$10
topEndTime
$13
1509465600000
*4
$4
HSET
$22
hash:article:by:100033
$10
createTime
$13
1497628835000
*4
$4
HSET
$22
hash:article:by:100033
$11
releaseTime
$13
1497628835000
*4
$4
HSET
$22
hash:article:by:100033
$10
updateTime
$13
1497628835000
*4
$7
ZINCRBY
$17
zset:article:read
$3
1.0
$6
100034
*4
$7
ZINCRBY
$28
zset:article:category:read:2
$3
1.0
$6
100034
*4
$4
HSET
$22
hash:article:by:100034
$2
id
$6
100034
*4
$4
HSET
$22
hash:article:by:100034
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100034
$9
articleId
$4
2269
*4
$4
HSET
$22
hash:article:by:100034
$5
title
$30
设计模式之适配器模式
*4
$4
HSET
$22
hash:article:by:100034
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100034
$8
labelIds
$4
[12]
*4
$4
HSET
$22
hash:article:by:100034
$6
digest
$279
现实生活中一些适配器例子例题：用火鸡冒充鸭子 
适配器模式原理： 
适配器模式：将一个类的接口转换成另一种接口.让原本接口不兼容的类可以兼容. 
 
从用户的角度看不到被适配者，是解耦的 
用户调用适...
*4
$4
HSET
$22
hash:article:by:100034
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100034
$7
content
$41
csdn/java/1_2_1_10_1504264574.475593.html
*4
$4
HSET
$22
hash:article:by:100034
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100034
$10
readAmount
$1
2
*4
$4
HSET
$22
hash:article:by:100034
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100034
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100034
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100034
$9
topStatus
$1
1
*4
$4
HSET
$22
hash:article:by:100034
$10
topEndTime
$13
1509465600000
*4
$4
HSET
$22
hash:article:by:100034
$10
createTime
$13
1497729617000
*4
$4
HSET
$22
hash:article:by:100034
$11
releaseTime
$13
1497729617000
*4
$4
HSET
$22
hash:article:by:100034
$10
updateTime
$13
1497729617000
*4
$7
ZINCRBY
$17
zset:article:read
$3
1.0
$6
100035
*4
$7
ZINCRBY
$28
zset:article:category:read:2
$3
1.0
$6
100035
*4
$4
HSET
$22
hash:article:by:100035
$2
id
$6
100035
*4
$4
HSET
$22
hash:article:by:100035
$3
uid
$1
0
*4
$4
HSET
$22
hash:article:by:100035
$9
articleId
$4
2279
*4
$4
HSET
$22
hash:article:by:100035
$5
title
$21
设计模式之策略
*4
$4
HSET
$22
hash:article:by:100035
$10
categoryId
$1
2
*4
$4
HSET
$22
hash:article:by:100035
$8
labelIds
$4
[12]
*4
$4
HSET
$22
hash:article:by:100035
$6
digest
$249
例题：模拟鸭子 
          各种颜色，各种不同动作，如飞，叫，游泳 
    1）分析项目变化与不变部分，提取变化部分，抽象成接口+实现； 
    2）鸭子哪些功能是会根据新需求变化的？叫...
*4
$4
HSET
$22
hash:article:by:100035
$5
cover
$4
null
*4
$4
HSET
$22
hash:article:by:100035
$7
content
$40
csdn/java/1_2_1_5_1504264583.994671.html
*4
$4
HSET
$22
hash:article:by:100035
$10
commentIds
$4
null
*4
$4
HSET
$22
hash:article:by:100035
$10
readAmount
$1
2
*4
$4
HSET
$22
hash:article:by:100035
$12
favourAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100035
$13
commentAmount
$1
0
*4
$4
HSET
$22
hash:article:by:100035
$6
status
$1
1
*4
$4
HSET
$22
hash:article:by:100035
$9
topStatus
$1
0
*4
$4
HSET
$22
hash:article:by:100035
$10
topEndTime
$4
null
*4
$4
HSET
$22
hash:article:by:100035
$10
createTime
$13
1497600059000
*4
$4
HSET
$22
hash:article:by:100035
$11
releaseTime
$13
1497600059000
*4
$4
HSET
$22
hash:article:by:100035
$10
updateTime
$13
1497600059000
